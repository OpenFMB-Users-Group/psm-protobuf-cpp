// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: breakermodule/breakermodule.proto
// Protobuf C++ Version: 6.31.1

#ifndef breakermodule_2fbreakermodule_2eproto_2epb_2eh
#define breakermodule_2fbreakermodule_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6031001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "uml.pb.h"
#include "commonmodule/commonmodule.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_breakermodule_2fbreakermodule_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_breakermodule_2fbreakermodule_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_breakermodule_2fbreakermodule_2eproto;
}  // extern "C"
namespace breakermodule {
class Breaker;
struct BreakerDefaultTypeInternal;
extern BreakerDefaultTypeInternal _Breaker_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull Breaker_class_data_;
class BreakerDiscreteControl;
struct BreakerDiscreteControlDefaultTypeInternal;
extern BreakerDiscreteControlDefaultTypeInternal _BreakerDiscreteControl_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull BreakerDiscreteControl_class_data_;
class BreakerDiscreteControlProfile;
struct BreakerDiscreteControlProfileDefaultTypeInternal;
extern BreakerDiscreteControlProfileDefaultTypeInternal _BreakerDiscreteControlProfile_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull BreakerDiscreteControlProfile_class_data_;
class BreakerDiscreteControlXCBR;
struct BreakerDiscreteControlXCBRDefaultTypeInternal;
extern BreakerDiscreteControlXCBRDefaultTypeInternal _BreakerDiscreteControlXCBR_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull BreakerDiscreteControlXCBR_class_data_;
class BreakerEvent;
struct BreakerEventDefaultTypeInternal;
extern BreakerEventDefaultTypeInternal _BreakerEvent_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull BreakerEvent_class_data_;
class BreakerEventProfile;
struct BreakerEventProfileDefaultTypeInternal;
extern BreakerEventProfileDefaultTypeInternal _BreakerEventProfile_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull BreakerEventProfile_class_data_;
class BreakerReading;
struct BreakerReadingDefaultTypeInternal;
extern BreakerReadingDefaultTypeInternal _BreakerReading_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull BreakerReading_class_data_;
class BreakerReadingProfile;
struct BreakerReadingProfileDefaultTypeInternal;
extern BreakerReadingProfileDefaultTypeInternal _BreakerReadingProfile_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull BreakerReadingProfile_class_data_;
class BreakerStatus;
struct BreakerStatusDefaultTypeInternal;
extern BreakerStatusDefaultTypeInternal _BreakerStatus_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull BreakerStatus_class_data_;
class BreakerStatusProfile;
struct BreakerStatusProfileDefaultTypeInternal;
extern BreakerStatusProfileDefaultTypeInternal _BreakerStatusProfile_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull BreakerStatusProfile_class_data_;
}  // namespace breakermodule
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace breakermodule {

// ===================================================================


// -------------------------------------------------------------------

class Breaker final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:breakermodule.Breaker) */ {
 public:
  inline Breaker() : Breaker(nullptr) {}
  ~Breaker() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Breaker* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Breaker));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Breaker(::google::protobuf::internal::ConstantInitialized);

  inline Breaker(const Breaker& from) : Breaker(nullptr, from) {}
  inline Breaker(Breaker&& from) noexcept
      : Breaker(nullptr, ::std::move(from)) {}
  inline Breaker& operator=(const Breaker& from) {
    CopyFrom(from);
    return *this;
  }
  inline Breaker& operator=(Breaker&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Breaker& default_instance() {
    return *reinterpret_cast<const Breaker*>(
        &_Breaker_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(Breaker& a, Breaker& b) { a.Swap(&b); }
  inline void Swap(Breaker* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Breaker* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Breaker* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Breaker>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Breaker& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Breaker& from) { Breaker::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Breaker* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "breakermodule.Breaker"; }

 protected:
  explicit Breaker(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  Breaker(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Breaker& from);
  Breaker(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, Breaker&& from) noexcept
      : Breaker(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kConductingEquipmentFieldNumber = 1,
  };
  // .commonmodule.ConductingEquipment conductingEquipment = 1 [(.uml.option_parent_message) = true];
  bool has_conductingequipment() const;
  void clear_conductingequipment() ;
  const ::commonmodule::ConductingEquipment& conductingequipment() const;
  [[nodiscard]] ::commonmodule::ConductingEquipment* PROTOBUF_NULLABLE release_conductingequipment();
  ::commonmodule::ConductingEquipment* PROTOBUF_NONNULL mutable_conductingequipment();
  void set_allocated_conductingequipment(::commonmodule::ConductingEquipment* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_conductingequipment(::commonmodule::ConductingEquipment* PROTOBUF_NULLABLE value);
  ::commonmodule::ConductingEquipment* PROTOBUF_NULLABLE unsafe_arena_release_conductingequipment();

  private:
  const ::commonmodule::ConductingEquipment& _internal_conductingequipment() const;
  ::commonmodule::ConductingEquipment* PROTOBUF_NONNULL _internal_mutable_conductingequipment();

  public:
  // @@protoc_insertion_point(class_scope:breakermodule.Breaker)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const Breaker& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::commonmodule::ConductingEquipment* PROTOBUF_NULLABLE conductingequipment_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_breakermodule_2fbreakermodule_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull Breaker_class_data_;
// -------------------------------------------------------------------

class BreakerStatus final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:breakermodule.BreakerStatus) */ {
 public:
  inline BreakerStatus() : BreakerStatus(nullptr) {}
  ~BreakerStatus() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(BreakerStatus* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(BreakerStatus));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BreakerStatus(::google::protobuf::internal::ConstantInitialized);

  inline BreakerStatus(const BreakerStatus& from) : BreakerStatus(nullptr, from) {}
  inline BreakerStatus(BreakerStatus&& from) noexcept
      : BreakerStatus(nullptr, ::std::move(from)) {}
  inline BreakerStatus& operator=(const BreakerStatus& from) {
    CopyFrom(from);
    return *this;
  }
  inline BreakerStatus& operator=(BreakerStatus&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BreakerStatus& default_instance() {
    return *reinterpret_cast<const BreakerStatus*>(
        &_BreakerStatus_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(BreakerStatus& a, BreakerStatus& b) { a.Swap(&b); }
  inline void Swap(BreakerStatus* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BreakerStatus* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BreakerStatus* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<BreakerStatus>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BreakerStatus& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BreakerStatus& from) { BreakerStatus::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(BreakerStatus* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "breakermodule.BreakerStatus"; }

 protected:
  explicit BreakerStatus(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  BreakerStatus(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const BreakerStatus& from);
  BreakerStatus(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, BreakerStatus&& from) noexcept
      : BreakerStatus(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kStatusValueFieldNumber = 1,
    kStatusAndEventXCBRFieldNumber = 2,
  };
  // .commonmodule.StatusValue statusValue = 1 [(.uml.option_parent_message) = true];
  bool has_statusvalue() const;
  void clear_statusvalue() ;
  const ::commonmodule::StatusValue& statusvalue() const;
  [[nodiscard]] ::commonmodule::StatusValue* PROTOBUF_NULLABLE release_statusvalue();
  ::commonmodule::StatusValue* PROTOBUF_NONNULL mutable_statusvalue();
  void set_allocated_statusvalue(::commonmodule::StatusValue* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_statusvalue(::commonmodule::StatusValue* PROTOBUF_NULLABLE value);
  ::commonmodule::StatusValue* PROTOBUF_NULLABLE unsafe_arena_release_statusvalue();

  private:
  const ::commonmodule::StatusValue& _internal_statusvalue() const;
  ::commonmodule::StatusValue* PROTOBUF_NONNULL _internal_mutable_statusvalue();

  public:
  // .commonmodule.StatusAndEventXCBR statusAndEventXCBR = 2;
  bool has_statusandeventxcbr() const;
  void clear_statusandeventxcbr() ;
  const ::commonmodule::StatusAndEventXCBR& statusandeventxcbr() const;
  [[nodiscard]] ::commonmodule::StatusAndEventXCBR* PROTOBUF_NULLABLE release_statusandeventxcbr();
  ::commonmodule::StatusAndEventXCBR* PROTOBUF_NONNULL mutable_statusandeventxcbr();
  void set_allocated_statusandeventxcbr(::commonmodule::StatusAndEventXCBR* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_statusandeventxcbr(::commonmodule::StatusAndEventXCBR* PROTOBUF_NULLABLE value);
  ::commonmodule::StatusAndEventXCBR* PROTOBUF_NULLABLE unsafe_arena_release_statusandeventxcbr();

  private:
  const ::commonmodule::StatusAndEventXCBR& _internal_statusandeventxcbr() const;
  ::commonmodule::StatusAndEventXCBR* PROTOBUF_NONNULL _internal_mutable_statusandeventxcbr();

  public:
  // @@protoc_insertion_point(class_scope:breakermodule.BreakerStatus)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   2, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const BreakerStatus& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::commonmodule::StatusValue* PROTOBUF_NULLABLE statusvalue_;
    ::commonmodule::StatusAndEventXCBR* PROTOBUF_NULLABLE statusandeventxcbr_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_breakermodule_2fbreakermodule_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull BreakerStatus_class_data_;
// -------------------------------------------------------------------

class BreakerReading final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:breakermodule.BreakerReading) */ {
 public:
  inline BreakerReading() : BreakerReading(nullptr) {}
  ~BreakerReading() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(BreakerReading* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(BreakerReading));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BreakerReading(::google::protobuf::internal::ConstantInitialized);

  inline BreakerReading(const BreakerReading& from) : BreakerReading(nullptr, from) {}
  inline BreakerReading(BreakerReading&& from) noexcept
      : BreakerReading(nullptr, ::std::move(from)) {}
  inline BreakerReading& operator=(const BreakerReading& from) {
    CopyFrom(from);
    return *this;
  }
  inline BreakerReading& operator=(BreakerReading&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BreakerReading& default_instance() {
    return *reinterpret_cast<const BreakerReading*>(
        &_BreakerReading_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(BreakerReading& a, BreakerReading& b) { a.Swap(&b); }
  inline void Swap(BreakerReading* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BreakerReading* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BreakerReading* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<BreakerReading>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BreakerReading& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BreakerReading& from) { BreakerReading::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(BreakerReading* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "breakermodule.BreakerReading"; }

 protected:
  explicit BreakerReading(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  BreakerReading(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const BreakerReading& from);
  BreakerReading(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, BreakerReading&& from) noexcept
      : BreakerReading(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kConductingEquipmentTerminalReadingFieldNumber = 1,
    kDiffReadingMMXUFieldNumber = 2,
    kPhaseMMTNFieldNumber = 3,
    kReadingMMTRFieldNumber = 4,
    kReadingMMXUFieldNumber = 5,
    kReadingMMDCFieldNumber = 6,
  };
  // .commonmodule.ConductingEquipmentTerminalReading conductingEquipmentTerminalReading = 1 [(.uml.option_parent_message) = true];
  bool has_conductingequipmentterminalreading() const;
  void clear_conductingequipmentterminalreading() ;
  const ::commonmodule::ConductingEquipmentTerminalReading& conductingequipmentterminalreading() const;
  [[nodiscard]] ::commonmodule::ConductingEquipmentTerminalReading* PROTOBUF_NULLABLE release_conductingequipmentterminalreading();
  ::commonmodule::ConductingEquipmentTerminalReading* PROTOBUF_NONNULL mutable_conductingequipmentterminalreading();
  void set_allocated_conductingequipmentterminalreading(::commonmodule::ConductingEquipmentTerminalReading* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_conductingequipmentterminalreading(::commonmodule::ConductingEquipmentTerminalReading* PROTOBUF_NULLABLE value);
  ::commonmodule::ConductingEquipmentTerminalReading* PROTOBUF_NULLABLE unsafe_arena_release_conductingequipmentterminalreading();

  private:
  const ::commonmodule::ConductingEquipmentTerminalReading& _internal_conductingequipmentterminalreading() const;
  ::commonmodule::ConductingEquipmentTerminalReading* PROTOBUF_NONNULL _internal_mutable_conductingequipmentterminalreading();

  public:
  // .commonmodule.ReadingMMXU diffReadingMMXU = 2;
  bool has_diffreadingmmxu() const;
  void clear_diffreadingmmxu() ;
  const ::commonmodule::ReadingMMXU& diffreadingmmxu() const;
  [[nodiscard]] ::commonmodule::ReadingMMXU* PROTOBUF_NULLABLE release_diffreadingmmxu();
  ::commonmodule::ReadingMMXU* PROTOBUF_NONNULL mutable_diffreadingmmxu();
  void set_allocated_diffreadingmmxu(::commonmodule::ReadingMMXU* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_diffreadingmmxu(::commonmodule::ReadingMMXU* PROTOBUF_NULLABLE value);
  ::commonmodule::ReadingMMXU* PROTOBUF_NULLABLE unsafe_arena_release_diffreadingmmxu();

  private:
  const ::commonmodule::ReadingMMXU& _internal_diffreadingmmxu() const;
  ::commonmodule::ReadingMMXU* PROTOBUF_NONNULL _internal_mutable_diffreadingmmxu();

  public:
  // .commonmodule.PhaseMMTN phaseMMTN = 3;
  bool has_phasemmtn() const;
  void clear_phasemmtn() ;
  const ::commonmodule::PhaseMMTN& phasemmtn() const;
  [[nodiscard]] ::commonmodule::PhaseMMTN* PROTOBUF_NULLABLE release_phasemmtn();
  ::commonmodule::PhaseMMTN* PROTOBUF_NONNULL mutable_phasemmtn();
  void set_allocated_phasemmtn(::commonmodule::PhaseMMTN* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_phasemmtn(::commonmodule::PhaseMMTN* PROTOBUF_NULLABLE value);
  ::commonmodule::PhaseMMTN* PROTOBUF_NULLABLE unsafe_arena_release_phasemmtn();

  private:
  const ::commonmodule::PhaseMMTN& _internal_phasemmtn() const;
  ::commonmodule::PhaseMMTN* PROTOBUF_NONNULL _internal_mutable_phasemmtn();

  public:
  // .commonmodule.ReadingMMTR readingMMTR = 4;
  bool has_readingmmtr() const;
  void clear_readingmmtr() ;
  const ::commonmodule::ReadingMMTR& readingmmtr() const;
  [[nodiscard]] ::commonmodule::ReadingMMTR* PROTOBUF_NULLABLE release_readingmmtr();
  ::commonmodule::ReadingMMTR* PROTOBUF_NONNULL mutable_readingmmtr();
  void set_allocated_readingmmtr(::commonmodule::ReadingMMTR* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_readingmmtr(::commonmodule::ReadingMMTR* PROTOBUF_NULLABLE value);
  ::commonmodule::ReadingMMTR* PROTOBUF_NULLABLE unsafe_arena_release_readingmmtr();

  private:
  const ::commonmodule::ReadingMMTR& _internal_readingmmtr() const;
  ::commonmodule::ReadingMMTR* PROTOBUF_NONNULL _internal_mutable_readingmmtr();

  public:
  // .commonmodule.ReadingMMXU readingMMXU = 5;
  bool has_readingmmxu() const;
  void clear_readingmmxu() ;
  const ::commonmodule::ReadingMMXU& readingmmxu() const;
  [[nodiscard]] ::commonmodule::ReadingMMXU* PROTOBUF_NULLABLE release_readingmmxu();
  ::commonmodule::ReadingMMXU* PROTOBUF_NONNULL mutable_readingmmxu();
  void set_allocated_readingmmxu(::commonmodule::ReadingMMXU* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_readingmmxu(::commonmodule::ReadingMMXU* PROTOBUF_NULLABLE value);
  ::commonmodule::ReadingMMXU* PROTOBUF_NULLABLE unsafe_arena_release_readingmmxu();

  private:
  const ::commonmodule::ReadingMMXU& _internal_readingmmxu() const;
  ::commonmodule::ReadingMMXU* PROTOBUF_NONNULL _internal_mutable_readingmmxu();

  public:
  // .commonmodule.ReadingMMDC readingMMDC = 6;
  bool has_readingmmdc() const;
  void clear_readingmmdc() ;
  const ::commonmodule::ReadingMMDC& readingmmdc() const;
  [[nodiscard]] ::commonmodule::ReadingMMDC* PROTOBUF_NULLABLE release_readingmmdc();
  ::commonmodule::ReadingMMDC* PROTOBUF_NONNULL mutable_readingmmdc();
  void set_allocated_readingmmdc(::commonmodule::ReadingMMDC* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_readingmmdc(::commonmodule::ReadingMMDC* PROTOBUF_NULLABLE value);
  ::commonmodule::ReadingMMDC* PROTOBUF_NULLABLE unsafe_arena_release_readingmmdc();

  private:
  const ::commonmodule::ReadingMMDC& _internal_readingmmdc() const;
  ::commonmodule::ReadingMMDC* PROTOBUF_NONNULL _internal_mutable_readingmmdc();

  public:
  // @@protoc_insertion_point(class_scope:breakermodule.BreakerReading)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 6,
                                   6, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const BreakerReading& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::commonmodule::ConductingEquipmentTerminalReading* PROTOBUF_NULLABLE conductingequipmentterminalreading_;
    ::commonmodule::ReadingMMXU* PROTOBUF_NULLABLE diffreadingmmxu_;
    ::commonmodule::PhaseMMTN* PROTOBUF_NULLABLE phasemmtn_;
    ::commonmodule::ReadingMMTR* PROTOBUF_NULLABLE readingmmtr_;
    ::commonmodule::ReadingMMXU* PROTOBUF_NULLABLE readingmmxu_;
    ::commonmodule::ReadingMMDC* PROTOBUF_NULLABLE readingmmdc_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_breakermodule_2fbreakermodule_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull BreakerReading_class_data_;
// -------------------------------------------------------------------

class BreakerEvent final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:breakermodule.BreakerEvent) */ {
 public:
  inline BreakerEvent() : BreakerEvent(nullptr) {}
  ~BreakerEvent() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(BreakerEvent* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(BreakerEvent));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BreakerEvent(::google::protobuf::internal::ConstantInitialized);

  inline BreakerEvent(const BreakerEvent& from) : BreakerEvent(nullptr, from) {}
  inline BreakerEvent(BreakerEvent&& from) noexcept
      : BreakerEvent(nullptr, ::std::move(from)) {}
  inline BreakerEvent& operator=(const BreakerEvent& from) {
    CopyFrom(from);
    return *this;
  }
  inline BreakerEvent& operator=(BreakerEvent&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BreakerEvent& default_instance() {
    return *reinterpret_cast<const BreakerEvent*>(
        &_BreakerEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(BreakerEvent& a, BreakerEvent& b) { a.Swap(&b); }
  inline void Swap(BreakerEvent* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BreakerEvent* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BreakerEvent* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<BreakerEvent>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BreakerEvent& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BreakerEvent& from) { BreakerEvent::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(BreakerEvent* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "breakermodule.BreakerEvent"; }

 protected:
  explicit BreakerEvent(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  BreakerEvent(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const BreakerEvent& from);
  BreakerEvent(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, BreakerEvent&& from) noexcept
      : BreakerEvent(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEventValueFieldNumber = 1,
    kStatusAndEventXCBRFieldNumber = 2,
  };
  // .commonmodule.EventValue eventValue = 1 [(.uml.option_parent_message) = true];
  bool has_eventvalue() const;
  void clear_eventvalue() ;
  const ::commonmodule::EventValue& eventvalue() const;
  [[nodiscard]] ::commonmodule::EventValue* PROTOBUF_NULLABLE release_eventvalue();
  ::commonmodule::EventValue* PROTOBUF_NONNULL mutable_eventvalue();
  void set_allocated_eventvalue(::commonmodule::EventValue* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_eventvalue(::commonmodule::EventValue* PROTOBUF_NULLABLE value);
  ::commonmodule::EventValue* PROTOBUF_NULLABLE unsafe_arena_release_eventvalue();

  private:
  const ::commonmodule::EventValue& _internal_eventvalue() const;
  ::commonmodule::EventValue* PROTOBUF_NONNULL _internal_mutable_eventvalue();

  public:
  // .commonmodule.StatusAndEventXCBR statusAndEventXCBR = 2;
  bool has_statusandeventxcbr() const;
  void clear_statusandeventxcbr() ;
  const ::commonmodule::StatusAndEventXCBR& statusandeventxcbr() const;
  [[nodiscard]] ::commonmodule::StatusAndEventXCBR* PROTOBUF_NULLABLE release_statusandeventxcbr();
  ::commonmodule::StatusAndEventXCBR* PROTOBUF_NONNULL mutable_statusandeventxcbr();
  void set_allocated_statusandeventxcbr(::commonmodule::StatusAndEventXCBR* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_statusandeventxcbr(::commonmodule::StatusAndEventXCBR* PROTOBUF_NULLABLE value);
  ::commonmodule::StatusAndEventXCBR* PROTOBUF_NULLABLE unsafe_arena_release_statusandeventxcbr();

  private:
  const ::commonmodule::StatusAndEventXCBR& _internal_statusandeventxcbr() const;
  ::commonmodule::StatusAndEventXCBR* PROTOBUF_NONNULL _internal_mutable_statusandeventxcbr();

  public:
  // @@protoc_insertion_point(class_scope:breakermodule.BreakerEvent)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   2, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const BreakerEvent& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::commonmodule::EventValue* PROTOBUF_NULLABLE eventvalue_;
    ::commonmodule::StatusAndEventXCBR* PROTOBUF_NULLABLE statusandeventxcbr_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_breakermodule_2fbreakermodule_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull BreakerEvent_class_data_;
// -------------------------------------------------------------------

class BreakerDiscreteControlXCBR final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:breakermodule.BreakerDiscreteControlXCBR) */ {
 public:
  inline BreakerDiscreteControlXCBR() : BreakerDiscreteControlXCBR(nullptr) {}
  ~BreakerDiscreteControlXCBR() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(BreakerDiscreteControlXCBR* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(BreakerDiscreteControlXCBR));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BreakerDiscreteControlXCBR(::google::protobuf::internal::ConstantInitialized);

  inline BreakerDiscreteControlXCBR(const BreakerDiscreteControlXCBR& from) : BreakerDiscreteControlXCBR(nullptr, from) {}
  inline BreakerDiscreteControlXCBR(BreakerDiscreteControlXCBR&& from) noexcept
      : BreakerDiscreteControlXCBR(nullptr, ::std::move(from)) {}
  inline BreakerDiscreteControlXCBR& operator=(const BreakerDiscreteControlXCBR& from) {
    CopyFrom(from);
    return *this;
  }
  inline BreakerDiscreteControlXCBR& operator=(BreakerDiscreteControlXCBR&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BreakerDiscreteControlXCBR& default_instance() {
    return *reinterpret_cast<const BreakerDiscreteControlXCBR*>(
        &_BreakerDiscreteControlXCBR_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(BreakerDiscreteControlXCBR& a, BreakerDiscreteControlXCBR& b) { a.Swap(&b); }
  inline void Swap(BreakerDiscreteControlXCBR* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BreakerDiscreteControlXCBR* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BreakerDiscreteControlXCBR* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<BreakerDiscreteControlXCBR>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BreakerDiscreteControlXCBR& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BreakerDiscreteControlXCBR& from) { BreakerDiscreteControlXCBR::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(BreakerDiscreteControlXCBR* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "breakermodule.BreakerDiscreteControlXCBR"; }

 protected:
  explicit BreakerDiscreteControlXCBR(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  BreakerDiscreteControlXCBR(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const BreakerDiscreteControlXCBR& from);
  BreakerDiscreteControlXCBR(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, BreakerDiscreteControlXCBR&& from) noexcept
      : BreakerDiscreteControlXCBR(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDiscreteControlXCBRFieldNumber = 1,
  };
  // .commonmodule.DiscreteControlXCBR discreteControlXCBR = 1 [(.uml.option_parent_message) = true];
  bool has_discretecontrolxcbr() const;
  void clear_discretecontrolxcbr() ;
  const ::commonmodule::DiscreteControlXCBR& discretecontrolxcbr() const;
  [[nodiscard]] ::commonmodule::DiscreteControlXCBR* PROTOBUF_NULLABLE release_discretecontrolxcbr();
  ::commonmodule::DiscreteControlXCBR* PROTOBUF_NONNULL mutable_discretecontrolxcbr();
  void set_allocated_discretecontrolxcbr(::commonmodule::DiscreteControlXCBR* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_discretecontrolxcbr(::commonmodule::DiscreteControlXCBR* PROTOBUF_NULLABLE value);
  ::commonmodule::DiscreteControlXCBR* PROTOBUF_NULLABLE unsafe_arena_release_discretecontrolxcbr();

  private:
  const ::commonmodule::DiscreteControlXCBR& _internal_discretecontrolxcbr() const;
  ::commonmodule::DiscreteControlXCBR* PROTOBUF_NONNULL _internal_mutable_discretecontrolxcbr();

  public:
  // @@protoc_insertion_point(class_scope:breakermodule.BreakerDiscreteControlXCBR)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const BreakerDiscreteControlXCBR& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::commonmodule::DiscreteControlXCBR* PROTOBUF_NULLABLE discretecontrolxcbr_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_breakermodule_2fbreakermodule_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull BreakerDiscreteControlXCBR_class_data_;
// -------------------------------------------------------------------

class BreakerStatusProfile final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:breakermodule.BreakerStatusProfile) */ {
 public:
  inline BreakerStatusProfile() : BreakerStatusProfile(nullptr) {}
  ~BreakerStatusProfile() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(BreakerStatusProfile* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(BreakerStatusProfile));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BreakerStatusProfile(::google::protobuf::internal::ConstantInitialized);

  inline BreakerStatusProfile(const BreakerStatusProfile& from) : BreakerStatusProfile(nullptr, from) {}
  inline BreakerStatusProfile(BreakerStatusProfile&& from) noexcept
      : BreakerStatusProfile(nullptr, ::std::move(from)) {}
  inline BreakerStatusProfile& operator=(const BreakerStatusProfile& from) {
    CopyFrom(from);
    return *this;
  }
  inline BreakerStatusProfile& operator=(BreakerStatusProfile&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BreakerStatusProfile& default_instance() {
    return *reinterpret_cast<const BreakerStatusProfile*>(
        &_BreakerStatusProfile_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(BreakerStatusProfile& a, BreakerStatusProfile& b) { a.Swap(&b); }
  inline void Swap(BreakerStatusProfile* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BreakerStatusProfile* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BreakerStatusProfile* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<BreakerStatusProfile>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BreakerStatusProfile& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BreakerStatusProfile& from) { BreakerStatusProfile::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(BreakerStatusProfile* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "breakermodule.BreakerStatusProfile"; }

 protected:
  explicit BreakerStatusProfile(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  BreakerStatusProfile(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const BreakerStatusProfile& from);
  BreakerStatusProfile(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, BreakerStatusProfile&& from) noexcept
      : BreakerStatusProfile(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kStatusMessageInfoFieldNumber = 1,
    kBreakerFieldNumber = 2,
    kBreakerStatusFieldNumber = 3,
  };
  // .commonmodule.StatusMessageInfo statusMessageInfo = 1 [(.uml.option_parent_message) = true];
  bool has_statusmessageinfo() const;
  void clear_statusmessageinfo() ;
  const ::commonmodule::StatusMessageInfo& statusmessageinfo() const;
  [[nodiscard]] ::commonmodule::StatusMessageInfo* PROTOBUF_NULLABLE release_statusmessageinfo();
  ::commonmodule::StatusMessageInfo* PROTOBUF_NONNULL mutable_statusmessageinfo();
  void set_allocated_statusmessageinfo(::commonmodule::StatusMessageInfo* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_statusmessageinfo(::commonmodule::StatusMessageInfo* PROTOBUF_NULLABLE value);
  ::commonmodule::StatusMessageInfo* PROTOBUF_NULLABLE unsafe_arena_release_statusmessageinfo();

  private:
  const ::commonmodule::StatusMessageInfo& _internal_statusmessageinfo() const;
  ::commonmodule::StatusMessageInfo* PROTOBUF_NONNULL _internal_mutable_statusmessageinfo();

  public:
  // .breakermodule.Breaker breaker = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  bool has_breaker() const;
  void clear_breaker() ;
  const ::breakermodule::Breaker& breaker() const;
  [[nodiscard]] ::breakermodule::Breaker* PROTOBUF_NULLABLE release_breaker();
  ::breakermodule::Breaker* PROTOBUF_NONNULL mutable_breaker();
  void set_allocated_breaker(::breakermodule::Breaker* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_breaker(::breakermodule::Breaker* PROTOBUF_NULLABLE value);
  ::breakermodule::Breaker* PROTOBUF_NULLABLE unsafe_arena_release_breaker();

  private:
  const ::breakermodule::Breaker& _internal_breaker() const;
  ::breakermodule::Breaker* PROTOBUF_NONNULL _internal_mutable_breaker();

  public:
  // .breakermodule.BreakerStatus breakerStatus = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  bool has_breakerstatus() const;
  void clear_breakerstatus() ;
  const ::breakermodule::BreakerStatus& breakerstatus() const;
  [[nodiscard]] ::breakermodule::BreakerStatus* PROTOBUF_NULLABLE release_breakerstatus();
  ::breakermodule::BreakerStatus* PROTOBUF_NONNULL mutable_breakerstatus();
  void set_allocated_breakerstatus(::breakermodule::BreakerStatus* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_breakerstatus(::breakermodule::BreakerStatus* PROTOBUF_NULLABLE value);
  ::breakermodule::BreakerStatus* PROTOBUF_NULLABLE unsafe_arena_release_breakerstatus();

  private:
  const ::breakermodule::BreakerStatus& _internal_breakerstatus() const;
  ::breakermodule::BreakerStatus* PROTOBUF_NONNULL _internal_mutable_breakerstatus();

  public:
  // @@protoc_insertion_point(class_scope:breakermodule.BreakerStatusProfile)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   3, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const BreakerStatusProfile& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::commonmodule::StatusMessageInfo* PROTOBUF_NULLABLE statusmessageinfo_;
    ::breakermodule::Breaker* PROTOBUF_NULLABLE breaker_;
    ::breakermodule::BreakerStatus* PROTOBUF_NULLABLE breakerstatus_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_breakermodule_2fbreakermodule_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull BreakerStatusProfile_class_data_;
// -------------------------------------------------------------------

class BreakerReadingProfile final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:breakermodule.BreakerReadingProfile) */ {
 public:
  inline BreakerReadingProfile() : BreakerReadingProfile(nullptr) {}
  ~BreakerReadingProfile() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(BreakerReadingProfile* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(BreakerReadingProfile));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BreakerReadingProfile(::google::protobuf::internal::ConstantInitialized);

  inline BreakerReadingProfile(const BreakerReadingProfile& from) : BreakerReadingProfile(nullptr, from) {}
  inline BreakerReadingProfile(BreakerReadingProfile&& from) noexcept
      : BreakerReadingProfile(nullptr, ::std::move(from)) {}
  inline BreakerReadingProfile& operator=(const BreakerReadingProfile& from) {
    CopyFrom(from);
    return *this;
  }
  inline BreakerReadingProfile& operator=(BreakerReadingProfile&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BreakerReadingProfile& default_instance() {
    return *reinterpret_cast<const BreakerReadingProfile*>(
        &_BreakerReadingProfile_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(BreakerReadingProfile& a, BreakerReadingProfile& b) { a.Swap(&b); }
  inline void Swap(BreakerReadingProfile* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BreakerReadingProfile* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BreakerReadingProfile* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<BreakerReadingProfile>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BreakerReadingProfile& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BreakerReadingProfile& from) { BreakerReadingProfile::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(BreakerReadingProfile* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "breakermodule.BreakerReadingProfile"; }

 protected:
  explicit BreakerReadingProfile(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  BreakerReadingProfile(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const BreakerReadingProfile& from);
  BreakerReadingProfile(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, BreakerReadingProfile&& from) noexcept
      : BreakerReadingProfile(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBreakerReadingFieldNumber = 3,
    kReadingMessageInfoFieldNumber = 1,
    kBreakerFieldNumber = 2,
  };
  // repeated .breakermodule.BreakerReading breakerReading = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1, (.uml.option_multiplicity_max) = 2];
  int breakerreading_size() const;
  private:
  int _internal_breakerreading_size() const;

  public:
  void clear_breakerreading() ;
  ::breakermodule::BreakerReading* PROTOBUF_NONNULL mutable_breakerreading(int index);
  ::google::protobuf::RepeatedPtrField<::breakermodule::BreakerReading>* PROTOBUF_NONNULL mutable_breakerreading();

  private:
  const ::google::protobuf::RepeatedPtrField<::breakermodule::BreakerReading>& _internal_breakerreading() const;
  ::google::protobuf::RepeatedPtrField<::breakermodule::BreakerReading>* PROTOBUF_NONNULL _internal_mutable_breakerreading();
  public:
  const ::breakermodule::BreakerReading& breakerreading(int index) const;
  ::breakermodule::BreakerReading* PROTOBUF_NONNULL add_breakerreading();
  const ::google::protobuf::RepeatedPtrField<::breakermodule::BreakerReading>& breakerreading() const;
  // .commonmodule.ReadingMessageInfo readingMessageInfo = 1 [(.uml.option_parent_message) = true];
  bool has_readingmessageinfo() const;
  void clear_readingmessageinfo() ;
  const ::commonmodule::ReadingMessageInfo& readingmessageinfo() const;
  [[nodiscard]] ::commonmodule::ReadingMessageInfo* PROTOBUF_NULLABLE release_readingmessageinfo();
  ::commonmodule::ReadingMessageInfo* PROTOBUF_NONNULL mutable_readingmessageinfo();
  void set_allocated_readingmessageinfo(::commonmodule::ReadingMessageInfo* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_readingmessageinfo(::commonmodule::ReadingMessageInfo* PROTOBUF_NULLABLE value);
  ::commonmodule::ReadingMessageInfo* PROTOBUF_NULLABLE unsafe_arena_release_readingmessageinfo();

  private:
  const ::commonmodule::ReadingMessageInfo& _internal_readingmessageinfo() const;
  ::commonmodule::ReadingMessageInfo* PROTOBUF_NONNULL _internal_mutable_readingmessageinfo();

  public:
  // .breakermodule.Breaker breaker = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  bool has_breaker() const;
  void clear_breaker() ;
  const ::breakermodule::Breaker& breaker() const;
  [[nodiscard]] ::breakermodule::Breaker* PROTOBUF_NULLABLE release_breaker();
  ::breakermodule::Breaker* PROTOBUF_NONNULL mutable_breaker();
  void set_allocated_breaker(::breakermodule::Breaker* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_breaker(::breakermodule::Breaker* PROTOBUF_NULLABLE value);
  ::breakermodule::Breaker* PROTOBUF_NULLABLE unsafe_arena_release_breaker();

  private:
  const ::breakermodule::Breaker& _internal_breaker() const;
  ::breakermodule::Breaker* PROTOBUF_NONNULL _internal_mutable_breaker();

  public:
  // @@protoc_insertion_point(class_scope:breakermodule.BreakerReadingProfile)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   3, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const BreakerReadingProfile& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::breakermodule::BreakerReading > breakerreading_;
    ::commonmodule::ReadingMessageInfo* PROTOBUF_NULLABLE readingmessageinfo_;
    ::breakermodule::Breaker* PROTOBUF_NULLABLE breaker_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_breakermodule_2fbreakermodule_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull BreakerReadingProfile_class_data_;
// -------------------------------------------------------------------

class BreakerEventProfile final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:breakermodule.BreakerEventProfile) */ {
 public:
  inline BreakerEventProfile() : BreakerEventProfile(nullptr) {}
  ~BreakerEventProfile() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(BreakerEventProfile* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(BreakerEventProfile));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BreakerEventProfile(::google::protobuf::internal::ConstantInitialized);

  inline BreakerEventProfile(const BreakerEventProfile& from) : BreakerEventProfile(nullptr, from) {}
  inline BreakerEventProfile(BreakerEventProfile&& from) noexcept
      : BreakerEventProfile(nullptr, ::std::move(from)) {}
  inline BreakerEventProfile& operator=(const BreakerEventProfile& from) {
    CopyFrom(from);
    return *this;
  }
  inline BreakerEventProfile& operator=(BreakerEventProfile&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BreakerEventProfile& default_instance() {
    return *reinterpret_cast<const BreakerEventProfile*>(
        &_BreakerEventProfile_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(BreakerEventProfile& a, BreakerEventProfile& b) { a.Swap(&b); }
  inline void Swap(BreakerEventProfile* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BreakerEventProfile* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BreakerEventProfile* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<BreakerEventProfile>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BreakerEventProfile& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BreakerEventProfile& from) { BreakerEventProfile::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(BreakerEventProfile* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "breakermodule.BreakerEventProfile"; }

 protected:
  explicit BreakerEventProfile(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  BreakerEventProfile(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const BreakerEventProfile& from);
  BreakerEventProfile(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, BreakerEventProfile&& from) noexcept
      : BreakerEventProfile(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEventMessageInfoFieldNumber = 1,
    kBreakerFieldNumber = 2,
    kBreakerEventFieldNumber = 3,
  };
  // .commonmodule.EventMessageInfo eventMessageInfo = 1 [(.uml.option_parent_message) = true];
  bool has_eventmessageinfo() const;
  void clear_eventmessageinfo() ;
  const ::commonmodule::EventMessageInfo& eventmessageinfo() const;
  [[nodiscard]] ::commonmodule::EventMessageInfo* PROTOBUF_NULLABLE release_eventmessageinfo();
  ::commonmodule::EventMessageInfo* PROTOBUF_NONNULL mutable_eventmessageinfo();
  void set_allocated_eventmessageinfo(::commonmodule::EventMessageInfo* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_eventmessageinfo(::commonmodule::EventMessageInfo* PROTOBUF_NULLABLE value);
  ::commonmodule::EventMessageInfo* PROTOBUF_NULLABLE unsafe_arena_release_eventmessageinfo();

  private:
  const ::commonmodule::EventMessageInfo& _internal_eventmessageinfo() const;
  ::commonmodule::EventMessageInfo* PROTOBUF_NONNULL _internal_mutable_eventmessageinfo();

  public:
  // .breakermodule.Breaker breaker = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  bool has_breaker() const;
  void clear_breaker() ;
  const ::breakermodule::Breaker& breaker() const;
  [[nodiscard]] ::breakermodule::Breaker* PROTOBUF_NULLABLE release_breaker();
  ::breakermodule::Breaker* PROTOBUF_NONNULL mutable_breaker();
  void set_allocated_breaker(::breakermodule::Breaker* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_breaker(::breakermodule::Breaker* PROTOBUF_NULLABLE value);
  ::breakermodule::Breaker* PROTOBUF_NULLABLE unsafe_arena_release_breaker();

  private:
  const ::breakermodule::Breaker& _internal_breaker() const;
  ::breakermodule::Breaker* PROTOBUF_NONNULL _internal_mutable_breaker();

  public:
  // .breakermodule.BreakerEvent breakerEvent = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  bool has_breakerevent() const;
  void clear_breakerevent() ;
  const ::breakermodule::BreakerEvent& breakerevent() const;
  [[nodiscard]] ::breakermodule::BreakerEvent* PROTOBUF_NULLABLE release_breakerevent();
  ::breakermodule::BreakerEvent* PROTOBUF_NONNULL mutable_breakerevent();
  void set_allocated_breakerevent(::breakermodule::BreakerEvent* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_breakerevent(::breakermodule::BreakerEvent* PROTOBUF_NULLABLE value);
  ::breakermodule::BreakerEvent* PROTOBUF_NULLABLE unsafe_arena_release_breakerevent();

  private:
  const ::breakermodule::BreakerEvent& _internal_breakerevent() const;
  ::breakermodule::BreakerEvent* PROTOBUF_NONNULL _internal_mutable_breakerevent();

  public:
  // @@protoc_insertion_point(class_scope:breakermodule.BreakerEventProfile)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   3, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const BreakerEventProfile& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::commonmodule::EventMessageInfo* PROTOBUF_NULLABLE eventmessageinfo_;
    ::breakermodule::Breaker* PROTOBUF_NULLABLE breaker_;
    ::breakermodule::BreakerEvent* PROTOBUF_NULLABLE breakerevent_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_breakermodule_2fbreakermodule_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull BreakerEventProfile_class_data_;
// -------------------------------------------------------------------

class BreakerDiscreteControl final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:breakermodule.BreakerDiscreteControl) */ {
 public:
  inline BreakerDiscreteControl() : BreakerDiscreteControl(nullptr) {}
  ~BreakerDiscreteControl() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(BreakerDiscreteControl* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(BreakerDiscreteControl));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BreakerDiscreteControl(::google::protobuf::internal::ConstantInitialized);

  inline BreakerDiscreteControl(const BreakerDiscreteControl& from) : BreakerDiscreteControl(nullptr, from) {}
  inline BreakerDiscreteControl(BreakerDiscreteControl&& from) noexcept
      : BreakerDiscreteControl(nullptr, ::std::move(from)) {}
  inline BreakerDiscreteControl& operator=(const BreakerDiscreteControl& from) {
    CopyFrom(from);
    return *this;
  }
  inline BreakerDiscreteControl& operator=(BreakerDiscreteControl&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BreakerDiscreteControl& default_instance() {
    return *reinterpret_cast<const BreakerDiscreteControl*>(
        &_BreakerDiscreteControl_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(BreakerDiscreteControl& a, BreakerDiscreteControl& b) { a.Swap(&b); }
  inline void Swap(BreakerDiscreteControl* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BreakerDiscreteControl* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BreakerDiscreteControl* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<BreakerDiscreteControl>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BreakerDiscreteControl& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BreakerDiscreteControl& from) { BreakerDiscreteControl::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(BreakerDiscreteControl* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "breakermodule.BreakerDiscreteControl"; }

 protected:
  explicit BreakerDiscreteControl(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  BreakerDiscreteControl(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const BreakerDiscreteControl& from);
  BreakerDiscreteControl(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, BreakerDiscreteControl&& from) noexcept
      : BreakerDiscreteControl(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kControlValueFieldNumber = 1,
    kCheckFieldNumber = 2,
    kBreakerDiscreteControlXCBRFieldNumber = 3,
  };
  // .commonmodule.ControlValue controlValue = 1 [(.uml.option_parent_message) = true];
  bool has_controlvalue() const;
  void clear_controlvalue() ;
  const ::commonmodule::ControlValue& controlvalue() const;
  [[nodiscard]] ::commonmodule::ControlValue* PROTOBUF_NULLABLE release_controlvalue();
  ::commonmodule::ControlValue* PROTOBUF_NONNULL mutable_controlvalue();
  void set_allocated_controlvalue(::commonmodule::ControlValue* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_controlvalue(::commonmodule::ControlValue* PROTOBUF_NULLABLE value);
  ::commonmodule::ControlValue* PROTOBUF_NULLABLE unsafe_arena_release_controlvalue();

  private:
  const ::commonmodule::ControlValue& _internal_controlvalue() const;
  ::commonmodule::ControlValue* PROTOBUF_NONNULL _internal_mutable_controlvalue();

  public:
  // .commonmodule.CheckConditions check = 2;
  bool has_check() const;
  void clear_check() ;
  const ::commonmodule::CheckConditions& check() const;
  [[nodiscard]] ::commonmodule::CheckConditions* PROTOBUF_NULLABLE release_check();
  ::commonmodule::CheckConditions* PROTOBUF_NONNULL mutable_check();
  void set_allocated_check(::commonmodule::CheckConditions* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_check(::commonmodule::CheckConditions* PROTOBUF_NULLABLE value);
  ::commonmodule::CheckConditions* PROTOBUF_NULLABLE unsafe_arena_release_check();

  private:
  const ::commonmodule::CheckConditions& _internal_check() const;
  ::commonmodule::CheckConditions* PROTOBUF_NONNULL _internal_mutable_check();

  public:
  // .breakermodule.BreakerDiscreteControlXCBR breakerDiscreteControlXCBR = 3;
  bool has_breakerdiscretecontrolxcbr() const;
  void clear_breakerdiscretecontrolxcbr() ;
  const ::breakermodule::BreakerDiscreteControlXCBR& breakerdiscretecontrolxcbr() const;
  [[nodiscard]] ::breakermodule::BreakerDiscreteControlXCBR* PROTOBUF_NULLABLE release_breakerdiscretecontrolxcbr();
  ::breakermodule::BreakerDiscreteControlXCBR* PROTOBUF_NONNULL mutable_breakerdiscretecontrolxcbr();
  void set_allocated_breakerdiscretecontrolxcbr(::breakermodule::BreakerDiscreteControlXCBR* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_breakerdiscretecontrolxcbr(::breakermodule::BreakerDiscreteControlXCBR* PROTOBUF_NULLABLE value);
  ::breakermodule::BreakerDiscreteControlXCBR* PROTOBUF_NULLABLE unsafe_arena_release_breakerdiscretecontrolxcbr();

  private:
  const ::breakermodule::BreakerDiscreteControlXCBR& _internal_breakerdiscretecontrolxcbr() const;
  ::breakermodule::BreakerDiscreteControlXCBR* PROTOBUF_NONNULL _internal_mutable_breakerdiscretecontrolxcbr();

  public:
  // @@protoc_insertion_point(class_scope:breakermodule.BreakerDiscreteControl)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   3, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const BreakerDiscreteControl& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::commonmodule::ControlValue* PROTOBUF_NULLABLE controlvalue_;
    ::commonmodule::CheckConditions* PROTOBUF_NULLABLE check_;
    ::breakermodule::BreakerDiscreteControlXCBR* PROTOBUF_NULLABLE breakerdiscretecontrolxcbr_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_breakermodule_2fbreakermodule_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull BreakerDiscreteControl_class_data_;
// -------------------------------------------------------------------

class BreakerDiscreteControlProfile final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:breakermodule.BreakerDiscreteControlProfile) */ {
 public:
  inline BreakerDiscreteControlProfile() : BreakerDiscreteControlProfile(nullptr) {}
  ~BreakerDiscreteControlProfile() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(BreakerDiscreteControlProfile* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(BreakerDiscreteControlProfile));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BreakerDiscreteControlProfile(::google::protobuf::internal::ConstantInitialized);

  inline BreakerDiscreteControlProfile(const BreakerDiscreteControlProfile& from) : BreakerDiscreteControlProfile(nullptr, from) {}
  inline BreakerDiscreteControlProfile(BreakerDiscreteControlProfile&& from) noexcept
      : BreakerDiscreteControlProfile(nullptr, ::std::move(from)) {}
  inline BreakerDiscreteControlProfile& operator=(const BreakerDiscreteControlProfile& from) {
    CopyFrom(from);
    return *this;
  }
  inline BreakerDiscreteControlProfile& operator=(BreakerDiscreteControlProfile&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BreakerDiscreteControlProfile& default_instance() {
    return *reinterpret_cast<const BreakerDiscreteControlProfile*>(
        &_BreakerDiscreteControlProfile_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(BreakerDiscreteControlProfile& a, BreakerDiscreteControlProfile& b) { a.Swap(&b); }
  inline void Swap(BreakerDiscreteControlProfile* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BreakerDiscreteControlProfile* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BreakerDiscreteControlProfile* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<BreakerDiscreteControlProfile>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BreakerDiscreteControlProfile& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BreakerDiscreteControlProfile& from) { BreakerDiscreteControlProfile::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(BreakerDiscreteControlProfile* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "breakermodule.BreakerDiscreteControlProfile"; }

 protected:
  explicit BreakerDiscreteControlProfile(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  BreakerDiscreteControlProfile(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const BreakerDiscreteControlProfile& from);
  BreakerDiscreteControlProfile(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, BreakerDiscreteControlProfile&& from) noexcept
      : BreakerDiscreteControlProfile(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kControlMessageInfoFieldNumber = 1,
    kBreakerFieldNumber = 2,
    kBreakerDiscreteControlFieldNumber = 3,
  };
  // .commonmodule.ControlMessageInfo controlMessageInfo = 1 [(.uml.option_parent_message) = true];
  bool has_controlmessageinfo() const;
  void clear_controlmessageinfo() ;
  const ::commonmodule::ControlMessageInfo& controlmessageinfo() const;
  [[nodiscard]] ::commonmodule::ControlMessageInfo* PROTOBUF_NULLABLE release_controlmessageinfo();
  ::commonmodule::ControlMessageInfo* PROTOBUF_NONNULL mutable_controlmessageinfo();
  void set_allocated_controlmessageinfo(::commonmodule::ControlMessageInfo* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_controlmessageinfo(::commonmodule::ControlMessageInfo* PROTOBUF_NULLABLE value);
  ::commonmodule::ControlMessageInfo* PROTOBUF_NULLABLE unsafe_arena_release_controlmessageinfo();

  private:
  const ::commonmodule::ControlMessageInfo& _internal_controlmessageinfo() const;
  ::commonmodule::ControlMessageInfo* PROTOBUF_NONNULL _internal_mutable_controlmessageinfo();

  public:
  // .breakermodule.Breaker breaker = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  bool has_breaker() const;
  void clear_breaker() ;
  const ::breakermodule::Breaker& breaker() const;
  [[nodiscard]] ::breakermodule::Breaker* PROTOBUF_NULLABLE release_breaker();
  ::breakermodule::Breaker* PROTOBUF_NONNULL mutable_breaker();
  void set_allocated_breaker(::breakermodule::Breaker* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_breaker(::breakermodule::Breaker* PROTOBUF_NULLABLE value);
  ::breakermodule::Breaker* PROTOBUF_NULLABLE unsafe_arena_release_breaker();

  private:
  const ::breakermodule::Breaker& _internal_breaker() const;
  ::breakermodule::Breaker* PROTOBUF_NONNULL _internal_mutable_breaker();

  public:
  // .breakermodule.BreakerDiscreteControl breakerDiscreteControl = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  bool has_breakerdiscretecontrol() const;
  void clear_breakerdiscretecontrol() ;
  const ::breakermodule::BreakerDiscreteControl& breakerdiscretecontrol() const;
  [[nodiscard]] ::breakermodule::BreakerDiscreteControl* PROTOBUF_NULLABLE release_breakerdiscretecontrol();
  ::breakermodule::BreakerDiscreteControl* PROTOBUF_NONNULL mutable_breakerdiscretecontrol();
  void set_allocated_breakerdiscretecontrol(::breakermodule::BreakerDiscreteControl* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_breakerdiscretecontrol(::breakermodule::BreakerDiscreteControl* PROTOBUF_NULLABLE value);
  ::breakermodule::BreakerDiscreteControl* PROTOBUF_NULLABLE unsafe_arena_release_breakerdiscretecontrol();

  private:
  const ::breakermodule::BreakerDiscreteControl& _internal_breakerdiscretecontrol() const;
  ::breakermodule::BreakerDiscreteControl* PROTOBUF_NONNULL _internal_mutable_breakerdiscretecontrol();

  public:
  // @@protoc_insertion_point(class_scope:breakermodule.BreakerDiscreteControlProfile)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   3, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const BreakerDiscreteControlProfile& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::commonmodule::ControlMessageInfo* PROTOBUF_NULLABLE controlmessageinfo_;
    ::breakermodule::Breaker* PROTOBUF_NULLABLE breaker_;
    ::breakermodule::BreakerDiscreteControl* PROTOBUF_NULLABLE breakerdiscretecontrol_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_breakermodule_2fbreakermodule_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull BreakerDiscreteControlProfile_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// BreakerDiscreteControlXCBR

// .commonmodule.DiscreteControlXCBR discreteControlXCBR = 1 [(.uml.option_parent_message) = true];
inline bool BreakerDiscreteControlXCBR::has_discretecontrolxcbr() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.discretecontrolxcbr_ != nullptr);
  return value;
}
inline const ::commonmodule::DiscreteControlXCBR& BreakerDiscreteControlXCBR::_internal_discretecontrolxcbr() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::DiscreteControlXCBR* p = _impl_.discretecontrolxcbr_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::DiscreteControlXCBR&>(::commonmodule::_DiscreteControlXCBR_default_instance_);
}
inline const ::commonmodule::DiscreteControlXCBR& BreakerDiscreteControlXCBR::discretecontrolxcbr() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:breakermodule.BreakerDiscreteControlXCBR.discreteControlXCBR)
  return _internal_discretecontrolxcbr();
}
inline void BreakerDiscreteControlXCBR::unsafe_arena_set_allocated_discretecontrolxcbr(
    ::commonmodule::DiscreteControlXCBR* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.discretecontrolxcbr_);
  }
  _impl_.discretecontrolxcbr_ = reinterpret_cast<::commonmodule::DiscreteControlXCBR*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:breakermodule.BreakerDiscreteControlXCBR.discreteControlXCBR)
}
inline ::commonmodule::DiscreteControlXCBR* PROTOBUF_NULLABLE BreakerDiscreteControlXCBR::release_discretecontrolxcbr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::commonmodule::DiscreteControlXCBR* released = _impl_.discretecontrolxcbr_;
  _impl_.discretecontrolxcbr_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::DiscreteControlXCBR* PROTOBUF_NULLABLE BreakerDiscreteControlXCBR::unsafe_arena_release_discretecontrolxcbr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:breakermodule.BreakerDiscreteControlXCBR.discreteControlXCBR)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::commonmodule::DiscreteControlXCBR* temp = _impl_.discretecontrolxcbr_;
  _impl_.discretecontrolxcbr_ = nullptr;
  return temp;
}
inline ::commonmodule::DiscreteControlXCBR* PROTOBUF_NONNULL BreakerDiscreteControlXCBR::_internal_mutable_discretecontrolxcbr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.discretecontrolxcbr_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::DiscreteControlXCBR>(GetArena());
    _impl_.discretecontrolxcbr_ = reinterpret_cast<::commonmodule::DiscreteControlXCBR*>(p);
  }
  return _impl_.discretecontrolxcbr_;
}
inline ::commonmodule::DiscreteControlXCBR* PROTOBUF_NONNULL BreakerDiscreteControlXCBR::mutable_discretecontrolxcbr()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::commonmodule::DiscreteControlXCBR* _msg = _internal_mutable_discretecontrolxcbr();
  // @@protoc_insertion_point(field_mutable:breakermodule.BreakerDiscreteControlXCBR.discreteControlXCBR)
  return _msg;
}
inline void BreakerDiscreteControlXCBR::set_allocated_discretecontrolxcbr(::commonmodule::DiscreteControlXCBR* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.discretecontrolxcbr_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.discretecontrolxcbr_ = reinterpret_cast<::commonmodule::DiscreteControlXCBR*>(value);
  // @@protoc_insertion_point(field_set_allocated:breakermodule.BreakerDiscreteControlXCBR.discreteControlXCBR)
}

// -------------------------------------------------------------------

// BreakerDiscreteControl

// .commonmodule.ControlValue controlValue = 1 [(.uml.option_parent_message) = true];
inline bool BreakerDiscreteControl::has_controlvalue() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.controlvalue_ != nullptr);
  return value;
}
inline const ::commonmodule::ControlValue& BreakerDiscreteControl::_internal_controlvalue() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::ControlValue* p = _impl_.controlvalue_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::ControlValue&>(::commonmodule::_ControlValue_default_instance_);
}
inline const ::commonmodule::ControlValue& BreakerDiscreteControl::controlvalue() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:breakermodule.BreakerDiscreteControl.controlValue)
  return _internal_controlvalue();
}
inline void BreakerDiscreteControl::unsafe_arena_set_allocated_controlvalue(
    ::commonmodule::ControlValue* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.controlvalue_);
  }
  _impl_.controlvalue_ = reinterpret_cast<::commonmodule::ControlValue*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:breakermodule.BreakerDiscreteControl.controlValue)
}
inline ::commonmodule::ControlValue* PROTOBUF_NULLABLE BreakerDiscreteControl::release_controlvalue() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::commonmodule::ControlValue* released = _impl_.controlvalue_;
  _impl_.controlvalue_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::ControlValue* PROTOBUF_NULLABLE BreakerDiscreteControl::unsafe_arena_release_controlvalue() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:breakermodule.BreakerDiscreteControl.controlValue)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::commonmodule::ControlValue* temp = _impl_.controlvalue_;
  _impl_.controlvalue_ = nullptr;
  return temp;
}
inline ::commonmodule::ControlValue* PROTOBUF_NONNULL BreakerDiscreteControl::_internal_mutable_controlvalue() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.controlvalue_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::ControlValue>(GetArena());
    _impl_.controlvalue_ = reinterpret_cast<::commonmodule::ControlValue*>(p);
  }
  return _impl_.controlvalue_;
}
inline ::commonmodule::ControlValue* PROTOBUF_NONNULL BreakerDiscreteControl::mutable_controlvalue()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::commonmodule::ControlValue* _msg = _internal_mutable_controlvalue();
  // @@protoc_insertion_point(field_mutable:breakermodule.BreakerDiscreteControl.controlValue)
  return _msg;
}
inline void BreakerDiscreteControl::set_allocated_controlvalue(::commonmodule::ControlValue* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.controlvalue_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.controlvalue_ = reinterpret_cast<::commonmodule::ControlValue*>(value);
  // @@protoc_insertion_point(field_set_allocated:breakermodule.BreakerDiscreteControl.controlValue)
}

// .commonmodule.CheckConditions check = 2;
inline bool BreakerDiscreteControl::has_check() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.check_ != nullptr);
  return value;
}
inline const ::commonmodule::CheckConditions& BreakerDiscreteControl::_internal_check() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::CheckConditions* p = _impl_.check_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::CheckConditions&>(::commonmodule::_CheckConditions_default_instance_);
}
inline const ::commonmodule::CheckConditions& BreakerDiscreteControl::check() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:breakermodule.BreakerDiscreteControl.check)
  return _internal_check();
}
inline void BreakerDiscreteControl::unsafe_arena_set_allocated_check(
    ::commonmodule::CheckConditions* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.check_);
  }
  _impl_.check_ = reinterpret_cast<::commonmodule::CheckConditions*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:breakermodule.BreakerDiscreteControl.check)
}
inline ::commonmodule::CheckConditions* PROTOBUF_NULLABLE BreakerDiscreteControl::release_check() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::commonmodule::CheckConditions* released = _impl_.check_;
  _impl_.check_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::CheckConditions* PROTOBUF_NULLABLE BreakerDiscreteControl::unsafe_arena_release_check() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:breakermodule.BreakerDiscreteControl.check)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::commonmodule::CheckConditions* temp = _impl_.check_;
  _impl_.check_ = nullptr;
  return temp;
}
inline ::commonmodule::CheckConditions* PROTOBUF_NONNULL BreakerDiscreteControl::_internal_mutable_check() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.check_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::CheckConditions>(GetArena());
    _impl_.check_ = reinterpret_cast<::commonmodule::CheckConditions*>(p);
  }
  return _impl_.check_;
}
inline ::commonmodule::CheckConditions* PROTOBUF_NONNULL BreakerDiscreteControl::mutable_check()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::commonmodule::CheckConditions* _msg = _internal_mutable_check();
  // @@protoc_insertion_point(field_mutable:breakermodule.BreakerDiscreteControl.check)
  return _msg;
}
inline void BreakerDiscreteControl::set_allocated_check(::commonmodule::CheckConditions* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.check_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.check_ = reinterpret_cast<::commonmodule::CheckConditions*>(value);
  // @@protoc_insertion_point(field_set_allocated:breakermodule.BreakerDiscreteControl.check)
}

// .breakermodule.BreakerDiscreteControlXCBR breakerDiscreteControlXCBR = 3;
inline bool BreakerDiscreteControl::has_breakerdiscretecontrolxcbr() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.breakerdiscretecontrolxcbr_ != nullptr);
  return value;
}
inline void BreakerDiscreteControl::clear_breakerdiscretecontrolxcbr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.breakerdiscretecontrolxcbr_ != nullptr) _impl_.breakerdiscretecontrolxcbr_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::breakermodule::BreakerDiscreteControlXCBR& BreakerDiscreteControl::_internal_breakerdiscretecontrolxcbr() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::breakermodule::BreakerDiscreteControlXCBR* p = _impl_.breakerdiscretecontrolxcbr_;
  return p != nullptr ? *p : reinterpret_cast<const ::breakermodule::BreakerDiscreteControlXCBR&>(::breakermodule::_BreakerDiscreteControlXCBR_default_instance_);
}
inline const ::breakermodule::BreakerDiscreteControlXCBR& BreakerDiscreteControl::breakerdiscretecontrolxcbr() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:breakermodule.BreakerDiscreteControl.breakerDiscreteControlXCBR)
  return _internal_breakerdiscretecontrolxcbr();
}
inline void BreakerDiscreteControl::unsafe_arena_set_allocated_breakerdiscretecontrolxcbr(
    ::breakermodule::BreakerDiscreteControlXCBR* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.breakerdiscretecontrolxcbr_);
  }
  _impl_.breakerdiscretecontrolxcbr_ = reinterpret_cast<::breakermodule::BreakerDiscreteControlXCBR*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:breakermodule.BreakerDiscreteControl.breakerDiscreteControlXCBR)
}
inline ::breakermodule::BreakerDiscreteControlXCBR* PROTOBUF_NULLABLE BreakerDiscreteControl::release_breakerdiscretecontrolxcbr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::breakermodule::BreakerDiscreteControlXCBR* released = _impl_.breakerdiscretecontrolxcbr_;
  _impl_.breakerdiscretecontrolxcbr_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::breakermodule::BreakerDiscreteControlXCBR* PROTOBUF_NULLABLE BreakerDiscreteControl::unsafe_arena_release_breakerdiscretecontrolxcbr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:breakermodule.BreakerDiscreteControl.breakerDiscreteControlXCBR)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::breakermodule::BreakerDiscreteControlXCBR* temp = _impl_.breakerdiscretecontrolxcbr_;
  _impl_.breakerdiscretecontrolxcbr_ = nullptr;
  return temp;
}
inline ::breakermodule::BreakerDiscreteControlXCBR* PROTOBUF_NONNULL BreakerDiscreteControl::_internal_mutable_breakerdiscretecontrolxcbr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.breakerdiscretecontrolxcbr_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::breakermodule::BreakerDiscreteControlXCBR>(GetArena());
    _impl_.breakerdiscretecontrolxcbr_ = reinterpret_cast<::breakermodule::BreakerDiscreteControlXCBR*>(p);
  }
  return _impl_.breakerdiscretecontrolxcbr_;
}
inline ::breakermodule::BreakerDiscreteControlXCBR* PROTOBUF_NONNULL BreakerDiscreteControl::mutable_breakerdiscretecontrolxcbr()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::breakermodule::BreakerDiscreteControlXCBR* _msg = _internal_mutable_breakerdiscretecontrolxcbr();
  // @@protoc_insertion_point(field_mutable:breakermodule.BreakerDiscreteControl.breakerDiscreteControlXCBR)
  return _msg;
}
inline void BreakerDiscreteControl::set_allocated_breakerdiscretecontrolxcbr(::breakermodule::BreakerDiscreteControlXCBR* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.breakerdiscretecontrolxcbr_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.breakerdiscretecontrolxcbr_ = reinterpret_cast<::breakermodule::BreakerDiscreteControlXCBR*>(value);
  // @@protoc_insertion_point(field_set_allocated:breakermodule.BreakerDiscreteControl.breakerDiscreteControlXCBR)
}

// -------------------------------------------------------------------

// Breaker

// .commonmodule.ConductingEquipment conductingEquipment = 1 [(.uml.option_parent_message) = true];
inline bool Breaker::has_conductingequipment() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.conductingequipment_ != nullptr);
  return value;
}
inline const ::commonmodule::ConductingEquipment& Breaker::_internal_conductingequipment() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::ConductingEquipment* p = _impl_.conductingequipment_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::ConductingEquipment&>(::commonmodule::_ConductingEquipment_default_instance_);
}
inline const ::commonmodule::ConductingEquipment& Breaker::conductingequipment() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:breakermodule.Breaker.conductingEquipment)
  return _internal_conductingequipment();
}
inline void Breaker::unsafe_arena_set_allocated_conductingequipment(
    ::commonmodule::ConductingEquipment* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.conductingequipment_);
  }
  _impl_.conductingequipment_ = reinterpret_cast<::commonmodule::ConductingEquipment*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:breakermodule.Breaker.conductingEquipment)
}
inline ::commonmodule::ConductingEquipment* PROTOBUF_NULLABLE Breaker::release_conductingequipment() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::commonmodule::ConductingEquipment* released = _impl_.conductingequipment_;
  _impl_.conductingequipment_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::ConductingEquipment* PROTOBUF_NULLABLE Breaker::unsafe_arena_release_conductingequipment() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:breakermodule.Breaker.conductingEquipment)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::commonmodule::ConductingEquipment* temp = _impl_.conductingequipment_;
  _impl_.conductingequipment_ = nullptr;
  return temp;
}
inline ::commonmodule::ConductingEquipment* PROTOBUF_NONNULL Breaker::_internal_mutable_conductingequipment() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.conductingequipment_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::ConductingEquipment>(GetArena());
    _impl_.conductingequipment_ = reinterpret_cast<::commonmodule::ConductingEquipment*>(p);
  }
  return _impl_.conductingequipment_;
}
inline ::commonmodule::ConductingEquipment* PROTOBUF_NONNULL Breaker::mutable_conductingequipment()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::commonmodule::ConductingEquipment* _msg = _internal_mutable_conductingequipment();
  // @@protoc_insertion_point(field_mutable:breakermodule.Breaker.conductingEquipment)
  return _msg;
}
inline void Breaker::set_allocated_conductingequipment(::commonmodule::ConductingEquipment* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.conductingequipment_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.conductingequipment_ = reinterpret_cast<::commonmodule::ConductingEquipment*>(value);
  // @@protoc_insertion_point(field_set_allocated:breakermodule.Breaker.conductingEquipment)
}

// -------------------------------------------------------------------

// BreakerDiscreteControlProfile

// .commonmodule.ControlMessageInfo controlMessageInfo = 1 [(.uml.option_parent_message) = true];
inline bool BreakerDiscreteControlProfile::has_controlmessageinfo() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.controlmessageinfo_ != nullptr);
  return value;
}
inline const ::commonmodule::ControlMessageInfo& BreakerDiscreteControlProfile::_internal_controlmessageinfo() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::ControlMessageInfo* p = _impl_.controlmessageinfo_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::ControlMessageInfo&>(::commonmodule::_ControlMessageInfo_default_instance_);
}
inline const ::commonmodule::ControlMessageInfo& BreakerDiscreteControlProfile::controlmessageinfo() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:breakermodule.BreakerDiscreteControlProfile.controlMessageInfo)
  return _internal_controlmessageinfo();
}
inline void BreakerDiscreteControlProfile::unsafe_arena_set_allocated_controlmessageinfo(
    ::commonmodule::ControlMessageInfo* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.controlmessageinfo_);
  }
  _impl_.controlmessageinfo_ = reinterpret_cast<::commonmodule::ControlMessageInfo*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:breakermodule.BreakerDiscreteControlProfile.controlMessageInfo)
}
inline ::commonmodule::ControlMessageInfo* PROTOBUF_NULLABLE BreakerDiscreteControlProfile::release_controlmessageinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::commonmodule::ControlMessageInfo* released = _impl_.controlmessageinfo_;
  _impl_.controlmessageinfo_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::ControlMessageInfo* PROTOBUF_NULLABLE BreakerDiscreteControlProfile::unsafe_arena_release_controlmessageinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:breakermodule.BreakerDiscreteControlProfile.controlMessageInfo)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::commonmodule::ControlMessageInfo* temp = _impl_.controlmessageinfo_;
  _impl_.controlmessageinfo_ = nullptr;
  return temp;
}
inline ::commonmodule::ControlMessageInfo* PROTOBUF_NONNULL BreakerDiscreteControlProfile::_internal_mutable_controlmessageinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.controlmessageinfo_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::ControlMessageInfo>(GetArena());
    _impl_.controlmessageinfo_ = reinterpret_cast<::commonmodule::ControlMessageInfo*>(p);
  }
  return _impl_.controlmessageinfo_;
}
inline ::commonmodule::ControlMessageInfo* PROTOBUF_NONNULL BreakerDiscreteControlProfile::mutable_controlmessageinfo()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::commonmodule::ControlMessageInfo* _msg = _internal_mutable_controlmessageinfo();
  // @@protoc_insertion_point(field_mutable:breakermodule.BreakerDiscreteControlProfile.controlMessageInfo)
  return _msg;
}
inline void BreakerDiscreteControlProfile::set_allocated_controlmessageinfo(::commonmodule::ControlMessageInfo* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.controlmessageinfo_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.controlmessageinfo_ = reinterpret_cast<::commonmodule::ControlMessageInfo*>(value);
  // @@protoc_insertion_point(field_set_allocated:breakermodule.BreakerDiscreteControlProfile.controlMessageInfo)
}

// .breakermodule.Breaker breaker = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
inline bool BreakerDiscreteControlProfile::has_breaker() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.breaker_ != nullptr);
  return value;
}
inline void BreakerDiscreteControlProfile::clear_breaker() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.breaker_ != nullptr) _impl_.breaker_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::breakermodule::Breaker& BreakerDiscreteControlProfile::_internal_breaker() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::breakermodule::Breaker* p = _impl_.breaker_;
  return p != nullptr ? *p : reinterpret_cast<const ::breakermodule::Breaker&>(::breakermodule::_Breaker_default_instance_);
}
inline const ::breakermodule::Breaker& BreakerDiscreteControlProfile::breaker() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:breakermodule.BreakerDiscreteControlProfile.breaker)
  return _internal_breaker();
}
inline void BreakerDiscreteControlProfile::unsafe_arena_set_allocated_breaker(
    ::breakermodule::Breaker* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.breaker_);
  }
  _impl_.breaker_ = reinterpret_cast<::breakermodule::Breaker*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:breakermodule.BreakerDiscreteControlProfile.breaker)
}
inline ::breakermodule::Breaker* PROTOBUF_NULLABLE BreakerDiscreteControlProfile::release_breaker() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::breakermodule::Breaker* released = _impl_.breaker_;
  _impl_.breaker_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::breakermodule::Breaker* PROTOBUF_NULLABLE BreakerDiscreteControlProfile::unsafe_arena_release_breaker() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:breakermodule.BreakerDiscreteControlProfile.breaker)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::breakermodule::Breaker* temp = _impl_.breaker_;
  _impl_.breaker_ = nullptr;
  return temp;
}
inline ::breakermodule::Breaker* PROTOBUF_NONNULL BreakerDiscreteControlProfile::_internal_mutable_breaker() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.breaker_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::breakermodule::Breaker>(GetArena());
    _impl_.breaker_ = reinterpret_cast<::breakermodule::Breaker*>(p);
  }
  return _impl_.breaker_;
}
inline ::breakermodule::Breaker* PROTOBUF_NONNULL BreakerDiscreteControlProfile::mutable_breaker()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::breakermodule::Breaker* _msg = _internal_mutable_breaker();
  // @@protoc_insertion_point(field_mutable:breakermodule.BreakerDiscreteControlProfile.breaker)
  return _msg;
}
inline void BreakerDiscreteControlProfile::set_allocated_breaker(::breakermodule::Breaker* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.breaker_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.breaker_ = reinterpret_cast<::breakermodule::Breaker*>(value);
  // @@protoc_insertion_point(field_set_allocated:breakermodule.BreakerDiscreteControlProfile.breaker)
}

// .breakermodule.BreakerDiscreteControl breakerDiscreteControl = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
inline bool BreakerDiscreteControlProfile::has_breakerdiscretecontrol() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.breakerdiscretecontrol_ != nullptr);
  return value;
}
inline void BreakerDiscreteControlProfile::clear_breakerdiscretecontrol() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.breakerdiscretecontrol_ != nullptr) _impl_.breakerdiscretecontrol_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::breakermodule::BreakerDiscreteControl& BreakerDiscreteControlProfile::_internal_breakerdiscretecontrol() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::breakermodule::BreakerDiscreteControl* p = _impl_.breakerdiscretecontrol_;
  return p != nullptr ? *p : reinterpret_cast<const ::breakermodule::BreakerDiscreteControl&>(::breakermodule::_BreakerDiscreteControl_default_instance_);
}
inline const ::breakermodule::BreakerDiscreteControl& BreakerDiscreteControlProfile::breakerdiscretecontrol() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:breakermodule.BreakerDiscreteControlProfile.breakerDiscreteControl)
  return _internal_breakerdiscretecontrol();
}
inline void BreakerDiscreteControlProfile::unsafe_arena_set_allocated_breakerdiscretecontrol(
    ::breakermodule::BreakerDiscreteControl* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.breakerdiscretecontrol_);
  }
  _impl_.breakerdiscretecontrol_ = reinterpret_cast<::breakermodule::BreakerDiscreteControl*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:breakermodule.BreakerDiscreteControlProfile.breakerDiscreteControl)
}
inline ::breakermodule::BreakerDiscreteControl* PROTOBUF_NULLABLE BreakerDiscreteControlProfile::release_breakerdiscretecontrol() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::breakermodule::BreakerDiscreteControl* released = _impl_.breakerdiscretecontrol_;
  _impl_.breakerdiscretecontrol_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::breakermodule::BreakerDiscreteControl* PROTOBUF_NULLABLE BreakerDiscreteControlProfile::unsafe_arena_release_breakerdiscretecontrol() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:breakermodule.BreakerDiscreteControlProfile.breakerDiscreteControl)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::breakermodule::BreakerDiscreteControl* temp = _impl_.breakerdiscretecontrol_;
  _impl_.breakerdiscretecontrol_ = nullptr;
  return temp;
}
inline ::breakermodule::BreakerDiscreteControl* PROTOBUF_NONNULL BreakerDiscreteControlProfile::_internal_mutable_breakerdiscretecontrol() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.breakerdiscretecontrol_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::breakermodule::BreakerDiscreteControl>(GetArena());
    _impl_.breakerdiscretecontrol_ = reinterpret_cast<::breakermodule::BreakerDiscreteControl*>(p);
  }
  return _impl_.breakerdiscretecontrol_;
}
inline ::breakermodule::BreakerDiscreteControl* PROTOBUF_NONNULL BreakerDiscreteControlProfile::mutable_breakerdiscretecontrol()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::breakermodule::BreakerDiscreteControl* _msg = _internal_mutable_breakerdiscretecontrol();
  // @@protoc_insertion_point(field_mutable:breakermodule.BreakerDiscreteControlProfile.breakerDiscreteControl)
  return _msg;
}
inline void BreakerDiscreteControlProfile::set_allocated_breakerdiscretecontrol(::breakermodule::BreakerDiscreteControl* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.breakerdiscretecontrol_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.breakerdiscretecontrol_ = reinterpret_cast<::breakermodule::BreakerDiscreteControl*>(value);
  // @@protoc_insertion_point(field_set_allocated:breakermodule.BreakerDiscreteControlProfile.breakerDiscreteControl)
}

// -------------------------------------------------------------------

// BreakerEvent

// .commonmodule.EventValue eventValue = 1 [(.uml.option_parent_message) = true];
inline bool BreakerEvent::has_eventvalue() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.eventvalue_ != nullptr);
  return value;
}
inline const ::commonmodule::EventValue& BreakerEvent::_internal_eventvalue() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::EventValue* p = _impl_.eventvalue_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::EventValue&>(::commonmodule::_EventValue_default_instance_);
}
inline const ::commonmodule::EventValue& BreakerEvent::eventvalue() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:breakermodule.BreakerEvent.eventValue)
  return _internal_eventvalue();
}
inline void BreakerEvent::unsafe_arena_set_allocated_eventvalue(
    ::commonmodule::EventValue* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.eventvalue_);
  }
  _impl_.eventvalue_ = reinterpret_cast<::commonmodule::EventValue*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:breakermodule.BreakerEvent.eventValue)
}
inline ::commonmodule::EventValue* PROTOBUF_NULLABLE BreakerEvent::release_eventvalue() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::commonmodule::EventValue* released = _impl_.eventvalue_;
  _impl_.eventvalue_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::EventValue* PROTOBUF_NULLABLE BreakerEvent::unsafe_arena_release_eventvalue() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:breakermodule.BreakerEvent.eventValue)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::commonmodule::EventValue* temp = _impl_.eventvalue_;
  _impl_.eventvalue_ = nullptr;
  return temp;
}
inline ::commonmodule::EventValue* PROTOBUF_NONNULL BreakerEvent::_internal_mutable_eventvalue() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.eventvalue_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::EventValue>(GetArena());
    _impl_.eventvalue_ = reinterpret_cast<::commonmodule::EventValue*>(p);
  }
  return _impl_.eventvalue_;
}
inline ::commonmodule::EventValue* PROTOBUF_NONNULL BreakerEvent::mutable_eventvalue()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::commonmodule::EventValue* _msg = _internal_mutable_eventvalue();
  // @@protoc_insertion_point(field_mutable:breakermodule.BreakerEvent.eventValue)
  return _msg;
}
inline void BreakerEvent::set_allocated_eventvalue(::commonmodule::EventValue* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.eventvalue_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.eventvalue_ = reinterpret_cast<::commonmodule::EventValue*>(value);
  // @@protoc_insertion_point(field_set_allocated:breakermodule.BreakerEvent.eventValue)
}

// .commonmodule.StatusAndEventXCBR statusAndEventXCBR = 2;
inline bool BreakerEvent::has_statusandeventxcbr() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.statusandeventxcbr_ != nullptr);
  return value;
}
inline const ::commonmodule::StatusAndEventXCBR& BreakerEvent::_internal_statusandeventxcbr() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::StatusAndEventXCBR* p = _impl_.statusandeventxcbr_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::StatusAndEventXCBR&>(::commonmodule::_StatusAndEventXCBR_default_instance_);
}
inline const ::commonmodule::StatusAndEventXCBR& BreakerEvent::statusandeventxcbr() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:breakermodule.BreakerEvent.statusAndEventXCBR)
  return _internal_statusandeventxcbr();
}
inline void BreakerEvent::unsafe_arena_set_allocated_statusandeventxcbr(
    ::commonmodule::StatusAndEventXCBR* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.statusandeventxcbr_);
  }
  _impl_.statusandeventxcbr_ = reinterpret_cast<::commonmodule::StatusAndEventXCBR*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:breakermodule.BreakerEvent.statusAndEventXCBR)
}
inline ::commonmodule::StatusAndEventXCBR* PROTOBUF_NULLABLE BreakerEvent::release_statusandeventxcbr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::commonmodule::StatusAndEventXCBR* released = _impl_.statusandeventxcbr_;
  _impl_.statusandeventxcbr_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::StatusAndEventXCBR* PROTOBUF_NULLABLE BreakerEvent::unsafe_arena_release_statusandeventxcbr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:breakermodule.BreakerEvent.statusAndEventXCBR)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::commonmodule::StatusAndEventXCBR* temp = _impl_.statusandeventxcbr_;
  _impl_.statusandeventxcbr_ = nullptr;
  return temp;
}
inline ::commonmodule::StatusAndEventXCBR* PROTOBUF_NONNULL BreakerEvent::_internal_mutable_statusandeventxcbr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.statusandeventxcbr_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::StatusAndEventXCBR>(GetArena());
    _impl_.statusandeventxcbr_ = reinterpret_cast<::commonmodule::StatusAndEventXCBR*>(p);
  }
  return _impl_.statusandeventxcbr_;
}
inline ::commonmodule::StatusAndEventXCBR* PROTOBUF_NONNULL BreakerEvent::mutable_statusandeventxcbr()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::commonmodule::StatusAndEventXCBR* _msg = _internal_mutable_statusandeventxcbr();
  // @@protoc_insertion_point(field_mutable:breakermodule.BreakerEvent.statusAndEventXCBR)
  return _msg;
}
inline void BreakerEvent::set_allocated_statusandeventxcbr(::commonmodule::StatusAndEventXCBR* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.statusandeventxcbr_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.statusandeventxcbr_ = reinterpret_cast<::commonmodule::StatusAndEventXCBR*>(value);
  // @@protoc_insertion_point(field_set_allocated:breakermodule.BreakerEvent.statusAndEventXCBR)
}

// -------------------------------------------------------------------

// BreakerEventProfile

// .commonmodule.EventMessageInfo eventMessageInfo = 1 [(.uml.option_parent_message) = true];
inline bool BreakerEventProfile::has_eventmessageinfo() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.eventmessageinfo_ != nullptr);
  return value;
}
inline const ::commonmodule::EventMessageInfo& BreakerEventProfile::_internal_eventmessageinfo() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::EventMessageInfo* p = _impl_.eventmessageinfo_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::EventMessageInfo&>(::commonmodule::_EventMessageInfo_default_instance_);
}
inline const ::commonmodule::EventMessageInfo& BreakerEventProfile::eventmessageinfo() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:breakermodule.BreakerEventProfile.eventMessageInfo)
  return _internal_eventmessageinfo();
}
inline void BreakerEventProfile::unsafe_arena_set_allocated_eventmessageinfo(
    ::commonmodule::EventMessageInfo* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.eventmessageinfo_);
  }
  _impl_.eventmessageinfo_ = reinterpret_cast<::commonmodule::EventMessageInfo*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:breakermodule.BreakerEventProfile.eventMessageInfo)
}
inline ::commonmodule::EventMessageInfo* PROTOBUF_NULLABLE BreakerEventProfile::release_eventmessageinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::commonmodule::EventMessageInfo* released = _impl_.eventmessageinfo_;
  _impl_.eventmessageinfo_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::EventMessageInfo* PROTOBUF_NULLABLE BreakerEventProfile::unsafe_arena_release_eventmessageinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:breakermodule.BreakerEventProfile.eventMessageInfo)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::commonmodule::EventMessageInfo* temp = _impl_.eventmessageinfo_;
  _impl_.eventmessageinfo_ = nullptr;
  return temp;
}
inline ::commonmodule::EventMessageInfo* PROTOBUF_NONNULL BreakerEventProfile::_internal_mutable_eventmessageinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.eventmessageinfo_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::EventMessageInfo>(GetArena());
    _impl_.eventmessageinfo_ = reinterpret_cast<::commonmodule::EventMessageInfo*>(p);
  }
  return _impl_.eventmessageinfo_;
}
inline ::commonmodule::EventMessageInfo* PROTOBUF_NONNULL BreakerEventProfile::mutable_eventmessageinfo()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::commonmodule::EventMessageInfo* _msg = _internal_mutable_eventmessageinfo();
  // @@protoc_insertion_point(field_mutable:breakermodule.BreakerEventProfile.eventMessageInfo)
  return _msg;
}
inline void BreakerEventProfile::set_allocated_eventmessageinfo(::commonmodule::EventMessageInfo* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.eventmessageinfo_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.eventmessageinfo_ = reinterpret_cast<::commonmodule::EventMessageInfo*>(value);
  // @@protoc_insertion_point(field_set_allocated:breakermodule.BreakerEventProfile.eventMessageInfo)
}

// .breakermodule.Breaker breaker = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
inline bool BreakerEventProfile::has_breaker() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.breaker_ != nullptr);
  return value;
}
inline void BreakerEventProfile::clear_breaker() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.breaker_ != nullptr) _impl_.breaker_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::breakermodule::Breaker& BreakerEventProfile::_internal_breaker() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::breakermodule::Breaker* p = _impl_.breaker_;
  return p != nullptr ? *p : reinterpret_cast<const ::breakermodule::Breaker&>(::breakermodule::_Breaker_default_instance_);
}
inline const ::breakermodule::Breaker& BreakerEventProfile::breaker() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:breakermodule.BreakerEventProfile.breaker)
  return _internal_breaker();
}
inline void BreakerEventProfile::unsafe_arena_set_allocated_breaker(
    ::breakermodule::Breaker* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.breaker_);
  }
  _impl_.breaker_ = reinterpret_cast<::breakermodule::Breaker*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:breakermodule.BreakerEventProfile.breaker)
}
inline ::breakermodule::Breaker* PROTOBUF_NULLABLE BreakerEventProfile::release_breaker() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::breakermodule::Breaker* released = _impl_.breaker_;
  _impl_.breaker_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::breakermodule::Breaker* PROTOBUF_NULLABLE BreakerEventProfile::unsafe_arena_release_breaker() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:breakermodule.BreakerEventProfile.breaker)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::breakermodule::Breaker* temp = _impl_.breaker_;
  _impl_.breaker_ = nullptr;
  return temp;
}
inline ::breakermodule::Breaker* PROTOBUF_NONNULL BreakerEventProfile::_internal_mutable_breaker() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.breaker_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::breakermodule::Breaker>(GetArena());
    _impl_.breaker_ = reinterpret_cast<::breakermodule::Breaker*>(p);
  }
  return _impl_.breaker_;
}
inline ::breakermodule::Breaker* PROTOBUF_NONNULL BreakerEventProfile::mutable_breaker()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::breakermodule::Breaker* _msg = _internal_mutable_breaker();
  // @@protoc_insertion_point(field_mutable:breakermodule.BreakerEventProfile.breaker)
  return _msg;
}
inline void BreakerEventProfile::set_allocated_breaker(::breakermodule::Breaker* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.breaker_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.breaker_ = reinterpret_cast<::breakermodule::Breaker*>(value);
  // @@protoc_insertion_point(field_set_allocated:breakermodule.BreakerEventProfile.breaker)
}

// .breakermodule.BreakerEvent breakerEvent = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
inline bool BreakerEventProfile::has_breakerevent() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.breakerevent_ != nullptr);
  return value;
}
inline void BreakerEventProfile::clear_breakerevent() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.breakerevent_ != nullptr) _impl_.breakerevent_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::breakermodule::BreakerEvent& BreakerEventProfile::_internal_breakerevent() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::breakermodule::BreakerEvent* p = _impl_.breakerevent_;
  return p != nullptr ? *p : reinterpret_cast<const ::breakermodule::BreakerEvent&>(::breakermodule::_BreakerEvent_default_instance_);
}
inline const ::breakermodule::BreakerEvent& BreakerEventProfile::breakerevent() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:breakermodule.BreakerEventProfile.breakerEvent)
  return _internal_breakerevent();
}
inline void BreakerEventProfile::unsafe_arena_set_allocated_breakerevent(
    ::breakermodule::BreakerEvent* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.breakerevent_);
  }
  _impl_.breakerevent_ = reinterpret_cast<::breakermodule::BreakerEvent*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:breakermodule.BreakerEventProfile.breakerEvent)
}
inline ::breakermodule::BreakerEvent* PROTOBUF_NULLABLE BreakerEventProfile::release_breakerevent() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::breakermodule::BreakerEvent* released = _impl_.breakerevent_;
  _impl_.breakerevent_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::breakermodule::BreakerEvent* PROTOBUF_NULLABLE BreakerEventProfile::unsafe_arena_release_breakerevent() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:breakermodule.BreakerEventProfile.breakerEvent)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::breakermodule::BreakerEvent* temp = _impl_.breakerevent_;
  _impl_.breakerevent_ = nullptr;
  return temp;
}
inline ::breakermodule::BreakerEvent* PROTOBUF_NONNULL BreakerEventProfile::_internal_mutable_breakerevent() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.breakerevent_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::breakermodule::BreakerEvent>(GetArena());
    _impl_.breakerevent_ = reinterpret_cast<::breakermodule::BreakerEvent*>(p);
  }
  return _impl_.breakerevent_;
}
inline ::breakermodule::BreakerEvent* PROTOBUF_NONNULL BreakerEventProfile::mutable_breakerevent()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::breakermodule::BreakerEvent* _msg = _internal_mutable_breakerevent();
  // @@protoc_insertion_point(field_mutable:breakermodule.BreakerEventProfile.breakerEvent)
  return _msg;
}
inline void BreakerEventProfile::set_allocated_breakerevent(::breakermodule::BreakerEvent* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.breakerevent_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.breakerevent_ = reinterpret_cast<::breakermodule::BreakerEvent*>(value);
  // @@protoc_insertion_point(field_set_allocated:breakermodule.BreakerEventProfile.breakerEvent)
}

// -------------------------------------------------------------------

// BreakerReading

// .commonmodule.ConductingEquipmentTerminalReading conductingEquipmentTerminalReading = 1 [(.uml.option_parent_message) = true];
inline bool BreakerReading::has_conductingequipmentterminalreading() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.conductingequipmentterminalreading_ != nullptr);
  return value;
}
inline const ::commonmodule::ConductingEquipmentTerminalReading& BreakerReading::_internal_conductingequipmentterminalreading() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::ConductingEquipmentTerminalReading* p = _impl_.conductingequipmentterminalreading_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::ConductingEquipmentTerminalReading&>(::commonmodule::_ConductingEquipmentTerminalReading_default_instance_);
}
inline const ::commonmodule::ConductingEquipmentTerminalReading& BreakerReading::conductingequipmentterminalreading() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:breakermodule.BreakerReading.conductingEquipmentTerminalReading)
  return _internal_conductingequipmentterminalreading();
}
inline void BreakerReading::unsafe_arena_set_allocated_conductingequipmentterminalreading(
    ::commonmodule::ConductingEquipmentTerminalReading* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.conductingequipmentterminalreading_);
  }
  _impl_.conductingequipmentterminalreading_ = reinterpret_cast<::commonmodule::ConductingEquipmentTerminalReading*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:breakermodule.BreakerReading.conductingEquipmentTerminalReading)
}
inline ::commonmodule::ConductingEquipmentTerminalReading* PROTOBUF_NULLABLE BreakerReading::release_conductingequipmentterminalreading() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::commonmodule::ConductingEquipmentTerminalReading* released = _impl_.conductingequipmentterminalreading_;
  _impl_.conductingequipmentterminalreading_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::ConductingEquipmentTerminalReading* PROTOBUF_NULLABLE BreakerReading::unsafe_arena_release_conductingequipmentterminalreading() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:breakermodule.BreakerReading.conductingEquipmentTerminalReading)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::commonmodule::ConductingEquipmentTerminalReading* temp = _impl_.conductingequipmentterminalreading_;
  _impl_.conductingequipmentterminalreading_ = nullptr;
  return temp;
}
inline ::commonmodule::ConductingEquipmentTerminalReading* PROTOBUF_NONNULL BreakerReading::_internal_mutable_conductingequipmentterminalreading() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.conductingequipmentterminalreading_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::ConductingEquipmentTerminalReading>(GetArena());
    _impl_.conductingequipmentterminalreading_ = reinterpret_cast<::commonmodule::ConductingEquipmentTerminalReading*>(p);
  }
  return _impl_.conductingequipmentterminalreading_;
}
inline ::commonmodule::ConductingEquipmentTerminalReading* PROTOBUF_NONNULL BreakerReading::mutable_conductingequipmentterminalreading()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::commonmodule::ConductingEquipmentTerminalReading* _msg = _internal_mutable_conductingequipmentterminalreading();
  // @@protoc_insertion_point(field_mutable:breakermodule.BreakerReading.conductingEquipmentTerminalReading)
  return _msg;
}
inline void BreakerReading::set_allocated_conductingequipmentterminalreading(::commonmodule::ConductingEquipmentTerminalReading* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.conductingequipmentterminalreading_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.conductingequipmentterminalreading_ = reinterpret_cast<::commonmodule::ConductingEquipmentTerminalReading*>(value);
  // @@protoc_insertion_point(field_set_allocated:breakermodule.BreakerReading.conductingEquipmentTerminalReading)
}

// .commonmodule.ReadingMMXU diffReadingMMXU = 2;
inline bool BreakerReading::has_diffreadingmmxu() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.diffreadingmmxu_ != nullptr);
  return value;
}
inline const ::commonmodule::ReadingMMXU& BreakerReading::_internal_diffreadingmmxu() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::ReadingMMXU* p = _impl_.diffreadingmmxu_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::ReadingMMXU&>(::commonmodule::_ReadingMMXU_default_instance_);
}
inline const ::commonmodule::ReadingMMXU& BreakerReading::diffreadingmmxu() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:breakermodule.BreakerReading.diffReadingMMXU)
  return _internal_diffreadingmmxu();
}
inline void BreakerReading::unsafe_arena_set_allocated_diffreadingmmxu(
    ::commonmodule::ReadingMMXU* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.diffreadingmmxu_);
  }
  _impl_.diffreadingmmxu_ = reinterpret_cast<::commonmodule::ReadingMMXU*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:breakermodule.BreakerReading.diffReadingMMXU)
}
inline ::commonmodule::ReadingMMXU* PROTOBUF_NULLABLE BreakerReading::release_diffreadingmmxu() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::commonmodule::ReadingMMXU* released = _impl_.diffreadingmmxu_;
  _impl_.diffreadingmmxu_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::ReadingMMXU* PROTOBUF_NULLABLE BreakerReading::unsafe_arena_release_diffreadingmmxu() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:breakermodule.BreakerReading.diffReadingMMXU)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::commonmodule::ReadingMMXU* temp = _impl_.diffreadingmmxu_;
  _impl_.diffreadingmmxu_ = nullptr;
  return temp;
}
inline ::commonmodule::ReadingMMXU* PROTOBUF_NONNULL BreakerReading::_internal_mutable_diffreadingmmxu() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.diffreadingmmxu_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::ReadingMMXU>(GetArena());
    _impl_.diffreadingmmxu_ = reinterpret_cast<::commonmodule::ReadingMMXU*>(p);
  }
  return _impl_.diffreadingmmxu_;
}
inline ::commonmodule::ReadingMMXU* PROTOBUF_NONNULL BreakerReading::mutable_diffreadingmmxu()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::commonmodule::ReadingMMXU* _msg = _internal_mutable_diffreadingmmxu();
  // @@protoc_insertion_point(field_mutable:breakermodule.BreakerReading.diffReadingMMXU)
  return _msg;
}
inline void BreakerReading::set_allocated_diffreadingmmxu(::commonmodule::ReadingMMXU* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.diffreadingmmxu_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.diffreadingmmxu_ = reinterpret_cast<::commonmodule::ReadingMMXU*>(value);
  // @@protoc_insertion_point(field_set_allocated:breakermodule.BreakerReading.diffReadingMMXU)
}

// .commonmodule.PhaseMMTN phaseMMTN = 3;
inline bool BreakerReading::has_phasemmtn() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.phasemmtn_ != nullptr);
  return value;
}
inline const ::commonmodule::PhaseMMTN& BreakerReading::_internal_phasemmtn() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::PhaseMMTN* p = _impl_.phasemmtn_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::PhaseMMTN&>(::commonmodule::_PhaseMMTN_default_instance_);
}
inline const ::commonmodule::PhaseMMTN& BreakerReading::phasemmtn() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:breakermodule.BreakerReading.phaseMMTN)
  return _internal_phasemmtn();
}
inline void BreakerReading::unsafe_arena_set_allocated_phasemmtn(
    ::commonmodule::PhaseMMTN* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.phasemmtn_);
  }
  _impl_.phasemmtn_ = reinterpret_cast<::commonmodule::PhaseMMTN*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:breakermodule.BreakerReading.phaseMMTN)
}
inline ::commonmodule::PhaseMMTN* PROTOBUF_NULLABLE BreakerReading::release_phasemmtn() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::commonmodule::PhaseMMTN* released = _impl_.phasemmtn_;
  _impl_.phasemmtn_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::PhaseMMTN* PROTOBUF_NULLABLE BreakerReading::unsafe_arena_release_phasemmtn() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:breakermodule.BreakerReading.phaseMMTN)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::commonmodule::PhaseMMTN* temp = _impl_.phasemmtn_;
  _impl_.phasemmtn_ = nullptr;
  return temp;
}
inline ::commonmodule::PhaseMMTN* PROTOBUF_NONNULL BreakerReading::_internal_mutable_phasemmtn() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.phasemmtn_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::PhaseMMTN>(GetArena());
    _impl_.phasemmtn_ = reinterpret_cast<::commonmodule::PhaseMMTN*>(p);
  }
  return _impl_.phasemmtn_;
}
inline ::commonmodule::PhaseMMTN* PROTOBUF_NONNULL BreakerReading::mutable_phasemmtn()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::commonmodule::PhaseMMTN* _msg = _internal_mutable_phasemmtn();
  // @@protoc_insertion_point(field_mutable:breakermodule.BreakerReading.phaseMMTN)
  return _msg;
}
inline void BreakerReading::set_allocated_phasemmtn(::commonmodule::PhaseMMTN* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.phasemmtn_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.phasemmtn_ = reinterpret_cast<::commonmodule::PhaseMMTN*>(value);
  // @@protoc_insertion_point(field_set_allocated:breakermodule.BreakerReading.phaseMMTN)
}

// .commonmodule.ReadingMMTR readingMMTR = 4;
inline bool BreakerReading::has_readingmmtr() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.readingmmtr_ != nullptr);
  return value;
}
inline const ::commonmodule::ReadingMMTR& BreakerReading::_internal_readingmmtr() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::ReadingMMTR* p = _impl_.readingmmtr_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::ReadingMMTR&>(::commonmodule::_ReadingMMTR_default_instance_);
}
inline const ::commonmodule::ReadingMMTR& BreakerReading::readingmmtr() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:breakermodule.BreakerReading.readingMMTR)
  return _internal_readingmmtr();
}
inline void BreakerReading::unsafe_arena_set_allocated_readingmmtr(
    ::commonmodule::ReadingMMTR* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.readingmmtr_);
  }
  _impl_.readingmmtr_ = reinterpret_cast<::commonmodule::ReadingMMTR*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:breakermodule.BreakerReading.readingMMTR)
}
inline ::commonmodule::ReadingMMTR* PROTOBUF_NULLABLE BreakerReading::release_readingmmtr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::commonmodule::ReadingMMTR* released = _impl_.readingmmtr_;
  _impl_.readingmmtr_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::ReadingMMTR* PROTOBUF_NULLABLE BreakerReading::unsafe_arena_release_readingmmtr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:breakermodule.BreakerReading.readingMMTR)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::commonmodule::ReadingMMTR* temp = _impl_.readingmmtr_;
  _impl_.readingmmtr_ = nullptr;
  return temp;
}
inline ::commonmodule::ReadingMMTR* PROTOBUF_NONNULL BreakerReading::_internal_mutable_readingmmtr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.readingmmtr_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::ReadingMMTR>(GetArena());
    _impl_.readingmmtr_ = reinterpret_cast<::commonmodule::ReadingMMTR*>(p);
  }
  return _impl_.readingmmtr_;
}
inline ::commonmodule::ReadingMMTR* PROTOBUF_NONNULL BreakerReading::mutable_readingmmtr()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::commonmodule::ReadingMMTR* _msg = _internal_mutable_readingmmtr();
  // @@protoc_insertion_point(field_mutable:breakermodule.BreakerReading.readingMMTR)
  return _msg;
}
inline void BreakerReading::set_allocated_readingmmtr(::commonmodule::ReadingMMTR* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.readingmmtr_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.readingmmtr_ = reinterpret_cast<::commonmodule::ReadingMMTR*>(value);
  // @@protoc_insertion_point(field_set_allocated:breakermodule.BreakerReading.readingMMTR)
}

// .commonmodule.ReadingMMXU readingMMXU = 5;
inline bool BreakerReading::has_readingmmxu() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.readingmmxu_ != nullptr);
  return value;
}
inline const ::commonmodule::ReadingMMXU& BreakerReading::_internal_readingmmxu() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::ReadingMMXU* p = _impl_.readingmmxu_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::ReadingMMXU&>(::commonmodule::_ReadingMMXU_default_instance_);
}
inline const ::commonmodule::ReadingMMXU& BreakerReading::readingmmxu() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:breakermodule.BreakerReading.readingMMXU)
  return _internal_readingmmxu();
}
inline void BreakerReading::unsafe_arena_set_allocated_readingmmxu(
    ::commonmodule::ReadingMMXU* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.readingmmxu_);
  }
  _impl_.readingmmxu_ = reinterpret_cast<::commonmodule::ReadingMMXU*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:breakermodule.BreakerReading.readingMMXU)
}
inline ::commonmodule::ReadingMMXU* PROTOBUF_NULLABLE BreakerReading::release_readingmmxu() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::commonmodule::ReadingMMXU* released = _impl_.readingmmxu_;
  _impl_.readingmmxu_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::ReadingMMXU* PROTOBUF_NULLABLE BreakerReading::unsafe_arena_release_readingmmxu() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:breakermodule.BreakerReading.readingMMXU)

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::commonmodule::ReadingMMXU* temp = _impl_.readingmmxu_;
  _impl_.readingmmxu_ = nullptr;
  return temp;
}
inline ::commonmodule::ReadingMMXU* PROTOBUF_NONNULL BreakerReading::_internal_mutable_readingmmxu() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.readingmmxu_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::ReadingMMXU>(GetArena());
    _impl_.readingmmxu_ = reinterpret_cast<::commonmodule::ReadingMMXU*>(p);
  }
  return _impl_.readingmmxu_;
}
inline ::commonmodule::ReadingMMXU* PROTOBUF_NONNULL BreakerReading::mutable_readingmmxu()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000010u;
  ::commonmodule::ReadingMMXU* _msg = _internal_mutable_readingmmxu();
  // @@protoc_insertion_point(field_mutable:breakermodule.BreakerReading.readingMMXU)
  return _msg;
}
inline void BreakerReading::set_allocated_readingmmxu(::commonmodule::ReadingMMXU* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.readingmmxu_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }

  _impl_.readingmmxu_ = reinterpret_cast<::commonmodule::ReadingMMXU*>(value);
  // @@protoc_insertion_point(field_set_allocated:breakermodule.BreakerReading.readingMMXU)
}

// .commonmodule.ReadingMMDC readingMMDC = 6;
inline bool BreakerReading::has_readingmmdc() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.readingmmdc_ != nullptr);
  return value;
}
inline const ::commonmodule::ReadingMMDC& BreakerReading::_internal_readingmmdc() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::ReadingMMDC* p = _impl_.readingmmdc_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::ReadingMMDC&>(::commonmodule::_ReadingMMDC_default_instance_);
}
inline const ::commonmodule::ReadingMMDC& BreakerReading::readingmmdc() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:breakermodule.BreakerReading.readingMMDC)
  return _internal_readingmmdc();
}
inline void BreakerReading::unsafe_arena_set_allocated_readingmmdc(
    ::commonmodule::ReadingMMDC* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.readingmmdc_);
  }
  _impl_.readingmmdc_ = reinterpret_cast<::commonmodule::ReadingMMDC*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:breakermodule.BreakerReading.readingMMDC)
}
inline ::commonmodule::ReadingMMDC* PROTOBUF_NULLABLE BreakerReading::release_readingmmdc() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::commonmodule::ReadingMMDC* released = _impl_.readingmmdc_;
  _impl_.readingmmdc_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::ReadingMMDC* PROTOBUF_NULLABLE BreakerReading::unsafe_arena_release_readingmmdc() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:breakermodule.BreakerReading.readingMMDC)

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::commonmodule::ReadingMMDC* temp = _impl_.readingmmdc_;
  _impl_.readingmmdc_ = nullptr;
  return temp;
}
inline ::commonmodule::ReadingMMDC* PROTOBUF_NONNULL BreakerReading::_internal_mutable_readingmmdc() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.readingmmdc_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::ReadingMMDC>(GetArena());
    _impl_.readingmmdc_ = reinterpret_cast<::commonmodule::ReadingMMDC*>(p);
  }
  return _impl_.readingmmdc_;
}
inline ::commonmodule::ReadingMMDC* PROTOBUF_NONNULL BreakerReading::mutable_readingmmdc()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000020u;
  ::commonmodule::ReadingMMDC* _msg = _internal_mutable_readingmmdc();
  // @@protoc_insertion_point(field_mutable:breakermodule.BreakerReading.readingMMDC)
  return _msg;
}
inline void BreakerReading::set_allocated_readingmmdc(::commonmodule::ReadingMMDC* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.readingmmdc_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }

  _impl_.readingmmdc_ = reinterpret_cast<::commonmodule::ReadingMMDC*>(value);
  // @@protoc_insertion_point(field_set_allocated:breakermodule.BreakerReading.readingMMDC)
}

// -------------------------------------------------------------------

// BreakerReadingProfile

// .commonmodule.ReadingMessageInfo readingMessageInfo = 1 [(.uml.option_parent_message) = true];
inline bool BreakerReadingProfile::has_readingmessageinfo() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.readingmessageinfo_ != nullptr);
  return value;
}
inline const ::commonmodule::ReadingMessageInfo& BreakerReadingProfile::_internal_readingmessageinfo() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::ReadingMessageInfo* p = _impl_.readingmessageinfo_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::ReadingMessageInfo&>(::commonmodule::_ReadingMessageInfo_default_instance_);
}
inline const ::commonmodule::ReadingMessageInfo& BreakerReadingProfile::readingmessageinfo() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:breakermodule.BreakerReadingProfile.readingMessageInfo)
  return _internal_readingmessageinfo();
}
inline void BreakerReadingProfile::unsafe_arena_set_allocated_readingmessageinfo(
    ::commonmodule::ReadingMessageInfo* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.readingmessageinfo_);
  }
  _impl_.readingmessageinfo_ = reinterpret_cast<::commonmodule::ReadingMessageInfo*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:breakermodule.BreakerReadingProfile.readingMessageInfo)
}
inline ::commonmodule::ReadingMessageInfo* PROTOBUF_NULLABLE BreakerReadingProfile::release_readingmessageinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::commonmodule::ReadingMessageInfo* released = _impl_.readingmessageinfo_;
  _impl_.readingmessageinfo_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::ReadingMessageInfo* PROTOBUF_NULLABLE BreakerReadingProfile::unsafe_arena_release_readingmessageinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:breakermodule.BreakerReadingProfile.readingMessageInfo)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::commonmodule::ReadingMessageInfo* temp = _impl_.readingmessageinfo_;
  _impl_.readingmessageinfo_ = nullptr;
  return temp;
}
inline ::commonmodule::ReadingMessageInfo* PROTOBUF_NONNULL BreakerReadingProfile::_internal_mutable_readingmessageinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.readingmessageinfo_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::ReadingMessageInfo>(GetArena());
    _impl_.readingmessageinfo_ = reinterpret_cast<::commonmodule::ReadingMessageInfo*>(p);
  }
  return _impl_.readingmessageinfo_;
}
inline ::commonmodule::ReadingMessageInfo* PROTOBUF_NONNULL BreakerReadingProfile::mutable_readingmessageinfo()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::commonmodule::ReadingMessageInfo* _msg = _internal_mutable_readingmessageinfo();
  // @@protoc_insertion_point(field_mutable:breakermodule.BreakerReadingProfile.readingMessageInfo)
  return _msg;
}
inline void BreakerReadingProfile::set_allocated_readingmessageinfo(::commonmodule::ReadingMessageInfo* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.readingmessageinfo_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.readingmessageinfo_ = reinterpret_cast<::commonmodule::ReadingMessageInfo*>(value);
  // @@protoc_insertion_point(field_set_allocated:breakermodule.BreakerReadingProfile.readingMessageInfo)
}

// .breakermodule.Breaker breaker = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
inline bool BreakerReadingProfile::has_breaker() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.breaker_ != nullptr);
  return value;
}
inline void BreakerReadingProfile::clear_breaker() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.breaker_ != nullptr) _impl_.breaker_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::breakermodule::Breaker& BreakerReadingProfile::_internal_breaker() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::breakermodule::Breaker* p = _impl_.breaker_;
  return p != nullptr ? *p : reinterpret_cast<const ::breakermodule::Breaker&>(::breakermodule::_Breaker_default_instance_);
}
inline const ::breakermodule::Breaker& BreakerReadingProfile::breaker() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:breakermodule.BreakerReadingProfile.breaker)
  return _internal_breaker();
}
inline void BreakerReadingProfile::unsafe_arena_set_allocated_breaker(
    ::breakermodule::Breaker* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.breaker_);
  }
  _impl_.breaker_ = reinterpret_cast<::breakermodule::Breaker*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:breakermodule.BreakerReadingProfile.breaker)
}
inline ::breakermodule::Breaker* PROTOBUF_NULLABLE BreakerReadingProfile::release_breaker() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::breakermodule::Breaker* released = _impl_.breaker_;
  _impl_.breaker_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::breakermodule::Breaker* PROTOBUF_NULLABLE BreakerReadingProfile::unsafe_arena_release_breaker() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:breakermodule.BreakerReadingProfile.breaker)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::breakermodule::Breaker* temp = _impl_.breaker_;
  _impl_.breaker_ = nullptr;
  return temp;
}
inline ::breakermodule::Breaker* PROTOBUF_NONNULL BreakerReadingProfile::_internal_mutable_breaker() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.breaker_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::breakermodule::Breaker>(GetArena());
    _impl_.breaker_ = reinterpret_cast<::breakermodule::Breaker*>(p);
  }
  return _impl_.breaker_;
}
inline ::breakermodule::Breaker* PROTOBUF_NONNULL BreakerReadingProfile::mutable_breaker()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::breakermodule::Breaker* _msg = _internal_mutable_breaker();
  // @@protoc_insertion_point(field_mutable:breakermodule.BreakerReadingProfile.breaker)
  return _msg;
}
inline void BreakerReadingProfile::set_allocated_breaker(::breakermodule::Breaker* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.breaker_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.breaker_ = reinterpret_cast<::breakermodule::Breaker*>(value);
  // @@protoc_insertion_point(field_set_allocated:breakermodule.BreakerReadingProfile.breaker)
}

// repeated .breakermodule.BreakerReading breakerReading = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1, (.uml.option_multiplicity_max) = 2];
inline int BreakerReadingProfile::_internal_breakerreading_size() const {
  return _internal_breakerreading().size();
}
inline int BreakerReadingProfile::breakerreading_size() const {
  return _internal_breakerreading_size();
}
inline void BreakerReadingProfile::clear_breakerreading() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.breakerreading_.Clear();
}
inline ::breakermodule::BreakerReading* PROTOBUF_NONNULL BreakerReadingProfile::mutable_breakerreading(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:breakermodule.BreakerReadingProfile.breakerReading)
  return _internal_mutable_breakerreading()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::breakermodule::BreakerReading>* PROTOBUF_NONNULL BreakerReadingProfile::mutable_breakerreading()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:breakermodule.BreakerReadingProfile.breakerReading)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_breakerreading();
}
inline const ::breakermodule::BreakerReading& BreakerReadingProfile::breakerreading(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:breakermodule.BreakerReadingProfile.breakerReading)
  return _internal_breakerreading().Get(index);
}
inline ::breakermodule::BreakerReading* PROTOBUF_NONNULL BreakerReadingProfile::add_breakerreading()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::breakermodule::BreakerReading* _add = _internal_mutable_breakerreading()->Add();
  // @@protoc_insertion_point(field_add:breakermodule.BreakerReadingProfile.breakerReading)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::breakermodule::BreakerReading>& BreakerReadingProfile::breakerreading() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:breakermodule.BreakerReadingProfile.breakerReading)
  return _internal_breakerreading();
}
inline const ::google::protobuf::RepeatedPtrField<::breakermodule::BreakerReading>&
BreakerReadingProfile::_internal_breakerreading() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.breakerreading_;
}
inline ::google::protobuf::RepeatedPtrField<::breakermodule::BreakerReading>* PROTOBUF_NONNULL
BreakerReadingProfile::_internal_mutable_breakerreading() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.breakerreading_;
}

// -------------------------------------------------------------------

// BreakerStatus

// .commonmodule.StatusValue statusValue = 1 [(.uml.option_parent_message) = true];
inline bool BreakerStatus::has_statusvalue() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.statusvalue_ != nullptr);
  return value;
}
inline const ::commonmodule::StatusValue& BreakerStatus::_internal_statusvalue() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::StatusValue* p = _impl_.statusvalue_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::StatusValue&>(::commonmodule::_StatusValue_default_instance_);
}
inline const ::commonmodule::StatusValue& BreakerStatus::statusvalue() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:breakermodule.BreakerStatus.statusValue)
  return _internal_statusvalue();
}
inline void BreakerStatus::unsafe_arena_set_allocated_statusvalue(
    ::commonmodule::StatusValue* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.statusvalue_);
  }
  _impl_.statusvalue_ = reinterpret_cast<::commonmodule::StatusValue*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:breakermodule.BreakerStatus.statusValue)
}
inline ::commonmodule::StatusValue* PROTOBUF_NULLABLE BreakerStatus::release_statusvalue() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::commonmodule::StatusValue* released = _impl_.statusvalue_;
  _impl_.statusvalue_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::StatusValue* PROTOBUF_NULLABLE BreakerStatus::unsafe_arena_release_statusvalue() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:breakermodule.BreakerStatus.statusValue)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::commonmodule::StatusValue* temp = _impl_.statusvalue_;
  _impl_.statusvalue_ = nullptr;
  return temp;
}
inline ::commonmodule::StatusValue* PROTOBUF_NONNULL BreakerStatus::_internal_mutable_statusvalue() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.statusvalue_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::StatusValue>(GetArena());
    _impl_.statusvalue_ = reinterpret_cast<::commonmodule::StatusValue*>(p);
  }
  return _impl_.statusvalue_;
}
inline ::commonmodule::StatusValue* PROTOBUF_NONNULL BreakerStatus::mutable_statusvalue()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::commonmodule::StatusValue* _msg = _internal_mutable_statusvalue();
  // @@protoc_insertion_point(field_mutable:breakermodule.BreakerStatus.statusValue)
  return _msg;
}
inline void BreakerStatus::set_allocated_statusvalue(::commonmodule::StatusValue* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.statusvalue_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.statusvalue_ = reinterpret_cast<::commonmodule::StatusValue*>(value);
  // @@protoc_insertion_point(field_set_allocated:breakermodule.BreakerStatus.statusValue)
}

// .commonmodule.StatusAndEventXCBR statusAndEventXCBR = 2;
inline bool BreakerStatus::has_statusandeventxcbr() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.statusandeventxcbr_ != nullptr);
  return value;
}
inline const ::commonmodule::StatusAndEventXCBR& BreakerStatus::_internal_statusandeventxcbr() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::StatusAndEventXCBR* p = _impl_.statusandeventxcbr_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::StatusAndEventXCBR&>(::commonmodule::_StatusAndEventXCBR_default_instance_);
}
inline const ::commonmodule::StatusAndEventXCBR& BreakerStatus::statusandeventxcbr() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:breakermodule.BreakerStatus.statusAndEventXCBR)
  return _internal_statusandeventxcbr();
}
inline void BreakerStatus::unsafe_arena_set_allocated_statusandeventxcbr(
    ::commonmodule::StatusAndEventXCBR* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.statusandeventxcbr_);
  }
  _impl_.statusandeventxcbr_ = reinterpret_cast<::commonmodule::StatusAndEventXCBR*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:breakermodule.BreakerStatus.statusAndEventXCBR)
}
inline ::commonmodule::StatusAndEventXCBR* PROTOBUF_NULLABLE BreakerStatus::release_statusandeventxcbr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::commonmodule::StatusAndEventXCBR* released = _impl_.statusandeventxcbr_;
  _impl_.statusandeventxcbr_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::StatusAndEventXCBR* PROTOBUF_NULLABLE BreakerStatus::unsafe_arena_release_statusandeventxcbr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:breakermodule.BreakerStatus.statusAndEventXCBR)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::commonmodule::StatusAndEventXCBR* temp = _impl_.statusandeventxcbr_;
  _impl_.statusandeventxcbr_ = nullptr;
  return temp;
}
inline ::commonmodule::StatusAndEventXCBR* PROTOBUF_NONNULL BreakerStatus::_internal_mutable_statusandeventxcbr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.statusandeventxcbr_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::StatusAndEventXCBR>(GetArena());
    _impl_.statusandeventxcbr_ = reinterpret_cast<::commonmodule::StatusAndEventXCBR*>(p);
  }
  return _impl_.statusandeventxcbr_;
}
inline ::commonmodule::StatusAndEventXCBR* PROTOBUF_NONNULL BreakerStatus::mutable_statusandeventxcbr()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::commonmodule::StatusAndEventXCBR* _msg = _internal_mutable_statusandeventxcbr();
  // @@protoc_insertion_point(field_mutable:breakermodule.BreakerStatus.statusAndEventXCBR)
  return _msg;
}
inline void BreakerStatus::set_allocated_statusandeventxcbr(::commonmodule::StatusAndEventXCBR* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.statusandeventxcbr_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.statusandeventxcbr_ = reinterpret_cast<::commonmodule::StatusAndEventXCBR*>(value);
  // @@protoc_insertion_point(field_set_allocated:breakermodule.BreakerStatus.statusAndEventXCBR)
}

// -------------------------------------------------------------------

// BreakerStatusProfile

// .commonmodule.StatusMessageInfo statusMessageInfo = 1 [(.uml.option_parent_message) = true];
inline bool BreakerStatusProfile::has_statusmessageinfo() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.statusmessageinfo_ != nullptr);
  return value;
}
inline const ::commonmodule::StatusMessageInfo& BreakerStatusProfile::_internal_statusmessageinfo() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::StatusMessageInfo* p = _impl_.statusmessageinfo_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::StatusMessageInfo&>(::commonmodule::_StatusMessageInfo_default_instance_);
}
inline const ::commonmodule::StatusMessageInfo& BreakerStatusProfile::statusmessageinfo() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:breakermodule.BreakerStatusProfile.statusMessageInfo)
  return _internal_statusmessageinfo();
}
inline void BreakerStatusProfile::unsafe_arena_set_allocated_statusmessageinfo(
    ::commonmodule::StatusMessageInfo* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.statusmessageinfo_);
  }
  _impl_.statusmessageinfo_ = reinterpret_cast<::commonmodule::StatusMessageInfo*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:breakermodule.BreakerStatusProfile.statusMessageInfo)
}
inline ::commonmodule::StatusMessageInfo* PROTOBUF_NULLABLE BreakerStatusProfile::release_statusmessageinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::commonmodule::StatusMessageInfo* released = _impl_.statusmessageinfo_;
  _impl_.statusmessageinfo_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::StatusMessageInfo* PROTOBUF_NULLABLE BreakerStatusProfile::unsafe_arena_release_statusmessageinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:breakermodule.BreakerStatusProfile.statusMessageInfo)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::commonmodule::StatusMessageInfo* temp = _impl_.statusmessageinfo_;
  _impl_.statusmessageinfo_ = nullptr;
  return temp;
}
inline ::commonmodule::StatusMessageInfo* PROTOBUF_NONNULL BreakerStatusProfile::_internal_mutable_statusmessageinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.statusmessageinfo_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::StatusMessageInfo>(GetArena());
    _impl_.statusmessageinfo_ = reinterpret_cast<::commonmodule::StatusMessageInfo*>(p);
  }
  return _impl_.statusmessageinfo_;
}
inline ::commonmodule::StatusMessageInfo* PROTOBUF_NONNULL BreakerStatusProfile::mutable_statusmessageinfo()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::commonmodule::StatusMessageInfo* _msg = _internal_mutable_statusmessageinfo();
  // @@protoc_insertion_point(field_mutable:breakermodule.BreakerStatusProfile.statusMessageInfo)
  return _msg;
}
inline void BreakerStatusProfile::set_allocated_statusmessageinfo(::commonmodule::StatusMessageInfo* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.statusmessageinfo_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.statusmessageinfo_ = reinterpret_cast<::commonmodule::StatusMessageInfo*>(value);
  // @@protoc_insertion_point(field_set_allocated:breakermodule.BreakerStatusProfile.statusMessageInfo)
}

// .breakermodule.Breaker breaker = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
inline bool BreakerStatusProfile::has_breaker() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.breaker_ != nullptr);
  return value;
}
inline void BreakerStatusProfile::clear_breaker() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.breaker_ != nullptr) _impl_.breaker_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::breakermodule::Breaker& BreakerStatusProfile::_internal_breaker() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::breakermodule::Breaker* p = _impl_.breaker_;
  return p != nullptr ? *p : reinterpret_cast<const ::breakermodule::Breaker&>(::breakermodule::_Breaker_default_instance_);
}
inline const ::breakermodule::Breaker& BreakerStatusProfile::breaker() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:breakermodule.BreakerStatusProfile.breaker)
  return _internal_breaker();
}
inline void BreakerStatusProfile::unsafe_arena_set_allocated_breaker(
    ::breakermodule::Breaker* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.breaker_);
  }
  _impl_.breaker_ = reinterpret_cast<::breakermodule::Breaker*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:breakermodule.BreakerStatusProfile.breaker)
}
inline ::breakermodule::Breaker* PROTOBUF_NULLABLE BreakerStatusProfile::release_breaker() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::breakermodule::Breaker* released = _impl_.breaker_;
  _impl_.breaker_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::breakermodule::Breaker* PROTOBUF_NULLABLE BreakerStatusProfile::unsafe_arena_release_breaker() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:breakermodule.BreakerStatusProfile.breaker)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::breakermodule::Breaker* temp = _impl_.breaker_;
  _impl_.breaker_ = nullptr;
  return temp;
}
inline ::breakermodule::Breaker* PROTOBUF_NONNULL BreakerStatusProfile::_internal_mutable_breaker() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.breaker_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::breakermodule::Breaker>(GetArena());
    _impl_.breaker_ = reinterpret_cast<::breakermodule::Breaker*>(p);
  }
  return _impl_.breaker_;
}
inline ::breakermodule::Breaker* PROTOBUF_NONNULL BreakerStatusProfile::mutable_breaker()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::breakermodule::Breaker* _msg = _internal_mutable_breaker();
  // @@protoc_insertion_point(field_mutable:breakermodule.BreakerStatusProfile.breaker)
  return _msg;
}
inline void BreakerStatusProfile::set_allocated_breaker(::breakermodule::Breaker* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.breaker_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.breaker_ = reinterpret_cast<::breakermodule::Breaker*>(value);
  // @@protoc_insertion_point(field_set_allocated:breakermodule.BreakerStatusProfile.breaker)
}

// .breakermodule.BreakerStatus breakerStatus = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
inline bool BreakerStatusProfile::has_breakerstatus() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.breakerstatus_ != nullptr);
  return value;
}
inline void BreakerStatusProfile::clear_breakerstatus() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.breakerstatus_ != nullptr) _impl_.breakerstatus_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::breakermodule::BreakerStatus& BreakerStatusProfile::_internal_breakerstatus() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::breakermodule::BreakerStatus* p = _impl_.breakerstatus_;
  return p != nullptr ? *p : reinterpret_cast<const ::breakermodule::BreakerStatus&>(::breakermodule::_BreakerStatus_default_instance_);
}
inline const ::breakermodule::BreakerStatus& BreakerStatusProfile::breakerstatus() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:breakermodule.BreakerStatusProfile.breakerStatus)
  return _internal_breakerstatus();
}
inline void BreakerStatusProfile::unsafe_arena_set_allocated_breakerstatus(
    ::breakermodule::BreakerStatus* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.breakerstatus_);
  }
  _impl_.breakerstatus_ = reinterpret_cast<::breakermodule::BreakerStatus*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:breakermodule.BreakerStatusProfile.breakerStatus)
}
inline ::breakermodule::BreakerStatus* PROTOBUF_NULLABLE BreakerStatusProfile::release_breakerstatus() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::breakermodule::BreakerStatus* released = _impl_.breakerstatus_;
  _impl_.breakerstatus_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::breakermodule::BreakerStatus* PROTOBUF_NULLABLE BreakerStatusProfile::unsafe_arena_release_breakerstatus() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:breakermodule.BreakerStatusProfile.breakerStatus)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::breakermodule::BreakerStatus* temp = _impl_.breakerstatus_;
  _impl_.breakerstatus_ = nullptr;
  return temp;
}
inline ::breakermodule::BreakerStatus* PROTOBUF_NONNULL BreakerStatusProfile::_internal_mutable_breakerstatus() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.breakerstatus_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::breakermodule::BreakerStatus>(GetArena());
    _impl_.breakerstatus_ = reinterpret_cast<::breakermodule::BreakerStatus*>(p);
  }
  return _impl_.breakerstatus_;
}
inline ::breakermodule::BreakerStatus* PROTOBUF_NONNULL BreakerStatusProfile::mutable_breakerstatus()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::breakermodule::BreakerStatus* _msg = _internal_mutable_breakerstatus();
  // @@protoc_insertion_point(field_mutable:breakermodule.BreakerStatusProfile.breakerStatus)
  return _msg;
}
inline void BreakerStatusProfile::set_allocated_breakerstatus(::breakermodule::BreakerStatus* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.breakerstatus_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.breakerstatus_ = reinterpret_cast<::breakermodule::BreakerStatus*>(value);
  // @@protoc_insertion_point(field_set_allocated:breakermodule.BreakerStatusProfile.breakerStatus)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace breakermodule


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // breakermodule_2fbreakermodule_2eproto_2epb_2eh
