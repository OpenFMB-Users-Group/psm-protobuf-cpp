// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: commonmodule/commonmodule.proto

#include "commonmodule/commonmodule.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_commonmodule_2fcommonmodule_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ControlDPC_commonmodule_2fcommonmodule_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_commonmodule_2fcommonmodule_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ControlTimestamp_commonmodule_2fcommonmodule_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_commonmodule_2fcommonmodule_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DetailQual_commonmodule_2fcommonmodule_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_commonmodule_2fcommonmodule_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ENG_CalcMethodKind_commonmodule_2fcommonmodule_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_commonmodule_2fcommonmodule_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ENG_PFSignKind_commonmodule_2fcommonmodule_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_commonmodule_2fcommonmodule_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ENG_ScheduleParameter_commonmodule_2fcommonmodule_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_commonmodule_2fcommonmodule_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Optional_PhaseCodeKind_commonmodule_2fcommonmodule_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_commonmodule_2fcommonmodule_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Optional_UnitMultiplierKind_commonmodule_2fcommonmodule_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_commonmodule_2fcommonmodule_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Optional_UnitSymbolKind_commonmodule_2fcommonmodule_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_commonmodule_2fcommonmodule_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TimeQuality_commonmodule_2fcommonmodule_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_commonmodule_2fcommonmodule_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ConductingEquipment_commonmodule_2fcommonmodule_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_commonmodule_2fcommonmodule_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ControlScheduleFSCH_commonmodule_2fcommonmodule_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_commonmodule_2fcommonmodule_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_DEL_commonmodule_2fcommonmodule_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_commonmodule_2fcommonmodule_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ENS_HealthKind_commonmodule_2fcommonmodule_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_commonmodule_2fcommonmodule_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ForecastValueSource_commonmodule_2fcommonmodule_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_commonmodule_2fcommonmodule_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_IdentifiedObject_commonmodule_2fcommonmodule_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_commonmodule_2fcommonmodule_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_LogicalNodeForControl_commonmodule_2fcommonmodule_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_commonmodule_2fcommonmodule_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_LogicalNode_commonmodule_2fcommonmodule_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_commonmodule_2fcommonmodule_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_NamedObject_commonmodule_2fcommonmodule_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_commonmodule_2fcommonmodule_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Quality_commonmodule_2fcommonmodule_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_commonmodule_2fcommonmodule_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ScheduleCSG_commonmodule_2fcommonmodule_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_commonmodule_2fcommonmodule_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_SwitchCSG_commonmodule_2fcommonmodule_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_commonmodule_2fcommonmodule_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Timestamp_commonmodule_2fcommonmodule_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_commonmodule_2fcommonmodule_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Unit_commonmodule_2fcommonmodule_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_commonmodule_2fcommonmodule_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Vector_commonmodule_2fcommonmodule_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_commonmodule_2fcommonmodule_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_WYE_commonmodule_2fcommonmodule_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_commonmodule_2fcommonmodule_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_AnalogueValueCtl_commonmodule_2fcommonmodule_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_commonmodule_2fcommonmodule_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_AnalogueValue_commonmodule_2fcommonmodule_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_commonmodule_2fcommonmodule_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_ENS_BehaviourModeKind_commonmodule_2fcommonmodule_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_commonmodule_2fcommonmodule_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_ENS_DynamicTestKind_commonmodule_2fcommonmodule_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_commonmodule_2fcommonmodule_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_MessageInfo_commonmodule_2fcommonmodule_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_commonmodule_2fcommonmodule_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_ReadingMMTN_commonmodule_2fcommonmodule_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_commonmodule_2fcommonmodule_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_SchedulePoint_commonmodule_2fcommonmodule_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_commonmodule_2fcommonmodule_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_StatusDPS_commonmodule_2fcommonmodule_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_commonmodule_2fcommonmodule_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_StatusSPS_commonmodule_2fcommonmodule_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_commonmodule_2fcommonmodule_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_SwitchPoint_commonmodule_2fcommonmodule_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_commonmodule_2fcommonmodule_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_Terminal_commonmodule_2fcommonmodule_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_commonmodule_2fcommonmodule_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_VSS_commonmodule_2fcommonmodule_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_commonmodule_2fcommonmodule_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_ACDCTerminal_commonmodule_2fcommonmodule_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_commonmodule_2fcommonmodule_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_BCR_commonmodule_2fcommonmodule_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_commonmodule_2fcommonmodule_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_LogicalNodeForEventAndStatus_commonmodule_2fcommonmodule_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_commonmodule_2fcommonmodule_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_StatusINS_commonmodule_2fcommonmodule_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_commonmodule_2fcommonmodule_2eproto ::google::protobuf::internal::SCCInfo<4> scc_info_CMV_commonmodule_2fcommonmodule_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_commonmodule_2fcommonmodule_2eproto ::google::protobuf::internal::SCCInfo<4> scc_info_MV_commonmodule_2fcommonmodule_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fwrappers_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_BoolValue_google_2fprotobuf_2fwrappers_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fwrappers_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_FloatValue_google_2fprotobuf_2fwrappers_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fwrappers_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Int32Value_google_2fprotobuf_2fwrappers_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fwrappers_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Int64Value_google_2fprotobuf_2fwrappers_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fwrappers_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_StringValue_google_2fprotobuf_2fwrappers_2eproto;
namespace commonmodule {
class IdentifiedObjectDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<IdentifiedObject> _instance;
} _IdentifiedObject_default_instance_;
class ACDCTerminalDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ACDCTerminal> _instance;
} _ACDCTerminal_default_instance_;
class Optional_UnitSymbolKindDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Optional_UnitSymbolKind> _instance;
} _Optional_UnitSymbolKind_default_instance_;
class Optional_UnitMultiplierKindDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Optional_UnitMultiplierKind> _instance;
} _Optional_UnitMultiplierKind_default_instance_;
class ActivePowerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ActivePower> _instance;
} _ActivePower_default_instance_;
class Optional_PhaseCodeKindDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Optional_PhaseCodeKind> _instance;
} _Optional_PhaseCodeKind_default_instance_;
class AnalogueValueDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AnalogueValue> _instance;
} _AnalogueValue_default_instance_;
class Optional_ValidityKindDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Optional_ValidityKind> _instance;
} _Optional_ValidityKind_default_instance_;
class DetailQualDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DetailQual> _instance;
} _DetailQual_default_instance_;
class Optional_SourceKindDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Optional_SourceKind> _instance;
} _Optional_SourceKind_default_instance_;
class QualityDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Quality> _instance;
} _Quality_default_instance_;
class Optional_TimeAccuracyKindDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Optional_TimeAccuracyKind> _instance;
} _Optional_TimeAccuracyKind_default_instance_;
class TimeQualityDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TimeQuality> _instance;
} _TimeQuality_default_instance_;
class TimestampDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Timestamp> _instance;
} _Timestamp_default_instance_;
class UnitDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Unit> _instance;
} _Unit_default_instance_;
class MVDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MV> _instance;
} _MV_default_instance_;
class LogicalNodeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LogicalNode> _instance;
} _LogicalNode_default_instance_;
class AnalogStatusGGIODefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AnalogStatusGGIO> _instance;
} _AnalogStatusGGIO_default_instance_;
class AnalogueValueCtlDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AnalogueValueCtl> _instance;
} _AnalogueValueCtl_default_instance_;
class NamedObjectDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NamedObject> _instance;
} _NamedObject_default_instance_;
class ApplicationSystemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ApplicationSystem> _instance;
} _ApplicationSystem_default_instance_;
class ASGDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ASG> _instance;
} _ASG_default_instance_;
class BCRDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BCR> _instance;
} _BCR_default_instance_;
class StatusSPSDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StatusSPS> _instance;
} _StatusSPS_default_instance_;
class BooleanStatusGGIODefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BooleanStatusGGIO> _instance;
} _BooleanStatusGGIO_default_instance_;
class CheckConditionsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CheckConditions> _instance;
} _CheckConditions_default_instance_;
class VectorDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Vector> _instance;
} _Vector_default_instance_;
class CMVDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMV> _instance;
} _CMV_default_instance_;
class ConductingEquipmentDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConductingEquipment> _instance;
} _ConductingEquipment_default_instance_;
class TerminalDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Terminal> _instance;
} _Terminal_default_instance_;
class ConductingEquipmentTerminalReadingDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConductingEquipmentTerminalReading> _instance;
} _ConductingEquipmentTerminalReading_default_instance_;
class ControlDPCDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ControlDPC> _instance;
} _ControlDPC_default_instance_;
class ControlTimestampDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ControlTimestamp> _instance;
} _ControlTimestamp_default_instance_;
class Optional_ScheduleParameterKindDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Optional_ScheduleParameterKind> _instance;
} _Optional_ScheduleParameterKind_default_instance_;
class ENG_ScheduleParameterDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ENG_ScheduleParameter> _instance;
} _ENG_ScheduleParameter_default_instance_;
class SchedulePointDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SchedulePoint> _instance;
} _SchedulePoint_default_instance_;
class ScheduleCSGDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ScheduleCSG> _instance;
} _ScheduleCSG_default_instance_;
class ControlScheduleFSCHDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ControlScheduleFSCH> _instance;
} _ControlScheduleFSCH_default_instance_;
class LogicalNodeForControlDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LogicalNodeForControl> _instance;
} _LogicalNodeForControl_default_instance_;
class ControlFSCCDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ControlFSCC> _instance;
} _ControlFSCC_default_instance_;
class ControlINGDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ControlING> _instance;
} _ControlING_default_instance_;
class ControlISCDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ControlISC> _instance;
} _ControlISC_default_instance_;
class MessageInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MessageInfo> _instance;
} _MessageInfo_default_instance_;
class ControlMessageInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ControlMessageInfo> _instance;
} _ControlMessageInfo_default_instance_;
class ControlSPCDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ControlSPC> _instance;
} _ControlSPC_default_instance_;
class ControlValueDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ControlValue> _instance;
} _ControlValue_default_instance_;
class DateTimeIntervalDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DateTimeInterval> _instance;
} _DateTimeInterval_default_instance_;
class DELDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DEL> _instance;
} _DEL_default_instance_;
class EnergyConsumerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EnergyConsumer> _instance;
} _EnergyConsumer_default_instance_;
class Optional_CalcMethodKindDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Optional_CalcMethodKind> _instance;
} _Optional_CalcMethodKind_default_instance_;
class ENG_CalcMethodKindDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ENG_CalcMethodKind> _instance;
} _ENG_CalcMethodKind_default_instance_;
class Optional_GridConnectModeKindDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Optional_GridConnectModeKind> _instance;
} _Optional_GridConnectModeKind_default_instance_;
class ENG_GridConnectModeKindDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ENG_GridConnectModeKind> _instance;
} _ENG_GridConnectModeKind_default_instance_;
class Optional_PFSignKindDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Optional_PFSignKind> _instance;
} _Optional_PFSignKind_default_instance_;
class ENG_PFSignKindDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ENG_PFSignKind> _instance;
} _ENG_PFSignKind_default_instance_;
class Optional_BehaviourModeKindDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Optional_BehaviourModeKind> _instance;
} _Optional_BehaviourModeKind_default_instance_;
class ENS_BehaviourModeKindDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ENS_BehaviourModeKind> _instance;
} _ENS_BehaviourModeKind_default_instance_;
class Optional_DERGeneratorStateKindDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Optional_DERGeneratorStateKind> _instance;
} _Optional_DERGeneratorStateKind_default_instance_;
class ENS_DERGeneratorStateKindDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ENS_DERGeneratorStateKind> _instance;
} _ENS_DERGeneratorStateKind_default_instance_;
class Optional_DynamicTestKindDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Optional_DynamicTestKind> _instance;
} _Optional_DynamicTestKind_default_instance_;
class ENS_DynamicTestKindDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ENS_DynamicTestKind> _instance;
} _ENS_DynamicTestKind_default_instance_;
class ENS_GridConnectModeKindDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ENS_GridConnectModeKind> _instance;
} _ENS_GridConnectModeKind_default_instance_;
class Optional_HealthKindDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Optional_HealthKind> _instance;
} _Optional_HealthKind_default_instance_;
class ENS_HealthKindDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ENS_HealthKind> _instance;
} _ENS_HealthKind_default_instance_;
class ESSDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ESS> _instance;
} _ESS_default_instance_;
class EventMessageInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EventMessageInfo> _instance;
} _EventMessageInfo_default_instance_;
class EventValueDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EventValue> _instance;
} _EventValue_default_instance_;
class ForecastValueSourceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ForecastValueSource> _instance;
} _ForecastValueSource_default_instance_;
class ForecastIEDDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ForecastIED> _instance;
} _ForecastIED_default_instance_;
class ForecastValueDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ForecastValue> _instance;
} _ForecastValue_default_instance_;
class IEDDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<IED> _instance;
} _IED_default_instance_;
class StatusINSDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StatusINS> _instance;
} _StatusINS_default_instance_;
class IntegerStatusGGIODefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<IntegerStatusGGIO> _instance;
} _IntegerStatusGGIO_default_instance_;
class LogicalNodeForEventAndStatusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LogicalNodeForEventAndStatus> _instance;
} _LogicalNodeForEventAndStatus_default_instance_;
class MeasurementValueDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MeasurementValue> _instance;
} _MeasurementValue_default_instance_;
class MeterDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Meter> _instance;
} _Meter_default_instance_;
class OptimizationMessageInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OptimizationMessageInfo> _instance;
} _OptimizationMessageInfo_default_instance_;
class ReadingMMTNDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReadingMMTN> _instance;
} _ReadingMMTN_default_instance_;
class PhaseMMTNDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PhaseMMTN> _instance;
} _PhaseMMTN_default_instance_;
class RampRateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RampRate> _instance;
} _RampRate_default_instance_;
class ReadingMessageInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReadingMessageInfo> _instance;
} _ReadingMessageInfo_default_instance_;
class ReadingMMTRDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReadingMMTR> _instance;
} _ReadingMMTR_default_instance_;
class WYEDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WYE> _instance;
} _WYE_default_instance_;
class ReadingMMXUDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReadingMMXU> _instance;
} _ReadingMMXU_default_instance_;
class Optional_DbPosKindDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Optional_DbPosKind> _instance;
} _Optional_DbPosKind_default_instance_;
class StatusDPSDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StatusDPS> _instance;
} _StatusDPS_default_instance_;
class StatusAndEventXCBRDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StatusAndEventXCBR> _instance;
} _StatusAndEventXCBR_default_instance_;
class StatusISCDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StatusISC> _instance;
} _StatusISC_default_instance_;
class StatusMessageInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StatusMessageInfo> _instance;
} _StatusMessageInfo_default_instance_;
class StatusSPCDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StatusSPC> _instance;
} _StatusSPC_default_instance_;
class StatusValueDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StatusValue> _instance;
} _StatusValue_default_instance_;
class VSSDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VSS> _instance;
} _VSS_default_instance_;
class StringStatusGGIODefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StringStatusGGIO> _instance;
} _StringStatusGGIO_default_instance_;
class SwitchPointDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SwitchPoint> _instance;
} _SwitchPoint_default_instance_;
class SwitchCSGDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SwitchCSG> _instance;
} _SwitchCSG_default_instance_;
class SwitchControlScheduleFSCHDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SwitchControlScheduleFSCH> _instance;
} _SwitchControlScheduleFSCH_default_instance_;
class Optional_StateKindDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Optional_StateKind> _instance;
} _Optional_StateKind_default_instance_;
}  // namespace commonmodule
static void InitDefaultsIdentifiedObject_commonmodule_2fcommonmodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::commonmodule::_IdentifiedObject_default_instance_;
    new (ptr) ::commonmodule::IdentifiedObject();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::commonmodule::IdentifiedObject::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_IdentifiedObject_commonmodule_2fcommonmodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsIdentifiedObject_commonmodule_2fcommonmodule_2eproto}, {
      &scc_info_StringValue_google_2fprotobuf_2fwrappers_2eproto.base,}};

static void InitDefaultsACDCTerminal_commonmodule_2fcommonmodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::commonmodule::_ACDCTerminal_default_instance_;
    new (ptr) ::commonmodule::ACDCTerminal();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::commonmodule::ACDCTerminal::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_ACDCTerminal_commonmodule_2fcommonmodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsACDCTerminal_commonmodule_2fcommonmodule_2eproto}, {
      &scc_info_IdentifiedObject_commonmodule_2fcommonmodule_2eproto.base,
      &scc_info_BoolValue_google_2fprotobuf_2fwrappers_2eproto.base,
      &scc_info_Int32Value_google_2fprotobuf_2fwrappers_2eproto.base,}};

static void InitDefaultsOptional_UnitSymbolKind_commonmodule_2fcommonmodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::commonmodule::_Optional_UnitSymbolKind_default_instance_;
    new (ptr) ::commonmodule::Optional_UnitSymbolKind();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::commonmodule::Optional_UnitSymbolKind::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Optional_UnitSymbolKind_commonmodule_2fcommonmodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsOptional_UnitSymbolKind_commonmodule_2fcommonmodule_2eproto}, {}};

static void InitDefaultsOptional_UnitMultiplierKind_commonmodule_2fcommonmodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::commonmodule::_Optional_UnitMultiplierKind_default_instance_;
    new (ptr) ::commonmodule::Optional_UnitMultiplierKind();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::commonmodule::Optional_UnitMultiplierKind::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Optional_UnitMultiplierKind_commonmodule_2fcommonmodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsOptional_UnitMultiplierKind_commonmodule_2fcommonmodule_2eproto}, {}};

static void InitDefaultsActivePower_commonmodule_2fcommonmodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::commonmodule::_ActivePower_default_instance_;
    new (ptr) ::commonmodule::ActivePower();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::commonmodule::ActivePower::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_ActivePower_commonmodule_2fcommonmodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsActivePower_commonmodule_2fcommonmodule_2eproto}, {
      &scc_info_Optional_UnitMultiplierKind_commonmodule_2fcommonmodule_2eproto.base,
      &scc_info_Optional_UnitSymbolKind_commonmodule_2fcommonmodule_2eproto.base,
      &scc_info_FloatValue_google_2fprotobuf_2fwrappers_2eproto.base,}};

static void InitDefaultsOptional_PhaseCodeKind_commonmodule_2fcommonmodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::commonmodule::_Optional_PhaseCodeKind_default_instance_;
    new (ptr) ::commonmodule::Optional_PhaseCodeKind();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::commonmodule::Optional_PhaseCodeKind::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Optional_PhaseCodeKind_commonmodule_2fcommonmodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsOptional_PhaseCodeKind_commonmodule_2fcommonmodule_2eproto}, {}};

static void InitDefaultsAnalogueValue_commonmodule_2fcommonmodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::commonmodule::_AnalogueValue_default_instance_;
    new (ptr) ::commonmodule::AnalogueValue();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::commonmodule::AnalogueValue::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_AnalogueValue_commonmodule_2fcommonmodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsAnalogueValue_commonmodule_2fcommonmodule_2eproto}, {
      &scc_info_FloatValue_google_2fprotobuf_2fwrappers_2eproto.base,
      &scc_info_Int32Value_google_2fprotobuf_2fwrappers_2eproto.base,}};

static void InitDefaultsOptional_ValidityKind_commonmodule_2fcommonmodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::commonmodule::_Optional_ValidityKind_default_instance_;
    new (ptr) ::commonmodule::Optional_ValidityKind();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::commonmodule::Optional_ValidityKind::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Optional_ValidityKind_commonmodule_2fcommonmodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsOptional_ValidityKind_commonmodule_2fcommonmodule_2eproto}, {}};

static void InitDefaultsDetailQual_commonmodule_2fcommonmodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::commonmodule::_DetailQual_default_instance_;
    new (ptr) ::commonmodule::DetailQual();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::commonmodule::DetailQual::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DetailQual_commonmodule_2fcommonmodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDetailQual_commonmodule_2fcommonmodule_2eproto}, {}};

static void InitDefaultsOptional_SourceKind_commonmodule_2fcommonmodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::commonmodule::_Optional_SourceKind_default_instance_;
    new (ptr) ::commonmodule::Optional_SourceKind();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::commonmodule::Optional_SourceKind::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Optional_SourceKind_commonmodule_2fcommonmodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsOptional_SourceKind_commonmodule_2fcommonmodule_2eproto}, {}};

static void InitDefaultsQuality_commonmodule_2fcommonmodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::commonmodule::_Quality_default_instance_;
    new (ptr) ::commonmodule::Quality();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::commonmodule::Quality::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Quality_commonmodule_2fcommonmodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsQuality_commonmodule_2fcommonmodule_2eproto}, {
      &scc_info_DetailQual_commonmodule_2fcommonmodule_2eproto.base,}};

static void InitDefaultsOptional_TimeAccuracyKind_commonmodule_2fcommonmodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::commonmodule::_Optional_TimeAccuracyKind_default_instance_;
    new (ptr) ::commonmodule::Optional_TimeAccuracyKind();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::commonmodule::Optional_TimeAccuracyKind::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Optional_TimeAccuracyKind_commonmodule_2fcommonmodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsOptional_TimeAccuracyKind_commonmodule_2fcommonmodule_2eproto}, {}};

static void InitDefaultsTimeQuality_commonmodule_2fcommonmodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::commonmodule::_TimeQuality_default_instance_;
    new (ptr) ::commonmodule::TimeQuality();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::commonmodule::TimeQuality::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TimeQuality_commonmodule_2fcommonmodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTimeQuality_commonmodule_2fcommonmodule_2eproto}, {}};

static void InitDefaultsTimestamp_commonmodule_2fcommonmodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::commonmodule::_Timestamp_default_instance_;
    new (ptr) ::commonmodule::Timestamp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::commonmodule::Timestamp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Timestamp_commonmodule_2fcommonmodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTimestamp_commonmodule_2fcommonmodule_2eproto}, {
      &scc_info_TimeQuality_commonmodule_2fcommonmodule_2eproto.base,}};

static void InitDefaultsUnit_commonmodule_2fcommonmodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::commonmodule::_Unit_default_instance_;
    new (ptr) ::commonmodule::Unit();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::commonmodule::Unit::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Unit_commonmodule_2fcommonmodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUnit_commonmodule_2fcommonmodule_2eproto}, {
      &scc_info_Optional_UnitMultiplierKind_commonmodule_2fcommonmodule_2eproto.base,}};

static void InitDefaultsMV_commonmodule_2fcommonmodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::commonmodule::_MV_default_instance_;
    new (ptr) ::commonmodule::MV();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::commonmodule::MV::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_MV_commonmodule_2fcommonmodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsMV_commonmodule_2fcommonmodule_2eproto}, {
      &scc_info_AnalogueValue_commonmodule_2fcommonmodule_2eproto.base,
      &scc_info_Quality_commonmodule_2fcommonmodule_2eproto.base,
      &scc_info_Timestamp_commonmodule_2fcommonmodule_2eproto.base,
      &scc_info_Unit_commonmodule_2fcommonmodule_2eproto.base,}};

static void InitDefaultsLogicalNode_commonmodule_2fcommonmodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::commonmodule::_LogicalNode_default_instance_;
    new (ptr) ::commonmodule::LogicalNode();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::commonmodule::LogicalNode::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_LogicalNode_commonmodule_2fcommonmodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsLogicalNode_commonmodule_2fcommonmodule_2eproto}, {
      &scc_info_IdentifiedObject_commonmodule_2fcommonmodule_2eproto.base,}};

static void InitDefaultsAnalogStatusGGIO_commonmodule_2fcommonmodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::commonmodule::_AnalogStatusGGIO_default_instance_;
    new (ptr) ::commonmodule::AnalogStatusGGIO();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::commonmodule::AnalogStatusGGIO::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_AnalogStatusGGIO_commonmodule_2fcommonmodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsAnalogStatusGGIO_commonmodule_2fcommonmodule_2eproto}, {
      &scc_info_LogicalNode_commonmodule_2fcommonmodule_2eproto.base,
      &scc_info_MV_commonmodule_2fcommonmodule_2eproto.base,
      &scc_info_Optional_PhaseCodeKind_commonmodule_2fcommonmodule_2eproto.base,}};

static void InitDefaultsAnalogueValueCtl_commonmodule_2fcommonmodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::commonmodule::_AnalogueValueCtl_default_instance_;
    new (ptr) ::commonmodule::AnalogueValueCtl();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::commonmodule::AnalogueValueCtl::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_AnalogueValueCtl_commonmodule_2fcommonmodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsAnalogueValueCtl_commonmodule_2fcommonmodule_2eproto}, {
      &scc_info_FloatValue_google_2fprotobuf_2fwrappers_2eproto.base,
      &scc_info_Int32Value_google_2fprotobuf_2fwrappers_2eproto.base,}};

static void InitDefaultsNamedObject_commonmodule_2fcommonmodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::commonmodule::_NamedObject_default_instance_;
    new (ptr) ::commonmodule::NamedObject();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::commonmodule::NamedObject::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_NamedObject_commonmodule_2fcommonmodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsNamedObject_commonmodule_2fcommonmodule_2eproto}, {
      &scc_info_StringValue_google_2fprotobuf_2fwrappers_2eproto.base,}};

static void InitDefaultsApplicationSystem_commonmodule_2fcommonmodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::commonmodule::_ApplicationSystem_default_instance_;
    new (ptr) ::commonmodule::ApplicationSystem();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::commonmodule::ApplicationSystem::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ApplicationSystem_commonmodule_2fcommonmodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsApplicationSystem_commonmodule_2fcommonmodule_2eproto}, {
      &scc_info_NamedObject_commonmodule_2fcommonmodule_2eproto.base,}};

static void InitDefaultsASG_commonmodule_2fcommonmodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::commonmodule::_ASG_default_instance_;
    new (ptr) ::commonmodule::ASG();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::commonmodule::ASG::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ASG_commonmodule_2fcommonmodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsASG_commonmodule_2fcommonmodule_2eproto}, {
      &scc_info_AnalogueValueCtl_commonmodule_2fcommonmodule_2eproto.base,
      &scc_info_Unit_commonmodule_2fcommonmodule_2eproto.base,}};

static void InitDefaultsBCR_commonmodule_2fcommonmodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::commonmodule::_BCR_default_instance_;
    new (ptr) ::commonmodule::BCR();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::commonmodule::BCR::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_BCR_commonmodule_2fcommonmodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsBCR_commonmodule_2fcommonmodule_2eproto}, {
      &scc_info_Quality_commonmodule_2fcommonmodule_2eproto.base,
      &scc_info_Timestamp_commonmodule_2fcommonmodule_2eproto.base,
      &scc_info_Optional_UnitSymbolKind_commonmodule_2fcommonmodule_2eproto.base,}};

static void InitDefaultsStatusSPS_commonmodule_2fcommonmodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::commonmodule::_StatusSPS_default_instance_;
    new (ptr) ::commonmodule::StatusSPS();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::commonmodule::StatusSPS::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_StatusSPS_commonmodule_2fcommonmodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsStatusSPS_commonmodule_2fcommonmodule_2eproto}, {
      &scc_info_Quality_commonmodule_2fcommonmodule_2eproto.base,
      &scc_info_Timestamp_commonmodule_2fcommonmodule_2eproto.base,}};

static void InitDefaultsBooleanStatusGGIO_commonmodule_2fcommonmodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::commonmodule::_BooleanStatusGGIO_default_instance_;
    new (ptr) ::commonmodule::BooleanStatusGGIO();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::commonmodule::BooleanStatusGGIO::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_BooleanStatusGGIO_commonmodule_2fcommonmodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsBooleanStatusGGIO_commonmodule_2fcommonmodule_2eproto}, {
      &scc_info_LogicalNode_commonmodule_2fcommonmodule_2eproto.base,
      &scc_info_StatusSPS_commonmodule_2fcommonmodule_2eproto.base,
      &scc_info_Optional_PhaseCodeKind_commonmodule_2fcommonmodule_2eproto.base,}};

static void InitDefaultsCheckConditions_commonmodule_2fcommonmodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::commonmodule::_CheckConditions_default_instance_;
    new (ptr) ::commonmodule::CheckConditions();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::commonmodule::CheckConditions::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CheckConditions_commonmodule_2fcommonmodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCheckConditions_commonmodule_2fcommonmodule_2eproto}, {
      &scc_info_BoolValue_google_2fprotobuf_2fwrappers_2eproto.base,}};

static void InitDefaultsVector_commonmodule_2fcommonmodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::commonmodule::_Vector_default_instance_;
    new (ptr) ::commonmodule::Vector();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::commonmodule::Vector::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Vector_commonmodule_2fcommonmodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsVector_commonmodule_2fcommonmodule_2eproto}, {
      &scc_info_AnalogueValue_commonmodule_2fcommonmodule_2eproto.base,}};

static void InitDefaultsCMV_commonmodule_2fcommonmodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::commonmodule::_CMV_default_instance_;
    new (ptr) ::commonmodule::CMV();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::commonmodule::CMV::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_CMV_commonmodule_2fcommonmodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsCMV_commonmodule_2fcommonmodule_2eproto}, {
      &scc_info_Vector_commonmodule_2fcommonmodule_2eproto.base,
      &scc_info_Quality_commonmodule_2fcommonmodule_2eproto.base,
      &scc_info_Timestamp_commonmodule_2fcommonmodule_2eproto.base,
      &scc_info_Unit_commonmodule_2fcommonmodule_2eproto.base,}};

static void InitDefaultsConductingEquipment_commonmodule_2fcommonmodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::commonmodule::_ConductingEquipment_default_instance_;
    new (ptr) ::commonmodule::ConductingEquipment();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::commonmodule::ConductingEquipment::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ConductingEquipment_commonmodule_2fcommonmodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsConductingEquipment_commonmodule_2fcommonmodule_2eproto}, {
      &scc_info_NamedObject_commonmodule_2fcommonmodule_2eproto.base,}};

static void InitDefaultsTerminal_commonmodule_2fcommonmodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::commonmodule::_Terminal_default_instance_;
    new (ptr) ::commonmodule::Terminal();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::commonmodule::Terminal::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Terminal_commonmodule_2fcommonmodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsTerminal_commonmodule_2fcommonmodule_2eproto}, {
      &scc_info_ACDCTerminal_commonmodule_2fcommonmodule_2eproto.base,
      &scc_info_Optional_PhaseCodeKind_commonmodule_2fcommonmodule_2eproto.base,}};

static void InitDefaultsConductingEquipmentTerminalReading_commonmodule_2fcommonmodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::commonmodule::_ConductingEquipmentTerminalReading_default_instance_;
    new (ptr) ::commonmodule::ConductingEquipmentTerminalReading();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::commonmodule::ConductingEquipmentTerminalReading::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ConductingEquipmentTerminalReading_commonmodule_2fcommonmodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsConductingEquipmentTerminalReading_commonmodule_2fcommonmodule_2eproto}, {
      &scc_info_Terminal_commonmodule_2fcommonmodule_2eproto.base,}};

static void InitDefaultsControlDPC_commonmodule_2fcommonmodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::commonmodule::_ControlDPC_default_instance_;
    new (ptr) ::commonmodule::ControlDPC();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::commonmodule::ControlDPC::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ControlDPC_commonmodule_2fcommonmodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsControlDPC_commonmodule_2fcommonmodule_2eproto}, {}};

static void InitDefaultsControlTimestamp_commonmodule_2fcommonmodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::commonmodule::_ControlTimestamp_default_instance_;
    new (ptr) ::commonmodule::ControlTimestamp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::commonmodule::ControlTimestamp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ControlTimestamp_commonmodule_2fcommonmodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsControlTimestamp_commonmodule_2fcommonmodule_2eproto}, {}};

static void InitDefaultsOptional_ScheduleParameterKind_commonmodule_2fcommonmodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::commonmodule::_Optional_ScheduleParameterKind_default_instance_;
    new (ptr) ::commonmodule::Optional_ScheduleParameterKind();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::commonmodule::Optional_ScheduleParameterKind::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Optional_ScheduleParameterKind_commonmodule_2fcommonmodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsOptional_ScheduleParameterKind_commonmodule_2fcommonmodule_2eproto}, {}};

static void InitDefaultsENG_ScheduleParameter_commonmodule_2fcommonmodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::commonmodule::_ENG_ScheduleParameter_default_instance_;
    new (ptr) ::commonmodule::ENG_ScheduleParameter();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::commonmodule::ENG_ScheduleParameter::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ENG_ScheduleParameter_commonmodule_2fcommonmodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsENG_ScheduleParameter_commonmodule_2fcommonmodule_2eproto}, {}};

static void InitDefaultsSchedulePoint_commonmodule_2fcommonmodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::commonmodule::_SchedulePoint_default_instance_;
    new (ptr) ::commonmodule::SchedulePoint();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::commonmodule::SchedulePoint::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_SchedulePoint_commonmodule_2fcommonmodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsSchedulePoint_commonmodule_2fcommonmodule_2eproto}, {
      &scc_info_ENG_ScheduleParameter_commonmodule_2fcommonmodule_2eproto.base,
      &scc_info_ControlTimestamp_commonmodule_2fcommonmodule_2eproto.base,}};

static void InitDefaultsScheduleCSG_commonmodule_2fcommonmodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::commonmodule::_ScheduleCSG_default_instance_;
    new (ptr) ::commonmodule::ScheduleCSG();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::commonmodule::ScheduleCSG::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ScheduleCSG_commonmodule_2fcommonmodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsScheduleCSG_commonmodule_2fcommonmodule_2eproto}, {
      &scc_info_SchedulePoint_commonmodule_2fcommonmodule_2eproto.base,}};

static void InitDefaultsControlScheduleFSCH_commonmodule_2fcommonmodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::commonmodule::_ControlScheduleFSCH_default_instance_;
    new (ptr) ::commonmodule::ControlScheduleFSCH();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::commonmodule::ControlScheduleFSCH::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ControlScheduleFSCH_commonmodule_2fcommonmodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsControlScheduleFSCH_commonmodule_2fcommonmodule_2eproto}, {
      &scc_info_ScheduleCSG_commonmodule_2fcommonmodule_2eproto.base,}};

static void InitDefaultsLogicalNodeForControl_commonmodule_2fcommonmodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::commonmodule::_LogicalNodeForControl_default_instance_;
    new (ptr) ::commonmodule::LogicalNodeForControl();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::commonmodule::LogicalNodeForControl::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_LogicalNodeForControl_commonmodule_2fcommonmodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsLogicalNodeForControl_commonmodule_2fcommonmodule_2eproto}, {
      &scc_info_LogicalNode_commonmodule_2fcommonmodule_2eproto.base,}};

static void InitDefaultsControlFSCC_commonmodule_2fcommonmodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::commonmodule::_ControlFSCC_default_instance_;
    new (ptr) ::commonmodule::ControlFSCC();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::commonmodule::ControlFSCC::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ControlFSCC_commonmodule_2fcommonmodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsControlFSCC_commonmodule_2fcommonmodule_2eproto}, {
      &scc_info_LogicalNodeForControl_commonmodule_2fcommonmodule_2eproto.base,
      &scc_info_ControlScheduleFSCH_commonmodule_2fcommonmodule_2eproto.base,}};

static void InitDefaultsControlING_commonmodule_2fcommonmodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::commonmodule::_ControlING_default_instance_;
    new (ptr) ::commonmodule::ControlING();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::commonmodule::ControlING::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ControlING_commonmodule_2fcommonmodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsControlING_commonmodule_2fcommonmodule_2eproto}, {
      &scc_info_Unit_commonmodule_2fcommonmodule_2eproto.base,}};

static void InitDefaultsControlISC_commonmodule_2fcommonmodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::commonmodule::_ControlISC_default_instance_;
    new (ptr) ::commonmodule::ControlISC();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::commonmodule::ControlISC::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ControlISC_commonmodule_2fcommonmodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsControlISC_commonmodule_2fcommonmodule_2eproto}, {}};

static void InitDefaultsMessageInfo_commonmodule_2fcommonmodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::commonmodule::_MessageInfo_default_instance_;
    new (ptr) ::commonmodule::MessageInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::commonmodule::MessageInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_MessageInfo_commonmodule_2fcommonmodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsMessageInfo_commonmodule_2fcommonmodule_2eproto}, {
      &scc_info_IdentifiedObject_commonmodule_2fcommonmodule_2eproto.base,
      &scc_info_Timestamp_commonmodule_2fcommonmodule_2eproto.base,}};

static void InitDefaultsControlMessageInfo_commonmodule_2fcommonmodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::commonmodule::_ControlMessageInfo_default_instance_;
    new (ptr) ::commonmodule::ControlMessageInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::commonmodule::ControlMessageInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ControlMessageInfo_commonmodule_2fcommonmodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsControlMessageInfo_commonmodule_2fcommonmodule_2eproto}, {
      &scc_info_MessageInfo_commonmodule_2fcommonmodule_2eproto.base,}};

static void InitDefaultsControlSPC_commonmodule_2fcommonmodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::commonmodule::_ControlSPC_default_instance_;
    new (ptr) ::commonmodule::ControlSPC();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::commonmodule::ControlSPC::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ControlSPC_commonmodule_2fcommonmodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsControlSPC_commonmodule_2fcommonmodule_2eproto}, {}};

static void InitDefaultsControlValue_commonmodule_2fcommonmodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::commonmodule::_ControlValue_default_instance_;
    new (ptr) ::commonmodule::ControlValue();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::commonmodule::ControlValue::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ControlValue_commonmodule_2fcommonmodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsControlValue_commonmodule_2fcommonmodule_2eproto}, {
      &scc_info_IdentifiedObject_commonmodule_2fcommonmodule_2eproto.base,
      &scc_info_BoolValue_google_2fprotobuf_2fwrappers_2eproto.base,}};

static void InitDefaultsDateTimeInterval_commonmodule_2fcommonmodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::commonmodule::_DateTimeInterval_default_instance_;
    new (ptr) ::commonmodule::DateTimeInterval();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::commonmodule::DateTimeInterval::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DateTimeInterval_commonmodule_2fcommonmodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDateTimeInterval_commonmodule_2fcommonmodule_2eproto}, {
      &scc_info_Int64Value_google_2fprotobuf_2fwrappers_2eproto.base,}};

static void InitDefaultsDEL_commonmodule_2fcommonmodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::commonmodule::_DEL_default_instance_;
    new (ptr) ::commonmodule::DEL();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::commonmodule::DEL::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DEL_commonmodule_2fcommonmodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDEL_commonmodule_2fcommonmodule_2eproto}, {
      &scc_info_CMV_commonmodule_2fcommonmodule_2eproto.base,}};

static void InitDefaultsEnergyConsumer_commonmodule_2fcommonmodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::commonmodule::_EnergyConsumer_default_instance_;
    new (ptr) ::commonmodule::EnergyConsumer();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::commonmodule::EnergyConsumer::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_EnergyConsumer_commonmodule_2fcommonmodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsEnergyConsumer_commonmodule_2fcommonmodule_2eproto}, {
      &scc_info_ConductingEquipment_commonmodule_2fcommonmodule_2eproto.base,
      &scc_info_StringValue_google_2fprotobuf_2fwrappers_2eproto.base,}};

static void InitDefaultsOptional_CalcMethodKind_commonmodule_2fcommonmodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::commonmodule::_Optional_CalcMethodKind_default_instance_;
    new (ptr) ::commonmodule::Optional_CalcMethodKind();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::commonmodule::Optional_CalcMethodKind::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Optional_CalcMethodKind_commonmodule_2fcommonmodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsOptional_CalcMethodKind_commonmodule_2fcommonmodule_2eproto}, {}};

static void InitDefaultsENG_CalcMethodKind_commonmodule_2fcommonmodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::commonmodule::_ENG_CalcMethodKind_default_instance_;
    new (ptr) ::commonmodule::ENG_CalcMethodKind();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::commonmodule::ENG_CalcMethodKind::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ENG_CalcMethodKind_commonmodule_2fcommonmodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsENG_CalcMethodKind_commonmodule_2fcommonmodule_2eproto}, {}};

static void InitDefaultsOptional_GridConnectModeKind_commonmodule_2fcommonmodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::commonmodule::_Optional_GridConnectModeKind_default_instance_;
    new (ptr) ::commonmodule::Optional_GridConnectModeKind();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::commonmodule::Optional_GridConnectModeKind::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Optional_GridConnectModeKind_commonmodule_2fcommonmodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsOptional_GridConnectModeKind_commonmodule_2fcommonmodule_2eproto}, {}};

static void InitDefaultsENG_GridConnectModeKind_commonmodule_2fcommonmodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::commonmodule::_ENG_GridConnectModeKind_default_instance_;
    new (ptr) ::commonmodule::ENG_GridConnectModeKind();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::commonmodule::ENG_GridConnectModeKind::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ENG_GridConnectModeKind_commonmodule_2fcommonmodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsENG_GridConnectModeKind_commonmodule_2fcommonmodule_2eproto}, {
      &scc_info_StringValue_google_2fprotobuf_2fwrappers_2eproto.base,}};

static void InitDefaultsOptional_PFSignKind_commonmodule_2fcommonmodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::commonmodule::_Optional_PFSignKind_default_instance_;
    new (ptr) ::commonmodule::Optional_PFSignKind();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::commonmodule::Optional_PFSignKind::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Optional_PFSignKind_commonmodule_2fcommonmodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsOptional_PFSignKind_commonmodule_2fcommonmodule_2eproto}, {}};

static void InitDefaultsENG_PFSignKind_commonmodule_2fcommonmodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::commonmodule::_ENG_PFSignKind_default_instance_;
    new (ptr) ::commonmodule::ENG_PFSignKind();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::commonmodule::ENG_PFSignKind::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ENG_PFSignKind_commonmodule_2fcommonmodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsENG_PFSignKind_commonmodule_2fcommonmodule_2eproto}, {}};

static void InitDefaultsOptional_BehaviourModeKind_commonmodule_2fcommonmodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::commonmodule::_Optional_BehaviourModeKind_default_instance_;
    new (ptr) ::commonmodule::Optional_BehaviourModeKind();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::commonmodule::Optional_BehaviourModeKind::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Optional_BehaviourModeKind_commonmodule_2fcommonmodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsOptional_BehaviourModeKind_commonmodule_2fcommonmodule_2eproto}, {}};

static void InitDefaultsENS_BehaviourModeKind_commonmodule_2fcommonmodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::commonmodule::_ENS_BehaviourModeKind_default_instance_;
    new (ptr) ::commonmodule::ENS_BehaviourModeKind();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::commonmodule::ENS_BehaviourModeKind::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ENS_BehaviourModeKind_commonmodule_2fcommonmodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsENS_BehaviourModeKind_commonmodule_2fcommonmodule_2eproto}, {
      &scc_info_Quality_commonmodule_2fcommonmodule_2eproto.base,
      &scc_info_Timestamp_commonmodule_2fcommonmodule_2eproto.base,}};

static void InitDefaultsOptional_DERGeneratorStateKind_commonmodule_2fcommonmodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::commonmodule::_Optional_DERGeneratorStateKind_default_instance_;
    new (ptr) ::commonmodule::Optional_DERGeneratorStateKind();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::commonmodule::Optional_DERGeneratorStateKind::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Optional_DERGeneratorStateKind_commonmodule_2fcommonmodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsOptional_DERGeneratorStateKind_commonmodule_2fcommonmodule_2eproto}, {}};

static void InitDefaultsENS_DERGeneratorStateKind_commonmodule_2fcommonmodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::commonmodule::_ENS_DERGeneratorStateKind_default_instance_;
    new (ptr) ::commonmodule::ENS_DERGeneratorStateKind();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::commonmodule::ENS_DERGeneratorStateKind::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ENS_DERGeneratorStateKind_commonmodule_2fcommonmodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsENS_DERGeneratorStateKind_commonmodule_2fcommonmodule_2eproto}, {
      &scc_info_Quality_commonmodule_2fcommonmodule_2eproto.base,
      &scc_info_Timestamp_commonmodule_2fcommonmodule_2eproto.base,}};

static void InitDefaultsOptional_DynamicTestKind_commonmodule_2fcommonmodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::commonmodule::_Optional_DynamicTestKind_default_instance_;
    new (ptr) ::commonmodule::Optional_DynamicTestKind();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::commonmodule::Optional_DynamicTestKind::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Optional_DynamicTestKind_commonmodule_2fcommonmodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsOptional_DynamicTestKind_commonmodule_2fcommonmodule_2eproto}, {}};

static void InitDefaultsENS_DynamicTestKind_commonmodule_2fcommonmodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::commonmodule::_ENS_DynamicTestKind_default_instance_;
    new (ptr) ::commonmodule::ENS_DynamicTestKind();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::commonmodule::ENS_DynamicTestKind::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ENS_DynamicTestKind_commonmodule_2fcommonmodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsENS_DynamicTestKind_commonmodule_2fcommonmodule_2eproto}, {
      &scc_info_Quality_commonmodule_2fcommonmodule_2eproto.base,
      &scc_info_Timestamp_commonmodule_2fcommonmodule_2eproto.base,}};

static void InitDefaultsENS_GridConnectModeKind_commonmodule_2fcommonmodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::commonmodule::_ENS_GridConnectModeKind_default_instance_;
    new (ptr) ::commonmodule::ENS_GridConnectModeKind();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::commonmodule::ENS_GridConnectModeKind::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ENS_GridConnectModeKind_commonmodule_2fcommonmodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsENS_GridConnectModeKind_commonmodule_2fcommonmodule_2eproto}, {}};

static void InitDefaultsOptional_HealthKind_commonmodule_2fcommonmodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::commonmodule::_Optional_HealthKind_default_instance_;
    new (ptr) ::commonmodule::Optional_HealthKind();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::commonmodule::Optional_HealthKind::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Optional_HealthKind_commonmodule_2fcommonmodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsOptional_HealthKind_commonmodule_2fcommonmodule_2eproto}, {}};

static void InitDefaultsENS_HealthKind_commonmodule_2fcommonmodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::commonmodule::_ENS_HealthKind_default_instance_;
    new (ptr) ::commonmodule::ENS_HealthKind();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::commonmodule::ENS_HealthKind::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ENS_HealthKind_commonmodule_2fcommonmodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsENS_HealthKind_commonmodule_2fcommonmodule_2eproto}, {
      &scc_info_StringValue_google_2fprotobuf_2fwrappers_2eproto.base,}};

static void InitDefaultsESS_commonmodule_2fcommonmodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::commonmodule::_ESS_default_instance_;
    new (ptr) ::commonmodule::ESS();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::commonmodule::ESS::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ESS_commonmodule_2fcommonmodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsESS_commonmodule_2fcommonmodule_2eproto}, {
      &scc_info_ConductingEquipment_commonmodule_2fcommonmodule_2eproto.base,}};

static void InitDefaultsEventMessageInfo_commonmodule_2fcommonmodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::commonmodule::_EventMessageInfo_default_instance_;
    new (ptr) ::commonmodule::EventMessageInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::commonmodule::EventMessageInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_EventMessageInfo_commonmodule_2fcommonmodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsEventMessageInfo_commonmodule_2fcommonmodule_2eproto}, {
      &scc_info_MessageInfo_commonmodule_2fcommonmodule_2eproto.base,}};

static void InitDefaultsEventValue_commonmodule_2fcommonmodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::commonmodule::_EventValue_default_instance_;
    new (ptr) ::commonmodule::EventValue();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::commonmodule::EventValue::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_EventValue_commonmodule_2fcommonmodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsEventValue_commonmodule_2fcommonmodule_2eproto}, {
      &scc_info_IdentifiedObject_commonmodule_2fcommonmodule_2eproto.base,}};

static void InitDefaultsForecastValueSource_commonmodule_2fcommonmodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::commonmodule::_ForecastValueSource_default_instance_;
    new (ptr) ::commonmodule::ForecastValueSource();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::commonmodule::ForecastValueSource::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ForecastValueSource_commonmodule_2fcommonmodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsForecastValueSource_commonmodule_2fcommonmodule_2eproto}, {
      &scc_info_IdentifiedObject_commonmodule_2fcommonmodule_2eproto.base,}};

static void InitDefaultsForecastIED_commonmodule_2fcommonmodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::commonmodule::_ForecastIED_default_instance_;
    new (ptr) ::commonmodule::ForecastIED();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::commonmodule::ForecastIED::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ForecastIED_commonmodule_2fcommonmodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsForecastIED_commonmodule_2fcommonmodule_2eproto}, {
      &scc_info_ForecastValueSource_commonmodule_2fcommonmodule_2eproto.base,}};

static void InitDefaultsForecastValue_commonmodule_2fcommonmodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::commonmodule::_ForecastValue_default_instance_;
    new (ptr) ::commonmodule::ForecastValue();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::commonmodule::ForecastValue::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ForecastValue_commonmodule_2fcommonmodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsForecastValue_commonmodule_2fcommonmodule_2eproto}, {
      &scc_info_IdentifiedObject_commonmodule_2fcommonmodule_2eproto.base,}};

static void InitDefaultsIED_commonmodule_2fcommonmodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::commonmodule::_IED_default_instance_;
    new (ptr) ::commonmodule::IED();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::commonmodule::IED::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_IED_commonmodule_2fcommonmodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsIED_commonmodule_2fcommonmodule_2eproto}, {
      &scc_info_IdentifiedObject_commonmodule_2fcommonmodule_2eproto.base,}};

static void InitDefaultsStatusINS_commonmodule_2fcommonmodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::commonmodule::_StatusINS_default_instance_;
    new (ptr) ::commonmodule::StatusINS();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::commonmodule::StatusINS::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_StatusINS_commonmodule_2fcommonmodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsStatusINS_commonmodule_2fcommonmodule_2eproto}, {
      &scc_info_Quality_commonmodule_2fcommonmodule_2eproto.base,
      &scc_info_Timestamp_commonmodule_2fcommonmodule_2eproto.base,
      &scc_info_Unit_commonmodule_2fcommonmodule_2eproto.base,}};

static void InitDefaultsIntegerStatusGGIO_commonmodule_2fcommonmodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::commonmodule::_IntegerStatusGGIO_default_instance_;
    new (ptr) ::commonmodule::IntegerStatusGGIO();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::commonmodule::IntegerStatusGGIO::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_IntegerStatusGGIO_commonmodule_2fcommonmodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsIntegerStatusGGIO_commonmodule_2fcommonmodule_2eproto}, {
      &scc_info_LogicalNode_commonmodule_2fcommonmodule_2eproto.base,
      &scc_info_StatusINS_commonmodule_2fcommonmodule_2eproto.base,
      &scc_info_Optional_PhaseCodeKind_commonmodule_2fcommonmodule_2eproto.base,}};

static void InitDefaultsLogicalNodeForEventAndStatus_commonmodule_2fcommonmodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::commonmodule::_LogicalNodeForEventAndStatus_default_instance_;
    new (ptr) ::commonmodule::LogicalNodeForEventAndStatus();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::commonmodule::LogicalNodeForEventAndStatus::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_LogicalNodeForEventAndStatus_commonmodule_2fcommonmodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsLogicalNodeForEventAndStatus_commonmodule_2fcommonmodule_2eproto}, {
      &scc_info_LogicalNode_commonmodule_2fcommonmodule_2eproto.base,
      &scc_info_ENS_BehaviourModeKind_commonmodule_2fcommonmodule_2eproto.base,
      &scc_info_ENS_HealthKind_commonmodule_2fcommonmodule_2eproto.base,}};

static void InitDefaultsMeasurementValue_commonmodule_2fcommonmodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::commonmodule::_MeasurementValue_default_instance_;
    new (ptr) ::commonmodule::MeasurementValue();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::commonmodule::MeasurementValue::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MeasurementValue_commonmodule_2fcommonmodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMeasurementValue_commonmodule_2fcommonmodule_2eproto}, {
      &scc_info_IdentifiedObject_commonmodule_2fcommonmodule_2eproto.base,}};

static void InitDefaultsMeter_commonmodule_2fcommonmodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::commonmodule::_Meter_default_instance_;
    new (ptr) ::commonmodule::Meter();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::commonmodule::Meter::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Meter_commonmodule_2fcommonmodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMeter_commonmodule_2fcommonmodule_2eproto}, {
      &scc_info_ConductingEquipment_commonmodule_2fcommonmodule_2eproto.base,}};

static void InitDefaultsOptimizationMessageInfo_commonmodule_2fcommonmodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::commonmodule::_OptimizationMessageInfo_default_instance_;
    new (ptr) ::commonmodule::OptimizationMessageInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::commonmodule::OptimizationMessageInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_OptimizationMessageInfo_commonmodule_2fcommonmodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsOptimizationMessageInfo_commonmodule_2fcommonmodule_2eproto}, {
      &scc_info_MessageInfo_commonmodule_2fcommonmodule_2eproto.base,}};

static void InitDefaultsReadingMMTN_commonmodule_2fcommonmodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::commonmodule::_ReadingMMTN_default_instance_;
    new (ptr) ::commonmodule::ReadingMMTN();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::commonmodule::ReadingMMTN::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ReadingMMTN_commonmodule_2fcommonmodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsReadingMMTN_commonmodule_2fcommonmodule_2eproto}, {
      &scc_info_LogicalNode_commonmodule_2fcommonmodule_2eproto.base,
      &scc_info_BCR_commonmodule_2fcommonmodule_2eproto.base,}};

static void InitDefaultsPhaseMMTN_commonmodule_2fcommonmodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::commonmodule::_PhaseMMTN_default_instance_;
    new (ptr) ::commonmodule::PhaseMMTN();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::commonmodule::PhaseMMTN::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_PhaseMMTN_commonmodule_2fcommonmodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPhaseMMTN_commonmodule_2fcommonmodule_2eproto}, {
      &scc_info_ReadingMMTN_commonmodule_2fcommonmodule_2eproto.base,}};

static void InitDefaultsRampRate_commonmodule_2fcommonmodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::commonmodule::_RampRate_default_instance_;
    new (ptr) ::commonmodule::RampRate();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::commonmodule::RampRate::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_RampRate_commonmodule_2fcommonmodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRampRate_commonmodule_2fcommonmodule_2eproto}, {
      &scc_info_FloatValue_google_2fprotobuf_2fwrappers_2eproto.base,}};

static void InitDefaultsReadingMessageInfo_commonmodule_2fcommonmodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::commonmodule::_ReadingMessageInfo_default_instance_;
    new (ptr) ::commonmodule::ReadingMessageInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::commonmodule::ReadingMessageInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ReadingMessageInfo_commonmodule_2fcommonmodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsReadingMessageInfo_commonmodule_2fcommonmodule_2eproto}, {
      &scc_info_MessageInfo_commonmodule_2fcommonmodule_2eproto.base,}};

static void InitDefaultsReadingMMTR_commonmodule_2fcommonmodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::commonmodule::_ReadingMMTR_default_instance_;
    new (ptr) ::commonmodule::ReadingMMTR();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::commonmodule::ReadingMMTR::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ReadingMMTR_commonmodule_2fcommonmodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsReadingMMTR_commonmodule_2fcommonmodule_2eproto}, {
      &scc_info_LogicalNode_commonmodule_2fcommonmodule_2eproto.base,
      &scc_info_BCR_commonmodule_2fcommonmodule_2eproto.base,}};

static void InitDefaultsWYE_commonmodule_2fcommonmodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::commonmodule::_WYE_default_instance_;
    new (ptr) ::commonmodule::WYE();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::commonmodule::WYE::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_WYE_commonmodule_2fcommonmodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsWYE_commonmodule_2fcommonmodule_2eproto}, {
      &scc_info_CMV_commonmodule_2fcommonmodule_2eproto.base,}};

static void InitDefaultsReadingMMXU_commonmodule_2fcommonmodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::commonmodule::_ReadingMMXU_default_instance_;
    new (ptr) ::commonmodule::ReadingMMXU();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::commonmodule::ReadingMMXU::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<6> scc_info_ReadingMMXU_commonmodule_2fcommonmodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 6, InitDefaultsReadingMMXU_commonmodule_2fcommonmodule_2eproto}, {
      &scc_info_LogicalNode_commonmodule_2fcommonmodule_2eproto.base,
      &scc_info_WYE_commonmodule_2fcommonmodule_2eproto.base,
      &scc_info_ENG_CalcMethodKind_commonmodule_2fcommonmodule_2eproto.base,
      &scc_info_MV_commonmodule_2fcommonmodule_2eproto.base,
      &scc_info_ENG_PFSignKind_commonmodule_2fcommonmodule_2eproto.base,
      &scc_info_DEL_commonmodule_2fcommonmodule_2eproto.base,}};

static void InitDefaultsOptional_DbPosKind_commonmodule_2fcommonmodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::commonmodule::_Optional_DbPosKind_default_instance_;
    new (ptr) ::commonmodule::Optional_DbPosKind();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::commonmodule::Optional_DbPosKind::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Optional_DbPosKind_commonmodule_2fcommonmodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsOptional_DbPosKind_commonmodule_2fcommonmodule_2eproto}, {}};

static void InitDefaultsStatusDPS_commonmodule_2fcommonmodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::commonmodule::_StatusDPS_default_instance_;
    new (ptr) ::commonmodule::StatusDPS();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::commonmodule::StatusDPS::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_StatusDPS_commonmodule_2fcommonmodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsStatusDPS_commonmodule_2fcommonmodule_2eproto}, {
      &scc_info_Quality_commonmodule_2fcommonmodule_2eproto.base,
      &scc_info_Timestamp_commonmodule_2fcommonmodule_2eproto.base,}};

static void InitDefaultsStatusAndEventXCBR_commonmodule_2fcommonmodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::commonmodule::_StatusAndEventXCBR_default_instance_;
    new (ptr) ::commonmodule::StatusAndEventXCBR();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::commonmodule::StatusAndEventXCBR::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_StatusAndEventXCBR_commonmodule_2fcommonmodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsStatusAndEventXCBR_commonmodule_2fcommonmodule_2eproto}, {
      &scc_info_LogicalNodeForEventAndStatus_commonmodule_2fcommonmodule_2eproto.base,
      &scc_info_ENS_DynamicTestKind_commonmodule_2fcommonmodule_2eproto.base,
      &scc_info_StatusDPS_commonmodule_2fcommonmodule_2eproto.base,}};

static void InitDefaultsStatusISC_commonmodule_2fcommonmodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::commonmodule::_StatusISC_default_instance_;
    new (ptr) ::commonmodule::StatusISC();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::commonmodule::StatusISC::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_StatusISC_commonmodule_2fcommonmodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsStatusISC_commonmodule_2fcommonmodule_2eproto}, {
      &scc_info_Quality_commonmodule_2fcommonmodule_2eproto.base,
      &scc_info_Timestamp_commonmodule_2fcommonmodule_2eproto.base,}};

static void InitDefaultsStatusMessageInfo_commonmodule_2fcommonmodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::commonmodule::_StatusMessageInfo_default_instance_;
    new (ptr) ::commonmodule::StatusMessageInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::commonmodule::StatusMessageInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_StatusMessageInfo_commonmodule_2fcommonmodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsStatusMessageInfo_commonmodule_2fcommonmodule_2eproto}, {
      &scc_info_MessageInfo_commonmodule_2fcommonmodule_2eproto.base,}};

static void InitDefaultsStatusSPC_commonmodule_2fcommonmodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::commonmodule::_StatusSPC_default_instance_;
    new (ptr) ::commonmodule::StatusSPC();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::commonmodule::StatusSPC::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_StatusSPC_commonmodule_2fcommonmodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsStatusSPC_commonmodule_2fcommonmodule_2eproto}, {
      &scc_info_Quality_commonmodule_2fcommonmodule_2eproto.base,
      &scc_info_Timestamp_commonmodule_2fcommonmodule_2eproto.base,}};

static void InitDefaultsStatusValue_commonmodule_2fcommonmodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::commonmodule::_StatusValue_default_instance_;
    new (ptr) ::commonmodule::StatusValue();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::commonmodule::StatusValue::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_StatusValue_commonmodule_2fcommonmodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsStatusValue_commonmodule_2fcommonmodule_2eproto}, {
      &scc_info_IdentifiedObject_commonmodule_2fcommonmodule_2eproto.base,}};

static void InitDefaultsVSS_commonmodule_2fcommonmodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::commonmodule::_VSS_default_instance_;
    new (ptr) ::commonmodule::VSS();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::commonmodule::VSS::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_VSS_commonmodule_2fcommonmodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsVSS_commonmodule_2fcommonmodule_2eproto}, {
      &scc_info_Quality_commonmodule_2fcommonmodule_2eproto.base,
      &scc_info_Timestamp_commonmodule_2fcommonmodule_2eproto.base,}};

static void InitDefaultsStringStatusGGIO_commonmodule_2fcommonmodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::commonmodule::_StringStatusGGIO_default_instance_;
    new (ptr) ::commonmodule::StringStatusGGIO();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::commonmodule::StringStatusGGIO::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_StringStatusGGIO_commonmodule_2fcommonmodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsStringStatusGGIO_commonmodule_2fcommonmodule_2eproto}, {
      &scc_info_LogicalNode_commonmodule_2fcommonmodule_2eproto.base,
      &scc_info_Optional_PhaseCodeKind_commonmodule_2fcommonmodule_2eproto.base,
      &scc_info_VSS_commonmodule_2fcommonmodule_2eproto.base,}};

static void InitDefaultsSwitchPoint_commonmodule_2fcommonmodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::commonmodule::_SwitchPoint_default_instance_;
    new (ptr) ::commonmodule::SwitchPoint();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::commonmodule::SwitchPoint::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_SwitchPoint_commonmodule_2fcommonmodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsSwitchPoint_commonmodule_2fcommonmodule_2eproto}, {
      &scc_info_ControlDPC_commonmodule_2fcommonmodule_2eproto.base,
      &scc_info_ControlTimestamp_commonmodule_2fcommonmodule_2eproto.base,}};

static void InitDefaultsSwitchCSG_commonmodule_2fcommonmodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::commonmodule::_SwitchCSG_default_instance_;
    new (ptr) ::commonmodule::SwitchCSG();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::commonmodule::SwitchCSG::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SwitchCSG_commonmodule_2fcommonmodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSwitchCSG_commonmodule_2fcommonmodule_2eproto}, {
      &scc_info_SwitchPoint_commonmodule_2fcommonmodule_2eproto.base,}};

static void InitDefaultsSwitchControlScheduleFSCH_commonmodule_2fcommonmodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::commonmodule::_SwitchControlScheduleFSCH_default_instance_;
    new (ptr) ::commonmodule::SwitchControlScheduleFSCH();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::commonmodule::SwitchControlScheduleFSCH::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SwitchControlScheduleFSCH_commonmodule_2fcommonmodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSwitchControlScheduleFSCH_commonmodule_2fcommonmodule_2eproto}, {
      &scc_info_SwitchCSG_commonmodule_2fcommonmodule_2eproto.base,}};

static void InitDefaultsOptional_StateKind_commonmodule_2fcommonmodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::commonmodule::_Optional_StateKind_default_instance_;
    new (ptr) ::commonmodule::Optional_StateKind();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::commonmodule::Optional_StateKind::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Optional_StateKind_commonmodule_2fcommonmodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsOptional_StateKind_commonmodule_2fcommonmodule_2eproto}, {}};

void InitDefaults_commonmodule_2fcommonmodule_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_IdentifiedObject_commonmodule_2fcommonmodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ACDCTerminal_commonmodule_2fcommonmodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Optional_UnitSymbolKind_commonmodule_2fcommonmodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Optional_UnitMultiplierKind_commonmodule_2fcommonmodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ActivePower_commonmodule_2fcommonmodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Optional_PhaseCodeKind_commonmodule_2fcommonmodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AnalogueValue_commonmodule_2fcommonmodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Optional_ValidityKind_commonmodule_2fcommonmodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DetailQual_commonmodule_2fcommonmodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Optional_SourceKind_commonmodule_2fcommonmodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Quality_commonmodule_2fcommonmodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Optional_TimeAccuracyKind_commonmodule_2fcommonmodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TimeQuality_commonmodule_2fcommonmodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Timestamp_commonmodule_2fcommonmodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Unit_commonmodule_2fcommonmodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MV_commonmodule_2fcommonmodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LogicalNode_commonmodule_2fcommonmodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AnalogStatusGGIO_commonmodule_2fcommonmodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AnalogueValueCtl_commonmodule_2fcommonmodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_NamedObject_commonmodule_2fcommonmodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ApplicationSystem_commonmodule_2fcommonmodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ASG_commonmodule_2fcommonmodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BCR_commonmodule_2fcommonmodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StatusSPS_commonmodule_2fcommonmodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BooleanStatusGGIO_commonmodule_2fcommonmodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CheckConditions_commonmodule_2fcommonmodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Vector_commonmodule_2fcommonmodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMV_commonmodule_2fcommonmodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ConductingEquipment_commonmodule_2fcommonmodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Terminal_commonmodule_2fcommonmodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ConductingEquipmentTerminalReading_commonmodule_2fcommonmodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ControlDPC_commonmodule_2fcommonmodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ControlTimestamp_commonmodule_2fcommonmodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Optional_ScheduleParameterKind_commonmodule_2fcommonmodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ENG_ScheduleParameter_commonmodule_2fcommonmodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SchedulePoint_commonmodule_2fcommonmodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ScheduleCSG_commonmodule_2fcommonmodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ControlScheduleFSCH_commonmodule_2fcommonmodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LogicalNodeForControl_commonmodule_2fcommonmodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ControlFSCC_commonmodule_2fcommonmodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ControlING_commonmodule_2fcommonmodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ControlISC_commonmodule_2fcommonmodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MessageInfo_commonmodule_2fcommonmodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ControlMessageInfo_commonmodule_2fcommonmodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ControlSPC_commonmodule_2fcommonmodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ControlValue_commonmodule_2fcommonmodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DateTimeInterval_commonmodule_2fcommonmodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DEL_commonmodule_2fcommonmodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EnergyConsumer_commonmodule_2fcommonmodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Optional_CalcMethodKind_commonmodule_2fcommonmodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ENG_CalcMethodKind_commonmodule_2fcommonmodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Optional_GridConnectModeKind_commonmodule_2fcommonmodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ENG_GridConnectModeKind_commonmodule_2fcommonmodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Optional_PFSignKind_commonmodule_2fcommonmodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ENG_PFSignKind_commonmodule_2fcommonmodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Optional_BehaviourModeKind_commonmodule_2fcommonmodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ENS_BehaviourModeKind_commonmodule_2fcommonmodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Optional_DERGeneratorStateKind_commonmodule_2fcommonmodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ENS_DERGeneratorStateKind_commonmodule_2fcommonmodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Optional_DynamicTestKind_commonmodule_2fcommonmodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ENS_DynamicTestKind_commonmodule_2fcommonmodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ENS_GridConnectModeKind_commonmodule_2fcommonmodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Optional_HealthKind_commonmodule_2fcommonmodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ENS_HealthKind_commonmodule_2fcommonmodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ESS_commonmodule_2fcommonmodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EventMessageInfo_commonmodule_2fcommonmodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EventValue_commonmodule_2fcommonmodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ForecastValueSource_commonmodule_2fcommonmodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ForecastIED_commonmodule_2fcommonmodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ForecastValue_commonmodule_2fcommonmodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_IED_commonmodule_2fcommonmodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StatusINS_commonmodule_2fcommonmodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_IntegerStatusGGIO_commonmodule_2fcommonmodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LogicalNodeForEventAndStatus_commonmodule_2fcommonmodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MeasurementValue_commonmodule_2fcommonmodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Meter_commonmodule_2fcommonmodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OptimizationMessageInfo_commonmodule_2fcommonmodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReadingMMTN_commonmodule_2fcommonmodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PhaseMMTN_commonmodule_2fcommonmodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RampRate_commonmodule_2fcommonmodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReadingMessageInfo_commonmodule_2fcommonmodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReadingMMTR_commonmodule_2fcommonmodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_WYE_commonmodule_2fcommonmodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReadingMMXU_commonmodule_2fcommonmodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Optional_DbPosKind_commonmodule_2fcommonmodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StatusDPS_commonmodule_2fcommonmodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StatusAndEventXCBR_commonmodule_2fcommonmodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StatusISC_commonmodule_2fcommonmodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StatusMessageInfo_commonmodule_2fcommonmodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StatusSPC_commonmodule_2fcommonmodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StatusValue_commonmodule_2fcommonmodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VSS_commonmodule_2fcommonmodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StringStatusGGIO_commonmodule_2fcommonmodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SwitchPoint_commonmodule_2fcommonmodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SwitchCSG_commonmodule_2fcommonmodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SwitchControlScheduleFSCH_commonmodule_2fcommonmodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Optional_StateKind_commonmodule_2fcommonmodule_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_commonmodule_2fcommonmodule_2eproto[97];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors_commonmodule_2fcommonmodule_2eproto[16];
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_commonmodule_2fcommonmodule_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_commonmodule_2fcommonmodule_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::commonmodule::IdentifiedObject, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::commonmodule::IdentifiedObject, description_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::IdentifiedObject, mrid_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::IdentifiedObject, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::commonmodule::ACDCTerminal, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::commonmodule::ACDCTerminal, identifiedobject_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::ACDCTerminal, connected_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::ACDCTerminal, sequencenumber_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::commonmodule::Optional_UnitSymbolKind, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::commonmodule::Optional_UnitSymbolKind, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::commonmodule::Optional_UnitMultiplierKind, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::commonmodule::Optional_UnitMultiplierKind, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::commonmodule::ActivePower, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::commonmodule::ActivePower, multiplier_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::ActivePower, unit_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::ActivePower, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::commonmodule::Optional_PhaseCodeKind, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::commonmodule::Optional_PhaseCodeKind, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::commonmodule::AnalogueValue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::commonmodule::AnalogueValue, f_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::AnalogueValue, i_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::commonmodule::Optional_ValidityKind, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::commonmodule::Optional_ValidityKind, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::commonmodule::DetailQual, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::commonmodule::DetailQual, badreference_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::DetailQual, failure_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::DetailQual, inaccurate_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::DetailQual, inconsistent_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::DetailQual, olddata_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::DetailQual, oscillatory_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::DetailQual, outofrange_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::DetailQual, overflow_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::commonmodule::Optional_SourceKind, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::commonmodule::Optional_SourceKind, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::commonmodule::Quality, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::commonmodule::Quality, detailqual_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::Quality, operatorblocked_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::Quality, source_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::Quality, test_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::Quality, validity_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::commonmodule::Optional_TimeAccuracyKind, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::commonmodule::Optional_TimeAccuracyKind, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::commonmodule::TimeQuality, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::commonmodule::TimeQuality, clockfailure_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::TimeQuality, clocknotsynchronized_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::TimeQuality, leapsecondsknown_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::TimeQuality, timeaccuracy_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::commonmodule::Timestamp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::commonmodule::Timestamp, fraction_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::Timestamp, seconds_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::Timestamp, tq_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::commonmodule::Unit, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::commonmodule::Unit, multiplier_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::Unit, siunit_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::commonmodule::MV, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::commonmodule::MV, mag_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::MV, q_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::MV, t_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::MV, units_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::commonmodule::LogicalNode, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::commonmodule::LogicalNode, identifiedobject_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::commonmodule::AnalogStatusGGIO, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::commonmodule::AnalogStatusGGIO, logicalnode_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::AnalogStatusGGIO, anin_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::AnalogStatusGGIO, phase_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::commonmodule::AnalogueValueCtl, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::commonmodule::AnalogueValueCtl, f_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::AnalogueValueCtl, i_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::commonmodule::NamedObject, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::commonmodule::NamedObject, description_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::NamedObject, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::commonmodule::ApplicationSystem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::commonmodule::ApplicationSystem, namedobject_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::ApplicationSystem, mrid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::commonmodule::ASG, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::commonmodule::ASG, setmag_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::ASG, units_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::commonmodule::BCR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::commonmodule::BCR, actval_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::BCR, q_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::BCR, t_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::BCR, units_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::commonmodule::StatusSPS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::commonmodule::StatusSPS, q_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::StatusSPS, stval_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::StatusSPS, t_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::commonmodule::BooleanStatusGGIO, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::commonmodule::BooleanStatusGGIO, logicalnode_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::BooleanStatusGGIO, ind_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::BooleanStatusGGIO, phase_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::commonmodule::CheckConditions, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::commonmodule::CheckConditions, interlockcheck_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::CheckConditions, synchrocheck_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::commonmodule::Vector, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::commonmodule::Vector, ang_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::Vector, mag_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::commonmodule::CMV, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::commonmodule::CMV, cval_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::CMV, q_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::CMV, t_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::CMV, units_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::commonmodule::ConductingEquipment, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::commonmodule::ConductingEquipment, namedobject_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::ConductingEquipment, mrid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::commonmodule::Terminal, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::commonmodule::Terminal, acdcterminal_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::Terminal, phases_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::commonmodule::ConductingEquipmentTerminalReading, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::commonmodule::ConductingEquipmentTerminalReading, terminal_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::commonmodule::ControlDPC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::commonmodule::ControlDPC, ctlval_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::commonmodule::ControlTimestamp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::commonmodule::ControlTimestamp, fraction_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::ControlTimestamp, seconds_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::commonmodule::Optional_ScheduleParameterKind, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::commonmodule::Optional_ScheduleParameterKind, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::commonmodule::ENG_ScheduleParameter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::commonmodule::ENG_ScheduleParameter, scheduleparametertype_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::ENG_ScheduleParameter, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::commonmodule::SchedulePoint, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::commonmodule::SchedulePoint, scheduleparameter_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::SchedulePoint, starttime_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::commonmodule::ScheduleCSG, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::commonmodule::ScheduleCSG, schpts_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::commonmodule::ControlScheduleFSCH, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::commonmodule::ControlScheduleFSCH, valacsg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::commonmodule::LogicalNodeForControl, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::commonmodule::LogicalNodeForControl, logicalnode_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::commonmodule::ControlFSCC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::commonmodule::ControlFSCC, logicalnodeforcontrol_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::ControlFSCC, controlschedulefsch_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::ControlFSCC, islandcontrolschedulefsch_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::commonmodule::ControlING, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::commonmodule::ControlING, setval_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::ControlING, units_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::commonmodule::ControlISC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::commonmodule::ControlISC, ctlval_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::commonmodule::MessageInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::commonmodule::MessageInfo, identifiedobject_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::MessageInfo, messagetimestamp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::commonmodule::ControlMessageInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::commonmodule::ControlMessageInfo, messageinfo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::commonmodule::ControlSPC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::commonmodule::ControlSPC, ctlval_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::commonmodule::ControlValue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::commonmodule::ControlValue, identifiedobject_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::ControlValue, modblk_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::commonmodule::DateTimeInterval, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::commonmodule::DateTimeInterval, end_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::DateTimeInterval, start_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::commonmodule::DEL, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::commonmodule::DEL, phsab_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::DEL, phsbc_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::DEL, phsca_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::commonmodule::EnergyConsumer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::commonmodule::EnergyConsumer, conductingequipment_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::EnergyConsumer, operatinglimit_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::commonmodule::Optional_CalcMethodKind, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::commonmodule::Optional_CalcMethodKind, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::commonmodule::ENG_CalcMethodKind, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::commonmodule::ENG_CalcMethodKind, setval_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::commonmodule::Optional_GridConnectModeKind, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::commonmodule::Optional_GridConnectModeKind, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::commonmodule::ENG_GridConnectModeKind, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::commonmodule::ENG_GridConnectModeKind, setval_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::ENG_GridConnectModeKind, setvalextension_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::commonmodule::Optional_PFSignKind, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::commonmodule::Optional_PFSignKind, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::commonmodule::ENG_PFSignKind, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::commonmodule::ENG_PFSignKind, setval_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::commonmodule::Optional_BehaviourModeKind, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::commonmodule::Optional_BehaviourModeKind, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::commonmodule::ENS_BehaviourModeKind, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::commonmodule::ENS_BehaviourModeKind, q_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::ENS_BehaviourModeKind, stval_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::ENS_BehaviourModeKind, t_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::commonmodule::Optional_DERGeneratorStateKind, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::commonmodule::Optional_DERGeneratorStateKind, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::commonmodule::ENS_DERGeneratorStateKind, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::commonmodule::ENS_DERGeneratorStateKind, q_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::ENS_DERGeneratorStateKind, stval_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::ENS_DERGeneratorStateKind, t_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::commonmodule::Optional_DynamicTestKind, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::commonmodule::Optional_DynamicTestKind, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::commonmodule::ENS_DynamicTestKind, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::commonmodule::ENS_DynamicTestKind, q_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::ENS_DynamicTestKind, stval_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::ENS_DynamicTestKind, t_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::commonmodule::ENS_GridConnectModeKind, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::commonmodule::ENS_GridConnectModeKind, stval_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::ENS_GridConnectModeKind, stvalextension_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::commonmodule::Optional_HealthKind, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::commonmodule::Optional_HealthKind, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::commonmodule::ENS_HealthKind, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::commonmodule::ENS_HealthKind, d_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::ENS_HealthKind, stval_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::commonmodule::ESS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::commonmodule::ESS, conductingequipment_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::commonmodule::EventMessageInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::commonmodule::EventMessageInfo, messageinfo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::commonmodule::EventValue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::commonmodule::EventValue, identifiedobject_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::commonmodule::ForecastValueSource, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::commonmodule::ForecastValueSource, identifiedobject_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::commonmodule::ForecastIED, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::commonmodule::ForecastIED, forecastvaluesource_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::ForecastIED, sourceapplicationid_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::ForecastIED, sourcedatetime_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::commonmodule::ForecastValue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::commonmodule::ForecastValue, identifiedobject_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::commonmodule::IED, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::commonmodule::IED, identifiedobject_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::commonmodule::StatusINS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::commonmodule::StatusINS, q_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::StatusINS, stval_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::StatusINS, t_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::StatusINS, units_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::commonmodule::IntegerStatusGGIO, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::commonmodule::IntegerStatusGGIO, logicalnode_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::IntegerStatusGGIO, intin_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::IntegerStatusGGIO, phase_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::commonmodule::LogicalNodeForEventAndStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::commonmodule::LogicalNodeForEventAndStatus, logicalnode_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::LogicalNodeForEventAndStatus, beh_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::LogicalNodeForEventAndStatus, eehealth_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::commonmodule::MeasurementValue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::commonmodule::MeasurementValue, identifiedobject_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::commonmodule::Meter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::commonmodule::Meter, conductingequipment_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::commonmodule::OptimizationMessageInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::commonmodule::OptimizationMessageInfo, messageinfo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::commonmodule::ReadingMMTN, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::commonmodule::ReadingMMTN, logicalnode_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::ReadingMMTN, dmdvah_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::ReadingMMTN, dmdvarh_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::ReadingMMTN, dmdwh_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::ReadingMMTN, supvah_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::ReadingMMTN, supvarh_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::ReadingMMTN, supwh_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::ReadingMMTN, totvah_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::ReadingMMTN, totvarh_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::ReadingMMTN, totwh_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::commonmodule::PhaseMMTN, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::commonmodule::PhaseMMTN, phsa_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::PhaseMMTN, phsab_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::PhaseMMTN, phsb_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::PhaseMMTN, phsbc_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::PhaseMMTN, phsc_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::PhaseMMTN, phsca_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::commonmodule::RampRate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::commonmodule::RampRate, negativereactivepowerkvarpermin_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::RampRate, negativerealpowerkwpermin_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::RampRate, positivereactivepowerkvarpermin_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::RampRate, positiverealpowerkwpermin_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::commonmodule::ReadingMessageInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::commonmodule::ReadingMessageInfo, messageinfo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::commonmodule::ReadingMMTR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::commonmodule::ReadingMMTR, logicalnode_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::ReadingMMTR, dmdvah_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::ReadingMMTR, dmdvarh_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::ReadingMMTR, dmdwh_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::ReadingMMTR, supvah_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::ReadingMMTR, supvarh_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::ReadingMMTR, supwh_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::ReadingMMTR, totvah_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::ReadingMMTR, totvarh_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::ReadingMMTR, totwh_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::commonmodule::WYE, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::commonmodule::WYE, net_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::WYE, neut_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::WYE, phsa_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::WYE, phsb_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::WYE, phsc_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::commonmodule::ReadingMMXU, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::commonmodule::ReadingMMXU, logicalnode_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::ReadingMMXU, a_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::ReadingMMXU, clcmth_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::ReadingMMXU, hz_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::ReadingMMXU, pf_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::ReadingMMXU, pfsign_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::ReadingMMXU, phv_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::ReadingMMXU, ppv_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::ReadingMMXU, va_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::ReadingMMXU, var_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::ReadingMMXU, w_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::commonmodule::Optional_DbPosKind, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::commonmodule::Optional_DbPosKind, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::commonmodule::StatusDPS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::commonmodule::StatusDPS, q_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::StatusDPS, stval_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::StatusDPS, t_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::commonmodule::StatusAndEventXCBR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::commonmodule::StatusAndEventXCBR, logicalnodeforeventandstatus_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::StatusAndEventXCBR, dynamictest_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::StatusAndEventXCBR, pos_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::commonmodule::StatusISC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::commonmodule::StatusISC, q_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::StatusISC, stval_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::StatusISC, t_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::commonmodule::StatusMessageInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::commonmodule::StatusMessageInfo, messageinfo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::commonmodule::StatusSPC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::commonmodule::StatusSPC, q_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::StatusSPC, stval_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::StatusSPC, t_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::commonmodule::StatusValue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::commonmodule::StatusValue, identifiedobject_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::commonmodule::VSS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::commonmodule::VSS, q_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::VSS, stval_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::VSS, t_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::commonmodule::StringStatusGGIO, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::commonmodule::StringStatusGGIO, logicalnode_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::StringStatusGGIO, phase_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::StringStatusGGIO, strin_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::commonmodule::SwitchPoint, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::commonmodule::SwitchPoint, pos_),
  PROTOBUF_FIELD_OFFSET(::commonmodule::SwitchPoint, starttime_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::commonmodule::SwitchCSG, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::commonmodule::SwitchCSG, crvpts_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::commonmodule::SwitchControlScheduleFSCH, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::commonmodule::SwitchControlScheduleFSCH, valdcsg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::commonmodule::Optional_StateKind, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::commonmodule::Optional_StateKind, value_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::commonmodule::IdentifiedObject)},
  { 8, -1, sizeof(::commonmodule::ACDCTerminal)},
  { 16, -1, sizeof(::commonmodule::Optional_UnitSymbolKind)},
  { 22, -1, sizeof(::commonmodule::Optional_UnitMultiplierKind)},
  { 28, -1, sizeof(::commonmodule::ActivePower)},
  { 36, -1, sizeof(::commonmodule::Optional_PhaseCodeKind)},
  { 42, -1, sizeof(::commonmodule::AnalogueValue)},
  { 49, -1, sizeof(::commonmodule::Optional_ValidityKind)},
  { 55, -1, sizeof(::commonmodule::DetailQual)},
  { 68, -1, sizeof(::commonmodule::Optional_SourceKind)},
  { 74, -1, sizeof(::commonmodule::Quality)},
  { 84, -1, sizeof(::commonmodule::Optional_TimeAccuracyKind)},
  { 90, -1, sizeof(::commonmodule::TimeQuality)},
  { 99, -1, sizeof(::commonmodule::Timestamp)},
  { 107, -1, sizeof(::commonmodule::Unit)},
  { 114, -1, sizeof(::commonmodule::MV)},
  { 123, -1, sizeof(::commonmodule::LogicalNode)},
  { 129, -1, sizeof(::commonmodule::AnalogStatusGGIO)},
  { 137, -1, sizeof(::commonmodule::AnalogueValueCtl)},
  { 144, -1, sizeof(::commonmodule::NamedObject)},
  { 151, -1, sizeof(::commonmodule::ApplicationSystem)},
  { 158, -1, sizeof(::commonmodule::ASG)},
  { 165, -1, sizeof(::commonmodule::BCR)},
  { 174, -1, sizeof(::commonmodule::StatusSPS)},
  { 182, -1, sizeof(::commonmodule::BooleanStatusGGIO)},
  { 190, -1, sizeof(::commonmodule::CheckConditions)},
  { 197, -1, sizeof(::commonmodule::Vector)},
  { 204, -1, sizeof(::commonmodule::CMV)},
  { 213, -1, sizeof(::commonmodule::ConductingEquipment)},
  { 220, -1, sizeof(::commonmodule::Terminal)},
  { 227, -1, sizeof(::commonmodule::ConductingEquipmentTerminalReading)},
  { 233, -1, sizeof(::commonmodule::ControlDPC)},
  { 239, -1, sizeof(::commonmodule::ControlTimestamp)},
  { 246, -1, sizeof(::commonmodule::Optional_ScheduleParameterKind)},
  { 252, -1, sizeof(::commonmodule::ENG_ScheduleParameter)},
  { 259, -1, sizeof(::commonmodule::SchedulePoint)},
  { 266, -1, sizeof(::commonmodule::ScheduleCSG)},
  { 272, -1, sizeof(::commonmodule::ControlScheduleFSCH)},
  { 278, -1, sizeof(::commonmodule::LogicalNodeForControl)},
  { 284, -1, sizeof(::commonmodule::ControlFSCC)},
  { 292, -1, sizeof(::commonmodule::ControlING)},
  { 299, -1, sizeof(::commonmodule::ControlISC)},
  { 305, -1, sizeof(::commonmodule::MessageInfo)},
  { 312, -1, sizeof(::commonmodule::ControlMessageInfo)},
  { 318, -1, sizeof(::commonmodule::ControlSPC)},
  { 324, -1, sizeof(::commonmodule::ControlValue)},
  { 331, -1, sizeof(::commonmodule::DateTimeInterval)},
  { 338, -1, sizeof(::commonmodule::DEL)},
  { 346, -1, sizeof(::commonmodule::EnergyConsumer)},
  { 353, -1, sizeof(::commonmodule::Optional_CalcMethodKind)},
  { 359, -1, sizeof(::commonmodule::ENG_CalcMethodKind)},
  { 365, -1, sizeof(::commonmodule::Optional_GridConnectModeKind)},
  { 371, -1, sizeof(::commonmodule::ENG_GridConnectModeKind)},
  { 378, -1, sizeof(::commonmodule::Optional_PFSignKind)},
  { 384, -1, sizeof(::commonmodule::ENG_PFSignKind)},
  { 390, -1, sizeof(::commonmodule::Optional_BehaviourModeKind)},
  { 396, -1, sizeof(::commonmodule::ENS_BehaviourModeKind)},
  { 404, -1, sizeof(::commonmodule::Optional_DERGeneratorStateKind)},
  { 410, -1, sizeof(::commonmodule::ENS_DERGeneratorStateKind)},
  { 418, -1, sizeof(::commonmodule::Optional_DynamicTestKind)},
  { 424, -1, sizeof(::commonmodule::ENS_DynamicTestKind)},
  { 432, -1, sizeof(::commonmodule::ENS_GridConnectModeKind)},
  { 439, -1, sizeof(::commonmodule::Optional_HealthKind)},
  { 445, -1, sizeof(::commonmodule::ENS_HealthKind)},
  { 452, -1, sizeof(::commonmodule::ESS)},
  { 458, -1, sizeof(::commonmodule::EventMessageInfo)},
  { 464, -1, sizeof(::commonmodule::EventValue)},
  { 470, -1, sizeof(::commonmodule::ForecastValueSource)},
  { 476, -1, sizeof(::commonmodule::ForecastIED)},
  { 484, -1, sizeof(::commonmodule::ForecastValue)},
  { 490, -1, sizeof(::commonmodule::IED)},
  { 496, -1, sizeof(::commonmodule::StatusINS)},
  { 505, -1, sizeof(::commonmodule::IntegerStatusGGIO)},
  { 513, -1, sizeof(::commonmodule::LogicalNodeForEventAndStatus)},
  { 521, -1, sizeof(::commonmodule::MeasurementValue)},
  { 527, -1, sizeof(::commonmodule::Meter)},
  { 533, -1, sizeof(::commonmodule::OptimizationMessageInfo)},
  { 539, -1, sizeof(::commonmodule::ReadingMMTN)},
  { 554, -1, sizeof(::commonmodule::PhaseMMTN)},
  { 565, -1, sizeof(::commonmodule::RampRate)},
  { 574, -1, sizeof(::commonmodule::ReadingMessageInfo)},
  { 580, -1, sizeof(::commonmodule::ReadingMMTR)},
  { 595, -1, sizeof(::commonmodule::WYE)},
  { 605, -1, sizeof(::commonmodule::ReadingMMXU)},
  { 621, -1, sizeof(::commonmodule::Optional_DbPosKind)},
  { 627, -1, sizeof(::commonmodule::StatusDPS)},
  { 635, -1, sizeof(::commonmodule::StatusAndEventXCBR)},
  { 643, -1, sizeof(::commonmodule::StatusISC)},
  { 651, -1, sizeof(::commonmodule::StatusMessageInfo)},
  { 657, -1, sizeof(::commonmodule::StatusSPC)},
  { 665, -1, sizeof(::commonmodule::StatusValue)},
  { 671, -1, sizeof(::commonmodule::VSS)},
  { 679, -1, sizeof(::commonmodule::StringStatusGGIO)},
  { 687, -1, sizeof(::commonmodule::SwitchPoint)},
  { 694, -1, sizeof(::commonmodule::SwitchCSG)},
  { 700, -1, sizeof(::commonmodule::SwitchControlScheduleFSCH)},
  { 706, -1, sizeof(::commonmodule::Optional_StateKind)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::commonmodule::_IdentifiedObject_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::commonmodule::_ACDCTerminal_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::commonmodule::_Optional_UnitSymbolKind_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::commonmodule::_Optional_UnitMultiplierKind_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::commonmodule::_ActivePower_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::commonmodule::_Optional_PhaseCodeKind_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::commonmodule::_AnalogueValue_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::commonmodule::_Optional_ValidityKind_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::commonmodule::_DetailQual_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::commonmodule::_Optional_SourceKind_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::commonmodule::_Quality_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::commonmodule::_Optional_TimeAccuracyKind_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::commonmodule::_TimeQuality_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::commonmodule::_Timestamp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::commonmodule::_Unit_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::commonmodule::_MV_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::commonmodule::_LogicalNode_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::commonmodule::_AnalogStatusGGIO_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::commonmodule::_AnalogueValueCtl_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::commonmodule::_NamedObject_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::commonmodule::_ApplicationSystem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::commonmodule::_ASG_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::commonmodule::_BCR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::commonmodule::_StatusSPS_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::commonmodule::_BooleanStatusGGIO_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::commonmodule::_CheckConditions_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::commonmodule::_Vector_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::commonmodule::_CMV_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::commonmodule::_ConductingEquipment_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::commonmodule::_Terminal_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::commonmodule::_ConductingEquipmentTerminalReading_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::commonmodule::_ControlDPC_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::commonmodule::_ControlTimestamp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::commonmodule::_Optional_ScheduleParameterKind_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::commonmodule::_ENG_ScheduleParameter_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::commonmodule::_SchedulePoint_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::commonmodule::_ScheduleCSG_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::commonmodule::_ControlScheduleFSCH_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::commonmodule::_LogicalNodeForControl_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::commonmodule::_ControlFSCC_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::commonmodule::_ControlING_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::commonmodule::_ControlISC_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::commonmodule::_MessageInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::commonmodule::_ControlMessageInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::commonmodule::_ControlSPC_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::commonmodule::_ControlValue_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::commonmodule::_DateTimeInterval_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::commonmodule::_DEL_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::commonmodule::_EnergyConsumer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::commonmodule::_Optional_CalcMethodKind_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::commonmodule::_ENG_CalcMethodKind_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::commonmodule::_Optional_GridConnectModeKind_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::commonmodule::_ENG_GridConnectModeKind_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::commonmodule::_Optional_PFSignKind_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::commonmodule::_ENG_PFSignKind_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::commonmodule::_Optional_BehaviourModeKind_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::commonmodule::_ENS_BehaviourModeKind_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::commonmodule::_Optional_DERGeneratorStateKind_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::commonmodule::_ENS_DERGeneratorStateKind_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::commonmodule::_Optional_DynamicTestKind_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::commonmodule::_ENS_DynamicTestKind_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::commonmodule::_ENS_GridConnectModeKind_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::commonmodule::_Optional_HealthKind_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::commonmodule::_ENS_HealthKind_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::commonmodule::_ESS_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::commonmodule::_EventMessageInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::commonmodule::_EventValue_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::commonmodule::_ForecastValueSource_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::commonmodule::_ForecastIED_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::commonmodule::_ForecastValue_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::commonmodule::_IED_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::commonmodule::_StatusINS_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::commonmodule::_IntegerStatusGGIO_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::commonmodule::_LogicalNodeForEventAndStatus_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::commonmodule::_MeasurementValue_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::commonmodule::_Meter_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::commonmodule::_OptimizationMessageInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::commonmodule::_ReadingMMTN_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::commonmodule::_PhaseMMTN_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::commonmodule::_RampRate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::commonmodule::_ReadingMessageInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::commonmodule::_ReadingMMTR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::commonmodule::_WYE_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::commonmodule::_ReadingMMXU_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::commonmodule::_Optional_DbPosKind_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::commonmodule::_StatusDPS_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::commonmodule::_StatusAndEventXCBR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::commonmodule::_StatusISC_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::commonmodule::_StatusMessageInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::commonmodule::_StatusSPC_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::commonmodule::_StatusValue_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::commonmodule::_VSS_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::commonmodule::_StringStatusGGIO_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::commonmodule::_SwitchPoint_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::commonmodule::_SwitchCSG_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::commonmodule::_SwitchControlScheduleFSCH_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::commonmodule::_Optional_StateKind_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_commonmodule_2fcommonmodule_2eproto = {
  {}, AddDescriptors_commonmodule_2fcommonmodule_2eproto, "commonmodule/commonmodule.proto", schemas,
  file_default_instances, TableStruct_commonmodule_2fcommonmodule_2eproto::offsets,
  file_level_metadata_commonmodule_2fcommonmodule_2eproto, 97, file_level_enum_descriptors_commonmodule_2fcommonmodule_2eproto, file_level_service_descriptors_commonmodule_2fcommonmodule_2eproto,
};

const char descriptor_table_protodef_commonmodule_2fcommonmodule_2eproto[] =
  "\n\037commonmodule/commonmodule.proto\022\014commo"
  "nmodule\032\tuml.proto\032\036google/protobuf/wrap"
  "pers.proto\"\243\001\n\020IdentifiedObject\0221\n\013descr"
  "iption\030\001 \001(\0132\034.google.protobuf.StringVal"
  "ue\0220\n\004mRID\030\002 \001(\0132\034.google.protobuf.Strin"
  "gValueB\004\240\265\030\001\022*\n\004name\030\003 \001(\0132\034.google.prot"
  "obuf.StringValue\"\262\001\n\014ACDCTerminal\022>\n\020ide"
  "ntifiedObject\030\001 \001(\0132\036.commonmodule.Ident"
  "ifiedObjectB\004\200\265\030\001\022-\n\tconnected\030\002 \001(\0132\032.g"
  "oogle.protobuf.BoolValue\0223\n\016sequenceNumb"
  "er\030\003 \001(\0132\033.google.protobuf.Int32Value\"F\n"
  "\027Optional_UnitSymbolKind\022+\n\005value\030\001 \001(\0162"
  "\034.commonmodule.UnitSymbolKind\"N\n\033Optiona"
  "l_UnitMultiplierKind\022/\n\005value\030\001 \001(\0162 .co"
  "mmonmodule.UnitMultiplierKind\"\255\001\n\013Active"
  "Power\022=\n\nmultiplier\030\001 \001(\0132).commonmodule"
  ".Optional_UnitMultiplierKind\0223\n\004unit\030\002 \001"
  "(\0132%.commonmodule.Optional_UnitSymbolKin"
  "d\022*\n\005value\030\003 \001(\0132\033.google.protobuf.Float"
  "Value\"D\n\026Optional_PhaseCodeKind\022*\n\005value"
  "\030\001 \001(\0162\033.commonmodule.PhaseCodeKind\"_\n\rA"
  "nalogueValue\022&\n\001f\030\001 \001(\0132\033.google.protobu"
  "f.FloatValue\022&\n\001i\030\002 \001(\0132\033.google.protobu"
  "f.Int32Value\"B\n\025Optional_ValidityKind\022)\n"
  "\005value\030\001 \001(\0162\032.commonmodule.ValidityKind"
  "\"\371\001\n\nDetailQual\022\036\n\014badReference\030\001 \001(\010B\010\210"
  "\265\030\001\220\265\030\001\022\031\n\007failure\030\002 \001(\010B\010\210\265\030\001\220\265\030\001\022\034\n\nin"
  "accurate\030\003 \001(\010B\010\210\265\030\001\220\265\030\001\022\036\n\014inconsistent"
  "\030\004 \001(\010B\010\210\265\030\001\220\265\030\001\022\031\n\007oldData\030\005 \001(\010B\010\210\265\030\001\220"
  "\265\030\001\022\035\n\013oscillatory\030\006 \001(\010B\010\210\265\030\001\220\265\030\001\022\034\n\nou"
  "tOfRange\030\007 \001(\010B\010\210\265\030\001\220\265\030\001\022\032\n\010overflow\030\010 \001"
  "(\010B\010\210\265\030\001\220\265\030\001\">\n\023Optional_SourceKind\022\'\n\005v"
  "alue\030\001 \001(\0162\030.commonmodule.SourceKind\"\350\001\n"
  "\007Quality\0226\n\ndetailQual\030\001 \001(\0132\030.commonmod"
  "ule.DetailQualB\010\210\265\030\001\220\265\030\001\022!\n\017operatorBloc"
  "ked\030\002 \001(\010B\010\210\265\030\001\220\265\030\001\0222\n\006source\030\003 \001(\0162\030.co"
  "mmonmodule.SourceKindB\010\210\265\030\001\220\265\030\001\022\026\n\004test\030"
  "\004 \001(\010B\010\210\265\030\001\220\265\030\001\0226\n\010validity\030\005 \001(\0162\032.comm"
  "onmodule.ValidityKindB\010\210\265\030\001\220\265\030\001\"J\n\031Optio"
  "nal_TimeAccuracyKind\022-\n\005value\030\001 \001(\0162\036.co"
  "mmonmodule.TimeAccuracyKind\"\271\001\n\013TimeQual"
  "ity\022\036\n\014clockFailure\030\001 \001(\010B\010\210\265\030\001\220\265\030\001\022&\n\024c"
  "lockNotSynchronized\030\002 \001(\010B\010\210\265\030\001\220\265\030\001\022\"\n\020l"
  "eapSecondsKnown\030\003 \001(\010B\010\210\265\030\001\220\265\030\001\022>\n\014timeA"
  "ccuracy\030\004 \001(\0162\036.commonmodule.TimeAccurac"
  "yKindB\010\210\265\030\001\220\265\030\001\"i\n\tTimestamp\022\032\n\010fraction"
  "\030\001 \001(\rB\010\210\265\030\001\220\265\030\001\022\031\n\007seconds\030\002 \001(\004B\010\210\265\030\001\220"
  "\265\030\001\022%\n\002tq\030\003 \001(\0132\031.commonmodule.TimeQuali"
  "ty\"}\n\004Unit\022=\n\nmultiplier\030\001 \001(\0132).commonm"
  "odule.Optional_UnitMultiplierKind\0226\n\006SIU"
  "nit\030\002 \001(\0162\034.commonmodule.UnitSymbolKindB"
  "\010\210\265\030\001\220\265\030\001\"\265\001\n\002MV\0222\n\003mag\030\001 \001(\0132\033.commonmo"
  "dule.AnalogueValueB\010\210\265\030\001\220\265\030\001\022*\n\001q\030\002 \001(\0132"
  "\025.commonmodule.QualityB\010\210\265\030\001\220\265\030\001\022,\n\001t\030\003 "
  "\001(\0132\027.commonmodule.TimestampB\010\210\265\030\001\220\265\030\001\022!"
  "\n\005units\030\004 \001(\0132\022.commonmodule.Unit\"M\n\013Log"
  "icalNode\022>\n\020identifiedObject\030\001 \001(\0132\036.com"
  "monmodule.IdentifiedObjectB\004\200\265\030\001\"\247\001\n\020Ana"
  "logStatusGGIO\0224\n\013logicalNode\030\001 \001(\0132\031.com"
  "monmodule.LogicalNodeB\004\200\265\030\001\022(\n\004AnIn\030\002 \001("
  "\0132\020.commonmodule.MVB\010\210\265\030\001\220\265\030\001\0223\n\005Phase\030\003"
  " \001(\0132$.commonmodule.Optional_PhaseCodeKi"
  "nd\"b\n\020AnalogueValueCtl\022&\n\001f\030\001 \001(\0132\033.goog"
  "le.protobuf.FloatValue\022&\n\001i\030\002 \001(\0132\033.goog"
  "le.protobuf.Int32Value\"l\n\013NamedObject\0221\n"
  "\013description\030\001 \001(\0132\034.google.protobuf.Str"
  "ingValue\022*\n\004name\030\002 \001(\0132\034.google.protobuf"
  ".StringValue\"e\n\021ApplicationSystem\0224\n\013nam"
  "edObject\030\001 \001(\0132\031.commonmodule.NamedObjec"
  "tB\004\200\265\030\001\022\032\n\004mRID\030\002 \001(\tB\014\240\265\030\001\210\265\030\001\220\265\030\001\"b\n\003A"
  "SG\0228\n\006setMag\030\001 \001(\0132\036.commonmodule.Analog"
  "ueValueCtlB\010\210\265\030\001\220\265\030\001\022!\n\005units\030\002 \001(\0132\022.co"
  "mmonmodule.Unit\"\257\001\n\003BCR\022\030\n\006actVal\030\001 \001(\003B"
  "\010\210\265\030\001\220\265\030\001\022*\n\001q\030\002 \001(\0132\025.commonmodule.Qual"
  "ityB\010\210\265\030\001\220\265\030\001\022,\n\001t\030\003 \001(\0132\027.commonmodule."
  "TimestampB\010\210\265\030\001\220\265\030\001\0224\n\005units\030\004 \001(\0132%.com"
  "monmodule.Optional_UnitSymbolKind\"j\n\tSta"
  "tusSPS\022 \n\001q\030\001 \001(\0132\025.commonmodule.Quality"
  "\022\027\n\005stVal\030\002 \001(\010B\010\210\265\030\001\220\265\030\001\022\"\n\001t\030\003 \001(\0132\027.c"
  "ommonmodule.Timestamp\"\256\001\n\021BooleanStatusG"
  "GIO\0224\n\013logicalNode\030\001 \001(\0132\031.commonmodule."
  "LogicalNodeB\004\200\265\030\001\022.\n\003Ind\030\002 \001(\0132\027.commonm"
  "odule.StatusSPSB\010\210\265\030\001\220\265\030\001\0223\n\005Phase\030\003 \001(\013"
  "2$.commonmodule.Optional_PhaseCodeKind\"w"
  "\n\017CheckConditions\0222\n\016interlockCheck\030\001 \001("
  "\0132\032.google.protobuf.BoolValue\0220\n\014synchro"
  "Check\030\002 \001(\0132\032.google.protobuf.BoolValue\""
  "f\n\006Vector\022(\n\003ang\030\001 \001(\0132\033.commonmodule.An"
  "alogueValue\0222\n\003mag\030\002 \001(\0132\033.commonmodule."
  "AnalogueValueB\010\210\265\030\001\220\265\030\001\"\260\001\n\003CMV\022,\n\004cVal\030"
  "\001 \001(\0132\024.commonmodule.VectorB\010\210\265\030\001\220\265\030\001\022*\n"
  "\001q\030\002 \001(\0132\025.commonmodule.QualityB\010\210\265\030\001\220\265\030"
  "\001\022,\n\001t\030\003 \001(\0132\027.commonmodule.TimestampB\010\210"
  "\265\030\001\220\265\030\001\022!\n\005units\030\004 \001(\0132\022.commonmodule.Un"
  "it\"k\n\023ConductingEquipment\0224\n\013namedObject"
  "\030\001 \001(\0132\031.commonmodule.NamedObjectB\004\200\265\030\001\022"
  "\036\n\004mRID\030\002 \001(\tB\020\250\265\030\001\240\265\030\001\210\265\030\001\220\265\030\001\"x\n\010Termi"
  "nal\0226\n\014aCDCTerminal\030\001 \001(\0132\032.commonmodule"
  ".ACDCTerminalB\004\200\265\030\001\0224\n\006phases\030\002 \001(\0132$.co"
  "mmonmodule.Optional_PhaseCodeKind\"X\n\"Con"
  "ductingEquipmentTerminalReading\0222\n\010termi"
  "nal\030\001 \001(\0132\026.commonmodule.TerminalB\010\210\265\030\001\220"
  "\265\030\001\"&\n\nControlDPC\022\030\n\006ctlVal\030\001 \001(\010B\010\210\265\030\001\220"
  "\265\030\001\"I\n\020ControlTimestamp\022\032\n\010fraction\030\001 \001("
  "\rB\010\210\265\030\001\220\265\030\001\022\031\n\007seconds\030\002 \001(\004B\010\210\265\030\001\220\265\030\001\"T"
  "\n\036Optional_ScheduleParameterKind\0222\n\005valu"
  "e\030\001 \001(\0162#.commonmodule.ScheduleParameter"
  "Kind\"~\n\025ENG_ScheduleParameter\022L\n\025schedul"
  "eParameterType\030\001 \001(\0162#.commonmodule.Sche"
  "duleParameterKindB\010\210\265\030\001\220\265\030\001\022\027\n\005value\030\002 \001"
  "(\002B\010\210\265\030\001\220\265\030\001\"\226\001\n\rSchedulePoint\022H\n\021schedu"
  "leParameter\030\001 \003(\0132#.commonmodule.ENG_Sch"
  "eduleParameterB\010\210\265\030\001\220\265\030\001\022;\n\tstartTime\030\002 "
  "\001(\0132\036.commonmodule.ControlTimestampB\010\210\265\030"
  "\001\220\265\030\001\"D\n\013ScheduleCSG\0225\n\006schPts\030\001 \003(\0132\033.c"
  "ommonmodule.SchedulePointB\010\210\265\030\001\220\265\030\001\"K\n\023C"
  "ontrolScheduleFSCH\0224\n\007ValACSG\030\001 \001(\0132\031.co"
  "mmonmodule.ScheduleCSGB\010\210\265\030\001\220\265\030\001\"M\n\025Logi"
  "calNodeForControl\0224\n\013logicalNode\030\001 \001(\0132\031"
  ".commonmodule.LogicalNodeB\004\200\265\030\001\"\335\001\n\013Cont"
  "rolFSCC\022H\n\025logicalNodeForControl\030\001 \001(\0132#"
  ".commonmodule.LogicalNodeForControlB\004\200\265\030"
  "\001\022>\n\023controlScheduleFSCH\030\002 \001(\0132!.commonm"
  "odule.ControlScheduleFSCH\022D\n\031islandContr"
  "olScheduleFSCH\030\003 \001(\0132!.commonmodule.Cont"
  "rolScheduleFSCH\"I\n\nControlING\022\030\n\006setVal\030"
  "\001 \001(\005B\010\210\265\030\001\220\265\030\001\022!\n\005units\030\002 \001(\0132\022.commonm"
  "odule.Unit\"&\n\nControlISC\022\030\n\006ctlVal\030\001 \001(\005"
  "B\010\210\265\030\001\220\265\030\001\"\212\001\n\013MessageInfo\022>\n\020identified"
  "Object\030\001 \001(\0132\036.commonmodule.IdentifiedOb"
  "jectB\004\200\265\030\001\022;\n\020messageTimeStamp\030\002 \001(\0132\027.c"
  "ommonmodule.TimestampB\010\210\265\030\001\220\265\030\001\"J\n\022Contr"
  "olMessageInfo\0224\n\013messageInfo\030\001 \001(\0132\031.com"
  "monmodule.MessageInfoB\004\200\265\030\001\"&\n\nControlSP"
  "C\022\030\n\006ctlVal\030\001 \001(\010B\010\210\265\030\001\220\265\030\001\"z\n\014ControlVa"
  "lue\022>\n\020identifiedObject\030\001 \001(\0132\036.commonmo"
  "dule.IdentifiedObjectB\004\200\265\030\001\022*\n\006modBlk\030\002 "
  "\001(\0132\032.google.protobuf.BoolValue\"h\n\020DateT"
  "imeInterval\022(\n\003end\030\001 \001(\0132\033.google.protob"
  "uf.Int64Value\022*\n\005start\030\002 \001(\0132\033.google.pr"
  "otobuf.Int64Value\"k\n\003DEL\022 \n\005phsAB\030\001 \001(\0132"
  "\021.commonmodule.CMV\022 \n\005phsBC\030\002 \001(\0132\021.comm"
  "onmodule.CMV\022 \n\005phsCA\030\003 \001(\0132\021.commonmodu"
  "le.CMV\"\214\001\n\016EnergyConsumer\022D\n\023conductingE"
  "quipment\030\001 \001(\0132!.commonmodule.Conducting"
  "EquipmentB\004\200\265\030\001\0224\n\016operatingLimit\030\002 \001(\0132"
  "\034.google.protobuf.StringValue\"F\n\027Optiona"
  "l_CalcMethodKind\022+\n\005value\030\001 \001(\0162\034.common"
  "module.CalcMethodKind\"L\n\022ENG_CalcMethodK"
  "ind\0226\n\006setVal\030\001 \001(\0162\034.commonmodule.CalcM"
  "ethodKindB\010\210\265\030\001\220\265\030\001\"P\n\034Optional_GridConn"
  "ectModeKind\0220\n\005value\030\001 \001(\0162!.commonmodul"
  "e.GridConnectModeKind\"\215\001\n\027ENG_GridConnec"
  "tModeKind\022;\n\006setVal\030\001 \001(\0162!.commonmodule"
  ".GridConnectModeKindB\010\210\265\030\001\220\265\030\001\0225\n\017setVal"
  "Extension\030\002 \001(\0132\034.google.protobuf.String"
  "Value\">\n\023Optional_PFSignKind\022\'\n\005value\030\001 "
  "\001(\0162\030.commonmodule.PFSignKind\"D\n\016ENG_PFS"
  "ignKind\0222\n\006setVal\030\001 \001(\0162\030.commonmodule.P"
  "FSignKindB\010\210\265\030\001\220\265\030\001\"L\n\032Optional_Behaviou"
  "rModeKind\022.\n\005value\030\001 \001(\0162\037.commonmodule."
  "BehaviourModeKind\"\253\001\n\025ENS_BehaviourModeK"
  "ind\022*\n\001q\030\001 \001(\0132\025.commonmodule.QualityB\010\210"
  "\265\030\001\220\265\030\001\0228\n\005stVal\030\002 \001(\0162\037.commonmodule.Be"
  "haviourModeKindB\010\210\265\030\001\220\265\030\001\022,\n\001t\030\003 \001(\0132\027.c"
  "ommonmodule.TimestampB\010\210\265\030\001\220\265\030\001\"T\n\036Optio"
  "nal_DERGeneratorStateKind\0222\n\005value\030\001 \001(\016"
  "2#.commonmodule.DERGeneratorStateKind\"\263\001"
  "\n\031ENS_DERGeneratorStateKind\022*\n\001q\030\001 \001(\0132\025"
  ".commonmodule.QualityB\010\210\265\030\001\220\265\030\001\022<\n\005stVal"
  "\030\002 \001(\0162#.commonmodule.DERGeneratorStateK"
  "indB\010\210\265\030\001\220\265\030\001\022,\n\001t\030\003 \001(\0132\027.commonmodule."
  "TimestampB\010\210\265\030\001\220\265\030\001\"H\n\030Optional_DynamicT"
  "estKind\022,\n\005value\030\001 \001(\0162\035.commonmodule.Dy"
  "namicTestKind\"\247\001\n\023ENS_DynamicTestKind\022*\n"
  "\001q\030\001 \001(\0132\025.commonmodule.QualityB\010\210\265\030\001\220\265\030"
  "\001\0226\n\005stVal\030\002 \001(\0162\035.commonmodule.DynamicT"
  "estKindB\010\210\265\030\001\220\265\030\001\022,\n\001t\030\003 \001(\0132\027.commonmod"
  "ule.TimestampB\010\210\265\030\001\220\265\030\001\"w\n\027ENS_GridConne"
  "ctModeKind\022:\n\005stVal\030\001 \001(\0162!.commonmodule"
  ".GridConnectModeKindB\010\210\265\030\001\220\265\030\001\022 \n\016stValE"
  "xtension\030\002 \001(\tB\010\210\265\030\001\220\265\030\001\">\n\023Optional_Hea"
  "lthKind\022\'\n\005value\030\001 \001(\0162\030.commonmodule.He"
  "althKind\"l\n\016ENS_HealthKind\022\'\n\001d\030\001 \001(\0132\034."
  "google.protobuf.StringValue\0221\n\005stVal\030\002 \001"
  "(\0162\030.commonmodule.HealthKindB\010\210\265\030\001\220\265\030\001\"K"
  "\n\003ESS\022D\n\023conductingEquipment\030\001 \001(\0132!.com"
  "monmodule.ConductingEquipmentB\004\200\265\030\001\"H\n\020E"
  "ventMessageInfo\0224\n\013messageInfo\030\001 \001(\0132\031.c"
  "ommonmodule.MessageInfoB\004\200\265\030\001\"L\n\nEventVa"
  "lue\022>\n\020identifiedObject\030\001 \001(\0132\036.commonmo"
  "dule.IdentifiedObjectB\004\200\265\030\001\"U\n\023ForecastV"
  "alueSource\022>\n\020identifiedObject\030\001 \001(\0132\036.c"
  "ommonmodule.IdentifiedObjectB\004\200\265\030\001\"\234\001\n\013F"
  "orecastIED\022D\n\023forecastValueSource\030\001 \001(\0132"
  "!.commonmodule.ForecastValueSourceB\004\200\265\030\001"
  "\022%\n\023sourceApplicationID\030\002 \001(\tB\010\210\265\030\001\220\265\030\001\022"
  " \n\016sourceDateTime\030\003 \001(\003B\010\210\265\030\001\220\265\030\001\"O\n\rFor"
  "ecastValue\022>\n\020identifiedObject\030\001 \001(\0132\036.c"
  "ommonmodule.IdentifiedObjectB\004\200\265\030\001\"E\n\003IE"
  "D\022>\n\020identifiedObject\030\001 \001(\0132\036.commonmodu"
  "le.IdentifiedObjectB\004\200\265\030\001\"\215\001\n\tStatusINS\022"
  " \n\001q\030\001 \001(\0132\025.commonmodule.Quality\022\027\n\005stV"
  "al\030\002 \001(\005B\010\210\265\030\001\220\265\030\001\022\"\n\001t\030\003 \001(\0132\027.commonmo"
  "dule.Timestamp\022!\n\005units\030\004 \001(\0132\022.commonmo"
  "dule.Unit\"\260\001\n\021IntegerStatusGGIO\0224\n\013logic"
  "alNode\030\001 \001(\0132\031.commonmodule.LogicalNodeB"
  "\004\200\265\030\001\0220\n\005IntIn\030\002 \001(\0132\027.commonmodule.Stat"
  "usINSB\010\210\265\030\001\220\265\030\001\0223\n\005Phase\030\003 \001(\0132$.commonm"
  "odule.Optional_PhaseCodeKind\"\266\001\n\034Logical"
  "NodeForEventAndStatus\0224\n\013logicalNode\030\001 \001"
  "(\0132\031.commonmodule.LogicalNodeB\004\200\265\030\001\0220\n\003B"
  "eh\030\002 \001(\0132#.commonmodule.ENS_BehaviourMod"
  "eKind\022.\n\010EEHealth\030\003 \001(\0132\034.commonmodule.E"
  "NS_HealthKind\"R\n\020MeasurementValue\022>\n\020ide"
  "ntifiedObject\030\001 \001(\0132\036.commonmodule.Ident"
  "ifiedObjectB\004\200\265\030\001\"M\n\005Meter\022D\n\023conducting"
  "Equipment\030\001 \001(\0132!.commonmodule.Conductin"
  "gEquipmentB\004\200\265\030\001\"O\n\027OptimizationMessageI"
  "nfo\0224\n\013messageInfo\030\001 \001(\0132\031.commonmodule."
  "MessageInfoB\004\200\265\030\001\"\376\002\n\013ReadingMMTN\0224\n\013log"
  "icalNode\030\001 \001(\0132\031.commonmodule.LogicalNod"
  "eB\004\200\265\030\001\022!\n\006DmdVAh\030\002 \001(\0132\021.commonmodule.B"
  "CR\022\"\n\007DmdVArh\030\003 \001(\0132\021.commonmodule.BCR\022 "
  "\n\005DmdWh\030\004 \001(\0132\021.commonmodule.BCR\022!\n\006SupV"
  "Ah\030\005 \001(\0132\021.commonmodule.BCR\022\"\n\007SupVArh\030\006"
  " \001(\0132\021.commonmodule.BCR\022 \n\005SupWh\030\007 \001(\0132\021"
  ".commonmodule.BCR\022!\n\006TotVAh\030\010 \001(\0132\021.comm"
  "onmodule.BCR\022\"\n\007TotVArh\030\t \001(\0132\021.commonmo"
  "dule.BCR\022 \n\005TotWh\030\n \001(\0132\021.commonmodule.B"
  "CR\"\204\002\n\tPhaseMMTN\022\'\n\004phsA\030\001 \001(\0132\031.commonm"
  "odule.ReadingMMTN\022(\n\005phsAB\030\002 \001(\0132\031.commo"
  "nmodule.ReadingMMTN\022\'\n\004phsB\030\003 \001(\0132\031.comm"
  "onmodule.ReadingMMTN\022(\n\005phsBC\030\004 \001(\0132\031.co"
  "mmonmodule.ReadingMMTN\022\'\n\004phsC\030\005 \001(\0132\031.c"
  "ommonmodule.ReadingMMTN\022(\n\005phsCA\030\006 \001(\0132\031"
  ".commonmodule.ReadingMMTN\"\226\002\n\010RampRate\022D"
  "\n\037negativeReactivePowerKVArPerMin\030\001 \001(\0132"
  "\033.google.protobuf.FloatValue\022>\n\031negative"
  "RealPowerKWPerMin\030\002 \001(\0132\033.google.protobu"
  "f.FloatValue\022D\n\037positiveReactivePowerKVA"
  "rPerMin\030\003 \001(\0132\033.google.protobuf.FloatVal"
  "ue\022>\n\031positiveRealPowerKWPerMin\030\004 \001(\0132\033."
  "google.protobuf.FloatValue\"J\n\022ReadingMes"
  "sageInfo\0224\n\013messageInfo\030\001 \001(\0132\031.commonmo"
  "dule.MessageInfoB\004\200\265\030\001\"\376\002\n\013ReadingMMTR\0224"
  "\n\013logicalNode\030\001 \001(\0132\031.commonmodule.Logic"
  "alNodeB\004\200\265\030\001\022!\n\006DmdVAh\030\002 \001(\0132\021.commonmod"
  "ule.BCR\022\"\n\007DmdVArh\030\003 \001(\0132\021.commonmodule."
  "BCR\022 \n\005DmdWh\030\004 \001(\0132\021.commonmodule.BCR\022!\n"
  "\006SupVAh\030\005 \001(\0132\021.commonmodule.BCR\022\"\n\007SupV"
  "Arh\030\006 \001(\0132\021.commonmodule.BCR\022 \n\005SupWh\030\007 "
  "\001(\0132\021.commonmodule.BCR\022!\n\006TotVAh\030\010 \001(\0132\021"
  ".commonmodule.BCR\022\"\n\007TotVArh\030\t \001(\0132\021.com"
  "monmodule.BCR\022 \n\005TotWh\030\n \001(\0132\021.commonmod"
  "ule.BCR\"\251\001\n\003WYE\022\036\n\003net\030\001 \001(\0132\021.commonmod"
  "ule.CMV\022\037\n\004neut\030\002 \001(\0132\021.commonmodule.CMV"
  "\022\037\n\004phsA\030\003 \001(\0132\021.commonmodule.CMV\022\037\n\004phs"
  "B\030\004 \001(\0132\021.commonmodule.CMV\022\037\n\004phsC\030\005 \001(\013"
  "2\021.commonmodule.CMV\"\233\003\n\013ReadingMMXU\0224\n\013l"
  "ogicalNode\030\001 \001(\0132\031.commonmodule.LogicalN"
  "odeB\004\200\265\030\001\022\034\n\001A\030\002 \001(\0132\021.commonmodule.WYE\022"
  "0\n\006ClcMth\030\003 \001(\0132 .commonmodule.ENG_CalcM"
  "ethodKind\022\034\n\002Hz\030\004 \001(\0132\020.commonmodule.MV\022"
  "\035\n\002PF\030\005 \001(\0132\021.commonmodule.WYE\022,\n\006PFSign"
  "\030\006 \001(\0132\034.commonmodule.ENG_PFSignKind\022\036\n\003"
  "PhV\030\007 \001(\0132\021.commonmodule.WYE\022\036\n\003PPV\030\010 \001("
  "\0132\021.commonmodule.DEL\022\035\n\002VA\030\t \001(\0132\021.commo"
  "nmodule.WYE\022\036\n\003VAr\030\n \001(\0132\021.commonmodule."
  "WYE\022\034\n\001W\030\013 \001(\0132\021.commonmodule.WYE\"<\n\022Opt"
  "ional_DbPosKind\022&\n\005value\030\001 \001(\0162\027.commonm"
  "odule.DbPosKind\"\227\001\n\tStatusDPS\022*\n\001q\030\001 \001(\013"
  "2\025.commonmodule.QualityB\010\210\265\030\001\220\265\030\001\0220\n\005stV"
  "al\030\002 \001(\0162\027.commonmodule.DbPosKindB\010\210\265\030\001\220"
  "\265\030\001\022,\n\001t\030\003 \001(\0132\027.commonmodule.TimestampB"
  "\010\210\265\030\001\220\265\030\001\"\324\001\n\022StatusAndEventXCBR\022V\n\034logi"
  "calNodeForEventAndStatus\030\001 \001(\0132*.commonm"
  "odule.LogicalNodeForEventAndStatusB\004\200\265\030\001"
  "\0226\n\013DynamicTest\030\002 \001(\0132!.commonmodule.ENS"
  "_DynamicTestKind\022.\n\003Pos\030\003 \001(\0132\027.commonmo"
  "dule.StatusDPSB\010\210\265\030\001\220\265\030\001\"j\n\tStatusISC\022 \n"
  "\001q\030\001 \001(\0132\025.commonmodule.Quality\022\027\n\005stVal"
  "\030\002 \001(\005B\010\210\265\030\001\220\265\030\001\022\"\n\001t\030\003 \001(\0132\027.commonmodu"
  "le.Timestamp\"I\n\021StatusMessageInfo\0224\n\013mes"
  "sageInfo\030\001 \001(\0132\031.commonmodule.MessageInf"
  "oB\004\200\265\030\001\"j\n\tStatusSPC\022 \n\001q\030\001 \001(\0132\025.common"
  "module.Quality\022\027\n\005stVal\030\002 \001(\010B\010\210\265\030\001\220\265\030\001\022"
  "\"\n\001t\030\003 \001(\0132\027.commonmodule.Timestamp\"M\n\013S"
  "tatusValue\022>\n\020identifiedObject\030\001 \001(\0132\036.c"
  "ommonmodule.IdentifiedObjectB\004\200\265\030\001\"x\n\003VS"
  "S\022*\n\001q\030\001 \001(\0132\025.commonmodule.QualityB\010\210\265\030"
  "\001\220\265\030\001\022\027\n\005stVal\030\002 \001(\tB\010\210\265\030\001\220\265\030\001\022,\n\001t\030\003 \001("
  "\0132\027.commonmodule.TimestampB\010\210\265\030\001\220\265\030\001\"\251\001\n"
  "\020StringStatusGGIO\0224\n\013logicalNode\030\001 \001(\0132\031"
  ".commonmodule.LogicalNodeB\004\200\265\030\001\0223\n\005Phase"
  "\030\002 \001(\0132$.commonmodule.Optional_PhaseCode"
  "Kind\022*\n\005StrIn\030\003 \001(\0132\021.commonmodule.VSSB\010"
  "\210\265\030\001\220\265\030\001\"{\n\013SwitchPoint\022/\n\003Pos\030\001 \001(\0132\030.c"
  "ommonmodule.ControlDPCB\010\210\265\030\001\220\265\030\001\022;\n\tstar"
  "tTime\030\002 \001(\0132\036.commonmodule.ControlTimest"
  "ampB\010\210\265\030\001\220\265\030\001\"@\n\tSwitchCSG\0223\n\006crvPts\030\001 \003"
  "(\0132\031.commonmodule.SwitchPointB\010\210\265\030\001\220\265\030\001\""
  "O\n\031SwitchControlScheduleFSCH\0222\n\007ValDCSG\030"
  "\001 \001(\0132\027.commonmodule.SwitchCSGB\010\210\265\030\001\220\265\030\001"
  "\"<\n\022Optional_StateKind\022&\n\005value\030\001 \001(\0162\027."
  "commonmodule.StateKind*\365\006\n\016UnitSymbolKin"
  "d\022\027\n\023UnitSymbolKind_none\020\000\022\030\n\024UnitSymbol"
  "Kind_meter\020\002\022\027\n\023UnitSymbolKind_gram\020\003\022\026\n"
  "\022UnitSymbolKind_Amp\020\005\022\026\n\022UnitSymbolKind_"
  "deg\020\t\022\026\n\022UnitSymbolKind_rad\020\n\022\027\n\023UnitSym"
  "bolKind_degC\020\027\022\030\n\024UnitSymbolKind_Farad\020\031"
  "\022\026\n\022UnitSymbolKind_sec\020\033\022\030\n\024UnitSymbolKi"
  "nd_Henry\020\034\022\024\n\020UnitSymbolKind_V\020\035\022\026\n\022Unit"
  "SymbolKind_ohm\020\036\022\030\n\024UnitSymbolKind_Joule"
  "\020\037\022\031\n\025UnitSymbolKind_Newton\020 \022\025\n\021UnitSym"
  "bolKind_Hz\020!\022\024\n\020UnitSymbolKind_W\020&\022\025\n\021Un"
  "itSymbolKind_Pa\020\'\022\025\n\021UnitSymbolKind_m2\020)"
  "\022\032\n\026UnitSymbolKind_Siemens\0205\022\025\n\021UnitSymb"
  "olKind_VA\020=\022\026\n\022UnitSymbolKind_VAr\020\?\022\031\n\025U"
  "nitSymbolKind_wPerVA\020A\022\026\n\022UnitSymbolKind"
  "_VAh\020G\022\025\n\021UnitSymbolKind_Wh\020H\022\027\n\023UnitSym"
  "bolKind_VArh\020I\022\031\n\025UnitSymbolKind_hzPerS\020"
  "K\022\030\n\024UnitSymbolKind_wPerS\020Q\022\030\n\024UnitSymbo"
  "lKind_other\020d\022\025\n\021UnitSymbolKind_Ah\020j\022\027\n\022"
  "UnitSymbolKind_min\020\237\001\022\030\n\023UnitSymbolKind_"
  "hour\020\240\001\022\026\n\021UnitSymbolKind_m3\020\246\001\022\032\n\025UnitS"
  "ymbolKind_wPerM2\020\263\001\022\030\n\023UnitSymbolKind_de"
  "gF\020\227\002\022\027\n\022UnitSymbolKind_mph\020\364\003*\364\002\n\022UnitM"
  "ultiplierKind\022\033\n\027UnitMultiplierKind_none"
  "\020\000\022\034\n\030UnitMultiplierKind_other\020\001\022\034\n\030Unit"
  "MultiplierKind_centi\020\002\022\033\n\027UnitMultiplier"
  "Kind_deci\020\003\022\033\n\027UnitMultiplierKind_Giga\020\004"
  "\022\033\n\027UnitMultiplierKind_kilo\020\005\022\033\n\027UnitMul"
  "tiplierKind_Mega\020\006\022\034\n\030UnitMultiplierKind"
  "_micro\020\007\022\034\n\030UnitMultiplierKind_milli\020\010\022\033"
  "\n\027UnitMultiplierKind_nano\020\t\022\033\n\027UnitMulti"
  "plierKind_pico\020\n\022\033\n\027UnitMultiplierKind_T"
  "era\020\013*\241\004\n\rPhaseCodeKind\022\026\n\022PhaseCodeKind"
  "_none\020\000\022\027\n\023PhaseCodeKind_other\020\001\022\023\n\017Phas"
  "eCodeKind_N\020\020\022\023\n\017PhaseCodeKind_C\020 \022\024\n\020Ph"
  "aseCodeKind_CN\020!\022\024\n\020PhaseCodeKind_AC\020(\022\025"
  "\n\021PhaseCodeKind_ACN\020)\022\023\n\017PhaseCodeKind_B"
  "\020@\022\024\n\020PhaseCodeKind_BN\020A\022\024\n\020PhaseCodeKin"
  "d_BC\020B\022\025\n\021PhaseCodeKind_BCN\020a\022\024\n\017PhaseCo"
  "deKind_A\020\200\001\022\025\n\020PhaseCodeKind_AN\020\201\001\022\025\n\020Ph"
  "aseCodeKind_AB\020\204\001\022\026\n\021PhaseCodeKind_ABN\020\301"
  "\001\022\026\n\021PhaseCodeKind_ABC\020\340\001\022\027\n\022PhaseCodeKi"
  "nd_ABCN\020\341\001\022\025\n\020PhaseCodeKind_s2\020\200\002\022\026\n\021Pha"
  "seCodeKind_s2N\020\201\002\022\025\n\020PhaseCodeKind_s1\020\200\004"
  "\022\026\n\021PhaseCodeKind_s1N\020\201\004\022\026\n\021PhaseCodeKin"
  "d_s12\020\200\006\022\027\n\022PhaseCodeKind_s12N\020\201\006*y\n\014Val"
  "idityKind\022\025\n\021ValidityKind_good\020\000\022\030\n\024Vali"
  "dityKind_invalid\020\001\022\031\n\025ValidityKind_reser"
  "ved\020\002\022\035\n\031ValidityKind_questionable\020\003*@\n\n"
  "SourceKind\022\026\n\022SourceKind_process\020\000\022\032\n\026So"
  "urceKind_substituted\020\001*\352\001\n\020TimeAccuracyK"
  "ind\022\036\n\032TimeAccuracyKind_UNDEFINED\020\000\022\027\n\023T"
  "imeAccuracyKind_T0\020\007\022\027\n\023TimeAccuracyKind"
  "_T1\020\n\022\027\n\023TimeAccuracyKind_T2\020\016\022\027\n\023TimeAc"
  "curacyKind_T3\020\020\022\027\n\023TimeAccuracyKind_T4\020\022"
  "\022\027\n\023TimeAccuracyKind_T5\020\024\022 \n\034TimeAccurac"
  "yKind_unspecified\020\037*\303\r\n\025ScheduleParamete"
  "rKind\022\036\n\032ScheduleParameterKind_none\020\000\022\037\n"
  "\033ScheduleParameterKind_other\020\001\022#\n\037Schedu"
  "leParameterKind_A_net_mag\020\002\022$\n ScheduleP"
  "arameterKind_A_neut_mag\020\003\022$\n SchedulePar"
  "ameterKind_A_phsA_mag\020\004\022$\n ScheduleParam"
  "eterKind_A_phsB_mag\020\005\022$\n ScheduleParamet"
  "erKind_A_phsC_mag\020\006\022 \n\034ScheduleParameter"
  "Kind_Hz_mag\020\007\022$\n ScheduleParameterKind_P"
  "F_net_mag\020\010\022%\n!ScheduleParameterKind_PF_"
  "neut_mag\020\t\022%\n!ScheduleParameterKind_PF_p"
  "hsA_mag\020\n\022%\n!ScheduleParameterKind_PF_ph"
  "sB_mag\020\013\022%\n!ScheduleParameterKind_PF_phs"
  "C_mag\020\014\022%\n!ScheduleParameterKind_PhV_net"
  "_ang\020\r\022%\n!ScheduleParameterKind_PhV_net_"
  "mag\020\016\022&\n\"ScheduleParameterKind_PhV_neut_"
  "ang\020\017\022&\n\"ScheduleParameterKind_PhV_neut_"
  "mag\020\020\022&\n\"ScheduleParameterKind_PhV_phsA_"
  "ang\020\021\022&\n\"ScheduleParameterKind_PhV_phsA_"
  "mag\020\022\022&\n\"ScheduleParameterKind_PhV_phsB_"
  "ang\020\023\022&\n\"ScheduleParameterKind_PhV_phsB_"
  "mag\020\024\022&\n\"ScheduleParameterKind_PhV_phsC_"
  "ang\020\025\022&\n\"ScheduleParameterKind_PhV_phsC_"
  "mag\020\026\022\'\n#ScheduleParameterKind_PPV_phsAB"
  "_ang\020\027\022\'\n#ScheduleParameterKind_PPV_phsA"
  "B_mag\020\030\022\'\n#ScheduleParameterKind_PPV_phs"
  "BC_ang\020\031\022\'\n#ScheduleParameterKind_PPV_ph"
  "sBC_mag\020\032\022\'\n#ScheduleParameterKind_PPV_p"
  "hsCA_ang\020\033\022\'\n#ScheduleParameterKind_PPV_"
  "phsCA_mag\020\034\022$\n ScheduleParameterKind_VA_"
  "net_mag\020\035\022%\n!ScheduleParameterKind_VA_ne"
  "ut_mag\020\036\022%\n!ScheduleParameterKind_VA_phs"
  "A_mag\020\037\022%\n!ScheduleParameterKind_VA_phsB"
  "_mag\020 \022%\n!ScheduleParameterKind_VA_phsC_"
  "mag\020!\022%\n!ScheduleParameterKind_VAr_net_m"
  "ag\020\"\022&\n\"ScheduleParameterKind_VAr_neut_m"
  "ag\020#\022&\n\"ScheduleParameterKind_VAr_phsA_m"
  "ag\020$\022&\n\"ScheduleParameterKind_VAr_phsB_m"
  "ag\020%\022&\n\"ScheduleParameterKind_VAr_phsC_m"
  "ag\020&\022#\n\037ScheduleParameterKind_W_net_mag\020"
  "\'\022$\n ScheduleParameterKind_W_neut_mag\020(\022"
  "$\n ScheduleParameterKind_W_phsA_mag\020)\022$\n"
  " ScheduleParameterKind_W_phsB_mag\020*\022$\n S"
  "cheduleParameterKind_W_phsC_mag\020+*\177\n\016Cal"
  "cMethodKind\022\034\n\030CalcMethodKind_UNDEFINED\020"
  "\000\022\032\n\026CalcMethodKind_P_CLASS\020\013\022\032\n\026CalcMet"
  "hodKind_M_CLASS\020\014\022\027\n\023CalcMethodKind_DIFF"
  "\020\r*\266\002\n\023GridConnectModeKind\022!\n\035GridConnec"
  "tModeKind_UNDEFINED\020\000\022\033\n\027GridConnectMode"
  "Kind_CSI\020\001\022\036\n\032GridConnectModeKind_VC_VSI"
  "\020\002\022\036\n\032GridConnectModeKind_CC_VSI\020\003\022\034\n\030Gr"
  "idConnectModeKind_none\020b\022\035\n\031GridConnectM"
  "odeKind_other\020c\022\037\n\032GridConnectModeKind_V"
  "SI_PQ\020\320\017\022\037\n\032GridConnectModeKind_VSI_VF\020\321"
  "\017\022 \n\033GridConnectModeKind_VSI_ISO\020\322\017*N\n\nP"
  "FSignKind\022\030\n\024PFSignKind_UNDEFINED\020\000\022\022\n\016P"
  "FSignKind_IEC\020\001\022\022\n\016PFSignKind_EEI\020\002*\310\001\n\021"
  "BehaviourModeKind\022\037\n\033BehaviourModeKind_U"
  "NDEFINED\020\000\022\030\n\024BehaviourModeKind_on\020\001\022\035\n\031"
  "BehaviourModeKind_blocked\020\002\022\032\n\026Behaviour"
  "ModeKind_test\020\003\022\"\n\036BehaviourModeKind_tes"
  "t_blocked\020\004\022\031\n\025BehaviourModeKind_off\020\005*\340"
  "\003\n\025DERGeneratorStateKind\022#\n\037DERGenerator"
  "StateKind_UNDEFINED\020\000\022\'\n#DERGeneratorSta"
  "teKind_Not_operating\020\001\022#\n\037DERGeneratorSt"
  "ateKind_Operating\020\002\022%\n!DERGeneratorState"
  "Kind_Starting_up\020\003\022\'\n#DERGeneratorStateK"
  "ind_Shutting_down\020\004\022-\n)DERGeneratorState"
  "Kind_At_disconnect_level\020\005\022*\n&DERGenerat"
  "orStateKind_Ramping_in_power\020\006\0223\n/DERGen"
  "eratorStateKind_Ramping_in_reactive_powe"
  "r\020\007\022!\n\035DERGeneratorStateKind_Standby\020\010\0220"
  "\n,DERGeneratorStateKind_Not_applicable_U"
  "nknown\020b\022\037\n\033DERGeneratorStateKind_Other\020"
  "c*\203\001\n\017DynamicTestKind\022\030\n\024DynamicTestKind"
  "_none\020\000\022\033\n\027DynamicTestKind_testing\020\001\022\035\n\031"
  "DynamicTestKind_operating\020\002\022\032\n\026DynamicTe"
  "stKind_failed\020\003*b\n\nHealthKind\022\023\n\017HealthK"
  "ind_none\020\000\022\021\n\rHealthKind_OK\020\001\022\026\n\022HealthK"
  "ind_Warning\020\002\022\024\n\020HealthKind_Alarm\020\003*e\n\tD"
  "bPosKind\022\027\n\023DbPosKind_transient\020\000\022\024\n\020DbP"
  "osKind_closed\020\001\022\022\n\016DbPosKind_open\020\002\022\025\n\021D"
  "bPosKind_invalid\020\003*G\n\tStateKind\022\021\n\rState"
  "Kind_off\020\000\022\020\n\014StateKind_on\020\001\022\025\n\021StateKin"
  "d_standby\020\002B\201\001\n\024openfmb.commonmoduleP\001ZP"
  "gitlab.com/openfmb/psm/ops/protobuf/go-o"
  "penfmb-ops-protobuf/openfmb/commonmodule"
  "\252\002\024openfmb.commonmoduleb\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_commonmodule_2fcommonmodule_2eproto = {
  false, InitDefaults_commonmodule_2fcommonmodule_2eproto, 
  descriptor_table_protodef_commonmodule_2fcommonmodule_2eproto,
  "commonmodule/commonmodule.proto", &assign_descriptors_table_commonmodule_2fcommonmodule_2eproto, 17951,
};

void AddDescriptors_commonmodule_2fcommonmodule_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[2] =
  {
    ::AddDescriptors_uml_2eproto,
    ::AddDescriptors_google_2fprotobuf_2fwrappers_2eproto,
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_commonmodule_2fcommonmodule_2eproto, deps, 2);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_commonmodule_2fcommonmodule_2eproto = []() { AddDescriptors_commonmodule_2fcommonmodule_2eproto(); return true; }();
namespace commonmodule {
const ::google::protobuf::EnumDescriptor* UnitSymbolKind_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return file_level_enum_descriptors_commonmodule_2fcommonmodule_2eproto[0];
}
bool UnitSymbolKind_IsValid(int value) {
  switch (value) {
    case 0:
    case 2:
    case 3:
    case 5:
    case 9:
    case 10:
    case 23:
    case 25:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
    case 38:
    case 39:
    case 41:
    case 53:
    case 61:
    case 63:
    case 65:
    case 71:
    case 72:
    case 73:
    case 75:
    case 81:
    case 100:
    case 106:
    case 159:
    case 160:
    case 166:
    case 179:
    case 279:
    case 500:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* UnitMultiplierKind_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return file_level_enum_descriptors_commonmodule_2fcommonmodule_2eproto[1];
}
bool UnitMultiplierKind_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* PhaseCodeKind_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return file_level_enum_descriptors_commonmodule_2fcommonmodule_2eproto[2];
}
bool PhaseCodeKind_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 16:
    case 32:
    case 33:
    case 40:
    case 41:
    case 64:
    case 65:
    case 66:
    case 97:
    case 128:
    case 129:
    case 132:
    case 193:
    case 224:
    case 225:
    case 256:
    case 257:
    case 512:
    case 513:
    case 768:
    case 769:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ValidityKind_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return file_level_enum_descriptors_commonmodule_2fcommonmodule_2eproto[3];
}
bool ValidityKind_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* SourceKind_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return file_level_enum_descriptors_commonmodule_2fcommonmodule_2eproto[4];
}
bool SourceKind_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* TimeAccuracyKind_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return file_level_enum_descriptors_commonmodule_2fcommonmodule_2eproto[5];
}
bool TimeAccuracyKind_IsValid(int value) {
  switch (value) {
    case 0:
    case 7:
    case 10:
    case 14:
    case 16:
    case 18:
    case 20:
    case 31:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ScheduleParameterKind_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return file_level_enum_descriptors_commonmodule_2fcommonmodule_2eproto[6];
}
bool ScheduleParameterKind_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 43:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* CalcMethodKind_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return file_level_enum_descriptors_commonmodule_2fcommonmodule_2eproto[7];
}
bool CalcMethodKind_IsValid(int value) {
  switch (value) {
    case 0:
    case 11:
    case 12:
    case 13:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* GridConnectModeKind_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return file_level_enum_descriptors_commonmodule_2fcommonmodule_2eproto[8];
}
bool GridConnectModeKind_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 98:
    case 99:
    case 2000:
    case 2001:
    case 2002:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* PFSignKind_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return file_level_enum_descriptors_commonmodule_2fcommonmodule_2eproto[9];
}
bool PFSignKind_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* BehaviourModeKind_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return file_level_enum_descriptors_commonmodule_2fcommonmodule_2eproto[10];
}
bool BehaviourModeKind_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* DERGeneratorStateKind_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return file_level_enum_descriptors_commonmodule_2fcommonmodule_2eproto[11];
}
bool DERGeneratorStateKind_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 98:
    case 99:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* DynamicTestKind_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return file_level_enum_descriptors_commonmodule_2fcommonmodule_2eproto[12];
}
bool DynamicTestKind_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* HealthKind_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return file_level_enum_descriptors_commonmodule_2fcommonmodule_2eproto[13];
}
bool HealthKind_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* DbPosKind_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return file_level_enum_descriptors_commonmodule_2fcommonmodule_2eproto[14];
}
bool DbPosKind_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* StateKind_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return file_level_enum_descriptors_commonmodule_2fcommonmodule_2eproto[15];
}
bool StateKind_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void IdentifiedObject::InitAsDefaultInstance() {
  ::commonmodule::_IdentifiedObject_default_instance_._instance.get_mutable()->description_ = const_cast< ::google::protobuf::StringValue*>(
      ::google::protobuf::StringValue::internal_default_instance());
  ::commonmodule::_IdentifiedObject_default_instance_._instance.get_mutable()->mrid_ = const_cast< ::google::protobuf::StringValue*>(
      ::google::protobuf::StringValue::internal_default_instance());
  ::commonmodule::_IdentifiedObject_default_instance_._instance.get_mutable()->name_ = const_cast< ::google::protobuf::StringValue*>(
      ::google::protobuf::StringValue::internal_default_instance());
}
class IdentifiedObject::HasBitSetters {
 public:
  static const ::google::protobuf::StringValue& description(const IdentifiedObject* msg);
  static const ::google::protobuf::StringValue& mrid(const IdentifiedObject* msg);
  static const ::google::protobuf::StringValue& name(const IdentifiedObject* msg);
};

const ::google::protobuf::StringValue&
IdentifiedObject::HasBitSetters::description(const IdentifiedObject* msg) {
  return *msg->description_;
}
const ::google::protobuf::StringValue&
IdentifiedObject::HasBitSetters::mrid(const IdentifiedObject* msg) {
  return *msg->mrid_;
}
const ::google::protobuf::StringValue&
IdentifiedObject::HasBitSetters::name(const IdentifiedObject* msg) {
  return *msg->name_;
}
void IdentifiedObject::clear_description() {
  if (GetArenaNoVirtual() == nullptr && description_ != nullptr) {
    delete description_;
  }
  description_ = nullptr;
}
void IdentifiedObject::clear_mrid() {
  if (GetArenaNoVirtual() == nullptr && mrid_ != nullptr) {
    delete mrid_;
  }
  mrid_ = nullptr;
}
void IdentifiedObject::clear_name() {
  if (GetArenaNoVirtual() == nullptr && name_ != nullptr) {
    delete name_;
  }
  name_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IdentifiedObject::kDescriptionFieldNumber;
const int IdentifiedObject::kMRIDFieldNumber;
const int IdentifiedObject::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IdentifiedObject::IdentifiedObject()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:commonmodule.IdentifiedObject)
}
IdentifiedObject::IdentifiedObject(const IdentifiedObject& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_description()) {
    description_ = new ::google::protobuf::StringValue(*from.description_);
  } else {
    description_ = nullptr;
  }
  if (from.has_mrid()) {
    mrid_ = new ::google::protobuf::StringValue(*from.mrid_);
  } else {
    mrid_ = nullptr;
  }
  if (from.has_name()) {
    name_ = new ::google::protobuf::StringValue(*from.name_);
  } else {
    name_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:commonmodule.IdentifiedObject)
}

void IdentifiedObject::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_IdentifiedObject_commonmodule_2fcommonmodule_2eproto.base);
  ::memset(&description_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&name_) -
      reinterpret_cast<char*>(&description_)) + sizeof(name_));
}

IdentifiedObject::~IdentifiedObject() {
  // @@protoc_insertion_point(destructor:commonmodule.IdentifiedObject)
  SharedDtor();
}

void IdentifiedObject::SharedDtor() {
  if (this != internal_default_instance()) delete description_;
  if (this != internal_default_instance()) delete mrid_;
  if (this != internal_default_instance()) delete name_;
}

void IdentifiedObject::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const IdentifiedObject& IdentifiedObject::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_IdentifiedObject_commonmodule_2fcommonmodule_2eproto.base);
  return *internal_default_instance();
}


void IdentifiedObject::Clear() {
// @@protoc_insertion_point(message_clear_start:commonmodule.IdentifiedObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && description_ != nullptr) {
    delete description_;
  }
  description_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && mrid_ != nullptr) {
    delete mrid_;
  }
  mrid_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && name_ != nullptr) {
    delete name_;
  }
  name_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* IdentifiedObject::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<IdentifiedObject*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .google.protobuf.StringValue description = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::StringValue::_InternalParse;
        object = msg->mutable_description();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.StringValue mRID = 2 [(.uml.option_uuid) = true];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::StringValue::_InternalParse;
        object = msg->mutable_mrid();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.StringValue name = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::StringValue::_InternalParse;
        object = msg->mutable_name();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool IdentifiedObject::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:commonmodule.IdentifiedObject)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.StringValue description = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_description()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.StringValue mRID = 2 [(.uml.option_uuid) = true];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_mrid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.StringValue name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:commonmodule.IdentifiedObject)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:commonmodule.IdentifiedObject)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void IdentifiedObject::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:commonmodule.IdentifiedObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.StringValue description = 1;
  if (this->has_description()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::description(this), output);
  }

  // .google.protobuf.StringValue mRID = 2 [(.uml.option_uuid) = true];
  if (this->has_mrid()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::mrid(this), output);
  }

  // .google.protobuf.StringValue name = 3;
  if (this->has_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::name(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:commonmodule.IdentifiedObject)
}

::google::protobuf::uint8* IdentifiedObject::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:commonmodule.IdentifiedObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.StringValue description = 1;
  if (this->has_description()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::description(this), target);
  }

  // .google.protobuf.StringValue mRID = 2 [(.uml.option_uuid) = true];
  if (this->has_mrid()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::mrid(this), target);
  }

  // .google.protobuf.StringValue name = 3;
  if (this->has_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::name(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:commonmodule.IdentifiedObject)
  return target;
}

size_t IdentifiedObject::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:commonmodule.IdentifiedObject)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.StringValue description = 1;
  if (this->has_description()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *description_);
  }

  // .google.protobuf.StringValue mRID = 2 [(.uml.option_uuid) = true];
  if (this->has_mrid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *mrid_);
  }

  // .google.protobuf.StringValue name = 3;
  if (this->has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *name_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IdentifiedObject::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:commonmodule.IdentifiedObject)
  GOOGLE_DCHECK_NE(&from, this);
  const IdentifiedObject* source =
      ::google::protobuf::DynamicCastToGenerated<IdentifiedObject>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:commonmodule.IdentifiedObject)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:commonmodule.IdentifiedObject)
    MergeFrom(*source);
  }
}

void IdentifiedObject::MergeFrom(const IdentifiedObject& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:commonmodule.IdentifiedObject)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_description()) {
    mutable_description()->::google::protobuf::StringValue::MergeFrom(from.description());
  }
  if (from.has_mrid()) {
    mutable_mrid()->::google::protobuf::StringValue::MergeFrom(from.mrid());
  }
  if (from.has_name()) {
    mutable_name()->::google::protobuf::StringValue::MergeFrom(from.name());
  }
}

void IdentifiedObject::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:commonmodule.IdentifiedObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IdentifiedObject::CopyFrom(const IdentifiedObject& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:commonmodule.IdentifiedObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IdentifiedObject::IsInitialized() const {
  return true;
}

void IdentifiedObject::Swap(IdentifiedObject* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IdentifiedObject::InternalSwap(IdentifiedObject* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(description_, other->description_);
  swap(mrid_, other->mrid_);
  swap(name_, other->name_);
}

::google::protobuf::Metadata IdentifiedObject::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return ::file_level_metadata_commonmodule_2fcommonmodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ACDCTerminal::InitAsDefaultInstance() {
  ::commonmodule::_ACDCTerminal_default_instance_._instance.get_mutable()->identifiedobject_ = const_cast< ::commonmodule::IdentifiedObject*>(
      ::commonmodule::IdentifiedObject::internal_default_instance());
  ::commonmodule::_ACDCTerminal_default_instance_._instance.get_mutable()->connected_ = const_cast< ::google::protobuf::BoolValue*>(
      ::google::protobuf::BoolValue::internal_default_instance());
  ::commonmodule::_ACDCTerminal_default_instance_._instance.get_mutable()->sequencenumber_ = const_cast< ::google::protobuf::Int32Value*>(
      ::google::protobuf::Int32Value::internal_default_instance());
}
class ACDCTerminal::HasBitSetters {
 public:
  static const ::commonmodule::IdentifiedObject& identifiedobject(const ACDCTerminal* msg);
  static const ::google::protobuf::BoolValue& connected(const ACDCTerminal* msg);
  static const ::google::protobuf::Int32Value& sequencenumber(const ACDCTerminal* msg);
};

const ::commonmodule::IdentifiedObject&
ACDCTerminal::HasBitSetters::identifiedobject(const ACDCTerminal* msg) {
  return *msg->identifiedobject_;
}
const ::google::protobuf::BoolValue&
ACDCTerminal::HasBitSetters::connected(const ACDCTerminal* msg) {
  return *msg->connected_;
}
const ::google::protobuf::Int32Value&
ACDCTerminal::HasBitSetters::sequencenumber(const ACDCTerminal* msg) {
  return *msg->sequencenumber_;
}
void ACDCTerminal::clear_connected() {
  if (GetArenaNoVirtual() == nullptr && connected_ != nullptr) {
    delete connected_;
  }
  connected_ = nullptr;
}
void ACDCTerminal::clear_sequencenumber() {
  if (GetArenaNoVirtual() == nullptr && sequencenumber_ != nullptr) {
    delete sequencenumber_;
  }
  sequencenumber_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ACDCTerminal::kIdentifiedObjectFieldNumber;
const int ACDCTerminal::kConnectedFieldNumber;
const int ACDCTerminal::kSequenceNumberFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ACDCTerminal::ACDCTerminal()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:commonmodule.ACDCTerminal)
}
ACDCTerminal::ACDCTerminal(const ACDCTerminal& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_identifiedobject()) {
    identifiedobject_ = new ::commonmodule::IdentifiedObject(*from.identifiedobject_);
  } else {
    identifiedobject_ = nullptr;
  }
  if (from.has_connected()) {
    connected_ = new ::google::protobuf::BoolValue(*from.connected_);
  } else {
    connected_ = nullptr;
  }
  if (from.has_sequencenumber()) {
    sequencenumber_ = new ::google::protobuf::Int32Value(*from.sequencenumber_);
  } else {
    sequencenumber_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:commonmodule.ACDCTerminal)
}

void ACDCTerminal::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ACDCTerminal_commonmodule_2fcommonmodule_2eproto.base);
  ::memset(&identifiedobject_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sequencenumber_) -
      reinterpret_cast<char*>(&identifiedobject_)) + sizeof(sequencenumber_));
}

ACDCTerminal::~ACDCTerminal() {
  // @@protoc_insertion_point(destructor:commonmodule.ACDCTerminal)
  SharedDtor();
}

void ACDCTerminal::SharedDtor() {
  if (this != internal_default_instance()) delete identifiedobject_;
  if (this != internal_default_instance()) delete connected_;
  if (this != internal_default_instance()) delete sequencenumber_;
}

void ACDCTerminal::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ACDCTerminal& ACDCTerminal::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ACDCTerminal_commonmodule_2fcommonmodule_2eproto.base);
  return *internal_default_instance();
}


void ACDCTerminal::Clear() {
// @@protoc_insertion_point(message_clear_start:commonmodule.ACDCTerminal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && identifiedobject_ != nullptr) {
    delete identifiedobject_;
  }
  identifiedobject_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && connected_ != nullptr) {
    delete connected_;
  }
  connected_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && sequencenumber_ != nullptr) {
    delete sequencenumber_;
  }
  sequencenumber_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ACDCTerminal::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ACDCTerminal*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .commonmodule.IdentifiedObject identifiedObject = 1 [(.uml.option_parent_message) = true];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::IdentifiedObject::_InternalParse;
        object = msg->mutable_identifiedobject();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.BoolValue connected = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::BoolValue::_InternalParse;
        object = msg->mutable_connected();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.Int32Value sequenceNumber = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::Int32Value::_InternalParse;
        object = msg->mutable_sequencenumber();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ACDCTerminal::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:commonmodule.ACDCTerminal)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .commonmodule.IdentifiedObject identifiedObject = 1 [(.uml.option_parent_message) = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_identifiedobject()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.BoolValue connected = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_connected()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Int32Value sequenceNumber = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_sequencenumber()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:commonmodule.ACDCTerminal)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:commonmodule.ACDCTerminal)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ACDCTerminal::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:commonmodule.ACDCTerminal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.IdentifiedObject identifiedObject = 1 [(.uml.option_parent_message) = true];
  if (this->has_identifiedobject()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::identifiedobject(this), output);
  }

  // .google.protobuf.BoolValue connected = 2;
  if (this->has_connected()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::connected(this), output);
  }

  // .google.protobuf.Int32Value sequenceNumber = 3;
  if (this->has_sequencenumber()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::sequencenumber(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:commonmodule.ACDCTerminal)
}

::google::protobuf::uint8* ACDCTerminal::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:commonmodule.ACDCTerminal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.IdentifiedObject identifiedObject = 1 [(.uml.option_parent_message) = true];
  if (this->has_identifiedobject()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::identifiedobject(this), target);
  }

  // .google.protobuf.BoolValue connected = 2;
  if (this->has_connected()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::connected(this), target);
  }

  // .google.protobuf.Int32Value sequenceNumber = 3;
  if (this->has_sequencenumber()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::sequencenumber(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:commonmodule.ACDCTerminal)
  return target;
}

size_t ACDCTerminal::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:commonmodule.ACDCTerminal)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .commonmodule.IdentifiedObject identifiedObject = 1 [(.uml.option_parent_message) = true];
  if (this->has_identifiedobject()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *identifiedobject_);
  }

  // .google.protobuf.BoolValue connected = 2;
  if (this->has_connected()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *connected_);
  }

  // .google.protobuf.Int32Value sequenceNumber = 3;
  if (this->has_sequencenumber()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *sequencenumber_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ACDCTerminal::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:commonmodule.ACDCTerminal)
  GOOGLE_DCHECK_NE(&from, this);
  const ACDCTerminal* source =
      ::google::protobuf::DynamicCastToGenerated<ACDCTerminal>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:commonmodule.ACDCTerminal)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:commonmodule.ACDCTerminal)
    MergeFrom(*source);
  }
}

void ACDCTerminal::MergeFrom(const ACDCTerminal& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:commonmodule.ACDCTerminal)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_identifiedobject()) {
    mutable_identifiedobject()->::commonmodule::IdentifiedObject::MergeFrom(from.identifiedobject());
  }
  if (from.has_connected()) {
    mutable_connected()->::google::protobuf::BoolValue::MergeFrom(from.connected());
  }
  if (from.has_sequencenumber()) {
    mutable_sequencenumber()->::google::protobuf::Int32Value::MergeFrom(from.sequencenumber());
  }
}

void ACDCTerminal::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:commonmodule.ACDCTerminal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ACDCTerminal::CopyFrom(const ACDCTerminal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:commonmodule.ACDCTerminal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ACDCTerminal::IsInitialized() const {
  return true;
}

void ACDCTerminal::Swap(ACDCTerminal* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ACDCTerminal::InternalSwap(ACDCTerminal* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(identifiedobject_, other->identifiedobject_);
  swap(connected_, other->connected_);
  swap(sequencenumber_, other->sequencenumber_);
}

::google::protobuf::Metadata ACDCTerminal::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return ::file_level_metadata_commonmodule_2fcommonmodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Optional_UnitSymbolKind::InitAsDefaultInstance() {
}
class Optional_UnitSymbolKind::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Optional_UnitSymbolKind::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Optional_UnitSymbolKind::Optional_UnitSymbolKind()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:commonmodule.Optional_UnitSymbolKind)
}
Optional_UnitSymbolKind::Optional_UnitSymbolKind(const Optional_UnitSymbolKind& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:commonmodule.Optional_UnitSymbolKind)
}

void Optional_UnitSymbolKind::SharedCtor() {
  value_ = 0;
}

Optional_UnitSymbolKind::~Optional_UnitSymbolKind() {
  // @@protoc_insertion_point(destructor:commonmodule.Optional_UnitSymbolKind)
  SharedDtor();
}

void Optional_UnitSymbolKind::SharedDtor() {
}

void Optional_UnitSymbolKind::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Optional_UnitSymbolKind& Optional_UnitSymbolKind::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Optional_UnitSymbolKind_commonmodule_2fcommonmodule_2eproto.base);
  return *internal_default_instance();
}


void Optional_UnitSymbolKind::Clear() {
// @@protoc_insertion_point(message_clear_start:commonmodule.Optional_UnitSymbolKind)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Optional_UnitSymbolKind::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Optional_UnitSymbolKind*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .commonmodule.UnitSymbolKind value = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_value(static_cast<::commonmodule::UnitSymbolKind>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Optional_UnitSymbolKind::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:commonmodule.Optional_UnitSymbolKind)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .commonmodule.UnitSymbolKind value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_value(static_cast< ::commonmodule::UnitSymbolKind >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:commonmodule.Optional_UnitSymbolKind)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:commonmodule.Optional_UnitSymbolKind)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Optional_UnitSymbolKind::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:commonmodule.Optional_UnitSymbolKind)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.UnitSymbolKind value = 1;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:commonmodule.Optional_UnitSymbolKind)
}

::google::protobuf::uint8* Optional_UnitSymbolKind::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:commonmodule.Optional_UnitSymbolKind)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.UnitSymbolKind value = 1;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:commonmodule.Optional_UnitSymbolKind)
  return target;
}

size_t Optional_UnitSymbolKind::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:commonmodule.Optional_UnitSymbolKind)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .commonmodule.UnitSymbolKind value = 1;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Optional_UnitSymbolKind::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:commonmodule.Optional_UnitSymbolKind)
  GOOGLE_DCHECK_NE(&from, this);
  const Optional_UnitSymbolKind* source =
      ::google::protobuf::DynamicCastToGenerated<Optional_UnitSymbolKind>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:commonmodule.Optional_UnitSymbolKind)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:commonmodule.Optional_UnitSymbolKind)
    MergeFrom(*source);
  }
}

void Optional_UnitSymbolKind::MergeFrom(const Optional_UnitSymbolKind& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:commonmodule.Optional_UnitSymbolKind)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value() != 0) {
    set_value(from.value());
  }
}

void Optional_UnitSymbolKind::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:commonmodule.Optional_UnitSymbolKind)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Optional_UnitSymbolKind::CopyFrom(const Optional_UnitSymbolKind& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:commonmodule.Optional_UnitSymbolKind)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Optional_UnitSymbolKind::IsInitialized() const {
  return true;
}

void Optional_UnitSymbolKind::Swap(Optional_UnitSymbolKind* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Optional_UnitSymbolKind::InternalSwap(Optional_UnitSymbolKind* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(value_, other->value_);
}

::google::protobuf::Metadata Optional_UnitSymbolKind::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return ::file_level_metadata_commonmodule_2fcommonmodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Optional_UnitMultiplierKind::InitAsDefaultInstance() {
}
class Optional_UnitMultiplierKind::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Optional_UnitMultiplierKind::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Optional_UnitMultiplierKind::Optional_UnitMultiplierKind()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:commonmodule.Optional_UnitMultiplierKind)
}
Optional_UnitMultiplierKind::Optional_UnitMultiplierKind(const Optional_UnitMultiplierKind& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:commonmodule.Optional_UnitMultiplierKind)
}

void Optional_UnitMultiplierKind::SharedCtor() {
  value_ = 0;
}

Optional_UnitMultiplierKind::~Optional_UnitMultiplierKind() {
  // @@protoc_insertion_point(destructor:commonmodule.Optional_UnitMultiplierKind)
  SharedDtor();
}

void Optional_UnitMultiplierKind::SharedDtor() {
}

void Optional_UnitMultiplierKind::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Optional_UnitMultiplierKind& Optional_UnitMultiplierKind::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Optional_UnitMultiplierKind_commonmodule_2fcommonmodule_2eproto.base);
  return *internal_default_instance();
}


void Optional_UnitMultiplierKind::Clear() {
// @@protoc_insertion_point(message_clear_start:commonmodule.Optional_UnitMultiplierKind)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Optional_UnitMultiplierKind::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Optional_UnitMultiplierKind*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .commonmodule.UnitMultiplierKind value = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_value(static_cast<::commonmodule::UnitMultiplierKind>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Optional_UnitMultiplierKind::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:commonmodule.Optional_UnitMultiplierKind)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .commonmodule.UnitMultiplierKind value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_value(static_cast< ::commonmodule::UnitMultiplierKind >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:commonmodule.Optional_UnitMultiplierKind)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:commonmodule.Optional_UnitMultiplierKind)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Optional_UnitMultiplierKind::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:commonmodule.Optional_UnitMultiplierKind)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.UnitMultiplierKind value = 1;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:commonmodule.Optional_UnitMultiplierKind)
}

::google::protobuf::uint8* Optional_UnitMultiplierKind::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:commonmodule.Optional_UnitMultiplierKind)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.UnitMultiplierKind value = 1;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:commonmodule.Optional_UnitMultiplierKind)
  return target;
}

size_t Optional_UnitMultiplierKind::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:commonmodule.Optional_UnitMultiplierKind)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .commonmodule.UnitMultiplierKind value = 1;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Optional_UnitMultiplierKind::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:commonmodule.Optional_UnitMultiplierKind)
  GOOGLE_DCHECK_NE(&from, this);
  const Optional_UnitMultiplierKind* source =
      ::google::protobuf::DynamicCastToGenerated<Optional_UnitMultiplierKind>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:commonmodule.Optional_UnitMultiplierKind)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:commonmodule.Optional_UnitMultiplierKind)
    MergeFrom(*source);
  }
}

void Optional_UnitMultiplierKind::MergeFrom(const Optional_UnitMultiplierKind& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:commonmodule.Optional_UnitMultiplierKind)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value() != 0) {
    set_value(from.value());
  }
}

void Optional_UnitMultiplierKind::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:commonmodule.Optional_UnitMultiplierKind)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Optional_UnitMultiplierKind::CopyFrom(const Optional_UnitMultiplierKind& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:commonmodule.Optional_UnitMultiplierKind)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Optional_UnitMultiplierKind::IsInitialized() const {
  return true;
}

void Optional_UnitMultiplierKind::Swap(Optional_UnitMultiplierKind* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Optional_UnitMultiplierKind::InternalSwap(Optional_UnitMultiplierKind* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(value_, other->value_);
}

::google::protobuf::Metadata Optional_UnitMultiplierKind::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return ::file_level_metadata_commonmodule_2fcommonmodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ActivePower::InitAsDefaultInstance() {
  ::commonmodule::_ActivePower_default_instance_._instance.get_mutable()->multiplier_ = const_cast< ::commonmodule::Optional_UnitMultiplierKind*>(
      ::commonmodule::Optional_UnitMultiplierKind::internal_default_instance());
  ::commonmodule::_ActivePower_default_instance_._instance.get_mutable()->unit_ = const_cast< ::commonmodule::Optional_UnitSymbolKind*>(
      ::commonmodule::Optional_UnitSymbolKind::internal_default_instance());
  ::commonmodule::_ActivePower_default_instance_._instance.get_mutable()->value_ = const_cast< ::google::protobuf::FloatValue*>(
      ::google::protobuf::FloatValue::internal_default_instance());
}
class ActivePower::HasBitSetters {
 public:
  static const ::commonmodule::Optional_UnitMultiplierKind& multiplier(const ActivePower* msg);
  static const ::commonmodule::Optional_UnitSymbolKind& unit(const ActivePower* msg);
  static const ::google::protobuf::FloatValue& value(const ActivePower* msg);
};

const ::commonmodule::Optional_UnitMultiplierKind&
ActivePower::HasBitSetters::multiplier(const ActivePower* msg) {
  return *msg->multiplier_;
}
const ::commonmodule::Optional_UnitSymbolKind&
ActivePower::HasBitSetters::unit(const ActivePower* msg) {
  return *msg->unit_;
}
const ::google::protobuf::FloatValue&
ActivePower::HasBitSetters::value(const ActivePower* msg) {
  return *msg->value_;
}
void ActivePower::clear_value() {
  if (GetArenaNoVirtual() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ActivePower::kMultiplierFieldNumber;
const int ActivePower::kUnitFieldNumber;
const int ActivePower::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ActivePower::ActivePower()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:commonmodule.ActivePower)
}
ActivePower::ActivePower(const ActivePower& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_multiplier()) {
    multiplier_ = new ::commonmodule::Optional_UnitMultiplierKind(*from.multiplier_);
  } else {
    multiplier_ = nullptr;
  }
  if (from.has_unit()) {
    unit_ = new ::commonmodule::Optional_UnitSymbolKind(*from.unit_);
  } else {
    unit_ = nullptr;
  }
  if (from.has_value()) {
    value_ = new ::google::protobuf::FloatValue(*from.value_);
  } else {
    value_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:commonmodule.ActivePower)
}

void ActivePower::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ActivePower_commonmodule_2fcommonmodule_2eproto.base);
  ::memset(&multiplier_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&multiplier_)) + sizeof(value_));
}

ActivePower::~ActivePower() {
  // @@protoc_insertion_point(destructor:commonmodule.ActivePower)
  SharedDtor();
}

void ActivePower::SharedDtor() {
  if (this != internal_default_instance()) delete multiplier_;
  if (this != internal_default_instance()) delete unit_;
  if (this != internal_default_instance()) delete value_;
}

void ActivePower::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ActivePower& ActivePower::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ActivePower_commonmodule_2fcommonmodule_2eproto.base);
  return *internal_default_instance();
}


void ActivePower::Clear() {
// @@protoc_insertion_point(message_clear_start:commonmodule.ActivePower)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && multiplier_ != nullptr) {
    delete multiplier_;
  }
  multiplier_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && unit_ != nullptr) {
    delete unit_;
  }
  unit_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ActivePower::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ActivePower*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .commonmodule.Optional_UnitMultiplierKind multiplier = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::Optional_UnitMultiplierKind::_InternalParse;
        object = msg->mutable_multiplier();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .commonmodule.Optional_UnitSymbolKind unit = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::Optional_UnitSymbolKind::_InternalParse;
        object = msg->mutable_unit();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.FloatValue value = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::FloatValue::_InternalParse;
        object = msg->mutable_value();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ActivePower::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:commonmodule.ActivePower)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .commonmodule.Optional_UnitMultiplierKind multiplier = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_multiplier()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.Optional_UnitSymbolKind unit = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_unit()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.FloatValue value = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:commonmodule.ActivePower)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:commonmodule.ActivePower)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ActivePower::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:commonmodule.ActivePower)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.Optional_UnitMultiplierKind multiplier = 1;
  if (this->has_multiplier()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::multiplier(this), output);
  }

  // .commonmodule.Optional_UnitSymbolKind unit = 2;
  if (this->has_unit()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::unit(this), output);
  }

  // .google.protobuf.FloatValue value = 3;
  if (this->has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::value(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:commonmodule.ActivePower)
}

::google::protobuf::uint8* ActivePower::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:commonmodule.ActivePower)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.Optional_UnitMultiplierKind multiplier = 1;
  if (this->has_multiplier()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::multiplier(this), target);
  }

  // .commonmodule.Optional_UnitSymbolKind unit = 2;
  if (this->has_unit()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::unit(this), target);
  }

  // .google.protobuf.FloatValue value = 3;
  if (this->has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::value(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:commonmodule.ActivePower)
  return target;
}

size_t ActivePower::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:commonmodule.ActivePower)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .commonmodule.Optional_UnitMultiplierKind multiplier = 1;
  if (this->has_multiplier()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *multiplier_);
  }

  // .commonmodule.Optional_UnitSymbolKind unit = 2;
  if (this->has_unit()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *unit_);
  }

  // .google.protobuf.FloatValue value = 3;
  if (this->has_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ActivePower::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:commonmodule.ActivePower)
  GOOGLE_DCHECK_NE(&from, this);
  const ActivePower* source =
      ::google::protobuf::DynamicCastToGenerated<ActivePower>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:commonmodule.ActivePower)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:commonmodule.ActivePower)
    MergeFrom(*source);
  }
}

void ActivePower::MergeFrom(const ActivePower& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:commonmodule.ActivePower)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_multiplier()) {
    mutable_multiplier()->::commonmodule::Optional_UnitMultiplierKind::MergeFrom(from.multiplier());
  }
  if (from.has_unit()) {
    mutable_unit()->::commonmodule::Optional_UnitSymbolKind::MergeFrom(from.unit());
  }
  if (from.has_value()) {
    mutable_value()->::google::protobuf::FloatValue::MergeFrom(from.value());
  }
}

void ActivePower::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:commonmodule.ActivePower)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActivePower::CopyFrom(const ActivePower& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:commonmodule.ActivePower)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActivePower::IsInitialized() const {
  return true;
}

void ActivePower::Swap(ActivePower* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ActivePower::InternalSwap(ActivePower* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(multiplier_, other->multiplier_);
  swap(unit_, other->unit_);
  swap(value_, other->value_);
}

::google::protobuf::Metadata ActivePower::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return ::file_level_metadata_commonmodule_2fcommonmodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Optional_PhaseCodeKind::InitAsDefaultInstance() {
}
class Optional_PhaseCodeKind::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Optional_PhaseCodeKind::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Optional_PhaseCodeKind::Optional_PhaseCodeKind()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:commonmodule.Optional_PhaseCodeKind)
}
Optional_PhaseCodeKind::Optional_PhaseCodeKind(const Optional_PhaseCodeKind& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:commonmodule.Optional_PhaseCodeKind)
}

void Optional_PhaseCodeKind::SharedCtor() {
  value_ = 0;
}

Optional_PhaseCodeKind::~Optional_PhaseCodeKind() {
  // @@protoc_insertion_point(destructor:commonmodule.Optional_PhaseCodeKind)
  SharedDtor();
}

void Optional_PhaseCodeKind::SharedDtor() {
}

void Optional_PhaseCodeKind::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Optional_PhaseCodeKind& Optional_PhaseCodeKind::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Optional_PhaseCodeKind_commonmodule_2fcommonmodule_2eproto.base);
  return *internal_default_instance();
}


void Optional_PhaseCodeKind::Clear() {
// @@protoc_insertion_point(message_clear_start:commonmodule.Optional_PhaseCodeKind)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Optional_PhaseCodeKind::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Optional_PhaseCodeKind*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .commonmodule.PhaseCodeKind value = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_value(static_cast<::commonmodule::PhaseCodeKind>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Optional_PhaseCodeKind::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:commonmodule.Optional_PhaseCodeKind)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .commonmodule.PhaseCodeKind value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_value(static_cast< ::commonmodule::PhaseCodeKind >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:commonmodule.Optional_PhaseCodeKind)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:commonmodule.Optional_PhaseCodeKind)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Optional_PhaseCodeKind::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:commonmodule.Optional_PhaseCodeKind)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.PhaseCodeKind value = 1;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:commonmodule.Optional_PhaseCodeKind)
}

::google::protobuf::uint8* Optional_PhaseCodeKind::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:commonmodule.Optional_PhaseCodeKind)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.PhaseCodeKind value = 1;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:commonmodule.Optional_PhaseCodeKind)
  return target;
}

size_t Optional_PhaseCodeKind::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:commonmodule.Optional_PhaseCodeKind)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .commonmodule.PhaseCodeKind value = 1;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Optional_PhaseCodeKind::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:commonmodule.Optional_PhaseCodeKind)
  GOOGLE_DCHECK_NE(&from, this);
  const Optional_PhaseCodeKind* source =
      ::google::protobuf::DynamicCastToGenerated<Optional_PhaseCodeKind>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:commonmodule.Optional_PhaseCodeKind)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:commonmodule.Optional_PhaseCodeKind)
    MergeFrom(*source);
  }
}

void Optional_PhaseCodeKind::MergeFrom(const Optional_PhaseCodeKind& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:commonmodule.Optional_PhaseCodeKind)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value() != 0) {
    set_value(from.value());
  }
}

void Optional_PhaseCodeKind::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:commonmodule.Optional_PhaseCodeKind)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Optional_PhaseCodeKind::CopyFrom(const Optional_PhaseCodeKind& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:commonmodule.Optional_PhaseCodeKind)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Optional_PhaseCodeKind::IsInitialized() const {
  return true;
}

void Optional_PhaseCodeKind::Swap(Optional_PhaseCodeKind* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Optional_PhaseCodeKind::InternalSwap(Optional_PhaseCodeKind* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(value_, other->value_);
}

::google::protobuf::Metadata Optional_PhaseCodeKind::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return ::file_level_metadata_commonmodule_2fcommonmodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void AnalogueValue::InitAsDefaultInstance() {
  ::commonmodule::_AnalogueValue_default_instance_._instance.get_mutable()->f_ = const_cast< ::google::protobuf::FloatValue*>(
      ::google::protobuf::FloatValue::internal_default_instance());
  ::commonmodule::_AnalogueValue_default_instance_._instance.get_mutable()->i_ = const_cast< ::google::protobuf::Int32Value*>(
      ::google::protobuf::Int32Value::internal_default_instance());
}
class AnalogueValue::HasBitSetters {
 public:
  static const ::google::protobuf::FloatValue& f(const AnalogueValue* msg);
  static const ::google::protobuf::Int32Value& i(const AnalogueValue* msg);
};

const ::google::protobuf::FloatValue&
AnalogueValue::HasBitSetters::f(const AnalogueValue* msg) {
  return *msg->f_;
}
const ::google::protobuf::Int32Value&
AnalogueValue::HasBitSetters::i(const AnalogueValue* msg) {
  return *msg->i_;
}
void AnalogueValue::clear_f() {
  if (GetArenaNoVirtual() == nullptr && f_ != nullptr) {
    delete f_;
  }
  f_ = nullptr;
}
void AnalogueValue::clear_i() {
  if (GetArenaNoVirtual() == nullptr && i_ != nullptr) {
    delete i_;
  }
  i_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AnalogueValue::kFFieldNumber;
const int AnalogueValue::kIFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AnalogueValue::AnalogueValue()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:commonmodule.AnalogueValue)
}
AnalogueValue::AnalogueValue(const AnalogueValue& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_f()) {
    f_ = new ::google::protobuf::FloatValue(*from.f_);
  } else {
    f_ = nullptr;
  }
  if (from.has_i()) {
    i_ = new ::google::protobuf::Int32Value(*from.i_);
  } else {
    i_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:commonmodule.AnalogueValue)
}

void AnalogueValue::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_AnalogueValue_commonmodule_2fcommonmodule_2eproto.base);
  ::memset(&f_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&i_) -
      reinterpret_cast<char*>(&f_)) + sizeof(i_));
}

AnalogueValue::~AnalogueValue() {
  // @@protoc_insertion_point(destructor:commonmodule.AnalogueValue)
  SharedDtor();
}

void AnalogueValue::SharedDtor() {
  if (this != internal_default_instance()) delete f_;
  if (this != internal_default_instance()) delete i_;
}

void AnalogueValue::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AnalogueValue& AnalogueValue::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_AnalogueValue_commonmodule_2fcommonmodule_2eproto.base);
  return *internal_default_instance();
}


void AnalogueValue::Clear() {
// @@protoc_insertion_point(message_clear_start:commonmodule.AnalogueValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && f_ != nullptr) {
    delete f_;
  }
  f_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && i_ != nullptr) {
    delete i_;
  }
  i_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* AnalogueValue::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<AnalogueValue*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .google.protobuf.FloatValue f = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::FloatValue::_InternalParse;
        object = msg->mutable_f();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.Int32Value i = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::Int32Value::_InternalParse;
        object = msg->mutable_i();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool AnalogueValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:commonmodule.AnalogueValue)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.FloatValue f = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_f()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Int32Value i = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_i()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:commonmodule.AnalogueValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:commonmodule.AnalogueValue)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void AnalogueValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:commonmodule.AnalogueValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.FloatValue f = 1;
  if (this->has_f()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::f(this), output);
  }

  // .google.protobuf.Int32Value i = 2;
  if (this->has_i()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::i(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:commonmodule.AnalogueValue)
}

::google::protobuf::uint8* AnalogueValue::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:commonmodule.AnalogueValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.FloatValue f = 1;
  if (this->has_f()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::f(this), target);
  }

  // .google.protobuf.Int32Value i = 2;
  if (this->has_i()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::i(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:commonmodule.AnalogueValue)
  return target;
}

size_t AnalogueValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:commonmodule.AnalogueValue)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.FloatValue f = 1;
  if (this->has_f()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *f_);
  }

  // .google.protobuf.Int32Value i = 2;
  if (this->has_i()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *i_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AnalogueValue::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:commonmodule.AnalogueValue)
  GOOGLE_DCHECK_NE(&from, this);
  const AnalogueValue* source =
      ::google::protobuf::DynamicCastToGenerated<AnalogueValue>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:commonmodule.AnalogueValue)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:commonmodule.AnalogueValue)
    MergeFrom(*source);
  }
}

void AnalogueValue::MergeFrom(const AnalogueValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:commonmodule.AnalogueValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_f()) {
    mutable_f()->::google::protobuf::FloatValue::MergeFrom(from.f());
  }
  if (from.has_i()) {
    mutable_i()->::google::protobuf::Int32Value::MergeFrom(from.i());
  }
}

void AnalogueValue::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:commonmodule.AnalogueValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AnalogueValue::CopyFrom(const AnalogueValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:commonmodule.AnalogueValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AnalogueValue::IsInitialized() const {
  return true;
}

void AnalogueValue::Swap(AnalogueValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AnalogueValue::InternalSwap(AnalogueValue* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(f_, other->f_);
  swap(i_, other->i_);
}

::google::protobuf::Metadata AnalogueValue::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return ::file_level_metadata_commonmodule_2fcommonmodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Optional_ValidityKind::InitAsDefaultInstance() {
}
class Optional_ValidityKind::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Optional_ValidityKind::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Optional_ValidityKind::Optional_ValidityKind()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:commonmodule.Optional_ValidityKind)
}
Optional_ValidityKind::Optional_ValidityKind(const Optional_ValidityKind& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:commonmodule.Optional_ValidityKind)
}

void Optional_ValidityKind::SharedCtor() {
  value_ = 0;
}

Optional_ValidityKind::~Optional_ValidityKind() {
  // @@protoc_insertion_point(destructor:commonmodule.Optional_ValidityKind)
  SharedDtor();
}

void Optional_ValidityKind::SharedDtor() {
}

void Optional_ValidityKind::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Optional_ValidityKind& Optional_ValidityKind::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Optional_ValidityKind_commonmodule_2fcommonmodule_2eproto.base);
  return *internal_default_instance();
}


void Optional_ValidityKind::Clear() {
// @@protoc_insertion_point(message_clear_start:commonmodule.Optional_ValidityKind)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Optional_ValidityKind::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Optional_ValidityKind*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .commonmodule.ValidityKind value = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_value(static_cast<::commonmodule::ValidityKind>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Optional_ValidityKind::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:commonmodule.Optional_ValidityKind)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .commonmodule.ValidityKind value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_value(static_cast< ::commonmodule::ValidityKind >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:commonmodule.Optional_ValidityKind)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:commonmodule.Optional_ValidityKind)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Optional_ValidityKind::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:commonmodule.Optional_ValidityKind)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.ValidityKind value = 1;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:commonmodule.Optional_ValidityKind)
}

::google::protobuf::uint8* Optional_ValidityKind::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:commonmodule.Optional_ValidityKind)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.ValidityKind value = 1;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:commonmodule.Optional_ValidityKind)
  return target;
}

size_t Optional_ValidityKind::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:commonmodule.Optional_ValidityKind)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .commonmodule.ValidityKind value = 1;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Optional_ValidityKind::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:commonmodule.Optional_ValidityKind)
  GOOGLE_DCHECK_NE(&from, this);
  const Optional_ValidityKind* source =
      ::google::protobuf::DynamicCastToGenerated<Optional_ValidityKind>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:commonmodule.Optional_ValidityKind)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:commonmodule.Optional_ValidityKind)
    MergeFrom(*source);
  }
}

void Optional_ValidityKind::MergeFrom(const Optional_ValidityKind& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:commonmodule.Optional_ValidityKind)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value() != 0) {
    set_value(from.value());
  }
}

void Optional_ValidityKind::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:commonmodule.Optional_ValidityKind)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Optional_ValidityKind::CopyFrom(const Optional_ValidityKind& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:commonmodule.Optional_ValidityKind)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Optional_ValidityKind::IsInitialized() const {
  return true;
}

void Optional_ValidityKind::Swap(Optional_ValidityKind* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Optional_ValidityKind::InternalSwap(Optional_ValidityKind* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(value_, other->value_);
}

::google::protobuf::Metadata Optional_ValidityKind::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return ::file_level_metadata_commonmodule_2fcommonmodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void DetailQual::InitAsDefaultInstance() {
}
class DetailQual::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DetailQual::kBadReferenceFieldNumber;
const int DetailQual::kFailureFieldNumber;
const int DetailQual::kInaccurateFieldNumber;
const int DetailQual::kInconsistentFieldNumber;
const int DetailQual::kOldDataFieldNumber;
const int DetailQual::kOscillatoryFieldNumber;
const int DetailQual::kOutOfRangeFieldNumber;
const int DetailQual::kOverflowFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DetailQual::DetailQual()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:commonmodule.DetailQual)
}
DetailQual::DetailQual(const DetailQual& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&badreference_, &from.badreference_,
    static_cast<size_t>(reinterpret_cast<char*>(&overflow_) -
    reinterpret_cast<char*>(&badreference_)) + sizeof(overflow_));
  // @@protoc_insertion_point(copy_constructor:commonmodule.DetailQual)
}

void DetailQual::SharedCtor() {
  ::memset(&badreference_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&overflow_) -
      reinterpret_cast<char*>(&badreference_)) + sizeof(overflow_));
}

DetailQual::~DetailQual() {
  // @@protoc_insertion_point(destructor:commonmodule.DetailQual)
  SharedDtor();
}

void DetailQual::SharedDtor() {
}

void DetailQual::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DetailQual& DetailQual::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_DetailQual_commonmodule_2fcommonmodule_2eproto.base);
  return *internal_default_instance();
}


void DetailQual::Clear() {
// @@protoc_insertion_point(message_clear_start:commonmodule.DetailQual)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&badreference_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&overflow_) -
      reinterpret_cast<char*>(&badreference_)) + sizeof(overflow_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DetailQual::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<DetailQual*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bool badReference = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_badreference(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bool failure = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_failure(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bool inaccurate = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_inaccurate(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bool inconsistent = 4 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_inconsistent(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bool oldData = 5 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_olddata(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bool oscillatory = 6 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 48) goto handle_unusual;
        msg->set_oscillatory(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bool outOfRange = 7 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 56) goto handle_unusual;
        msg->set_outofrange(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bool overflow = 8 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 64) goto handle_unusual;
        msg->set_overflow(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DetailQual::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:commonmodule.DetailQual)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool badReference = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &badreference_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool failure = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &failure_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool inaccurate = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &inaccurate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool inconsistent = 4 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &inconsistent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool oldData = 5 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &olddata_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool oscillatory = 6 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (48 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &oscillatory_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool outOfRange = 7 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (56 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &outofrange_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool overflow = 8 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (64 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &overflow_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:commonmodule.DetailQual)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:commonmodule.DetailQual)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DetailQual::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:commonmodule.DetailQual)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool badReference = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->badreference() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->badreference(), output);
  }

  // bool failure = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->failure() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->failure(), output);
  }

  // bool inaccurate = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->inaccurate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->inaccurate(), output);
  }

  // bool inconsistent = 4 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->inconsistent() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->inconsistent(), output);
  }

  // bool oldData = 5 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->olddata() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->olddata(), output);
  }

  // bool oscillatory = 6 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->oscillatory() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->oscillatory(), output);
  }

  // bool outOfRange = 7 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->outofrange() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->outofrange(), output);
  }

  // bool overflow = 8 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->overflow() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->overflow(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:commonmodule.DetailQual)
}

::google::protobuf::uint8* DetailQual::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:commonmodule.DetailQual)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool badReference = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->badreference() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->badreference(), target);
  }

  // bool failure = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->failure() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->failure(), target);
  }

  // bool inaccurate = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->inaccurate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->inaccurate(), target);
  }

  // bool inconsistent = 4 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->inconsistent() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->inconsistent(), target);
  }

  // bool oldData = 5 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->olddata() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->olddata(), target);
  }

  // bool oscillatory = 6 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->oscillatory() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->oscillatory(), target);
  }

  // bool outOfRange = 7 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->outofrange() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->outofrange(), target);
  }

  // bool overflow = 8 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->overflow() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->overflow(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:commonmodule.DetailQual)
  return target;
}

size_t DetailQual::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:commonmodule.DetailQual)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool badReference = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->badreference() != 0) {
    total_size += 1 + 1;
  }

  // bool failure = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->failure() != 0) {
    total_size += 1 + 1;
  }

  // bool inaccurate = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->inaccurate() != 0) {
    total_size += 1 + 1;
  }

  // bool inconsistent = 4 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->inconsistent() != 0) {
    total_size += 1 + 1;
  }

  // bool oldData = 5 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->olddata() != 0) {
    total_size += 1 + 1;
  }

  // bool oscillatory = 6 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->oscillatory() != 0) {
    total_size += 1 + 1;
  }

  // bool outOfRange = 7 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->outofrange() != 0) {
    total_size += 1 + 1;
  }

  // bool overflow = 8 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->overflow() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DetailQual::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:commonmodule.DetailQual)
  GOOGLE_DCHECK_NE(&from, this);
  const DetailQual* source =
      ::google::protobuf::DynamicCastToGenerated<DetailQual>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:commonmodule.DetailQual)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:commonmodule.DetailQual)
    MergeFrom(*source);
  }
}

void DetailQual::MergeFrom(const DetailQual& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:commonmodule.DetailQual)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.badreference() != 0) {
    set_badreference(from.badreference());
  }
  if (from.failure() != 0) {
    set_failure(from.failure());
  }
  if (from.inaccurate() != 0) {
    set_inaccurate(from.inaccurate());
  }
  if (from.inconsistent() != 0) {
    set_inconsistent(from.inconsistent());
  }
  if (from.olddata() != 0) {
    set_olddata(from.olddata());
  }
  if (from.oscillatory() != 0) {
    set_oscillatory(from.oscillatory());
  }
  if (from.outofrange() != 0) {
    set_outofrange(from.outofrange());
  }
  if (from.overflow() != 0) {
    set_overflow(from.overflow());
  }
}

void DetailQual::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:commonmodule.DetailQual)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DetailQual::CopyFrom(const DetailQual& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:commonmodule.DetailQual)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DetailQual::IsInitialized() const {
  return true;
}

void DetailQual::Swap(DetailQual* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DetailQual::InternalSwap(DetailQual* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(badreference_, other->badreference_);
  swap(failure_, other->failure_);
  swap(inaccurate_, other->inaccurate_);
  swap(inconsistent_, other->inconsistent_);
  swap(olddata_, other->olddata_);
  swap(oscillatory_, other->oscillatory_);
  swap(outofrange_, other->outofrange_);
  swap(overflow_, other->overflow_);
}

::google::protobuf::Metadata DetailQual::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return ::file_level_metadata_commonmodule_2fcommonmodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Optional_SourceKind::InitAsDefaultInstance() {
}
class Optional_SourceKind::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Optional_SourceKind::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Optional_SourceKind::Optional_SourceKind()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:commonmodule.Optional_SourceKind)
}
Optional_SourceKind::Optional_SourceKind(const Optional_SourceKind& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:commonmodule.Optional_SourceKind)
}

void Optional_SourceKind::SharedCtor() {
  value_ = 0;
}

Optional_SourceKind::~Optional_SourceKind() {
  // @@protoc_insertion_point(destructor:commonmodule.Optional_SourceKind)
  SharedDtor();
}

void Optional_SourceKind::SharedDtor() {
}

void Optional_SourceKind::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Optional_SourceKind& Optional_SourceKind::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Optional_SourceKind_commonmodule_2fcommonmodule_2eproto.base);
  return *internal_default_instance();
}


void Optional_SourceKind::Clear() {
// @@protoc_insertion_point(message_clear_start:commonmodule.Optional_SourceKind)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Optional_SourceKind::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Optional_SourceKind*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .commonmodule.SourceKind value = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_value(static_cast<::commonmodule::SourceKind>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Optional_SourceKind::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:commonmodule.Optional_SourceKind)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .commonmodule.SourceKind value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_value(static_cast< ::commonmodule::SourceKind >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:commonmodule.Optional_SourceKind)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:commonmodule.Optional_SourceKind)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Optional_SourceKind::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:commonmodule.Optional_SourceKind)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.SourceKind value = 1;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:commonmodule.Optional_SourceKind)
}

::google::protobuf::uint8* Optional_SourceKind::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:commonmodule.Optional_SourceKind)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.SourceKind value = 1;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:commonmodule.Optional_SourceKind)
  return target;
}

size_t Optional_SourceKind::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:commonmodule.Optional_SourceKind)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .commonmodule.SourceKind value = 1;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Optional_SourceKind::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:commonmodule.Optional_SourceKind)
  GOOGLE_DCHECK_NE(&from, this);
  const Optional_SourceKind* source =
      ::google::protobuf::DynamicCastToGenerated<Optional_SourceKind>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:commonmodule.Optional_SourceKind)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:commonmodule.Optional_SourceKind)
    MergeFrom(*source);
  }
}

void Optional_SourceKind::MergeFrom(const Optional_SourceKind& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:commonmodule.Optional_SourceKind)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value() != 0) {
    set_value(from.value());
  }
}

void Optional_SourceKind::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:commonmodule.Optional_SourceKind)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Optional_SourceKind::CopyFrom(const Optional_SourceKind& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:commonmodule.Optional_SourceKind)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Optional_SourceKind::IsInitialized() const {
  return true;
}

void Optional_SourceKind::Swap(Optional_SourceKind* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Optional_SourceKind::InternalSwap(Optional_SourceKind* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(value_, other->value_);
}

::google::protobuf::Metadata Optional_SourceKind::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return ::file_level_metadata_commonmodule_2fcommonmodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Quality::InitAsDefaultInstance() {
  ::commonmodule::_Quality_default_instance_._instance.get_mutable()->detailqual_ = const_cast< ::commonmodule::DetailQual*>(
      ::commonmodule::DetailQual::internal_default_instance());
}
class Quality::HasBitSetters {
 public:
  static const ::commonmodule::DetailQual& detailqual(const Quality* msg);
};

const ::commonmodule::DetailQual&
Quality::HasBitSetters::detailqual(const Quality* msg) {
  return *msg->detailqual_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Quality::kDetailQualFieldNumber;
const int Quality::kOperatorBlockedFieldNumber;
const int Quality::kSourceFieldNumber;
const int Quality::kTestFieldNumber;
const int Quality::kValidityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Quality::Quality()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:commonmodule.Quality)
}
Quality::Quality(const Quality& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_detailqual()) {
    detailqual_ = new ::commonmodule::DetailQual(*from.detailqual_);
  } else {
    detailqual_ = nullptr;
  }
  ::memcpy(&source_, &from.source_,
    static_cast<size_t>(reinterpret_cast<char*>(&validity_) -
    reinterpret_cast<char*>(&source_)) + sizeof(validity_));
  // @@protoc_insertion_point(copy_constructor:commonmodule.Quality)
}

void Quality::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Quality_commonmodule_2fcommonmodule_2eproto.base);
  ::memset(&detailqual_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&validity_) -
      reinterpret_cast<char*>(&detailqual_)) + sizeof(validity_));
}

Quality::~Quality() {
  // @@protoc_insertion_point(destructor:commonmodule.Quality)
  SharedDtor();
}

void Quality::SharedDtor() {
  if (this != internal_default_instance()) delete detailqual_;
}

void Quality::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Quality& Quality::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Quality_commonmodule_2fcommonmodule_2eproto.base);
  return *internal_default_instance();
}


void Quality::Clear() {
// @@protoc_insertion_point(message_clear_start:commonmodule.Quality)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && detailqual_ != nullptr) {
    delete detailqual_;
  }
  detailqual_ = nullptr;
  ::memset(&source_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&validity_) -
      reinterpret_cast<char*>(&source_)) + sizeof(validity_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Quality::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Quality*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .commonmodule.DetailQual detailQual = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::DetailQual::_InternalParse;
        object = msg->mutable_detailqual();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // bool operatorBlocked = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_operatorblocked(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .commonmodule.SourceKind source = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_source(static_cast<::commonmodule::SourceKind>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bool test = 4 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_test(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .commonmodule.ValidityKind validity = 5 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_validity(static_cast<::commonmodule::ValidityKind>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Quality::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:commonmodule.Quality)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .commonmodule.DetailQual detailQual = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_detailqual()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool operatorBlocked = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &operatorblocked_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.SourceKind source = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_source(static_cast< ::commonmodule::SourceKind >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool test = 4 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &test_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.ValidityKind validity = 5 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_validity(static_cast< ::commonmodule::ValidityKind >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:commonmodule.Quality)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:commonmodule.Quality)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Quality::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:commonmodule.Quality)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.DetailQual detailQual = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_detailqual()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::detailqual(this), output);
  }

  // bool operatorBlocked = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->operatorblocked() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->operatorblocked(), output);
  }

  // .commonmodule.SourceKind source = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->source() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->source(), output);
  }

  // bool test = 4 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->test() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->test(), output);
  }

  // .commonmodule.ValidityKind validity = 5 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->validity() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->validity(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:commonmodule.Quality)
}

::google::protobuf::uint8* Quality::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:commonmodule.Quality)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.DetailQual detailQual = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_detailqual()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::detailqual(this), target);
  }

  // bool operatorBlocked = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->operatorblocked() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->operatorblocked(), target);
  }

  // .commonmodule.SourceKind source = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->source() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->source(), target);
  }

  // bool test = 4 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->test() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->test(), target);
  }

  // .commonmodule.ValidityKind validity = 5 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->validity() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->validity(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:commonmodule.Quality)
  return target;
}

size_t Quality::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:commonmodule.Quality)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .commonmodule.DetailQual detailQual = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_detailqual()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *detailqual_);
  }

  // .commonmodule.SourceKind source = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->source() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->source());
  }

  // bool operatorBlocked = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->operatorblocked() != 0) {
    total_size += 1 + 1;
  }

  // bool test = 4 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->test() != 0) {
    total_size += 1 + 1;
  }

  // .commonmodule.ValidityKind validity = 5 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->validity() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->validity());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Quality::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:commonmodule.Quality)
  GOOGLE_DCHECK_NE(&from, this);
  const Quality* source =
      ::google::protobuf::DynamicCastToGenerated<Quality>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:commonmodule.Quality)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:commonmodule.Quality)
    MergeFrom(*source);
  }
}

void Quality::MergeFrom(const Quality& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:commonmodule.Quality)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_detailqual()) {
    mutable_detailqual()->::commonmodule::DetailQual::MergeFrom(from.detailqual());
  }
  if (from.source() != 0) {
    set_source(from.source());
  }
  if (from.operatorblocked() != 0) {
    set_operatorblocked(from.operatorblocked());
  }
  if (from.test() != 0) {
    set_test(from.test());
  }
  if (from.validity() != 0) {
    set_validity(from.validity());
  }
}

void Quality::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:commonmodule.Quality)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Quality::CopyFrom(const Quality& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:commonmodule.Quality)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Quality::IsInitialized() const {
  return true;
}

void Quality::Swap(Quality* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Quality::InternalSwap(Quality* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(detailqual_, other->detailqual_);
  swap(source_, other->source_);
  swap(operatorblocked_, other->operatorblocked_);
  swap(test_, other->test_);
  swap(validity_, other->validity_);
}

::google::protobuf::Metadata Quality::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return ::file_level_metadata_commonmodule_2fcommonmodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Optional_TimeAccuracyKind::InitAsDefaultInstance() {
}
class Optional_TimeAccuracyKind::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Optional_TimeAccuracyKind::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Optional_TimeAccuracyKind::Optional_TimeAccuracyKind()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:commonmodule.Optional_TimeAccuracyKind)
}
Optional_TimeAccuracyKind::Optional_TimeAccuracyKind(const Optional_TimeAccuracyKind& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:commonmodule.Optional_TimeAccuracyKind)
}

void Optional_TimeAccuracyKind::SharedCtor() {
  value_ = 0;
}

Optional_TimeAccuracyKind::~Optional_TimeAccuracyKind() {
  // @@protoc_insertion_point(destructor:commonmodule.Optional_TimeAccuracyKind)
  SharedDtor();
}

void Optional_TimeAccuracyKind::SharedDtor() {
}

void Optional_TimeAccuracyKind::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Optional_TimeAccuracyKind& Optional_TimeAccuracyKind::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Optional_TimeAccuracyKind_commonmodule_2fcommonmodule_2eproto.base);
  return *internal_default_instance();
}


void Optional_TimeAccuracyKind::Clear() {
// @@protoc_insertion_point(message_clear_start:commonmodule.Optional_TimeAccuracyKind)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Optional_TimeAccuracyKind::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Optional_TimeAccuracyKind*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .commonmodule.TimeAccuracyKind value = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_value(static_cast<::commonmodule::TimeAccuracyKind>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Optional_TimeAccuracyKind::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:commonmodule.Optional_TimeAccuracyKind)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .commonmodule.TimeAccuracyKind value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_value(static_cast< ::commonmodule::TimeAccuracyKind >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:commonmodule.Optional_TimeAccuracyKind)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:commonmodule.Optional_TimeAccuracyKind)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Optional_TimeAccuracyKind::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:commonmodule.Optional_TimeAccuracyKind)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.TimeAccuracyKind value = 1;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:commonmodule.Optional_TimeAccuracyKind)
}

::google::protobuf::uint8* Optional_TimeAccuracyKind::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:commonmodule.Optional_TimeAccuracyKind)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.TimeAccuracyKind value = 1;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:commonmodule.Optional_TimeAccuracyKind)
  return target;
}

size_t Optional_TimeAccuracyKind::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:commonmodule.Optional_TimeAccuracyKind)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .commonmodule.TimeAccuracyKind value = 1;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Optional_TimeAccuracyKind::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:commonmodule.Optional_TimeAccuracyKind)
  GOOGLE_DCHECK_NE(&from, this);
  const Optional_TimeAccuracyKind* source =
      ::google::protobuf::DynamicCastToGenerated<Optional_TimeAccuracyKind>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:commonmodule.Optional_TimeAccuracyKind)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:commonmodule.Optional_TimeAccuracyKind)
    MergeFrom(*source);
  }
}

void Optional_TimeAccuracyKind::MergeFrom(const Optional_TimeAccuracyKind& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:commonmodule.Optional_TimeAccuracyKind)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value() != 0) {
    set_value(from.value());
  }
}

void Optional_TimeAccuracyKind::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:commonmodule.Optional_TimeAccuracyKind)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Optional_TimeAccuracyKind::CopyFrom(const Optional_TimeAccuracyKind& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:commonmodule.Optional_TimeAccuracyKind)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Optional_TimeAccuracyKind::IsInitialized() const {
  return true;
}

void Optional_TimeAccuracyKind::Swap(Optional_TimeAccuracyKind* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Optional_TimeAccuracyKind::InternalSwap(Optional_TimeAccuracyKind* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(value_, other->value_);
}

::google::protobuf::Metadata Optional_TimeAccuracyKind::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return ::file_level_metadata_commonmodule_2fcommonmodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void TimeQuality::InitAsDefaultInstance() {
}
class TimeQuality::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TimeQuality::kClockFailureFieldNumber;
const int TimeQuality::kClockNotSynchronizedFieldNumber;
const int TimeQuality::kLeapSecondsKnownFieldNumber;
const int TimeQuality::kTimeAccuracyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TimeQuality::TimeQuality()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:commonmodule.TimeQuality)
}
TimeQuality::TimeQuality(const TimeQuality& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&clockfailure_, &from.clockfailure_,
    static_cast<size_t>(reinterpret_cast<char*>(&timeaccuracy_) -
    reinterpret_cast<char*>(&clockfailure_)) + sizeof(timeaccuracy_));
  // @@protoc_insertion_point(copy_constructor:commonmodule.TimeQuality)
}

void TimeQuality::SharedCtor() {
  ::memset(&clockfailure_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timeaccuracy_) -
      reinterpret_cast<char*>(&clockfailure_)) + sizeof(timeaccuracy_));
}

TimeQuality::~TimeQuality() {
  // @@protoc_insertion_point(destructor:commonmodule.TimeQuality)
  SharedDtor();
}

void TimeQuality::SharedDtor() {
}

void TimeQuality::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TimeQuality& TimeQuality::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_TimeQuality_commonmodule_2fcommonmodule_2eproto.base);
  return *internal_default_instance();
}


void TimeQuality::Clear() {
// @@protoc_insertion_point(message_clear_start:commonmodule.TimeQuality)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&clockfailure_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timeaccuracy_) -
      reinterpret_cast<char*>(&clockfailure_)) + sizeof(timeaccuracy_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* TimeQuality::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<TimeQuality*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bool clockFailure = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_clockfailure(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bool clockNotSynchronized = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_clocknotsynchronized(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bool leapSecondsKnown = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_leapsecondsknown(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .commonmodule.TimeAccuracyKind timeAccuracy = 4 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_timeaccuracy(static_cast<::commonmodule::TimeAccuracyKind>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool TimeQuality::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:commonmodule.TimeQuality)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool clockFailure = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &clockfailure_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool clockNotSynchronized = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &clocknotsynchronized_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool leapSecondsKnown = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &leapsecondsknown_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.TimeAccuracyKind timeAccuracy = 4 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_timeaccuracy(static_cast< ::commonmodule::TimeAccuracyKind >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:commonmodule.TimeQuality)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:commonmodule.TimeQuality)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void TimeQuality::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:commonmodule.TimeQuality)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool clockFailure = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->clockfailure() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->clockfailure(), output);
  }

  // bool clockNotSynchronized = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->clocknotsynchronized() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->clocknotsynchronized(), output);
  }

  // bool leapSecondsKnown = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->leapsecondsknown() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->leapsecondsknown(), output);
  }

  // .commonmodule.TimeAccuracyKind timeAccuracy = 4 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->timeaccuracy() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->timeaccuracy(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:commonmodule.TimeQuality)
}

::google::protobuf::uint8* TimeQuality::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:commonmodule.TimeQuality)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool clockFailure = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->clockfailure() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->clockfailure(), target);
  }

  // bool clockNotSynchronized = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->clocknotsynchronized() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->clocknotsynchronized(), target);
  }

  // bool leapSecondsKnown = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->leapsecondsknown() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->leapsecondsknown(), target);
  }

  // .commonmodule.TimeAccuracyKind timeAccuracy = 4 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->timeaccuracy() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->timeaccuracy(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:commonmodule.TimeQuality)
  return target;
}

size_t TimeQuality::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:commonmodule.TimeQuality)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool clockFailure = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->clockfailure() != 0) {
    total_size += 1 + 1;
  }

  // bool clockNotSynchronized = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->clocknotsynchronized() != 0) {
    total_size += 1 + 1;
  }

  // bool leapSecondsKnown = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->leapsecondsknown() != 0) {
    total_size += 1 + 1;
  }

  // .commonmodule.TimeAccuracyKind timeAccuracy = 4 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->timeaccuracy() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->timeaccuracy());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TimeQuality::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:commonmodule.TimeQuality)
  GOOGLE_DCHECK_NE(&from, this);
  const TimeQuality* source =
      ::google::protobuf::DynamicCastToGenerated<TimeQuality>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:commonmodule.TimeQuality)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:commonmodule.TimeQuality)
    MergeFrom(*source);
  }
}

void TimeQuality::MergeFrom(const TimeQuality& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:commonmodule.TimeQuality)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.clockfailure() != 0) {
    set_clockfailure(from.clockfailure());
  }
  if (from.clocknotsynchronized() != 0) {
    set_clocknotsynchronized(from.clocknotsynchronized());
  }
  if (from.leapsecondsknown() != 0) {
    set_leapsecondsknown(from.leapsecondsknown());
  }
  if (from.timeaccuracy() != 0) {
    set_timeaccuracy(from.timeaccuracy());
  }
}

void TimeQuality::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:commonmodule.TimeQuality)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TimeQuality::CopyFrom(const TimeQuality& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:commonmodule.TimeQuality)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TimeQuality::IsInitialized() const {
  return true;
}

void TimeQuality::Swap(TimeQuality* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TimeQuality::InternalSwap(TimeQuality* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(clockfailure_, other->clockfailure_);
  swap(clocknotsynchronized_, other->clocknotsynchronized_);
  swap(leapsecondsknown_, other->leapsecondsknown_);
  swap(timeaccuracy_, other->timeaccuracy_);
}

::google::protobuf::Metadata TimeQuality::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return ::file_level_metadata_commonmodule_2fcommonmodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Timestamp::InitAsDefaultInstance() {
  ::commonmodule::_Timestamp_default_instance_._instance.get_mutable()->tq_ = const_cast< ::commonmodule::TimeQuality*>(
      ::commonmodule::TimeQuality::internal_default_instance());
}
class Timestamp::HasBitSetters {
 public:
  static const ::commonmodule::TimeQuality& tq(const Timestamp* msg);
};

const ::commonmodule::TimeQuality&
Timestamp::HasBitSetters::tq(const Timestamp* msg) {
  return *msg->tq_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Timestamp::kFractionFieldNumber;
const int Timestamp::kSecondsFieldNumber;
const int Timestamp::kTqFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Timestamp::Timestamp()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:commonmodule.Timestamp)
}
Timestamp::Timestamp(const Timestamp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_tq()) {
    tq_ = new ::commonmodule::TimeQuality(*from.tq_);
  } else {
    tq_ = nullptr;
  }
  ::memcpy(&seconds_, &from.seconds_,
    static_cast<size_t>(reinterpret_cast<char*>(&fraction_) -
    reinterpret_cast<char*>(&seconds_)) + sizeof(fraction_));
  // @@protoc_insertion_point(copy_constructor:commonmodule.Timestamp)
}

void Timestamp::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Timestamp_commonmodule_2fcommonmodule_2eproto.base);
  ::memset(&tq_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&fraction_) -
      reinterpret_cast<char*>(&tq_)) + sizeof(fraction_));
}

Timestamp::~Timestamp() {
  // @@protoc_insertion_point(destructor:commonmodule.Timestamp)
  SharedDtor();
}

void Timestamp::SharedDtor() {
  if (this != internal_default_instance()) delete tq_;
}

void Timestamp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Timestamp& Timestamp::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Timestamp_commonmodule_2fcommonmodule_2eproto.base);
  return *internal_default_instance();
}


void Timestamp::Clear() {
// @@protoc_insertion_point(message_clear_start:commonmodule.Timestamp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && tq_ != nullptr) {
    delete tq_;
  }
  tq_ = nullptr;
  ::memset(&seconds_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&fraction_) -
      reinterpret_cast<char*>(&seconds_)) + sizeof(fraction_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Timestamp::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Timestamp*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // uint32 fraction = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_fraction(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // uint64 seconds = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_seconds(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .commonmodule.TimeQuality tq = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::TimeQuality::_InternalParse;
        object = msg->mutable_tq();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Timestamp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:commonmodule.Timestamp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 fraction = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &fraction_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 seconds = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &seconds_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.TimeQuality tq = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_tq()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:commonmodule.Timestamp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:commonmodule.Timestamp)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Timestamp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:commonmodule.Timestamp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 fraction = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->fraction() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->fraction(), output);
  }

  // uint64 seconds = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->seconds() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->seconds(), output);
  }

  // .commonmodule.TimeQuality tq = 3;
  if (this->has_tq()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::tq(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:commonmodule.Timestamp)
}

::google::protobuf::uint8* Timestamp::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:commonmodule.Timestamp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 fraction = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->fraction() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->fraction(), target);
  }

  // uint64 seconds = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->seconds() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->seconds(), target);
  }

  // .commonmodule.TimeQuality tq = 3;
  if (this->has_tq()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::tq(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:commonmodule.Timestamp)
  return target;
}

size_t Timestamp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:commonmodule.Timestamp)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .commonmodule.TimeQuality tq = 3;
  if (this->has_tq()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *tq_);
  }

  // uint64 seconds = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->seconds() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->seconds());
  }

  // uint32 fraction = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->fraction() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->fraction());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Timestamp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:commonmodule.Timestamp)
  GOOGLE_DCHECK_NE(&from, this);
  const Timestamp* source =
      ::google::protobuf::DynamicCastToGenerated<Timestamp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:commonmodule.Timestamp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:commonmodule.Timestamp)
    MergeFrom(*source);
  }
}

void Timestamp::MergeFrom(const Timestamp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:commonmodule.Timestamp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_tq()) {
    mutable_tq()->::commonmodule::TimeQuality::MergeFrom(from.tq());
  }
  if (from.seconds() != 0) {
    set_seconds(from.seconds());
  }
  if (from.fraction() != 0) {
    set_fraction(from.fraction());
  }
}

void Timestamp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:commonmodule.Timestamp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Timestamp::CopyFrom(const Timestamp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:commonmodule.Timestamp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Timestamp::IsInitialized() const {
  return true;
}

void Timestamp::Swap(Timestamp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Timestamp::InternalSwap(Timestamp* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(tq_, other->tq_);
  swap(seconds_, other->seconds_);
  swap(fraction_, other->fraction_);
}

::google::protobuf::Metadata Timestamp::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return ::file_level_metadata_commonmodule_2fcommonmodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Unit::InitAsDefaultInstance() {
  ::commonmodule::_Unit_default_instance_._instance.get_mutable()->multiplier_ = const_cast< ::commonmodule::Optional_UnitMultiplierKind*>(
      ::commonmodule::Optional_UnitMultiplierKind::internal_default_instance());
}
class Unit::HasBitSetters {
 public:
  static const ::commonmodule::Optional_UnitMultiplierKind& multiplier(const Unit* msg);
};

const ::commonmodule::Optional_UnitMultiplierKind&
Unit::HasBitSetters::multiplier(const Unit* msg) {
  return *msg->multiplier_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Unit::kMultiplierFieldNumber;
const int Unit::kSIUnitFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Unit::Unit()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:commonmodule.Unit)
}
Unit::Unit(const Unit& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_multiplier()) {
    multiplier_ = new ::commonmodule::Optional_UnitMultiplierKind(*from.multiplier_);
  } else {
    multiplier_ = nullptr;
  }
  siunit_ = from.siunit_;
  // @@protoc_insertion_point(copy_constructor:commonmodule.Unit)
}

void Unit::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Unit_commonmodule_2fcommonmodule_2eproto.base);
  ::memset(&multiplier_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&siunit_) -
      reinterpret_cast<char*>(&multiplier_)) + sizeof(siunit_));
}

Unit::~Unit() {
  // @@protoc_insertion_point(destructor:commonmodule.Unit)
  SharedDtor();
}

void Unit::SharedDtor() {
  if (this != internal_default_instance()) delete multiplier_;
}

void Unit::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Unit& Unit::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Unit_commonmodule_2fcommonmodule_2eproto.base);
  return *internal_default_instance();
}


void Unit::Clear() {
// @@protoc_insertion_point(message_clear_start:commonmodule.Unit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && multiplier_ != nullptr) {
    delete multiplier_;
  }
  multiplier_ = nullptr;
  siunit_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Unit::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Unit*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .commonmodule.Optional_UnitMultiplierKind multiplier = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::Optional_UnitMultiplierKind::_InternalParse;
        object = msg->mutable_multiplier();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .commonmodule.UnitSymbolKind SIUnit = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_siunit(static_cast<::commonmodule::UnitSymbolKind>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Unit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:commonmodule.Unit)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .commonmodule.Optional_UnitMultiplierKind multiplier = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_multiplier()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.UnitSymbolKind SIUnit = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_siunit(static_cast< ::commonmodule::UnitSymbolKind >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:commonmodule.Unit)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:commonmodule.Unit)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Unit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:commonmodule.Unit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.Optional_UnitMultiplierKind multiplier = 1;
  if (this->has_multiplier()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::multiplier(this), output);
  }

  // .commonmodule.UnitSymbolKind SIUnit = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->siunit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->siunit(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:commonmodule.Unit)
}

::google::protobuf::uint8* Unit::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:commonmodule.Unit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.Optional_UnitMultiplierKind multiplier = 1;
  if (this->has_multiplier()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::multiplier(this), target);
  }

  // .commonmodule.UnitSymbolKind SIUnit = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->siunit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->siunit(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:commonmodule.Unit)
  return target;
}

size_t Unit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:commonmodule.Unit)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .commonmodule.Optional_UnitMultiplierKind multiplier = 1;
  if (this->has_multiplier()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *multiplier_);
  }

  // .commonmodule.UnitSymbolKind SIUnit = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->siunit() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->siunit());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Unit::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:commonmodule.Unit)
  GOOGLE_DCHECK_NE(&from, this);
  const Unit* source =
      ::google::protobuf::DynamicCastToGenerated<Unit>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:commonmodule.Unit)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:commonmodule.Unit)
    MergeFrom(*source);
  }
}

void Unit::MergeFrom(const Unit& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:commonmodule.Unit)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_multiplier()) {
    mutable_multiplier()->::commonmodule::Optional_UnitMultiplierKind::MergeFrom(from.multiplier());
  }
  if (from.siunit() != 0) {
    set_siunit(from.siunit());
  }
}

void Unit::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:commonmodule.Unit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Unit::CopyFrom(const Unit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:commonmodule.Unit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Unit::IsInitialized() const {
  return true;
}

void Unit::Swap(Unit* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Unit::InternalSwap(Unit* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(multiplier_, other->multiplier_);
  swap(siunit_, other->siunit_);
}

::google::protobuf::Metadata Unit::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return ::file_level_metadata_commonmodule_2fcommonmodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MV::InitAsDefaultInstance() {
  ::commonmodule::_MV_default_instance_._instance.get_mutable()->mag_ = const_cast< ::commonmodule::AnalogueValue*>(
      ::commonmodule::AnalogueValue::internal_default_instance());
  ::commonmodule::_MV_default_instance_._instance.get_mutable()->q_ = const_cast< ::commonmodule::Quality*>(
      ::commonmodule::Quality::internal_default_instance());
  ::commonmodule::_MV_default_instance_._instance.get_mutable()->t_ = const_cast< ::commonmodule::Timestamp*>(
      ::commonmodule::Timestamp::internal_default_instance());
  ::commonmodule::_MV_default_instance_._instance.get_mutable()->units_ = const_cast< ::commonmodule::Unit*>(
      ::commonmodule::Unit::internal_default_instance());
}
class MV::HasBitSetters {
 public:
  static const ::commonmodule::AnalogueValue& mag(const MV* msg);
  static const ::commonmodule::Quality& q(const MV* msg);
  static const ::commonmodule::Timestamp& t(const MV* msg);
  static const ::commonmodule::Unit& units(const MV* msg);
};

const ::commonmodule::AnalogueValue&
MV::HasBitSetters::mag(const MV* msg) {
  return *msg->mag_;
}
const ::commonmodule::Quality&
MV::HasBitSetters::q(const MV* msg) {
  return *msg->q_;
}
const ::commonmodule::Timestamp&
MV::HasBitSetters::t(const MV* msg) {
  return *msg->t_;
}
const ::commonmodule::Unit&
MV::HasBitSetters::units(const MV* msg) {
  return *msg->units_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MV::kMagFieldNumber;
const int MV::kQFieldNumber;
const int MV::kTFieldNumber;
const int MV::kUnitsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MV::MV()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:commonmodule.MV)
}
MV::MV(const MV& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_mag()) {
    mag_ = new ::commonmodule::AnalogueValue(*from.mag_);
  } else {
    mag_ = nullptr;
  }
  if (from.has_q()) {
    q_ = new ::commonmodule::Quality(*from.q_);
  } else {
    q_ = nullptr;
  }
  if (from.has_t()) {
    t_ = new ::commonmodule::Timestamp(*from.t_);
  } else {
    t_ = nullptr;
  }
  if (from.has_units()) {
    units_ = new ::commonmodule::Unit(*from.units_);
  } else {
    units_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:commonmodule.MV)
}

void MV::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MV_commonmodule_2fcommonmodule_2eproto.base);
  ::memset(&mag_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&units_) -
      reinterpret_cast<char*>(&mag_)) + sizeof(units_));
}

MV::~MV() {
  // @@protoc_insertion_point(destructor:commonmodule.MV)
  SharedDtor();
}

void MV::SharedDtor() {
  if (this != internal_default_instance()) delete mag_;
  if (this != internal_default_instance()) delete q_;
  if (this != internal_default_instance()) delete t_;
  if (this != internal_default_instance()) delete units_;
}

void MV::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MV& MV::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MV_commonmodule_2fcommonmodule_2eproto.base);
  return *internal_default_instance();
}


void MV::Clear() {
// @@protoc_insertion_point(message_clear_start:commonmodule.MV)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && mag_ != nullptr) {
    delete mag_;
  }
  mag_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && q_ != nullptr) {
    delete q_;
  }
  q_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && t_ != nullptr) {
    delete t_;
  }
  t_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && units_ != nullptr) {
    delete units_;
  }
  units_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MV::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MV*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .commonmodule.AnalogueValue mag = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::AnalogueValue::_InternalParse;
        object = msg->mutable_mag();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .commonmodule.Quality q = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::Quality::_InternalParse;
        object = msg->mutable_q();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .commonmodule.Timestamp t = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::Timestamp::_InternalParse;
        object = msg->mutable_t();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .commonmodule.Unit units = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::Unit::_InternalParse;
        object = msg->mutable_units();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MV::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:commonmodule.MV)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .commonmodule.AnalogueValue mag = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_mag()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.Quality q = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_q()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.Timestamp t = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_t()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.Unit units = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_units()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:commonmodule.MV)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:commonmodule.MV)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MV::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:commonmodule.MV)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.AnalogueValue mag = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_mag()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::mag(this), output);
  }

  // .commonmodule.Quality q = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_q()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::q(this), output);
  }

  // .commonmodule.Timestamp t = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_t()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::t(this), output);
  }

  // .commonmodule.Unit units = 4;
  if (this->has_units()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::units(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:commonmodule.MV)
}

::google::protobuf::uint8* MV::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:commonmodule.MV)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.AnalogueValue mag = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_mag()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::mag(this), target);
  }

  // .commonmodule.Quality q = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_q()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::q(this), target);
  }

  // .commonmodule.Timestamp t = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_t()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::t(this), target);
  }

  // .commonmodule.Unit units = 4;
  if (this->has_units()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::units(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:commonmodule.MV)
  return target;
}

size_t MV::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:commonmodule.MV)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .commonmodule.AnalogueValue mag = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_mag()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *mag_);
  }

  // .commonmodule.Quality q = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_q()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *q_);
  }

  // .commonmodule.Timestamp t = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_t()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *t_);
  }

  // .commonmodule.Unit units = 4;
  if (this->has_units()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *units_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MV::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:commonmodule.MV)
  GOOGLE_DCHECK_NE(&from, this);
  const MV* source =
      ::google::protobuf::DynamicCastToGenerated<MV>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:commonmodule.MV)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:commonmodule.MV)
    MergeFrom(*source);
  }
}

void MV::MergeFrom(const MV& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:commonmodule.MV)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_mag()) {
    mutable_mag()->::commonmodule::AnalogueValue::MergeFrom(from.mag());
  }
  if (from.has_q()) {
    mutable_q()->::commonmodule::Quality::MergeFrom(from.q());
  }
  if (from.has_t()) {
    mutable_t()->::commonmodule::Timestamp::MergeFrom(from.t());
  }
  if (from.has_units()) {
    mutable_units()->::commonmodule::Unit::MergeFrom(from.units());
  }
}

void MV::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:commonmodule.MV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MV::CopyFrom(const MV& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:commonmodule.MV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MV::IsInitialized() const {
  return true;
}

void MV::Swap(MV* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MV::InternalSwap(MV* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(mag_, other->mag_);
  swap(q_, other->q_);
  swap(t_, other->t_);
  swap(units_, other->units_);
}

::google::protobuf::Metadata MV::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return ::file_level_metadata_commonmodule_2fcommonmodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void LogicalNode::InitAsDefaultInstance() {
  ::commonmodule::_LogicalNode_default_instance_._instance.get_mutable()->identifiedobject_ = const_cast< ::commonmodule::IdentifiedObject*>(
      ::commonmodule::IdentifiedObject::internal_default_instance());
}
class LogicalNode::HasBitSetters {
 public:
  static const ::commonmodule::IdentifiedObject& identifiedobject(const LogicalNode* msg);
};

const ::commonmodule::IdentifiedObject&
LogicalNode::HasBitSetters::identifiedobject(const LogicalNode* msg) {
  return *msg->identifiedobject_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LogicalNode::kIdentifiedObjectFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LogicalNode::LogicalNode()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:commonmodule.LogicalNode)
}
LogicalNode::LogicalNode(const LogicalNode& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_identifiedobject()) {
    identifiedobject_ = new ::commonmodule::IdentifiedObject(*from.identifiedobject_);
  } else {
    identifiedobject_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:commonmodule.LogicalNode)
}

void LogicalNode::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_LogicalNode_commonmodule_2fcommonmodule_2eproto.base);
  identifiedobject_ = nullptr;
}

LogicalNode::~LogicalNode() {
  // @@protoc_insertion_point(destructor:commonmodule.LogicalNode)
  SharedDtor();
}

void LogicalNode::SharedDtor() {
  if (this != internal_default_instance()) delete identifiedobject_;
}

void LogicalNode::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LogicalNode& LogicalNode::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_LogicalNode_commonmodule_2fcommonmodule_2eproto.base);
  return *internal_default_instance();
}


void LogicalNode::Clear() {
// @@protoc_insertion_point(message_clear_start:commonmodule.LogicalNode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && identifiedobject_ != nullptr) {
    delete identifiedobject_;
  }
  identifiedobject_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* LogicalNode::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<LogicalNode*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .commonmodule.IdentifiedObject identifiedObject = 1 [(.uml.option_parent_message) = true];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::IdentifiedObject::_InternalParse;
        object = msg->mutable_identifiedobject();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool LogicalNode::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:commonmodule.LogicalNode)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .commonmodule.IdentifiedObject identifiedObject = 1 [(.uml.option_parent_message) = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_identifiedobject()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:commonmodule.LogicalNode)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:commonmodule.LogicalNode)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void LogicalNode::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:commonmodule.LogicalNode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.IdentifiedObject identifiedObject = 1 [(.uml.option_parent_message) = true];
  if (this->has_identifiedobject()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::identifiedobject(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:commonmodule.LogicalNode)
}

::google::protobuf::uint8* LogicalNode::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:commonmodule.LogicalNode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.IdentifiedObject identifiedObject = 1 [(.uml.option_parent_message) = true];
  if (this->has_identifiedobject()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::identifiedobject(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:commonmodule.LogicalNode)
  return target;
}

size_t LogicalNode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:commonmodule.LogicalNode)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .commonmodule.IdentifiedObject identifiedObject = 1 [(.uml.option_parent_message) = true];
  if (this->has_identifiedobject()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *identifiedobject_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LogicalNode::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:commonmodule.LogicalNode)
  GOOGLE_DCHECK_NE(&from, this);
  const LogicalNode* source =
      ::google::protobuf::DynamicCastToGenerated<LogicalNode>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:commonmodule.LogicalNode)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:commonmodule.LogicalNode)
    MergeFrom(*source);
  }
}

void LogicalNode::MergeFrom(const LogicalNode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:commonmodule.LogicalNode)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_identifiedobject()) {
    mutable_identifiedobject()->::commonmodule::IdentifiedObject::MergeFrom(from.identifiedobject());
  }
}

void LogicalNode::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:commonmodule.LogicalNode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LogicalNode::CopyFrom(const LogicalNode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:commonmodule.LogicalNode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogicalNode::IsInitialized() const {
  return true;
}

void LogicalNode::Swap(LogicalNode* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LogicalNode::InternalSwap(LogicalNode* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(identifiedobject_, other->identifiedobject_);
}

::google::protobuf::Metadata LogicalNode::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return ::file_level_metadata_commonmodule_2fcommonmodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void AnalogStatusGGIO::InitAsDefaultInstance() {
  ::commonmodule::_AnalogStatusGGIO_default_instance_._instance.get_mutable()->logicalnode_ = const_cast< ::commonmodule::LogicalNode*>(
      ::commonmodule::LogicalNode::internal_default_instance());
  ::commonmodule::_AnalogStatusGGIO_default_instance_._instance.get_mutable()->anin_ = const_cast< ::commonmodule::MV*>(
      ::commonmodule::MV::internal_default_instance());
  ::commonmodule::_AnalogStatusGGIO_default_instance_._instance.get_mutable()->phase_ = const_cast< ::commonmodule::Optional_PhaseCodeKind*>(
      ::commonmodule::Optional_PhaseCodeKind::internal_default_instance());
}
class AnalogStatusGGIO::HasBitSetters {
 public:
  static const ::commonmodule::LogicalNode& logicalnode(const AnalogStatusGGIO* msg);
  static const ::commonmodule::MV& anin(const AnalogStatusGGIO* msg);
  static const ::commonmodule::Optional_PhaseCodeKind& phase(const AnalogStatusGGIO* msg);
};

const ::commonmodule::LogicalNode&
AnalogStatusGGIO::HasBitSetters::logicalnode(const AnalogStatusGGIO* msg) {
  return *msg->logicalnode_;
}
const ::commonmodule::MV&
AnalogStatusGGIO::HasBitSetters::anin(const AnalogStatusGGIO* msg) {
  return *msg->anin_;
}
const ::commonmodule::Optional_PhaseCodeKind&
AnalogStatusGGIO::HasBitSetters::phase(const AnalogStatusGGIO* msg) {
  return *msg->phase_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AnalogStatusGGIO::kLogicalNodeFieldNumber;
const int AnalogStatusGGIO::kAnInFieldNumber;
const int AnalogStatusGGIO::kPhaseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AnalogStatusGGIO::AnalogStatusGGIO()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:commonmodule.AnalogStatusGGIO)
}
AnalogStatusGGIO::AnalogStatusGGIO(const AnalogStatusGGIO& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_logicalnode()) {
    logicalnode_ = new ::commonmodule::LogicalNode(*from.logicalnode_);
  } else {
    logicalnode_ = nullptr;
  }
  if (from.has_anin()) {
    anin_ = new ::commonmodule::MV(*from.anin_);
  } else {
    anin_ = nullptr;
  }
  if (from.has_phase()) {
    phase_ = new ::commonmodule::Optional_PhaseCodeKind(*from.phase_);
  } else {
    phase_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:commonmodule.AnalogStatusGGIO)
}

void AnalogStatusGGIO::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_AnalogStatusGGIO_commonmodule_2fcommonmodule_2eproto.base);
  ::memset(&logicalnode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&phase_) -
      reinterpret_cast<char*>(&logicalnode_)) + sizeof(phase_));
}

AnalogStatusGGIO::~AnalogStatusGGIO() {
  // @@protoc_insertion_point(destructor:commonmodule.AnalogStatusGGIO)
  SharedDtor();
}

void AnalogStatusGGIO::SharedDtor() {
  if (this != internal_default_instance()) delete logicalnode_;
  if (this != internal_default_instance()) delete anin_;
  if (this != internal_default_instance()) delete phase_;
}

void AnalogStatusGGIO::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AnalogStatusGGIO& AnalogStatusGGIO::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_AnalogStatusGGIO_commonmodule_2fcommonmodule_2eproto.base);
  return *internal_default_instance();
}


void AnalogStatusGGIO::Clear() {
// @@protoc_insertion_point(message_clear_start:commonmodule.AnalogStatusGGIO)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && logicalnode_ != nullptr) {
    delete logicalnode_;
  }
  logicalnode_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && anin_ != nullptr) {
    delete anin_;
  }
  anin_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && phase_ != nullptr) {
    delete phase_;
  }
  phase_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* AnalogStatusGGIO::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<AnalogStatusGGIO*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .commonmodule.LogicalNode logicalNode = 1 [(.uml.option_parent_message) = true];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::LogicalNode::_InternalParse;
        object = msg->mutable_logicalnode();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .commonmodule.MV AnIn = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::MV::_InternalParse;
        object = msg->mutable_anin();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .commonmodule.Optional_PhaseCodeKind Phase = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::Optional_PhaseCodeKind::_InternalParse;
        object = msg->mutable_phase();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool AnalogStatusGGIO::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:commonmodule.AnalogStatusGGIO)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .commonmodule.LogicalNode logicalNode = 1 [(.uml.option_parent_message) = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_logicalnode()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.MV AnIn = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_anin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.Optional_PhaseCodeKind Phase = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_phase()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:commonmodule.AnalogStatusGGIO)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:commonmodule.AnalogStatusGGIO)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void AnalogStatusGGIO::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:commonmodule.AnalogStatusGGIO)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.LogicalNode logicalNode = 1 [(.uml.option_parent_message) = true];
  if (this->has_logicalnode()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::logicalnode(this), output);
  }

  // .commonmodule.MV AnIn = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_anin()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::anin(this), output);
  }

  // .commonmodule.Optional_PhaseCodeKind Phase = 3;
  if (this->has_phase()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::phase(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:commonmodule.AnalogStatusGGIO)
}

::google::protobuf::uint8* AnalogStatusGGIO::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:commonmodule.AnalogStatusGGIO)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.LogicalNode logicalNode = 1 [(.uml.option_parent_message) = true];
  if (this->has_logicalnode()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::logicalnode(this), target);
  }

  // .commonmodule.MV AnIn = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_anin()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::anin(this), target);
  }

  // .commonmodule.Optional_PhaseCodeKind Phase = 3;
  if (this->has_phase()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::phase(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:commonmodule.AnalogStatusGGIO)
  return target;
}

size_t AnalogStatusGGIO::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:commonmodule.AnalogStatusGGIO)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .commonmodule.LogicalNode logicalNode = 1 [(.uml.option_parent_message) = true];
  if (this->has_logicalnode()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *logicalnode_);
  }

  // .commonmodule.MV AnIn = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_anin()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *anin_);
  }

  // .commonmodule.Optional_PhaseCodeKind Phase = 3;
  if (this->has_phase()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *phase_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AnalogStatusGGIO::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:commonmodule.AnalogStatusGGIO)
  GOOGLE_DCHECK_NE(&from, this);
  const AnalogStatusGGIO* source =
      ::google::protobuf::DynamicCastToGenerated<AnalogStatusGGIO>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:commonmodule.AnalogStatusGGIO)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:commonmodule.AnalogStatusGGIO)
    MergeFrom(*source);
  }
}

void AnalogStatusGGIO::MergeFrom(const AnalogStatusGGIO& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:commonmodule.AnalogStatusGGIO)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_logicalnode()) {
    mutable_logicalnode()->::commonmodule::LogicalNode::MergeFrom(from.logicalnode());
  }
  if (from.has_anin()) {
    mutable_anin()->::commonmodule::MV::MergeFrom(from.anin());
  }
  if (from.has_phase()) {
    mutable_phase()->::commonmodule::Optional_PhaseCodeKind::MergeFrom(from.phase());
  }
}

void AnalogStatusGGIO::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:commonmodule.AnalogStatusGGIO)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AnalogStatusGGIO::CopyFrom(const AnalogStatusGGIO& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:commonmodule.AnalogStatusGGIO)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AnalogStatusGGIO::IsInitialized() const {
  return true;
}

void AnalogStatusGGIO::Swap(AnalogStatusGGIO* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AnalogStatusGGIO::InternalSwap(AnalogStatusGGIO* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(logicalnode_, other->logicalnode_);
  swap(anin_, other->anin_);
  swap(phase_, other->phase_);
}

::google::protobuf::Metadata AnalogStatusGGIO::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return ::file_level_metadata_commonmodule_2fcommonmodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void AnalogueValueCtl::InitAsDefaultInstance() {
  ::commonmodule::_AnalogueValueCtl_default_instance_._instance.get_mutable()->f_ = const_cast< ::google::protobuf::FloatValue*>(
      ::google::protobuf::FloatValue::internal_default_instance());
  ::commonmodule::_AnalogueValueCtl_default_instance_._instance.get_mutable()->i_ = const_cast< ::google::protobuf::Int32Value*>(
      ::google::protobuf::Int32Value::internal_default_instance());
}
class AnalogueValueCtl::HasBitSetters {
 public:
  static const ::google::protobuf::FloatValue& f(const AnalogueValueCtl* msg);
  static const ::google::protobuf::Int32Value& i(const AnalogueValueCtl* msg);
};

const ::google::protobuf::FloatValue&
AnalogueValueCtl::HasBitSetters::f(const AnalogueValueCtl* msg) {
  return *msg->f_;
}
const ::google::protobuf::Int32Value&
AnalogueValueCtl::HasBitSetters::i(const AnalogueValueCtl* msg) {
  return *msg->i_;
}
void AnalogueValueCtl::clear_f() {
  if (GetArenaNoVirtual() == nullptr && f_ != nullptr) {
    delete f_;
  }
  f_ = nullptr;
}
void AnalogueValueCtl::clear_i() {
  if (GetArenaNoVirtual() == nullptr && i_ != nullptr) {
    delete i_;
  }
  i_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AnalogueValueCtl::kFFieldNumber;
const int AnalogueValueCtl::kIFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AnalogueValueCtl::AnalogueValueCtl()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:commonmodule.AnalogueValueCtl)
}
AnalogueValueCtl::AnalogueValueCtl(const AnalogueValueCtl& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_f()) {
    f_ = new ::google::protobuf::FloatValue(*from.f_);
  } else {
    f_ = nullptr;
  }
  if (from.has_i()) {
    i_ = new ::google::protobuf::Int32Value(*from.i_);
  } else {
    i_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:commonmodule.AnalogueValueCtl)
}

void AnalogueValueCtl::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_AnalogueValueCtl_commonmodule_2fcommonmodule_2eproto.base);
  ::memset(&f_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&i_) -
      reinterpret_cast<char*>(&f_)) + sizeof(i_));
}

AnalogueValueCtl::~AnalogueValueCtl() {
  // @@protoc_insertion_point(destructor:commonmodule.AnalogueValueCtl)
  SharedDtor();
}

void AnalogueValueCtl::SharedDtor() {
  if (this != internal_default_instance()) delete f_;
  if (this != internal_default_instance()) delete i_;
}

void AnalogueValueCtl::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AnalogueValueCtl& AnalogueValueCtl::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_AnalogueValueCtl_commonmodule_2fcommonmodule_2eproto.base);
  return *internal_default_instance();
}


void AnalogueValueCtl::Clear() {
// @@protoc_insertion_point(message_clear_start:commonmodule.AnalogueValueCtl)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && f_ != nullptr) {
    delete f_;
  }
  f_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && i_ != nullptr) {
    delete i_;
  }
  i_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* AnalogueValueCtl::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<AnalogueValueCtl*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .google.protobuf.FloatValue f = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::FloatValue::_InternalParse;
        object = msg->mutable_f();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.Int32Value i = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::Int32Value::_InternalParse;
        object = msg->mutable_i();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool AnalogueValueCtl::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:commonmodule.AnalogueValueCtl)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.FloatValue f = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_f()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Int32Value i = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_i()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:commonmodule.AnalogueValueCtl)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:commonmodule.AnalogueValueCtl)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void AnalogueValueCtl::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:commonmodule.AnalogueValueCtl)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.FloatValue f = 1;
  if (this->has_f()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::f(this), output);
  }

  // .google.protobuf.Int32Value i = 2;
  if (this->has_i()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::i(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:commonmodule.AnalogueValueCtl)
}

::google::protobuf::uint8* AnalogueValueCtl::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:commonmodule.AnalogueValueCtl)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.FloatValue f = 1;
  if (this->has_f()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::f(this), target);
  }

  // .google.protobuf.Int32Value i = 2;
  if (this->has_i()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::i(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:commonmodule.AnalogueValueCtl)
  return target;
}

size_t AnalogueValueCtl::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:commonmodule.AnalogueValueCtl)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.FloatValue f = 1;
  if (this->has_f()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *f_);
  }

  // .google.protobuf.Int32Value i = 2;
  if (this->has_i()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *i_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AnalogueValueCtl::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:commonmodule.AnalogueValueCtl)
  GOOGLE_DCHECK_NE(&from, this);
  const AnalogueValueCtl* source =
      ::google::protobuf::DynamicCastToGenerated<AnalogueValueCtl>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:commonmodule.AnalogueValueCtl)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:commonmodule.AnalogueValueCtl)
    MergeFrom(*source);
  }
}

void AnalogueValueCtl::MergeFrom(const AnalogueValueCtl& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:commonmodule.AnalogueValueCtl)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_f()) {
    mutable_f()->::google::protobuf::FloatValue::MergeFrom(from.f());
  }
  if (from.has_i()) {
    mutable_i()->::google::protobuf::Int32Value::MergeFrom(from.i());
  }
}

void AnalogueValueCtl::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:commonmodule.AnalogueValueCtl)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AnalogueValueCtl::CopyFrom(const AnalogueValueCtl& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:commonmodule.AnalogueValueCtl)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AnalogueValueCtl::IsInitialized() const {
  return true;
}

void AnalogueValueCtl::Swap(AnalogueValueCtl* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AnalogueValueCtl::InternalSwap(AnalogueValueCtl* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(f_, other->f_);
  swap(i_, other->i_);
}

::google::protobuf::Metadata AnalogueValueCtl::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return ::file_level_metadata_commonmodule_2fcommonmodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void NamedObject::InitAsDefaultInstance() {
  ::commonmodule::_NamedObject_default_instance_._instance.get_mutable()->description_ = const_cast< ::google::protobuf::StringValue*>(
      ::google::protobuf::StringValue::internal_default_instance());
  ::commonmodule::_NamedObject_default_instance_._instance.get_mutable()->name_ = const_cast< ::google::protobuf::StringValue*>(
      ::google::protobuf::StringValue::internal_default_instance());
}
class NamedObject::HasBitSetters {
 public:
  static const ::google::protobuf::StringValue& description(const NamedObject* msg);
  static const ::google::protobuf::StringValue& name(const NamedObject* msg);
};

const ::google::protobuf::StringValue&
NamedObject::HasBitSetters::description(const NamedObject* msg) {
  return *msg->description_;
}
const ::google::protobuf::StringValue&
NamedObject::HasBitSetters::name(const NamedObject* msg) {
  return *msg->name_;
}
void NamedObject::clear_description() {
  if (GetArenaNoVirtual() == nullptr && description_ != nullptr) {
    delete description_;
  }
  description_ = nullptr;
}
void NamedObject::clear_name() {
  if (GetArenaNoVirtual() == nullptr && name_ != nullptr) {
    delete name_;
  }
  name_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NamedObject::kDescriptionFieldNumber;
const int NamedObject::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NamedObject::NamedObject()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:commonmodule.NamedObject)
}
NamedObject::NamedObject(const NamedObject& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_description()) {
    description_ = new ::google::protobuf::StringValue(*from.description_);
  } else {
    description_ = nullptr;
  }
  if (from.has_name()) {
    name_ = new ::google::protobuf::StringValue(*from.name_);
  } else {
    name_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:commonmodule.NamedObject)
}

void NamedObject::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_NamedObject_commonmodule_2fcommonmodule_2eproto.base);
  ::memset(&description_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&name_) -
      reinterpret_cast<char*>(&description_)) + sizeof(name_));
}

NamedObject::~NamedObject() {
  // @@protoc_insertion_point(destructor:commonmodule.NamedObject)
  SharedDtor();
}

void NamedObject::SharedDtor() {
  if (this != internal_default_instance()) delete description_;
  if (this != internal_default_instance()) delete name_;
}

void NamedObject::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const NamedObject& NamedObject::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_NamedObject_commonmodule_2fcommonmodule_2eproto.base);
  return *internal_default_instance();
}


void NamedObject::Clear() {
// @@protoc_insertion_point(message_clear_start:commonmodule.NamedObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && description_ != nullptr) {
    delete description_;
  }
  description_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && name_ != nullptr) {
    delete name_;
  }
  name_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* NamedObject::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<NamedObject*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .google.protobuf.StringValue description = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::StringValue::_InternalParse;
        object = msg->mutable_description();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.StringValue name = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::StringValue::_InternalParse;
        object = msg->mutable_name();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool NamedObject::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:commonmodule.NamedObject)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.StringValue description = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_description()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.StringValue name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:commonmodule.NamedObject)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:commonmodule.NamedObject)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void NamedObject::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:commonmodule.NamedObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.StringValue description = 1;
  if (this->has_description()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::description(this), output);
  }

  // .google.protobuf.StringValue name = 2;
  if (this->has_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::name(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:commonmodule.NamedObject)
}

::google::protobuf::uint8* NamedObject::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:commonmodule.NamedObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.StringValue description = 1;
  if (this->has_description()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::description(this), target);
  }

  // .google.protobuf.StringValue name = 2;
  if (this->has_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::name(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:commonmodule.NamedObject)
  return target;
}

size_t NamedObject::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:commonmodule.NamedObject)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.StringValue description = 1;
  if (this->has_description()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *description_);
  }

  // .google.protobuf.StringValue name = 2;
  if (this->has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *name_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NamedObject::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:commonmodule.NamedObject)
  GOOGLE_DCHECK_NE(&from, this);
  const NamedObject* source =
      ::google::protobuf::DynamicCastToGenerated<NamedObject>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:commonmodule.NamedObject)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:commonmodule.NamedObject)
    MergeFrom(*source);
  }
}

void NamedObject::MergeFrom(const NamedObject& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:commonmodule.NamedObject)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_description()) {
    mutable_description()->::google::protobuf::StringValue::MergeFrom(from.description());
  }
  if (from.has_name()) {
    mutable_name()->::google::protobuf::StringValue::MergeFrom(from.name());
  }
}

void NamedObject::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:commonmodule.NamedObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NamedObject::CopyFrom(const NamedObject& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:commonmodule.NamedObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NamedObject::IsInitialized() const {
  return true;
}

void NamedObject::Swap(NamedObject* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NamedObject::InternalSwap(NamedObject* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(description_, other->description_);
  swap(name_, other->name_);
}

::google::protobuf::Metadata NamedObject::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return ::file_level_metadata_commonmodule_2fcommonmodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ApplicationSystem::InitAsDefaultInstance() {
  ::commonmodule::_ApplicationSystem_default_instance_._instance.get_mutable()->namedobject_ = const_cast< ::commonmodule::NamedObject*>(
      ::commonmodule::NamedObject::internal_default_instance());
}
class ApplicationSystem::HasBitSetters {
 public:
  static const ::commonmodule::NamedObject& namedobject(const ApplicationSystem* msg);
};

const ::commonmodule::NamedObject&
ApplicationSystem::HasBitSetters::namedobject(const ApplicationSystem* msg) {
  return *msg->namedobject_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ApplicationSystem::kNamedObjectFieldNumber;
const int ApplicationSystem::kMRIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ApplicationSystem::ApplicationSystem()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:commonmodule.ApplicationSystem)
}
ApplicationSystem::ApplicationSystem(const ApplicationSystem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  mrid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.mrid().size() > 0) {
    mrid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mrid_);
  }
  if (from.has_namedobject()) {
    namedobject_ = new ::commonmodule::NamedObject(*from.namedobject_);
  } else {
    namedobject_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:commonmodule.ApplicationSystem)
}

void ApplicationSystem::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ApplicationSystem_commonmodule_2fcommonmodule_2eproto.base);
  mrid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  namedobject_ = nullptr;
}

ApplicationSystem::~ApplicationSystem() {
  // @@protoc_insertion_point(destructor:commonmodule.ApplicationSystem)
  SharedDtor();
}

void ApplicationSystem::SharedDtor() {
  mrid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete namedobject_;
}

void ApplicationSystem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ApplicationSystem& ApplicationSystem::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ApplicationSystem_commonmodule_2fcommonmodule_2eproto.base);
  return *internal_default_instance();
}


void ApplicationSystem::Clear() {
// @@protoc_insertion_point(message_clear_start:commonmodule.ApplicationSystem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mrid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && namedobject_ != nullptr) {
    delete namedobject_;
  }
  namedobject_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ApplicationSystem::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ApplicationSystem*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .commonmodule.NamedObject namedObject = 1 [(.uml.option_parent_message) = true];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::NamedObject::_InternalParse;
        object = msg->mutable_namedobject();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // string mRID = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1, (.uml.option_uuid) = true];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("commonmodule.ApplicationSystem.mRID");
        object = msg->mutable_mrid();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ApplicationSystem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:commonmodule.ApplicationSystem)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .commonmodule.NamedObject namedObject = 1 [(.uml.option_parent_message) = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_namedobject()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string mRID = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1, (.uml.option_uuid) = true];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mrid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mrid().data(), static_cast<int>(this->mrid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "commonmodule.ApplicationSystem.mRID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:commonmodule.ApplicationSystem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:commonmodule.ApplicationSystem)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ApplicationSystem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:commonmodule.ApplicationSystem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.NamedObject namedObject = 1 [(.uml.option_parent_message) = true];
  if (this->has_namedobject()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::namedobject(this), output);
  }

  // string mRID = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1, (.uml.option_uuid) = true];
  if (this->mrid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mrid().data(), static_cast<int>(this->mrid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "commonmodule.ApplicationSystem.mRID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->mrid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:commonmodule.ApplicationSystem)
}

::google::protobuf::uint8* ApplicationSystem::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:commonmodule.ApplicationSystem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.NamedObject namedObject = 1 [(.uml.option_parent_message) = true];
  if (this->has_namedobject()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::namedobject(this), target);
  }

  // string mRID = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1, (.uml.option_uuid) = true];
  if (this->mrid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mrid().data(), static_cast<int>(this->mrid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "commonmodule.ApplicationSystem.mRID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->mrid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:commonmodule.ApplicationSystem)
  return target;
}

size_t ApplicationSystem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:commonmodule.ApplicationSystem)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string mRID = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1, (.uml.option_uuid) = true];
  if (this->mrid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mrid());
  }

  // .commonmodule.NamedObject namedObject = 1 [(.uml.option_parent_message) = true];
  if (this->has_namedobject()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *namedobject_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ApplicationSystem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:commonmodule.ApplicationSystem)
  GOOGLE_DCHECK_NE(&from, this);
  const ApplicationSystem* source =
      ::google::protobuf::DynamicCastToGenerated<ApplicationSystem>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:commonmodule.ApplicationSystem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:commonmodule.ApplicationSystem)
    MergeFrom(*source);
  }
}

void ApplicationSystem::MergeFrom(const ApplicationSystem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:commonmodule.ApplicationSystem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.mrid().size() > 0) {

    mrid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mrid_);
  }
  if (from.has_namedobject()) {
    mutable_namedobject()->::commonmodule::NamedObject::MergeFrom(from.namedobject());
  }
}

void ApplicationSystem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:commonmodule.ApplicationSystem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ApplicationSystem::CopyFrom(const ApplicationSystem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:commonmodule.ApplicationSystem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ApplicationSystem::IsInitialized() const {
  return true;
}

void ApplicationSystem::Swap(ApplicationSystem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ApplicationSystem::InternalSwap(ApplicationSystem* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  mrid_.Swap(&other->mrid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(namedobject_, other->namedobject_);
}

::google::protobuf::Metadata ApplicationSystem::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return ::file_level_metadata_commonmodule_2fcommonmodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ASG::InitAsDefaultInstance() {
  ::commonmodule::_ASG_default_instance_._instance.get_mutable()->setmag_ = const_cast< ::commonmodule::AnalogueValueCtl*>(
      ::commonmodule::AnalogueValueCtl::internal_default_instance());
  ::commonmodule::_ASG_default_instance_._instance.get_mutable()->units_ = const_cast< ::commonmodule::Unit*>(
      ::commonmodule::Unit::internal_default_instance());
}
class ASG::HasBitSetters {
 public:
  static const ::commonmodule::AnalogueValueCtl& setmag(const ASG* msg);
  static const ::commonmodule::Unit& units(const ASG* msg);
};

const ::commonmodule::AnalogueValueCtl&
ASG::HasBitSetters::setmag(const ASG* msg) {
  return *msg->setmag_;
}
const ::commonmodule::Unit&
ASG::HasBitSetters::units(const ASG* msg) {
  return *msg->units_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ASG::kSetMagFieldNumber;
const int ASG::kUnitsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ASG::ASG()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:commonmodule.ASG)
}
ASG::ASG(const ASG& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_setmag()) {
    setmag_ = new ::commonmodule::AnalogueValueCtl(*from.setmag_);
  } else {
    setmag_ = nullptr;
  }
  if (from.has_units()) {
    units_ = new ::commonmodule::Unit(*from.units_);
  } else {
    units_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:commonmodule.ASG)
}

void ASG::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ASG_commonmodule_2fcommonmodule_2eproto.base);
  ::memset(&setmag_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&units_) -
      reinterpret_cast<char*>(&setmag_)) + sizeof(units_));
}

ASG::~ASG() {
  // @@protoc_insertion_point(destructor:commonmodule.ASG)
  SharedDtor();
}

void ASG::SharedDtor() {
  if (this != internal_default_instance()) delete setmag_;
  if (this != internal_default_instance()) delete units_;
}

void ASG::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ASG& ASG::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ASG_commonmodule_2fcommonmodule_2eproto.base);
  return *internal_default_instance();
}


void ASG::Clear() {
// @@protoc_insertion_point(message_clear_start:commonmodule.ASG)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && setmag_ != nullptr) {
    delete setmag_;
  }
  setmag_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && units_ != nullptr) {
    delete units_;
  }
  units_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ASG::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ASG*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .commonmodule.AnalogueValueCtl setMag = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::AnalogueValueCtl::_InternalParse;
        object = msg->mutable_setmag();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .commonmodule.Unit units = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::Unit::_InternalParse;
        object = msg->mutable_units();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ASG::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:commonmodule.ASG)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .commonmodule.AnalogueValueCtl setMag = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_setmag()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.Unit units = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_units()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:commonmodule.ASG)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:commonmodule.ASG)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ASG::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:commonmodule.ASG)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.AnalogueValueCtl setMag = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_setmag()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::setmag(this), output);
  }

  // .commonmodule.Unit units = 2;
  if (this->has_units()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::units(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:commonmodule.ASG)
}

::google::protobuf::uint8* ASG::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:commonmodule.ASG)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.AnalogueValueCtl setMag = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_setmag()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::setmag(this), target);
  }

  // .commonmodule.Unit units = 2;
  if (this->has_units()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::units(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:commonmodule.ASG)
  return target;
}

size_t ASG::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:commonmodule.ASG)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .commonmodule.AnalogueValueCtl setMag = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_setmag()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *setmag_);
  }

  // .commonmodule.Unit units = 2;
  if (this->has_units()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *units_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ASG::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:commonmodule.ASG)
  GOOGLE_DCHECK_NE(&from, this);
  const ASG* source =
      ::google::protobuf::DynamicCastToGenerated<ASG>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:commonmodule.ASG)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:commonmodule.ASG)
    MergeFrom(*source);
  }
}

void ASG::MergeFrom(const ASG& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:commonmodule.ASG)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_setmag()) {
    mutable_setmag()->::commonmodule::AnalogueValueCtl::MergeFrom(from.setmag());
  }
  if (from.has_units()) {
    mutable_units()->::commonmodule::Unit::MergeFrom(from.units());
  }
}

void ASG::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:commonmodule.ASG)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ASG::CopyFrom(const ASG& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:commonmodule.ASG)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ASG::IsInitialized() const {
  return true;
}

void ASG::Swap(ASG* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ASG::InternalSwap(ASG* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(setmag_, other->setmag_);
  swap(units_, other->units_);
}

::google::protobuf::Metadata ASG::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return ::file_level_metadata_commonmodule_2fcommonmodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void BCR::InitAsDefaultInstance() {
  ::commonmodule::_BCR_default_instance_._instance.get_mutable()->q_ = const_cast< ::commonmodule::Quality*>(
      ::commonmodule::Quality::internal_default_instance());
  ::commonmodule::_BCR_default_instance_._instance.get_mutable()->t_ = const_cast< ::commonmodule::Timestamp*>(
      ::commonmodule::Timestamp::internal_default_instance());
  ::commonmodule::_BCR_default_instance_._instance.get_mutable()->units_ = const_cast< ::commonmodule::Optional_UnitSymbolKind*>(
      ::commonmodule::Optional_UnitSymbolKind::internal_default_instance());
}
class BCR::HasBitSetters {
 public:
  static const ::commonmodule::Quality& q(const BCR* msg);
  static const ::commonmodule::Timestamp& t(const BCR* msg);
  static const ::commonmodule::Optional_UnitSymbolKind& units(const BCR* msg);
};

const ::commonmodule::Quality&
BCR::HasBitSetters::q(const BCR* msg) {
  return *msg->q_;
}
const ::commonmodule::Timestamp&
BCR::HasBitSetters::t(const BCR* msg) {
  return *msg->t_;
}
const ::commonmodule::Optional_UnitSymbolKind&
BCR::HasBitSetters::units(const BCR* msg) {
  return *msg->units_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BCR::kActValFieldNumber;
const int BCR::kQFieldNumber;
const int BCR::kTFieldNumber;
const int BCR::kUnitsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BCR::BCR()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:commonmodule.BCR)
}
BCR::BCR(const BCR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_q()) {
    q_ = new ::commonmodule::Quality(*from.q_);
  } else {
    q_ = nullptr;
  }
  if (from.has_t()) {
    t_ = new ::commonmodule::Timestamp(*from.t_);
  } else {
    t_ = nullptr;
  }
  if (from.has_units()) {
    units_ = new ::commonmodule::Optional_UnitSymbolKind(*from.units_);
  } else {
    units_ = nullptr;
  }
  actval_ = from.actval_;
  // @@protoc_insertion_point(copy_constructor:commonmodule.BCR)
}

void BCR::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_BCR_commonmodule_2fcommonmodule_2eproto.base);
  ::memset(&q_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&actval_) -
      reinterpret_cast<char*>(&q_)) + sizeof(actval_));
}

BCR::~BCR() {
  // @@protoc_insertion_point(destructor:commonmodule.BCR)
  SharedDtor();
}

void BCR::SharedDtor() {
  if (this != internal_default_instance()) delete q_;
  if (this != internal_default_instance()) delete t_;
  if (this != internal_default_instance()) delete units_;
}

void BCR::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BCR& BCR::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_BCR_commonmodule_2fcommonmodule_2eproto.base);
  return *internal_default_instance();
}


void BCR::Clear() {
// @@protoc_insertion_point(message_clear_start:commonmodule.BCR)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && q_ != nullptr) {
    delete q_;
  }
  q_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && t_ != nullptr) {
    delete t_;
  }
  t_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && units_ != nullptr) {
    delete units_;
  }
  units_ = nullptr;
  actval_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* BCR::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<BCR*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int64 actVal = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_actval(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .commonmodule.Quality q = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::Quality::_InternalParse;
        object = msg->mutable_q();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .commonmodule.Timestamp t = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::Timestamp::_InternalParse;
        object = msg->mutable_t();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .commonmodule.Optional_UnitSymbolKind units = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::Optional_UnitSymbolKind::_InternalParse;
        object = msg->mutable_units();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool BCR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:commonmodule.BCR)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 actVal = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &actval_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.Quality q = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_q()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.Timestamp t = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_t()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.Optional_UnitSymbolKind units = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_units()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:commonmodule.BCR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:commonmodule.BCR)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void BCR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:commonmodule.BCR)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 actVal = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->actval() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->actval(), output);
  }

  // .commonmodule.Quality q = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_q()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::q(this), output);
  }

  // .commonmodule.Timestamp t = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_t()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::t(this), output);
  }

  // .commonmodule.Optional_UnitSymbolKind units = 4;
  if (this->has_units()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::units(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:commonmodule.BCR)
}

::google::protobuf::uint8* BCR::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:commonmodule.BCR)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 actVal = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->actval() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->actval(), target);
  }

  // .commonmodule.Quality q = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_q()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::q(this), target);
  }

  // .commonmodule.Timestamp t = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_t()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::t(this), target);
  }

  // .commonmodule.Optional_UnitSymbolKind units = 4;
  if (this->has_units()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::units(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:commonmodule.BCR)
  return target;
}

size_t BCR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:commonmodule.BCR)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .commonmodule.Quality q = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_q()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *q_);
  }

  // .commonmodule.Timestamp t = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_t()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *t_);
  }

  // .commonmodule.Optional_UnitSymbolKind units = 4;
  if (this->has_units()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *units_);
  }

  // int64 actVal = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->actval() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->actval());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BCR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:commonmodule.BCR)
  GOOGLE_DCHECK_NE(&from, this);
  const BCR* source =
      ::google::protobuf::DynamicCastToGenerated<BCR>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:commonmodule.BCR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:commonmodule.BCR)
    MergeFrom(*source);
  }
}

void BCR::MergeFrom(const BCR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:commonmodule.BCR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_q()) {
    mutable_q()->::commonmodule::Quality::MergeFrom(from.q());
  }
  if (from.has_t()) {
    mutable_t()->::commonmodule::Timestamp::MergeFrom(from.t());
  }
  if (from.has_units()) {
    mutable_units()->::commonmodule::Optional_UnitSymbolKind::MergeFrom(from.units());
  }
  if (from.actval() != 0) {
    set_actval(from.actval());
  }
}

void BCR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:commonmodule.BCR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BCR::CopyFrom(const BCR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:commonmodule.BCR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BCR::IsInitialized() const {
  return true;
}

void BCR::Swap(BCR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BCR::InternalSwap(BCR* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(q_, other->q_);
  swap(t_, other->t_);
  swap(units_, other->units_);
  swap(actval_, other->actval_);
}

::google::protobuf::Metadata BCR::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return ::file_level_metadata_commonmodule_2fcommonmodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void StatusSPS::InitAsDefaultInstance() {
  ::commonmodule::_StatusSPS_default_instance_._instance.get_mutable()->q_ = const_cast< ::commonmodule::Quality*>(
      ::commonmodule::Quality::internal_default_instance());
  ::commonmodule::_StatusSPS_default_instance_._instance.get_mutable()->t_ = const_cast< ::commonmodule::Timestamp*>(
      ::commonmodule::Timestamp::internal_default_instance());
}
class StatusSPS::HasBitSetters {
 public:
  static const ::commonmodule::Quality& q(const StatusSPS* msg);
  static const ::commonmodule::Timestamp& t(const StatusSPS* msg);
};

const ::commonmodule::Quality&
StatusSPS::HasBitSetters::q(const StatusSPS* msg) {
  return *msg->q_;
}
const ::commonmodule::Timestamp&
StatusSPS::HasBitSetters::t(const StatusSPS* msg) {
  return *msg->t_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StatusSPS::kQFieldNumber;
const int StatusSPS::kStValFieldNumber;
const int StatusSPS::kTFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StatusSPS::StatusSPS()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:commonmodule.StatusSPS)
}
StatusSPS::StatusSPS(const StatusSPS& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_q()) {
    q_ = new ::commonmodule::Quality(*from.q_);
  } else {
    q_ = nullptr;
  }
  if (from.has_t()) {
    t_ = new ::commonmodule::Timestamp(*from.t_);
  } else {
    t_ = nullptr;
  }
  stval_ = from.stval_;
  // @@protoc_insertion_point(copy_constructor:commonmodule.StatusSPS)
}

void StatusSPS::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_StatusSPS_commonmodule_2fcommonmodule_2eproto.base);
  ::memset(&q_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&stval_) -
      reinterpret_cast<char*>(&q_)) + sizeof(stval_));
}

StatusSPS::~StatusSPS() {
  // @@protoc_insertion_point(destructor:commonmodule.StatusSPS)
  SharedDtor();
}

void StatusSPS::SharedDtor() {
  if (this != internal_default_instance()) delete q_;
  if (this != internal_default_instance()) delete t_;
}

void StatusSPS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StatusSPS& StatusSPS::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_StatusSPS_commonmodule_2fcommonmodule_2eproto.base);
  return *internal_default_instance();
}


void StatusSPS::Clear() {
// @@protoc_insertion_point(message_clear_start:commonmodule.StatusSPS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && q_ != nullptr) {
    delete q_;
  }
  q_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && t_ != nullptr) {
    delete t_;
  }
  t_ = nullptr;
  stval_ = false;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* StatusSPS::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<StatusSPS*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .commonmodule.Quality q = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::Quality::_InternalParse;
        object = msg->mutable_q();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // bool stVal = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_stval(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .commonmodule.Timestamp t = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::Timestamp::_InternalParse;
        object = msg->mutable_t();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool StatusSPS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:commonmodule.StatusSPS)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .commonmodule.Quality q = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_q()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool stVal = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &stval_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.Timestamp t = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_t()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:commonmodule.StatusSPS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:commonmodule.StatusSPS)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void StatusSPS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:commonmodule.StatusSPS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.Quality q = 1;
  if (this->has_q()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::q(this), output);
  }

  // bool stVal = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->stval() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->stval(), output);
  }

  // .commonmodule.Timestamp t = 3;
  if (this->has_t()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::t(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:commonmodule.StatusSPS)
}

::google::protobuf::uint8* StatusSPS::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:commonmodule.StatusSPS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.Quality q = 1;
  if (this->has_q()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::q(this), target);
  }

  // bool stVal = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->stval() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->stval(), target);
  }

  // .commonmodule.Timestamp t = 3;
  if (this->has_t()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::t(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:commonmodule.StatusSPS)
  return target;
}

size_t StatusSPS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:commonmodule.StatusSPS)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .commonmodule.Quality q = 1;
  if (this->has_q()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *q_);
  }

  // .commonmodule.Timestamp t = 3;
  if (this->has_t()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *t_);
  }

  // bool stVal = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->stval() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StatusSPS::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:commonmodule.StatusSPS)
  GOOGLE_DCHECK_NE(&from, this);
  const StatusSPS* source =
      ::google::protobuf::DynamicCastToGenerated<StatusSPS>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:commonmodule.StatusSPS)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:commonmodule.StatusSPS)
    MergeFrom(*source);
  }
}

void StatusSPS::MergeFrom(const StatusSPS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:commonmodule.StatusSPS)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_q()) {
    mutable_q()->::commonmodule::Quality::MergeFrom(from.q());
  }
  if (from.has_t()) {
    mutable_t()->::commonmodule::Timestamp::MergeFrom(from.t());
  }
  if (from.stval() != 0) {
    set_stval(from.stval());
  }
}

void StatusSPS::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:commonmodule.StatusSPS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StatusSPS::CopyFrom(const StatusSPS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:commonmodule.StatusSPS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StatusSPS::IsInitialized() const {
  return true;
}

void StatusSPS::Swap(StatusSPS* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StatusSPS::InternalSwap(StatusSPS* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(q_, other->q_);
  swap(t_, other->t_);
  swap(stval_, other->stval_);
}

::google::protobuf::Metadata StatusSPS::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return ::file_level_metadata_commonmodule_2fcommonmodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void BooleanStatusGGIO::InitAsDefaultInstance() {
  ::commonmodule::_BooleanStatusGGIO_default_instance_._instance.get_mutable()->logicalnode_ = const_cast< ::commonmodule::LogicalNode*>(
      ::commonmodule::LogicalNode::internal_default_instance());
  ::commonmodule::_BooleanStatusGGIO_default_instance_._instance.get_mutable()->ind_ = const_cast< ::commonmodule::StatusSPS*>(
      ::commonmodule::StatusSPS::internal_default_instance());
  ::commonmodule::_BooleanStatusGGIO_default_instance_._instance.get_mutable()->phase_ = const_cast< ::commonmodule::Optional_PhaseCodeKind*>(
      ::commonmodule::Optional_PhaseCodeKind::internal_default_instance());
}
class BooleanStatusGGIO::HasBitSetters {
 public:
  static const ::commonmodule::LogicalNode& logicalnode(const BooleanStatusGGIO* msg);
  static const ::commonmodule::StatusSPS& ind(const BooleanStatusGGIO* msg);
  static const ::commonmodule::Optional_PhaseCodeKind& phase(const BooleanStatusGGIO* msg);
};

const ::commonmodule::LogicalNode&
BooleanStatusGGIO::HasBitSetters::logicalnode(const BooleanStatusGGIO* msg) {
  return *msg->logicalnode_;
}
const ::commonmodule::StatusSPS&
BooleanStatusGGIO::HasBitSetters::ind(const BooleanStatusGGIO* msg) {
  return *msg->ind_;
}
const ::commonmodule::Optional_PhaseCodeKind&
BooleanStatusGGIO::HasBitSetters::phase(const BooleanStatusGGIO* msg) {
  return *msg->phase_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BooleanStatusGGIO::kLogicalNodeFieldNumber;
const int BooleanStatusGGIO::kIndFieldNumber;
const int BooleanStatusGGIO::kPhaseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BooleanStatusGGIO::BooleanStatusGGIO()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:commonmodule.BooleanStatusGGIO)
}
BooleanStatusGGIO::BooleanStatusGGIO(const BooleanStatusGGIO& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_logicalnode()) {
    logicalnode_ = new ::commonmodule::LogicalNode(*from.logicalnode_);
  } else {
    logicalnode_ = nullptr;
  }
  if (from.has_ind()) {
    ind_ = new ::commonmodule::StatusSPS(*from.ind_);
  } else {
    ind_ = nullptr;
  }
  if (from.has_phase()) {
    phase_ = new ::commonmodule::Optional_PhaseCodeKind(*from.phase_);
  } else {
    phase_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:commonmodule.BooleanStatusGGIO)
}

void BooleanStatusGGIO::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_BooleanStatusGGIO_commonmodule_2fcommonmodule_2eproto.base);
  ::memset(&logicalnode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&phase_) -
      reinterpret_cast<char*>(&logicalnode_)) + sizeof(phase_));
}

BooleanStatusGGIO::~BooleanStatusGGIO() {
  // @@protoc_insertion_point(destructor:commonmodule.BooleanStatusGGIO)
  SharedDtor();
}

void BooleanStatusGGIO::SharedDtor() {
  if (this != internal_default_instance()) delete logicalnode_;
  if (this != internal_default_instance()) delete ind_;
  if (this != internal_default_instance()) delete phase_;
}

void BooleanStatusGGIO::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BooleanStatusGGIO& BooleanStatusGGIO::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_BooleanStatusGGIO_commonmodule_2fcommonmodule_2eproto.base);
  return *internal_default_instance();
}


void BooleanStatusGGIO::Clear() {
// @@protoc_insertion_point(message_clear_start:commonmodule.BooleanStatusGGIO)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && logicalnode_ != nullptr) {
    delete logicalnode_;
  }
  logicalnode_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && ind_ != nullptr) {
    delete ind_;
  }
  ind_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && phase_ != nullptr) {
    delete phase_;
  }
  phase_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* BooleanStatusGGIO::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<BooleanStatusGGIO*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .commonmodule.LogicalNode logicalNode = 1 [(.uml.option_parent_message) = true];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::LogicalNode::_InternalParse;
        object = msg->mutable_logicalnode();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .commonmodule.StatusSPS Ind = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::StatusSPS::_InternalParse;
        object = msg->mutable_ind();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .commonmodule.Optional_PhaseCodeKind Phase = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::Optional_PhaseCodeKind::_InternalParse;
        object = msg->mutable_phase();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool BooleanStatusGGIO::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:commonmodule.BooleanStatusGGIO)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .commonmodule.LogicalNode logicalNode = 1 [(.uml.option_parent_message) = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_logicalnode()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.StatusSPS Ind = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ind()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.Optional_PhaseCodeKind Phase = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_phase()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:commonmodule.BooleanStatusGGIO)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:commonmodule.BooleanStatusGGIO)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void BooleanStatusGGIO::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:commonmodule.BooleanStatusGGIO)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.LogicalNode logicalNode = 1 [(.uml.option_parent_message) = true];
  if (this->has_logicalnode()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::logicalnode(this), output);
  }

  // .commonmodule.StatusSPS Ind = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_ind()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::ind(this), output);
  }

  // .commonmodule.Optional_PhaseCodeKind Phase = 3;
  if (this->has_phase()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::phase(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:commonmodule.BooleanStatusGGIO)
}

::google::protobuf::uint8* BooleanStatusGGIO::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:commonmodule.BooleanStatusGGIO)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.LogicalNode logicalNode = 1 [(.uml.option_parent_message) = true];
  if (this->has_logicalnode()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::logicalnode(this), target);
  }

  // .commonmodule.StatusSPS Ind = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_ind()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::ind(this), target);
  }

  // .commonmodule.Optional_PhaseCodeKind Phase = 3;
  if (this->has_phase()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::phase(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:commonmodule.BooleanStatusGGIO)
  return target;
}

size_t BooleanStatusGGIO::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:commonmodule.BooleanStatusGGIO)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .commonmodule.LogicalNode logicalNode = 1 [(.uml.option_parent_message) = true];
  if (this->has_logicalnode()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *logicalnode_);
  }

  // .commonmodule.StatusSPS Ind = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_ind()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *ind_);
  }

  // .commonmodule.Optional_PhaseCodeKind Phase = 3;
  if (this->has_phase()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *phase_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BooleanStatusGGIO::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:commonmodule.BooleanStatusGGIO)
  GOOGLE_DCHECK_NE(&from, this);
  const BooleanStatusGGIO* source =
      ::google::protobuf::DynamicCastToGenerated<BooleanStatusGGIO>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:commonmodule.BooleanStatusGGIO)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:commonmodule.BooleanStatusGGIO)
    MergeFrom(*source);
  }
}

void BooleanStatusGGIO::MergeFrom(const BooleanStatusGGIO& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:commonmodule.BooleanStatusGGIO)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_logicalnode()) {
    mutable_logicalnode()->::commonmodule::LogicalNode::MergeFrom(from.logicalnode());
  }
  if (from.has_ind()) {
    mutable_ind()->::commonmodule::StatusSPS::MergeFrom(from.ind());
  }
  if (from.has_phase()) {
    mutable_phase()->::commonmodule::Optional_PhaseCodeKind::MergeFrom(from.phase());
  }
}

void BooleanStatusGGIO::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:commonmodule.BooleanStatusGGIO)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BooleanStatusGGIO::CopyFrom(const BooleanStatusGGIO& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:commonmodule.BooleanStatusGGIO)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BooleanStatusGGIO::IsInitialized() const {
  return true;
}

void BooleanStatusGGIO::Swap(BooleanStatusGGIO* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BooleanStatusGGIO::InternalSwap(BooleanStatusGGIO* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(logicalnode_, other->logicalnode_);
  swap(ind_, other->ind_);
  swap(phase_, other->phase_);
}

::google::protobuf::Metadata BooleanStatusGGIO::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return ::file_level_metadata_commonmodule_2fcommonmodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CheckConditions::InitAsDefaultInstance() {
  ::commonmodule::_CheckConditions_default_instance_._instance.get_mutable()->interlockcheck_ = const_cast< ::google::protobuf::BoolValue*>(
      ::google::protobuf::BoolValue::internal_default_instance());
  ::commonmodule::_CheckConditions_default_instance_._instance.get_mutable()->synchrocheck_ = const_cast< ::google::protobuf::BoolValue*>(
      ::google::protobuf::BoolValue::internal_default_instance());
}
class CheckConditions::HasBitSetters {
 public:
  static const ::google::protobuf::BoolValue& interlockcheck(const CheckConditions* msg);
  static const ::google::protobuf::BoolValue& synchrocheck(const CheckConditions* msg);
};

const ::google::protobuf::BoolValue&
CheckConditions::HasBitSetters::interlockcheck(const CheckConditions* msg) {
  return *msg->interlockcheck_;
}
const ::google::protobuf::BoolValue&
CheckConditions::HasBitSetters::synchrocheck(const CheckConditions* msg) {
  return *msg->synchrocheck_;
}
void CheckConditions::clear_interlockcheck() {
  if (GetArenaNoVirtual() == nullptr && interlockcheck_ != nullptr) {
    delete interlockcheck_;
  }
  interlockcheck_ = nullptr;
}
void CheckConditions::clear_synchrocheck() {
  if (GetArenaNoVirtual() == nullptr && synchrocheck_ != nullptr) {
    delete synchrocheck_;
  }
  synchrocheck_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CheckConditions::kInterlockCheckFieldNumber;
const int CheckConditions::kSynchroCheckFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CheckConditions::CheckConditions()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:commonmodule.CheckConditions)
}
CheckConditions::CheckConditions(const CheckConditions& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_interlockcheck()) {
    interlockcheck_ = new ::google::protobuf::BoolValue(*from.interlockcheck_);
  } else {
    interlockcheck_ = nullptr;
  }
  if (from.has_synchrocheck()) {
    synchrocheck_ = new ::google::protobuf::BoolValue(*from.synchrocheck_);
  } else {
    synchrocheck_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:commonmodule.CheckConditions)
}

void CheckConditions::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CheckConditions_commonmodule_2fcommonmodule_2eproto.base);
  ::memset(&interlockcheck_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&synchrocheck_) -
      reinterpret_cast<char*>(&interlockcheck_)) + sizeof(synchrocheck_));
}

CheckConditions::~CheckConditions() {
  // @@protoc_insertion_point(destructor:commonmodule.CheckConditions)
  SharedDtor();
}

void CheckConditions::SharedDtor() {
  if (this != internal_default_instance()) delete interlockcheck_;
  if (this != internal_default_instance()) delete synchrocheck_;
}

void CheckConditions::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CheckConditions& CheckConditions::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CheckConditions_commonmodule_2fcommonmodule_2eproto.base);
  return *internal_default_instance();
}


void CheckConditions::Clear() {
// @@protoc_insertion_point(message_clear_start:commonmodule.CheckConditions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && interlockcheck_ != nullptr) {
    delete interlockcheck_;
  }
  interlockcheck_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && synchrocheck_ != nullptr) {
    delete synchrocheck_;
  }
  synchrocheck_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CheckConditions::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CheckConditions*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .google.protobuf.BoolValue interlockCheck = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::BoolValue::_InternalParse;
        object = msg->mutable_interlockcheck();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.BoolValue synchroCheck = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::BoolValue::_InternalParse;
        object = msg->mutable_synchrocheck();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CheckConditions::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:commonmodule.CheckConditions)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.BoolValue interlockCheck = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_interlockcheck()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.BoolValue synchroCheck = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_synchrocheck()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:commonmodule.CheckConditions)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:commonmodule.CheckConditions)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CheckConditions::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:commonmodule.CheckConditions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.BoolValue interlockCheck = 1;
  if (this->has_interlockcheck()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::interlockcheck(this), output);
  }

  // .google.protobuf.BoolValue synchroCheck = 2;
  if (this->has_synchrocheck()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::synchrocheck(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:commonmodule.CheckConditions)
}

::google::protobuf::uint8* CheckConditions::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:commonmodule.CheckConditions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.BoolValue interlockCheck = 1;
  if (this->has_interlockcheck()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::interlockcheck(this), target);
  }

  // .google.protobuf.BoolValue synchroCheck = 2;
  if (this->has_synchrocheck()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::synchrocheck(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:commonmodule.CheckConditions)
  return target;
}

size_t CheckConditions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:commonmodule.CheckConditions)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.BoolValue interlockCheck = 1;
  if (this->has_interlockcheck()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *interlockcheck_);
  }

  // .google.protobuf.BoolValue synchroCheck = 2;
  if (this->has_synchrocheck()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *synchrocheck_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CheckConditions::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:commonmodule.CheckConditions)
  GOOGLE_DCHECK_NE(&from, this);
  const CheckConditions* source =
      ::google::protobuf::DynamicCastToGenerated<CheckConditions>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:commonmodule.CheckConditions)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:commonmodule.CheckConditions)
    MergeFrom(*source);
  }
}

void CheckConditions::MergeFrom(const CheckConditions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:commonmodule.CheckConditions)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_interlockcheck()) {
    mutable_interlockcheck()->::google::protobuf::BoolValue::MergeFrom(from.interlockcheck());
  }
  if (from.has_synchrocheck()) {
    mutable_synchrocheck()->::google::protobuf::BoolValue::MergeFrom(from.synchrocheck());
  }
}

void CheckConditions::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:commonmodule.CheckConditions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CheckConditions::CopyFrom(const CheckConditions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:commonmodule.CheckConditions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CheckConditions::IsInitialized() const {
  return true;
}

void CheckConditions::Swap(CheckConditions* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CheckConditions::InternalSwap(CheckConditions* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(interlockcheck_, other->interlockcheck_);
  swap(synchrocheck_, other->synchrocheck_);
}

::google::protobuf::Metadata CheckConditions::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return ::file_level_metadata_commonmodule_2fcommonmodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Vector::InitAsDefaultInstance() {
  ::commonmodule::_Vector_default_instance_._instance.get_mutable()->ang_ = const_cast< ::commonmodule::AnalogueValue*>(
      ::commonmodule::AnalogueValue::internal_default_instance());
  ::commonmodule::_Vector_default_instance_._instance.get_mutable()->mag_ = const_cast< ::commonmodule::AnalogueValue*>(
      ::commonmodule::AnalogueValue::internal_default_instance());
}
class Vector::HasBitSetters {
 public:
  static const ::commonmodule::AnalogueValue& ang(const Vector* msg);
  static const ::commonmodule::AnalogueValue& mag(const Vector* msg);
};

const ::commonmodule::AnalogueValue&
Vector::HasBitSetters::ang(const Vector* msg) {
  return *msg->ang_;
}
const ::commonmodule::AnalogueValue&
Vector::HasBitSetters::mag(const Vector* msg) {
  return *msg->mag_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Vector::kAngFieldNumber;
const int Vector::kMagFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Vector::Vector()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:commonmodule.Vector)
}
Vector::Vector(const Vector& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_ang()) {
    ang_ = new ::commonmodule::AnalogueValue(*from.ang_);
  } else {
    ang_ = nullptr;
  }
  if (from.has_mag()) {
    mag_ = new ::commonmodule::AnalogueValue(*from.mag_);
  } else {
    mag_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:commonmodule.Vector)
}

void Vector::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Vector_commonmodule_2fcommonmodule_2eproto.base);
  ::memset(&ang_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mag_) -
      reinterpret_cast<char*>(&ang_)) + sizeof(mag_));
}

Vector::~Vector() {
  // @@protoc_insertion_point(destructor:commonmodule.Vector)
  SharedDtor();
}

void Vector::SharedDtor() {
  if (this != internal_default_instance()) delete ang_;
  if (this != internal_default_instance()) delete mag_;
}

void Vector::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Vector& Vector::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Vector_commonmodule_2fcommonmodule_2eproto.base);
  return *internal_default_instance();
}


void Vector::Clear() {
// @@protoc_insertion_point(message_clear_start:commonmodule.Vector)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && ang_ != nullptr) {
    delete ang_;
  }
  ang_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && mag_ != nullptr) {
    delete mag_;
  }
  mag_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Vector::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Vector*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .commonmodule.AnalogueValue ang = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::AnalogueValue::_InternalParse;
        object = msg->mutable_ang();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .commonmodule.AnalogueValue mag = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::AnalogueValue::_InternalParse;
        object = msg->mutable_mag();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Vector::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:commonmodule.Vector)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .commonmodule.AnalogueValue ang = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ang()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.AnalogueValue mag = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_mag()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:commonmodule.Vector)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:commonmodule.Vector)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Vector::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:commonmodule.Vector)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.AnalogueValue ang = 1;
  if (this->has_ang()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::ang(this), output);
  }

  // .commonmodule.AnalogueValue mag = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_mag()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::mag(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:commonmodule.Vector)
}

::google::protobuf::uint8* Vector::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:commonmodule.Vector)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.AnalogueValue ang = 1;
  if (this->has_ang()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::ang(this), target);
  }

  // .commonmodule.AnalogueValue mag = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_mag()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::mag(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:commonmodule.Vector)
  return target;
}

size_t Vector::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:commonmodule.Vector)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .commonmodule.AnalogueValue ang = 1;
  if (this->has_ang()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *ang_);
  }

  // .commonmodule.AnalogueValue mag = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_mag()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *mag_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Vector::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:commonmodule.Vector)
  GOOGLE_DCHECK_NE(&from, this);
  const Vector* source =
      ::google::protobuf::DynamicCastToGenerated<Vector>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:commonmodule.Vector)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:commonmodule.Vector)
    MergeFrom(*source);
  }
}

void Vector::MergeFrom(const Vector& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:commonmodule.Vector)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_ang()) {
    mutable_ang()->::commonmodule::AnalogueValue::MergeFrom(from.ang());
  }
  if (from.has_mag()) {
    mutable_mag()->::commonmodule::AnalogueValue::MergeFrom(from.mag());
  }
}

void Vector::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:commonmodule.Vector)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Vector::CopyFrom(const Vector& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:commonmodule.Vector)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Vector::IsInitialized() const {
  return true;
}

void Vector::Swap(Vector* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Vector::InternalSwap(Vector* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(ang_, other->ang_);
  swap(mag_, other->mag_);
}

::google::protobuf::Metadata Vector::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return ::file_level_metadata_commonmodule_2fcommonmodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMV::InitAsDefaultInstance() {
  ::commonmodule::_CMV_default_instance_._instance.get_mutable()->cval_ = const_cast< ::commonmodule::Vector*>(
      ::commonmodule::Vector::internal_default_instance());
  ::commonmodule::_CMV_default_instance_._instance.get_mutable()->q_ = const_cast< ::commonmodule::Quality*>(
      ::commonmodule::Quality::internal_default_instance());
  ::commonmodule::_CMV_default_instance_._instance.get_mutable()->t_ = const_cast< ::commonmodule::Timestamp*>(
      ::commonmodule::Timestamp::internal_default_instance());
  ::commonmodule::_CMV_default_instance_._instance.get_mutable()->units_ = const_cast< ::commonmodule::Unit*>(
      ::commonmodule::Unit::internal_default_instance());
}
class CMV::HasBitSetters {
 public:
  static const ::commonmodule::Vector& cval(const CMV* msg);
  static const ::commonmodule::Quality& q(const CMV* msg);
  static const ::commonmodule::Timestamp& t(const CMV* msg);
  static const ::commonmodule::Unit& units(const CMV* msg);
};

const ::commonmodule::Vector&
CMV::HasBitSetters::cval(const CMV* msg) {
  return *msg->cval_;
}
const ::commonmodule::Quality&
CMV::HasBitSetters::q(const CMV* msg) {
  return *msg->q_;
}
const ::commonmodule::Timestamp&
CMV::HasBitSetters::t(const CMV* msg) {
  return *msg->t_;
}
const ::commonmodule::Unit&
CMV::HasBitSetters::units(const CMV* msg) {
  return *msg->units_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMV::kCValFieldNumber;
const int CMV::kQFieldNumber;
const int CMV::kTFieldNumber;
const int CMV::kUnitsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMV::CMV()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:commonmodule.CMV)
}
CMV::CMV(const CMV& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_cval()) {
    cval_ = new ::commonmodule::Vector(*from.cval_);
  } else {
    cval_ = nullptr;
  }
  if (from.has_q()) {
    q_ = new ::commonmodule::Quality(*from.q_);
  } else {
    q_ = nullptr;
  }
  if (from.has_t()) {
    t_ = new ::commonmodule::Timestamp(*from.t_);
  } else {
    t_ = nullptr;
  }
  if (from.has_units()) {
    units_ = new ::commonmodule::Unit(*from.units_);
  } else {
    units_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:commonmodule.CMV)
}

void CMV::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMV_commonmodule_2fcommonmodule_2eproto.base);
  ::memset(&cval_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&units_) -
      reinterpret_cast<char*>(&cval_)) + sizeof(units_));
}

CMV::~CMV() {
  // @@protoc_insertion_point(destructor:commonmodule.CMV)
  SharedDtor();
}

void CMV::SharedDtor() {
  if (this != internal_default_instance()) delete cval_;
  if (this != internal_default_instance()) delete q_;
  if (this != internal_default_instance()) delete t_;
  if (this != internal_default_instance()) delete units_;
}

void CMV::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMV& CMV::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMV_commonmodule_2fcommonmodule_2eproto.base);
  return *internal_default_instance();
}


void CMV::Clear() {
// @@protoc_insertion_point(message_clear_start:commonmodule.CMV)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && cval_ != nullptr) {
    delete cval_;
  }
  cval_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && q_ != nullptr) {
    delete q_;
  }
  q_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && t_ != nullptr) {
    delete t_;
  }
  t_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && units_ != nullptr) {
    delete units_;
  }
  units_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMV::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMV*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .commonmodule.Vector cVal = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::Vector::_InternalParse;
        object = msg->mutable_cval();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .commonmodule.Quality q = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::Quality::_InternalParse;
        object = msg->mutable_q();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .commonmodule.Timestamp t = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::Timestamp::_InternalParse;
        object = msg->mutable_t();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .commonmodule.Unit units = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::Unit::_InternalParse;
        object = msg->mutable_units();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMV::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:commonmodule.CMV)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .commonmodule.Vector cVal = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_cval()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.Quality q = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_q()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.Timestamp t = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_t()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.Unit units = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_units()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:commonmodule.CMV)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:commonmodule.CMV)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMV::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:commonmodule.CMV)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.Vector cVal = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_cval()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::cval(this), output);
  }

  // .commonmodule.Quality q = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_q()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::q(this), output);
  }

  // .commonmodule.Timestamp t = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_t()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::t(this), output);
  }

  // .commonmodule.Unit units = 4;
  if (this->has_units()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::units(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:commonmodule.CMV)
}

::google::protobuf::uint8* CMV::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:commonmodule.CMV)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.Vector cVal = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_cval()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::cval(this), target);
  }

  // .commonmodule.Quality q = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_q()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::q(this), target);
  }

  // .commonmodule.Timestamp t = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_t()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::t(this), target);
  }

  // .commonmodule.Unit units = 4;
  if (this->has_units()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::units(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:commonmodule.CMV)
  return target;
}

size_t CMV::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:commonmodule.CMV)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .commonmodule.Vector cVal = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_cval()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *cval_);
  }

  // .commonmodule.Quality q = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_q()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *q_);
  }

  // .commonmodule.Timestamp t = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_t()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *t_);
  }

  // .commonmodule.Unit units = 4;
  if (this->has_units()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *units_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMV::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:commonmodule.CMV)
  GOOGLE_DCHECK_NE(&from, this);
  const CMV* source =
      ::google::protobuf::DynamicCastToGenerated<CMV>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:commonmodule.CMV)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:commonmodule.CMV)
    MergeFrom(*source);
  }
}

void CMV::MergeFrom(const CMV& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:commonmodule.CMV)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_cval()) {
    mutable_cval()->::commonmodule::Vector::MergeFrom(from.cval());
  }
  if (from.has_q()) {
    mutable_q()->::commonmodule::Quality::MergeFrom(from.q());
  }
  if (from.has_t()) {
    mutable_t()->::commonmodule::Timestamp::MergeFrom(from.t());
  }
  if (from.has_units()) {
    mutable_units()->::commonmodule::Unit::MergeFrom(from.units());
  }
}

void CMV::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:commonmodule.CMV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMV::CopyFrom(const CMV& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:commonmodule.CMV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMV::IsInitialized() const {
  return true;
}

void CMV::Swap(CMV* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMV::InternalSwap(CMV* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(cval_, other->cval_);
  swap(q_, other->q_);
  swap(t_, other->t_);
  swap(units_, other->units_);
}

::google::protobuf::Metadata CMV::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return ::file_level_metadata_commonmodule_2fcommonmodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ConductingEquipment::InitAsDefaultInstance() {
  ::commonmodule::_ConductingEquipment_default_instance_._instance.get_mutable()->namedobject_ = const_cast< ::commonmodule::NamedObject*>(
      ::commonmodule::NamedObject::internal_default_instance());
}
class ConductingEquipment::HasBitSetters {
 public:
  static const ::commonmodule::NamedObject& namedobject(const ConductingEquipment* msg);
};

const ::commonmodule::NamedObject&
ConductingEquipment::HasBitSetters::namedobject(const ConductingEquipment* msg) {
  return *msg->namedobject_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConductingEquipment::kNamedObjectFieldNumber;
const int ConductingEquipment::kMRIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConductingEquipment::ConductingEquipment()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:commonmodule.ConductingEquipment)
}
ConductingEquipment::ConductingEquipment(const ConductingEquipment& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  mrid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.mrid().size() > 0) {
    mrid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mrid_);
  }
  if (from.has_namedobject()) {
    namedobject_ = new ::commonmodule::NamedObject(*from.namedobject_);
  } else {
    namedobject_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:commonmodule.ConductingEquipment)
}

void ConductingEquipment::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ConductingEquipment_commonmodule_2fcommonmodule_2eproto.base);
  mrid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  namedobject_ = nullptr;
}

ConductingEquipment::~ConductingEquipment() {
  // @@protoc_insertion_point(destructor:commonmodule.ConductingEquipment)
  SharedDtor();
}

void ConductingEquipment::SharedDtor() {
  mrid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete namedobject_;
}

void ConductingEquipment::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ConductingEquipment& ConductingEquipment::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ConductingEquipment_commonmodule_2fcommonmodule_2eproto.base);
  return *internal_default_instance();
}


void ConductingEquipment::Clear() {
// @@protoc_insertion_point(message_clear_start:commonmodule.ConductingEquipment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mrid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && namedobject_ != nullptr) {
    delete namedobject_;
  }
  namedobject_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ConductingEquipment::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ConductingEquipment*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .commonmodule.NamedObject namedObject = 1 [(.uml.option_parent_message) = true];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::NamedObject::_InternalParse;
        object = msg->mutable_namedobject();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // string mRID = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1, (.uml.option_uuid) = true, (.uml.option_key) = true];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("commonmodule.ConductingEquipment.mRID");
        object = msg->mutable_mrid();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ConductingEquipment::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:commonmodule.ConductingEquipment)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .commonmodule.NamedObject namedObject = 1 [(.uml.option_parent_message) = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_namedobject()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string mRID = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1, (.uml.option_uuid) = true, (.uml.option_key) = true];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mrid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mrid().data(), static_cast<int>(this->mrid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "commonmodule.ConductingEquipment.mRID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:commonmodule.ConductingEquipment)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:commonmodule.ConductingEquipment)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ConductingEquipment::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:commonmodule.ConductingEquipment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.NamedObject namedObject = 1 [(.uml.option_parent_message) = true];
  if (this->has_namedobject()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::namedobject(this), output);
  }

  // string mRID = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1, (.uml.option_uuid) = true, (.uml.option_key) = true];
  if (this->mrid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mrid().data(), static_cast<int>(this->mrid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "commonmodule.ConductingEquipment.mRID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->mrid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:commonmodule.ConductingEquipment)
}

::google::protobuf::uint8* ConductingEquipment::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:commonmodule.ConductingEquipment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.NamedObject namedObject = 1 [(.uml.option_parent_message) = true];
  if (this->has_namedobject()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::namedobject(this), target);
  }

  // string mRID = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1, (.uml.option_uuid) = true, (.uml.option_key) = true];
  if (this->mrid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mrid().data(), static_cast<int>(this->mrid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "commonmodule.ConductingEquipment.mRID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->mrid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:commonmodule.ConductingEquipment)
  return target;
}

size_t ConductingEquipment::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:commonmodule.ConductingEquipment)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string mRID = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1, (.uml.option_uuid) = true, (.uml.option_key) = true];
  if (this->mrid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mrid());
  }

  // .commonmodule.NamedObject namedObject = 1 [(.uml.option_parent_message) = true];
  if (this->has_namedobject()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *namedobject_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConductingEquipment::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:commonmodule.ConductingEquipment)
  GOOGLE_DCHECK_NE(&from, this);
  const ConductingEquipment* source =
      ::google::protobuf::DynamicCastToGenerated<ConductingEquipment>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:commonmodule.ConductingEquipment)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:commonmodule.ConductingEquipment)
    MergeFrom(*source);
  }
}

void ConductingEquipment::MergeFrom(const ConductingEquipment& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:commonmodule.ConductingEquipment)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.mrid().size() > 0) {

    mrid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mrid_);
  }
  if (from.has_namedobject()) {
    mutable_namedobject()->::commonmodule::NamedObject::MergeFrom(from.namedobject());
  }
}

void ConductingEquipment::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:commonmodule.ConductingEquipment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConductingEquipment::CopyFrom(const ConductingEquipment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:commonmodule.ConductingEquipment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConductingEquipment::IsInitialized() const {
  return true;
}

void ConductingEquipment::Swap(ConductingEquipment* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConductingEquipment::InternalSwap(ConductingEquipment* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  mrid_.Swap(&other->mrid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(namedobject_, other->namedobject_);
}

::google::protobuf::Metadata ConductingEquipment::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return ::file_level_metadata_commonmodule_2fcommonmodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Terminal::InitAsDefaultInstance() {
  ::commonmodule::_Terminal_default_instance_._instance.get_mutable()->acdcterminal_ = const_cast< ::commonmodule::ACDCTerminal*>(
      ::commonmodule::ACDCTerminal::internal_default_instance());
  ::commonmodule::_Terminal_default_instance_._instance.get_mutable()->phases_ = const_cast< ::commonmodule::Optional_PhaseCodeKind*>(
      ::commonmodule::Optional_PhaseCodeKind::internal_default_instance());
}
class Terminal::HasBitSetters {
 public:
  static const ::commonmodule::ACDCTerminal& acdcterminal(const Terminal* msg);
  static const ::commonmodule::Optional_PhaseCodeKind& phases(const Terminal* msg);
};

const ::commonmodule::ACDCTerminal&
Terminal::HasBitSetters::acdcterminal(const Terminal* msg) {
  return *msg->acdcterminal_;
}
const ::commonmodule::Optional_PhaseCodeKind&
Terminal::HasBitSetters::phases(const Terminal* msg) {
  return *msg->phases_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Terminal::kACDCTerminalFieldNumber;
const int Terminal::kPhasesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Terminal::Terminal()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:commonmodule.Terminal)
}
Terminal::Terminal(const Terminal& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_acdcterminal()) {
    acdcterminal_ = new ::commonmodule::ACDCTerminal(*from.acdcterminal_);
  } else {
    acdcterminal_ = nullptr;
  }
  if (from.has_phases()) {
    phases_ = new ::commonmodule::Optional_PhaseCodeKind(*from.phases_);
  } else {
    phases_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:commonmodule.Terminal)
}

void Terminal::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Terminal_commonmodule_2fcommonmodule_2eproto.base);
  ::memset(&acdcterminal_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&phases_) -
      reinterpret_cast<char*>(&acdcterminal_)) + sizeof(phases_));
}

Terminal::~Terminal() {
  // @@protoc_insertion_point(destructor:commonmodule.Terminal)
  SharedDtor();
}

void Terminal::SharedDtor() {
  if (this != internal_default_instance()) delete acdcterminal_;
  if (this != internal_default_instance()) delete phases_;
}

void Terminal::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Terminal& Terminal::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Terminal_commonmodule_2fcommonmodule_2eproto.base);
  return *internal_default_instance();
}


void Terminal::Clear() {
// @@protoc_insertion_point(message_clear_start:commonmodule.Terminal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && acdcterminal_ != nullptr) {
    delete acdcterminal_;
  }
  acdcterminal_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && phases_ != nullptr) {
    delete phases_;
  }
  phases_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Terminal::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Terminal*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .commonmodule.ACDCTerminal aCDCTerminal = 1 [(.uml.option_parent_message) = true];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::ACDCTerminal::_InternalParse;
        object = msg->mutable_acdcterminal();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .commonmodule.Optional_PhaseCodeKind phases = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::Optional_PhaseCodeKind::_InternalParse;
        object = msg->mutable_phases();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Terminal::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:commonmodule.Terminal)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .commonmodule.ACDCTerminal aCDCTerminal = 1 [(.uml.option_parent_message) = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_acdcterminal()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.Optional_PhaseCodeKind phases = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_phases()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:commonmodule.Terminal)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:commonmodule.Terminal)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Terminal::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:commonmodule.Terminal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.ACDCTerminal aCDCTerminal = 1 [(.uml.option_parent_message) = true];
  if (this->has_acdcterminal()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::acdcterminal(this), output);
  }

  // .commonmodule.Optional_PhaseCodeKind phases = 2;
  if (this->has_phases()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::phases(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:commonmodule.Terminal)
}

::google::protobuf::uint8* Terminal::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:commonmodule.Terminal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.ACDCTerminal aCDCTerminal = 1 [(.uml.option_parent_message) = true];
  if (this->has_acdcterminal()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::acdcterminal(this), target);
  }

  // .commonmodule.Optional_PhaseCodeKind phases = 2;
  if (this->has_phases()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::phases(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:commonmodule.Terminal)
  return target;
}

size_t Terminal::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:commonmodule.Terminal)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .commonmodule.ACDCTerminal aCDCTerminal = 1 [(.uml.option_parent_message) = true];
  if (this->has_acdcterminal()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *acdcterminal_);
  }

  // .commonmodule.Optional_PhaseCodeKind phases = 2;
  if (this->has_phases()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *phases_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Terminal::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:commonmodule.Terminal)
  GOOGLE_DCHECK_NE(&from, this);
  const Terminal* source =
      ::google::protobuf::DynamicCastToGenerated<Terminal>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:commonmodule.Terminal)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:commonmodule.Terminal)
    MergeFrom(*source);
  }
}

void Terminal::MergeFrom(const Terminal& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:commonmodule.Terminal)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_acdcterminal()) {
    mutable_acdcterminal()->::commonmodule::ACDCTerminal::MergeFrom(from.acdcterminal());
  }
  if (from.has_phases()) {
    mutable_phases()->::commonmodule::Optional_PhaseCodeKind::MergeFrom(from.phases());
  }
}

void Terminal::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:commonmodule.Terminal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Terminal::CopyFrom(const Terminal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:commonmodule.Terminal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Terminal::IsInitialized() const {
  return true;
}

void Terminal::Swap(Terminal* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Terminal::InternalSwap(Terminal* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(acdcterminal_, other->acdcterminal_);
  swap(phases_, other->phases_);
}

::google::protobuf::Metadata Terminal::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return ::file_level_metadata_commonmodule_2fcommonmodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ConductingEquipmentTerminalReading::InitAsDefaultInstance() {
  ::commonmodule::_ConductingEquipmentTerminalReading_default_instance_._instance.get_mutable()->terminal_ = const_cast< ::commonmodule::Terminal*>(
      ::commonmodule::Terminal::internal_default_instance());
}
class ConductingEquipmentTerminalReading::HasBitSetters {
 public:
  static const ::commonmodule::Terminal& terminal(const ConductingEquipmentTerminalReading* msg);
};

const ::commonmodule::Terminal&
ConductingEquipmentTerminalReading::HasBitSetters::terminal(const ConductingEquipmentTerminalReading* msg) {
  return *msg->terminal_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConductingEquipmentTerminalReading::kTerminalFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConductingEquipmentTerminalReading::ConductingEquipmentTerminalReading()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:commonmodule.ConductingEquipmentTerminalReading)
}
ConductingEquipmentTerminalReading::ConductingEquipmentTerminalReading(const ConductingEquipmentTerminalReading& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_terminal()) {
    terminal_ = new ::commonmodule::Terminal(*from.terminal_);
  } else {
    terminal_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:commonmodule.ConductingEquipmentTerminalReading)
}

void ConductingEquipmentTerminalReading::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ConductingEquipmentTerminalReading_commonmodule_2fcommonmodule_2eproto.base);
  terminal_ = nullptr;
}

ConductingEquipmentTerminalReading::~ConductingEquipmentTerminalReading() {
  // @@protoc_insertion_point(destructor:commonmodule.ConductingEquipmentTerminalReading)
  SharedDtor();
}

void ConductingEquipmentTerminalReading::SharedDtor() {
  if (this != internal_default_instance()) delete terminal_;
}

void ConductingEquipmentTerminalReading::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ConductingEquipmentTerminalReading& ConductingEquipmentTerminalReading::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ConductingEquipmentTerminalReading_commonmodule_2fcommonmodule_2eproto.base);
  return *internal_default_instance();
}


void ConductingEquipmentTerminalReading::Clear() {
// @@protoc_insertion_point(message_clear_start:commonmodule.ConductingEquipmentTerminalReading)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && terminal_ != nullptr) {
    delete terminal_;
  }
  terminal_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ConductingEquipmentTerminalReading::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ConductingEquipmentTerminalReading*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .commonmodule.Terminal terminal = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::Terminal::_InternalParse;
        object = msg->mutable_terminal();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ConductingEquipmentTerminalReading::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:commonmodule.ConductingEquipmentTerminalReading)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .commonmodule.Terminal terminal = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_terminal()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:commonmodule.ConductingEquipmentTerminalReading)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:commonmodule.ConductingEquipmentTerminalReading)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ConductingEquipmentTerminalReading::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:commonmodule.ConductingEquipmentTerminalReading)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.Terminal terminal = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_terminal()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::terminal(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:commonmodule.ConductingEquipmentTerminalReading)
}

::google::protobuf::uint8* ConductingEquipmentTerminalReading::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:commonmodule.ConductingEquipmentTerminalReading)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.Terminal terminal = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_terminal()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::terminal(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:commonmodule.ConductingEquipmentTerminalReading)
  return target;
}

size_t ConductingEquipmentTerminalReading::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:commonmodule.ConductingEquipmentTerminalReading)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .commonmodule.Terminal terminal = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_terminal()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *terminal_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConductingEquipmentTerminalReading::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:commonmodule.ConductingEquipmentTerminalReading)
  GOOGLE_DCHECK_NE(&from, this);
  const ConductingEquipmentTerminalReading* source =
      ::google::protobuf::DynamicCastToGenerated<ConductingEquipmentTerminalReading>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:commonmodule.ConductingEquipmentTerminalReading)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:commonmodule.ConductingEquipmentTerminalReading)
    MergeFrom(*source);
  }
}

void ConductingEquipmentTerminalReading::MergeFrom(const ConductingEquipmentTerminalReading& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:commonmodule.ConductingEquipmentTerminalReading)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_terminal()) {
    mutable_terminal()->::commonmodule::Terminal::MergeFrom(from.terminal());
  }
}

void ConductingEquipmentTerminalReading::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:commonmodule.ConductingEquipmentTerminalReading)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConductingEquipmentTerminalReading::CopyFrom(const ConductingEquipmentTerminalReading& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:commonmodule.ConductingEquipmentTerminalReading)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConductingEquipmentTerminalReading::IsInitialized() const {
  return true;
}

void ConductingEquipmentTerminalReading::Swap(ConductingEquipmentTerminalReading* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConductingEquipmentTerminalReading::InternalSwap(ConductingEquipmentTerminalReading* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(terminal_, other->terminal_);
}

::google::protobuf::Metadata ConductingEquipmentTerminalReading::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return ::file_level_metadata_commonmodule_2fcommonmodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ControlDPC::InitAsDefaultInstance() {
}
class ControlDPC::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ControlDPC::kCtlValFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ControlDPC::ControlDPC()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:commonmodule.ControlDPC)
}
ControlDPC::ControlDPC(const ControlDPC& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ctlval_ = from.ctlval_;
  // @@protoc_insertion_point(copy_constructor:commonmodule.ControlDPC)
}

void ControlDPC::SharedCtor() {
  ctlval_ = false;
}

ControlDPC::~ControlDPC() {
  // @@protoc_insertion_point(destructor:commonmodule.ControlDPC)
  SharedDtor();
}

void ControlDPC::SharedDtor() {
}

void ControlDPC::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ControlDPC& ControlDPC::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ControlDPC_commonmodule_2fcommonmodule_2eproto.base);
  return *internal_default_instance();
}


void ControlDPC::Clear() {
// @@protoc_insertion_point(message_clear_start:commonmodule.ControlDPC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ctlval_ = false;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ControlDPC::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ControlDPC*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bool ctlVal = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_ctlval(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ControlDPC::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:commonmodule.ControlDPC)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool ctlVal = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ctlval_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:commonmodule.ControlDPC)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:commonmodule.ControlDPC)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ControlDPC::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:commonmodule.ControlDPC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ctlVal = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->ctlval() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->ctlval(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:commonmodule.ControlDPC)
}

::google::protobuf::uint8* ControlDPC::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:commonmodule.ControlDPC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ctlVal = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->ctlval() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->ctlval(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:commonmodule.ControlDPC)
  return target;
}

size_t ControlDPC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:commonmodule.ControlDPC)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool ctlVal = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->ctlval() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ControlDPC::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:commonmodule.ControlDPC)
  GOOGLE_DCHECK_NE(&from, this);
  const ControlDPC* source =
      ::google::protobuf::DynamicCastToGenerated<ControlDPC>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:commonmodule.ControlDPC)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:commonmodule.ControlDPC)
    MergeFrom(*source);
  }
}

void ControlDPC::MergeFrom(const ControlDPC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:commonmodule.ControlDPC)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ctlval() != 0) {
    set_ctlval(from.ctlval());
  }
}

void ControlDPC::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:commonmodule.ControlDPC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ControlDPC::CopyFrom(const ControlDPC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:commonmodule.ControlDPC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ControlDPC::IsInitialized() const {
  return true;
}

void ControlDPC::Swap(ControlDPC* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ControlDPC::InternalSwap(ControlDPC* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(ctlval_, other->ctlval_);
}

::google::protobuf::Metadata ControlDPC::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return ::file_level_metadata_commonmodule_2fcommonmodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ControlTimestamp::InitAsDefaultInstance() {
}
class ControlTimestamp::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ControlTimestamp::kFractionFieldNumber;
const int ControlTimestamp::kSecondsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ControlTimestamp::ControlTimestamp()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:commonmodule.ControlTimestamp)
}
ControlTimestamp::ControlTimestamp(const ControlTimestamp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&seconds_, &from.seconds_,
    static_cast<size_t>(reinterpret_cast<char*>(&fraction_) -
    reinterpret_cast<char*>(&seconds_)) + sizeof(fraction_));
  // @@protoc_insertion_point(copy_constructor:commonmodule.ControlTimestamp)
}

void ControlTimestamp::SharedCtor() {
  ::memset(&seconds_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&fraction_) -
      reinterpret_cast<char*>(&seconds_)) + sizeof(fraction_));
}

ControlTimestamp::~ControlTimestamp() {
  // @@protoc_insertion_point(destructor:commonmodule.ControlTimestamp)
  SharedDtor();
}

void ControlTimestamp::SharedDtor() {
}

void ControlTimestamp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ControlTimestamp& ControlTimestamp::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ControlTimestamp_commonmodule_2fcommonmodule_2eproto.base);
  return *internal_default_instance();
}


void ControlTimestamp::Clear() {
// @@protoc_insertion_point(message_clear_start:commonmodule.ControlTimestamp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&seconds_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&fraction_) -
      reinterpret_cast<char*>(&seconds_)) + sizeof(fraction_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ControlTimestamp::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ControlTimestamp*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // uint32 fraction = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_fraction(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // uint64 seconds = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_seconds(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ControlTimestamp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:commonmodule.ControlTimestamp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 fraction = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &fraction_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 seconds = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &seconds_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:commonmodule.ControlTimestamp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:commonmodule.ControlTimestamp)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ControlTimestamp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:commonmodule.ControlTimestamp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 fraction = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->fraction() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->fraction(), output);
  }

  // uint64 seconds = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->seconds() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->seconds(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:commonmodule.ControlTimestamp)
}

::google::protobuf::uint8* ControlTimestamp::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:commonmodule.ControlTimestamp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 fraction = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->fraction() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->fraction(), target);
  }

  // uint64 seconds = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->seconds() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->seconds(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:commonmodule.ControlTimestamp)
  return target;
}

size_t ControlTimestamp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:commonmodule.ControlTimestamp)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 seconds = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->seconds() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->seconds());
  }

  // uint32 fraction = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->fraction() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->fraction());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ControlTimestamp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:commonmodule.ControlTimestamp)
  GOOGLE_DCHECK_NE(&from, this);
  const ControlTimestamp* source =
      ::google::protobuf::DynamicCastToGenerated<ControlTimestamp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:commonmodule.ControlTimestamp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:commonmodule.ControlTimestamp)
    MergeFrom(*source);
  }
}

void ControlTimestamp::MergeFrom(const ControlTimestamp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:commonmodule.ControlTimestamp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.seconds() != 0) {
    set_seconds(from.seconds());
  }
  if (from.fraction() != 0) {
    set_fraction(from.fraction());
  }
}

void ControlTimestamp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:commonmodule.ControlTimestamp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ControlTimestamp::CopyFrom(const ControlTimestamp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:commonmodule.ControlTimestamp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ControlTimestamp::IsInitialized() const {
  return true;
}

void ControlTimestamp::Swap(ControlTimestamp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ControlTimestamp::InternalSwap(ControlTimestamp* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(seconds_, other->seconds_);
  swap(fraction_, other->fraction_);
}

::google::protobuf::Metadata ControlTimestamp::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return ::file_level_metadata_commonmodule_2fcommonmodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Optional_ScheduleParameterKind::InitAsDefaultInstance() {
}
class Optional_ScheduleParameterKind::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Optional_ScheduleParameterKind::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Optional_ScheduleParameterKind::Optional_ScheduleParameterKind()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:commonmodule.Optional_ScheduleParameterKind)
}
Optional_ScheduleParameterKind::Optional_ScheduleParameterKind(const Optional_ScheduleParameterKind& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:commonmodule.Optional_ScheduleParameterKind)
}

void Optional_ScheduleParameterKind::SharedCtor() {
  value_ = 0;
}

Optional_ScheduleParameterKind::~Optional_ScheduleParameterKind() {
  // @@protoc_insertion_point(destructor:commonmodule.Optional_ScheduleParameterKind)
  SharedDtor();
}

void Optional_ScheduleParameterKind::SharedDtor() {
}

void Optional_ScheduleParameterKind::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Optional_ScheduleParameterKind& Optional_ScheduleParameterKind::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Optional_ScheduleParameterKind_commonmodule_2fcommonmodule_2eproto.base);
  return *internal_default_instance();
}


void Optional_ScheduleParameterKind::Clear() {
// @@protoc_insertion_point(message_clear_start:commonmodule.Optional_ScheduleParameterKind)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Optional_ScheduleParameterKind::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Optional_ScheduleParameterKind*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .commonmodule.ScheduleParameterKind value = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_value(static_cast<::commonmodule::ScheduleParameterKind>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Optional_ScheduleParameterKind::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:commonmodule.Optional_ScheduleParameterKind)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .commonmodule.ScheduleParameterKind value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_value(static_cast< ::commonmodule::ScheduleParameterKind >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:commonmodule.Optional_ScheduleParameterKind)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:commonmodule.Optional_ScheduleParameterKind)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Optional_ScheduleParameterKind::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:commonmodule.Optional_ScheduleParameterKind)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.ScheduleParameterKind value = 1;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:commonmodule.Optional_ScheduleParameterKind)
}

::google::protobuf::uint8* Optional_ScheduleParameterKind::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:commonmodule.Optional_ScheduleParameterKind)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.ScheduleParameterKind value = 1;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:commonmodule.Optional_ScheduleParameterKind)
  return target;
}

size_t Optional_ScheduleParameterKind::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:commonmodule.Optional_ScheduleParameterKind)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .commonmodule.ScheduleParameterKind value = 1;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Optional_ScheduleParameterKind::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:commonmodule.Optional_ScheduleParameterKind)
  GOOGLE_DCHECK_NE(&from, this);
  const Optional_ScheduleParameterKind* source =
      ::google::protobuf::DynamicCastToGenerated<Optional_ScheduleParameterKind>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:commonmodule.Optional_ScheduleParameterKind)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:commonmodule.Optional_ScheduleParameterKind)
    MergeFrom(*source);
  }
}

void Optional_ScheduleParameterKind::MergeFrom(const Optional_ScheduleParameterKind& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:commonmodule.Optional_ScheduleParameterKind)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value() != 0) {
    set_value(from.value());
  }
}

void Optional_ScheduleParameterKind::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:commonmodule.Optional_ScheduleParameterKind)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Optional_ScheduleParameterKind::CopyFrom(const Optional_ScheduleParameterKind& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:commonmodule.Optional_ScheduleParameterKind)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Optional_ScheduleParameterKind::IsInitialized() const {
  return true;
}

void Optional_ScheduleParameterKind::Swap(Optional_ScheduleParameterKind* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Optional_ScheduleParameterKind::InternalSwap(Optional_ScheduleParameterKind* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(value_, other->value_);
}

::google::protobuf::Metadata Optional_ScheduleParameterKind::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return ::file_level_metadata_commonmodule_2fcommonmodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ENG_ScheduleParameter::InitAsDefaultInstance() {
}
class ENG_ScheduleParameter::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ENG_ScheduleParameter::kScheduleParameterTypeFieldNumber;
const int ENG_ScheduleParameter::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ENG_ScheduleParameter::ENG_ScheduleParameter()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:commonmodule.ENG_ScheduleParameter)
}
ENG_ScheduleParameter::ENG_ScheduleParameter(const ENG_ScheduleParameter& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&scheduleparametertype_, &from.scheduleparametertype_,
    static_cast<size_t>(reinterpret_cast<char*>(&value_) -
    reinterpret_cast<char*>(&scheduleparametertype_)) + sizeof(value_));
  // @@protoc_insertion_point(copy_constructor:commonmodule.ENG_ScheduleParameter)
}

void ENG_ScheduleParameter::SharedCtor() {
  ::memset(&scheduleparametertype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&scheduleparametertype_)) + sizeof(value_));
}

ENG_ScheduleParameter::~ENG_ScheduleParameter() {
  // @@protoc_insertion_point(destructor:commonmodule.ENG_ScheduleParameter)
  SharedDtor();
}

void ENG_ScheduleParameter::SharedDtor() {
}

void ENG_ScheduleParameter::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ENG_ScheduleParameter& ENG_ScheduleParameter::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ENG_ScheduleParameter_commonmodule_2fcommonmodule_2eproto.base);
  return *internal_default_instance();
}


void ENG_ScheduleParameter::Clear() {
// @@protoc_insertion_point(message_clear_start:commonmodule.ENG_ScheduleParameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&scheduleparametertype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&scheduleparametertype_)) + sizeof(value_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ENG_ScheduleParameter::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ENG_ScheduleParameter*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .commonmodule.ScheduleParameterKind scheduleParameterType = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_scheduleparametertype(static_cast<::commonmodule::ScheduleParameterKind>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // float value = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 21) goto handle_unusual;
        msg->set_value(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ENG_ScheduleParameter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:commonmodule.ENG_ScheduleParameter)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .commonmodule.ScheduleParameterKind scheduleParameterType = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_scheduleparametertype(static_cast< ::commonmodule::ScheduleParameterKind >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float value = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (21 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:commonmodule.ENG_ScheduleParameter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:commonmodule.ENG_ScheduleParameter)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ENG_ScheduleParameter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:commonmodule.ENG_ScheduleParameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.ScheduleParameterKind scheduleParameterType = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->scheduleparametertype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->scheduleparametertype(), output);
  }

  // float value = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:commonmodule.ENG_ScheduleParameter)
}

::google::protobuf::uint8* ENG_ScheduleParameter::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:commonmodule.ENG_ScheduleParameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.ScheduleParameterKind scheduleParameterType = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->scheduleparametertype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->scheduleparametertype(), target);
  }

  // float value = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:commonmodule.ENG_ScheduleParameter)
  return target;
}

size_t ENG_ScheduleParameter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:commonmodule.ENG_ScheduleParameter)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .commonmodule.ScheduleParameterKind scheduleParameterType = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->scheduleparametertype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->scheduleparametertype());
  }

  // float value = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->value() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ENG_ScheduleParameter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:commonmodule.ENG_ScheduleParameter)
  GOOGLE_DCHECK_NE(&from, this);
  const ENG_ScheduleParameter* source =
      ::google::protobuf::DynamicCastToGenerated<ENG_ScheduleParameter>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:commonmodule.ENG_ScheduleParameter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:commonmodule.ENG_ScheduleParameter)
    MergeFrom(*source);
  }
}

void ENG_ScheduleParameter::MergeFrom(const ENG_ScheduleParameter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:commonmodule.ENG_ScheduleParameter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.scheduleparametertype() != 0) {
    set_scheduleparametertype(from.scheduleparametertype());
  }
  if (from.value() != 0) {
    set_value(from.value());
  }
}

void ENG_ScheduleParameter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:commonmodule.ENG_ScheduleParameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ENG_ScheduleParameter::CopyFrom(const ENG_ScheduleParameter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:commonmodule.ENG_ScheduleParameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ENG_ScheduleParameter::IsInitialized() const {
  return true;
}

void ENG_ScheduleParameter::Swap(ENG_ScheduleParameter* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ENG_ScheduleParameter::InternalSwap(ENG_ScheduleParameter* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(scheduleparametertype_, other->scheduleparametertype_);
  swap(value_, other->value_);
}

::google::protobuf::Metadata ENG_ScheduleParameter::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return ::file_level_metadata_commonmodule_2fcommonmodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void SchedulePoint::InitAsDefaultInstance() {
  ::commonmodule::_SchedulePoint_default_instance_._instance.get_mutable()->starttime_ = const_cast< ::commonmodule::ControlTimestamp*>(
      ::commonmodule::ControlTimestamp::internal_default_instance());
}
class SchedulePoint::HasBitSetters {
 public:
  static const ::commonmodule::ControlTimestamp& starttime(const SchedulePoint* msg);
};

const ::commonmodule::ControlTimestamp&
SchedulePoint::HasBitSetters::starttime(const SchedulePoint* msg) {
  return *msg->starttime_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SchedulePoint::kScheduleParameterFieldNumber;
const int SchedulePoint::kStartTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SchedulePoint::SchedulePoint()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:commonmodule.SchedulePoint)
}
SchedulePoint::SchedulePoint(const SchedulePoint& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      scheduleparameter_(from.scheduleparameter_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_starttime()) {
    starttime_ = new ::commonmodule::ControlTimestamp(*from.starttime_);
  } else {
    starttime_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:commonmodule.SchedulePoint)
}

void SchedulePoint::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_SchedulePoint_commonmodule_2fcommonmodule_2eproto.base);
  starttime_ = nullptr;
}

SchedulePoint::~SchedulePoint() {
  // @@protoc_insertion_point(destructor:commonmodule.SchedulePoint)
  SharedDtor();
}

void SchedulePoint::SharedDtor() {
  if (this != internal_default_instance()) delete starttime_;
}

void SchedulePoint::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SchedulePoint& SchedulePoint::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SchedulePoint_commonmodule_2fcommonmodule_2eproto.base);
  return *internal_default_instance();
}


void SchedulePoint::Clear() {
// @@protoc_insertion_point(message_clear_start:commonmodule.SchedulePoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  scheduleparameter_.Clear();
  if (GetArenaNoVirtual() == nullptr && starttime_ != nullptr) {
    delete starttime_;
  }
  starttime_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SchedulePoint::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SchedulePoint*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .commonmodule.ENG_ScheduleParameter scheduleParameter = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::commonmodule::ENG_ScheduleParameter::_InternalParse;
          object = msg->add_scheduleparameter();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      // .commonmodule.ControlTimestamp startTime = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::ControlTimestamp::_InternalParse;
        object = msg->mutable_starttime();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SchedulePoint::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:commonmodule.SchedulePoint)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .commonmodule.ENG_ScheduleParameter scheduleParameter = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_scheduleparameter()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.ControlTimestamp startTime = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_starttime()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:commonmodule.SchedulePoint)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:commonmodule.SchedulePoint)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SchedulePoint::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:commonmodule.SchedulePoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .commonmodule.ENG_ScheduleParameter scheduleParameter = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->scheduleparameter_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->scheduleparameter(static_cast<int>(i)),
      output);
  }

  // .commonmodule.ControlTimestamp startTime = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_starttime()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::starttime(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:commonmodule.SchedulePoint)
}

::google::protobuf::uint8* SchedulePoint::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:commonmodule.SchedulePoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .commonmodule.ENG_ScheduleParameter scheduleParameter = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->scheduleparameter_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->scheduleparameter(static_cast<int>(i)), target);
  }

  // .commonmodule.ControlTimestamp startTime = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_starttime()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::starttime(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:commonmodule.SchedulePoint)
  return target;
}

size_t SchedulePoint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:commonmodule.SchedulePoint)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .commonmodule.ENG_ScheduleParameter scheduleParameter = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  {
    unsigned int count = static_cast<unsigned int>(this->scheduleparameter_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->scheduleparameter(static_cast<int>(i)));
    }
  }

  // .commonmodule.ControlTimestamp startTime = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_starttime()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *starttime_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SchedulePoint::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:commonmodule.SchedulePoint)
  GOOGLE_DCHECK_NE(&from, this);
  const SchedulePoint* source =
      ::google::protobuf::DynamicCastToGenerated<SchedulePoint>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:commonmodule.SchedulePoint)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:commonmodule.SchedulePoint)
    MergeFrom(*source);
  }
}

void SchedulePoint::MergeFrom(const SchedulePoint& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:commonmodule.SchedulePoint)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  scheduleparameter_.MergeFrom(from.scheduleparameter_);
  if (from.has_starttime()) {
    mutable_starttime()->::commonmodule::ControlTimestamp::MergeFrom(from.starttime());
  }
}

void SchedulePoint::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:commonmodule.SchedulePoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SchedulePoint::CopyFrom(const SchedulePoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:commonmodule.SchedulePoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SchedulePoint::IsInitialized() const {
  return true;
}

void SchedulePoint::Swap(SchedulePoint* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SchedulePoint::InternalSwap(SchedulePoint* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&scheduleparameter_)->InternalSwap(CastToBase(&other->scheduleparameter_));
  swap(starttime_, other->starttime_);
}

::google::protobuf::Metadata SchedulePoint::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return ::file_level_metadata_commonmodule_2fcommonmodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ScheduleCSG::InitAsDefaultInstance() {
}
class ScheduleCSG::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ScheduleCSG::kSchPtsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ScheduleCSG::ScheduleCSG()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:commonmodule.ScheduleCSG)
}
ScheduleCSG::ScheduleCSG(const ScheduleCSG& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      schpts_(from.schpts_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:commonmodule.ScheduleCSG)
}

void ScheduleCSG::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ScheduleCSG_commonmodule_2fcommonmodule_2eproto.base);
}

ScheduleCSG::~ScheduleCSG() {
  // @@protoc_insertion_point(destructor:commonmodule.ScheduleCSG)
  SharedDtor();
}

void ScheduleCSG::SharedDtor() {
}

void ScheduleCSG::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ScheduleCSG& ScheduleCSG::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ScheduleCSG_commonmodule_2fcommonmodule_2eproto.base);
  return *internal_default_instance();
}


void ScheduleCSG::Clear() {
// @@protoc_insertion_point(message_clear_start:commonmodule.ScheduleCSG)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  schpts_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ScheduleCSG::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ScheduleCSG*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .commonmodule.SchedulePoint schPts = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::commonmodule::SchedulePoint::_InternalParse;
          object = msg->add_schpts();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ScheduleCSG::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:commonmodule.ScheduleCSG)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .commonmodule.SchedulePoint schPts = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_schpts()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:commonmodule.ScheduleCSG)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:commonmodule.ScheduleCSG)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ScheduleCSG::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:commonmodule.ScheduleCSG)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .commonmodule.SchedulePoint schPts = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->schpts_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->schpts(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:commonmodule.ScheduleCSG)
}

::google::protobuf::uint8* ScheduleCSG::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:commonmodule.ScheduleCSG)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .commonmodule.SchedulePoint schPts = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->schpts_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->schpts(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:commonmodule.ScheduleCSG)
  return target;
}

size_t ScheduleCSG::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:commonmodule.ScheduleCSG)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .commonmodule.SchedulePoint schPts = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  {
    unsigned int count = static_cast<unsigned int>(this->schpts_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->schpts(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ScheduleCSG::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:commonmodule.ScheduleCSG)
  GOOGLE_DCHECK_NE(&from, this);
  const ScheduleCSG* source =
      ::google::protobuf::DynamicCastToGenerated<ScheduleCSG>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:commonmodule.ScheduleCSG)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:commonmodule.ScheduleCSG)
    MergeFrom(*source);
  }
}

void ScheduleCSG::MergeFrom(const ScheduleCSG& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:commonmodule.ScheduleCSG)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  schpts_.MergeFrom(from.schpts_);
}

void ScheduleCSG::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:commonmodule.ScheduleCSG)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ScheduleCSG::CopyFrom(const ScheduleCSG& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:commonmodule.ScheduleCSG)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScheduleCSG::IsInitialized() const {
  return true;
}

void ScheduleCSG::Swap(ScheduleCSG* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ScheduleCSG::InternalSwap(ScheduleCSG* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&schpts_)->InternalSwap(CastToBase(&other->schpts_));
}

::google::protobuf::Metadata ScheduleCSG::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return ::file_level_metadata_commonmodule_2fcommonmodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ControlScheduleFSCH::InitAsDefaultInstance() {
  ::commonmodule::_ControlScheduleFSCH_default_instance_._instance.get_mutable()->valacsg_ = const_cast< ::commonmodule::ScheduleCSG*>(
      ::commonmodule::ScheduleCSG::internal_default_instance());
}
class ControlScheduleFSCH::HasBitSetters {
 public:
  static const ::commonmodule::ScheduleCSG& valacsg(const ControlScheduleFSCH* msg);
};

const ::commonmodule::ScheduleCSG&
ControlScheduleFSCH::HasBitSetters::valacsg(const ControlScheduleFSCH* msg) {
  return *msg->valacsg_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ControlScheduleFSCH::kValACSGFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ControlScheduleFSCH::ControlScheduleFSCH()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:commonmodule.ControlScheduleFSCH)
}
ControlScheduleFSCH::ControlScheduleFSCH(const ControlScheduleFSCH& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_valacsg()) {
    valacsg_ = new ::commonmodule::ScheduleCSG(*from.valacsg_);
  } else {
    valacsg_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:commonmodule.ControlScheduleFSCH)
}

void ControlScheduleFSCH::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ControlScheduleFSCH_commonmodule_2fcommonmodule_2eproto.base);
  valacsg_ = nullptr;
}

ControlScheduleFSCH::~ControlScheduleFSCH() {
  // @@protoc_insertion_point(destructor:commonmodule.ControlScheduleFSCH)
  SharedDtor();
}

void ControlScheduleFSCH::SharedDtor() {
  if (this != internal_default_instance()) delete valacsg_;
}

void ControlScheduleFSCH::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ControlScheduleFSCH& ControlScheduleFSCH::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ControlScheduleFSCH_commonmodule_2fcommonmodule_2eproto.base);
  return *internal_default_instance();
}


void ControlScheduleFSCH::Clear() {
// @@protoc_insertion_point(message_clear_start:commonmodule.ControlScheduleFSCH)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && valacsg_ != nullptr) {
    delete valacsg_;
  }
  valacsg_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ControlScheduleFSCH::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ControlScheduleFSCH*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .commonmodule.ScheduleCSG ValACSG = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::ScheduleCSG::_InternalParse;
        object = msg->mutable_valacsg();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ControlScheduleFSCH::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:commonmodule.ControlScheduleFSCH)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .commonmodule.ScheduleCSG ValACSG = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_valacsg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:commonmodule.ControlScheduleFSCH)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:commonmodule.ControlScheduleFSCH)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ControlScheduleFSCH::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:commonmodule.ControlScheduleFSCH)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.ScheduleCSG ValACSG = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_valacsg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::valacsg(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:commonmodule.ControlScheduleFSCH)
}

::google::protobuf::uint8* ControlScheduleFSCH::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:commonmodule.ControlScheduleFSCH)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.ScheduleCSG ValACSG = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_valacsg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::valacsg(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:commonmodule.ControlScheduleFSCH)
  return target;
}

size_t ControlScheduleFSCH::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:commonmodule.ControlScheduleFSCH)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .commonmodule.ScheduleCSG ValACSG = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_valacsg()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *valacsg_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ControlScheduleFSCH::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:commonmodule.ControlScheduleFSCH)
  GOOGLE_DCHECK_NE(&from, this);
  const ControlScheduleFSCH* source =
      ::google::protobuf::DynamicCastToGenerated<ControlScheduleFSCH>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:commonmodule.ControlScheduleFSCH)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:commonmodule.ControlScheduleFSCH)
    MergeFrom(*source);
  }
}

void ControlScheduleFSCH::MergeFrom(const ControlScheduleFSCH& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:commonmodule.ControlScheduleFSCH)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_valacsg()) {
    mutable_valacsg()->::commonmodule::ScheduleCSG::MergeFrom(from.valacsg());
  }
}

void ControlScheduleFSCH::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:commonmodule.ControlScheduleFSCH)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ControlScheduleFSCH::CopyFrom(const ControlScheduleFSCH& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:commonmodule.ControlScheduleFSCH)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ControlScheduleFSCH::IsInitialized() const {
  return true;
}

void ControlScheduleFSCH::Swap(ControlScheduleFSCH* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ControlScheduleFSCH::InternalSwap(ControlScheduleFSCH* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(valacsg_, other->valacsg_);
}

::google::protobuf::Metadata ControlScheduleFSCH::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return ::file_level_metadata_commonmodule_2fcommonmodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void LogicalNodeForControl::InitAsDefaultInstance() {
  ::commonmodule::_LogicalNodeForControl_default_instance_._instance.get_mutable()->logicalnode_ = const_cast< ::commonmodule::LogicalNode*>(
      ::commonmodule::LogicalNode::internal_default_instance());
}
class LogicalNodeForControl::HasBitSetters {
 public:
  static const ::commonmodule::LogicalNode& logicalnode(const LogicalNodeForControl* msg);
};

const ::commonmodule::LogicalNode&
LogicalNodeForControl::HasBitSetters::logicalnode(const LogicalNodeForControl* msg) {
  return *msg->logicalnode_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LogicalNodeForControl::kLogicalNodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LogicalNodeForControl::LogicalNodeForControl()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:commonmodule.LogicalNodeForControl)
}
LogicalNodeForControl::LogicalNodeForControl(const LogicalNodeForControl& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_logicalnode()) {
    logicalnode_ = new ::commonmodule::LogicalNode(*from.logicalnode_);
  } else {
    logicalnode_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:commonmodule.LogicalNodeForControl)
}

void LogicalNodeForControl::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_LogicalNodeForControl_commonmodule_2fcommonmodule_2eproto.base);
  logicalnode_ = nullptr;
}

LogicalNodeForControl::~LogicalNodeForControl() {
  // @@protoc_insertion_point(destructor:commonmodule.LogicalNodeForControl)
  SharedDtor();
}

void LogicalNodeForControl::SharedDtor() {
  if (this != internal_default_instance()) delete logicalnode_;
}

void LogicalNodeForControl::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LogicalNodeForControl& LogicalNodeForControl::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_LogicalNodeForControl_commonmodule_2fcommonmodule_2eproto.base);
  return *internal_default_instance();
}


void LogicalNodeForControl::Clear() {
// @@protoc_insertion_point(message_clear_start:commonmodule.LogicalNodeForControl)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && logicalnode_ != nullptr) {
    delete logicalnode_;
  }
  logicalnode_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* LogicalNodeForControl::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<LogicalNodeForControl*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .commonmodule.LogicalNode logicalNode = 1 [(.uml.option_parent_message) = true];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::LogicalNode::_InternalParse;
        object = msg->mutable_logicalnode();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool LogicalNodeForControl::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:commonmodule.LogicalNodeForControl)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .commonmodule.LogicalNode logicalNode = 1 [(.uml.option_parent_message) = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_logicalnode()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:commonmodule.LogicalNodeForControl)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:commonmodule.LogicalNodeForControl)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void LogicalNodeForControl::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:commonmodule.LogicalNodeForControl)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.LogicalNode logicalNode = 1 [(.uml.option_parent_message) = true];
  if (this->has_logicalnode()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::logicalnode(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:commonmodule.LogicalNodeForControl)
}

::google::protobuf::uint8* LogicalNodeForControl::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:commonmodule.LogicalNodeForControl)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.LogicalNode logicalNode = 1 [(.uml.option_parent_message) = true];
  if (this->has_logicalnode()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::logicalnode(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:commonmodule.LogicalNodeForControl)
  return target;
}

size_t LogicalNodeForControl::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:commonmodule.LogicalNodeForControl)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .commonmodule.LogicalNode logicalNode = 1 [(.uml.option_parent_message) = true];
  if (this->has_logicalnode()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *logicalnode_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LogicalNodeForControl::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:commonmodule.LogicalNodeForControl)
  GOOGLE_DCHECK_NE(&from, this);
  const LogicalNodeForControl* source =
      ::google::protobuf::DynamicCastToGenerated<LogicalNodeForControl>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:commonmodule.LogicalNodeForControl)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:commonmodule.LogicalNodeForControl)
    MergeFrom(*source);
  }
}

void LogicalNodeForControl::MergeFrom(const LogicalNodeForControl& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:commonmodule.LogicalNodeForControl)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_logicalnode()) {
    mutable_logicalnode()->::commonmodule::LogicalNode::MergeFrom(from.logicalnode());
  }
}

void LogicalNodeForControl::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:commonmodule.LogicalNodeForControl)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LogicalNodeForControl::CopyFrom(const LogicalNodeForControl& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:commonmodule.LogicalNodeForControl)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogicalNodeForControl::IsInitialized() const {
  return true;
}

void LogicalNodeForControl::Swap(LogicalNodeForControl* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LogicalNodeForControl::InternalSwap(LogicalNodeForControl* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(logicalnode_, other->logicalnode_);
}

::google::protobuf::Metadata LogicalNodeForControl::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return ::file_level_metadata_commonmodule_2fcommonmodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ControlFSCC::InitAsDefaultInstance() {
  ::commonmodule::_ControlFSCC_default_instance_._instance.get_mutable()->logicalnodeforcontrol_ = const_cast< ::commonmodule::LogicalNodeForControl*>(
      ::commonmodule::LogicalNodeForControl::internal_default_instance());
  ::commonmodule::_ControlFSCC_default_instance_._instance.get_mutable()->controlschedulefsch_ = const_cast< ::commonmodule::ControlScheduleFSCH*>(
      ::commonmodule::ControlScheduleFSCH::internal_default_instance());
  ::commonmodule::_ControlFSCC_default_instance_._instance.get_mutable()->islandcontrolschedulefsch_ = const_cast< ::commonmodule::ControlScheduleFSCH*>(
      ::commonmodule::ControlScheduleFSCH::internal_default_instance());
}
class ControlFSCC::HasBitSetters {
 public:
  static const ::commonmodule::LogicalNodeForControl& logicalnodeforcontrol(const ControlFSCC* msg);
  static const ::commonmodule::ControlScheduleFSCH& controlschedulefsch(const ControlFSCC* msg);
  static const ::commonmodule::ControlScheduleFSCH& islandcontrolschedulefsch(const ControlFSCC* msg);
};

const ::commonmodule::LogicalNodeForControl&
ControlFSCC::HasBitSetters::logicalnodeforcontrol(const ControlFSCC* msg) {
  return *msg->logicalnodeforcontrol_;
}
const ::commonmodule::ControlScheduleFSCH&
ControlFSCC::HasBitSetters::controlschedulefsch(const ControlFSCC* msg) {
  return *msg->controlschedulefsch_;
}
const ::commonmodule::ControlScheduleFSCH&
ControlFSCC::HasBitSetters::islandcontrolschedulefsch(const ControlFSCC* msg) {
  return *msg->islandcontrolschedulefsch_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ControlFSCC::kLogicalNodeForControlFieldNumber;
const int ControlFSCC::kControlScheduleFSCHFieldNumber;
const int ControlFSCC::kIslandControlScheduleFSCHFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ControlFSCC::ControlFSCC()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:commonmodule.ControlFSCC)
}
ControlFSCC::ControlFSCC(const ControlFSCC& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_logicalnodeforcontrol()) {
    logicalnodeforcontrol_ = new ::commonmodule::LogicalNodeForControl(*from.logicalnodeforcontrol_);
  } else {
    logicalnodeforcontrol_ = nullptr;
  }
  if (from.has_controlschedulefsch()) {
    controlschedulefsch_ = new ::commonmodule::ControlScheduleFSCH(*from.controlschedulefsch_);
  } else {
    controlschedulefsch_ = nullptr;
  }
  if (from.has_islandcontrolschedulefsch()) {
    islandcontrolschedulefsch_ = new ::commonmodule::ControlScheduleFSCH(*from.islandcontrolschedulefsch_);
  } else {
    islandcontrolschedulefsch_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:commonmodule.ControlFSCC)
}

void ControlFSCC::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ControlFSCC_commonmodule_2fcommonmodule_2eproto.base);
  ::memset(&logicalnodeforcontrol_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&islandcontrolschedulefsch_) -
      reinterpret_cast<char*>(&logicalnodeforcontrol_)) + sizeof(islandcontrolschedulefsch_));
}

ControlFSCC::~ControlFSCC() {
  // @@protoc_insertion_point(destructor:commonmodule.ControlFSCC)
  SharedDtor();
}

void ControlFSCC::SharedDtor() {
  if (this != internal_default_instance()) delete logicalnodeforcontrol_;
  if (this != internal_default_instance()) delete controlschedulefsch_;
  if (this != internal_default_instance()) delete islandcontrolschedulefsch_;
}

void ControlFSCC::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ControlFSCC& ControlFSCC::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ControlFSCC_commonmodule_2fcommonmodule_2eproto.base);
  return *internal_default_instance();
}


void ControlFSCC::Clear() {
// @@protoc_insertion_point(message_clear_start:commonmodule.ControlFSCC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && logicalnodeforcontrol_ != nullptr) {
    delete logicalnodeforcontrol_;
  }
  logicalnodeforcontrol_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && controlschedulefsch_ != nullptr) {
    delete controlschedulefsch_;
  }
  controlschedulefsch_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && islandcontrolschedulefsch_ != nullptr) {
    delete islandcontrolschedulefsch_;
  }
  islandcontrolschedulefsch_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ControlFSCC::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ControlFSCC*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .commonmodule.LogicalNodeForControl logicalNodeForControl = 1 [(.uml.option_parent_message) = true];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::LogicalNodeForControl::_InternalParse;
        object = msg->mutable_logicalnodeforcontrol();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .commonmodule.ControlScheduleFSCH controlScheduleFSCH = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::ControlScheduleFSCH::_InternalParse;
        object = msg->mutable_controlschedulefsch();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .commonmodule.ControlScheduleFSCH islandControlScheduleFSCH = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::ControlScheduleFSCH::_InternalParse;
        object = msg->mutable_islandcontrolschedulefsch();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ControlFSCC::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:commonmodule.ControlFSCC)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .commonmodule.LogicalNodeForControl logicalNodeForControl = 1 [(.uml.option_parent_message) = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_logicalnodeforcontrol()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.ControlScheduleFSCH controlScheduleFSCH = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_controlschedulefsch()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.ControlScheduleFSCH islandControlScheduleFSCH = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_islandcontrolschedulefsch()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:commonmodule.ControlFSCC)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:commonmodule.ControlFSCC)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ControlFSCC::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:commonmodule.ControlFSCC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.LogicalNodeForControl logicalNodeForControl = 1 [(.uml.option_parent_message) = true];
  if (this->has_logicalnodeforcontrol()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::logicalnodeforcontrol(this), output);
  }

  // .commonmodule.ControlScheduleFSCH controlScheduleFSCH = 2;
  if (this->has_controlschedulefsch()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::controlschedulefsch(this), output);
  }

  // .commonmodule.ControlScheduleFSCH islandControlScheduleFSCH = 3;
  if (this->has_islandcontrolschedulefsch()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::islandcontrolschedulefsch(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:commonmodule.ControlFSCC)
}

::google::protobuf::uint8* ControlFSCC::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:commonmodule.ControlFSCC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.LogicalNodeForControl logicalNodeForControl = 1 [(.uml.option_parent_message) = true];
  if (this->has_logicalnodeforcontrol()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::logicalnodeforcontrol(this), target);
  }

  // .commonmodule.ControlScheduleFSCH controlScheduleFSCH = 2;
  if (this->has_controlschedulefsch()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::controlschedulefsch(this), target);
  }

  // .commonmodule.ControlScheduleFSCH islandControlScheduleFSCH = 3;
  if (this->has_islandcontrolschedulefsch()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::islandcontrolschedulefsch(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:commonmodule.ControlFSCC)
  return target;
}

size_t ControlFSCC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:commonmodule.ControlFSCC)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .commonmodule.LogicalNodeForControl logicalNodeForControl = 1 [(.uml.option_parent_message) = true];
  if (this->has_logicalnodeforcontrol()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *logicalnodeforcontrol_);
  }

  // .commonmodule.ControlScheduleFSCH controlScheduleFSCH = 2;
  if (this->has_controlschedulefsch()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *controlschedulefsch_);
  }

  // .commonmodule.ControlScheduleFSCH islandControlScheduleFSCH = 3;
  if (this->has_islandcontrolschedulefsch()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *islandcontrolschedulefsch_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ControlFSCC::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:commonmodule.ControlFSCC)
  GOOGLE_DCHECK_NE(&from, this);
  const ControlFSCC* source =
      ::google::protobuf::DynamicCastToGenerated<ControlFSCC>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:commonmodule.ControlFSCC)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:commonmodule.ControlFSCC)
    MergeFrom(*source);
  }
}

void ControlFSCC::MergeFrom(const ControlFSCC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:commonmodule.ControlFSCC)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_logicalnodeforcontrol()) {
    mutable_logicalnodeforcontrol()->::commonmodule::LogicalNodeForControl::MergeFrom(from.logicalnodeforcontrol());
  }
  if (from.has_controlschedulefsch()) {
    mutable_controlschedulefsch()->::commonmodule::ControlScheduleFSCH::MergeFrom(from.controlschedulefsch());
  }
  if (from.has_islandcontrolschedulefsch()) {
    mutable_islandcontrolschedulefsch()->::commonmodule::ControlScheduleFSCH::MergeFrom(from.islandcontrolschedulefsch());
  }
}

void ControlFSCC::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:commonmodule.ControlFSCC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ControlFSCC::CopyFrom(const ControlFSCC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:commonmodule.ControlFSCC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ControlFSCC::IsInitialized() const {
  return true;
}

void ControlFSCC::Swap(ControlFSCC* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ControlFSCC::InternalSwap(ControlFSCC* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(logicalnodeforcontrol_, other->logicalnodeforcontrol_);
  swap(controlschedulefsch_, other->controlschedulefsch_);
  swap(islandcontrolschedulefsch_, other->islandcontrolschedulefsch_);
}

::google::protobuf::Metadata ControlFSCC::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return ::file_level_metadata_commonmodule_2fcommonmodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ControlING::InitAsDefaultInstance() {
  ::commonmodule::_ControlING_default_instance_._instance.get_mutable()->units_ = const_cast< ::commonmodule::Unit*>(
      ::commonmodule::Unit::internal_default_instance());
}
class ControlING::HasBitSetters {
 public:
  static const ::commonmodule::Unit& units(const ControlING* msg);
};

const ::commonmodule::Unit&
ControlING::HasBitSetters::units(const ControlING* msg) {
  return *msg->units_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ControlING::kSetValFieldNumber;
const int ControlING::kUnitsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ControlING::ControlING()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:commonmodule.ControlING)
}
ControlING::ControlING(const ControlING& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_units()) {
    units_ = new ::commonmodule::Unit(*from.units_);
  } else {
    units_ = nullptr;
  }
  setval_ = from.setval_;
  // @@protoc_insertion_point(copy_constructor:commonmodule.ControlING)
}

void ControlING::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ControlING_commonmodule_2fcommonmodule_2eproto.base);
  ::memset(&units_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&setval_) -
      reinterpret_cast<char*>(&units_)) + sizeof(setval_));
}

ControlING::~ControlING() {
  // @@protoc_insertion_point(destructor:commonmodule.ControlING)
  SharedDtor();
}

void ControlING::SharedDtor() {
  if (this != internal_default_instance()) delete units_;
}

void ControlING::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ControlING& ControlING::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ControlING_commonmodule_2fcommonmodule_2eproto.base);
  return *internal_default_instance();
}


void ControlING::Clear() {
// @@protoc_insertion_point(message_clear_start:commonmodule.ControlING)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && units_ != nullptr) {
    delete units_;
  }
  units_ = nullptr;
  setval_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ControlING::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ControlING*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 setVal = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_setval(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .commonmodule.Unit units = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::Unit::_InternalParse;
        object = msg->mutable_units();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ControlING::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:commonmodule.ControlING)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 setVal = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &setval_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.Unit units = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_units()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:commonmodule.ControlING)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:commonmodule.ControlING)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ControlING::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:commonmodule.ControlING)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 setVal = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->setval() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->setval(), output);
  }

  // .commonmodule.Unit units = 2;
  if (this->has_units()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::units(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:commonmodule.ControlING)
}

::google::protobuf::uint8* ControlING::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:commonmodule.ControlING)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 setVal = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->setval() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->setval(), target);
  }

  // .commonmodule.Unit units = 2;
  if (this->has_units()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::units(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:commonmodule.ControlING)
  return target;
}

size_t ControlING::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:commonmodule.ControlING)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .commonmodule.Unit units = 2;
  if (this->has_units()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *units_);
  }

  // int32 setVal = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->setval() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->setval());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ControlING::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:commonmodule.ControlING)
  GOOGLE_DCHECK_NE(&from, this);
  const ControlING* source =
      ::google::protobuf::DynamicCastToGenerated<ControlING>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:commonmodule.ControlING)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:commonmodule.ControlING)
    MergeFrom(*source);
  }
}

void ControlING::MergeFrom(const ControlING& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:commonmodule.ControlING)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_units()) {
    mutable_units()->::commonmodule::Unit::MergeFrom(from.units());
  }
  if (from.setval() != 0) {
    set_setval(from.setval());
  }
}

void ControlING::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:commonmodule.ControlING)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ControlING::CopyFrom(const ControlING& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:commonmodule.ControlING)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ControlING::IsInitialized() const {
  return true;
}

void ControlING::Swap(ControlING* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ControlING::InternalSwap(ControlING* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(units_, other->units_);
  swap(setval_, other->setval_);
}

::google::protobuf::Metadata ControlING::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return ::file_level_metadata_commonmodule_2fcommonmodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ControlISC::InitAsDefaultInstance() {
}
class ControlISC::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ControlISC::kCtlValFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ControlISC::ControlISC()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:commonmodule.ControlISC)
}
ControlISC::ControlISC(const ControlISC& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ctlval_ = from.ctlval_;
  // @@protoc_insertion_point(copy_constructor:commonmodule.ControlISC)
}

void ControlISC::SharedCtor() {
  ctlval_ = 0;
}

ControlISC::~ControlISC() {
  // @@protoc_insertion_point(destructor:commonmodule.ControlISC)
  SharedDtor();
}

void ControlISC::SharedDtor() {
}

void ControlISC::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ControlISC& ControlISC::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ControlISC_commonmodule_2fcommonmodule_2eproto.base);
  return *internal_default_instance();
}


void ControlISC::Clear() {
// @@protoc_insertion_point(message_clear_start:commonmodule.ControlISC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ctlval_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ControlISC::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ControlISC*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 ctlVal = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_ctlval(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ControlISC::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:commonmodule.ControlISC)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 ctlVal = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ctlval_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:commonmodule.ControlISC)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:commonmodule.ControlISC)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ControlISC::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:commonmodule.ControlISC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 ctlVal = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->ctlval() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ctlval(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:commonmodule.ControlISC)
}

::google::protobuf::uint8* ControlISC::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:commonmodule.ControlISC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 ctlVal = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->ctlval() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ctlval(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:commonmodule.ControlISC)
  return target;
}

size_t ControlISC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:commonmodule.ControlISC)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 ctlVal = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->ctlval() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ctlval());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ControlISC::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:commonmodule.ControlISC)
  GOOGLE_DCHECK_NE(&from, this);
  const ControlISC* source =
      ::google::protobuf::DynamicCastToGenerated<ControlISC>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:commonmodule.ControlISC)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:commonmodule.ControlISC)
    MergeFrom(*source);
  }
}

void ControlISC::MergeFrom(const ControlISC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:commonmodule.ControlISC)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ctlval() != 0) {
    set_ctlval(from.ctlval());
  }
}

void ControlISC::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:commonmodule.ControlISC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ControlISC::CopyFrom(const ControlISC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:commonmodule.ControlISC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ControlISC::IsInitialized() const {
  return true;
}

void ControlISC::Swap(ControlISC* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ControlISC::InternalSwap(ControlISC* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(ctlval_, other->ctlval_);
}

::google::protobuf::Metadata ControlISC::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return ::file_level_metadata_commonmodule_2fcommonmodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MessageInfo::InitAsDefaultInstance() {
  ::commonmodule::_MessageInfo_default_instance_._instance.get_mutable()->identifiedobject_ = const_cast< ::commonmodule::IdentifiedObject*>(
      ::commonmodule::IdentifiedObject::internal_default_instance());
  ::commonmodule::_MessageInfo_default_instance_._instance.get_mutable()->messagetimestamp_ = const_cast< ::commonmodule::Timestamp*>(
      ::commonmodule::Timestamp::internal_default_instance());
}
class MessageInfo::HasBitSetters {
 public:
  static const ::commonmodule::IdentifiedObject& identifiedobject(const MessageInfo* msg);
  static const ::commonmodule::Timestamp& messagetimestamp(const MessageInfo* msg);
};

const ::commonmodule::IdentifiedObject&
MessageInfo::HasBitSetters::identifiedobject(const MessageInfo* msg) {
  return *msg->identifiedobject_;
}
const ::commonmodule::Timestamp&
MessageInfo::HasBitSetters::messagetimestamp(const MessageInfo* msg) {
  return *msg->messagetimestamp_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MessageInfo::kIdentifiedObjectFieldNumber;
const int MessageInfo::kMessageTimeStampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageInfo::MessageInfo()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:commonmodule.MessageInfo)
}
MessageInfo::MessageInfo(const MessageInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_identifiedobject()) {
    identifiedobject_ = new ::commonmodule::IdentifiedObject(*from.identifiedobject_);
  } else {
    identifiedobject_ = nullptr;
  }
  if (from.has_messagetimestamp()) {
    messagetimestamp_ = new ::commonmodule::Timestamp(*from.messagetimestamp_);
  } else {
    messagetimestamp_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:commonmodule.MessageInfo)
}

void MessageInfo::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MessageInfo_commonmodule_2fcommonmodule_2eproto.base);
  ::memset(&identifiedobject_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&messagetimestamp_) -
      reinterpret_cast<char*>(&identifiedobject_)) + sizeof(messagetimestamp_));
}

MessageInfo::~MessageInfo() {
  // @@protoc_insertion_point(destructor:commonmodule.MessageInfo)
  SharedDtor();
}

void MessageInfo::SharedDtor() {
  if (this != internal_default_instance()) delete identifiedobject_;
  if (this != internal_default_instance()) delete messagetimestamp_;
}

void MessageInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MessageInfo& MessageInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MessageInfo_commonmodule_2fcommonmodule_2eproto.base);
  return *internal_default_instance();
}


void MessageInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:commonmodule.MessageInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && identifiedobject_ != nullptr) {
    delete identifiedobject_;
  }
  identifiedobject_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && messagetimestamp_ != nullptr) {
    delete messagetimestamp_;
  }
  messagetimestamp_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MessageInfo::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MessageInfo*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .commonmodule.IdentifiedObject identifiedObject = 1 [(.uml.option_parent_message) = true];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::IdentifiedObject::_InternalParse;
        object = msg->mutable_identifiedobject();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .commonmodule.Timestamp messageTimeStamp = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::Timestamp::_InternalParse;
        object = msg->mutable_messagetimestamp();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MessageInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:commonmodule.MessageInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .commonmodule.IdentifiedObject identifiedObject = 1 [(.uml.option_parent_message) = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_identifiedobject()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.Timestamp messageTimeStamp = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_messagetimestamp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:commonmodule.MessageInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:commonmodule.MessageInfo)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MessageInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:commonmodule.MessageInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.IdentifiedObject identifiedObject = 1 [(.uml.option_parent_message) = true];
  if (this->has_identifiedobject()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::identifiedobject(this), output);
  }

  // .commonmodule.Timestamp messageTimeStamp = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_messagetimestamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::messagetimestamp(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:commonmodule.MessageInfo)
}

::google::protobuf::uint8* MessageInfo::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:commonmodule.MessageInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.IdentifiedObject identifiedObject = 1 [(.uml.option_parent_message) = true];
  if (this->has_identifiedobject()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::identifiedobject(this), target);
  }

  // .commonmodule.Timestamp messageTimeStamp = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_messagetimestamp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::messagetimestamp(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:commonmodule.MessageInfo)
  return target;
}

size_t MessageInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:commonmodule.MessageInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .commonmodule.IdentifiedObject identifiedObject = 1 [(.uml.option_parent_message) = true];
  if (this->has_identifiedobject()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *identifiedobject_);
  }

  // .commonmodule.Timestamp messageTimeStamp = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_messagetimestamp()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *messagetimestamp_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MessageInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:commonmodule.MessageInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const MessageInfo* source =
      ::google::protobuf::DynamicCastToGenerated<MessageInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:commonmodule.MessageInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:commonmodule.MessageInfo)
    MergeFrom(*source);
  }
}

void MessageInfo::MergeFrom(const MessageInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:commonmodule.MessageInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_identifiedobject()) {
    mutable_identifiedobject()->::commonmodule::IdentifiedObject::MergeFrom(from.identifiedobject());
  }
  if (from.has_messagetimestamp()) {
    mutable_messagetimestamp()->::commonmodule::Timestamp::MergeFrom(from.messagetimestamp());
  }
}

void MessageInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:commonmodule.MessageInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageInfo::CopyFrom(const MessageInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:commonmodule.MessageInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageInfo::IsInitialized() const {
  return true;
}

void MessageInfo::Swap(MessageInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageInfo::InternalSwap(MessageInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(identifiedobject_, other->identifiedobject_);
  swap(messagetimestamp_, other->messagetimestamp_);
}

::google::protobuf::Metadata MessageInfo::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return ::file_level_metadata_commonmodule_2fcommonmodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ControlMessageInfo::InitAsDefaultInstance() {
  ::commonmodule::_ControlMessageInfo_default_instance_._instance.get_mutable()->messageinfo_ = const_cast< ::commonmodule::MessageInfo*>(
      ::commonmodule::MessageInfo::internal_default_instance());
}
class ControlMessageInfo::HasBitSetters {
 public:
  static const ::commonmodule::MessageInfo& messageinfo(const ControlMessageInfo* msg);
};

const ::commonmodule::MessageInfo&
ControlMessageInfo::HasBitSetters::messageinfo(const ControlMessageInfo* msg) {
  return *msg->messageinfo_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ControlMessageInfo::kMessageInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ControlMessageInfo::ControlMessageInfo()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:commonmodule.ControlMessageInfo)
}
ControlMessageInfo::ControlMessageInfo(const ControlMessageInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_messageinfo()) {
    messageinfo_ = new ::commonmodule::MessageInfo(*from.messageinfo_);
  } else {
    messageinfo_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:commonmodule.ControlMessageInfo)
}

void ControlMessageInfo::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ControlMessageInfo_commonmodule_2fcommonmodule_2eproto.base);
  messageinfo_ = nullptr;
}

ControlMessageInfo::~ControlMessageInfo() {
  // @@protoc_insertion_point(destructor:commonmodule.ControlMessageInfo)
  SharedDtor();
}

void ControlMessageInfo::SharedDtor() {
  if (this != internal_default_instance()) delete messageinfo_;
}

void ControlMessageInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ControlMessageInfo& ControlMessageInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ControlMessageInfo_commonmodule_2fcommonmodule_2eproto.base);
  return *internal_default_instance();
}


void ControlMessageInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:commonmodule.ControlMessageInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && messageinfo_ != nullptr) {
    delete messageinfo_;
  }
  messageinfo_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ControlMessageInfo::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ControlMessageInfo*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .commonmodule.MessageInfo messageInfo = 1 [(.uml.option_parent_message) = true];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::MessageInfo::_InternalParse;
        object = msg->mutable_messageinfo();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ControlMessageInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:commonmodule.ControlMessageInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .commonmodule.MessageInfo messageInfo = 1 [(.uml.option_parent_message) = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_messageinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:commonmodule.ControlMessageInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:commonmodule.ControlMessageInfo)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ControlMessageInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:commonmodule.ControlMessageInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.MessageInfo messageInfo = 1 [(.uml.option_parent_message) = true];
  if (this->has_messageinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::messageinfo(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:commonmodule.ControlMessageInfo)
}

::google::protobuf::uint8* ControlMessageInfo::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:commonmodule.ControlMessageInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.MessageInfo messageInfo = 1 [(.uml.option_parent_message) = true];
  if (this->has_messageinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::messageinfo(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:commonmodule.ControlMessageInfo)
  return target;
}

size_t ControlMessageInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:commonmodule.ControlMessageInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .commonmodule.MessageInfo messageInfo = 1 [(.uml.option_parent_message) = true];
  if (this->has_messageinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *messageinfo_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ControlMessageInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:commonmodule.ControlMessageInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const ControlMessageInfo* source =
      ::google::protobuf::DynamicCastToGenerated<ControlMessageInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:commonmodule.ControlMessageInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:commonmodule.ControlMessageInfo)
    MergeFrom(*source);
  }
}

void ControlMessageInfo::MergeFrom(const ControlMessageInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:commonmodule.ControlMessageInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_messageinfo()) {
    mutable_messageinfo()->::commonmodule::MessageInfo::MergeFrom(from.messageinfo());
  }
}

void ControlMessageInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:commonmodule.ControlMessageInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ControlMessageInfo::CopyFrom(const ControlMessageInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:commonmodule.ControlMessageInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ControlMessageInfo::IsInitialized() const {
  return true;
}

void ControlMessageInfo::Swap(ControlMessageInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ControlMessageInfo::InternalSwap(ControlMessageInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(messageinfo_, other->messageinfo_);
}

::google::protobuf::Metadata ControlMessageInfo::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return ::file_level_metadata_commonmodule_2fcommonmodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ControlSPC::InitAsDefaultInstance() {
}
class ControlSPC::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ControlSPC::kCtlValFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ControlSPC::ControlSPC()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:commonmodule.ControlSPC)
}
ControlSPC::ControlSPC(const ControlSPC& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ctlval_ = from.ctlval_;
  // @@protoc_insertion_point(copy_constructor:commonmodule.ControlSPC)
}

void ControlSPC::SharedCtor() {
  ctlval_ = false;
}

ControlSPC::~ControlSPC() {
  // @@protoc_insertion_point(destructor:commonmodule.ControlSPC)
  SharedDtor();
}

void ControlSPC::SharedDtor() {
}

void ControlSPC::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ControlSPC& ControlSPC::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ControlSPC_commonmodule_2fcommonmodule_2eproto.base);
  return *internal_default_instance();
}


void ControlSPC::Clear() {
// @@protoc_insertion_point(message_clear_start:commonmodule.ControlSPC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ctlval_ = false;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ControlSPC::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ControlSPC*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bool ctlVal = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_ctlval(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ControlSPC::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:commonmodule.ControlSPC)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool ctlVal = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ctlval_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:commonmodule.ControlSPC)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:commonmodule.ControlSPC)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ControlSPC::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:commonmodule.ControlSPC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ctlVal = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->ctlval() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->ctlval(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:commonmodule.ControlSPC)
}

::google::protobuf::uint8* ControlSPC::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:commonmodule.ControlSPC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ctlVal = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->ctlval() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->ctlval(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:commonmodule.ControlSPC)
  return target;
}

size_t ControlSPC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:commonmodule.ControlSPC)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool ctlVal = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->ctlval() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ControlSPC::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:commonmodule.ControlSPC)
  GOOGLE_DCHECK_NE(&from, this);
  const ControlSPC* source =
      ::google::protobuf::DynamicCastToGenerated<ControlSPC>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:commonmodule.ControlSPC)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:commonmodule.ControlSPC)
    MergeFrom(*source);
  }
}

void ControlSPC::MergeFrom(const ControlSPC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:commonmodule.ControlSPC)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ctlval() != 0) {
    set_ctlval(from.ctlval());
  }
}

void ControlSPC::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:commonmodule.ControlSPC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ControlSPC::CopyFrom(const ControlSPC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:commonmodule.ControlSPC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ControlSPC::IsInitialized() const {
  return true;
}

void ControlSPC::Swap(ControlSPC* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ControlSPC::InternalSwap(ControlSPC* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(ctlval_, other->ctlval_);
}

::google::protobuf::Metadata ControlSPC::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return ::file_level_metadata_commonmodule_2fcommonmodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ControlValue::InitAsDefaultInstance() {
  ::commonmodule::_ControlValue_default_instance_._instance.get_mutable()->identifiedobject_ = const_cast< ::commonmodule::IdentifiedObject*>(
      ::commonmodule::IdentifiedObject::internal_default_instance());
  ::commonmodule::_ControlValue_default_instance_._instance.get_mutable()->modblk_ = const_cast< ::google::protobuf::BoolValue*>(
      ::google::protobuf::BoolValue::internal_default_instance());
}
class ControlValue::HasBitSetters {
 public:
  static const ::commonmodule::IdentifiedObject& identifiedobject(const ControlValue* msg);
  static const ::google::protobuf::BoolValue& modblk(const ControlValue* msg);
};

const ::commonmodule::IdentifiedObject&
ControlValue::HasBitSetters::identifiedobject(const ControlValue* msg) {
  return *msg->identifiedobject_;
}
const ::google::protobuf::BoolValue&
ControlValue::HasBitSetters::modblk(const ControlValue* msg) {
  return *msg->modblk_;
}
void ControlValue::clear_modblk() {
  if (GetArenaNoVirtual() == nullptr && modblk_ != nullptr) {
    delete modblk_;
  }
  modblk_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ControlValue::kIdentifiedObjectFieldNumber;
const int ControlValue::kModBlkFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ControlValue::ControlValue()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:commonmodule.ControlValue)
}
ControlValue::ControlValue(const ControlValue& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_identifiedobject()) {
    identifiedobject_ = new ::commonmodule::IdentifiedObject(*from.identifiedobject_);
  } else {
    identifiedobject_ = nullptr;
  }
  if (from.has_modblk()) {
    modblk_ = new ::google::protobuf::BoolValue(*from.modblk_);
  } else {
    modblk_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:commonmodule.ControlValue)
}

void ControlValue::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ControlValue_commonmodule_2fcommonmodule_2eproto.base);
  ::memset(&identifiedobject_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&modblk_) -
      reinterpret_cast<char*>(&identifiedobject_)) + sizeof(modblk_));
}

ControlValue::~ControlValue() {
  // @@protoc_insertion_point(destructor:commonmodule.ControlValue)
  SharedDtor();
}

void ControlValue::SharedDtor() {
  if (this != internal_default_instance()) delete identifiedobject_;
  if (this != internal_default_instance()) delete modblk_;
}

void ControlValue::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ControlValue& ControlValue::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ControlValue_commonmodule_2fcommonmodule_2eproto.base);
  return *internal_default_instance();
}


void ControlValue::Clear() {
// @@protoc_insertion_point(message_clear_start:commonmodule.ControlValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && identifiedobject_ != nullptr) {
    delete identifiedobject_;
  }
  identifiedobject_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && modblk_ != nullptr) {
    delete modblk_;
  }
  modblk_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ControlValue::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ControlValue*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .commonmodule.IdentifiedObject identifiedObject = 1 [(.uml.option_parent_message) = true];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::IdentifiedObject::_InternalParse;
        object = msg->mutable_identifiedobject();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.BoolValue modBlk = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::BoolValue::_InternalParse;
        object = msg->mutable_modblk();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ControlValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:commonmodule.ControlValue)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .commonmodule.IdentifiedObject identifiedObject = 1 [(.uml.option_parent_message) = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_identifiedobject()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.BoolValue modBlk = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_modblk()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:commonmodule.ControlValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:commonmodule.ControlValue)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ControlValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:commonmodule.ControlValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.IdentifiedObject identifiedObject = 1 [(.uml.option_parent_message) = true];
  if (this->has_identifiedobject()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::identifiedobject(this), output);
  }

  // .google.protobuf.BoolValue modBlk = 2;
  if (this->has_modblk()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::modblk(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:commonmodule.ControlValue)
}

::google::protobuf::uint8* ControlValue::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:commonmodule.ControlValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.IdentifiedObject identifiedObject = 1 [(.uml.option_parent_message) = true];
  if (this->has_identifiedobject()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::identifiedobject(this), target);
  }

  // .google.protobuf.BoolValue modBlk = 2;
  if (this->has_modblk()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::modblk(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:commonmodule.ControlValue)
  return target;
}

size_t ControlValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:commonmodule.ControlValue)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .commonmodule.IdentifiedObject identifiedObject = 1 [(.uml.option_parent_message) = true];
  if (this->has_identifiedobject()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *identifiedobject_);
  }

  // .google.protobuf.BoolValue modBlk = 2;
  if (this->has_modblk()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *modblk_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ControlValue::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:commonmodule.ControlValue)
  GOOGLE_DCHECK_NE(&from, this);
  const ControlValue* source =
      ::google::protobuf::DynamicCastToGenerated<ControlValue>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:commonmodule.ControlValue)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:commonmodule.ControlValue)
    MergeFrom(*source);
  }
}

void ControlValue::MergeFrom(const ControlValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:commonmodule.ControlValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_identifiedobject()) {
    mutable_identifiedobject()->::commonmodule::IdentifiedObject::MergeFrom(from.identifiedobject());
  }
  if (from.has_modblk()) {
    mutable_modblk()->::google::protobuf::BoolValue::MergeFrom(from.modblk());
  }
}

void ControlValue::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:commonmodule.ControlValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ControlValue::CopyFrom(const ControlValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:commonmodule.ControlValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ControlValue::IsInitialized() const {
  return true;
}

void ControlValue::Swap(ControlValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ControlValue::InternalSwap(ControlValue* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(identifiedobject_, other->identifiedobject_);
  swap(modblk_, other->modblk_);
}

::google::protobuf::Metadata ControlValue::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return ::file_level_metadata_commonmodule_2fcommonmodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void DateTimeInterval::InitAsDefaultInstance() {
  ::commonmodule::_DateTimeInterval_default_instance_._instance.get_mutable()->end_ = const_cast< ::google::protobuf::Int64Value*>(
      ::google::protobuf::Int64Value::internal_default_instance());
  ::commonmodule::_DateTimeInterval_default_instance_._instance.get_mutable()->start_ = const_cast< ::google::protobuf::Int64Value*>(
      ::google::protobuf::Int64Value::internal_default_instance());
}
class DateTimeInterval::HasBitSetters {
 public:
  static const ::google::protobuf::Int64Value& end(const DateTimeInterval* msg);
  static const ::google::protobuf::Int64Value& start(const DateTimeInterval* msg);
};

const ::google::protobuf::Int64Value&
DateTimeInterval::HasBitSetters::end(const DateTimeInterval* msg) {
  return *msg->end_;
}
const ::google::protobuf::Int64Value&
DateTimeInterval::HasBitSetters::start(const DateTimeInterval* msg) {
  return *msg->start_;
}
void DateTimeInterval::clear_end() {
  if (GetArenaNoVirtual() == nullptr && end_ != nullptr) {
    delete end_;
  }
  end_ = nullptr;
}
void DateTimeInterval::clear_start() {
  if (GetArenaNoVirtual() == nullptr && start_ != nullptr) {
    delete start_;
  }
  start_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DateTimeInterval::kEndFieldNumber;
const int DateTimeInterval::kStartFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DateTimeInterval::DateTimeInterval()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:commonmodule.DateTimeInterval)
}
DateTimeInterval::DateTimeInterval(const DateTimeInterval& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_end()) {
    end_ = new ::google::protobuf::Int64Value(*from.end_);
  } else {
    end_ = nullptr;
  }
  if (from.has_start()) {
    start_ = new ::google::protobuf::Int64Value(*from.start_);
  } else {
    start_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:commonmodule.DateTimeInterval)
}

void DateTimeInterval::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_DateTimeInterval_commonmodule_2fcommonmodule_2eproto.base);
  ::memset(&end_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&start_) -
      reinterpret_cast<char*>(&end_)) + sizeof(start_));
}

DateTimeInterval::~DateTimeInterval() {
  // @@protoc_insertion_point(destructor:commonmodule.DateTimeInterval)
  SharedDtor();
}

void DateTimeInterval::SharedDtor() {
  if (this != internal_default_instance()) delete end_;
  if (this != internal_default_instance()) delete start_;
}

void DateTimeInterval::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DateTimeInterval& DateTimeInterval::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_DateTimeInterval_commonmodule_2fcommonmodule_2eproto.base);
  return *internal_default_instance();
}


void DateTimeInterval::Clear() {
// @@protoc_insertion_point(message_clear_start:commonmodule.DateTimeInterval)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && end_ != nullptr) {
    delete end_;
  }
  end_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && start_ != nullptr) {
    delete start_;
  }
  start_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DateTimeInterval::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<DateTimeInterval*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .google.protobuf.Int64Value end = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::Int64Value::_InternalParse;
        object = msg->mutable_end();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.Int64Value start = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::Int64Value::_InternalParse;
        object = msg->mutable_start();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DateTimeInterval::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:commonmodule.DateTimeInterval)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.Int64Value end = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_end()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Int64Value start = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_start()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:commonmodule.DateTimeInterval)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:commonmodule.DateTimeInterval)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DateTimeInterval::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:commonmodule.DateTimeInterval)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Int64Value end = 1;
  if (this->has_end()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::end(this), output);
  }

  // .google.protobuf.Int64Value start = 2;
  if (this->has_start()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::start(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:commonmodule.DateTimeInterval)
}

::google::protobuf::uint8* DateTimeInterval::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:commonmodule.DateTimeInterval)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Int64Value end = 1;
  if (this->has_end()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::end(this), target);
  }

  // .google.protobuf.Int64Value start = 2;
  if (this->has_start()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::start(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:commonmodule.DateTimeInterval)
  return target;
}

size_t DateTimeInterval::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:commonmodule.DateTimeInterval)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.Int64Value end = 1;
  if (this->has_end()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *end_);
  }

  // .google.protobuf.Int64Value start = 2;
  if (this->has_start()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *start_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DateTimeInterval::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:commonmodule.DateTimeInterval)
  GOOGLE_DCHECK_NE(&from, this);
  const DateTimeInterval* source =
      ::google::protobuf::DynamicCastToGenerated<DateTimeInterval>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:commonmodule.DateTimeInterval)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:commonmodule.DateTimeInterval)
    MergeFrom(*source);
  }
}

void DateTimeInterval::MergeFrom(const DateTimeInterval& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:commonmodule.DateTimeInterval)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_end()) {
    mutable_end()->::google::protobuf::Int64Value::MergeFrom(from.end());
  }
  if (from.has_start()) {
    mutable_start()->::google::protobuf::Int64Value::MergeFrom(from.start());
  }
}

void DateTimeInterval::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:commonmodule.DateTimeInterval)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DateTimeInterval::CopyFrom(const DateTimeInterval& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:commonmodule.DateTimeInterval)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DateTimeInterval::IsInitialized() const {
  return true;
}

void DateTimeInterval::Swap(DateTimeInterval* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DateTimeInterval::InternalSwap(DateTimeInterval* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(end_, other->end_);
  swap(start_, other->start_);
}

::google::protobuf::Metadata DateTimeInterval::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return ::file_level_metadata_commonmodule_2fcommonmodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void DEL::InitAsDefaultInstance() {
  ::commonmodule::_DEL_default_instance_._instance.get_mutable()->phsab_ = const_cast< ::commonmodule::CMV*>(
      ::commonmodule::CMV::internal_default_instance());
  ::commonmodule::_DEL_default_instance_._instance.get_mutable()->phsbc_ = const_cast< ::commonmodule::CMV*>(
      ::commonmodule::CMV::internal_default_instance());
  ::commonmodule::_DEL_default_instance_._instance.get_mutable()->phsca_ = const_cast< ::commonmodule::CMV*>(
      ::commonmodule::CMV::internal_default_instance());
}
class DEL::HasBitSetters {
 public:
  static const ::commonmodule::CMV& phsab(const DEL* msg);
  static const ::commonmodule::CMV& phsbc(const DEL* msg);
  static const ::commonmodule::CMV& phsca(const DEL* msg);
};

const ::commonmodule::CMV&
DEL::HasBitSetters::phsab(const DEL* msg) {
  return *msg->phsab_;
}
const ::commonmodule::CMV&
DEL::HasBitSetters::phsbc(const DEL* msg) {
  return *msg->phsbc_;
}
const ::commonmodule::CMV&
DEL::HasBitSetters::phsca(const DEL* msg) {
  return *msg->phsca_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DEL::kPhsABFieldNumber;
const int DEL::kPhsBCFieldNumber;
const int DEL::kPhsCAFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DEL::DEL()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:commonmodule.DEL)
}
DEL::DEL(const DEL& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_phsab()) {
    phsab_ = new ::commonmodule::CMV(*from.phsab_);
  } else {
    phsab_ = nullptr;
  }
  if (from.has_phsbc()) {
    phsbc_ = new ::commonmodule::CMV(*from.phsbc_);
  } else {
    phsbc_ = nullptr;
  }
  if (from.has_phsca()) {
    phsca_ = new ::commonmodule::CMV(*from.phsca_);
  } else {
    phsca_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:commonmodule.DEL)
}

void DEL::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_DEL_commonmodule_2fcommonmodule_2eproto.base);
  ::memset(&phsab_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&phsca_) -
      reinterpret_cast<char*>(&phsab_)) + sizeof(phsca_));
}

DEL::~DEL() {
  // @@protoc_insertion_point(destructor:commonmodule.DEL)
  SharedDtor();
}

void DEL::SharedDtor() {
  if (this != internal_default_instance()) delete phsab_;
  if (this != internal_default_instance()) delete phsbc_;
  if (this != internal_default_instance()) delete phsca_;
}

void DEL::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DEL& DEL::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_DEL_commonmodule_2fcommonmodule_2eproto.base);
  return *internal_default_instance();
}


void DEL::Clear() {
// @@protoc_insertion_point(message_clear_start:commonmodule.DEL)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && phsab_ != nullptr) {
    delete phsab_;
  }
  phsab_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && phsbc_ != nullptr) {
    delete phsbc_;
  }
  phsbc_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && phsca_ != nullptr) {
    delete phsca_;
  }
  phsca_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DEL::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<DEL*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .commonmodule.CMV phsAB = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::CMV::_InternalParse;
        object = msg->mutable_phsab();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .commonmodule.CMV phsBC = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::CMV::_InternalParse;
        object = msg->mutable_phsbc();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .commonmodule.CMV phsCA = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::CMV::_InternalParse;
        object = msg->mutable_phsca();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DEL::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:commonmodule.DEL)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .commonmodule.CMV phsAB = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_phsab()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.CMV phsBC = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_phsbc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.CMV phsCA = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_phsca()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:commonmodule.DEL)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:commonmodule.DEL)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DEL::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:commonmodule.DEL)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.CMV phsAB = 1;
  if (this->has_phsab()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::phsab(this), output);
  }

  // .commonmodule.CMV phsBC = 2;
  if (this->has_phsbc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::phsbc(this), output);
  }

  // .commonmodule.CMV phsCA = 3;
  if (this->has_phsca()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::phsca(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:commonmodule.DEL)
}

::google::protobuf::uint8* DEL::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:commonmodule.DEL)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.CMV phsAB = 1;
  if (this->has_phsab()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::phsab(this), target);
  }

  // .commonmodule.CMV phsBC = 2;
  if (this->has_phsbc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::phsbc(this), target);
  }

  // .commonmodule.CMV phsCA = 3;
  if (this->has_phsca()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::phsca(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:commonmodule.DEL)
  return target;
}

size_t DEL::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:commonmodule.DEL)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .commonmodule.CMV phsAB = 1;
  if (this->has_phsab()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *phsab_);
  }

  // .commonmodule.CMV phsBC = 2;
  if (this->has_phsbc()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *phsbc_);
  }

  // .commonmodule.CMV phsCA = 3;
  if (this->has_phsca()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *phsca_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DEL::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:commonmodule.DEL)
  GOOGLE_DCHECK_NE(&from, this);
  const DEL* source =
      ::google::protobuf::DynamicCastToGenerated<DEL>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:commonmodule.DEL)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:commonmodule.DEL)
    MergeFrom(*source);
  }
}

void DEL::MergeFrom(const DEL& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:commonmodule.DEL)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_phsab()) {
    mutable_phsab()->::commonmodule::CMV::MergeFrom(from.phsab());
  }
  if (from.has_phsbc()) {
    mutable_phsbc()->::commonmodule::CMV::MergeFrom(from.phsbc());
  }
  if (from.has_phsca()) {
    mutable_phsca()->::commonmodule::CMV::MergeFrom(from.phsca());
  }
}

void DEL::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:commonmodule.DEL)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DEL::CopyFrom(const DEL& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:commonmodule.DEL)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DEL::IsInitialized() const {
  return true;
}

void DEL::Swap(DEL* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DEL::InternalSwap(DEL* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(phsab_, other->phsab_);
  swap(phsbc_, other->phsbc_);
  swap(phsca_, other->phsca_);
}

::google::protobuf::Metadata DEL::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return ::file_level_metadata_commonmodule_2fcommonmodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void EnergyConsumer::InitAsDefaultInstance() {
  ::commonmodule::_EnergyConsumer_default_instance_._instance.get_mutable()->conductingequipment_ = const_cast< ::commonmodule::ConductingEquipment*>(
      ::commonmodule::ConductingEquipment::internal_default_instance());
  ::commonmodule::_EnergyConsumer_default_instance_._instance.get_mutable()->operatinglimit_ = const_cast< ::google::protobuf::StringValue*>(
      ::google::protobuf::StringValue::internal_default_instance());
}
class EnergyConsumer::HasBitSetters {
 public:
  static const ::commonmodule::ConductingEquipment& conductingequipment(const EnergyConsumer* msg);
  static const ::google::protobuf::StringValue& operatinglimit(const EnergyConsumer* msg);
};

const ::commonmodule::ConductingEquipment&
EnergyConsumer::HasBitSetters::conductingequipment(const EnergyConsumer* msg) {
  return *msg->conductingequipment_;
}
const ::google::protobuf::StringValue&
EnergyConsumer::HasBitSetters::operatinglimit(const EnergyConsumer* msg) {
  return *msg->operatinglimit_;
}
void EnergyConsumer::clear_operatinglimit() {
  if (GetArenaNoVirtual() == nullptr && operatinglimit_ != nullptr) {
    delete operatinglimit_;
  }
  operatinglimit_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnergyConsumer::kConductingEquipmentFieldNumber;
const int EnergyConsumer::kOperatingLimitFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnergyConsumer::EnergyConsumer()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:commonmodule.EnergyConsumer)
}
EnergyConsumer::EnergyConsumer(const EnergyConsumer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_conductingequipment()) {
    conductingequipment_ = new ::commonmodule::ConductingEquipment(*from.conductingequipment_);
  } else {
    conductingequipment_ = nullptr;
  }
  if (from.has_operatinglimit()) {
    operatinglimit_ = new ::google::protobuf::StringValue(*from.operatinglimit_);
  } else {
    operatinglimit_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:commonmodule.EnergyConsumer)
}

void EnergyConsumer::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_EnergyConsumer_commonmodule_2fcommonmodule_2eproto.base);
  ::memset(&conductingequipment_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&operatinglimit_) -
      reinterpret_cast<char*>(&conductingequipment_)) + sizeof(operatinglimit_));
}

EnergyConsumer::~EnergyConsumer() {
  // @@protoc_insertion_point(destructor:commonmodule.EnergyConsumer)
  SharedDtor();
}

void EnergyConsumer::SharedDtor() {
  if (this != internal_default_instance()) delete conductingequipment_;
  if (this != internal_default_instance()) delete operatinglimit_;
}

void EnergyConsumer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EnergyConsumer& EnergyConsumer::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_EnergyConsumer_commonmodule_2fcommonmodule_2eproto.base);
  return *internal_default_instance();
}


void EnergyConsumer::Clear() {
// @@protoc_insertion_point(message_clear_start:commonmodule.EnergyConsumer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && conductingequipment_ != nullptr) {
    delete conductingequipment_;
  }
  conductingequipment_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && operatinglimit_ != nullptr) {
    delete operatinglimit_;
  }
  operatinglimit_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* EnergyConsumer::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<EnergyConsumer*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .commonmodule.ConductingEquipment conductingEquipment = 1 [(.uml.option_parent_message) = true];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::ConductingEquipment::_InternalParse;
        object = msg->mutable_conductingequipment();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.StringValue operatingLimit = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::StringValue::_InternalParse;
        object = msg->mutable_operatinglimit();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool EnergyConsumer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:commonmodule.EnergyConsumer)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .commonmodule.ConductingEquipment conductingEquipment = 1 [(.uml.option_parent_message) = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_conductingequipment()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.StringValue operatingLimit = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_operatinglimit()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:commonmodule.EnergyConsumer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:commonmodule.EnergyConsumer)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void EnergyConsumer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:commonmodule.EnergyConsumer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.ConductingEquipment conductingEquipment = 1 [(.uml.option_parent_message) = true];
  if (this->has_conductingequipment()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::conductingequipment(this), output);
  }

  // .google.protobuf.StringValue operatingLimit = 2;
  if (this->has_operatinglimit()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::operatinglimit(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:commonmodule.EnergyConsumer)
}

::google::protobuf::uint8* EnergyConsumer::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:commonmodule.EnergyConsumer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.ConductingEquipment conductingEquipment = 1 [(.uml.option_parent_message) = true];
  if (this->has_conductingequipment()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::conductingequipment(this), target);
  }

  // .google.protobuf.StringValue operatingLimit = 2;
  if (this->has_operatinglimit()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::operatinglimit(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:commonmodule.EnergyConsumer)
  return target;
}

size_t EnergyConsumer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:commonmodule.EnergyConsumer)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .commonmodule.ConductingEquipment conductingEquipment = 1 [(.uml.option_parent_message) = true];
  if (this->has_conductingequipment()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *conductingequipment_);
  }

  // .google.protobuf.StringValue operatingLimit = 2;
  if (this->has_operatinglimit()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *operatinglimit_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EnergyConsumer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:commonmodule.EnergyConsumer)
  GOOGLE_DCHECK_NE(&from, this);
  const EnergyConsumer* source =
      ::google::protobuf::DynamicCastToGenerated<EnergyConsumer>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:commonmodule.EnergyConsumer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:commonmodule.EnergyConsumer)
    MergeFrom(*source);
  }
}

void EnergyConsumer::MergeFrom(const EnergyConsumer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:commonmodule.EnergyConsumer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_conductingequipment()) {
    mutable_conductingequipment()->::commonmodule::ConductingEquipment::MergeFrom(from.conductingequipment());
  }
  if (from.has_operatinglimit()) {
    mutable_operatinglimit()->::google::protobuf::StringValue::MergeFrom(from.operatinglimit());
  }
}

void EnergyConsumer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:commonmodule.EnergyConsumer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EnergyConsumer::CopyFrom(const EnergyConsumer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:commonmodule.EnergyConsumer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnergyConsumer::IsInitialized() const {
  return true;
}

void EnergyConsumer::Swap(EnergyConsumer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnergyConsumer::InternalSwap(EnergyConsumer* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(conductingequipment_, other->conductingequipment_);
  swap(operatinglimit_, other->operatinglimit_);
}

::google::protobuf::Metadata EnergyConsumer::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return ::file_level_metadata_commonmodule_2fcommonmodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Optional_CalcMethodKind::InitAsDefaultInstance() {
}
class Optional_CalcMethodKind::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Optional_CalcMethodKind::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Optional_CalcMethodKind::Optional_CalcMethodKind()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:commonmodule.Optional_CalcMethodKind)
}
Optional_CalcMethodKind::Optional_CalcMethodKind(const Optional_CalcMethodKind& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:commonmodule.Optional_CalcMethodKind)
}

void Optional_CalcMethodKind::SharedCtor() {
  value_ = 0;
}

Optional_CalcMethodKind::~Optional_CalcMethodKind() {
  // @@protoc_insertion_point(destructor:commonmodule.Optional_CalcMethodKind)
  SharedDtor();
}

void Optional_CalcMethodKind::SharedDtor() {
}

void Optional_CalcMethodKind::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Optional_CalcMethodKind& Optional_CalcMethodKind::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Optional_CalcMethodKind_commonmodule_2fcommonmodule_2eproto.base);
  return *internal_default_instance();
}


void Optional_CalcMethodKind::Clear() {
// @@protoc_insertion_point(message_clear_start:commonmodule.Optional_CalcMethodKind)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Optional_CalcMethodKind::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Optional_CalcMethodKind*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .commonmodule.CalcMethodKind value = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_value(static_cast<::commonmodule::CalcMethodKind>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Optional_CalcMethodKind::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:commonmodule.Optional_CalcMethodKind)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .commonmodule.CalcMethodKind value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_value(static_cast< ::commonmodule::CalcMethodKind >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:commonmodule.Optional_CalcMethodKind)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:commonmodule.Optional_CalcMethodKind)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Optional_CalcMethodKind::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:commonmodule.Optional_CalcMethodKind)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.CalcMethodKind value = 1;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:commonmodule.Optional_CalcMethodKind)
}

::google::protobuf::uint8* Optional_CalcMethodKind::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:commonmodule.Optional_CalcMethodKind)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.CalcMethodKind value = 1;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:commonmodule.Optional_CalcMethodKind)
  return target;
}

size_t Optional_CalcMethodKind::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:commonmodule.Optional_CalcMethodKind)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .commonmodule.CalcMethodKind value = 1;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Optional_CalcMethodKind::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:commonmodule.Optional_CalcMethodKind)
  GOOGLE_DCHECK_NE(&from, this);
  const Optional_CalcMethodKind* source =
      ::google::protobuf::DynamicCastToGenerated<Optional_CalcMethodKind>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:commonmodule.Optional_CalcMethodKind)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:commonmodule.Optional_CalcMethodKind)
    MergeFrom(*source);
  }
}

void Optional_CalcMethodKind::MergeFrom(const Optional_CalcMethodKind& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:commonmodule.Optional_CalcMethodKind)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value() != 0) {
    set_value(from.value());
  }
}

void Optional_CalcMethodKind::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:commonmodule.Optional_CalcMethodKind)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Optional_CalcMethodKind::CopyFrom(const Optional_CalcMethodKind& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:commonmodule.Optional_CalcMethodKind)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Optional_CalcMethodKind::IsInitialized() const {
  return true;
}

void Optional_CalcMethodKind::Swap(Optional_CalcMethodKind* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Optional_CalcMethodKind::InternalSwap(Optional_CalcMethodKind* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(value_, other->value_);
}

::google::protobuf::Metadata Optional_CalcMethodKind::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return ::file_level_metadata_commonmodule_2fcommonmodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ENG_CalcMethodKind::InitAsDefaultInstance() {
}
class ENG_CalcMethodKind::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ENG_CalcMethodKind::kSetValFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ENG_CalcMethodKind::ENG_CalcMethodKind()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:commonmodule.ENG_CalcMethodKind)
}
ENG_CalcMethodKind::ENG_CalcMethodKind(const ENG_CalcMethodKind& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  setval_ = from.setval_;
  // @@protoc_insertion_point(copy_constructor:commonmodule.ENG_CalcMethodKind)
}

void ENG_CalcMethodKind::SharedCtor() {
  setval_ = 0;
}

ENG_CalcMethodKind::~ENG_CalcMethodKind() {
  // @@protoc_insertion_point(destructor:commonmodule.ENG_CalcMethodKind)
  SharedDtor();
}

void ENG_CalcMethodKind::SharedDtor() {
}

void ENG_CalcMethodKind::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ENG_CalcMethodKind& ENG_CalcMethodKind::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ENG_CalcMethodKind_commonmodule_2fcommonmodule_2eproto.base);
  return *internal_default_instance();
}


void ENG_CalcMethodKind::Clear() {
// @@protoc_insertion_point(message_clear_start:commonmodule.ENG_CalcMethodKind)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  setval_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ENG_CalcMethodKind::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ENG_CalcMethodKind*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .commonmodule.CalcMethodKind setVal = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_setval(static_cast<::commonmodule::CalcMethodKind>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ENG_CalcMethodKind::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:commonmodule.ENG_CalcMethodKind)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .commonmodule.CalcMethodKind setVal = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_setval(static_cast< ::commonmodule::CalcMethodKind >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:commonmodule.ENG_CalcMethodKind)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:commonmodule.ENG_CalcMethodKind)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ENG_CalcMethodKind::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:commonmodule.ENG_CalcMethodKind)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.CalcMethodKind setVal = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->setval() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->setval(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:commonmodule.ENG_CalcMethodKind)
}

::google::protobuf::uint8* ENG_CalcMethodKind::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:commonmodule.ENG_CalcMethodKind)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.CalcMethodKind setVal = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->setval() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->setval(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:commonmodule.ENG_CalcMethodKind)
  return target;
}

size_t ENG_CalcMethodKind::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:commonmodule.ENG_CalcMethodKind)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .commonmodule.CalcMethodKind setVal = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->setval() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->setval());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ENG_CalcMethodKind::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:commonmodule.ENG_CalcMethodKind)
  GOOGLE_DCHECK_NE(&from, this);
  const ENG_CalcMethodKind* source =
      ::google::protobuf::DynamicCastToGenerated<ENG_CalcMethodKind>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:commonmodule.ENG_CalcMethodKind)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:commonmodule.ENG_CalcMethodKind)
    MergeFrom(*source);
  }
}

void ENG_CalcMethodKind::MergeFrom(const ENG_CalcMethodKind& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:commonmodule.ENG_CalcMethodKind)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.setval() != 0) {
    set_setval(from.setval());
  }
}

void ENG_CalcMethodKind::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:commonmodule.ENG_CalcMethodKind)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ENG_CalcMethodKind::CopyFrom(const ENG_CalcMethodKind& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:commonmodule.ENG_CalcMethodKind)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ENG_CalcMethodKind::IsInitialized() const {
  return true;
}

void ENG_CalcMethodKind::Swap(ENG_CalcMethodKind* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ENG_CalcMethodKind::InternalSwap(ENG_CalcMethodKind* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(setval_, other->setval_);
}

::google::protobuf::Metadata ENG_CalcMethodKind::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return ::file_level_metadata_commonmodule_2fcommonmodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Optional_GridConnectModeKind::InitAsDefaultInstance() {
}
class Optional_GridConnectModeKind::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Optional_GridConnectModeKind::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Optional_GridConnectModeKind::Optional_GridConnectModeKind()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:commonmodule.Optional_GridConnectModeKind)
}
Optional_GridConnectModeKind::Optional_GridConnectModeKind(const Optional_GridConnectModeKind& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:commonmodule.Optional_GridConnectModeKind)
}

void Optional_GridConnectModeKind::SharedCtor() {
  value_ = 0;
}

Optional_GridConnectModeKind::~Optional_GridConnectModeKind() {
  // @@protoc_insertion_point(destructor:commonmodule.Optional_GridConnectModeKind)
  SharedDtor();
}

void Optional_GridConnectModeKind::SharedDtor() {
}

void Optional_GridConnectModeKind::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Optional_GridConnectModeKind& Optional_GridConnectModeKind::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Optional_GridConnectModeKind_commonmodule_2fcommonmodule_2eproto.base);
  return *internal_default_instance();
}


void Optional_GridConnectModeKind::Clear() {
// @@protoc_insertion_point(message_clear_start:commonmodule.Optional_GridConnectModeKind)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Optional_GridConnectModeKind::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Optional_GridConnectModeKind*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .commonmodule.GridConnectModeKind value = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_value(static_cast<::commonmodule::GridConnectModeKind>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Optional_GridConnectModeKind::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:commonmodule.Optional_GridConnectModeKind)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .commonmodule.GridConnectModeKind value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_value(static_cast< ::commonmodule::GridConnectModeKind >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:commonmodule.Optional_GridConnectModeKind)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:commonmodule.Optional_GridConnectModeKind)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Optional_GridConnectModeKind::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:commonmodule.Optional_GridConnectModeKind)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.GridConnectModeKind value = 1;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:commonmodule.Optional_GridConnectModeKind)
}

::google::protobuf::uint8* Optional_GridConnectModeKind::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:commonmodule.Optional_GridConnectModeKind)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.GridConnectModeKind value = 1;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:commonmodule.Optional_GridConnectModeKind)
  return target;
}

size_t Optional_GridConnectModeKind::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:commonmodule.Optional_GridConnectModeKind)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .commonmodule.GridConnectModeKind value = 1;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Optional_GridConnectModeKind::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:commonmodule.Optional_GridConnectModeKind)
  GOOGLE_DCHECK_NE(&from, this);
  const Optional_GridConnectModeKind* source =
      ::google::protobuf::DynamicCastToGenerated<Optional_GridConnectModeKind>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:commonmodule.Optional_GridConnectModeKind)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:commonmodule.Optional_GridConnectModeKind)
    MergeFrom(*source);
  }
}

void Optional_GridConnectModeKind::MergeFrom(const Optional_GridConnectModeKind& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:commonmodule.Optional_GridConnectModeKind)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value() != 0) {
    set_value(from.value());
  }
}

void Optional_GridConnectModeKind::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:commonmodule.Optional_GridConnectModeKind)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Optional_GridConnectModeKind::CopyFrom(const Optional_GridConnectModeKind& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:commonmodule.Optional_GridConnectModeKind)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Optional_GridConnectModeKind::IsInitialized() const {
  return true;
}

void Optional_GridConnectModeKind::Swap(Optional_GridConnectModeKind* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Optional_GridConnectModeKind::InternalSwap(Optional_GridConnectModeKind* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(value_, other->value_);
}

::google::protobuf::Metadata Optional_GridConnectModeKind::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return ::file_level_metadata_commonmodule_2fcommonmodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ENG_GridConnectModeKind::InitAsDefaultInstance() {
  ::commonmodule::_ENG_GridConnectModeKind_default_instance_._instance.get_mutable()->setvalextension_ = const_cast< ::google::protobuf::StringValue*>(
      ::google::protobuf::StringValue::internal_default_instance());
}
class ENG_GridConnectModeKind::HasBitSetters {
 public:
  static const ::google::protobuf::StringValue& setvalextension(const ENG_GridConnectModeKind* msg);
};

const ::google::protobuf::StringValue&
ENG_GridConnectModeKind::HasBitSetters::setvalextension(const ENG_GridConnectModeKind* msg) {
  return *msg->setvalextension_;
}
void ENG_GridConnectModeKind::clear_setvalextension() {
  if (GetArenaNoVirtual() == nullptr && setvalextension_ != nullptr) {
    delete setvalextension_;
  }
  setvalextension_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ENG_GridConnectModeKind::kSetValFieldNumber;
const int ENG_GridConnectModeKind::kSetValExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ENG_GridConnectModeKind::ENG_GridConnectModeKind()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:commonmodule.ENG_GridConnectModeKind)
}
ENG_GridConnectModeKind::ENG_GridConnectModeKind(const ENG_GridConnectModeKind& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_setvalextension()) {
    setvalextension_ = new ::google::protobuf::StringValue(*from.setvalextension_);
  } else {
    setvalextension_ = nullptr;
  }
  setval_ = from.setval_;
  // @@protoc_insertion_point(copy_constructor:commonmodule.ENG_GridConnectModeKind)
}

void ENG_GridConnectModeKind::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ENG_GridConnectModeKind_commonmodule_2fcommonmodule_2eproto.base);
  ::memset(&setvalextension_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&setval_) -
      reinterpret_cast<char*>(&setvalextension_)) + sizeof(setval_));
}

ENG_GridConnectModeKind::~ENG_GridConnectModeKind() {
  // @@protoc_insertion_point(destructor:commonmodule.ENG_GridConnectModeKind)
  SharedDtor();
}

void ENG_GridConnectModeKind::SharedDtor() {
  if (this != internal_default_instance()) delete setvalextension_;
}

void ENG_GridConnectModeKind::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ENG_GridConnectModeKind& ENG_GridConnectModeKind::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ENG_GridConnectModeKind_commonmodule_2fcommonmodule_2eproto.base);
  return *internal_default_instance();
}


void ENG_GridConnectModeKind::Clear() {
// @@protoc_insertion_point(message_clear_start:commonmodule.ENG_GridConnectModeKind)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && setvalextension_ != nullptr) {
    delete setvalextension_;
  }
  setvalextension_ = nullptr;
  setval_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ENG_GridConnectModeKind::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ENG_GridConnectModeKind*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .commonmodule.GridConnectModeKind setVal = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_setval(static_cast<::commonmodule::GridConnectModeKind>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .google.protobuf.StringValue setValExtension = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::StringValue::_InternalParse;
        object = msg->mutable_setvalextension();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ENG_GridConnectModeKind::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:commonmodule.ENG_GridConnectModeKind)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .commonmodule.GridConnectModeKind setVal = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_setval(static_cast< ::commonmodule::GridConnectModeKind >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.StringValue setValExtension = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_setvalextension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:commonmodule.ENG_GridConnectModeKind)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:commonmodule.ENG_GridConnectModeKind)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ENG_GridConnectModeKind::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:commonmodule.ENG_GridConnectModeKind)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.GridConnectModeKind setVal = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->setval() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->setval(), output);
  }

  // .google.protobuf.StringValue setValExtension = 2;
  if (this->has_setvalextension()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::setvalextension(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:commonmodule.ENG_GridConnectModeKind)
}

::google::protobuf::uint8* ENG_GridConnectModeKind::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:commonmodule.ENG_GridConnectModeKind)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.GridConnectModeKind setVal = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->setval() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->setval(), target);
  }

  // .google.protobuf.StringValue setValExtension = 2;
  if (this->has_setvalextension()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::setvalextension(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:commonmodule.ENG_GridConnectModeKind)
  return target;
}

size_t ENG_GridConnectModeKind::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:commonmodule.ENG_GridConnectModeKind)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.StringValue setValExtension = 2;
  if (this->has_setvalextension()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *setvalextension_);
  }

  // .commonmodule.GridConnectModeKind setVal = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->setval() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->setval());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ENG_GridConnectModeKind::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:commonmodule.ENG_GridConnectModeKind)
  GOOGLE_DCHECK_NE(&from, this);
  const ENG_GridConnectModeKind* source =
      ::google::protobuf::DynamicCastToGenerated<ENG_GridConnectModeKind>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:commonmodule.ENG_GridConnectModeKind)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:commonmodule.ENG_GridConnectModeKind)
    MergeFrom(*source);
  }
}

void ENG_GridConnectModeKind::MergeFrom(const ENG_GridConnectModeKind& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:commonmodule.ENG_GridConnectModeKind)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_setvalextension()) {
    mutable_setvalextension()->::google::protobuf::StringValue::MergeFrom(from.setvalextension());
  }
  if (from.setval() != 0) {
    set_setval(from.setval());
  }
}

void ENG_GridConnectModeKind::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:commonmodule.ENG_GridConnectModeKind)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ENG_GridConnectModeKind::CopyFrom(const ENG_GridConnectModeKind& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:commonmodule.ENG_GridConnectModeKind)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ENG_GridConnectModeKind::IsInitialized() const {
  return true;
}

void ENG_GridConnectModeKind::Swap(ENG_GridConnectModeKind* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ENG_GridConnectModeKind::InternalSwap(ENG_GridConnectModeKind* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(setvalextension_, other->setvalextension_);
  swap(setval_, other->setval_);
}

::google::protobuf::Metadata ENG_GridConnectModeKind::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return ::file_level_metadata_commonmodule_2fcommonmodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Optional_PFSignKind::InitAsDefaultInstance() {
}
class Optional_PFSignKind::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Optional_PFSignKind::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Optional_PFSignKind::Optional_PFSignKind()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:commonmodule.Optional_PFSignKind)
}
Optional_PFSignKind::Optional_PFSignKind(const Optional_PFSignKind& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:commonmodule.Optional_PFSignKind)
}

void Optional_PFSignKind::SharedCtor() {
  value_ = 0;
}

Optional_PFSignKind::~Optional_PFSignKind() {
  // @@protoc_insertion_point(destructor:commonmodule.Optional_PFSignKind)
  SharedDtor();
}

void Optional_PFSignKind::SharedDtor() {
}

void Optional_PFSignKind::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Optional_PFSignKind& Optional_PFSignKind::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Optional_PFSignKind_commonmodule_2fcommonmodule_2eproto.base);
  return *internal_default_instance();
}


void Optional_PFSignKind::Clear() {
// @@protoc_insertion_point(message_clear_start:commonmodule.Optional_PFSignKind)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Optional_PFSignKind::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Optional_PFSignKind*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .commonmodule.PFSignKind value = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_value(static_cast<::commonmodule::PFSignKind>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Optional_PFSignKind::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:commonmodule.Optional_PFSignKind)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .commonmodule.PFSignKind value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_value(static_cast< ::commonmodule::PFSignKind >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:commonmodule.Optional_PFSignKind)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:commonmodule.Optional_PFSignKind)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Optional_PFSignKind::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:commonmodule.Optional_PFSignKind)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.PFSignKind value = 1;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:commonmodule.Optional_PFSignKind)
}

::google::protobuf::uint8* Optional_PFSignKind::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:commonmodule.Optional_PFSignKind)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.PFSignKind value = 1;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:commonmodule.Optional_PFSignKind)
  return target;
}

size_t Optional_PFSignKind::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:commonmodule.Optional_PFSignKind)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .commonmodule.PFSignKind value = 1;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Optional_PFSignKind::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:commonmodule.Optional_PFSignKind)
  GOOGLE_DCHECK_NE(&from, this);
  const Optional_PFSignKind* source =
      ::google::protobuf::DynamicCastToGenerated<Optional_PFSignKind>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:commonmodule.Optional_PFSignKind)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:commonmodule.Optional_PFSignKind)
    MergeFrom(*source);
  }
}

void Optional_PFSignKind::MergeFrom(const Optional_PFSignKind& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:commonmodule.Optional_PFSignKind)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value() != 0) {
    set_value(from.value());
  }
}

void Optional_PFSignKind::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:commonmodule.Optional_PFSignKind)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Optional_PFSignKind::CopyFrom(const Optional_PFSignKind& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:commonmodule.Optional_PFSignKind)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Optional_PFSignKind::IsInitialized() const {
  return true;
}

void Optional_PFSignKind::Swap(Optional_PFSignKind* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Optional_PFSignKind::InternalSwap(Optional_PFSignKind* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(value_, other->value_);
}

::google::protobuf::Metadata Optional_PFSignKind::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return ::file_level_metadata_commonmodule_2fcommonmodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ENG_PFSignKind::InitAsDefaultInstance() {
}
class ENG_PFSignKind::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ENG_PFSignKind::kSetValFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ENG_PFSignKind::ENG_PFSignKind()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:commonmodule.ENG_PFSignKind)
}
ENG_PFSignKind::ENG_PFSignKind(const ENG_PFSignKind& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  setval_ = from.setval_;
  // @@protoc_insertion_point(copy_constructor:commonmodule.ENG_PFSignKind)
}

void ENG_PFSignKind::SharedCtor() {
  setval_ = 0;
}

ENG_PFSignKind::~ENG_PFSignKind() {
  // @@protoc_insertion_point(destructor:commonmodule.ENG_PFSignKind)
  SharedDtor();
}

void ENG_PFSignKind::SharedDtor() {
}

void ENG_PFSignKind::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ENG_PFSignKind& ENG_PFSignKind::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ENG_PFSignKind_commonmodule_2fcommonmodule_2eproto.base);
  return *internal_default_instance();
}


void ENG_PFSignKind::Clear() {
// @@protoc_insertion_point(message_clear_start:commonmodule.ENG_PFSignKind)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  setval_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ENG_PFSignKind::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ENG_PFSignKind*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .commonmodule.PFSignKind setVal = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_setval(static_cast<::commonmodule::PFSignKind>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ENG_PFSignKind::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:commonmodule.ENG_PFSignKind)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .commonmodule.PFSignKind setVal = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_setval(static_cast< ::commonmodule::PFSignKind >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:commonmodule.ENG_PFSignKind)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:commonmodule.ENG_PFSignKind)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ENG_PFSignKind::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:commonmodule.ENG_PFSignKind)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.PFSignKind setVal = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->setval() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->setval(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:commonmodule.ENG_PFSignKind)
}

::google::protobuf::uint8* ENG_PFSignKind::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:commonmodule.ENG_PFSignKind)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.PFSignKind setVal = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->setval() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->setval(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:commonmodule.ENG_PFSignKind)
  return target;
}

size_t ENG_PFSignKind::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:commonmodule.ENG_PFSignKind)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .commonmodule.PFSignKind setVal = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->setval() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->setval());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ENG_PFSignKind::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:commonmodule.ENG_PFSignKind)
  GOOGLE_DCHECK_NE(&from, this);
  const ENG_PFSignKind* source =
      ::google::protobuf::DynamicCastToGenerated<ENG_PFSignKind>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:commonmodule.ENG_PFSignKind)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:commonmodule.ENG_PFSignKind)
    MergeFrom(*source);
  }
}

void ENG_PFSignKind::MergeFrom(const ENG_PFSignKind& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:commonmodule.ENG_PFSignKind)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.setval() != 0) {
    set_setval(from.setval());
  }
}

void ENG_PFSignKind::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:commonmodule.ENG_PFSignKind)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ENG_PFSignKind::CopyFrom(const ENG_PFSignKind& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:commonmodule.ENG_PFSignKind)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ENG_PFSignKind::IsInitialized() const {
  return true;
}

void ENG_PFSignKind::Swap(ENG_PFSignKind* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ENG_PFSignKind::InternalSwap(ENG_PFSignKind* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(setval_, other->setval_);
}

::google::protobuf::Metadata ENG_PFSignKind::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return ::file_level_metadata_commonmodule_2fcommonmodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Optional_BehaviourModeKind::InitAsDefaultInstance() {
}
class Optional_BehaviourModeKind::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Optional_BehaviourModeKind::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Optional_BehaviourModeKind::Optional_BehaviourModeKind()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:commonmodule.Optional_BehaviourModeKind)
}
Optional_BehaviourModeKind::Optional_BehaviourModeKind(const Optional_BehaviourModeKind& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:commonmodule.Optional_BehaviourModeKind)
}

void Optional_BehaviourModeKind::SharedCtor() {
  value_ = 0;
}

Optional_BehaviourModeKind::~Optional_BehaviourModeKind() {
  // @@protoc_insertion_point(destructor:commonmodule.Optional_BehaviourModeKind)
  SharedDtor();
}

void Optional_BehaviourModeKind::SharedDtor() {
}

void Optional_BehaviourModeKind::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Optional_BehaviourModeKind& Optional_BehaviourModeKind::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Optional_BehaviourModeKind_commonmodule_2fcommonmodule_2eproto.base);
  return *internal_default_instance();
}


void Optional_BehaviourModeKind::Clear() {
// @@protoc_insertion_point(message_clear_start:commonmodule.Optional_BehaviourModeKind)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Optional_BehaviourModeKind::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Optional_BehaviourModeKind*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .commonmodule.BehaviourModeKind value = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_value(static_cast<::commonmodule::BehaviourModeKind>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Optional_BehaviourModeKind::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:commonmodule.Optional_BehaviourModeKind)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .commonmodule.BehaviourModeKind value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_value(static_cast< ::commonmodule::BehaviourModeKind >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:commonmodule.Optional_BehaviourModeKind)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:commonmodule.Optional_BehaviourModeKind)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Optional_BehaviourModeKind::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:commonmodule.Optional_BehaviourModeKind)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.BehaviourModeKind value = 1;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:commonmodule.Optional_BehaviourModeKind)
}

::google::protobuf::uint8* Optional_BehaviourModeKind::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:commonmodule.Optional_BehaviourModeKind)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.BehaviourModeKind value = 1;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:commonmodule.Optional_BehaviourModeKind)
  return target;
}

size_t Optional_BehaviourModeKind::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:commonmodule.Optional_BehaviourModeKind)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .commonmodule.BehaviourModeKind value = 1;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Optional_BehaviourModeKind::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:commonmodule.Optional_BehaviourModeKind)
  GOOGLE_DCHECK_NE(&from, this);
  const Optional_BehaviourModeKind* source =
      ::google::protobuf::DynamicCastToGenerated<Optional_BehaviourModeKind>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:commonmodule.Optional_BehaviourModeKind)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:commonmodule.Optional_BehaviourModeKind)
    MergeFrom(*source);
  }
}

void Optional_BehaviourModeKind::MergeFrom(const Optional_BehaviourModeKind& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:commonmodule.Optional_BehaviourModeKind)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value() != 0) {
    set_value(from.value());
  }
}

void Optional_BehaviourModeKind::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:commonmodule.Optional_BehaviourModeKind)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Optional_BehaviourModeKind::CopyFrom(const Optional_BehaviourModeKind& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:commonmodule.Optional_BehaviourModeKind)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Optional_BehaviourModeKind::IsInitialized() const {
  return true;
}

void Optional_BehaviourModeKind::Swap(Optional_BehaviourModeKind* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Optional_BehaviourModeKind::InternalSwap(Optional_BehaviourModeKind* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(value_, other->value_);
}

::google::protobuf::Metadata Optional_BehaviourModeKind::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return ::file_level_metadata_commonmodule_2fcommonmodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ENS_BehaviourModeKind::InitAsDefaultInstance() {
  ::commonmodule::_ENS_BehaviourModeKind_default_instance_._instance.get_mutable()->q_ = const_cast< ::commonmodule::Quality*>(
      ::commonmodule::Quality::internal_default_instance());
  ::commonmodule::_ENS_BehaviourModeKind_default_instance_._instance.get_mutable()->t_ = const_cast< ::commonmodule::Timestamp*>(
      ::commonmodule::Timestamp::internal_default_instance());
}
class ENS_BehaviourModeKind::HasBitSetters {
 public:
  static const ::commonmodule::Quality& q(const ENS_BehaviourModeKind* msg);
  static const ::commonmodule::Timestamp& t(const ENS_BehaviourModeKind* msg);
};

const ::commonmodule::Quality&
ENS_BehaviourModeKind::HasBitSetters::q(const ENS_BehaviourModeKind* msg) {
  return *msg->q_;
}
const ::commonmodule::Timestamp&
ENS_BehaviourModeKind::HasBitSetters::t(const ENS_BehaviourModeKind* msg) {
  return *msg->t_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ENS_BehaviourModeKind::kQFieldNumber;
const int ENS_BehaviourModeKind::kStValFieldNumber;
const int ENS_BehaviourModeKind::kTFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ENS_BehaviourModeKind::ENS_BehaviourModeKind()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:commonmodule.ENS_BehaviourModeKind)
}
ENS_BehaviourModeKind::ENS_BehaviourModeKind(const ENS_BehaviourModeKind& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_q()) {
    q_ = new ::commonmodule::Quality(*from.q_);
  } else {
    q_ = nullptr;
  }
  if (from.has_t()) {
    t_ = new ::commonmodule::Timestamp(*from.t_);
  } else {
    t_ = nullptr;
  }
  stval_ = from.stval_;
  // @@protoc_insertion_point(copy_constructor:commonmodule.ENS_BehaviourModeKind)
}

void ENS_BehaviourModeKind::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ENS_BehaviourModeKind_commonmodule_2fcommonmodule_2eproto.base);
  ::memset(&q_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&stval_) -
      reinterpret_cast<char*>(&q_)) + sizeof(stval_));
}

ENS_BehaviourModeKind::~ENS_BehaviourModeKind() {
  // @@protoc_insertion_point(destructor:commonmodule.ENS_BehaviourModeKind)
  SharedDtor();
}

void ENS_BehaviourModeKind::SharedDtor() {
  if (this != internal_default_instance()) delete q_;
  if (this != internal_default_instance()) delete t_;
}

void ENS_BehaviourModeKind::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ENS_BehaviourModeKind& ENS_BehaviourModeKind::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ENS_BehaviourModeKind_commonmodule_2fcommonmodule_2eproto.base);
  return *internal_default_instance();
}


void ENS_BehaviourModeKind::Clear() {
// @@protoc_insertion_point(message_clear_start:commonmodule.ENS_BehaviourModeKind)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && q_ != nullptr) {
    delete q_;
  }
  q_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && t_ != nullptr) {
    delete t_;
  }
  t_ = nullptr;
  stval_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ENS_BehaviourModeKind::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ENS_BehaviourModeKind*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .commonmodule.Quality q = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::Quality::_InternalParse;
        object = msg->mutable_q();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .commonmodule.BehaviourModeKind stVal = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_stval(static_cast<::commonmodule::BehaviourModeKind>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .commonmodule.Timestamp t = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::Timestamp::_InternalParse;
        object = msg->mutable_t();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ENS_BehaviourModeKind::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:commonmodule.ENS_BehaviourModeKind)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .commonmodule.Quality q = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_q()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.BehaviourModeKind stVal = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_stval(static_cast< ::commonmodule::BehaviourModeKind >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.Timestamp t = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_t()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:commonmodule.ENS_BehaviourModeKind)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:commonmodule.ENS_BehaviourModeKind)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ENS_BehaviourModeKind::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:commonmodule.ENS_BehaviourModeKind)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.Quality q = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_q()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::q(this), output);
  }

  // .commonmodule.BehaviourModeKind stVal = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->stval() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->stval(), output);
  }

  // .commonmodule.Timestamp t = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_t()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::t(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:commonmodule.ENS_BehaviourModeKind)
}

::google::protobuf::uint8* ENS_BehaviourModeKind::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:commonmodule.ENS_BehaviourModeKind)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.Quality q = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_q()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::q(this), target);
  }

  // .commonmodule.BehaviourModeKind stVal = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->stval() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->stval(), target);
  }

  // .commonmodule.Timestamp t = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_t()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::t(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:commonmodule.ENS_BehaviourModeKind)
  return target;
}

size_t ENS_BehaviourModeKind::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:commonmodule.ENS_BehaviourModeKind)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .commonmodule.Quality q = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_q()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *q_);
  }

  // .commonmodule.Timestamp t = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_t()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *t_);
  }

  // .commonmodule.BehaviourModeKind stVal = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->stval() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->stval());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ENS_BehaviourModeKind::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:commonmodule.ENS_BehaviourModeKind)
  GOOGLE_DCHECK_NE(&from, this);
  const ENS_BehaviourModeKind* source =
      ::google::protobuf::DynamicCastToGenerated<ENS_BehaviourModeKind>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:commonmodule.ENS_BehaviourModeKind)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:commonmodule.ENS_BehaviourModeKind)
    MergeFrom(*source);
  }
}

void ENS_BehaviourModeKind::MergeFrom(const ENS_BehaviourModeKind& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:commonmodule.ENS_BehaviourModeKind)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_q()) {
    mutable_q()->::commonmodule::Quality::MergeFrom(from.q());
  }
  if (from.has_t()) {
    mutable_t()->::commonmodule::Timestamp::MergeFrom(from.t());
  }
  if (from.stval() != 0) {
    set_stval(from.stval());
  }
}

void ENS_BehaviourModeKind::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:commonmodule.ENS_BehaviourModeKind)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ENS_BehaviourModeKind::CopyFrom(const ENS_BehaviourModeKind& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:commonmodule.ENS_BehaviourModeKind)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ENS_BehaviourModeKind::IsInitialized() const {
  return true;
}

void ENS_BehaviourModeKind::Swap(ENS_BehaviourModeKind* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ENS_BehaviourModeKind::InternalSwap(ENS_BehaviourModeKind* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(q_, other->q_);
  swap(t_, other->t_);
  swap(stval_, other->stval_);
}

::google::protobuf::Metadata ENS_BehaviourModeKind::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return ::file_level_metadata_commonmodule_2fcommonmodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Optional_DERGeneratorStateKind::InitAsDefaultInstance() {
}
class Optional_DERGeneratorStateKind::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Optional_DERGeneratorStateKind::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Optional_DERGeneratorStateKind::Optional_DERGeneratorStateKind()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:commonmodule.Optional_DERGeneratorStateKind)
}
Optional_DERGeneratorStateKind::Optional_DERGeneratorStateKind(const Optional_DERGeneratorStateKind& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:commonmodule.Optional_DERGeneratorStateKind)
}

void Optional_DERGeneratorStateKind::SharedCtor() {
  value_ = 0;
}

Optional_DERGeneratorStateKind::~Optional_DERGeneratorStateKind() {
  // @@protoc_insertion_point(destructor:commonmodule.Optional_DERGeneratorStateKind)
  SharedDtor();
}

void Optional_DERGeneratorStateKind::SharedDtor() {
}

void Optional_DERGeneratorStateKind::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Optional_DERGeneratorStateKind& Optional_DERGeneratorStateKind::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Optional_DERGeneratorStateKind_commonmodule_2fcommonmodule_2eproto.base);
  return *internal_default_instance();
}


void Optional_DERGeneratorStateKind::Clear() {
// @@protoc_insertion_point(message_clear_start:commonmodule.Optional_DERGeneratorStateKind)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Optional_DERGeneratorStateKind::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Optional_DERGeneratorStateKind*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .commonmodule.DERGeneratorStateKind value = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_value(static_cast<::commonmodule::DERGeneratorStateKind>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Optional_DERGeneratorStateKind::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:commonmodule.Optional_DERGeneratorStateKind)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .commonmodule.DERGeneratorStateKind value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_value(static_cast< ::commonmodule::DERGeneratorStateKind >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:commonmodule.Optional_DERGeneratorStateKind)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:commonmodule.Optional_DERGeneratorStateKind)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Optional_DERGeneratorStateKind::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:commonmodule.Optional_DERGeneratorStateKind)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.DERGeneratorStateKind value = 1;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:commonmodule.Optional_DERGeneratorStateKind)
}

::google::protobuf::uint8* Optional_DERGeneratorStateKind::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:commonmodule.Optional_DERGeneratorStateKind)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.DERGeneratorStateKind value = 1;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:commonmodule.Optional_DERGeneratorStateKind)
  return target;
}

size_t Optional_DERGeneratorStateKind::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:commonmodule.Optional_DERGeneratorStateKind)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .commonmodule.DERGeneratorStateKind value = 1;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Optional_DERGeneratorStateKind::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:commonmodule.Optional_DERGeneratorStateKind)
  GOOGLE_DCHECK_NE(&from, this);
  const Optional_DERGeneratorStateKind* source =
      ::google::protobuf::DynamicCastToGenerated<Optional_DERGeneratorStateKind>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:commonmodule.Optional_DERGeneratorStateKind)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:commonmodule.Optional_DERGeneratorStateKind)
    MergeFrom(*source);
  }
}

void Optional_DERGeneratorStateKind::MergeFrom(const Optional_DERGeneratorStateKind& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:commonmodule.Optional_DERGeneratorStateKind)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value() != 0) {
    set_value(from.value());
  }
}

void Optional_DERGeneratorStateKind::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:commonmodule.Optional_DERGeneratorStateKind)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Optional_DERGeneratorStateKind::CopyFrom(const Optional_DERGeneratorStateKind& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:commonmodule.Optional_DERGeneratorStateKind)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Optional_DERGeneratorStateKind::IsInitialized() const {
  return true;
}

void Optional_DERGeneratorStateKind::Swap(Optional_DERGeneratorStateKind* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Optional_DERGeneratorStateKind::InternalSwap(Optional_DERGeneratorStateKind* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(value_, other->value_);
}

::google::protobuf::Metadata Optional_DERGeneratorStateKind::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return ::file_level_metadata_commonmodule_2fcommonmodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ENS_DERGeneratorStateKind::InitAsDefaultInstance() {
  ::commonmodule::_ENS_DERGeneratorStateKind_default_instance_._instance.get_mutable()->q_ = const_cast< ::commonmodule::Quality*>(
      ::commonmodule::Quality::internal_default_instance());
  ::commonmodule::_ENS_DERGeneratorStateKind_default_instance_._instance.get_mutable()->t_ = const_cast< ::commonmodule::Timestamp*>(
      ::commonmodule::Timestamp::internal_default_instance());
}
class ENS_DERGeneratorStateKind::HasBitSetters {
 public:
  static const ::commonmodule::Quality& q(const ENS_DERGeneratorStateKind* msg);
  static const ::commonmodule::Timestamp& t(const ENS_DERGeneratorStateKind* msg);
};

const ::commonmodule::Quality&
ENS_DERGeneratorStateKind::HasBitSetters::q(const ENS_DERGeneratorStateKind* msg) {
  return *msg->q_;
}
const ::commonmodule::Timestamp&
ENS_DERGeneratorStateKind::HasBitSetters::t(const ENS_DERGeneratorStateKind* msg) {
  return *msg->t_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ENS_DERGeneratorStateKind::kQFieldNumber;
const int ENS_DERGeneratorStateKind::kStValFieldNumber;
const int ENS_DERGeneratorStateKind::kTFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ENS_DERGeneratorStateKind::ENS_DERGeneratorStateKind()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:commonmodule.ENS_DERGeneratorStateKind)
}
ENS_DERGeneratorStateKind::ENS_DERGeneratorStateKind(const ENS_DERGeneratorStateKind& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_q()) {
    q_ = new ::commonmodule::Quality(*from.q_);
  } else {
    q_ = nullptr;
  }
  if (from.has_t()) {
    t_ = new ::commonmodule::Timestamp(*from.t_);
  } else {
    t_ = nullptr;
  }
  stval_ = from.stval_;
  // @@protoc_insertion_point(copy_constructor:commonmodule.ENS_DERGeneratorStateKind)
}

void ENS_DERGeneratorStateKind::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ENS_DERGeneratorStateKind_commonmodule_2fcommonmodule_2eproto.base);
  ::memset(&q_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&stval_) -
      reinterpret_cast<char*>(&q_)) + sizeof(stval_));
}

ENS_DERGeneratorStateKind::~ENS_DERGeneratorStateKind() {
  // @@protoc_insertion_point(destructor:commonmodule.ENS_DERGeneratorStateKind)
  SharedDtor();
}

void ENS_DERGeneratorStateKind::SharedDtor() {
  if (this != internal_default_instance()) delete q_;
  if (this != internal_default_instance()) delete t_;
}

void ENS_DERGeneratorStateKind::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ENS_DERGeneratorStateKind& ENS_DERGeneratorStateKind::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ENS_DERGeneratorStateKind_commonmodule_2fcommonmodule_2eproto.base);
  return *internal_default_instance();
}


void ENS_DERGeneratorStateKind::Clear() {
// @@protoc_insertion_point(message_clear_start:commonmodule.ENS_DERGeneratorStateKind)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && q_ != nullptr) {
    delete q_;
  }
  q_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && t_ != nullptr) {
    delete t_;
  }
  t_ = nullptr;
  stval_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ENS_DERGeneratorStateKind::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ENS_DERGeneratorStateKind*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .commonmodule.Quality q = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::Quality::_InternalParse;
        object = msg->mutable_q();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .commonmodule.DERGeneratorStateKind stVal = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_stval(static_cast<::commonmodule::DERGeneratorStateKind>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .commonmodule.Timestamp t = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::Timestamp::_InternalParse;
        object = msg->mutable_t();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ENS_DERGeneratorStateKind::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:commonmodule.ENS_DERGeneratorStateKind)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .commonmodule.Quality q = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_q()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.DERGeneratorStateKind stVal = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_stval(static_cast< ::commonmodule::DERGeneratorStateKind >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.Timestamp t = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_t()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:commonmodule.ENS_DERGeneratorStateKind)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:commonmodule.ENS_DERGeneratorStateKind)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ENS_DERGeneratorStateKind::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:commonmodule.ENS_DERGeneratorStateKind)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.Quality q = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_q()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::q(this), output);
  }

  // .commonmodule.DERGeneratorStateKind stVal = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->stval() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->stval(), output);
  }

  // .commonmodule.Timestamp t = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_t()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::t(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:commonmodule.ENS_DERGeneratorStateKind)
}

::google::protobuf::uint8* ENS_DERGeneratorStateKind::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:commonmodule.ENS_DERGeneratorStateKind)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.Quality q = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_q()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::q(this), target);
  }

  // .commonmodule.DERGeneratorStateKind stVal = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->stval() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->stval(), target);
  }

  // .commonmodule.Timestamp t = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_t()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::t(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:commonmodule.ENS_DERGeneratorStateKind)
  return target;
}

size_t ENS_DERGeneratorStateKind::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:commonmodule.ENS_DERGeneratorStateKind)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .commonmodule.Quality q = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_q()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *q_);
  }

  // .commonmodule.Timestamp t = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_t()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *t_);
  }

  // .commonmodule.DERGeneratorStateKind stVal = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->stval() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->stval());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ENS_DERGeneratorStateKind::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:commonmodule.ENS_DERGeneratorStateKind)
  GOOGLE_DCHECK_NE(&from, this);
  const ENS_DERGeneratorStateKind* source =
      ::google::protobuf::DynamicCastToGenerated<ENS_DERGeneratorStateKind>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:commonmodule.ENS_DERGeneratorStateKind)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:commonmodule.ENS_DERGeneratorStateKind)
    MergeFrom(*source);
  }
}

void ENS_DERGeneratorStateKind::MergeFrom(const ENS_DERGeneratorStateKind& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:commonmodule.ENS_DERGeneratorStateKind)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_q()) {
    mutable_q()->::commonmodule::Quality::MergeFrom(from.q());
  }
  if (from.has_t()) {
    mutable_t()->::commonmodule::Timestamp::MergeFrom(from.t());
  }
  if (from.stval() != 0) {
    set_stval(from.stval());
  }
}

void ENS_DERGeneratorStateKind::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:commonmodule.ENS_DERGeneratorStateKind)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ENS_DERGeneratorStateKind::CopyFrom(const ENS_DERGeneratorStateKind& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:commonmodule.ENS_DERGeneratorStateKind)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ENS_DERGeneratorStateKind::IsInitialized() const {
  return true;
}

void ENS_DERGeneratorStateKind::Swap(ENS_DERGeneratorStateKind* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ENS_DERGeneratorStateKind::InternalSwap(ENS_DERGeneratorStateKind* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(q_, other->q_);
  swap(t_, other->t_);
  swap(stval_, other->stval_);
}

::google::protobuf::Metadata ENS_DERGeneratorStateKind::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return ::file_level_metadata_commonmodule_2fcommonmodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Optional_DynamicTestKind::InitAsDefaultInstance() {
}
class Optional_DynamicTestKind::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Optional_DynamicTestKind::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Optional_DynamicTestKind::Optional_DynamicTestKind()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:commonmodule.Optional_DynamicTestKind)
}
Optional_DynamicTestKind::Optional_DynamicTestKind(const Optional_DynamicTestKind& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:commonmodule.Optional_DynamicTestKind)
}

void Optional_DynamicTestKind::SharedCtor() {
  value_ = 0;
}

Optional_DynamicTestKind::~Optional_DynamicTestKind() {
  // @@protoc_insertion_point(destructor:commonmodule.Optional_DynamicTestKind)
  SharedDtor();
}

void Optional_DynamicTestKind::SharedDtor() {
}

void Optional_DynamicTestKind::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Optional_DynamicTestKind& Optional_DynamicTestKind::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Optional_DynamicTestKind_commonmodule_2fcommonmodule_2eproto.base);
  return *internal_default_instance();
}


void Optional_DynamicTestKind::Clear() {
// @@protoc_insertion_point(message_clear_start:commonmodule.Optional_DynamicTestKind)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Optional_DynamicTestKind::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Optional_DynamicTestKind*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .commonmodule.DynamicTestKind value = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_value(static_cast<::commonmodule::DynamicTestKind>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Optional_DynamicTestKind::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:commonmodule.Optional_DynamicTestKind)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .commonmodule.DynamicTestKind value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_value(static_cast< ::commonmodule::DynamicTestKind >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:commonmodule.Optional_DynamicTestKind)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:commonmodule.Optional_DynamicTestKind)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Optional_DynamicTestKind::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:commonmodule.Optional_DynamicTestKind)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.DynamicTestKind value = 1;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:commonmodule.Optional_DynamicTestKind)
}

::google::protobuf::uint8* Optional_DynamicTestKind::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:commonmodule.Optional_DynamicTestKind)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.DynamicTestKind value = 1;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:commonmodule.Optional_DynamicTestKind)
  return target;
}

size_t Optional_DynamicTestKind::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:commonmodule.Optional_DynamicTestKind)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .commonmodule.DynamicTestKind value = 1;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Optional_DynamicTestKind::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:commonmodule.Optional_DynamicTestKind)
  GOOGLE_DCHECK_NE(&from, this);
  const Optional_DynamicTestKind* source =
      ::google::protobuf::DynamicCastToGenerated<Optional_DynamicTestKind>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:commonmodule.Optional_DynamicTestKind)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:commonmodule.Optional_DynamicTestKind)
    MergeFrom(*source);
  }
}

void Optional_DynamicTestKind::MergeFrom(const Optional_DynamicTestKind& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:commonmodule.Optional_DynamicTestKind)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value() != 0) {
    set_value(from.value());
  }
}

void Optional_DynamicTestKind::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:commonmodule.Optional_DynamicTestKind)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Optional_DynamicTestKind::CopyFrom(const Optional_DynamicTestKind& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:commonmodule.Optional_DynamicTestKind)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Optional_DynamicTestKind::IsInitialized() const {
  return true;
}

void Optional_DynamicTestKind::Swap(Optional_DynamicTestKind* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Optional_DynamicTestKind::InternalSwap(Optional_DynamicTestKind* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(value_, other->value_);
}

::google::protobuf::Metadata Optional_DynamicTestKind::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return ::file_level_metadata_commonmodule_2fcommonmodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ENS_DynamicTestKind::InitAsDefaultInstance() {
  ::commonmodule::_ENS_DynamicTestKind_default_instance_._instance.get_mutable()->q_ = const_cast< ::commonmodule::Quality*>(
      ::commonmodule::Quality::internal_default_instance());
  ::commonmodule::_ENS_DynamicTestKind_default_instance_._instance.get_mutable()->t_ = const_cast< ::commonmodule::Timestamp*>(
      ::commonmodule::Timestamp::internal_default_instance());
}
class ENS_DynamicTestKind::HasBitSetters {
 public:
  static const ::commonmodule::Quality& q(const ENS_DynamicTestKind* msg);
  static const ::commonmodule::Timestamp& t(const ENS_DynamicTestKind* msg);
};

const ::commonmodule::Quality&
ENS_DynamicTestKind::HasBitSetters::q(const ENS_DynamicTestKind* msg) {
  return *msg->q_;
}
const ::commonmodule::Timestamp&
ENS_DynamicTestKind::HasBitSetters::t(const ENS_DynamicTestKind* msg) {
  return *msg->t_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ENS_DynamicTestKind::kQFieldNumber;
const int ENS_DynamicTestKind::kStValFieldNumber;
const int ENS_DynamicTestKind::kTFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ENS_DynamicTestKind::ENS_DynamicTestKind()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:commonmodule.ENS_DynamicTestKind)
}
ENS_DynamicTestKind::ENS_DynamicTestKind(const ENS_DynamicTestKind& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_q()) {
    q_ = new ::commonmodule::Quality(*from.q_);
  } else {
    q_ = nullptr;
  }
  if (from.has_t()) {
    t_ = new ::commonmodule::Timestamp(*from.t_);
  } else {
    t_ = nullptr;
  }
  stval_ = from.stval_;
  // @@protoc_insertion_point(copy_constructor:commonmodule.ENS_DynamicTestKind)
}

void ENS_DynamicTestKind::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ENS_DynamicTestKind_commonmodule_2fcommonmodule_2eproto.base);
  ::memset(&q_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&stval_) -
      reinterpret_cast<char*>(&q_)) + sizeof(stval_));
}

ENS_DynamicTestKind::~ENS_DynamicTestKind() {
  // @@protoc_insertion_point(destructor:commonmodule.ENS_DynamicTestKind)
  SharedDtor();
}

void ENS_DynamicTestKind::SharedDtor() {
  if (this != internal_default_instance()) delete q_;
  if (this != internal_default_instance()) delete t_;
}

void ENS_DynamicTestKind::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ENS_DynamicTestKind& ENS_DynamicTestKind::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ENS_DynamicTestKind_commonmodule_2fcommonmodule_2eproto.base);
  return *internal_default_instance();
}


void ENS_DynamicTestKind::Clear() {
// @@protoc_insertion_point(message_clear_start:commonmodule.ENS_DynamicTestKind)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && q_ != nullptr) {
    delete q_;
  }
  q_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && t_ != nullptr) {
    delete t_;
  }
  t_ = nullptr;
  stval_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ENS_DynamicTestKind::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ENS_DynamicTestKind*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .commonmodule.Quality q = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::Quality::_InternalParse;
        object = msg->mutable_q();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .commonmodule.DynamicTestKind stVal = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_stval(static_cast<::commonmodule::DynamicTestKind>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .commonmodule.Timestamp t = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::Timestamp::_InternalParse;
        object = msg->mutable_t();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ENS_DynamicTestKind::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:commonmodule.ENS_DynamicTestKind)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .commonmodule.Quality q = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_q()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.DynamicTestKind stVal = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_stval(static_cast< ::commonmodule::DynamicTestKind >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.Timestamp t = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_t()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:commonmodule.ENS_DynamicTestKind)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:commonmodule.ENS_DynamicTestKind)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ENS_DynamicTestKind::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:commonmodule.ENS_DynamicTestKind)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.Quality q = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_q()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::q(this), output);
  }

  // .commonmodule.DynamicTestKind stVal = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->stval() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->stval(), output);
  }

  // .commonmodule.Timestamp t = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_t()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::t(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:commonmodule.ENS_DynamicTestKind)
}

::google::protobuf::uint8* ENS_DynamicTestKind::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:commonmodule.ENS_DynamicTestKind)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.Quality q = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_q()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::q(this), target);
  }

  // .commonmodule.DynamicTestKind stVal = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->stval() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->stval(), target);
  }

  // .commonmodule.Timestamp t = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_t()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::t(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:commonmodule.ENS_DynamicTestKind)
  return target;
}

size_t ENS_DynamicTestKind::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:commonmodule.ENS_DynamicTestKind)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .commonmodule.Quality q = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_q()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *q_);
  }

  // .commonmodule.Timestamp t = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_t()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *t_);
  }

  // .commonmodule.DynamicTestKind stVal = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->stval() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->stval());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ENS_DynamicTestKind::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:commonmodule.ENS_DynamicTestKind)
  GOOGLE_DCHECK_NE(&from, this);
  const ENS_DynamicTestKind* source =
      ::google::protobuf::DynamicCastToGenerated<ENS_DynamicTestKind>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:commonmodule.ENS_DynamicTestKind)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:commonmodule.ENS_DynamicTestKind)
    MergeFrom(*source);
  }
}

void ENS_DynamicTestKind::MergeFrom(const ENS_DynamicTestKind& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:commonmodule.ENS_DynamicTestKind)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_q()) {
    mutable_q()->::commonmodule::Quality::MergeFrom(from.q());
  }
  if (from.has_t()) {
    mutable_t()->::commonmodule::Timestamp::MergeFrom(from.t());
  }
  if (from.stval() != 0) {
    set_stval(from.stval());
  }
}

void ENS_DynamicTestKind::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:commonmodule.ENS_DynamicTestKind)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ENS_DynamicTestKind::CopyFrom(const ENS_DynamicTestKind& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:commonmodule.ENS_DynamicTestKind)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ENS_DynamicTestKind::IsInitialized() const {
  return true;
}

void ENS_DynamicTestKind::Swap(ENS_DynamicTestKind* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ENS_DynamicTestKind::InternalSwap(ENS_DynamicTestKind* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(q_, other->q_);
  swap(t_, other->t_);
  swap(stval_, other->stval_);
}

::google::protobuf::Metadata ENS_DynamicTestKind::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return ::file_level_metadata_commonmodule_2fcommonmodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ENS_GridConnectModeKind::InitAsDefaultInstance() {
}
class ENS_GridConnectModeKind::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ENS_GridConnectModeKind::kStValFieldNumber;
const int ENS_GridConnectModeKind::kStValExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ENS_GridConnectModeKind::ENS_GridConnectModeKind()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:commonmodule.ENS_GridConnectModeKind)
}
ENS_GridConnectModeKind::ENS_GridConnectModeKind(const ENS_GridConnectModeKind& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  stvalextension_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.stvalextension().size() > 0) {
    stvalextension_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stvalextension_);
  }
  stval_ = from.stval_;
  // @@protoc_insertion_point(copy_constructor:commonmodule.ENS_GridConnectModeKind)
}

void ENS_GridConnectModeKind::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ENS_GridConnectModeKind_commonmodule_2fcommonmodule_2eproto.base);
  stvalextension_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stval_ = 0;
}

ENS_GridConnectModeKind::~ENS_GridConnectModeKind() {
  // @@protoc_insertion_point(destructor:commonmodule.ENS_GridConnectModeKind)
  SharedDtor();
}

void ENS_GridConnectModeKind::SharedDtor() {
  stvalextension_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ENS_GridConnectModeKind::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ENS_GridConnectModeKind& ENS_GridConnectModeKind::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ENS_GridConnectModeKind_commonmodule_2fcommonmodule_2eproto.base);
  return *internal_default_instance();
}


void ENS_GridConnectModeKind::Clear() {
// @@protoc_insertion_point(message_clear_start:commonmodule.ENS_GridConnectModeKind)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  stvalextension_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stval_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ENS_GridConnectModeKind::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ENS_GridConnectModeKind*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .commonmodule.GridConnectModeKind stVal = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_stval(static_cast<::commonmodule::GridConnectModeKind>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string stValExtension = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("commonmodule.ENS_GridConnectModeKind.stValExtension");
        object = msg->mutable_stvalextension();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ENS_GridConnectModeKind::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:commonmodule.ENS_GridConnectModeKind)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .commonmodule.GridConnectModeKind stVal = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_stval(static_cast< ::commonmodule::GridConnectModeKind >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string stValExtension = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stvalextension()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stvalextension().data(), static_cast<int>(this->stvalextension().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "commonmodule.ENS_GridConnectModeKind.stValExtension"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:commonmodule.ENS_GridConnectModeKind)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:commonmodule.ENS_GridConnectModeKind)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ENS_GridConnectModeKind::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:commonmodule.ENS_GridConnectModeKind)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.GridConnectModeKind stVal = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->stval() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->stval(), output);
  }

  // string stValExtension = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->stvalextension().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stvalextension().data(), static_cast<int>(this->stvalextension().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "commonmodule.ENS_GridConnectModeKind.stValExtension");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->stvalextension(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:commonmodule.ENS_GridConnectModeKind)
}

::google::protobuf::uint8* ENS_GridConnectModeKind::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:commonmodule.ENS_GridConnectModeKind)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.GridConnectModeKind stVal = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->stval() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->stval(), target);
  }

  // string stValExtension = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->stvalextension().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stvalextension().data(), static_cast<int>(this->stvalextension().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "commonmodule.ENS_GridConnectModeKind.stValExtension");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->stvalextension(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:commonmodule.ENS_GridConnectModeKind)
  return target;
}

size_t ENS_GridConnectModeKind::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:commonmodule.ENS_GridConnectModeKind)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string stValExtension = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->stvalextension().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->stvalextension());
  }

  // .commonmodule.GridConnectModeKind stVal = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->stval() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->stval());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ENS_GridConnectModeKind::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:commonmodule.ENS_GridConnectModeKind)
  GOOGLE_DCHECK_NE(&from, this);
  const ENS_GridConnectModeKind* source =
      ::google::protobuf::DynamicCastToGenerated<ENS_GridConnectModeKind>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:commonmodule.ENS_GridConnectModeKind)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:commonmodule.ENS_GridConnectModeKind)
    MergeFrom(*source);
  }
}

void ENS_GridConnectModeKind::MergeFrom(const ENS_GridConnectModeKind& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:commonmodule.ENS_GridConnectModeKind)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.stvalextension().size() > 0) {

    stvalextension_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stvalextension_);
  }
  if (from.stval() != 0) {
    set_stval(from.stval());
  }
}

void ENS_GridConnectModeKind::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:commonmodule.ENS_GridConnectModeKind)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ENS_GridConnectModeKind::CopyFrom(const ENS_GridConnectModeKind& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:commonmodule.ENS_GridConnectModeKind)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ENS_GridConnectModeKind::IsInitialized() const {
  return true;
}

void ENS_GridConnectModeKind::Swap(ENS_GridConnectModeKind* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ENS_GridConnectModeKind::InternalSwap(ENS_GridConnectModeKind* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  stvalextension_.Swap(&other->stvalextension_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(stval_, other->stval_);
}

::google::protobuf::Metadata ENS_GridConnectModeKind::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return ::file_level_metadata_commonmodule_2fcommonmodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Optional_HealthKind::InitAsDefaultInstance() {
}
class Optional_HealthKind::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Optional_HealthKind::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Optional_HealthKind::Optional_HealthKind()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:commonmodule.Optional_HealthKind)
}
Optional_HealthKind::Optional_HealthKind(const Optional_HealthKind& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:commonmodule.Optional_HealthKind)
}

void Optional_HealthKind::SharedCtor() {
  value_ = 0;
}

Optional_HealthKind::~Optional_HealthKind() {
  // @@protoc_insertion_point(destructor:commonmodule.Optional_HealthKind)
  SharedDtor();
}

void Optional_HealthKind::SharedDtor() {
}

void Optional_HealthKind::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Optional_HealthKind& Optional_HealthKind::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Optional_HealthKind_commonmodule_2fcommonmodule_2eproto.base);
  return *internal_default_instance();
}


void Optional_HealthKind::Clear() {
// @@protoc_insertion_point(message_clear_start:commonmodule.Optional_HealthKind)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Optional_HealthKind::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Optional_HealthKind*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .commonmodule.HealthKind value = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_value(static_cast<::commonmodule::HealthKind>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Optional_HealthKind::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:commonmodule.Optional_HealthKind)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .commonmodule.HealthKind value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_value(static_cast< ::commonmodule::HealthKind >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:commonmodule.Optional_HealthKind)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:commonmodule.Optional_HealthKind)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Optional_HealthKind::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:commonmodule.Optional_HealthKind)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.HealthKind value = 1;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:commonmodule.Optional_HealthKind)
}

::google::protobuf::uint8* Optional_HealthKind::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:commonmodule.Optional_HealthKind)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.HealthKind value = 1;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:commonmodule.Optional_HealthKind)
  return target;
}

size_t Optional_HealthKind::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:commonmodule.Optional_HealthKind)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .commonmodule.HealthKind value = 1;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Optional_HealthKind::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:commonmodule.Optional_HealthKind)
  GOOGLE_DCHECK_NE(&from, this);
  const Optional_HealthKind* source =
      ::google::protobuf::DynamicCastToGenerated<Optional_HealthKind>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:commonmodule.Optional_HealthKind)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:commonmodule.Optional_HealthKind)
    MergeFrom(*source);
  }
}

void Optional_HealthKind::MergeFrom(const Optional_HealthKind& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:commonmodule.Optional_HealthKind)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value() != 0) {
    set_value(from.value());
  }
}

void Optional_HealthKind::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:commonmodule.Optional_HealthKind)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Optional_HealthKind::CopyFrom(const Optional_HealthKind& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:commonmodule.Optional_HealthKind)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Optional_HealthKind::IsInitialized() const {
  return true;
}

void Optional_HealthKind::Swap(Optional_HealthKind* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Optional_HealthKind::InternalSwap(Optional_HealthKind* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(value_, other->value_);
}

::google::protobuf::Metadata Optional_HealthKind::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return ::file_level_metadata_commonmodule_2fcommonmodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ENS_HealthKind::InitAsDefaultInstance() {
  ::commonmodule::_ENS_HealthKind_default_instance_._instance.get_mutable()->d_ = const_cast< ::google::protobuf::StringValue*>(
      ::google::protobuf::StringValue::internal_default_instance());
}
class ENS_HealthKind::HasBitSetters {
 public:
  static const ::google::protobuf::StringValue& d(const ENS_HealthKind* msg);
};

const ::google::protobuf::StringValue&
ENS_HealthKind::HasBitSetters::d(const ENS_HealthKind* msg) {
  return *msg->d_;
}
void ENS_HealthKind::clear_d() {
  if (GetArenaNoVirtual() == nullptr && d_ != nullptr) {
    delete d_;
  }
  d_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ENS_HealthKind::kDFieldNumber;
const int ENS_HealthKind::kStValFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ENS_HealthKind::ENS_HealthKind()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:commonmodule.ENS_HealthKind)
}
ENS_HealthKind::ENS_HealthKind(const ENS_HealthKind& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_d()) {
    d_ = new ::google::protobuf::StringValue(*from.d_);
  } else {
    d_ = nullptr;
  }
  stval_ = from.stval_;
  // @@protoc_insertion_point(copy_constructor:commonmodule.ENS_HealthKind)
}

void ENS_HealthKind::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ENS_HealthKind_commonmodule_2fcommonmodule_2eproto.base);
  ::memset(&d_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&stval_) -
      reinterpret_cast<char*>(&d_)) + sizeof(stval_));
}

ENS_HealthKind::~ENS_HealthKind() {
  // @@protoc_insertion_point(destructor:commonmodule.ENS_HealthKind)
  SharedDtor();
}

void ENS_HealthKind::SharedDtor() {
  if (this != internal_default_instance()) delete d_;
}

void ENS_HealthKind::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ENS_HealthKind& ENS_HealthKind::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ENS_HealthKind_commonmodule_2fcommonmodule_2eproto.base);
  return *internal_default_instance();
}


void ENS_HealthKind::Clear() {
// @@protoc_insertion_point(message_clear_start:commonmodule.ENS_HealthKind)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && d_ != nullptr) {
    delete d_;
  }
  d_ = nullptr;
  stval_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ENS_HealthKind::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ENS_HealthKind*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .google.protobuf.StringValue d = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::StringValue::_InternalParse;
        object = msg->mutable_d();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .commonmodule.HealthKind stVal = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_stval(static_cast<::commonmodule::HealthKind>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ENS_HealthKind::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:commonmodule.ENS_HealthKind)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.StringValue d = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_d()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.HealthKind stVal = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_stval(static_cast< ::commonmodule::HealthKind >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:commonmodule.ENS_HealthKind)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:commonmodule.ENS_HealthKind)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ENS_HealthKind::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:commonmodule.ENS_HealthKind)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.StringValue d = 1;
  if (this->has_d()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::d(this), output);
  }

  // .commonmodule.HealthKind stVal = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->stval() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->stval(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:commonmodule.ENS_HealthKind)
}

::google::protobuf::uint8* ENS_HealthKind::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:commonmodule.ENS_HealthKind)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.StringValue d = 1;
  if (this->has_d()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::d(this), target);
  }

  // .commonmodule.HealthKind stVal = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->stval() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->stval(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:commonmodule.ENS_HealthKind)
  return target;
}

size_t ENS_HealthKind::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:commonmodule.ENS_HealthKind)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.StringValue d = 1;
  if (this->has_d()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *d_);
  }

  // .commonmodule.HealthKind stVal = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->stval() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->stval());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ENS_HealthKind::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:commonmodule.ENS_HealthKind)
  GOOGLE_DCHECK_NE(&from, this);
  const ENS_HealthKind* source =
      ::google::protobuf::DynamicCastToGenerated<ENS_HealthKind>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:commonmodule.ENS_HealthKind)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:commonmodule.ENS_HealthKind)
    MergeFrom(*source);
  }
}

void ENS_HealthKind::MergeFrom(const ENS_HealthKind& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:commonmodule.ENS_HealthKind)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_d()) {
    mutable_d()->::google::protobuf::StringValue::MergeFrom(from.d());
  }
  if (from.stval() != 0) {
    set_stval(from.stval());
  }
}

void ENS_HealthKind::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:commonmodule.ENS_HealthKind)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ENS_HealthKind::CopyFrom(const ENS_HealthKind& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:commonmodule.ENS_HealthKind)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ENS_HealthKind::IsInitialized() const {
  return true;
}

void ENS_HealthKind::Swap(ENS_HealthKind* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ENS_HealthKind::InternalSwap(ENS_HealthKind* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(d_, other->d_);
  swap(stval_, other->stval_);
}

::google::protobuf::Metadata ENS_HealthKind::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return ::file_level_metadata_commonmodule_2fcommonmodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ESS::InitAsDefaultInstance() {
  ::commonmodule::_ESS_default_instance_._instance.get_mutable()->conductingequipment_ = const_cast< ::commonmodule::ConductingEquipment*>(
      ::commonmodule::ConductingEquipment::internal_default_instance());
}
class ESS::HasBitSetters {
 public:
  static const ::commonmodule::ConductingEquipment& conductingequipment(const ESS* msg);
};

const ::commonmodule::ConductingEquipment&
ESS::HasBitSetters::conductingequipment(const ESS* msg) {
  return *msg->conductingequipment_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ESS::kConductingEquipmentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ESS::ESS()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:commonmodule.ESS)
}
ESS::ESS(const ESS& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_conductingequipment()) {
    conductingequipment_ = new ::commonmodule::ConductingEquipment(*from.conductingequipment_);
  } else {
    conductingequipment_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:commonmodule.ESS)
}

void ESS::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ESS_commonmodule_2fcommonmodule_2eproto.base);
  conductingequipment_ = nullptr;
}

ESS::~ESS() {
  // @@protoc_insertion_point(destructor:commonmodule.ESS)
  SharedDtor();
}

void ESS::SharedDtor() {
  if (this != internal_default_instance()) delete conductingequipment_;
}

void ESS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ESS& ESS::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ESS_commonmodule_2fcommonmodule_2eproto.base);
  return *internal_default_instance();
}


void ESS::Clear() {
// @@protoc_insertion_point(message_clear_start:commonmodule.ESS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && conductingequipment_ != nullptr) {
    delete conductingequipment_;
  }
  conductingequipment_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ESS::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ESS*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .commonmodule.ConductingEquipment conductingEquipment = 1 [(.uml.option_parent_message) = true];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::ConductingEquipment::_InternalParse;
        object = msg->mutable_conductingequipment();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ESS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:commonmodule.ESS)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .commonmodule.ConductingEquipment conductingEquipment = 1 [(.uml.option_parent_message) = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_conductingequipment()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:commonmodule.ESS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:commonmodule.ESS)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ESS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:commonmodule.ESS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.ConductingEquipment conductingEquipment = 1 [(.uml.option_parent_message) = true];
  if (this->has_conductingequipment()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::conductingequipment(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:commonmodule.ESS)
}

::google::protobuf::uint8* ESS::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:commonmodule.ESS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.ConductingEquipment conductingEquipment = 1 [(.uml.option_parent_message) = true];
  if (this->has_conductingequipment()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::conductingequipment(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:commonmodule.ESS)
  return target;
}

size_t ESS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:commonmodule.ESS)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .commonmodule.ConductingEquipment conductingEquipment = 1 [(.uml.option_parent_message) = true];
  if (this->has_conductingequipment()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *conductingequipment_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ESS::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:commonmodule.ESS)
  GOOGLE_DCHECK_NE(&from, this);
  const ESS* source =
      ::google::protobuf::DynamicCastToGenerated<ESS>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:commonmodule.ESS)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:commonmodule.ESS)
    MergeFrom(*source);
  }
}

void ESS::MergeFrom(const ESS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:commonmodule.ESS)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_conductingequipment()) {
    mutable_conductingequipment()->::commonmodule::ConductingEquipment::MergeFrom(from.conductingequipment());
  }
}

void ESS::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:commonmodule.ESS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ESS::CopyFrom(const ESS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:commonmodule.ESS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ESS::IsInitialized() const {
  return true;
}

void ESS::Swap(ESS* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ESS::InternalSwap(ESS* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(conductingequipment_, other->conductingequipment_);
}

::google::protobuf::Metadata ESS::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return ::file_level_metadata_commonmodule_2fcommonmodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void EventMessageInfo::InitAsDefaultInstance() {
  ::commonmodule::_EventMessageInfo_default_instance_._instance.get_mutable()->messageinfo_ = const_cast< ::commonmodule::MessageInfo*>(
      ::commonmodule::MessageInfo::internal_default_instance());
}
class EventMessageInfo::HasBitSetters {
 public:
  static const ::commonmodule::MessageInfo& messageinfo(const EventMessageInfo* msg);
};

const ::commonmodule::MessageInfo&
EventMessageInfo::HasBitSetters::messageinfo(const EventMessageInfo* msg) {
  return *msg->messageinfo_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EventMessageInfo::kMessageInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EventMessageInfo::EventMessageInfo()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:commonmodule.EventMessageInfo)
}
EventMessageInfo::EventMessageInfo(const EventMessageInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_messageinfo()) {
    messageinfo_ = new ::commonmodule::MessageInfo(*from.messageinfo_);
  } else {
    messageinfo_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:commonmodule.EventMessageInfo)
}

void EventMessageInfo::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_EventMessageInfo_commonmodule_2fcommonmodule_2eproto.base);
  messageinfo_ = nullptr;
}

EventMessageInfo::~EventMessageInfo() {
  // @@protoc_insertion_point(destructor:commonmodule.EventMessageInfo)
  SharedDtor();
}

void EventMessageInfo::SharedDtor() {
  if (this != internal_default_instance()) delete messageinfo_;
}

void EventMessageInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EventMessageInfo& EventMessageInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_EventMessageInfo_commonmodule_2fcommonmodule_2eproto.base);
  return *internal_default_instance();
}


void EventMessageInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:commonmodule.EventMessageInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && messageinfo_ != nullptr) {
    delete messageinfo_;
  }
  messageinfo_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* EventMessageInfo::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<EventMessageInfo*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .commonmodule.MessageInfo messageInfo = 1 [(.uml.option_parent_message) = true];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::MessageInfo::_InternalParse;
        object = msg->mutable_messageinfo();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool EventMessageInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:commonmodule.EventMessageInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .commonmodule.MessageInfo messageInfo = 1 [(.uml.option_parent_message) = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_messageinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:commonmodule.EventMessageInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:commonmodule.EventMessageInfo)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void EventMessageInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:commonmodule.EventMessageInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.MessageInfo messageInfo = 1 [(.uml.option_parent_message) = true];
  if (this->has_messageinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::messageinfo(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:commonmodule.EventMessageInfo)
}

::google::protobuf::uint8* EventMessageInfo::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:commonmodule.EventMessageInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.MessageInfo messageInfo = 1 [(.uml.option_parent_message) = true];
  if (this->has_messageinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::messageinfo(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:commonmodule.EventMessageInfo)
  return target;
}

size_t EventMessageInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:commonmodule.EventMessageInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .commonmodule.MessageInfo messageInfo = 1 [(.uml.option_parent_message) = true];
  if (this->has_messageinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *messageinfo_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EventMessageInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:commonmodule.EventMessageInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const EventMessageInfo* source =
      ::google::protobuf::DynamicCastToGenerated<EventMessageInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:commonmodule.EventMessageInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:commonmodule.EventMessageInfo)
    MergeFrom(*source);
  }
}

void EventMessageInfo::MergeFrom(const EventMessageInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:commonmodule.EventMessageInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_messageinfo()) {
    mutable_messageinfo()->::commonmodule::MessageInfo::MergeFrom(from.messageinfo());
  }
}

void EventMessageInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:commonmodule.EventMessageInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EventMessageInfo::CopyFrom(const EventMessageInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:commonmodule.EventMessageInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EventMessageInfo::IsInitialized() const {
  return true;
}

void EventMessageInfo::Swap(EventMessageInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EventMessageInfo::InternalSwap(EventMessageInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(messageinfo_, other->messageinfo_);
}

::google::protobuf::Metadata EventMessageInfo::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return ::file_level_metadata_commonmodule_2fcommonmodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void EventValue::InitAsDefaultInstance() {
  ::commonmodule::_EventValue_default_instance_._instance.get_mutable()->identifiedobject_ = const_cast< ::commonmodule::IdentifiedObject*>(
      ::commonmodule::IdentifiedObject::internal_default_instance());
}
class EventValue::HasBitSetters {
 public:
  static const ::commonmodule::IdentifiedObject& identifiedobject(const EventValue* msg);
};

const ::commonmodule::IdentifiedObject&
EventValue::HasBitSetters::identifiedobject(const EventValue* msg) {
  return *msg->identifiedobject_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EventValue::kIdentifiedObjectFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EventValue::EventValue()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:commonmodule.EventValue)
}
EventValue::EventValue(const EventValue& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_identifiedobject()) {
    identifiedobject_ = new ::commonmodule::IdentifiedObject(*from.identifiedobject_);
  } else {
    identifiedobject_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:commonmodule.EventValue)
}

void EventValue::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_EventValue_commonmodule_2fcommonmodule_2eproto.base);
  identifiedobject_ = nullptr;
}

EventValue::~EventValue() {
  // @@protoc_insertion_point(destructor:commonmodule.EventValue)
  SharedDtor();
}

void EventValue::SharedDtor() {
  if (this != internal_default_instance()) delete identifiedobject_;
}

void EventValue::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EventValue& EventValue::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_EventValue_commonmodule_2fcommonmodule_2eproto.base);
  return *internal_default_instance();
}


void EventValue::Clear() {
// @@protoc_insertion_point(message_clear_start:commonmodule.EventValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && identifiedobject_ != nullptr) {
    delete identifiedobject_;
  }
  identifiedobject_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* EventValue::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<EventValue*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .commonmodule.IdentifiedObject identifiedObject = 1 [(.uml.option_parent_message) = true];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::IdentifiedObject::_InternalParse;
        object = msg->mutable_identifiedobject();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool EventValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:commonmodule.EventValue)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .commonmodule.IdentifiedObject identifiedObject = 1 [(.uml.option_parent_message) = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_identifiedobject()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:commonmodule.EventValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:commonmodule.EventValue)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void EventValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:commonmodule.EventValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.IdentifiedObject identifiedObject = 1 [(.uml.option_parent_message) = true];
  if (this->has_identifiedobject()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::identifiedobject(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:commonmodule.EventValue)
}

::google::protobuf::uint8* EventValue::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:commonmodule.EventValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.IdentifiedObject identifiedObject = 1 [(.uml.option_parent_message) = true];
  if (this->has_identifiedobject()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::identifiedobject(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:commonmodule.EventValue)
  return target;
}

size_t EventValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:commonmodule.EventValue)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .commonmodule.IdentifiedObject identifiedObject = 1 [(.uml.option_parent_message) = true];
  if (this->has_identifiedobject()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *identifiedobject_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EventValue::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:commonmodule.EventValue)
  GOOGLE_DCHECK_NE(&from, this);
  const EventValue* source =
      ::google::protobuf::DynamicCastToGenerated<EventValue>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:commonmodule.EventValue)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:commonmodule.EventValue)
    MergeFrom(*source);
  }
}

void EventValue::MergeFrom(const EventValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:commonmodule.EventValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_identifiedobject()) {
    mutable_identifiedobject()->::commonmodule::IdentifiedObject::MergeFrom(from.identifiedobject());
  }
}

void EventValue::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:commonmodule.EventValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EventValue::CopyFrom(const EventValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:commonmodule.EventValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EventValue::IsInitialized() const {
  return true;
}

void EventValue::Swap(EventValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EventValue::InternalSwap(EventValue* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(identifiedobject_, other->identifiedobject_);
}

::google::protobuf::Metadata EventValue::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return ::file_level_metadata_commonmodule_2fcommonmodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ForecastValueSource::InitAsDefaultInstance() {
  ::commonmodule::_ForecastValueSource_default_instance_._instance.get_mutable()->identifiedobject_ = const_cast< ::commonmodule::IdentifiedObject*>(
      ::commonmodule::IdentifiedObject::internal_default_instance());
}
class ForecastValueSource::HasBitSetters {
 public:
  static const ::commonmodule::IdentifiedObject& identifiedobject(const ForecastValueSource* msg);
};

const ::commonmodule::IdentifiedObject&
ForecastValueSource::HasBitSetters::identifiedobject(const ForecastValueSource* msg) {
  return *msg->identifiedobject_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ForecastValueSource::kIdentifiedObjectFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ForecastValueSource::ForecastValueSource()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:commonmodule.ForecastValueSource)
}
ForecastValueSource::ForecastValueSource(const ForecastValueSource& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_identifiedobject()) {
    identifiedobject_ = new ::commonmodule::IdentifiedObject(*from.identifiedobject_);
  } else {
    identifiedobject_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:commonmodule.ForecastValueSource)
}

void ForecastValueSource::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ForecastValueSource_commonmodule_2fcommonmodule_2eproto.base);
  identifiedobject_ = nullptr;
}

ForecastValueSource::~ForecastValueSource() {
  // @@protoc_insertion_point(destructor:commonmodule.ForecastValueSource)
  SharedDtor();
}

void ForecastValueSource::SharedDtor() {
  if (this != internal_default_instance()) delete identifiedobject_;
}

void ForecastValueSource::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ForecastValueSource& ForecastValueSource::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ForecastValueSource_commonmodule_2fcommonmodule_2eproto.base);
  return *internal_default_instance();
}


void ForecastValueSource::Clear() {
// @@protoc_insertion_point(message_clear_start:commonmodule.ForecastValueSource)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && identifiedobject_ != nullptr) {
    delete identifiedobject_;
  }
  identifiedobject_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ForecastValueSource::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ForecastValueSource*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .commonmodule.IdentifiedObject identifiedObject = 1 [(.uml.option_parent_message) = true];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::IdentifiedObject::_InternalParse;
        object = msg->mutable_identifiedobject();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ForecastValueSource::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:commonmodule.ForecastValueSource)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .commonmodule.IdentifiedObject identifiedObject = 1 [(.uml.option_parent_message) = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_identifiedobject()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:commonmodule.ForecastValueSource)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:commonmodule.ForecastValueSource)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ForecastValueSource::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:commonmodule.ForecastValueSource)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.IdentifiedObject identifiedObject = 1 [(.uml.option_parent_message) = true];
  if (this->has_identifiedobject()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::identifiedobject(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:commonmodule.ForecastValueSource)
}

::google::protobuf::uint8* ForecastValueSource::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:commonmodule.ForecastValueSource)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.IdentifiedObject identifiedObject = 1 [(.uml.option_parent_message) = true];
  if (this->has_identifiedobject()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::identifiedobject(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:commonmodule.ForecastValueSource)
  return target;
}

size_t ForecastValueSource::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:commonmodule.ForecastValueSource)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .commonmodule.IdentifiedObject identifiedObject = 1 [(.uml.option_parent_message) = true];
  if (this->has_identifiedobject()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *identifiedobject_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ForecastValueSource::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:commonmodule.ForecastValueSource)
  GOOGLE_DCHECK_NE(&from, this);
  const ForecastValueSource* source =
      ::google::protobuf::DynamicCastToGenerated<ForecastValueSource>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:commonmodule.ForecastValueSource)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:commonmodule.ForecastValueSource)
    MergeFrom(*source);
  }
}

void ForecastValueSource::MergeFrom(const ForecastValueSource& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:commonmodule.ForecastValueSource)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_identifiedobject()) {
    mutable_identifiedobject()->::commonmodule::IdentifiedObject::MergeFrom(from.identifiedobject());
  }
}

void ForecastValueSource::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:commonmodule.ForecastValueSource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ForecastValueSource::CopyFrom(const ForecastValueSource& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:commonmodule.ForecastValueSource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ForecastValueSource::IsInitialized() const {
  return true;
}

void ForecastValueSource::Swap(ForecastValueSource* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ForecastValueSource::InternalSwap(ForecastValueSource* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(identifiedobject_, other->identifiedobject_);
}

::google::protobuf::Metadata ForecastValueSource::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return ::file_level_metadata_commonmodule_2fcommonmodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ForecastIED::InitAsDefaultInstance() {
  ::commonmodule::_ForecastIED_default_instance_._instance.get_mutable()->forecastvaluesource_ = const_cast< ::commonmodule::ForecastValueSource*>(
      ::commonmodule::ForecastValueSource::internal_default_instance());
}
class ForecastIED::HasBitSetters {
 public:
  static const ::commonmodule::ForecastValueSource& forecastvaluesource(const ForecastIED* msg);
};

const ::commonmodule::ForecastValueSource&
ForecastIED::HasBitSetters::forecastvaluesource(const ForecastIED* msg) {
  return *msg->forecastvaluesource_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ForecastIED::kForecastValueSourceFieldNumber;
const int ForecastIED::kSourceApplicationIDFieldNumber;
const int ForecastIED::kSourceDateTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ForecastIED::ForecastIED()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:commonmodule.ForecastIED)
}
ForecastIED::ForecastIED(const ForecastIED& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sourceapplicationid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sourceapplicationid().size() > 0) {
    sourceapplicationid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sourceapplicationid_);
  }
  if (from.has_forecastvaluesource()) {
    forecastvaluesource_ = new ::commonmodule::ForecastValueSource(*from.forecastvaluesource_);
  } else {
    forecastvaluesource_ = nullptr;
  }
  sourcedatetime_ = from.sourcedatetime_;
  // @@protoc_insertion_point(copy_constructor:commonmodule.ForecastIED)
}

void ForecastIED::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ForecastIED_commonmodule_2fcommonmodule_2eproto.base);
  sourceapplicationid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&forecastvaluesource_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sourcedatetime_) -
      reinterpret_cast<char*>(&forecastvaluesource_)) + sizeof(sourcedatetime_));
}

ForecastIED::~ForecastIED() {
  // @@protoc_insertion_point(destructor:commonmodule.ForecastIED)
  SharedDtor();
}

void ForecastIED::SharedDtor() {
  sourceapplicationid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete forecastvaluesource_;
}

void ForecastIED::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ForecastIED& ForecastIED::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ForecastIED_commonmodule_2fcommonmodule_2eproto.base);
  return *internal_default_instance();
}


void ForecastIED::Clear() {
// @@protoc_insertion_point(message_clear_start:commonmodule.ForecastIED)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sourceapplicationid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && forecastvaluesource_ != nullptr) {
    delete forecastvaluesource_;
  }
  forecastvaluesource_ = nullptr;
  sourcedatetime_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ForecastIED::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ForecastIED*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .commonmodule.ForecastValueSource forecastValueSource = 1 [(.uml.option_parent_message) = true];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::ForecastValueSource::_InternalParse;
        object = msg->mutable_forecastvaluesource();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // string sourceApplicationID = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("commonmodule.ForecastIED.sourceApplicationID");
        object = msg->mutable_sourceapplicationid();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int64 sourceDateTime = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_sourcedatetime(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ForecastIED::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:commonmodule.ForecastIED)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .commonmodule.ForecastValueSource forecastValueSource = 1 [(.uml.option_parent_message) = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_forecastvaluesource()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sourceApplicationID = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sourceapplicationid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sourceapplicationid().data(), static_cast<int>(this->sourceapplicationid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "commonmodule.ForecastIED.sourceApplicationID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 sourceDateTime = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &sourcedatetime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:commonmodule.ForecastIED)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:commonmodule.ForecastIED)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ForecastIED::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:commonmodule.ForecastIED)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.ForecastValueSource forecastValueSource = 1 [(.uml.option_parent_message) = true];
  if (this->has_forecastvaluesource()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::forecastvaluesource(this), output);
  }

  // string sourceApplicationID = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->sourceapplicationid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sourceapplicationid().data(), static_cast<int>(this->sourceapplicationid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "commonmodule.ForecastIED.sourceApplicationID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sourceapplicationid(), output);
  }

  // int64 sourceDateTime = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->sourcedatetime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->sourcedatetime(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:commonmodule.ForecastIED)
}

::google::protobuf::uint8* ForecastIED::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:commonmodule.ForecastIED)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.ForecastValueSource forecastValueSource = 1 [(.uml.option_parent_message) = true];
  if (this->has_forecastvaluesource()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::forecastvaluesource(this), target);
  }

  // string sourceApplicationID = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->sourceapplicationid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sourceapplicationid().data(), static_cast<int>(this->sourceapplicationid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "commonmodule.ForecastIED.sourceApplicationID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->sourceapplicationid(), target);
  }

  // int64 sourceDateTime = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->sourcedatetime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->sourcedatetime(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:commonmodule.ForecastIED)
  return target;
}

size_t ForecastIED::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:commonmodule.ForecastIED)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string sourceApplicationID = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->sourceapplicationid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sourceapplicationid());
  }

  // .commonmodule.ForecastValueSource forecastValueSource = 1 [(.uml.option_parent_message) = true];
  if (this->has_forecastvaluesource()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *forecastvaluesource_);
  }

  // int64 sourceDateTime = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->sourcedatetime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->sourcedatetime());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ForecastIED::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:commonmodule.ForecastIED)
  GOOGLE_DCHECK_NE(&from, this);
  const ForecastIED* source =
      ::google::protobuf::DynamicCastToGenerated<ForecastIED>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:commonmodule.ForecastIED)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:commonmodule.ForecastIED)
    MergeFrom(*source);
  }
}

void ForecastIED::MergeFrom(const ForecastIED& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:commonmodule.ForecastIED)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sourceapplicationid().size() > 0) {

    sourceapplicationid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sourceapplicationid_);
  }
  if (from.has_forecastvaluesource()) {
    mutable_forecastvaluesource()->::commonmodule::ForecastValueSource::MergeFrom(from.forecastvaluesource());
  }
  if (from.sourcedatetime() != 0) {
    set_sourcedatetime(from.sourcedatetime());
  }
}

void ForecastIED::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:commonmodule.ForecastIED)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ForecastIED::CopyFrom(const ForecastIED& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:commonmodule.ForecastIED)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ForecastIED::IsInitialized() const {
  return true;
}

void ForecastIED::Swap(ForecastIED* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ForecastIED::InternalSwap(ForecastIED* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  sourceapplicationid_.Swap(&other->sourceapplicationid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(forecastvaluesource_, other->forecastvaluesource_);
  swap(sourcedatetime_, other->sourcedatetime_);
}

::google::protobuf::Metadata ForecastIED::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return ::file_level_metadata_commonmodule_2fcommonmodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ForecastValue::InitAsDefaultInstance() {
  ::commonmodule::_ForecastValue_default_instance_._instance.get_mutable()->identifiedobject_ = const_cast< ::commonmodule::IdentifiedObject*>(
      ::commonmodule::IdentifiedObject::internal_default_instance());
}
class ForecastValue::HasBitSetters {
 public:
  static const ::commonmodule::IdentifiedObject& identifiedobject(const ForecastValue* msg);
};

const ::commonmodule::IdentifiedObject&
ForecastValue::HasBitSetters::identifiedobject(const ForecastValue* msg) {
  return *msg->identifiedobject_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ForecastValue::kIdentifiedObjectFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ForecastValue::ForecastValue()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:commonmodule.ForecastValue)
}
ForecastValue::ForecastValue(const ForecastValue& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_identifiedobject()) {
    identifiedobject_ = new ::commonmodule::IdentifiedObject(*from.identifiedobject_);
  } else {
    identifiedobject_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:commonmodule.ForecastValue)
}

void ForecastValue::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ForecastValue_commonmodule_2fcommonmodule_2eproto.base);
  identifiedobject_ = nullptr;
}

ForecastValue::~ForecastValue() {
  // @@protoc_insertion_point(destructor:commonmodule.ForecastValue)
  SharedDtor();
}

void ForecastValue::SharedDtor() {
  if (this != internal_default_instance()) delete identifiedobject_;
}

void ForecastValue::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ForecastValue& ForecastValue::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ForecastValue_commonmodule_2fcommonmodule_2eproto.base);
  return *internal_default_instance();
}


void ForecastValue::Clear() {
// @@protoc_insertion_point(message_clear_start:commonmodule.ForecastValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && identifiedobject_ != nullptr) {
    delete identifiedobject_;
  }
  identifiedobject_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ForecastValue::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ForecastValue*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .commonmodule.IdentifiedObject identifiedObject = 1 [(.uml.option_parent_message) = true];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::IdentifiedObject::_InternalParse;
        object = msg->mutable_identifiedobject();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ForecastValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:commonmodule.ForecastValue)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .commonmodule.IdentifiedObject identifiedObject = 1 [(.uml.option_parent_message) = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_identifiedobject()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:commonmodule.ForecastValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:commonmodule.ForecastValue)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ForecastValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:commonmodule.ForecastValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.IdentifiedObject identifiedObject = 1 [(.uml.option_parent_message) = true];
  if (this->has_identifiedobject()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::identifiedobject(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:commonmodule.ForecastValue)
}

::google::protobuf::uint8* ForecastValue::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:commonmodule.ForecastValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.IdentifiedObject identifiedObject = 1 [(.uml.option_parent_message) = true];
  if (this->has_identifiedobject()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::identifiedobject(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:commonmodule.ForecastValue)
  return target;
}

size_t ForecastValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:commonmodule.ForecastValue)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .commonmodule.IdentifiedObject identifiedObject = 1 [(.uml.option_parent_message) = true];
  if (this->has_identifiedobject()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *identifiedobject_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ForecastValue::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:commonmodule.ForecastValue)
  GOOGLE_DCHECK_NE(&from, this);
  const ForecastValue* source =
      ::google::protobuf::DynamicCastToGenerated<ForecastValue>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:commonmodule.ForecastValue)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:commonmodule.ForecastValue)
    MergeFrom(*source);
  }
}

void ForecastValue::MergeFrom(const ForecastValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:commonmodule.ForecastValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_identifiedobject()) {
    mutable_identifiedobject()->::commonmodule::IdentifiedObject::MergeFrom(from.identifiedobject());
  }
}

void ForecastValue::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:commonmodule.ForecastValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ForecastValue::CopyFrom(const ForecastValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:commonmodule.ForecastValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ForecastValue::IsInitialized() const {
  return true;
}

void ForecastValue::Swap(ForecastValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ForecastValue::InternalSwap(ForecastValue* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(identifiedobject_, other->identifiedobject_);
}

::google::protobuf::Metadata ForecastValue::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return ::file_level_metadata_commonmodule_2fcommonmodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void IED::InitAsDefaultInstance() {
  ::commonmodule::_IED_default_instance_._instance.get_mutable()->identifiedobject_ = const_cast< ::commonmodule::IdentifiedObject*>(
      ::commonmodule::IdentifiedObject::internal_default_instance());
}
class IED::HasBitSetters {
 public:
  static const ::commonmodule::IdentifiedObject& identifiedobject(const IED* msg);
};

const ::commonmodule::IdentifiedObject&
IED::HasBitSetters::identifiedobject(const IED* msg) {
  return *msg->identifiedobject_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IED::kIdentifiedObjectFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IED::IED()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:commonmodule.IED)
}
IED::IED(const IED& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_identifiedobject()) {
    identifiedobject_ = new ::commonmodule::IdentifiedObject(*from.identifiedobject_);
  } else {
    identifiedobject_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:commonmodule.IED)
}

void IED::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_IED_commonmodule_2fcommonmodule_2eproto.base);
  identifiedobject_ = nullptr;
}

IED::~IED() {
  // @@protoc_insertion_point(destructor:commonmodule.IED)
  SharedDtor();
}

void IED::SharedDtor() {
  if (this != internal_default_instance()) delete identifiedobject_;
}

void IED::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const IED& IED::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_IED_commonmodule_2fcommonmodule_2eproto.base);
  return *internal_default_instance();
}


void IED::Clear() {
// @@protoc_insertion_point(message_clear_start:commonmodule.IED)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && identifiedobject_ != nullptr) {
    delete identifiedobject_;
  }
  identifiedobject_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* IED::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<IED*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .commonmodule.IdentifiedObject identifiedObject = 1 [(.uml.option_parent_message) = true];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::IdentifiedObject::_InternalParse;
        object = msg->mutable_identifiedobject();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool IED::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:commonmodule.IED)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .commonmodule.IdentifiedObject identifiedObject = 1 [(.uml.option_parent_message) = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_identifiedobject()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:commonmodule.IED)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:commonmodule.IED)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void IED::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:commonmodule.IED)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.IdentifiedObject identifiedObject = 1 [(.uml.option_parent_message) = true];
  if (this->has_identifiedobject()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::identifiedobject(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:commonmodule.IED)
}

::google::protobuf::uint8* IED::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:commonmodule.IED)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.IdentifiedObject identifiedObject = 1 [(.uml.option_parent_message) = true];
  if (this->has_identifiedobject()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::identifiedobject(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:commonmodule.IED)
  return target;
}

size_t IED::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:commonmodule.IED)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .commonmodule.IdentifiedObject identifiedObject = 1 [(.uml.option_parent_message) = true];
  if (this->has_identifiedobject()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *identifiedobject_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IED::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:commonmodule.IED)
  GOOGLE_DCHECK_NE(&from, this);
  const IED* source =
      ::google::protobuf::DynamicCastToGenerated<IED>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:commonmodule.IED)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:commonmodule.IED)
    MergeFrom(*source);
  }
}

void IED::MergeFrom(const IED& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:commonmodule.IED)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_identifiedobject()) {
    mutable_identifiedobject()->::commonmodule::IdentifiedObject::MergeFrom(from.identifiedobject());
  }
}

void IED::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:commonmodule.IED)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IED::CopyFrom(const IED& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:commonmodule.IED)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IED::IsInitialized() const {
  return true;
}

void IED::Swap(IED* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IED::InternalSwap(IED* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(identifiedobject_, other->identifiedobject_);
}

::google::protobuf::Metadata IED::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return ::file_level_metadata_commonmodule_2fcommonmodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void StatusINS::InitAsDefaultInstance() {
  ::commonmodule::_StatusINS_default_instance_._instance.get_mutable()->q_ = const_cast< ::commonmodule::Quality*>(
      ::commonmodule::Quality::internal_default_instance());
  ::commonmodule::_StatusINS_default_instance_._instance.get_mutable()->t_ = const_cast< ::commonmodule::Timestamp*>(
      ::commonmodule::Timestamp::internal_default_instance());
  ::commonmodule::_StatusINS_default_instance_._instance.get_mutable()->units_ = const_cast< ::commonmodule::Unit*>(
      ::commonmodule::Unit::internal_default_instance());
}
class StatusINS::HasBitSetters {
 public:
  static const ::commonmodule::Quality& q(const StatusINS* msg);
  static const ::commonmodule::Timestamp& t(const StatusINS* msg);
  static const ::commonmodule::Unit& units(const StatusINS* msg);
};

const ::commonmodule::Quality&
StatusINS::HasBitSetters::q(const StatusINS* msg) {
  return *msg->q_;
}
const ::commonmodule::Timestamp&
StatusINS::HasBitSetters::t(const StatusINS* msg) {
  return *msg->t_;
}
const ::commonmodule::Unit&
StatusINS::HasBitSetters::units(const StatusINS* msg) {
  return *msg->units_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StatusINS::kQFieldNumber;
const int StatusINS::kStValFieldNumber;
const int StatusINS::kTFieldNumber;
const int StatusINS::kUnitsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StatusINS::StatusINS()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:commonmodule.StatusINS)
}
StatusINS::StatusINS(const StatusINS& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_q()) {
    q_ = new ::commonmodule::Quality(*from.q_);
  } else {
    q_ = nullptr;
  }
  if (from.has_t()) {
    t_ = new ::commonmodule::Timestamp(*from.t_);
  } else {
    t_ = nullptr;
  }
  if (from.has_units()) {
    units_ = new ::commonmodule::Unit(*from.units_);
  } else {
    units_ = nullptr;
  }
  stval_ = from.stval_;
  // @@protoc_insertion_point(copy_constructor:commonmodule.StatusINS)
}

void StatusINS::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_StatusINS_commonmodule_2fcommonmodule_2eproto.base);
  ::memset(&q_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&stval_) -
      reinterpret_cast<char*>(&q_)) + sizeof(stval_));
}

StatusINS::~StatusINS() {
  // @@protoc_insertion_point(destructor:commonmodule.StatusINS)
  SharedDtor();
}

void StatusINS::SharedDtor() {
  if (this != internal_default_instance()) delete q_;
  if (this != internal_default_instance()) delete t_;
  if (this != internal_default_instance()) delete units_;
}

void StatusINS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StatusINS& StatusINS::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_StatusINS_commonmodule_2fcommonmodule_2eproto.base);
  return *internal_default_instance();
}


void StatusINS::Clear() {
// @@protoc_insertion_point(message_clear_start:commonmodule.StatusINS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && q_ != nullptr) {
    delete q_;
  }
  q_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && t_ != nullptr) {
    delete t_;
  }
  t_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && units_ != nullptr) {
    delete units_;
  }
  units_ = nullptr;
  stval_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* StatusINS::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<StatusINS*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .commonmodule.Quality q = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::Quality::_InternalParse;
        object = msg->mutable_q();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // int32 stVal = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_stval(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .commonmodule.Timestamp t = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::Timestamp::_InternalParse;
        object = msg->mutable_t();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .commonmodule.Unit units = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::Unit::_InternalParse;
        object = msg->mutable_units();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool StatusINS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:commonmodule.StatusINS)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .commonmodule.Quality q = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_q()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 stVal = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &stval_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.Timestamp t = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_t()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.Unit units = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_units()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:commonmodule.StatusINS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:commonmodule.StatusINS)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void StatusINS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:commonmodule.StatusINS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.Quality q = 1;
  if (this->has_q()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::q(this), output);
  }

  // int32 stVal = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->stval() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->stval(), output);
  }

  // .commonmodule.Timestamp t = 3;
  if (this->has_t()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::t(this), output);
  }

  // .commonmodule.Unit units = 4;
  if (this->has_units()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::units(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:commonmodule.StatusINS)
}

::google::protobuf::uint8* StatusINS::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:commonmodule.StatusINS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.Quality q = 1;
  if (this->has_q()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::q(this), target);
  }

  // int32 stVal = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->stval() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->stval(), target);
  }

  // .commonmodule.Timestamp t = 3;
  if (this->has_t()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::t(this), target);
  }

  // .commonmodule.Unit units = 4;
  if (this->has_units()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::units(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:commonmodule.StatusINS)
  return target;
}

size_t StatusINS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:commonmodule.StatusINS)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .commonmodule.Quality q = 1;
  if (this->has_q()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *q_);
  }

  // .commonmodule.Timestamp t = 3;
  if (this->has_t()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *t_);
  }

  // .commonmodule.Unit units = 4;
  if (this->has_units()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *units_);
  }

  // int32 stVal = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->stval() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->stval());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StatusINS::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:commonmodule.StatusINS)
  GOOGLE_DCHECK_NE(&from, this);
  const StatusINS* source =
      ::google::protobuf::DynamicCastToGenerated<StatusINS>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:commonmodule.StatusINS)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:commonmodule.StatusINS)
    MergeFrom(*source);
  }
}

void StatusINS::MergeFrom(const StatusINS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:commonmodule.StatusINS)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_q()) {
    mutable_q()->::commonmodule::Quality::MergeFrom(from.q());
  }
  if (from.has_t()) {
    mutable_t()->::commonmodule::Timestamp::MergeFrom(from.t());
  }
  if (from.has_units()) {
    mutable_units()->::commonmodule::Unit::MergeFrom(from.units());
  }
  if (from.stval() != 0) {
    set_stval(from.stval());
  }
}

void StatusINS::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:commonmodule.StatusINS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StatusINS::CopyFrom(const StatusINS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:commonmodule.StatusINS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StatusINS::IsInitialized() const {
  return true;
}

void StatusINS::Swap(StatusINS* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StatusINS::InternalSwap(StatusINS* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(q_, other->q_);
  swap(t_, other->t_);
  swap(units_, other->units_);
  swap(stval_, other->stval_);
}

::google::protobuf::Metadata StatusINS::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return ::file_level_metadata_commonmodule_2fcommonmodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void IntegerStatusGGIO::InitAsDefaultInstance() {
  ::commonmodule::_IntegerStatusGGIO_default_instance_._instance.get_mutable()->logicalnode_ = const_cast< ::commonmodule::LogicalNode*>(
      ::commonmodule::LogicalNode::internal_default_instance());
  ::commonmodule::_IntegerStatusGGIO_default_instance_._instance.get_mutable()->intin_ = const_cast< ::commonmodule::StatusINS*>(
      ::commonmodule::StatusINS::internal_default_instance());
  ::commonmodule::_IntegerStatusGGIO_default_instance_._instance.get_mutable()->phase_ = const_cast< ::commonmodule::Optional_PhaseCodeKind*>(
      ::commonmodule::Optional_PhaseCodeKind::internal_default_instance());
}
class IntegerStatusGGIO::HasBitSetters {
 public:
  static const ::commonmodule::LogicalNode& logicalnode(const IntegerStatusGGIO* msg);
  static const ::commonmodule::StatusINS& intin(const IntegerStatusGGIO* msg);
  static const ::commonmodule::Optional_PhaseCodeKind& phase(const IntegerStatusGGIO* msg);
};

const ::commonmodule::LogicalNode&
IntegerStatusGGIO::HasBitSetters::logicalnode(const IntegerStatusGGIO* msg) {
  return *msg->logicalnode_;
}
const ::commonmodule::StatusINS&
IntegerStatusGGIO::HasBitSetters::intin(const IntegerStatusGGIO* msg) {
  return *msg->intin_;
}
const ::commonmodule::Optional_PhaseCodeKind&
IntegerStatusGGIO::HasBitSetters::phase(const IntegerStatusGGIO* msg) {
  return *msg->phase_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IntegerStatusGGIO::kLogicalNodeFieldNumber;
const int IntegerStatusGGIO::kIntInFieldNumber;
const int IntegerStatusGGIO::kPhaseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IntegerStatusGGIO::IntegerStatusGGIO()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:commonmodule.IntegerStatusGGIO)
}
IntegerStatusGGIO::IntegerStatusGGIO(const IntegerStatusGGIO& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_logicalnode()) {
    logicalnode_ = new ::commonmodule::LogicalNode(*from.logicalnode_);
  } else {
    logicalnode_ = nullptr;
  }
  if (from.has_intin()) {
    intin_ = new ::commonmodule::StatusINS(*from.intin_);
  } else {
    intin_ = nullptr;
  }
  if (from.has_phase()) {
    phase_ = new ::commonmodule::Optional_PhaseCodeKind(*from.phase_);
  } else {
    phase_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:commonmodule.IntegerStatusGGIO)
}

void IntegerStatusGGIO::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_IntegerStatusGGIO_commonmodule_2fcommonmodule_2eproto.base);
  ::memset(&logicalnode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&phase_) -
      reinterpret_cast<char*>(&logicalnode_)) + sizeof(phase_));
}

IntegerStatusGGIO::~IntegerStatusGGIO() {
  // @@protoc_insertion_point(destructor:commonmodule.IntegerStatusGGIO)
  SharedDtor();
}

void IntegerStatusGGIO::SharedDtor() {
  if (this != internal_default_instance()) delete logicalnode_;
  if (this != internal_default_instance()) delete intin_;
  if (this != internal_default_instance()) delete phase_;
}

void IntegerStatusGGIO::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const IntegerStatusGGIO& IntegerStatusGGIO::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_IntegerStatusGGIO_commonmodule_2fcommonmodule_2eproto.base);
  return *internal_default_instance();
}


void IntegerStatusGGIO::Clear() {
// @@protoc_insertion_point(message_clear_start:commonmodule.IntegerStatusGGIO)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && logicalnode_ != nullptr) {
    delete logicalnode_;
  }
  logicalnode_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && intin_ != nullptr) {
    delete intin_;
  }
  intin_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && phase_ != nullptr) {
    delete phase_;
  }
  phase_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* IntegerStatusGGIO::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<IntegerStatusGGIO*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .commonmodule.LogicalNode logicalNode = 1 [(.uml.option_parent_message) = true];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::LogicalNode::_InternalParse;
        object = msg->mutable_logicalnode();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .commonmodule.StatusINS IntIn = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::StatusINS::_InternalParse;
        object = msg->mutable_intin();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .commonmodule.Optional_PhaseCodeKind Phase = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::Optional_PhaseCodeKind::_InternalParse;
        object = msg->mutable_phase();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool IntegerStatusGGIO::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:commonmodule.IntegerStatusGGIO)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .commonmodule.LogicalNode logicalNode = 1 [(.uml.option_parent_message) = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_logicalnode()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.StatusINS IntIn = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_intin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.Optional_PhaseCodeKind Phase = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_phase()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:commonmodule.IntegerStatusGGIO)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:commonmodule.IntegerStatusGGIO)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void IntegerStatusGGIO::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:commonmodule.IntegerStatusGGIO)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.LogicalNode logicalNode = 1 [(.uml.option_parent_message) = true];
  if (this->has_logicalnode()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::logicalnode(this), output);
  }

  // .commonmodule.StatusINS IntIn = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_intin()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::intin(this), output);
  }

  // .commonmodule.Optional_PhaseCodeKind Phase = 3;
  if (this->has_phase()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::phase(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:commonmodule.IntegerStatusGGIO)
}

::google::protobuf::uint8* IntegerStatusGGIO::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:commonmodule.IntegerStatusGGIO)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.LogicalNode logicalNode = 1 [(.uml.option_parent_message) = true];
  if (this->has_logicalnode()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::logicalnode(this), target);
  }

  // .commonmodule.StatusINS IntIn = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_intin()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::intin(this), target);
  }

  // .commonmodule.Optional_PhaseCodeKind Phase = 3;
  if (this->has_phase()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::phase(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:commonmodule.IntegerStatusGGIO)
  return target;
}

size_t IntegerStatusGGIO::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:commonmodule.IntegerStatusGGIO)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .commonmodule.LogicalNode logicalNode = 1 [(.uml.option_parent_message) = true];
  if (this->has_logicalnode()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *logicalnode_);
  }

  // .commonmodule.StatusINS IntIn = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_intin()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *intin_);
  }

  // .commonmodule.Optional_PhaseCodeKind Phase = 3;
  if (this->has_phase()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *phase_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IntegerStatusGGIO::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:commonmodule.IntegerStatusGGIO)
  GOOGLE_DCHECK_NE(&from, this);
  const IntegerStatusGGIO* source =
      ::google::protobuf::DynamicCastToGenerated<IntegerStatusGGIO>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:commonmodule.IntegerStatusGGIO)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:commonmodule.IntegerStatusGGIO)
    MergeFrom(*source);
  }
}

void IntegerStatusGGIO::MergeFrom(const IntegerStatusGGIO& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:commonmodule.IntegerStatusGGIO)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_logicalnode()) {
    mutable_logicalnode()->::commonmodule::LogicalNode::MergeFrom(from.logicalnode());
  }
  if (from.has_intin()) {
    mutable_intin()->::commonmodule::StatusINS::MergeFrom(from.intin());
  }
  if (from.has_phase()) {
    mutable_phase()->::commonmodule::Optional_PhaseCodeKind::MergeFrom(from.phase());
  }
}

void IntegerStatusGGIO::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:commonmodule.IntegerStatusGGIO)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IntegerStatusGGIO::CopyFrom(const IntegerStatusGGIO& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:commonmodule.IntegerStatusGGIO)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IntegerStatusGGIO::IsInitialized() const {
  return true;
}

void IntegerStatusGGIO::Swap(IntegerStatusGGIO* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IntegerStatusGGIO::InternalSwap(IntegerStatusGGIO* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(logicalnode_, other->logicalnode_);
  swap(intin_, other->intin_);
  swap(phase_, other->phase_);
}

::google::protobuf::Metadata IntegerStatusGGIO::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return ::file_level_metadata_commonmodule_2fcommonmodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void LogicalNodeForEventAndStatus::InitAsDefaultInstance() {
  ::commonmodule::_LogicalNodeForEventAndStatus_default_instance_._instance.get_mutable()->logicalnode_ = const_cast< ::commonmodule::LogicalNode*>(
      ::commonmodule::LogicalNode::internal_default_instance());
  ::commonmodule::_LogicalNodeForEventAndStatus_default_instance_._instance.get_mutable()->beh_ = const_cast< ::commonmodule::ENS_BehaviourModeKind*>(
      ::commonmodule::ENS_BehaviourModeKind::internal_default_instance());
  ::commonmodule::_LogicalNodeForEventAndStatus_default_instance_._instance.get_mutable()->eehealth_ = const_cast< ::commonmodule::ENS_HealthKind*>(
      ::commonmodule::ENS_HealthKind::internal_default_instance());
}
class LogicalNodeForEventAndStatus::HasBitSetters {
 public:
  static const ::commonmodule::LogicalNode& logicalnode(const LogicalNodeForEventAndStatus* msg);
  static const ::commonmodule::ENS_BehaviourModeKind& beh(const LogicalNodeForEventAndStatus* msg);
  static const ::commonmodule::ENS_HealthKind& eehealth(const LogicalNodeForEventAndStatus* msg);
};

const ::commonmodule::LogicalNode&
LogicalNodeForEventAndStatus::HasBitSetters::logicalnode(const LogicalNodeForEventAndStatus* msg) {
  return *msg->logicalnode_;
}
const ::commonmodule::ENS_BehaviourModeKind&
LogicalNodeForEventAndStatus::HasBitSetters::beh(const LogicalNodeForEventAndStatus* msg) {
  return *msg->beh_;
}
const ::commonmodule::ENS_HealthKind&
LogicalNodeForEventAndStatus::HasBitSetters::eehealth(const LogicalNodeForEventAndStatus* msg) {
  return *msg->eehealth_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LogicalNodeForEventAndStatus::kLogicalNodeFieldNumber;
const int LogicalNodeForEventAndStatus::kBehFieldNumber;
const int LogicalNodeForEventAndStatus::kEEHealthFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LogicalNodeForEventAndStatus::LogicalNodeForEventAndStatus()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:commonmodule.LogicalNodeForEventAndStatus)
}
LogicalNodeForEventAndStatus::LogicalNodeForEventAndStatus(const LogicalNodeForEventAndStatus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_logicalnode()) {
    logicalnode_ = new ::commonmodule::LogicalNode(*from.logicalnode_);
  } else {
    logicalnode_ = nullptr;
  }
  if (from.has_beh()) {
    beh_ = new ::commonmodule::ENS_BehaviourModeKind(*from.beh_);
  } else {
    beh_ = nullptr;
  }
  if (from.has_eehealth()) {
    eehealth_ = new ::commonmodule::ENS_HealthKind(*from.eehealth_);
  } else {
    eehealth_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:commonmodule.LogicalNodeForEventAndStatus)
}

void LogicalNodeForEventAndStatus::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_LogicalNodeForEventAndStatus_commonmodule_2fcommonmodule_2eproto.base);
  ::memset(&logicalnode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&eehealth_) -
      reinterpret_cast<char*>(&logicalnode_)) + sizeof(eehealth_));
}

LogicalNodeForEventAndStatus::~LogicalNodeForEventAndStatus() {
  // @@protoc_insertion_point(destructor:commonmodule.LogicalNodeForEventAndStatus)
  SharedDtor();
}

void LogicalNodeForEventAndStatus::SharedDtor() {
  if (this != internal_default_instance()) delete logicalnode_;
  if (this != internal_default_instance()) delete beh_;
  if (this != internal_default_instance()) delete eehealth_;
}

void LogicalNodeForEventAndStatus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LogicalNodeForEventAndStatus& LogicalNodeForEventAndStatus::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_LogicalNodeForEventAndStatus_commonmodule_2fcommonmodule_2eproto.base);
  return *internal_default_instance();
}


void LogicalNodeForEventAndStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:commonmodule.LogicalNodeForEventAndStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && logicalnode_ != nullptr) {
    delete logicalnode_;
  }
  logicalnode_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && beh_ != nullptr) {
    delete beh_;
  }
  beh_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && eehealth_ != nullptr) {
    delete eehealth_;
  }
  eehealth_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* LogicalNodeForEventAndStatus::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<LogicalNodeForEventAndStatus*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .commonmodule.LogicalNode logicalNode = 1 [(.uml.option_parent_message) = true];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::LogicalNode::_InternalParse;
        object = msg->mutable_logicalnode();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .commonmodule.ENS_BehaviourModeKind Beh = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::ENS_BehaviourModeKind::_InternalParse;
        object = msg->mutable_beh();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .commonmodule.ENS_HealthKind EEHealth = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::ENS_HealthKind::_InternalParse;
        object = msg->mutable_eehealth();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool LogicalNodeForEventAndStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:commonmodule.LogicalNodeForEventAndStatus)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .commonmodule.LogicalNode logicalNode = 1 [(.uml.option_parent_message) = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_logicalnode()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.ENS_BehaviourModeKind Beh = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_beh()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.ENS_HealthKind EEHealth = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_eehealth()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:commonmodule.LogicalNodeForEventAndStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:commonmodule.LogicalNodeForEventAndStatus)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void LogicalNodeForEventAndStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:commonmodule.LogicalNodeForEventAndStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.LogicalNode logicalNode = 1 [(.uml.option_parent_message) = true];
  if (this->has_logicalnode()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::logicalnode(this), output);
  }

  // .commonmodule.ENS_BehaviourModeKind Beh = 2;
  if (this->has_beh()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::beh(this), output);
  }

  // .commonmodule.ENS_HealthKind EEHealth = 3;
  if (this->has_eehealth()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::eehealth(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:commonmodule.LogicalNodeForEventAndStatus)
}

::google::protobuf::uint8* LogicalNodeForEventAndStatus::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:commonmodule.LogicalNodeForEventAndStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.LogicalNode logicalNode = 1 [(.uml.option_parent_message) = true];
  if (this->has_logicalnode()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::logicalnode(this), target);
  }

  // .commonmodule.ENS_BehaviourModeKind Beh = 2;
  if (this->has_beh()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::beh(this), target);
  }

  // .commonmodule.ENS_HealthKind EEHealth = 3;
  if (this->has_eehealth()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::eehealth(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:commonmodule.LogicalNodeForEventAndStatus)
  return target;
}

size_t LogicalNodeForEventAndStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:commonmodule.LogicalNodeForEventAndStatus)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .commonmodule.LogicalNode logicalNode = 1 [(.uml.option_parent_message) = true];
  if (this->has_logicalnode()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *logicalnode_);
  }

  // .commonmodule.ENS_BehaviourModeKind Beh = 2;
  if (this->has_beh()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *beh_);
  }

  // .commonmodule.ENS_HealthKind EEHealth = 3;
  if (this->has_eehealth()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *eehealth_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LogicalNodeForEventAndStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:commonmodule.LogicalNodeForEventAndStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const LogicalNodeForEventAndStatus* source =
      ::google::protobuf::DynamicCastToGenerated<LogicalNodeForEventAndStatus>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:commonmodule.LogicalNodeForEventAndStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:commonmodule.LogicalNodeForEventAndStatus)
    MergeFrom(*source);
  }
}

void LogicalNodeForEventAndStatus::MergeFrom(const LogicalNodeForEventAndStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:commonmodule.LogicalNodeForEventAndStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_logicalnode()) {
    mutable_logicalnode()->::commonmodule::LogicalNode::MergeFrom(from.logicalnode());
  }
  if (from.has_beh()) {
    mutable_beh()->::commonmodule::ENS_BehaviourModeKind::MergeFrom(from.beh());
  }
  if (from.has_eehealth()) {
    mutable_eehealth()->::commonmodule::ENS_HealthKind::MergeFrom(from.eehealth());
  }
}

void LogicalNodeForEventAndStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:commonmodule.LogicalNodeForEventAndStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LogicalNodeForEventAndStatus::CopyFrom(const LogicalNodeForEventAndStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:commonmodule.LogicalNodeForEventAndStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogicalNodeForEventAndStatus::IsInitialized() const {
  return true;
}

void LogicalNodeForEventAndStatus::Swap(LogicalNodeForEventAndStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LogicalNodeForEventAndStatus::InternalSwap(LogicalNodeForEventAndStatus* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(logicalnode_, other->logicalnode_);
  swap(beh_, other->beh_);
  swap(eehealth_, other->eehealth_);
}

::google::protobuf::Metadata LogicalNodeForEventAndStatus::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return ::file_level_metadata_commonmodule_2fcommonmodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MeasurementValue::InitAsDefaultInstance() {
  ::commonmodule::_MeasurementValue_default_instance_._instance.get_mutable()->identifiedobject_ = const_cast< ::commonmodule::IdentifiedObject*>(
      ::commonmodule::IdentifiedObject::internal_default_instance());
}
class MeasurementValue::HasBitSetters {
 public:
  static const ::commonmodule::IdentifiedObject& identifiedobject(const MeasurementValue* msg);
};

const ::commonmodule::IdentifiedObject&
MeasurementValue::HasBitSetters::identifiedobject(const MeasurementValue* msg) {
  return *msg->identifiedobject_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MeasurementValue::kIdentifiedObjectFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MeasurementValue::MeasurementValue()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:commonmodule.MeasurementValue)
}
MeasurementValue::MeasurementValue(const MeasurementValue& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_identifiedobject()) {
    identifiedobject_ = new ::commonmodule::IdentifiedObject(*from.identifiedobject_);
  } else {
    identifiedobject_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:commonmodule.MeasurementValue)
}

void MeasurementValue::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MeasurementValue_commonmodule_2fcommonmodule_2eproto.base);
  identifiedobject_ = nullptr;
}

MeasurementValue::~MeasurementValue() {
  // @@protoc_insertion_point(destructor:commonmodule.MeasurementValue)
  SharedDtor();
}

void MeasurementValue::SharedDtor() {
  if (this != internal_default_instance()) delete identifiedobject_;
}

void MeasurementValue::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MeasurementValue& MeasurementValue::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MeasurementValue_commonmodule_2fcommonmodule_2eproto.base);
  return *internal_default_instance();
}


void MeasurementValue::Clear() {
// @@protoc_insertion_point(message_clear_start:commonmodule.MeasurementValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && identifiedobject_ != nullptr) {
    delete identifiedobject_;
  }
  identifiedobject_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MeasurementValue::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MeasurementValue*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .commonmodule.IdentifiedObject identifiedObject = 1 [(.uml.option_parent_message) = true];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::IdentifiedObject::_InternalParse;
        object = msg->mutable_identifiedobject();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MeasurementValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:commonmodule.MeasurementValue)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .commonmodule.IdentifiedObject identifiedObject = 1 [(.uml.option_parent_message) = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_identifiedobject()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:commonmodule.MeasurementValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:commonmodule.MeasurementValue)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MeasurementValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:commonmodule.MeasurementValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.IdentifiedObject identifiedObject = 1 [(.uml.option_parent_message) = true];
  if (this->has_identifiedobject()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::identifiedobject(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:commonmodule.MeasurementValue)
}

::google::protobuf::uint8* MeasurementValue::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:commonmodule.MeasurementValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.IdentifiedObject identifiedObject = 1 [(.uml.option_parent_message) = true];
  if (this->has_identifiedobject()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::identifiedobject(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:commonmodule.MeasurementValue)
  return target;
}

size_t MeasurementValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:commonmodule.MeasurementValue)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .commonmodule.IdentifiedObject identifiedObject = 1 [(.uml.option_parent_message) = true];
  if (this->has_identifiedobject()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *identifiedobject_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MeasurementValue::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:commonmodule.MeasurementValue)
  GOOGLE_DCHECK_NE(&from, this);
  const MeasurementValue* source =
      ::google::protobuf::DynamicCastToGenerated<MeasurementValue>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:commonmodule.MeasurementValue)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:commonmodule.MeasurementValue)
    MergeFrom(*source);
  }
}

void MeasurementValue::MergeFrom(const MeasurementValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:commonmodule.MeasurementValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_identifiedobject()) {
    mutable_identifiedobject()->::commonmodule::IdentifiedObject::MergeFrom(from.identifiedobject());
  }
}

void MeasurementValue::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:commonmodule.MeasurementValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MeasurementValue::CopyFrom(const MeasurementValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:commonmodule.MeasurementValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MeasurementValue::IsInitialized() const {
  return true;
}

void MeasurementValue::Swap(MeasurementValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MeasurementValue::InternalSwap(MeasurementValue* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(identifiedobject_, other->identifiedobject_);
}

::google::protobuf::Metadata MeasurementValue::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return ::file_level_metadata_commonmodule_2fcommonmodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Meter::InitAsDefaultInstance() {
  ::commonmodule::_Meter_default_instance_._instance.get_mutable()->conductingequipment_ = const_cast< ::commonmodule::ConductingEquipment*>(
      ::commonmodule::ConductingEquipment::internal_default_instance());
}
class Meter::HasBitSetters {
 public:
  static const ::commonmodule::ConductingEquipment& conductingequipment(const Meter* msg);
};

const ::commonmodule::ConductingEquipment&
Meter::HasBitSetters::conductingequipment(const Meter* msg) {
  return *msg->conductingequipment_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Meter::kConductingEquipmentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Meter::Meter()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:commonmodule.Meter)
}
Meter::Meter(const Meter& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_conductingequipment()) {
    conductingequipment_ = new ::commonmodule::ConductingEquipment(*from.conductingequipment_);
  } else {
    conductingequipment_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:commonmodule.Meter)
}

void Meter::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Meter_commonmodule_2fcommonmodule_2eproto.base);
  conductingequipment_ = nullptr;
}

Meter::~Meter() {
  // @@protoc_insertion_point(destructor:commonmodule.Meter)
  SharedDtor();
}

void Meter::SharedDtor() {
  if (this != internal_default_instance()) delete conductingequipment_;
}

void Meter::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Meter& Meter::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Meter_commonmodule_2fcommonmodule_2eproto.base);
  return *internal_default_instance();
}


void Meter::Clear() {
// @@protoc_insertion_point(message_clear_start:commonmodule.Meter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && conductingequipment_ != nullptr) {
    delete conductingequipment_;
  }
  conductingequipment_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Meter::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Meter*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .commonmodule.ConductingEquipment conductingEquipment = 1 [(.uml.option_parent_message) = true];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::ConductingEquipment::_InternalParse;
        object = msg->mutable_conductingequipment();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Meter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:commonmodule.Meter)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .commonmodule.ConductingEquipment conductingEquipment = 1 [(.uml.option_parent_message) = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_conductingequipment()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:commonmodule.Meter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:commonmodule.Meter)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Meter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:commonmodule.Meter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.ConductingEquipment conductingEquipment = 1 [(.uml.option_parent_message) = true];
  if (this->has_conductingequipment()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::conductingequipment(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:commonmodule.Meter)
}

::google::protobuf::uint8* Meter::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:commonmodule.Meter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.ConductingEquipment conductingEquipment = 1 [(.uml.option_parent_message) = true];
  if (this->has_conductingequipment()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::conductingequipment(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:commonmodule.Meter)
  return target;
}

size_t Meter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:commonmodule.Meter)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .commonmodule.ConductingEquipment conductingEquipment = 1 [(.uml.option_parent_message) = true];
  if (this->has_conductingequipment()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *conductingequipment_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Meter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:commonmodule.Meter)
  GOOGLE_DCHECK_NE(&from, this);
  const Meter* source =
      ::google::protobuf::DynamicCastToGenerated<Meter>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:commonmodule.Meter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:commonmodule.Meter)
    MergeFrom(*source);
  }
}

void Meter::MergeFrom(const Meter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:commonmodule.Meter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_conductingequipment()) {
    mutable_conductingequipment()->::commonmodule::ConductingEquipment::MergeFrom(from.conductingequipment());
  }
}

void Meter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:commonmodule.Meter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Meter::CopyFrom(const Meter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:commonmodule.Meter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Meter::IsInitialized() const {
  return true;
}

void Meter::Swap(Meter* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Meter::InternalSwap(Meter* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(conductingequipment_, other->conductingequipment_);
}

::google::protobuf::Metadata Meter::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return ::file_level_metadata_commonmodule_2fcommonmodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void OptimizationMessageInfo::InitAsDefaultInstance() {
  ::commonmodule::_OptimizationMessageInfo_default_instance_._instance.get_mutable()->messageinfo_ = const_cast< ::commonmodule::MessageInfo*>(
      ::commonmodule::MessageInfo::internal_default_instance());
}
class OptimizationMessageInfo::HasBitSetters {
 public:
  static const ::commonmodule::MessageInfo& messageinfo(const OptimizationMessageInfo* msg);
};

const ::commonmodule::MessageInfo&
OptimizationMessageInfo::HasBitSetters::messageinfo(const OptimizationMessageInfo* msg) {
  return *msg->messageinfo_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OptimizationMessageInfo::kMessageInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OptimizationMessageInfo::OptimizationMessageInfo()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:commonmodule.OptimizationMessageInfo)
}
OptimizationMessageInfo::OptimizationMessageInfo(const OptimizationMessageInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_messageinfo()) {
    messageinfo_ = new ::commonmodule::MessageInfo(*from.messageinfo_);
  } else {
    messageinfo_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:commonmodule.OptimizationMessageInfo)
}

void OptimizationMessageInfo::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_OptimizationMessageInfo_commonmodule_2fcommonmodule_2eproto.base);
  messageinfo_ = nullptr;
}

OptimizationMessageInfo::~OptimizationMessageInfo() {
  // @@protoc_insertion_point(destructor:commonmodule.OptimizationMessageInfo)
  SharedDtor();
}

void OptimizationMessageInfo::SharedDtor() {
  if (this != internal_default_instance()) delete messageinfo_;
}

void OptimizationMessageInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OptimizationMessageInfo& OptimizationMessageInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_OptimizationMessageInfo_commonmodule_2fcommonmodule_2eproto.base);
  return *internal_default_instance();
}


void OptimizationMessageInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:commonmodule.OptimizationMessageInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && messageinfo_ != nullptr) {
    delete messageinfo_;
  }
  messageinfo_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* OptimizationMessageInfo::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<OptimizationMessageInfo*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .commonmodule.MessageInfo messageInfo = 1 [(.uml.option_parent_message) = true];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::MessageInfo::_InternalParse;
        object = msg->mutable_messageinfo();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool OptimizationMessageInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:commonmodule.OptimizationMessageInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .commonmodule.MessageInfo messageInfo = 1 [(.uml.option_parent_message) = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_messageinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:commonmodule.OptimizationMessageInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:commonmodule.OptimizationMessageInfo)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void OptimizationMessageInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:commonmodule.OptimizationMessageInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.MessageInfo messageInfo = 1 [(.uml.option_parent_message) = true];
  if (this->has_messageinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::messageinfo(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:commonmodule.OptimizationMessageInfo)
}

::google::protobuf::uint8* OptimizationMessageInfo::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:commonmodule.OptimizationMessageInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.MessageInfo messageInfo = 1 [(.uml.option_parent_message) = true];
  if (this->has_messageinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::messageinfo(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:commonmodule.OptimizationMessageInfo)
  return target;
}

size_t OptimizationMessageInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:commonmodule.OptimizationMessageInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .commonmodule.MessageInfo messageInfo = 1 [(.uml.option_parent_message) = true];
  if (this->has_messageinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *messageinfo_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OptimizationMessageInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:commonmodule.OptimizationMessageInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const OptimizationMessageInfo* source =
      ::google::protobuf::DynamicCastToGenerated<OptimizationMessageInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:commonmodule.OptimizationMessageInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:commonmodule.OptimizationMessageInfo)
    MergeFrom(*source);
  }
}

void OptimizationMessageInfo::MergeFrom(const OptimizationMessageInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:commonmodule.OptimizationMessageInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_messageinfo()) {
    mutable_messageinfo()->::commonmodule::MessageInfo::MergeFrom(from.messageinfo());
  }
}

void OptimizationMessageInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:commonmodule.OptimizationMessageInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OptimizationMessageInfo::CopyFrom(const OptimizationMessageInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:commonmodule.OptimizationMessageInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OptimizationMessageInfo::IsInitialized() const {
  return true;
}

void OptimizationMessageInfo::Swap(OptimizationMessageInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OptimizationMessageInfo::InternalSwap(OptimizationMessageInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(messageinfo_, other->messageinfo_);
}

::google::protobuf::Metadata OptimizationMessageInfo::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return ::file_level_metadata_commonmodule_2fcommonmodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ReadingMMTN::InitAsDefaultInstance() {
  ::commonmodule::_ReadingMMTN_default_instance_._instance.get_mutable()->logicalnode_ = const_cast< ::commonmodule::LogicalNode*>(
      ::commonmodule::LogicalNode::internal_default_instance());
  ::commonmodule::_ReadingMMTN_default_instance_._instance.get_mutable()->dmdvah_ = const_cast< ::commonmodule::BCR*>(
      ::commonmodule::BCR::internal_default_instance());
  ::commonmodule::_ReadingMMTN_default_instance_._instance.get_mutable()->dmdvarh_ = const_cast< ::commonmodule::BCR*>(
      ::commonmodule::BCR::internal_default_instance());
  ::commonmodule::_ReadingMMTN_default_instance_._instance.get_mutable()->dmdwh_ = const_cast< ::commonmodule::BCR*>(
      ::commonmodule::BCR::internal_default_instance());
  ::commonmodule::_ReadingMMTN_default_instance_._instance.get_mutable()->supvah_ = const_cast< ::commonmodule::BCR*>(
      ::commonmodule::BCR::internal_default_instance());
  ::commonmodule::_ReadingMMTN_default_instance_._instance.get_mutable()->supvarh_ = const_cast< ::commonmodule::BCR*>(
      ::commonmodule::BCR::internal_default_instance());
  ::commonmodule::_ReadingMMTN_default_instance_._instance.get_mutable()->supwh_ = const_cast< ::commonmodule::BCR*>(
      ::commonmodule::BCR::internal_default_instance());
  ::commonmodule::_ReadingMMTN_default_instance_._instance.get_mutable()->totvah_ = const_cast< ::commonmodule::BCR*>(
      ::commonmodule::BCR::internal_default_instance());
  ::commonmodule::_ReadingMMTN_default_instance_._instance.get_mutable()->totvarh_ = const_cast< ::commonmodule::BCR*>(
      ::commonmodule::BCR::internal_default_instance());
  ::commonmodule::_ReadingMMTN_default_instance_._instance.get_mutable()->totwh_ = const_cast< ::commonmodule::BCR*>(
      ::commonmodule::BCR::internal_default_instance());
}
class ReadingMMTN::HasBitSetters {
 public:
  static const ::commonmodule::LogicalNode& logicalnode(const ReadingMMTN* msg);
  static const ::commonmodule::BCR& dmdvah(const ReadingMMTN* msg);
  static const ::commonmodule::BCR& dmdvarh(const ReadingMMTN* msg);
  static const ::commonmodule::BCR& dmdwh(const ReadingMMTN* msg);
  static const ::commonmodule::BCR& supvah(const ReadingMMTN* msg);
  static const ::commonmodule::BCR& supvarh(const ReadingMMTN* msg);
  static const ::commonmodule::BCR& supwh(const ReadingMMTN* msg);
  static const ::commonmodule::BCR& totvah(const ReadingMMTN* msg);
  static const ::commonmodule::BCR& totvarh(const ReadingMMTN* msg);
  static const ::commonmodule::BCR& totwh(const ReadingMMTN* msg);
};

const ::commonmodule::LogicalNode&
ReadingMMTN::HasBitSetters::logicalnode(const ReadingMMTN* msg) {
  return *msg->logicalnode_;
}
const ::commonmodule::BCR&
ReadingMMTN::HasBitSetters::dmdvah(const ReadingMMTN* msg) {
  return *msg->dmdvah_;
}
const ::commonmodule::BCR&
ReadingMMTN::HasBitSetters::dmdvarh(const ReadingMMTN* msg) {
  return *msg->dmdvarh_;
}
const ::commonmodule::BCR&
ReadingMMTN::HasBitSetters::dmdwh(const ReadingMMTN* msg) {
  return *msg->dmdwh_;
}
const ::commonmodule::BCR&
ReadingMMTN::HasBitSetters::supvah(const ReadingMMTN* msg) {
  return *msg->supvah_;
}
const ::commonmodule::BCR&
ReadingMMTN::HasBitSetters::supvarh(const ReadingMMTN* msg) {
  return *msg->supvarh_;
}
const ::commonmodule::BCR&
ReadingMMTN::HasBitSetters::supwh(const ReadingMMTN* msg) {
  return *msg->supwh_;
}
const ::commonmodule::BCR&
ReadingMMTN::HasBitSetters::totvah(const ReadingMMTN* msg) {
  return *msg->totvah_;
}
const ::commonmodule::BCR&
ReadingMMTN::HasBitSetters::totvarh(const ReadingMMTN* msg) {
  return *msg->totvarh_;
}
const ::commonmodule::BCR&
ReadingMMTN::HasBitSetters::totwh(const ReadingMMTN* msg) {
  return *msg->totwh_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReadingMMTN::kLogicalNodeFieldNumber;
const int ReadingMMTN::kDmdVAhFieldNumber;
const int ReadingMMTN::kDmdVArhFieldNumber;
const int ReadingMMTN::kDmdWhFieldNumber;
const int ReadingMMTN::kSupVAhFieldNumber;
const int ReadingMMTN::kSupVArhFieldNumber;
const int ReadingMMTN::kSupWhFieldNumber;
const int ReadingMMTN::kTotVAhFieldNumber;
const int ReadingMMTN::kTotVArhFieldNumber;
const int ReadingMMTN::kTotWhFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReadingMMTN::ReadingMMTN()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:commonmodule.ReadingMMTN)
}
ReadingMMTN::ReadingMMTN(const ReadingMMTN& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_logicalnode()) {
    logicalnode_ = new ::commonmodule::LogicalNode(*from.logicalnode_);
  } else {
    logicalnode_ = nullptr;
  }
  if (from.has_dmdvah()) {
    dmdvah_ = new ::commonmodule::BCR(*from.dmdvah_);
  } else {
    dmdvah_ = nullptr;
  }
  if (from.has_dmdvarh()) {
    dmdvarh_ = new ::commonmodule::BCR(*from.dmdvarh_);
  } else {
    dmdvarh_ = nullptr;
  }
  if (from.has_dmdwh()) {
    dmdwh_ = new ::commonmodule::BCR(*from.dmdwh_);
  } else {
    dmdwh_ = nullptr;
  }
  if (from.has_supvah()) {
    supvah_ = new ::commonmodule::BCR(*from.supvah_);
  } else {
    supvah_ = nullptr;
  }
  if (from.has_supvarh()) {
    supvarh_ = new ::commonmodule::BCR(*from.supvarh_);
  } else {
    supvarh_ = nullptr;
  }
  if (from.has_supwh()) {
    supwh_ = new ::commonmodule::BCR(*from.supwh_);
  } else {
    supwh_ = nullptr;
  }
  if (from.has_totvah()) {
    totvah_ = new ::commonmodule::BCR(*from.totvah_);
  } else {
    totvah_ = nullptr;
  }
  if (from.has_totvarh()) {
    totvarh_ = new ::commonmodule::BCR(*from.totvarh_);
  } else {
    totvarh_ = nullptr;
  }
  if (from.has_totwh()) {
    totwh_ = new ::commonmodule::BCR(*from.totwh_);
  } else {
    totwh_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:commonmodule.ReadingMMTN)
}

void ReadingMMTN::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ReadingMMTN_commonmodule_2fcommonmodule_2eproto.base);
  ::memset(&logicalnode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&totwh_) -
      reinterpret_cast<char*>(&logicalnode_)) + sizeof(totwh_));
}

ReadingMMTN::~ReadingMMTN() {
  // @@protoc_insertion_point(destructor:commonmodule.ReadingMMTN)
  SharedDtor();
}

void ReadingMMTN::SharedDtor() {
  if (this != internal_default_instance()) delete logicalnode_;
  if (this != internal_default_instance()) delete dmdvah_;
  if (this != internal_default_instance()) delete dmdvarh_;
  if (this != internal_default_instance()) delete dmdwh_;
  if (this != internal_default_instance()) delete supvah_;
  if (this != internal_default_instance()) delete supvarh_;
  if (this != internal_default_instance()) delete supwh_;
  if (this != internal_default_instance()) delete totvah_;
  if (this != internal_default_instance()) delete totvarh_;
  if (this != internal_default_instance()) delete totwh_;
}

void ReadingMMTN::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ReadingMMTN& ReadingMMTN::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ReadingMMTN_commonmodule_2fcommonmodule_2eproto.base);
  return *internal_default_instance();
}


void ReadingMMTN::Clear() {
// @@protoc_insertion_point(message_clear_start:commonmodule.ReadingMMTN)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && logicalnode_ != nullptr) {
    delete logicalnode_;
  }
  logicalnode_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && dmdvah_ != nullptr) {
    delete dmdvah_;
  }
  dmdvah_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && dmdvarh_ != nullptr) {
    delete dmdvarh_;
  }
  dmdvarh_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && dmdwh_ != nullptr) {
    delete dmdwh_;
  }
  dmdwh_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && supvah_ != nullptr) {
    delete supvah_;
  }
  supvah_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && supvarh_ != nullptr) {
    delete supvarh_;
  }
  supvarh_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && supwh_ != nullptr) {
    delete supwh_;
  }
  supwh_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && totvah_ != nullptr) {
    delete totvah_;
  }
  totvah_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && totvarh_ != nullptr) {
    delete totvarh_;
  }
  totvarh_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && totwh_ != nullptr) {
    delete totwh_;
  }
  totwh_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ReadingMMTN::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ReadingMMTN*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .commonmodule.LogicalNode logicalNode = 1 [(.uml.option_parent_message) = true];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::LogicalNode::_InternalParse;
        object = msg->mutable_logicalnode();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .commonmodule.BCR DmdVAh = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::BCR::_InternalParse;
        object = msg->mutable_dmdvah();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .commonmodule.BCR DmdVArh = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::BCR::_InternalParse;
        object = msg->mutable_dmdvarh();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .commonmodule.BCR DmdWh = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::BCR::_InternalParse;
        object = msg->mutable_dmdwh();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .commonmodule.BCR SupVAh = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::BCR::_InternalParse;
        object = msg->mutable_supvah();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .commonmodule.BCR SupVArh = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::BCR::_InternalParse;
        object = msg->mutable_supvarh();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .commonmodule.BCR SupWh = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::BCR::_InternalParse;
        object = msg->mutable_supwh();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .commonmodule.BCR TotVAh = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 66) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::BCR::_InternalParse;
        object = msg->mutable_totvah();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .commonmodule.BCR TotVArh = 9;
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) != 74) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::BCR::_InternalParse;
        object = msg->mutable_totvarh();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .commonmodule.BCR TotWh = 10;
      case 10: {
        if (static_cast<::google::protobuf::uint8>(tag) != 82) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::BCR::_InternalParse;
        object = msg->mutable_totwh();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ReadingMMTN::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:commonmodule.ReadingMMTN)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .commonmodule.LogicalNode logicalNode = 1 [(.uml.option_parent_message) = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_logicalnode()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.BCR DmdVAh = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_dmdvah()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.BCR DmdVArh = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_dmdvarh()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.BCR DmdWh = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_dmdwh()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.BCR SupVAh = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_supvah()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.BCR SupVArh = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_supvarh()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.BCR SupWh = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_supwh()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.BCR TotVAh = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (66 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_totvah()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.BCR TotVArh = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (74 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_totvarh()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.BCR TotWh = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (82 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_totwh()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:commonmodule.ReadingMMTN)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:commonmodule.ReadingMMTN)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ReadingMMTN::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:commonmodule.ReadingMMTN)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.LogicalNode logicalNode = 1 [(.uml.option_parent_message) = true];
  if (this->has_logicalnode()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::logicalnode(this), output);
  }

  // .commonmodule.BCR DmdVAh = 2;
  if (this->has_dmdvah()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::dmdvah(this), output);
  }

  // .commonmodule.BCR DmdVArh = 3;
  if (this->has_dmdvarh()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::dmdvarh(this), output);
  }

  // .commonmodule.BCR DmdWh = 4;
  if (this->has_dmdwh()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::dmdwh(this), output);
  }

  // .commonmodule.BCR SupVAh = 5;
  if (this->has_supvah()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, HasBitSetters::supvah(this), output);
  }

  // .commonmodule.BCR SupVArh = 6;
  if (this->has_supvarh()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, HasBitSetters::supvarh(this), output);
  }

  // .commonmodule.BCR SupWh = 7;
  if (this->has_supwh()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, HasBitSetters::supwh(this), output);
  }

  // .commonmodule.BCR TotVAh = 8;
  if (this->has_totvah()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, HasBitSetters::totvah(this), output);
  }

  // .commonmodule.BCR TotVArh = 9;
  if (this->has_totvarh()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, HasBitSetters::totvarh(this), output);
  }

  // .commonmodule.BCR TotWh = 10;
  if (this->has_totwh()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, HasBitSetters::totwh(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:commonmodule.ReadingMMTN)
}

::google::protobuf::uint8* ReadingMMTN::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:commonmodule.ReadingMMTN)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.LogicalNode logicalNode = 1 [(.uml.option_parent_message) = true];
  if (this->has_logicalnode()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::logicalnode(this), target);
  }

  // .commonmodule.BCR DmdVAh = 2;
  if (this->has_dmdvah()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::dmdvah(this), target);
  }

  // .commonmodule.BCR DmdVArh = 3;
  if (this->has_dmdvarh()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::dmdvarh(this), target);
  }

  // .commonmodule.BCR DmdWh = 4;
  if (this->has_dmdwh()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::dmdwh(this), target);
  }

  // .commonmodule.BCR SupVAh = 5;
  if (this->has_supvah()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, HasBitSetters::supvah(this), target);
  }

  // .commonmodule.BCR SupVArh = 6;
  if (this->has_supvarh()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, HasBitSetters::supvarh(this), target);
  }

  // .commonmodule.BCR SupWh = 7;
  if (this->has_supwh()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, HasBitSetters::supwh(this), target);
  }

  // .commonmodule.BCR TotVAh = 8;
  if (this->has_totvah()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, HasBitSetters::totvah(this), target);
  }

  // .commonmodule.BCR TotVArh = 9;
  if (this->has_totvarh()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, HasBitSetters::totvarh(this), target);
  }

  // .commonmodule.BCR TotWh = 10;
  if (this->has_totwh()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, HasBitSetters::totwh(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:commonmodule.ReadingMMTN)
  return target;
}

size_t ReadingMMTN::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:commonmodule.ReadingMMTN)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .commonmodule.LogicalNode logicalNode = 1 [(.uml.option_parent_message) = true];
  if (this->has_logicalnode()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *logicalnode_);
  }

  // .commonmodule.BCR DmdVAh = 2;
  if (this->has_dmdvah()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *dmdvah_);
  }

  // .commonmodule.BCR DmdVArh = 3;
  if (this->has_dmdvarh()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *dmdvarh_);
  }

  // .commonmodule.BCR DmdWh = 4;
  if (this->has_dmdwh()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *dmdwh_);
  }

  // .commonmodule.BCR SupVAh = 5;
  if (this->has_supvah()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *supvah_);
  }

  // .commonmodule.BCR SupVArh = 6;
  if (this->has_supvarh()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *supvarh_);
  }

  // .commonmodule.BCR SupWh = 7;
  if (this->has_supwh()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *supwh_);
  }

  // .commonmodule.BCR TotVAh = 8;
  if (this->has_totvah()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *totvah_);
  }

  // .commonmodule.BCR TotVArh = 9;
  if (this->has_totvarh()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *totvarh_);
  }

  // .commonmodule.BCR TotWh = 10;
  if (this->has_totwh()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *totwh_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReadingMMTN::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:commonmodule.ReadingMMTN)
  GOOGLE_DCHECK_NE(&from, this);
  const ReadingMMTN* source =
      ::google::protobuf::DynamicCastToGenerated<ReadingMMTN>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:commonmodule.ReadingMMTN)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:commonmodule.ReadingMMTN)
    MergeFrom(*source);
  }
}

void ReadingMMTN::MergeFrom(const ReadingMMTN& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:commonmodule.ReadingMMTN)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_logicalnode()) {
    mutable_logicalnode()->::commonmodule::LogicalNode::MergeFrom(from.logicalnode());
  }
  if (from.has_dmdvah()) {
    mutable_dmdvah()->::commonmodule::BCR::MergeFrom(from.dmdvah());
  }
  if (from.has_dmdvarh()) {
    mutable_dmdvarh()->::commonmodule::BCR::MergeFrom(from.dmdvarh());
  }
  if (from.has_dmdwh()) {
    mutable_dmdwh()->::commonmodule::BCR::MergeFrom(from.dmdwh());
  }
  if (from.has_supvah()) {
    mutable_supvah()->::commonmodule::BCR::MergeFrom(from.supvah());
  }
  if (from.has_supvarh()) {
    mutable_supvarh()->::commonmodule::BCR::MergeFrom(from.supvarh());
  }
  if (from.has_supwh()) {
    mutable_supwh()->::commonmodule::BCR::MergeFrom(from.supwh());
  }
  if (from.has_totvah()) {
    mutable_totvah()->::commonmodule::BCR::MergeFrom(from.totvah());
  }
  if (from.has_totvarh()) {
    mutable_totvarh()->::commonmodule::BCR::MergeFrom(from.totvarh());
  }
  if (from.has_totwh()) {
    mutable_totwh()->::commonmodule::BCR::MergeFrom(from.totwh());
  }
}

void ReadingMMTN::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:commonmodule.ReadingMMTN)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReadingMMTN::CopyFrom(const ReadingMMTN& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:commonmodule.ReadingMMTN)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadingMMTN::IsInitialized() const {
  return true;
}

void ReadingMMTN::Swap(ReadingMMTN* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReadingMMTN::InternalSwap(ReadingMMTN* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(logicalnode_, other->logicalnode_);
  swap(dmdvah_, other->dmdvah_);
  swap(dmdvarh_, other->dmdvarh_);
  swap(dmdwh_, other->dmdwh_);
  swap(supvah_, other->supvah_);
  swap(supvarh_, other->supvarh_);
  swap(supwh_, other->supwh_);
  swap(totvah_, other->totvah_);
  swap(totvarh_, other->totvarh_);
  swap(totwh_, other->totwh_);
}

::google::protobuf::Metadata ReadingMMTN::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return ::file_level_metadata_commonmodule_2fcommonmodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void PhaseMMTN::InitAsDefaultInstance() {
  ::commonmodule::_PhaseMMTN_default_instance_._instance.get_mutable()->phsa_ = const_cast< ::commonmodule::ReadingMMTN*>(
      ::commonmodule::ReadingMMTN::internal_default_instance());
  ::commonmodule::_PhaseMMTN_default_instance_._instance.get_mutable()->phsab_ = const_cast< ::commonmodule::ReadingMMTN*>(
      ::commonmodule::ReadingMMTN::internal_default_instance());
  ::commonmodule::_PhaseMMTN_default_instance_._instance.get_mutable()->phsb_ = const_cast< ::commonmodule::ReadingMMTN*>(
      ::commonmodule::ReadingMMTN::internal_default_instance());
  ::commonmodule::_PhaseMMTN_default_instance_._instance.get_mutable()->phsbc_ = const_cast< ::commonmodule::ReadingMMTN*>(
      ::commonmodule::ReadingMMTN::internal_default_instance());
  ::commonmodule::_PhaseMMTN_default_instance_._instance.get_mutable()->phsc_ = const_cast< ::commonmodule::ReadingMMTN*>(
      ::commonmodule::ReadingMMTN::internal_default_instance());
  ::commonmodule::_PhaseMMTN_default_instance_._instance.get_mutable()->phsca_ = const_cast< ::commonmodule::ReadingMMTN*>(
      ::commonmodule::ReadingMMTN::internal_default_instance());
}
class PhaseMMTN::HasBitSetters {
 public:
  static const ::commonmodule::ReadingMMTN& phsa(const PhaseMMTN* msg);
  static const ::commonmodule::ReadingMMTN& phsab(const PhaseMMTN* msg);
  static const ::commonmodule::ReadingMMTN& phsb(const PhaseMMTN* msg);
  static const ::commonmodule::ReadingMMTN& phsbc(const PhaseMMTN* msg);
  static const ::commonmodule::ReadingMMTN& phsc(const PhaseMMTN* msg);
  static const ::commonmodule::ReadingMMTN& phsca(const PhaseMMTN* msg);
};

const ::commonmodule::ReadingMMTN&
PhaseMMTN::HasBitSetters::phsa(const PhaseMMTN* msg) {
  return *msg->phsa_;
}
const ::commonmodule::ReadingMMTN&
PhaseMMTN::HasBitSetters::phsab(const PhaseMMTN* msg) {
  return *msg->phsab_;
}
const ::commonmodule::ReadingMMTN&
PhaseMMTN::HasBitSetters::phsb(const PhaseMMTN* msg) {
  return *msg->phsb_;
}
const ::commonmodule::ReadingMMTN&
PhaseMMTN::HasBitSetters::phsbc(const PhaseMMTN* msg) {
  return *msg->phsbc_;
}
const ::commonmodule::ReadingMMTN&
PhaseMMTN::HasBitSetters::phsc(const PhaseMMTN* msg) {
  return *msg->phsc_;
}
const ::commonmodule::ReadingMMTN&
PhaseMMTN::HasBitSetters::phsca(const PhaseMMTN* msg) {
  return *msg->phsca_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PhaseMMTN::kPhsAFieldNumber;
const int PhaseMMTN::kPhsABFieldNumber;
const int PhaseMMTN::kPhsBFieldNumber;
const int PhaseMMTN::kPhsBCFieldNumber;
const int PhaseMMTN::kPhsCFieldNumber;
const int PhaseMMTN::kPhsCAFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PhaseMMTN::PhaseMMTN()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:commonmodule.PhaseMMTN)
}
PhaseMMTN::PhaseMMTN(const PhaseMMTN& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_phsa()) {
    phsa_ = new ::commonmodule::ReadingMMTN(*from.phsa_);
  } else {
    phsa_ = nullptr;
  }
  if (from.has_phsab()) {
    phsab_ = new ::commonmodule::ReadingMMTN(*from.phsab_);
  } else {
    phsab_ = nullptr;
  }
  if (from.has_phsb()) {
    phsb_ = new ::commonmodule::ReadingMMTN(*from.phsb_);
  } else {
    phsb_ = nullptr;
  }
  if (from.has_phsbc()) {
    phsbc_ = new ::commonmodule::ReadingMMTN(*from.phsbc_);
  } else {
    phsbc_ = nullptr;
  }
  if (from.has_phsc()) {
    phsc_ = new ::commonmodule::ReadingMMTN(*from.phsc_);
  } else {
    phsc_ = nullptr;
  }
  if (from.has_phsca()) {
    phsca_ = new ::commonmodule::ReadingMMTN(*from.phsca_);
  } else {
    phsca_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:commonmodule.PhaseMMTN)
}

void PhaseMMTN::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_PhaseMMTN_commonmodule_2fcommonmodule_2eproto.base);
  ::memset(&phsa_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&phsca_) -
      reinterpret_cast<char*>(&phsa_)) + sizeof(phsca_));
}

PhaseMMTN::~PhaseMMTN() {
  // @@protoc_insertion_point(destructor:commonmodule.PhaseMMTN)
  SharedDtor();
}

void PhaseMMTN::SharedDtor() {
  if (this != internal_default_instance()) delete phsa_;
  if (this != internal_default_instance()) delete phsab_;
  if (this != internal_default_instance()) delete phsb_;
  if (this != internal_default_instance()) delete phsbc_;
  if (this != internal_default_instance()) delete phsc_;
  if (this != internal_default_instance()) delete phsca_;
}

void PhaseMMTN::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PhaseMMTN& PhaseMMTN::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_PhaseMMTN_commonmodule_2fcommonmodule_2eproto.base);
  return *internal_default_instance();
}


void PhaseMMTN::Clear() {
// @@protoc_insertion_point(message_clear_start:commonmodule.PhaseMMTN)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && phsa_ != nullptr) {
    delete phsa_;
  }
  phsa_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && phsab_ != nullptr) {
    delete phsab_;
  }
  phsab_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && phsb_ != nullptr) {
    delete phsb_;
  }
  phsb_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && phsbc_ != nullptr) {
    delete phsbc_;
  }
  phsbc_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && phsc_ != nullptr) {
    delete phsc_;
  }
  phsc_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && phsca_ != nullptr) {
    delete phsca_;
  }
  phsca_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* PhaseMMTN::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<PhaseMMTN*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .commonmodule.ReadingMMTN phsA = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::ReadingMMTN::_InternalParse;
        object = msg->mutable_phsa();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .commonmodule.ReadingMMTN phsAB = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::ReadingMMTN::_InternalParse;
        object = msg->mutable_phsab();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .commonmodule.ReadingMMTN phsB = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::ReadingMMTN::_InternalParse;
        object = msg->mutable_phsb();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .commonmodule.ReadingMMTN phsBC = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::ReadingMMTN::_InternalParse;
        object = msg->mutable_phsbc();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .commonmodule.ReadingMMTN phsC = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::ReadingMMTN::_InternalParse;
        object = msg->mutable_phsc();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .commonmodule.ReadingMMTN phsCA = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::ReadingMMTN::_InternalParse;
        object = msg->mutable_phsca();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool PhaseMMTN::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:commonmodule.PhaseMMTN)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .commonmodule.ReadingMMTN phsA = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_phsa()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.ReadingMMTN phsAB = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_phsab()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.ReadingMMTN phsB = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_phsb()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.ReadingMMTN phsBC = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_phsbc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.ReadingMMTN phsC = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_phsc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.ReadingMMTN phsCA = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_phsca()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:commonmodule.PhaseMMTN)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:commonmodule.PhaseMMTN)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void PhaseMMTN::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:commonmodule.PhaseMMTN)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.ReadingMMTN phsA = 1;
  if (this->has_phsa()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::phsa(this), output);
  }

  // .commonmodule.ReadingMMTN phsAB = 2;
  if (this->has_phsab()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::phsab(this), output);
  }

  // .commonmodule.ReadingMMTN phsB = 3;
  if (this->has_phsb()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::phsb(this), output);
  }

  // .commonmodule.ReadingMMTN phsBC = 4;
  if (this->has_phsbc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::phsbc(this), output);
  }

  // .commonmodule.ReadingMMTN phsC = 5;
  if (this->has_phsc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, HasBitSetters::phsc(this), output);
  }

  // .commonmodule.ReadingMMTN phsCA = 6;
  if (this->has_phsca()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, HasBitSetters::phsca(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:commonmodule.PhaseMMTN)
}

::google::protobuf::uint8* PhaseMMTN::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:commonmodule.PhaseMMTN)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.ReadingMMTN phsA = 1;
  if (this->has_phsa()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::phsa(this), target);
  }

  // .commonmodule.ReadingMMTN phsAB = 2;
  if (this->has_phsab()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::phsab(this), target);
  }

  // .commonmodule.ReadingMMTN phsB = 3;
  if (this->has_phsb()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::phsb(this), target);
  }

  // .commonmodule.ReadingMMTN phsBC = 4;
  if (this->has_phsbc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::phsbc(this), target);
  }

  // .commonmodule.ReadingMMTN phsC = 5;
  if (this->has_phsc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, HasBitSetters::phsc(this), target);
  }

  // .commonmodule.ReadingMMTN phsCA = 6;
  if (this->has_phsca()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, HasBitSetters::phsca(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:commonmodule.PhaseMMTN)
  return target;
}

size_t PhaseMMTN::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:commonmodule.PhaseMMTN)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .commonmodule.ReadingMMTN phsA = 1;
  if (this->has_phsa()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *phsa_);
  }

  // .commonmodule.ReadingMMTN phsAB = 2;
  if (this->has_phsab()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *phsab_);
  }

  // .commonmodule.ReadingMMTN phsB = 3;
  if (this->has_phsb()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *phsb_);
  }

  // .commonmodule.ReadingMMTN phsBC = 4;
  if (this->has_phsbc()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *phsbc_);
  }

  // .commonmodule.ReadingMMTN phsC = 5;
  if (this->has_phsc()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *phsc_);
  }

  // .commonmodule.ReadingMMTN phsCA = 6;
  if (this->has_phsca()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *phsca_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PhaseMMTN::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:commonmodule.PhaseMMTN)
  GOOGLE_DCHECK_NE(&from, this);
  const PhaseMMTN* source =
      ::google::protobuf::DynamicCastToGenerated<PhaseMMTN>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:commonmodule.PhaseMMTN)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:commonmodule.PhaseMMTN)
    MergeFrom(*source);
  }
}

void PhaseMMTN::MergeFrom(const PhaseMMTN& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:commonmodule.PhaseMMTN)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_phsa()) {
    mutable_phsa()->::commonmodule::ReadingMMTN::MergeFrom(from.phsa());
  }
  if (from.has_phsab()) {
    mutable_phsab()->::commonmodule::ReadingMMTN::MergeFrom(from.phsab());
  }
  if (from.has_phsb()) {
    mutable_phsb()->::commonmodule::ReadingMMTN::MergeFrom(from.phsb());
  }
  if (from.has_phsbc()) {
    mutable_phsbc()->::commonmodule::ReadingMMTN::MergeFrom(from.phsbc());
  }
  if (from.has_phsc()) {
    mutable_phsc()->::commonmodule::ReadingMMTN::MergeFrom(from.phsc());
  }
  if (from.has_phsca()) {
    mutable_phsca()->::commonmodule::ReadingMMTN::MergeFrom(from.phsca());
  }
}

void PhaseMMTN::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:commonmodule.PhaseMMTN)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PhaseMMTN::CopyFrom(const PhaseMMTN& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:commonmodule.PhaseMMTN)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PhaseMMTN::IsInitialized() const {
  return true;
}

void PhaseMMTN::Swap(PhaseMMTN* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PhaseMMTN::InternalSwap(PhaseMMTN* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(phsa_, other->phsa_);
  swap(phsab_, other->phsab_);
  swap(phsb_, other->phsb_);
  swap(phsbc_, other->phsbc_);
  swap(phsc_, other->phsc_);
  swap(phsca_, other->phsca_);
}

::google::protobuf::Metadata PhaseMMTN::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return ::file_level_metadata_commonmodule_2fcommonmodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void RampRate::InitAsDefaultInstance() {
  ::commonmodule::_RampRate_default_instance_._instance.get_mutable()->negativereactivepowerkvarpermin_ = const_cast< ::google::protobuf::FloatValue*>(
      ::google::protobuf::FloatValue::internal_default_instance());
  ::commonmodule::_RampRate_default_instance_._instance.get_mutable()->negativerealpowerkwpermin_ = const_cast< ::google::protobuf::FloatValue*>(
      ::google::protobuf::FloatValue::internal_default_instance());
  ::commonmodule::_RampRate_default_instance_._instance.get_mutable()->positivereactivepowerkvarpermin_ = const_cast< ::google::protobuf::FloatValue*>(
      ::google::protobuf::FloatValue::internal_default_instance());
  ::commonmodule::_RampRate_default_instance_._instance.get_mutable()->positiverealpowerkwpermin_ = const_cast< ::google::protobuf::FloatValue*>(
      ::google::protobuf::FloatValue::internal_default_instance());
}
class RampRate::HasBitSetters {
 public:
  static const ::google::protobuf::FloatValue& negativereactivepowerkvarpermin(const RampRate* msg);
  static const ::google::protobuf::FloatValue& negativerealpowerkwpermin(const RampRate* msg);
  static const ::google::protobuf::FloatValue& positivereactivepowerkvarpermin(const RampRate* msg);
  static const ::google::protobuf::FloatValue& positiverealpowerkwpermin(const RampRate* msg);
};

const ::google::protobuf::FloatValue&
RampRate::HasBitSetters::negativereactivepowerkvarpermin(const RampRate* msg) {
  return *msg->negativereactivepowerkvarpermin_;
}
const ::google::protobuf::FloatValue&
RampRate::HasBitSetters::negativerealpowerkwpermin(const RampRate* msg) {
  return *msg->negativerealpowerkwpermin_;
}
const ::google::protobuf::FloatValue&
RampRate::HasBitSetters::positivereactivepowerkvarpermin(const RampRate* msg) {
  return *msg->positivereactivepowerkvarpermin_;
}
const ::google::protobuf::FloatValue&
RampRate::HasBitSetters::positiverealpowerkwpermin(const RampRate* msg) {
  return *msg->positiverealpowerkwpermin_;
}
void RampRate::clear_negativereactivepowerkvarpermin() {
  if (GetArenaNoVirtual() == nullptr && negativereactivepowerkvarpermin_ != nullptr) {
    delete negativereactivepowerkvarpermin_;
  }
  negativereactivepowerkvarpermin_ = nullptr;
}
void RampRate::clear_negativerealpowerkwpermin() {
  if (GetArenaNoVirtual() == nullptr && negativerealpowerkwpermin_ != nullptr) {
    delete negativerealpowerkwpermin_;
  }
  negativerealpowerkwpermin_ = nullptr;
}
void RampRate::clear_positivereactivepowerkvarpermin() {
  if (GetArenaNoVirtual() == nullptr && positivereactivepowerkvarpermin_ != nullptr) {
    delete positivereactivepowerkvarpermin_;
  }
  positivereactivepowerkvarpermin_ = nullptr;
}
void RampRate::clear_positiverealpowerkwpermin() {
  if (GetArenaNoVirtual() == nullptr && positiverealpowerkwpermin_ != nullptr) {
    delete positiverealpowerkwpermin_;
  }
  positiverealpowerkwpermin_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RampRate::kNegativeReactivePowerKVArPerMinFieldNumber;
const int RampRate::kNegativeRealPowerKWPerMinFieldNumber;
const int RampRate::kPositiveReactivePowerKVArPerMinFieldNumber;
const int RampRate::kPositiveRealPowerKWPerMinFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RampRate::RampRate()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:commonmodule.RampRate)
}
RampRate::RampRate(const RampRate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_negativereactivepowerkvarpermin()) {
    negativereactivepowerkvarpermin_ = new ::google::protobuf::FloatValue(*from.negativereactivepowerkvarpermin_);
  } else {
    negativereactivepowerkvarpermin_ = nullptr;
  }
  if (from.has_negativerealpowerkwpermin()) {
    negativerealpowerkwpermin_ = new ::google::protobuf::FloatValue(*from.negativerealpowerkwpermin_);
  } else {
    negativerealpowerkwpermin_ = nullptr;
  }
  if (from.has_positivereactivepowerkvarpermin()) {
    positivereactivepowerkvarpermin_ = new ::google::protobuf::FloatValue(*from.positivereactivepowerkvarpermin_);
  } else {
    positivereactivepowerkvarpermin_ = nullptr;
  }
  if (from.has_positiverealpowerkwpermin()) {
    positiverealpowerkwpermin_ = new ::google::protobuf::FloatValue(*from.positiverealpowerkwpermin_);
  } else {
    positiverealpowerkwpermin_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:commonmodule.RampRate)
}

void RampRate::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_RampRate_commonmodule_2fcommonmodule_2eproto.base);
  ::memset(&negativereactivepowerkvarpermin_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&positiverealpowerkwpermin_) -
      reinterpret_cast<char*>(&negativereactivepowerkvarpermin_)) + sizeof(positiverealpowerkwpermin_));
}

RampRate::~RampRate() {
  // @@protoc_insertion_point(destructor:commonmodule.RampRate)
  SharedDtor();
}

void RampRate::SharedDtor() {
  if (this != internal_default_instance()) delete negativereactivepowerkvarpermin_;
  if (this != internal_default_instance()) delete negativerealpowerkwpermin_;
  if (this != internal_default_instance()) delete positivereactivepowerkvarpermin_;
  if (this != internal_default_instance()) delete positiverealpowerkwpermin_;
}

void RampRate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RampRate& RampRate::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_RampRate_commonmodule_2fcommonmodule_2eproto.base);
  return *internal_default_instance();
}


void RampRate::Clear() {
// @@protoc_insertion_point(message_clear_start:commonmodule.RampRate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && negativereactivepowerkvarpermin_ != nullptr) {
    delete negativereactivepowerkvarpermin_;
  }
  negativereactivepowerkvarpermin_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && negativerealpowerkwpermin_ != nullptr) {
    delete negativerealpowerkwpermin_;
  }
  negativerealpowerkwpermin_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && positivereactivepowerkvarpermin_ != nullptr) {
    delete positivereactivepowerkvarpermin_;
  }
  positivereactivepowerkvarpermin_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && positiverealpowerkwpermin_ != nullptr) {
    delete positiverealpowerkwpermin_;
  }
  positiverealpowerkwpermin_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* RampRate::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<RampRate*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .google.protobuf.FloatValue negativeReactivePowerKVArPerMin = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::FloatValue::_InternalParse;
        object = msg->mutable_negativereactivepowerkvarpermin();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.FloatValue negativeRealPowerKWPerMin = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::FloatValue::_InternalParse;
        object = msg->mutable_negativerealpowerkwpermin();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.FloatValue positiveReactivePowerKVArPerMin = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::FloatValue::_InternalParse;
        object = msg->mutable_positivereactivepowerkvarpermin();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.FloatValue positiveRealPowerKWPerMin = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::FloatValue::_InternalParse;
        object = msg->mutable_positiverealpowerkwpermin();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool RampRate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:commonmodule.RampRate)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.FloatValue negativeReactivePowerKVArPerMin = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_negativereactivepowerkvarpermin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.FloatValue negativeRealPowerKWPerMin = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_negativerealpowerkwpermin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.FloatValue positiveReactivePowerKVArPerMin = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_positivereactivepowerkvarpermin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.FloatValue positiveRealPowerKWPerMin = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_positiverealpowerkwpermin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:commonmodule.RampRate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:commonmodule.RampRate)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void RampRate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:commonmodule.RampRate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.FloatValue negativeReactivePowerKVArPerMin = 1;
  if (this->has_negativereactivepowerkvarpermin()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::negativereactivepowerkvarpermin(this), output);
  }

  // .google.protobuf.FloatValue negativeRealPowerKWPerMin = 2;
  if (this->has_negativerealpowerkwpermin()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::negativerealpowerkwpermin(this), output);
  }

  // .google.protobuf.FloatValue positiveReactivePowerKVArPerMin = 3;
  if (this->has_positivereactivepowerkvarpermin()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::positivereactivepowerkvarpermin(this), output);
  }

  // .google.protobuf.FloatValue positiveRealPowerKWPerMin = 4;
  if (this->has_positiverealpowerkwpermin()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::positiverealpowerkwpermin(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:commonmodule.RampRate)
}

::google::protobuf::uint8* RampRate::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:commonmodule.RampRate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.FloatValue negativeReactivePowerKVArPerMin = 1;
  if (this->has_negativereactivepowerkvarpermin()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::negativereactivepowerkvarpermin(this), target);
  }

  // .google.protobuf.FloatValue negativeRealPowerKWPerMin = 2;
  if (this->has_negativerealpowerkwpermin()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::negativerealpowerkwpermin(this), target);
  }

  // .google.protobuf.FloatValue positiveReactivePowerKVArPerMin = 3;
  if (this->has_positivereactivepowerkvarpermin()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::positivereactivepowerkvarpermin(this), target);
  }

  // .google.protobuf.FloatValue positiveRealPowerKWPerMin = 4;
  if (this->has_positiverealpowerkwpermin()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::positiverealpowerkwpermin(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:commonmodule.RampRate)
  return target;
}

size_t RampRate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:commonmodule.RampRate)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.FloatValue negativeReactivePowerKVArPerMin = 1;
  if (this->has_negativereactivepowerkvarpermin()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *negativereactivepowerkvarpermin_);
  }

  // .google.protobuf.FloatValue negativeRealPowerKWPerMin = 2;
  if (this->has_negativerealpowerkwpermin()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *negativerealpowerkwpermin_);
  }

  // .google.protobuf.FloatValue positiveReactivePowerKVArPerMin = 3;
  if (this->has_positivereactivepowerkvarpermin()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *positivereactivepowerkvarpermin_);
  }

  // .google.protobuf.FloatValue positiveRealPowerKWPerMin = 4;
  if (this->has_positiverealpowerkwpermin()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *positiverealpowerkwpermin_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RampRate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:commonmodule.RampRate)
  GOOGLE_DCHECK_NE(&from, this);
  const RampRate* source =
      ::google::protobuf::DynamicCastToGenerated<RampRate>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:commonmodule.RampRate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:commonmodule.RampRate)
    MergeFrom(*source);
  }
}

void RampRate::MergeFrom(const RampRate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:commonmodule.RampRate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_negativereactivepowerkvarpermin()) {
    mutable_negativereactivepowerkvarpermin()->::google::protobuf::FloatValue::MergeFrom(from.negativereactivepowerkvarpermin());
  }
  if (from.has_negativerealpowerkwpermin()) {
    mutable_negativerealpowerkwpermin()->::google::protobuf::FloatValue::MergeFrom(from.negativerealpowerkwpermin());
  }
  if (from.has_positivereactivepowerkvarpermin()) {
    mutable_positivereactivepowerkvarpermin()->::google::protobuf::FloatValue::MergeFrom(from.positivereactivepowerkvarpermin());
  }
  if (from.has_positiverealpowerkwpermin()) {
    mutable_positiverealpowerkwpermin()->::google::protobuf::FloatValue::MergeFrom(from.positiverealpowerkwpermin());
  }
}

void RampRate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:commonmodule.RampRate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RampRate::CopyFrom(const RampRate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:commonmodule.RampRate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RampRate::IsInitialized() const {
  return true;
}

void RampRate::Swap(RampRate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RampRate::InternalSwap(RampRate* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(negativereactivepowerkvarpermin_, other->negativereactivepowerkvarpermin_);
  swap(negativerealpowerkwpermin_, other->negativerealpowerkwpermin_);
  swap(positivereactivepowerkvarpermin_, other->positivereactivepowerkvarpermin_);
  swap(positiverealpowerkwpermin_, other->positiverealpowerkwpermin_);
}

::google::protobuf::Metadata RampRate::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return ::file_level_metadata_commonmodule_2fcommonmodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ReadingMessageInfo::InitAsDefaultInstance() {
  ::commonmodule::_ReadingMessageInfo_default_instance_._instance.get_mutable()->messageinfo_ = const_cast< ::commonmodule::MessageInfo*>(
      ::commonmodule::MessageInfo::internal_default_instance());
}
class ReadingMessageInfo::HasBitSetters {
 public:
  static const ::commonmodule::MessageInfo& messageinfo(const ReadingMessageInfo* msg);
};

const ::commonmodule::MessageInfo&
ReadingMessageInfo::HasBitSetters::messageinfo(const ReadingMessageInfo* msg) {
  return *msg->messageinfo_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReadingMessageInfo::kMessageInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReadingMessageInfo::ReadingMessageInfo()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:commonmodule.ReadingMessageInfo)
}
ReadingMessageInfo::ReadingMessageInfo(const ReadingMessageInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_messageinfo()) {
    messageinfo_ = new ::commonmodule::MessageInfo(*from.messageinfo_);
  } else {
    messageinfo_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:commonmodule.ReadingMessageInfo)
}

void ReadingMessageInfo::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ReadingMessageInfo_commonmodule_2fcommonmodule_2eproto.base);
  messageinfo_ = nullptr;
}

ReadingMessageInfo::~ReadingMessageInfo() {
  // @@protoc_insertion_point(destructor:commonmodule.ReadingMessageInfo)
  SharedDtor();
}

void ReadingMessageInfo::SharedDtor() {
  if (this != internal_default_instance()) delete messageinfo_;
}

void ReadingMessageInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ReadingMessageInfo& ReadingMessageInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ReadingMessageInfo_commonmodule_2fcommonmodule_2eproto.base);
  return *internal_default_instance();
}


void ReadingMessageInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:commonmodule.ReadingMessageInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && messageinfo_ != nullptr) {
    delete messageinfo_;
  }
  messageinfo_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ReadingMessageInfo::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ReadingMessageInfo*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .commonmodule.MessageInfo messageInfo = 1 [(.uml.option_parent_message) = true];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::MessageInfo::_InternalParse;
        object = msg->mutable_messageinfo();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ReadingMessageInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:commonmodule.ReadingMessageInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .commonmodule.MessageInfo messageInfo = 1 [(.uml.option_parent_message) = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_messageinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:commonmodule.ReadingMessageInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:commonmodule.ReadingMessageInfo)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ReadingMessageInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:commonmodule.ReadingMessageInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.MessageInfo messageInfo = 1 [(.uml.option_parent_message) = true];
  if (this->has_messageinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::messageinfo(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:commonmodule.ReadingMessageInfo)
}

::google::protobuf::uint8* ReadingMessageInfo::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:commonmodule.ReadingMessageInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.MessageInfo messageInfo = 1 [(.uml.option_parent_message) = true];
  if (this->has_messageinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::messageinfo(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:commonmodule.ReadingMessageInfo)
  return target;
}

size_t ReadingMessageInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:commonmodule.ReadingMessageInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .commonmodule.MessageInfo messageInfo = 1 [(.uml.option_parent_message) = true];
  if (this->has_messageinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *messageinfo_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReadingMessageInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:commonmodule.ReadingMessageInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const ReadingMessageInfo* source =
      ::google::protobuf::DynamicCastToGenerated<ReadingMessageInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:commonmodule.ReadingMessageInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:commonmodule.ReadingMessageInfo)
    MergeFrom(*source);
  }
}

void ReadingMessageInfo::MergeFrom(const ReadingMessageInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:commonmodule.ReadingMessageInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_messageinfo()) {
    mutable_messageinfo()->::commonmodule::MessageInfo::MergeFrom(from.messageinfo());
  }
}

void ReadingMessageInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:commonmodule.ReadingMessageInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReadingMessageInfo::CopyFrom(const ReadingMessageInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:commonmodule.ReadingMessageInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadingMessageInfo::IsInitialized() const {
  return true;
}

void ReadingMessageInfo::Swap(ReadingMessageInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReadingMessageInfo::InternalSwap(ReadingMessageInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(messageinfo_, other->messageinfo_);
}

::google::protobuf::Metadata ReadingMessageInfo::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return ::file_level_metadata_commonmodule_2fcommonmodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ReadingMMTR::InitAsDefaultInstance() {
  ::commonmodule::_ReadingMMTR_default_instance_._instance.get_mutable()->logicalnode_ = const_cast< ::commonmodule::LogicalNode*>(
      ::commonmodule::LogicalNode::internal_default_instance());
  ::commonmodule::_ReadingMMTR_default_instance_._instance.get_mutable()->dmdvah_ = const_cast< ::commonmodule::BCR*>(
      ::commonmodule::BCR::internal_default_instance());
  ::commonmodule::_ReadingMMTR_default_instance_._instance.get_mutable()->dmdvarh_ = const_cast< ::commonmodule::BCR*>(
      ::commonmodule::BCR::internal_default_instance());
  ::commonmodule::_ReadingMMTR_default_instance_._instance.get_mutable()->dmdwh_ = const_cast< ::commonmodule::BCR*>(
      ::commonmodule::BCR::internal_default_instance());
  ::commonmodule::_ReadingMMTR_default_instance_._instance.get_mutable()->supvah_ = const_cast< ::commonmodule::BCR*>(
      ::commonmodule::BCR::internal_default_instance());
  ::commonmodule::_ReadingMMTR_default_instance_._instance.get_mutable()->supvarh_ = const_cast< ::commonmodule::BCR*>(
      ::commonmodule::BCR::internal_default_instance());
  ::commonmodule::_ReadingMMTR_default_instance_._instance.get_mutable()->supwh_ = const_cast< ::commonmodule::BCR*>(
      ::commonmodule::BCR::internal_default_instance());
  ::commonmodule::_ReadingMMTR_default_instance_._instance.get_mutable()->totvah_ = const_cast< ::commonmodule::BCR*>(
      ::commonmodule::BCR::internal_default_instance());
  ::commonmodule::_ReadingMMTR_default_instance_._instance.get_mutable()->totvarh_ = const_cast< ::commonmodule::BCR*>(
      ::commonmodule::BCR::internal_default_instance());
  ::commonmodule::_ReadingMMTR_default_instance_._instance.get_mutable()->totwh_ = const_cast< ::commonmodule::BCR*>(
      ::commonmodule::BCR::internal_default_instance());
}
class ReadingMMTR::HasBitSetters {
 public:
  static const ::commonmodule::LogicalNode& logicalnode(const ReadingMMTR* msg);
  static const ::commonmodule::BCR& dmdvah(const ReadingMMTR* msg);
  static const ::commonmodule::BCR& dmdvarh(const ReadingMMTR* msg);
  static const ::commonmodule::BCR& dmdwh(const ReadingMMTR* msg);
  static const ::commonmodule::BCR& supvah(const ReadingMMTR* msg);
  static const ::commonmodule::BCR& supvarh(const ReadingMMTR* msg);
  static const ::commonmodule::BCR& supwh(const ReadingMMTR* msg);
  static const ::commonmodule::BCR& totvah(const ReadingMMTR* msg);
  static const ::commonmodule::BCR& totvarh(const ReadingMMTR* msg);
  static const ::commonmodule::BCR& totwh(const ReadingMMTR* msg);
};

const ::commonmodule::LogicalNode&
ReadingMMTR::HasBitSetters::logicalnode(const ReadingMMTR* msg) {
  return *msg->logicalnode_;
}
const ::commonmodule::BCR&
ReadingMMTR::HasBitSetters::dmdvah(const ReadingMMTR* msg) {
  return *msg->dmdvah_;
}
const ::commonmodule::BCR&
ReadingMMTR::HasBitSetters::dmdvarh(const ReadingMMTR* msg) {
  return *msg->dmdvarh_;
}
const ::commonmodule::BCR&
ReadingMMTR::HasBitSetters::dmdwh(const ReadingMMTR* msg) {
  return *msg->dmdwh_;
}
const ::commonmodule::BCR&
ReadingMMTR::HasBitSetters::supvah(const ReadingMMTR* msg) {
  return *msg->supvah_;
}
const ::commonmodule::BCR&
ReadingMMTR::HasBitSetters::supvarh(const ReadingMMTR* msg) {
  return *msg->supvarh_;
}
const ::commonmodule::BCR&
ReadingMMTR::HasBitSetters::supwh(const ReadingMMTR* msg) {
  return *msg->supwh_;
}
const ::commonmodule::BCR&
ReadingMMTR::HasBitSetters::totvah(const ReadingMMTR* msg) {
  return *msg->totvah_;
}
const ::commonmodule::BCR&
ReadingMMTR::HasBitSetters::totvarh(const ReadingMMTR* msg) {
  return *msg->totvarh_;
}
const ::commonmodule::BCR&
ReadingMMTR::HasBitSetters::totwh(const ReadingMMTR* msg) {
  return *msg->totwh_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReadingMMTR::kLogicalNodeFieldNumber;
const int ReadingMMTR::kDmdVAhFieldNumber;
const int ReadingMMTR::kDmdVArhFieldNumber;
const int ReadingMMTR::kDmdWhFieldNumber;
const int ReadingMMTR::kSupVAhFieldNumber;
const int ReadingMMTR::kSupVArhFieldNumber;
const int ReadingMMTR::kSupWhFieldNumber;
const int ReadingMMTR::kTotVAhFieldNumber;
const int ReadingMMTR::kTotVArhFieldNumber;
const int ReadingMMTR::kTotWhFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReadingMMTR::ReadingMMTR()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:commonmodule.ReadingMMTR)
}
ReadingMMTR::ReadingMMTR(const ReadingMMTR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_logicalnode()) {
    logicalnode_ = new ::commonmodule::LogicalNode(*from.logicalnode_);
  } else {
    logicalnode_ = nullptr;
  }
  if (from.has_dmdvah()) {
    dmdvah_ = new ::commonmodule::BCR(*from.dmdvah_);
  } else {
    dmdvah_ = nullptr;
  }
  if (from.has_dmdvarh()) {
    dmdvarh_ = new ::commonmodule::BCR(*from.dmdvarh_);
  } else {
    dmdvarh_ = nullptr;
  }
  if (from.has_dmdwh()) {
    dmdwh_ = new ::commonmodule::BCR(*from.dmdwh_);
  } else {
    dmdwh_ = nullptr;
  }
  if (from.has_supvah()) {
    supvah_ = new ::commonmodule::BCR(*from.supvah_);
  } else {
    supvah_ = nullptr;
  }
  if (from.has_supvarh()) {
    supvarh_ = new ::commonmodule::BCR(*from.supvarh_);
  } else {
    supvarh_ = nullptr;
  }
  if (from.has_supwh()) {
    supwh_ = new ::commonmodule::BCR(*from.supwh_);
  } else {
    supwh_ = nullptr;
  }
  if (from.has_totvah()) {
    totvah_ = new ::commonmodule::BCR(*from.totvah_);
  } else {
    totvah_ = nullptr;
  }
  if (from.has_totvarh()) {
    totvarh_ = new ::commonmodule::BCR(*from.totvarh_);
  } else {
    totvarh_ = nullptr;
  }
  if (from.has_totwh()) {
    totwh_ = new ::commonmodule::BCR(*from.totwh_);
  } else {
    totwh_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:commonmodule.ReadingMMTR)
}

void ReadingMMTR::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ReadingMMTR_commonmodule_2fcommonmodule_2eproto.base);
  ::memset(&logicalnode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&totwh_) -
      reinterpret_cast<char*>(&logicalnode_)) + sizeof(totwh_));
}

ReadingMMTR::~ReadingMMTR() {
  // @@protoc_insertion_point(destructor:commonmodule.ReadingMMTR)
  SharedDtor();
}

void ReadingMMTR::SharedDtor() {
  if (this != internal_default_instance()) delete logicalnode_;
  if (this != internal_default_instance()) delete dmdvah_;
  if (this != internal_default_instance()) delete dmdvarh_;
  if (this != internal_default_instance()) delete dmdwh_;
  if (this != internal_default_instance()) delete supvah_;
  if (this != internal_default_instance()) delete supvarh_;
  if (this != internal_default_instance()) delete supwh_;
  if (this != internal_default_instance()) delete totvah_;
  if (this != internal_default_instance()) delete totvarh_;
  if (this != internal_default_instance()) delete totwh_;
}

void ReadingMMTR::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ReadingMMTR& ReadingMMTR::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ReadingMMTR_commonmodule_2fcommonmodule_2eproto.base);
  return *internal_default_instance();
}


void ReadingMMTR::Clear() {
// @@protoc_insertion_point(message_clear_start:commonmodule.ReadingMMTR)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && logicalnode_ != nullptr) {
    delete logicalnode_;
  }
  logicalnode_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && dmdvah_ != nullptr) {
    delete dmdvah_;
  }
  dmdvah_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && dmdvarh_ != nullptr) {
    delete dmdvarh_;
  }
  dmdvarh_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && dmdwh_ != nullptr) {
    delete dmdwh_;
  }
  dmdwh_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && supvah_ != nullptr) {
    delete supvah_;
  }
  supvah_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && supvarh_ != nullptr) {
    delete supvarh_;
  }
  supvarh_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && supwh_ != nullptr) {
    delete supwh_;
  }
  supwh_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && totvah_ != nullptr) {
    delete totvah_;
  }
  totvah_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && totvarh_ != nullptr) {
    delete totvarh_;
  }
  totvarh_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && totwh_ != nullptr) {
    delete totwh_;
  }
  totwh_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ReadingMMTR::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ReadingMMTR*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .commonmodule.LogicalNode logicalNode = 1 [(.uml.option_parent_message) = true];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::LogicalNode::_InternalParse;
        object = msg->mutable_logicalnode();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .commonmodule.BCR DmdVAh = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::BCR::_InternalParse;
        object = msg->mutable_dmdvah();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .commonmodule.BCR DmdVArh = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::BCR::_InternalParse;
        object = msg->mutable_dmdvarh();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .commonmodule.BCR DmdWh = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::BCR::_InternalParse;
        object = msg->mutable_dmdwh();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .commonmodule.BCR SupVAh = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::BCR::_InternalParse;
        object = msg->mutable_supvah();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .commonmodule.BCR SupVArh = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::BCR::_InternalParse;
        object = msg->mutable_supvarh();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .commonmodule.BCR SupWh = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::BCR::_InternalParse;
        object = msg->mutable_supwh();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .commonmodule.BCR TotVAh = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 66) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::BCR::_InternalParse;
        object = msg->mutable_totvah();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .commonmodule.BCR TotVArh = 9;
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) != 74) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::BCR::_InternalParse;
        object = msg->mutable_totvarh();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .commonmodule.BCR TotWh = 10;
      case 10: {
        if (static_cast<::google::protobuf::uint8>(tag) != 82) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::BCR::_InternalParse;
        object = msg->mutable_totwh();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ReadingMMTR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:commonmodule.ReadingMMTR)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .commonmodule.LogicalNode logicalNode = 1 [(.uml.option_parent_message) = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_logicalnode()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.BCR DmdVAh = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_dmdvah()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.BCR DmdVArh = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_dmdvarh()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.BCR DmdWh = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_dmdwh()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.BCR SupVAh = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_supvah()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.BCR SupVArh = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_supvarh()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.BCR SupWh = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_supwh()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.BCR TotVAh = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (66 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_totvah()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.BCR TotVArh = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (74 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_totvarh()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.BCR TotWh = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (82 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_totwh()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:commonmodule.ReadingMMTR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:commonmodule.ReadingMMTR)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ReadingMMTR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:commonmodule.ReadingMMTR)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.LogicalNode logicalNode = 1 [(.uml.option_parent_message) = true];
  if (this->has_logicalnode()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::logicalnode(this), output);
  }

  // .commonmodule.BCR DmdVAh = 2;
  if (this->has_dmdvah()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::dmdvah(this), output);
  }

  // .commonmodule.BCR DmdVArh = 3;
  if (this->has_dmdvarh()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::dmdvarh(this), output);
  }

  // .commonmodule.BCR DmdWh = 4;
  if (this->has_dmdwh()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::dmdwh(this), output);
  }

  // .commonmodule.BCR SupVAh = 5;
  if (this->has_supvah()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, HasBitSetters::supvah(this), output);
  }

  // .commonmodule.BCR SupVArh = 6;
  if (this->has_supvarh()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, HasBitSetters::supvarh(this), output);
  }

  // .commonmodule.BCR SupWh = 7;
  if (this->has_supwh()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, HasBitSetters::supwh(this), output);
  }

  // .commonmodule.BCR TotVAh = 8;
  if (this->has_totvah()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, HasBitSetters::totvah(this), output);
  }

  // .commonmodule.BCR TotVArh = 9;
  if (this->has_totvarh()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, HasBitSetters::totvarh(this), output);
  }

  // .commonmodule.BCR TotWh = 10;
  if (this->has_totwh()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, HasBitSetters::totwh(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:commonmodule.ReadingMMTR)
}

::google::protobuf::uint8* ReadingMMTR::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:commonmodule.ReadingMMTR)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.LogicalNode logicalNode = 1 [(.uml.option_parent_message) = true];
  if (this->has_logicalnode()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::logicalnode(this), target);
  }

  // .commonmodule.BCR DmdVAh = 2;
  if (this->has_dmdvah()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::dmdvah(this), target);
  }

  // .commonmodule.BCR DmdVArh = 3;
  if (this->has_dmdvarh()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::dmdvarh(this), target);
  }

  // .commonmodule.BCR DmdWh = 4;
  if (this->has_dmdwh()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::dmdwh(this), target);
  }

  // .commonmodule.BCR SupVAh = 5;
  if (this->has_supvah()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, HasBitSetters::supvah(this), target);
  }

  // .commonmodule.BCR SupVArh = 6;
  if (this->has_supvarh()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, HasBitSetters::supvarh(this), target);
  }

  // .commonmodule.BCR SupWh = 7;
  if (this->has_supwh()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, HasBitSetters::supwh(this), target);
  }

  // .commonmodule.BCR TotVAh = 8;
  if (this->has_totvah()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, HasBitSetters::totvah(this), target);
  }

  // .commonmodule.BCR TotVArh = 9;
  if (this->has_totvarh()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, HasBitSetters::totvarh(this), target);
  }

  // .commonmodule.BCR TotWh = 10;
  if (this->has_totwh()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, HasBitSetters::totwh(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:commonmodule.ReadingMMTR)
  return target;
}

size_t ReadingMMTR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:commonmodule.ReadingMMTR)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .commonmodule.LogicalNode logicalNode = 1 [(.uml.option_parent_message) = true];
  if (this->has_logicalnode()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *logicalnode_);
  }

  // .commonmodule.BCR DmdVAh = 2;
  if (this->has_dmdvah()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *dmdvah_);
  }

  // .commonmodule.BCR DmdVArh = 3;
  if (this->has_dmdvarh()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *dmdvarh_);
  }

  // .commonmodule.BCR DmdWh = 4;
  if (this->has_dmdwh()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *dmdwh_);
  }

  // .commonmodule.BCR SupVAh = 5;
  if (this->has_supvah()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *supvah_);
  }

  // .commonmodule.BCR SupVArh = 6;
  if (this->has_supvarh()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *supvarh_);
  }

  // .commonmodule.BCR SupWh = 7;
  if (this->has_supwh()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *supwh_);
  }

  // .commonmodule.BCR TotVAh = 8;
  if (this->has_totvah()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *totvah_);
  }

  // .commonmodule.BCR TotVArh = 9;
  if (this->has_totvarh()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *totvarh_);
  }

  // .commonmodule.BCR TotWh = 10;
  if (this->has_totwh()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *totwh_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReadingMMTR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:commonmodule.ReadingMMTR)
  GOOGLE_DCHECK_NE(&from, this);
  const ReadingMMTR* source =
      ::google::protobuf::DynamicCastToGenerated<ReadingMMTR>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:commonmodule.ReadingMMTR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:commonmodule.ReadingMMTR)
    MergeFrom(*source);
  }
}

void ReadingMMTR::MergeFrom(const ReadingMMTR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:commonmodule.ReadingMMTR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_logicalnode()) {
    mutable_logicalnode()->::commonmodule::LogicalNode::MergeFrom(from.logicalnode());
  }
  if (from.has_dmdvah()) {
    mutable_dmdvah()->::commonmodule::BCR::MergeFrom(from.dmdvah());
  }
  if (from.has_dmdvarh()) {
    mutable_dmdvarh()->::commonmodule::BCR::MergeFrom(from.dmdvarh());
  }
  if (from.has_dmdwh()) {
    mutable_dmdwh()->::commonmodule::BCR::MergeFrom(from.dmdwh());
  }
  if (from.has_supvah()) {
    mutable_supvah()->::commonmodule::BCR::MergeFrom(from.supvah());
  }
  if (from.has_supvarh()) {
    mutable_supvarh()->::commonmodule::BCR::MergeFrom(from.supvarh());
  }
  if (from.has_supwh()) {
    mutable_supwh()->::commonmodule::BCR::MergeFrom(from.supwh());
  }
  if (from.has_totvah()) {
    mutable_totvah()->::commonmodule::BCR::MergeFrom(from.totvah());
  }
  if (from.has_totvarh()) {
    mutable_totvarh()->::commonmodule::BCR::MergeFrom(from.totvarh());
  }
  if (from.has_totwh()) {
    mutable_totwh()->::commonmodule::BCR::MergeFrom(from.totwh());
  }
}

void ReadingMMTR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:commonmodule.ReadingMMTR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReadingMMTR::CopyFrom(const ReadingMMTR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:commonmodule.ReadingMMTR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadingMMTR::IsInitialized() const {
  return true;
}

void ReadingMMTR::Swap(ReadingMMTR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReadingMMTR::InternalSwap(ReadingMMTR* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(logicalnode_, other->logicalnode_);
  swap(dmdvah_, other->dmdvah_);
  swap(dmdvarh_, other->dmdvarh_);
  swap(dmdwh_, other->dmdwh_);
  swap(supvah_, other->supvah_);
  swap(supvarh_, other->supvarh_);
  swap(supwh_, other->supwh_);
  swap(totvah_, other->totvah_);
  swap(totvarh_, other->totvarh_);
  swap(totwh_, other->totwh_);
}

::google::protobuf::Metadata ReadingMMTR::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return ::file_level_metadata_commonmodule_2fcommonmodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void WYE::InitAsDefaultInstance() {
  ::commonmodule::_WYE_default_instance_._instance.get_mutable()->net_ = const_cast< ::commonmodule::CMV*>(
      ::commonmodule::CMV::internal_default_instance());
  ::commonmodule::_WYE_default_instance_._instance.get_mutable()->neut_ = const_cast< ::commonmodule::CMV*>(
      ::commonmodule::CMV::internal_default_instance());
  ::commonmodule::_WYE_default_instance_._instance.get_mutable()->phsa_ = const_cast< ::commonmodule::CMV*>(
      ::commonmodule::CMV::internal_default_instance());
  ::commonmodule::_WYE_default_instance_._instance.get_mutable()->phsb_ = const_cast< ::commonmodule::CMV*>(
      ::commonmodule::CMV::internal_default_instance());
  ::commonmodule::_WYE_default_instance_._instance.get_mutable()->phsc_ = const_cast< ::commonmodule::CMV*>(
      ::commonmodule::CMV::internal_default_instance());
}
class WYE::HasBitSetters {
 public:
  static const ::commonmodule::CMV& net(const WYE* msg);
  static const ::commonmodule::CMV& neut(const WYE* msg);
  static const ::commonmodule::CMV& phsa(const WYE* msg);
  static const ::commonmodule::CMV& phsb(const WYE* msg);
  static const ::commonmodule::CMV& phsc(const WYE* msg);
};

const ::commonmodule::CMV&
WYE::HasBitSetters::net(const WYE* msg) {
  return *msg->net_;
}
const ::commonmodule::CMV&
WYE::HasBitSetters::neut(const WYE* msg) {
  return *msg->neut_;
}
const ::commonmodule::CMV&
WYE::HasBitSetters::phsa(const WYE* msg) {
  return *msg->phsa_;
}
const ::commonmodule::CMV&
WYE::HasBitSetters::phsb(const WYE* msg) {
  return *msg->phsb_;
}
const ::commonmodule::CMV&
WYE::HasBitSetters::phsc(const WYE* msg) {
  return *msg->phsc_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WYE::kNetFieldNumber;
const int WYE::kNeutFieldNumber;
const int WYE::kPhsAFieldNumber;
const int WYE::kPhsBFieldNumber;
const int WYE::kPhsCFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WYE::WYE()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:commonmodule.WYE)
}
WYE::WYE(const WYE& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_net()) {
    net_ = new ::commonmodule::CMV(*from.net_);
  } else {
    net_ = nullptr;
  }
  if (from.has_neut()) {
    neut_ = new ::commonmodule::CMV(*from.neut_);
  } else {
    neut_ = nullptr;
  }
  if (from.has_phsa()) {
    phsa_ = new ::commonmodule::CMV(*from.phsa_);
  } else {
    phsa_ = nullptr;
  }
  if (from.has_phsb()) {
    phsb_ = new ::commonmodule::CMV(*from.phsb_);
  } else {
    phsb_ = nullptr;
  }
  if (from.has_phsc()) {
    phsc_ = new ::commonmodule::CMV(*from.phsc_);
  } else {
    phsc_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:commonmodule.WYE)
}

void WYE::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_WYE_commonmodule_2fcommonmodule_2eproto.base);
  ::memset(&net_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&phsc_) -
      reinterpret_cast<char*>(&net_)) + sizeof(phsc_));
}

WYE::~WYE() {
  // @@protoc_insertion_point(destructor:commonmodule.WYE)
  SharedDtor();
}

void WYE::SharedDtor() {
  if (this != internal_default_instance()) delete net_;
  if (this != internal_default_instance()) delete neut_;
  if (this != internal_default_instance()) delete phsa_;
  if (this != internal_default_instance()) delete phsb_;
  if (this != internal_default_instance()) delete phsc_;
}

void WYE::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const WYE& WYE::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_WYE_commonmodule_2fcommonmodule_2eproto.base);
  return *internal_default_instance();
}


void WYE::Clear() {
// @@protoc_insertion_point(message_clear_start:commonmodule.WYE)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && net_ != nullptr) {
    delete net_;
  }
  net_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && neut_ != nullptr) {
    delete neut_;
  }
  neut_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && phsa_ != nullptr) {
    delete phsa_;
  }
  phsa_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && phsb_ != nullptr) {
    delete phsb_;
  }
  phsb_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && phsc_ != nullptr) {
    delete phsc_;
  }
  phsc_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* WYE::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<WYE*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .commonmodule.CMV net = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::CMV::_InternalParse;
        object = msg->mutable_net();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .commonmodule.CMV neut = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::CMV::_InternalParse;
        object = msg->mutable_neut();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .commonmodule.CMV phsA = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::CMV::_InternalParse;
        object = msg->mutable_phsa();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .commonmodule.CMV phsB = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::CMV::_InternalParse;
        object = msg->mutable_phsb();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .commonmodule.CMV phsC = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::CMV::_InternalParse;
        object = msg->mutable_phsc();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool WYE::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:commonmodule.WYE)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .commonmodule.CMV net = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_net()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.CMV neut = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_neut()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.CMV phsA = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_phsa()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.CMV phsB = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_phsb()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.CMV phsC = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_phsc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:commonmodule.WYE)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:commonmodule.WYE)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void WYE::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:commonmodule.WYE)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.CMV net = 1;
  if (this->has_net()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::net(this), output);
  }

  // .commonmodule.CMV neut = 2;
  if (this->has_neut()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::neut(this), output);
  }

  // .commonmodule.CMV phsA = 3;
  if (this->has_phsa()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::phsa(this), output);
  }

  // .commonmodule.CMV phsB = 4;
  if (this->has_phsb()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::phsb(this), output);
  }

  // .commonmodule.CMV phsC = 5;
  if (this->has_phsc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, HasBitSetters::phsc(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:commonmodule.WYE)
}

::google::protobuf::uint8* WYE::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:commonmodule.WYE)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.CMV net = 1;
  if (this->has_net()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::net(this), target);
  }

  // .commonmodule.CMV neut = 2;
  if (this->has_neut()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::neut(this), target);
  }

  // .commonmodule.CMV phsA = 3;
  if (this->has_phsa()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::phsa(this), target);
  }

  // .commonmodule.CMV phsB = 4;
  if (this->has_phsb()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::phsb(this), target);
  }

  // .commonmodule.CMV phsC = 5;
  if (this->has_phsc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, HasBitSetters::phsc(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:commonmodule.WYE)
  return target;
}

size_t WYE::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:commonmodule.WYE)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .commonmodule.CMV net = 1;
  if (this->has_net()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *net_);
  }

  // .commonmodule.CMV neut = 2;
  if (this->has_neut()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *neut_);
  }

  // .commonmodule.CMV phsA = 3;
  if (this->has_phsa()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *phsa_);
  }

  // .commonmodule.CMV phsB = 4;
  if (this->has_phsb()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *phsb_);
  }

  // .commonmodule.CMV phsC = 5;
  if (this->has_phsc()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *phsc_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WYE::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:commonmodule.WYE)
  GOOGLE_DCHECK_NE(&from, this);
  const WYE* source =
      ::google::protobuf::DynamicCastToGenerated<WYE>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:commonmodule.WYE)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:commonmodule.WYE)
    MergeFrom(*source);
  }
}

void WYE::MergeFrom(const WYE& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:commonmodule.WYE)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_net()) {
    mutable_net()->::commonmodule::CMV::MergeFrom(from.net());
  }
  if (from.has_neut()) {
    mutable_neut()->::commonmodule::CMV::MergeFrom(from.neut());
  }
  if (from.has_phsa()) {
    mutable_phsa()->::commonmodule::CMV::MergeFrom(from.phsa());
  }
  if (from.has_phsb()) {
    mutable_phsb()->::commonmodule::CMV::MergeFrom(from.phsb());
  }
  if (from.has_phsc()) {
    mutable_phsc()->::commonmodule::CMV::MergeFrom(from.phsc());
  }
}

void WYE::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:commonmodule.WYE)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WYE::CopyFrom(const WYE& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:commonmodule.WYE)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WYE::IsInitialized() const {
  return true;
}

void WYE::Swap(WYE* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WYE::InternalSwap(WYE* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(net_, other->net_);
  swap(neut_, other->neut_);
  swap(phsa_, other->phsa_);
  swap(phsb_, other->phsb_);
  swap(phsc_, other->phsc_);
}

::google::protobuf::Metadata WYE::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return ::file_level_metadata_commonmodule_2fcommonmodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ReadingMMXU::InitAsDefaultInstance() {
  ::commonmodule::_ReadingMMXU_default_instance_._instance.get_mutable()->logicalnode_ = const_cast< ::commonmodule::LogicalNode*>(
      ::commonmodule::LogicalNode::internal_default_instance());
  ::commonmodule::_ReadingMMXU_default_instance_._instance.get_mutable()->a_ = const_cast< ::commonmodule::WYE*>(
      ::commonmodule::WYE::internal_default_instance());
  ::commonmodule::_ReadingMMXU_default_instance_._instance.get_mutable()->clcmth_ = const_cast< ::commonmodule::ENG_CalcMethodKind*>(
      ::commonmodule::ENG_CalcMethodKind::internal_default_instance());
  ::commonmodule::_ReadingMMXU_default_instance_._instance.get_mutable()->hz_ = const_cast< ::commonmodule::MV*>(
      ::commonmodule::MV::internal_default_instance());
  ::commonmodule::_ReadingMMXU_default_instance_._instance.get_mutable()->pf_ = const_cast< ::commonmodule::WYE*>(
      ::commonmodule::WYE::internal_default_instance());
  ::commonmodule::_ReadingMMXU_default_instance_._instance.get_mutable()->pfsign_ = const_cast< ::commonmodule::ENG_PFSignKind*>(
      ::commonmodule::ENG_PFSignKind::internal_default_instance());
  ::commonmodule::_ReadingMMXU_default_instance_._instance.get_mutable()->phv_ = const_cast< ::commonmodule::WYE*>(
      ::commonmodule::WYE::internal_default_instance());
  ::commonmodule::_ReadingMMXU_default_instance_._instance.get_mutable()->ppv_ = const_cast< ::commonmodule::DEL*>(
      ::commonmodule::DEL::internal_default_instance());
  ::commonmodule::_ReadingMMXU_default_instance_._instance.get_mutable()->va_ = const_cast< ::commonmodule::WYE*>(
      ::commonmodule::WYE::internal_default_instance());
  ::commonmodule::_ReadingMMXU_default_instance_._instance.get_mutable()->var_ = const_cast< ::commonmodule::WYE*>(
      ::commonmodule::WYE::internal_default_instance());
  ::commonmodule::_ReadingMMXU_default_instance_._instance.get_mutable()->w_ = const_cast< ::commonmodule::WYE*>(
      ::commonmodule::WYE::internal_default_instance());
}
class ReadingMMXU::HasBitSetters {
 public:
  static const ::commonmodule::LogicalNode& logicalnode(const ReadingMMXU* msg);
  static const ::commonmodule::WYE& a(const ReadingMMXU* msg);
  static const ::commonmodule::ENG_CalcMethodKind& clcmth(const ReadingMMXU* msg);
  static const ::commonmodule::MV& hz(const ReadingMMXU* msg);
  static const ::commonmodule::WYE& pf(const ReadingMMXU* msg);
  static const ::commonmodule::ENG_PFSignKind& pfsign(const ReadingMMXU* msg);
  static const ::commonmodule::WYE& phv(const ReadingMMXU* msg);
  static const ::commonmodule::DEL& ppv(const ReadingMMXU* msg);
  static const ::commonmodule::WYE& va(const ReadingMMXU* msg);
  static const ::commonmodule::WYE& var(const ReadingMMXU* msg);
  static const ::commonmodule::WYE& w(const ReadingMMXU* msg);
};

const ::commonmodule::LogicalNode&
ReadingMMXU::HasBitSetters::logicalnode(const ReadingMMXU* msg) {
  return *msg->logicalnode_;
}
const ::commonmodule::WYE&
ReadingMMXU::HasBitSetters::a(const ReadingMMXU* msg) {
  return *msg->a_;
}
const ::commonmodule::ENG_CalcMethodKind&
ReadingMMXU::HasBitSetters::clcmth(const ReadingMMXU* msg) {
  return *msg->clcmth_;
}
const ::commonmodule::MV&
ReadingMMXU::HasBitSetters::hz(const ReadingMMXU* msg) {
  return *msg->hz_;
}
const ::commonmodule::WYE&
ReadingMMXU::HasBitSetters::pf(const ReadingMMXU* msg) {
  return *msg->pf_;
}
const ::commonmodule::ENG_PFSignKind&
ReadingMMXU::HasBitSetters::pfsign(const ReadingMMXU* msg) {
  return *msg->pfsign_;
}
const ::commonmodule::WYE&
ReadingMMXU::HasBitSetters::phv(const ReadingMMXU* msg) {
  return *msg->phv_;
}
const ::commonmodule::DEL&
ReadingMMXU::HasBitSetters::ppv(const ReadingMMXU* msg) {
  return *msg->ppv_;
}
const ::commonmodule::WYE&
ReadingMMXU::HasBitSetters::va(const ReadingMMXU* msg) {
  return *msg->va_;
}
const ::commonmodule::WYE&
ReadingMMXU::HasBitSetters::var(const ReadingMMXU* msg) {
  return *msg->var_;
}
const ::commonmodule::WYE&
ReadingMMXU::HasBitSetters::w(const ReadingMMXU* msg) {
  return *msg->w_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReadingMMXU::kLogicalNodeFieldNumber;
const int ReadingMMXU::kAFieldNumber;
const int ReadingMMXU::kClcMthFieldNumber;
const int ReadingMMXU::kHzFieldNumber;
const int ReadingMMXU::kPFFieldNumber;
const int ReadingMMXU::kPFSignFieldNumber;
const int ReadingMMXU::kPhVFieldNumber;
const int ReadingMMXU::kPPVFieldNumber;
const int ReadingMMXU::kVAFieldNumber;
const int ReadingMMXU::kVArFieldNumber;
const int ReadingMMXU::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReadingMMXU::ReadingMMXU()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:commonmodule.ReadingMMXU)
}
ReadingMMXU::ReadingMMXU(const ReadingMMXU& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_logicalnode()) {
    logicalnode_ = new ::commonmodule::LogicalNode(*from.logicalnode_);
  } else {
    logicalnode_ = nullptr;
  }
  if (from.has_a()) {
    a_ = new ::commonmodule::WYE(*from.a_);
  } else {
    a_ = nullptr;
  }
  if (from.has_clcmth()) {
    clcmth_ = new ::commonmodule::ENG_CalcMethodKind(*from.clcmth_);
  } else {
    clcmth_ = nullptr;
  }
  if (from.has_hz()) {
    hz_ = new ::commonmodule::MV(*from.hz_);
  } else {
    hz_ = nullptr;
  }
  if (from.has_pf()) {
    pf_ = new ::commonmodule::WYE(*from.pf_);
  } else {
    pf_ = nullptr;
  }
  if (from.has_pfsign()) {
    pfsign_ = new ::commonmodule::ENG_PFSignKind(*from.pfsign_);
  } else {
    pfsign_ = nullptr;
  }
  if (from.has_phv()) {
    phv_ = new ::commonmodule::WYE(*from.phv_);
  } else {
    phv_ = nullptr;
  }
  if (from.has_ppv()) {
    ppv_ = new ::commonmodule::DEL(*from.ppv_);
  } else {
    ppv_ = nullptr;
  }
  if (from.has_va()) {
    va_ = new ::commonmodule::WYE(*from.va_);
  } else {
    va_ = nullptr;
  }
  if (from.has_var()) {
    var_ = new ::commonmodule::WYE(*from.var_);
  } else {
    var_ = nullptr;
  }
  if (from.has_w()) {
    w_ = new ::commonmodule::WYE(*from.w_);
  } else {
    w_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:commonmodule.ReadingMMXU)
}

void ReadingMMXU::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ReadingMMXU_commonmodule_2fcommonmodule_2eproto.base);
  ::memset(&logicalnode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&w_) -
      reinterpret_cast<char*>(&logicalnode_)) + sizeof(w_));
}

ReadingMMXU::~ReadingMMXU() {
  // @@protoc_insertion_point(destructor:commonmodule.ReadingMMXU)
  SharedDtor();
}

void ReadingMMXU::SharedDtor() {
  if (this != internal_default_instance()) delete logicalnode_;
  if (this != internal_default_instance()) delete a_;
  if (this != internal_default_instance()) delete clcmth_;
  if (this != internal_default_instance()) delete hz_;
  if (this != internal_default_instance()) delete pf_;
  if (this != internal_default_instance()) delete pfsign_;
  if (this != internal_default_instance()) delete phv_;
  if (this != internal_default_instance()) delete ppv_;
  if (this != internal_default_instance()) delete va_;
  if (this != internal_default_instance()) delete var_;
  if (this != internal_default_instance()) delete w_;
}

void ReadingMMXU::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ReadingMMXU& ReadingMMXU::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ReadingMMXU_commonmodule_2fcommonmodule_2eproto.base);
  return *internal_default_instance();
}


void ReadingMMXU::Clear() {
// @@protoc_insertion_point(message_clear_start:commonmodule.ReadingMMXU)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && logicalnode_ != nullptr) {
    delete logicalnode_;
  }
  logicalnode_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && a_ != nullptr) {
    delete a_;
  }
  a_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && clcmth_ != nullptr) {
    delete clcmth_;
  }
  clcmth_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && hz_ != nullptr) {
    delete hz_;
  }
  hz_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && pf_ != nullptr) {
    delete pf_;
  }
  pf_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && pfsign_ != nullptr) {
    delete pfsign_;
  }
  pfsign_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && phv_ != nullptr) {
    delete phv_;
  }
  phv_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && ppv_ != nullptr) {
    delete ppv_;
  }
  ppv_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && va_ != nullptr) {
    delete va_;
  }
  va_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && var_ != nullptr) {
    delete var_;
  }
  var_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && w_ != nullptr) {
    delete w_;
  }
  w_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ReadingMMXU::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ReadingMMXU*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .commonmodule.LogicalNode logicalNode = 1 [(.uml.option_parent_message) = true];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::LogicalNode::_InternalParse;
        object = msg->mutable_logicalnode();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .commonmodule.WYE A = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::WYE::_InternalParse;
        object = msg->mutable_a();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .commonmodule.ENG_CalcMethodKind ClcMth = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::ENG_CalcMethodKind::_InternalParse;
        object = msg->mutable_clcmth();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .commonmodule.MV Hz = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::MV::_InternalParse;
        object = msg->mutable_hz();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .commonmodule.WYE PF = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::WYE::_InternalParse;
        object = msg->mutable_pf();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .commonmodule.ENG_PFSignKind PFSign = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::ENG_PFSignKind::_InternalParse;
        object = msg->mutable_pfsign();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .commonmodule.WYE PhV = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::WYE::_InternalParse;
        object = msg->mutable_phv();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .commonmodule.DEL PPV = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 66) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::DEL::_InternalParse;
        object = msg->mutable_ppv();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .commonmodule.WYE VA = 9;
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) != 74) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::WYE::_InternalParse;
        object = msg->mutable_va();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .commonmodule.WYE VAr = 10;
      case 10: {
        if (static_cast<::google::protobuf::uint8>(tag) != 82) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::WYE::_InternalParse;
        object = msg->mutable_var();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .commonmodule.WYE W = 11;
      case 11: {
        if (static_cast<::google::protobuf::uint8>(tag) != 90) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::WYE::_InternalParse;
        object = msg->mutable_w();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ReadingMMXU::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:commonmodule.ReadingMMXU)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .commonmodule.LogicalNode logicalNode = 1 [(.uml.option_parent_message) = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_logicalnode()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.WYE A = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_a()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.ENG_CalcMethodKind ClcMth = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_clcmth()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.MV Hz = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_hz()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.WYE PF = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pf()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.ENG_PFSignKind PFSign = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pfsign()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.WYE PhV = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_phv()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.DEL PPV = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (66 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ppv()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.WYE VA = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (74 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_va()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.WYE VAr = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (82 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_var()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.WYE W = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (90 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_w()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:commonmodule.ReadingMMXU)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:commonmodule.ReadingMMXU)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ReadingMMXU::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:commonmodule.ReadingMMXU)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.LogicalNode logicalNode = 1 [(.uml.option_parent_message) = true];
  if (this->has_logicalnode()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::logicalnode(this), output);
  }

  // .commonmodule.WYE A = 2;
  if (this->has_a()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::a(this), output);
  }

  // .commonmodule.ENG_CalcMethodKind ClcMth = 3;
  if (this->has_clcmth()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::clcmth(this), output);
  }

  // .commonmodule.MV Hz = 4;
  if (this->has_hz()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::hz(this), output);
  }

  // .commonmodule.WYE PF = 5;
  if (this->has_pf()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, HasBitSetters::pf(this), output);
  }

  // .commonmodule.ENG_PFSignKind PFSign = 6;
  if (this->has_pfsign()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, HasBitSetters::pfsign(this), output);
  }

  // .commonmodule.WYE PhV = 7;
  if (this->has_phv()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, HasBitSetters::phv(this), output);
  }

  // .commonmodule.DEL PPV = 8;
  if (this->has_ppv()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, HasBitSetters::ppv(this), output);
  }

  // .commonmodule.WYE VA = 9;
  if (this->has_va()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, HasBitSetters::va(this), output);
  }

  // .commonmodule.WYE VAr = 10;
  if (this->has_var()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, HasBitSetters::var(this), output);
  }

  // .commonmodule.WYE W = 11;
  if (this->has_w()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, HasBitSetters::w(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:commonmodule.ReadingMMXU)
}

::google::protobuf::uint8* ReadingMMXU::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:commonmodule.ReadingMMXU)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.LogicalNode logicalNode = 1 [(.uml.option_parent_message) = true];
  if (this->has_logicalnode()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::logicalnode(this), target);
  }

  // .commonmodule.WYE A = 2;
  if (this->has_a()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::a(this), target);
  }

  // .commonmodule.ENG_CalcMethodKind ClcMth = 3;
  if (this->has_clcmth()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::clcmth(this), target);
  }

  // .commonmodule.MV Hz = 4;
  if (this->has_hz()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::hz(this), target);
  }

  // .commonmodule.WYE PF = 5;
  if (this->has_pf()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, HasBitSetters::pf(this), target);
  }

  // .commonmodule.ENG_PFSignKind PFSign = 6;
  if (this->has_pfsign()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, HasBitSetters::pfsign(this), target);
  }

  // .commonmodule.WYE PhV = 7;
  if (this->has_phv()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, HasBitSetters::phv(this), target);
  }

  // .commonmodule.DEL PPV = 8;
  if (this->has_ppv()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, HasBitSetters::ppv(this), target);
  }

  // .commonmodule.WYE VA = 9;
  if (this->has_va()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, HasBitSetters::va(this), target);
  }

  // .commonmodule.WYE VAr = 10;
  if (this->has_var()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, HasBitSetters::var(this), target);
  }

  // .commonmodule.WYE W = 11;
  if (this->has_w()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, HasBitSetters::w(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:commonmodule.ReadingMMXU)
  return target;
}

size_t ReadingMMXU::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:commonmodule.ReadingMMXU)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .commonmodule.LogicalNode logicalNode = 1 [(.uml.option_parent_message) = true];
  if (this->has_logicalnode()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *logicalnode_);
  }

  // .commonmodule.WYE A = 2;
  if (this->has_a()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *a_);
  }

  // .commonmodule.ENG_CalcMethodKind ClcMth = 3;
  if (this->has_clcmth()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *clcmth_);
  }

  // .commonmodule.MV Hz = 4;
  if (this->has_hz()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *hz_);
  }

  // .commonmodule.WYE PF = 5;
  if (this->has_pf()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pf_);
  }

  // .commonmodule.ENG_PFSignKind PFSign = 6;
  if (this->has_pfsign()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pfsign_);
  }

  // .commonmodule.WYE PhV = 7;
  if (this->has_phv()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *phv_);
  }

  // .commonmodule.DEL PPV = 8;
  if (this->has_ppv()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *ppv_);
  }

  // .commonmodule.WYE VA = 9;
  if (this->has_va()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *va_);
  }

  // .commonmodule.WYE VAr = 10;
  if (this->has_var()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *var_);
  }

  // .commonmodule.WYE W = 11;
  if (this->has_w()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *w_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReadingMMXU::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:commonmodule.ReadingMMXU)
  GOOGLE_DCHECK_NE(&from, this);
  const ReadingMMXU* source =
      ::google::protobuf::DynamicCastToGenerated<ReadingMMXU>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:commonmodule.ReadingMMXU)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:commonmodule.ReadingMMXU)
    MergeFrom(*source);
  }
}

void ReadingMMXU::MergeFrom(const ReadingMMXU& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:commonmodule.ReadingMMXU)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_logicalnode()) {
    mutable_logicalnode()->::commonmodule::LogicalNode::MergeFrom(from.logicalnode());
  }
  if (from.has_a()) {
    mutable_a()->::commonmodule::WYE::MergeFrom(from.a());
  }
  if (from.has_clcmth()) {
    mutable_clcmth()->::commonmodule::ENG_CalcMethodKind::MergeFrom(from.clcmth());
  }
  if (from.has_hz()) {
    mutable_hz()->::commonmodule::MV::MergeFrom(from.hz());
  }
  if (from.has_pf()) {
    mutable_pf()->::commonmodule::WYE::MergeFrom(from.pf());
  }
  if (from.has_pfsign()) {
    mutable_pfsign()->::commonmodule::ENG_PFSignKind::MergeFrom(from.pfsign());
  }
  if (from.has_phv()) {
    mutable_phv()->::commonmodule::WYE::MergeFrom(from.phv());
  }
  if (from.has_ppv()) {
    mutable_ppv()->::commonmodule::DEL::MergeFrom(from.ppv());
  }
  if (from.has_va()) {
    mutable_va()->::commonmodule::WYE::MergeFrom(from.va());
  }
  if (from.has_var()) {
    mutable_var()->::commonmodule::WYE::MergeFrom(from.var());
  }
  if (from.has_w()) {
    mutable_w()->::commonmodule::WYE::MergeFrom(from.w());
  }
}

void ReadingMMXU::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:commonmodule.ReadingMMXU)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReadingMMXU::CopyFrom(const ReadingMMXU& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:commonmodule.ReadingMMXU)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadingMMXU::IsInitialized() const {
  return true;
}

void ReadingMMXU::Swap(ReadingMMXU* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReadingMMXU::InternalSwap(ReadingMMXU* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(logicalnode_, other->logicalnode_);
  swap(a_, other->a_);
  swap(clcmth_, other->clcmth_);
  swap(hz_, other->hz_);
  swap(pf_, other->pf_);
  swap(pfsign_, other->pfsign_);
  swap(phv_, other->phv_);
  swap(ppv_, other->ppv_);
  swap(va_, other->va_);
  swap(var_, other->var_);
  swap(w_, other->w_);
}

::google::protobuf::Metadata ReadingMMXU::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return ::file_level_metadata_commonmodule_2fcommonmodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Optional_DbPosKind::InitAsDefaultInstance() {
}
class Optional_DbPosKind::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Optional_DbPosKind::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Optional_DbPosKind::Optional_DbPosKind()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:commonmodule.Optional_DbPosKind)
}
Optional_DbPosKind::Optional_DbPosKind(const Optional_DbPosKind& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:commonmodule.Optional_DbPosKind)
}

void Optional_DbPosKind::SharedCtor() {
  value_ = 0;
}

Optional_DbPosKind::~Optional_DbPosKind() {
  // @@protoc_insertion_point(destructor:commonmodule.Optional_DbPosKind)
  SharedDtor();
}

void Optional_DbPosKind::SharedDtor() {
}

void Optional_DbPosKind::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Optional_DbPosKind& Optional_DbPosKind::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Optional_DbPosKind_commonmodule_2fcommonmodule_2eproto.base);
  return *internal_default_instance();
}


void Optional_DbPosKind::Clear() {
// @@protoc_insertion_point(message_clear_start:commonmodule.Optional_DbPosKind)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Optional_DbPosKind::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Optional_DbPosKind*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .commonmodule.DbPosKind value = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_value(static_cast<::commonmodule::DbPosKind>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Optional_DbPosKind::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:commonmodule.Optional_DbPosKind)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .commonmodule.DbPosKind value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_value(static_cast< ::commonmodule::DbPosKind >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:commonmodule.Optional_DbPosKind)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:commonmodule.Optional_DbPosKind)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Optional_DbPosKind::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:commonmodule.Optional_DbPosKind)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.DbPosKind value = 1;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:commonmodule.Optional_DbPosKind)
}

::google::protobuf::uint8* Optional_DbPosKind::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:commonmodule.Optional_DbPosKind)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.DbPosKind value = 1;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:commonmodule.Optional_DbPosKind)
  return target;
}

size_t Optional_DbPosKind::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:commonmodule.Optional_DbPosKind)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .commonmodule.DbPosKind value = 1;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Optional_DbPosKind::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:commonmodule.Optional_DbPosKind)
  GOOGLE_DCHECK_NE(&from, this);
  const Optional_DbPosKind* source =
      ::google::protobuf::DynamicCastToGenerated<Optional_DbPosKind>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:commonmodule.Optional_DbPosKind)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:commonmodule.Optional_DbPosKind)
    MergeFrom(*source);
  }
}

void Optional_DbPosKind::MergeFrom(const Optional_DbPosKind& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:commonmodule.Optional_DbPosKind)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value() != 0) {
    set_value(from.value());
  }
}

void Optional_DbPosKind::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:commonmodule.Optional_DbPosKind)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Optional_DbPosKind::CopyFrom(const Optional_DbPosKind& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:commonmodule.Optional_DbPosKind)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Optional_DbPosKind::IsInitialized() const {
  return true;
}

void Optional_DbPosKind::Swap(Optional_DbPosKind* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Optional_DbPosKind::InternalSwap(Optional_DbPosKind* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(value_, other->value_);
}

::google::protobuf::Metadata Optional_DbPosKind::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return ::file_level_metadata_commonmodule_2fcommonmodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void StatusDPS::InitAsDefaultInstance() {
  ::commonmodule::_StatusDPS_default_instance_._instance.get_mutable()->q_ = const_cast< ::commonmodule::Quality*>(
      ::commonmodule::Quality::internal_default_instance());
  ::commonmodule::_StatusDPS_default_instance_._instance.get_mutable()->t_ = const_cast< ::commonmodule::Timestamp*>(
      ::commonmodule::Timestamp::internal_default_instance());
}
class StatusDPS::HasBitSetters {
 public:
  static const ::commonmodule::Quality& q(const StatusDPS* msg);
  static const ::commonmodule::Timestamp& t(const StatusDPS* msg);
};

const ::commonmodule::Quality&
StatusDPS::HasBitSetters::q(const StatusDPS* msg) {
  return *msg->q_;
}
const ::commonmodule::Timestamp&
StatusDPS::HasBitSetters::t(const StatusDPS* msg) {
  return *msg->t_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StatusDPS::kQFieldNumber;
const int StatusDPS::kStValFieldNumber;
const int StatusDPS::kTFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StatusDPS::StatusDPS()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:commonmodule.StatusDPS)
}
StatusDPS::StatusDPS(const StatusDPS& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_q()) {
    q_ = new ::commonmodule::Quality(*from.q_);
  } else {
    q_ = nullptr;
  }
  if (from.has_t()) {
    t_ = new ::commonmodule::Timestamp(*from.t_);
  } else {
    t_ = nullptr;
  }
  stval_ = from.stval_;
  // @@protoc_insertion_point(copy_constructor:commonmodule.StatusDPS)
}

void StatusDPS::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_StatusDPS_commonmodule_2fcommonmodule_2eproto.base);
  ::memset(&q_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&stval_) -
      reinterpret_cast<char*>(&q_)) + sizeof(stval_));
}

StatusDPS::~StatusDPS() {
  // @@protoc_insertion_point(destructor:commonmodule.StatusDPS)
  SharedDtor();
}

void StatusDPS::SharedDtor() {
  if (this != internal_default_instance()) delete q_;
  if (this != internal_default_instance()) delete t_;
}

void StatusDPS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StatusDPS& StatusDPS::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_StatusDPS_commonmodule_2fcommonmodule_2eproto.base);
  return *internal_default_instance();
}


void StatusDPS::Clear() {
// @@protoc_insertion_point(message_clear_start:commonmodule.StatusDPS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && q_ != nullptr) {
    delete q_;
  }
  q_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && t_ != nullptr) {
    delete t_;
  }
  t_ = nullptr;
  stval_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* StatusDPS::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<StatusDPS*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .commonmodule.Quality q = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::Quality::_InternalParse;
        object = msg->mutable_q();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .commonmodule.DbPosKind stVal = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_stval(static_cast<::commonmodule::DbPosKind>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .commonmodule.Timestamp t = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::Timestamp::_InternalParse;
        object = msg->mutable_t();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool StatusDPS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:commonmodule.StatusDPS)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .commonmodule.Quality q = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_q()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.DbPosKind stVal = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_stval(static_cast< ::commonmodule::DbPosKind >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.Timestamp t = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_t()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:commonmodule.StatusDPS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:commonmodule.StatusDPS)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void StatusDPS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:commonmodule.StatusDPS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.Quality q = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_q()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::q(this), output);
  }

  // .commonmodule.DbPosKind stVal = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->stval() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->stval(), output);
  }

  // .commonmodule.Timestamp t = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_t()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::t(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:commonmodule.StatusDPS)
}

::google::protobuf::uint8* StatusDPS::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:commonmodule.StatusDPS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.Quality q = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_q()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::q(this), target);
  }

  // .commonmodule.DbPosKind stVal = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->stval() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->stval(), target);
  }

  // .commonmodule.Timestamp t = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_t()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::t(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:commonmodule.StatusDPS)
  return target;
}

size_t StatusDPS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:commonmodule.StatusDPS)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .commonmodule.Quality q = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_q()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *q_);
  }

  // .commonmodule.Timestamp t = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_t()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *t_);
  }

  // .commonmodule.DbPosKind stVal = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->stval() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->stval());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StatusDPS::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:commonmodule.StatusDPS)
  GOOGLE_DCHECK_NE(&from, this);
  const StatusDPS* source =
      ::google::protobuf::DynamicCastToGenerated<StatusDPS>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:commonmodule.StatusDPS)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:commonmodule.StatusDPS)
    MergeFrom(*source);
  }
}

void StatusDPS::MergeFrom(const StatusDPS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:commonmodule.StatusDPS)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_q()) {
    mutable_q()->::commonmodule::Quality::MergeFrom(from.q());
  }
  if (from.has_t()) {
    mutable_t()->::commonmodule::Timestamp::MergeFrom(from.t());
  }
  if (from.stval() != 0) {
    set_stval(from.stval());
  }
}

void StatusDPS::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:commonmodule.StatusDPS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StatusDPS::CopyFrom(const StatusDPS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:commonmodule.StatusDPS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StatusDPS::IsInitialized() const {
  return true;
}

void StatusDPS::Swap(StatusDPS* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StatusDPS::InternalSwap(StatusDPS* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(q_, other->q_);
  swap(t_, other->t_);
  swap(stval_, other->stval_);
}

::google::protobuf::Metadata StatusDPS::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return ::file_level_metadata_commonmodule_2fcommonmodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void StatusAndEventXCBR::InitAsDefaultInstance() {
  ::commonmodule::_StatusAndEventXCBR_default_instance_._instance.get_mutable()->logicalnodeforeventandstatus_ = const_cast< ::commonmodule::LogicalNodeForEventAndStatus*>(
      ::commonmodule::LogicalNodeForEventAndStatus::internal_default_instance());
  ::commonmodule::_StatusAndEventXCBR_default_instance_._instance.get_mutable()->dynamictest_ = const_cast< ::commonmodule::ENS_DynamicTestKind*>(
      ::commonmodule::ENS_DynamicTestKind::internal_default_instance());
  ::commonmodule::_StatusAndEventXCBR_default_instance_._instance.get_mutable()->pos_ = const_cast< ::commonmodule::StatusDPS*>(
      ::commonmodule::StatusDPS::internal_default_instance());
}
class StatusAndEventXCBR::HasBitSetters {
 public:
  static const ::commonmodule::LogicalNodeForEventAndStatus& logicalnodeforeventandstatus(const StatusAndEventXCBR* msg);
  static const ::commonmodule::ENS_DynamicTestKind& dynamictest(const StatusAndEventXCBR* msg);
  static const ::commonmodule::StatusDPS& pos(const StatusAndEventXCBR* msg);
};

const ::commonmodule::LogicalNodeForEventAndStatus&
StatusAndEventXCBR::HasBitSetters::logicalnodeforeventandstatus(const StatusAndEventXCBR* msg) {
  return *msg->logicalnodeforeventandstatus_;
}
const ::commonmodule::ENS_DynamicTestKind&
StatusAndEventXCBR::HasBitSetters::dynamictest(const StatusAndEventXCBR* msg) {
  return *msg->dynamictest_;
}
const ::commonmodule::StatusDPS&
StatusAndEventXCBR::HasBitSetters::pos(const StatusAndEventXCBR* msg) {
  return *msg->pos_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StatusAndEventXCBR::kLogicalNodeForEventAndStatusFieldNumber;
const int StatusAndEventXCBR::kDynamicTestFieldNumber;
const int StatusAndEventXCBR::kPosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StatusAndEventXCBR::StatusAndEventXCBR()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:commonmodule.StatusAndEventXCBR)
}
StatusAndEventXCBR::StatusAndEventXCBR(const StatusAndEventXCBR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_logicalnodeforeventandstatus()) {
    logicalnodeforeventandstatus_ = new ::commonmodule::LogicalNodeForEventAndStatus(*from.logicalnodeforeventandstatus_);
  } else {
    logicalnodeforeventandstatus_ = nullptr;
  }
  if (from.has_dynamictest()) {
    dynamictest_ = new ::commonmodule::ENS_DynamicTestKind(*from.dynamictest_);
  } else {
    dynamictest_ = nullptr;
  }
  if (from.has_pos()) {
    pos_ = new ::commonmodule::StatusDPS(*from.pos_);
  } else {
    pos_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:commonmodule.StatusAndEventXCBR)
}

void StatusAndEventXCBR::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_StatusAndEventXCBR_commonmodule_2fcommonmodule_2eproto.base);
  ::memset(&logicalnodeforeventandstatus_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pos_) -
      reinterpret_cast<char*>(&logicalnodeforeventandstatus_)) + sizeof(pos_));
}

StatusAndEventXCBR::~StatusAndEventXCBR() {
  // @@protoc_insertion_point(destructor:commonmodule.StatusAndEventXCBR)
  SharedDtor();
}

void StatusAndEventXCBR::SharedDtor() {
  if (this != internal_default_instance()) delete logicalnodeforeventandstatus_;
  if (this != internal_default_instance()) delete dynamictest_;
  if (this != internal_default_instance()) delete pos_;
}

void StatusAndEventXCBR::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StatusAndEventXCBR& StatusAndEventXCBR::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_StatusAndEventXCBR_commonmodule_2fcommonmodule_2eproto.base);
  return *internal_default_instance();
}


void StatusAndEventXCBR::Clear() {
// @@protoc_insertion_point(message_clear_start:commonmodule.StatusAndEventXCBR)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && logicalnodeforeventandstatus_ != nullptr) {
    delete logicalnodeforeventandstatus_;
  }
  logicalnodeforeventandstatus_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && dynamictest_ != nullptr) {
    delete dynamictest_;
  }
  dynamictest_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && pos_ != nullptr) {
    delete pos_;
  }
  pos_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* StatusAndEventXCBR::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<StatusAndEventXCBR*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .commonmodule.LogicalNodeForEventAndStatus logicalNodeForEventAndStatus = 1 [(.uml.option_parent_message) = true];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::LogicalNodeForEventAndStatus::_InternalParse;
        object = msg->mutable_logicalnodeforeventandstatus();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .commonmodule.ENS_DynamicTestKind DynamicTest = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::ENS_DynamicTestKind::_InternalParse;
        object = msg->mutable_dynamictest();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .commonmodule.StatusDPS Pos = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::StatusDPS::_InternalParse;
        object = msg->mutable_pos();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool StatusAndEventXCBR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:commonmodule.StatusAndEventXCBR)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .commonmodule.LogicalNodeForEventAndStatus logicalNodeForEventAndStatus = 1 [(.uml.option_parent_message) = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_logicalnodeforeventandstatus()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.ENS_DynamicTestKind DynamicTest = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_dynamictest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.StatusDPS Pos = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:commonmodule.StatusAndEventXCBR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:commonmodule.StatusAndEventXCBR)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void StatusAndEventXCBR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:commonmodule.StatusAndEventXCBR)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.LogicalNodeForEventAndStatus logicalNodeForEventAndStatus = 1 [(.uml.option_parent_message) = true];
  if (this->has_logicalnodeforeventandstatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::logicalnodeforeventandstatus(this), output);
  }

  // .commonmodule.ENS_DynamicTestKind DynamicTest = 2;
  if (this->has_dynamictest()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::dynamictest(this), output);
  }

  // .commonmodule.StatusDPS Pos = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::pos(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:commonmodule.StatusAndEventXCBR)
}

::google::protobuf::uint8* StatusAndEventXCBR::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:commonmodule.StatusAndEventXCBR)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.LogicalNodeForEventAndStatus logicalNodeForEventAndStatus = 1 [(.uml.option_parent_message) = true];
  if (this->has_logicalnodeforeventandstatus()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::logicalnodeforeventandstatus(this), target);
  }

  // .commonmodule.ENS_DynamicTestKind DynamicTest = 2;
  if (this->has_dynamictest()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::dynamictest(this), target);
  }

  // .commonmodule.StatusDPS Pos = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::pos(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:commonmodule.StatusAndEventXCBR)
  return target;
}

size_t StatusAndEventXCBR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:commonmodule.StatusAndEventXCBR)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .commonmodule.LogicalNodeForEventAndStatus logicalNodeForEventAndStatus = 1 [(.uml.option_parent_message) = true];
  if (this->has_logicalnodeforeventandstatus()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *logicalnodeforeventandstatus_);
  }

  // .commonmodule.ENS_DynamicTestKind DynamicTest = 2;
  if (this->has_dynamictest()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *dynamictest_);
  }

  // .commonmodule.StatusDPS Pos = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pos_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StatusAndEventXCBR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:commonmodule.StatusAndEventXCBR)
  GOOGLE_DCHECK_NE(&from, this);
  const StatusAndEventXCBR* source =
      ::google::protobuf::DynamicCastToGenerated<StatusAndEventXCBR>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:commonmodule.StatusAndEventXCBR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:commonmodule.StatusAndEventXCBR)
    MergeFrom(*source);
  }
}

void StatusAndEventXCBR::MergeFrom(const StatusAndEventXCBR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:commonmodule.StatusAndEventXCBR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_logicalnodeforeventandstatus()) {
    mutable_logicalnodeforeventandstatus()->::commonmodule::LogicalNodeForEventAndStatus::MergeFrom(from.logicalnodeforeventandstatus());
  }
  if (from.has_dynamictest()) {
    mutable_dynamictest()->::commonmodule::ENS_DynamicTestKind::MergeFrom(from.dynamictest());
  }
  if (from.has_pos()) {
    mutable_pos()->::commonmodule::StatusDPS::MergeFrom(from.pos());
  }
}

void StatusAndEventXCBR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:commonmodule.StatusAndEventXCBR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StatusAndEventXCBR::CopyFrom(const StatusAndEventXCBR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:commonmodule.StatusAndEventXCBR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StatusAndEventXCBR::IsInitialized() const {
  return true;
}

void StatusAndEventXCBR::Swap(StatusAndEventXCBR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StatusAndEventXCBR::InternalSwap(StatusAndEventXCBR* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(logicalnodeforeventandstatus_, other->logicalnodeforeventandstatus_);
  swap(dynamictest_, other->dynamictest_);
  swap(pos_, other->pos_);
}

::google::protobuf::Metadata StatusAndEventXCBR::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return ::file_level_metadata_commonmodule_2fcommonmodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void StatusISC::InitAsDefaultInstance() {
  ::commonmodule::_StatusISC_default_instance_._instance.get_mutable()->q_ = const_cast< ::commonmodule::Quality*>(
      ::commonmodule::Quality::internal_default_instance());
  ::commonmodule::_StatusISC_default_instance_._instance.get_mutable()->t_ = const_cast< ::commonmodule::Timestamp*>(
      ::commonmodule::Timestamp::internal_default_instance());
}
class StatusISC::HasBitSetters {
 public:
  static const ::commonmodule::Quality& q(const StatusISC* msg);
  static const ::commonmodule::Timestamp& t(const StatusISC* msg);
};

const ::commonmodule::Quality&
StatusISC::HasBitSetters::q(const StatusISC* msg) {
  return *msg->q_;
}
const ::commonmodule::Timestamp&
StatusISC::HasBitSetters::t(const StatusISC* msg) {
  return *msg->t_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StatusISC::kQFieldNumber;
const int StatusISC::kStValFieldNumber;
const int StatusISC::kTFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StatusISC::StatusISC()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:commonmodule.StatusISC)
}
StatusISC::StatusISC(const StatusISC& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_q()) {
    q_ = new ::commonmodule::Quality(*from.q_);
  } else {
    q_ = nullptr;
  }
  if (from.has_t()) {
    t_ = new ::commonmodule::Timestamp(*from.t_);
  } else {
    t_ = nullptr;
  }
  stval_ = from.stval_;
  // @@protoc_insertion_point(copy_constructor:commonmodule.StatusISC)
}

void StatusISC::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_StatusISC_commonmodule_2fcommonmodule_2eproto.base);
  ::memset(&q_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&stval_) -
      reinterpret_cast<char*>(&q_)) + sizeof(stval_));
}

StatusISC::~StatusISC() {
  // @@protoc_insertion_point(destructor:commonmodule.StatusISC)
  SharedDtor();
}

void StatusISC::SharedDtor() {
  if (this != internal_default_instance()) delete q_;
  if (this != internal_default_instance()) delete t_;
}

void StatusISC::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StatusISC& StatusISC::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_StatusISC_commonmodule_2fcommonmodule_2eproto.base);
  return *internal_default_instance();
}


void StatusISC::Clear() {
// @@protoc_insertion_point(message_clear_start:commonmodule.StatusISC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && q_ != nullptr) {
    delete q_;
  }
  q_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && t_ != nullptr) {
    delete t_;
  }
  t_ = nullptr;
  stval_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* StatusISC::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<StatusISC*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .commonmodule.Quality q = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::Quality::_InternalParse;
        object = msg->mutable_q();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // int32 stVal = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_stval(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .commonmodule.Timestamp t = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::Timestamp::_InternalParse;
        object = msg->mutable_t();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool StatusISC::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:commonmodule.StatusISC)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .commonmodule.Quality q = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_q()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 stVal = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &stval_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.Timestamp t = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_t()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:commonmodule.StatusISC)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:commonmodule.StatusISC)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void StatusISC::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:commonmodule.StatusISC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.Quality q = 1;
  if (this->has_q()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::q(this), output);
  }

  // int32 stVal = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->stval() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->stval(), output);
  }

  // .commonmodule.Timestamp t = 3;
  if (this->has_t()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::t(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:commonmodule.StatusISC)
}

::google::protobuf::uint8* StatusISC::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:commonmodule.StatusISC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.Quality q = 1;
  if (this->has_q()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::q(this), target);
  }

  // int32 stVal = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->stval() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->stval(), target);
  }

  // .commonmodule.Timestamp t = 3;
  if (this->has_t()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::t(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:commonmodule.StatusISC)
  return target;
}

size_t StatusISC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:commonmodule.StatusISC)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .commonmodule.Quality q = 1;
  if (this->has_q()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *q_);
  }

  // .commonmodule.Timestamp t = 3;
  if (this->has_t()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *t_);
  }

  // int32 stVal = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->stval() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->stval());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StatusISC::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:commonmodule.StatusISC)
  GOOGLE_DCHECK_NE(&from, this);
  const StatusISC* source =
      ::google::protobuf::DynamicCastToGenerated<StatusISC>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:commonmodule.StatusISC)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:commonmodule.StatusISC)
    MergeFrom(*source);
  }
}

void StatusISC::MergeFrom(const StatusISC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:commonmodule.StatusISC)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_q()) {
    mutable_q()->::commonmodule::Quality::MergeFrom(from.q());
  }
  if (from.has_t()) {
    mutable_t()->::commonmodule::Timestamp::MergeFrom(from.t());
  }
  if (from.stval() != 0) {
    set_stval(from.stval());
  }
}

void StatusISC::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:commonmodule.StatusISC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StatusISC::CopyFrom(const StatusISC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:commonmodule.StatusISC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StatusISC::IsInitialized() const {
  return true;
}

void StatusISC::Swap(StatusISC* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StatusISC::InternalSwap(StatusISC* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(q_, other->q_);
  swap(t_, other->t_);
  swap(stval_, other->stval_);
}

::google::protobuf::Metadata StatusISC::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return ::file_level_metadata_commonmodule_2fcommonmodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void StatusMessageInfo::InitAsDefaultInstance() {
  ::commonmodule::_StatusMessageInfo_default_instance_._instance.get_mutable()->messageinfo_ = const_cast< ::commonmodule::MessageInfo*>(
      ::commonmodule::MessageInfo::internal_default_instance());
}
class StatusMessageInfo::HasBitSetters {
 public:
  static const ::commonmodule::MessageInfo& messageinfo(const StatusMessageInfo* msg);
};

const ::commonmodule::MessageInfo&
StatusMessageInfo::HasBitSetters::messageinfo(const StatusMessageInfo* msg) {
  return *msg->messageinfo_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StatusMessageInfo::kMessageInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StatusMessageInfo::StatusMessageInfo()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:commonmodule.StatusMessageInfo)
}
StatusMessageInfo::StatusMessageInfo(const StatusMessageInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_messageinfo()) {
    messageinfo_ = new ::commonmodule::MessageInfo(*from.messageinfo_);
  } else {
    messageinfo_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:commonmodule.StatusMessageInfo)
}

void StatusMessageInfo::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_StatusMessageInfo_commonmodule_2fcommonmodule_2eproto.base);
  messageinfo_ = nullptr;
}

StatusMessageInfo::~StatusMessageInfo() {
  // @@protoc_insertion_point(destructor:commonmodule.StatusMessageInfo)
  SharedDtor();
}

void StatusMessageInfo::SharedDtor() {
  if (this != internal_default_instance()) delete messageinfo_;
}

void StatusMessageInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StatusMessageInfo& StatusMessageInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_StatusMessageInfo_commonmodule_2fcommonmodule_2eproto.base);
  return *internal_default_instance();
}


void StatusMessageInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:commonmodule.StatusMessageInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && messageinfo_ != nullptr) {
    delete messageinfo_;
  }
  messageinfo_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* StatusMessageInfo::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<StatusMessageInfo*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .commonmodule.MessageInfo messageInfo = 1 [(.uml.option_parent_message) = true];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::MessageInfo::_InternalParse;
        object = msg->mutable_messageinfo();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool StatusMessageInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:commonmodule.StatusMessageInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .commonmodule.MessageInfo messageInfo = 1 [(.uml.option_parent_message) = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_messageinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:commonmodule.StatusMessageInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:commonmodule.StatusMessageInfo)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void StatusMessageInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:commonmodule.StatusMessageInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.MessageInfo messageInfo = 1 [(.uml.option_parent_message) = true];
  if (this->has_messageinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::messageinfo(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:commonmodule.StatusMessageInfo)
}

::google::protobuf::uint8* StatusMessageInfo::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:commonmodule.StatusMessageInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.MessageInfo messageInfo = 1 [(.uml.option_parent_message) = true];
  if (this->has_messageinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::messageinfo(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:commonmodule.StatusMessageInfo)
  return target;
}

size_t StatusMessageInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:commonmodule.StatusMessageInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .commonmodule.MessageInfo messageInfo = 1 [(.uml.option_parent_message) = true];
  if (this->has_messageinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *messageinfo_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StatusMessageInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:commonmodule.StatusMessageInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const StatusMessageInfo* source =
      ::google::protobuf::DynamicCastToGenerated<StatusMessageInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:commonmodule.StatusMessageInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:commonmodule.StatusMessageInfo)
    MergeFrom(*source);
  }
}

void StatusMessageInfo::MergeFrom(const StatusMessageInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:commonmodule.StatusMessageInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_messageinfo()) {
    mutable_messageinfo()->::commonmodule::MessageInfo::MergeFrom(from.messageinfo());
  }
}

void StatusMessageInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:commonmodule.StatusMessageInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StatusMessageInfo::CopyFrom(const StatusMessageInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:commonmodule.StatusMessageInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StatusMessageInfo::IsInitialized() const {
  return true;
}

void StatusMessageInfo::Swap(StatusMessageInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StatusMessageInfo::InternalSwap(StatusMessageInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(messageinfo_, other->messageinfo_);
}

::google::protobuf::Metadata StatusMessageInfo::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return ::file_level_metadata_commonmodule_2fcommonmodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void StatusSPC::InitAsDefaultInstance() {
  ::commonmodule::_StatusSPC_default_instance_._instance.get_mutable()->q_ = const_cast< ::commonmodule::Quality*>(
      ::commonmodule::Quality::internal_default_instance());
  ::commonmodule::_StatusSPC_default_instance_._instance.get_mutable()->t_ = const_cast< ::commonmodule::Timestamp*>(
      ::commonmodule::Timestamp::internal_default_instance());
}
class StatusSPC::HasBitSetters {
 public:
  static const ::commonmodule::Quality& q(const StatusSPC* msg);
  static const ::commonmodule::Timestamp& t(const StatusSPC* msg);
};

const ::commonmodule::Quality&
StatusSPC::HasBitSetters::q(const StatusSPC* msg) {
  return *msg->q_;
}
const ::commonmodule::Timestamp&
StatusSPC::HasBitSetters::t(const StatusSPC* msg) {
  return *msg->t_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StatusSPC::kQFieldNumber;
const int StatusSPC::kStValFieldNumber;
const int StatusSPC::kTFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StatusSPC::StatusSPC()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:commonmodule.StatusSPC)
}
StatusSPC::StatusSPC(const StatusSPC& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_q()) {
    q_ = new ::commonmodule::Quality(*from.q_);
  } else {
    q_ = nullptr;
  }
  if (from.has_t()) {
    t_ = new ::commonmodule::Timestamp(*from.t_);
  } else {
    t_ = nullptr;
  }
  stval_ = from.stval_;
  // @@protoc_insertion_point(copy_constructor:commonmodule.StatusSPC)
}

void StatusSPC::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_StatusSPC_commonmodule_2fcommonmodule_2eproto.base);
  ::memset(&q_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&stval_) -
      reinterpret_cast<char*>(&q_)) + sizeof(stval_));
}

StatusSPC::~StatusSPC() {
  // @@protoc_insertion_point(destructor:commonmodule.StatusSPC)
  SharedDtor();
}

void StatusSPC::SharedDtor() {
  if (this != internal_default_instance()) delete q_;
  if (this != internal_default_instance()) delete t_;
}

void StatusSPC::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StatusSPC& StatusSPC::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_StatusSPC_commonmodule_2fcommonmodule_2eproto.base);
  return *internal_default_instance();
}


void StatusSPC::Clear() {
// @@protoc_insertion_point(message_clear_start:commonmodule.StatusSPC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && q_ != nullptr) {
    delete q_;
  }
  q_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && t_ != nullptr) {
    delete t_;
  }
  t_ = nullptr;
  stval_ = false;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* StatusSPC::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<StatusSPC*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .commonmodule.Quality q = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::Quality::_InternalParse;
        object = msg->mutable_q();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // bool stVal = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_stval(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .commonmodule.Timestamp t = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::Timestamp::_InternalParse;
        object = msg->mutable_t();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool StatusSPC::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:commonmodule.StatusSPC)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .commonmodule.Quality q = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_q()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool stVal = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &stval_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.Timestamp t = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_t()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:commonmodule.StatusSPC)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:commonmodule.StatusSPC)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void StatusSPC::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:commonmodule.StatusSPC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.Quality q = 1;
  if (this->has_q()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::q(this), output);
  }

  // bool stVal = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->stval() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->stval(), output);
  }

  // .commonmodule.Timestamp t = 3;
  if (this->has_t()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::t(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:commonmodule.StatusSPC)
}

::google::protobuf::uint8* StatusSPC::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:commonmodule.StatusSPC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.Quality q = 1;
  if (this->has_q()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::q(this), target);
  }

  // bool stVal = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->stval() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->stval(), target);
  }

  // .commonmodule.Timestamp t = 3;
  if (this->has_t()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::t(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:commonmodule.StatusSPC)
  return target;
}

size_t StatusSPC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:commonmodule.StatusSPC)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .commonmodule.Quality q = 1;
  if (this->has_q()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *q_);
  }

  // .commonmodule.Timestamp t = 3;
  if (this->has_t()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *t_);
  }

  // bool stVal = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->stval() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StatusSPC::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:commonmodule.StatusSPC)
  GOOGLE_DCHECK_NE(&from, this);
  const StatusSPC* source =
      ::google::protobuf::DynamicCastToGenerated<StatusSPC>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:commonmodule.StatusSPC)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:commonmodule.StatusSPC)
    MergeFrom(*source);
  }
}

void StatusSPC::MergeFrom(const StatusSPC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:commonmodule.StatusSPC)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_q()) {
    mutable_q()->::commonmodule::Quality::MergeFrom(from.q());
  }
  if (from.has_t()) {
    mutable_t()->::commonmodule::Timestamp::MergeFrom(from.t());
  }
  if (from.stval() != 0) {
    set_stval(from.stval());
  }
}

void StatusSPC::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:commonmodule.StatusSPC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StatusSPC::CopyFrom(const StatusSPC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:commonmodule.StatusSPC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StatusSPC::IsInitialized() const {
  return true;
}

void StatusSPC::Swap(StatusSPC* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StatusSPC::InternalSwap(StatusSPC* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(q_, other->q_);
  swap(t_, other->t_);
  swap(stval_, other->stval_);
}

::google::protobuf::Metadata StatusSPC::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return ::file_level_metadata_commonmodule_2fcommonmodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void StatusValue::InitAsDefaultInstance() {
  ::commonmodule::_StatusValue_default_instance_._instance.get_mutable()->identifiedobject_ = const_cast< ::commonmodule::IdentifiedObject*>(
      ::commonmodule::IdentifiedObject::internal_default_instance());
}
class StatusValue::HasBitSetters {
 public:
  static const ::commonmodule::IdentifiedObject& identifiedobject(const StatusValue* msg);
};

const ::commonmodule::IdentifiedObject&
StatusValue::HasBitSetters::identifiedobject(const StatusValue* msg) {
  return *msg->identifiedobject_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StatusValue::kIdentifiedObjectFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StatusValue::StatusValue()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:commonmodule.StatusValue)
}
StatusValue::StatusValue(const StatusValue& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_identifiedobject()) {
    identifiedobject_ = new ::commonmodule::IdentifiedObject(*from.identifiedobject_);
  } else {
    identifiedobject_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:commonmodule.StatusValue)
}

void StatusValue::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_StatusValue_commonmodule_2fcommonmodule_2eproto.base);
  identifiedobject_ = nullptr;
}

StatusValue::~StatusValue() {
  // @@protoc_insertion_point(destructor:commonmodule.StatusValue)
  SharedDtor();
}

void StatusValue::SharedDtor() {
  if (this != internal_default_instance()) delete identifiedobject_;
}

void StatusValue::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StatusValue& StatusValue::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_StatusValue_commonmodule_2fcommonmodule_2eproto.base);
  return *internal_default_instance();
}


void StatusValue::Clear() {
// @@protoc_insertion_point(message_clear_start:commonmodule.StatusValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && identifiedobject_ != nullptr) {
    delete identifiedobject_;
  }
  identifiedobject_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* StatusValue::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<StatusValue*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .commonmodule.IdentifiedObject identifiedObject = 1 [(.uml.option_parent_message) = true];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::IdentifiedObject::_InternalParse;
        object = msg->mutable_identifiedobject();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool StatusValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:commonmodule.StatusValue)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .commonmodule.IdentifiedObject identifiedObject = 1 [(.uml.option_parent_message) = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_identifiedobject()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:commonmodule.StatusValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:commonmodule.StatusValue)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void StatusValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:commonmodule.StatusValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.IdentifiedObject identifiedObject = 1 [(.uml.option_parent_message) = true];
  if (this->has_identifiedobject()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::identifiedobject(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:commonmodule.StatusValue)
}

::google::protobuf::uint8* StatusValue::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:commonmodule.StatusValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.IdentifiedObject identifiedObject = 1 [(.uml.option_parent_message) = true];
  if (this->has_identifiedobject()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::identifiedobject(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:commonmodule.StatusValue)
  return target;
}

size_t StatusValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:commonmodule.StatusValue)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .commonmodule.IdentifiedObject identifiedObject = 1 [(.uml.option_parent_message) = true];
  if (this->has_identifiedobject()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *identifiedobject_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StatusValue::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:commonmodule.StatusValue)
  GOOGLE_DCHECK_NE(&from, this);
  const StatusValue* source =
      ::google::protobuf::DynamicCastToGenerated<StatusValue>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:commonmodule.StatusValue)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:commonmodule.StatusValue)
    MergeFrom(*source);
  }
}

void StatusValue::MergeFrom(const StatusValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:commonmodule.StatusValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_identifiedobject()) {
    mutable_identifiedobject()->::commonmodule::IdentifiedObject::MergeFrom(from.identifiedobject());
  }
}

void StatusValue::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:commonmodule.StatusValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StatusValue::CopyFrom(const StatusValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:commonmodule.StatusValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StatusValue::IsInitialized() const {
  return true;
}

void StatusValue::Swap(StatusValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StatusValue::InternalSwap(StatusValue* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(identifiedobject_, other->identifiedobject_);
}

::google::protobuf::Metadata StatusValue::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return ::file_level_metadata_commonmodule_2fcommonmodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void VSS::InitAsDefaultInstance() {
  ::commonmodule::_VSS_default_instance_._instance.get_mutable()->q_ = const_cast< ::commonmodule::Quality*>(
      ::commonmodule::Quality::internal_default_instance());
  ::commonmodule::_VSS_default_instance_._instance.get_mutable()->t_ = const_cast< ::commonmodule::Timestamp*>(
      ::commonmodule::Timestamp::internal_default_instance());
}
class VSS::HasBitSetters {
 public:
  static const ::commonmodule::Quality& q(const VSS* msg);
  static const ::commonmodule::Timestamp& t(const VSS* msg);
};

const ::commonmodule::Quality&
VSS::HasBitSetters::q(const VSS* msg) {
  return *msg->q_;
}
const ::commonmodule::Timestamp&
VSS::HasBitSetters::t(const VSS* msg) {
  return *msg->t_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VSS::kQFieldNumber;
const int VSS::kStValFieldNumber;
const int VSS::kTFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VSS::VSS()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:commonmodule.VSS)
}
VSS::VSS(const VSS& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  stval_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.stval().size() > 0) {
    stval_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stval_);
  }
  if (from.has_q()) {
    q_ = new ::commonmodule::Quality(*from.q_);
  } else {
    q_ = nullptr;
  }
  if (from.has_t()) {
    t_ = new ::commonmodule::Timestamp(*from.t_);
  } else {
    t_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:commonmodule.VSS)
}

void VSS::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_VSS_commonmodule_2fcommonmodule_2eproto.base);
  stval_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&q_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&t_) -
      reinterpret_cast<char*>(&q_)) + sizeof(t_));
}

VSS::~VSS() {
  // @@protoc_insertion_point(destructor:commonmodule.VSS)
  SharedDtor();
}

void VSS::SharedDtor() {
  stval_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete q_;
  if (this != internal_default_instance()) delete t_;
}

void VSS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const VSS& VSS::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_VSS_commonmodule_2fcommonmodule_2eproto.base);
  return *internal_default_instance();
}


void VSS::Clear() {
// @@protoc_insertion_point(message_clear_start:commonmodule.VSS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  stval_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && q_ != nullptr) {
    delete q_;
  }
  q_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && t_ != nullptr) {
    delete t_;
  }
  t_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* VSS::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<VSS*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .commonmodule.Quality q = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::Quality::_InternalParse;
        object = msg->mutable_q();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // string stVal = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("commonmodule.VSS.stVal");
        object = msg->mutable_stval();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .commonmodule.Timestamp t = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::Timestamp::_InternalParse;
        object = msg->mutable_t();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool VSS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:commonmodule.VSS)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .commonmodule.Quality q = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_q()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string stVal = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stval()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stval().data(), static_cast<int>(this->stval().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "commonmodule.VSS.stVal"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.Timestamp t = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_t()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:commonmodule.VSS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:commonmodule.VSS)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void VSS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:commonmodule.VSS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.Quality q = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_q()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::q(this), output);
  }

  // string stVal = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->stval().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stval().data(), static_cast<int>(this->stval().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "commonmodule.VSS.stVal");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->stval(), output);
  }

  // .commonmodule.Timestamp t = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_t()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::t(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:commonmodule.VSS)
}

::google::protobuf::uint8* VSS::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:commonmodule.VSS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.Quality q = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_q()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::q(this), target);
  }

  // string stVal = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->stval().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stval().data(), static_cast<int>(this->stval().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "commonmodule.VSS.stVal");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->stval(), target);
  }

  // .commonmodule.Timestamp t = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_t()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::t(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:commonmodule.VSS)
  return target;
}

size_t VSS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:commonmodule.VSS)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string stVal = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->stval().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->stval());
  }

  // .commonmodule.Quality q = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_q()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *q_);
  }

  // .commonmodule.Timestamp t = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_t()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *t_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VSS::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:commonmodule.VSS)
  GOOGLE_DCHECK_NE(&from, this);
  const VSS* source =
      ::google::protobuf::DynamicCastToGenerated<VSS>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:commonmodule.VSS)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:commonmodule.VSS)
    MergeFrom(*source);
  }
}

void VSS::MergeFrom(const VSS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:commonmodule.VSS)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.stval().size() > 0) {

    stval_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stval_);
  }
  if (from.has_q()) {
    mutable_q()->::commonmodule::Quality::MergeFrom(from.q());
  }
  if (from.has_t()) {
    mutable_t()->::commonmodule::Timestamp::MergeFrom(from.t());
  }
}

void VSS::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:commonmodule.VSS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VSS::CopyFrom(const VSS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:commonmodule.VSS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VSS::IsInitialized() const {
  return true;
}

void VSS::Swap(VSS* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VSS::InternalSwap(VSS* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  stval_.Swap(&other->stval_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(q_, other->q_);
  swap(t_, other->t_);
}

::google::protobuf::Metadata VSS::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return ::file_level_metadata_commonmodule_2fcommonmodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void StringStatusGGIO::InitAsDefaultInstance() {
  ::commonmodule::_StringStatusGGIO_default_instance_._instance.get_mutable()->logicalnode_ = const_cast< ::commonmodule::LogicalNode*>(
      ::commonmodule::LogicalNode::internal_default_instance());
  ::commonmodule::_StringStatusGGIO_default_instance_._instance.get_mutable()->phase_ = const_cast< ::commonmodule::Optional_PhaseCodeKind*>(
      ::commonmodule::Optional_PhaseCodeKind::internal_default_instance());
  ::commonmodule::_StringStatusGGIO_default_instance_._instance.get_mutable()->strin_ = const_cast< ::commonmodule::VSS*>(
      ::commonmodule::VSS::internal_default_instance());
}
class StringStatusGGIO::HasBitSetters {
 public:
  static const ::commonmodule::LogicalNode& logicalnode(const StringStatusGGIO* msg);
  static const ::commonmodule::Optional_PhaseCodeKind& phase(const StringStatusGGIO* msg);
  static const ::commonmodule::VSS& strin(const StringStatusGGIO* msg);
};

const ::commonmodule::LogicalNode&
StringStatusGGIO::HasBitSetters::logicalnode(const StringStatusGGIO* msg) {
  return *msg->logicalnode_;
}
const ::commonmodule::Optional_PhaseCodeKind&
StringStatusGGIO::HasBitSetters::phase(const StringStatusGGIO* msg) {
  return *msg->phase_;
}
const ::commonmodule::VSS&
StringStatusGGIO::HasBitSetters::strin(const StringStatusGGIO* msg) {
  return *msg->strin_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StringStatusGGIO::kLogicalNodeFieldNumber;
const int StringStatusGGIO::kPhaseFieldNumber;
const int StringStatusGGIO::kStrInFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StringStatusGGIO::StringStatusGGIO()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:commonmodule.StringStatusGGIO)
}
StringStatusGGIO::StringStatusGGIO(const StringStatusGGIO& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_logicalnode()) {
    logicalnode_ = new ::commonmodule::LogicalNode(*from.logicalnode_);
  } else {
    logicalnode_ = nullptr;
  }
  if (from.has_phase()) {
    phase_ = new ::commonmodule::Optional_PhaseCodeKind(*from.phase_);
  } else {
    phase_ = nullptr;
  }
  if (from.has_strin()) {
    strin_ = new ::commonmodule::VSS(*from.strin_);
  } else {
    strin_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:commonmodule.StringStatusGGIO)
}

void StringStatusGGIO::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_StringStatusGGIO_commonmodule_2fcommonmodule_2eproto.base);
  ::memset(&logicalnode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&strin_) -
      reinterpret_cast<char*>(&logicalnode_)) + sizeof(strin_));
}

StringStatusGGIO::~StringStatusGGIO() {
  // @@protoc_insertion_point(destructor:commonmodule.StringStatusGGIO)
  SharedDtor();
}

void StringStatusGGIO::SharedDtor() {
  if (this != internal_default_instance()) delete logicalnode_;
  if (this != internal_default_instance()) delete phase_;
  if (this != internal_default_instance()) delete strin_;
}

void StringStatusGGIO::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StringStatusGGIO& StringStatusGGIO::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_StringStatusGGIO_commonmodule_2fcommonmodule_2eproto.base);
  return *internal_default_instance();
}


void StringStatusGGIO::Clear() {
// @@protoc_insertion_point(message_clear_start:commonmodule.StringStatusGGIO)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && logicalnode_ != nullptr) {
    delete logicalnode_;
  }
  logicalnode_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && phase_ != nullptr) {
    delete phase_;
  }
  phase_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && strin_ != nullptr) {
    delete strin_;
  }
  strin_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* StringStatusGGIO::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<StringStatusGGIO*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .commonmodule.LogicalNode logicalNode = 1 [(.uml.option_parent_message) = true];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::LogicalNode::_InternalParse;
        object = msg->mutable_logicalnode();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .commonmodule.Optional_PhaseCodeKind Phase = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::Optional_PhaseCodeKind::_InternalParse;
        object = msg->mutable_phase();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .commonmodule.VSS StrIn = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::VSS::_InternalParse;
        object = msg->mutable_strin();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool StringStatusGGIO::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:commonmodule.StringStatusGGIO)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .commonmodule.LogicalNode logicalNode = 1 [(.uml.option_parent_message) = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_logicalnode()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.Optional_PhaseCodeKind Phase = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_phase()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.VSS StrIn = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_strin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:commonmodule.StringStatusGGIO)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:commonmodule.StringStatusGGIO)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void StringStatusGGIO::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:commonmodule.StringStatusGGIO)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.LogicalNode logicalNode = 1 [(.uml.option_parent_message) = true];
  if (this->has_logicalnode()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::logicalnode(this), output);
  }

  // .commonmodule.Optional_PhaseCodeKind Phase = 2;
  if (this->has_phase()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::phase(this), output);
  }

  // .commonmodule.VSS StrIn = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_strin()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::strin(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:commonmodule.StringStatusGGIO)
}

::google::protobuf::uint8* StringStatusGGIO::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:commonmodule.StringStatusGGIO)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.LogicalNode logicalNode = 1 [(.uml.option_parent_message) = true];
  if (this->has_logicalnode()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::logicalnode(this), target);
  }

  // .commonmodule.Optional_PhaseCodeKind Phase = 2;
  if (this->has_phase()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::phase(this), target);
  }

  // .commonmodule.VSS StrIn = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_strin()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::strin(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:commonmodule.StringStatusGGIO)
  return target;
}

size_t StringStatusGGIO::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:commonmodule.StringStatusGGIO)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .commonmodule.LogicalNode logicalNode = 1 [(.uml.option_parent_message) = true];
  if (this->has_logicalnode()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *logicalnode_);
  }

  // .commonmodule.Optional_PhaseCodeKind Phase = 2;
  if (this->has_phase()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *phase_);
  }

  // .commonmodule.VSS StrIn = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_strin()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *strin_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StringStatusGGIO::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:commonmodule.StringStatusGGIO)
  GOOGLE_DCHECK_NE(&from, this);
  const StringStatusGGIO* source =
      ::google::protobuf::DynamicCastToGenerated<StringStatusGGIO>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:commonmodule.StringStatusGGIO)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:commonmodule.StringStatusGGIO)
    MergeFrom(*source);
  }
}

void StringStatusGGIO::MergeFrom(const StringStatusGGIO& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:commonmodule.StringStatusGGIO)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_logicalnode()) {
    mutable_logicalnode()->::commonmodule::LogicalNode::MergeFrom(from.logicalnode());
  }
  if (from.has_phase()) {
    mutable_phase()->::commonmodule::Optional_PhaseCodeKind::MergeFrom(from.phase());
  }
  if (from.has_strin()) {
    mutable_strin()->::commonmodule::VSS::MergeFrom(from.strin());
  }
}

void StringStatusGGIO::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:commonmodule.StringStatusGGIO)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StringStatusGGIO::CopyFrom(const StringStatusGGIO& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:commonmodule.StringStatusGGIO)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StringStatusGGIO::IsInitialized() const {
  return true;
}

void StringStatusGGIO::Swap(StringStatusGGIO* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StringStatusGGIO::InternalSwap(StringStatusGGIO* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(logicalnode_, other->logicalnode_);
  swap(phase_, other->phase_);
  swap(strin_, other->strin_);
}

::google::protobuf::Metadata StringStatusGGIO::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return ::file_level_metadata_commonmodule_2fcommonmodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void SwitchPoint::InitAsDefaultInstance() {
  ::commonmodule::_SwitchPoint_default_instance_._instance.get_mutable()->pos_ = const_cast< ::commonmodule::ControlDPC*>(
      ::commonmodule::ControlDPC::internal_default_instance());
  ::commonmodule::_SwitchPoint_default_instance_._instance.get_mutable()->starttime_ = const_cast< ::commonmodule::ControlTimestamp*>(
      ::commonmodule::ControlTimestamp::internal_default_instance());
}
class SwitchPoint::HasBitSetters {
 public:
  static const ::commonmodule::ControlDPC& pos(const SwitchPoint* msg);
  static const ::commonmodule::ControlTimestamp& starttime(const SwitchPoint* msg);
};

const ::commonmodule::ControlDPC&
SwitchPoint::HasBitSetters::pos(const SwitchPoint* msg) {
  return *msg->pos_;
}
const ::commonmodule::ControlTimestamp&
SwitchPoint::HasBitSetters::starttime(const SwitchPoint* msg) {
  return *msg->starttime_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SwitchPoint::kPosFieldNumber;
const int SwitchPoint::kStartTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SwitchPoint::SwitchPoint()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:commonmodule.SwitchPoint)
}
SwitchPoint::SwitchPoint(const SwitchPoint& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pos()) {
    pos_ = new ::commonmodule::ControlDPC(*from.pos_);
  } else {
    pos_ = nullptr;
  }
  if (from.has_starttime()) {
    starttime_ = new ::commonmodule::ControlTimestamp(*from.starttime_);
  } else {
    starttime_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:commonmodule.SwitchPoint)
}

void SwitchPoint::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_SwitchPoint_commonmodule_2fcommonmodule_2eproto.base);
  ::memset(&pos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&starttime_) -
      reinterpret_cast<char*>(&pos_)) + sizeof(starttime_));
}

SwitchPoint::~SwitchPoint() {
  // @@protoc_insertion_point(destructor:commonmodule.SwitchPoint)
  SharedDtor();
}

void SwitchPoint::SharedDtor() {
  if (this != internal_default_instance()) delete pos_;
  if (this != internal_default_instance()) delete starttime_;
}

void SwitchPoint::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SwitchPoint& SwitchPoint::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SwitchPoint_commonmodule_2fcommonmodule_2eproto.base);
  return *internal_default_instance();
}


void SwitchPoint::Clear() {
// @@protoc_insertion_point(message_clear_start:commonmodule.SwitchPoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && pos_ != nullptr) {
    delete pos_;
  }
  pos_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && starttime_ != nullptr) {
    delete starttime_;
  }
  starttime_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SwitchPoint::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SwitchPoint*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .commonmodule.ControlDPC Pos = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::ControlDPC::_InternalParse;
        object = msg->mutable_pos();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .commonmodule.ControlTimestamp startTime = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::ControlTimestamp::_InternalParse;
        object = msg->mutable_starttime();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SwitchPoint::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:commonmodule.SwitchPoint)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .commonmodule.ControlDPC Pos = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.ControlTimestamp startTime = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_starttime()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:commonmodule.SwitchPoint)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:commonmodule.SwitchPoint)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SwitchPoint::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:commonmodule.SwitchPoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.ControlDPC Pos = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::pos(this), output);
  }

  // .commonmodule.ControlTimestamp startTime = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_starttime()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::starttime(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:commonmodule.SwitchPoint)
}

::google::protobuf::uint8* SwitchPoint::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:commonmodule.SwitchPoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.ControlDPC Pos = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::pos(this), target);
  }

  // .commonmodule.ControlTimestamp startTime = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_starttime()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::starttime(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:commonmodule.SwitchPoint)
  return target;
}

size_t SwitchPoint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:commonmodule.SwitchPoint)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .commonmodule.ControlDPC Pos = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pos_);
  }

  // .commonmodule.ControlTimestamp startTime = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_starttime()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *starttime_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SwitchPoint::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:commonmodule.SwitchPoint)
  GOOGLE_DCHECK_NE(&from, this);
  const SwitchPoint* source =
      ::google::protobuf::DynamicCastToGenerated<SwitchPoint>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:commonmodule.SwitchPoint)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:commonmodule.SwitchPoint)
    MergeFrom(*source);
  }
}

void SwitchPoint::MergeFrom(const SwitchPoint& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:commonmodule.SwitchPoint)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pos()) {
    mutable_pos()->::commonmodule::ControlDPC::MergeFrom(from.pos());
  }
  if (from.has_starttime()) {
    mutable_starttime()->::commonmodule::ControlTimestamp::MergeFrom(from.starttime());
  }
}

void SwitchPoint::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:commonmodule.SwitchPoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SwitchPoint::CopyFrom(const SwitchPoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:commonmodule.SwitchPoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SwitchPoint::IsInitialized() const {
  return true;
}

void SwitchPoint::Swap(SwitchPoint* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SwitchPoint::InternalSwap(SwitchPoint* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(pos_, other->pos_);
  swap(starttime_, other->starttime_);
}

::google::protobuf::Metadata SwitchPoint::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return ::file_level_metadata_commonmodule_2fcommonmodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void SwitchCSG::InitAsDefaultInstance() {
}
class SwitchCSG::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SwitchCSG::kCrvPtsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SwitchCSG::SwitchCSG()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:commonmodule.SwitchCSG)
}
SwitchCSG::SwitchCSG(const SwitchCSG& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      crvpts_(from.crvpts_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:commonmodule.SwitchCSG)
}

void SwitchCSG::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_SwitchCSG_commonmodule_2fcommonmodule_2eproto.base);
}

SwitchCSG::~SwitchCSG() {
  // @@protoc_insertion_point(destructor:commonmodule.SwitchCSG)
  SharedDtor();
}

void SwitchCSG::SharedDtor() {
}

void SwitchCSG::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SwitchCSG& SwitchCSG::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SwitchCSG_commonmodule_2fcommonmodule_2eproto.base);
  return *internal_default_instance();
}


void SwitchCSG::Clear() {
// @@protoc_insertion_point(message_clear_start:commonmodule.SwitchCSG)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  crvpts_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SwitchCSG::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SwitchCSG*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .commonmodule.SwitchPoint crvPts = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::commonmodule::SwitchPoint::_InternalParse;
          object = msg->add_crvpts();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SwitchCSG::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:commonmodule.SwitchCSG)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .commonmodule.SwitchPoint crvPts = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_crvpts()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:commonmodule.SwitchCSG)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:commonmodule.SwitchCSG)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SwitchCSG::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:commonmodule.SwitchCSG)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .commonmodule.SwitchPoint crvPts = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->crvpts_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->crvpts(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:commonmodule.SwitchCSG)
}

::google::protobuf::uint8* SwitchCSG::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:commonmodule.SwitchCSG)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .commonmodule.SwitchPoint crvPts = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->crvpts_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->crvpts(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:commonmodule.SwitchCSG)
  return target;
}

size_t SwitchCSG::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:commonmodule.SwitchCSG)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .commonmodule.SwitchPoint crvPts = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  {
    unsigned int count = static_cast<unsigned int>(this->crvpts_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->crvpts(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SwitchCSG::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:commonmodule.SwitchCSG)
  GOOGLE_DCHECK_NE(&from, this);
  const SwitchCSG* source =
      ::google::protobuf::DynamicCastToGenerated<SwitchCSG>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:commonmodule.SwitchCSG)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:commonmodule.SwitchCSG)
    MergeFrom(*source);
  }
}

void SwitchCSG::MergeFrom(const SwitchCSG& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:commonmodule.SwitchCSG)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  crvpts_.MergeFrom(from.crvpts_);
}

void SwitchCSG::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:commonmodule.SwitchCSG)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SwitchCSG::CopyFrom(const SwitchCSG& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:commonmodule.SwitchCSG)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SwitchCSG::IsInitialized() const {
  return true;
}

void SwitchCSG::Swap(SwitchCSG* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SwitchCSG::InternalSwap(SwitchCSG* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&crvpts_)->InternalSwap(CastToBase(&other->crvpts_));
}

::google::protobuf::Metadata SwitchCSG::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return ::file_level_metadata_commonmodule_2fcommonmodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void SwitchControlScheduleFSCH::InitAsDefaultInstance() {
  ::commonmodule::_SwitchControlScheduleFSCH_default_instance_._instance.get_mutable()->valdcsg_ = const_cast< ::commonmodule::SwitchCSG*>(
      ::commonmodule::SwitchCSG::internal_default_instance());
}
class SwitchControlScheduleFSCH::HasBitSetters {
 public:
  static const ::commonmodule::SwitchCSG& valdcsg(const SwitchControlScheduleFSCH* msg);
};

const ::commonmodule::SwitchCSG&
SwitchControlScheduleFSCH::HasBitSetters::valdcsg(const SwitchControlScheduleFSCH* msg) {
  return *msg->valdcsg_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SwitchControlScheduleFSCH::kValDCSGFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SwitchControlScheduleFSCH::SwitchControlScheduleFSCH()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:commonmodule.SwitchControlScheduleFSCH)
}
SwitchControlScheduleFSCH::SwitchControlScheduleFSCH(const SwitchControlScheduleFSCH& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_valdcsg()) {
    valdcsg_ = new ::commonmodule::SwitchCSG(*from.valdcsg_);
  } else {
    valdcsg_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:commonmodule.SwitchControlScheduleFSCH)
}

void SwitchControlScheduleFSCH::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_SwitchControlScheduleFSCH_commonmodule_2fcommonmodule_2eproto.base);
  valdcsg_ = nullptr;
}

SwitchControlScheduleFSCH::~SwitchControlScheduleFSCH() {
  // @@protoc_insertion_point(destructor:commonmodule.SwitchControlScheduleFSCH)
  SharedDtor();
}

void SwitchControlScheduleFSCH::SharedDtor() {
  if (this != internal_default_instance()) delete valdcsg_;
}

void SwitchControlScheduleFSCH::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SwitchControlScheduleFSCH& SwitchControlScheduleFSCH::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SwitchControlScheduleFSCH_commonmodule_2fcommonmodule_2eproto.base);
  return *internal_default_instance();
}


void SwitchControlScheduleFSCH::Clear() {
// @@protoc_insertion_point(message_clear_start:commonmodule.SwitchControlScheduleFSCH)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && valdcsg_ != nullptr) {
    delete valdcsg_;
  }
  valdcsg_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SwitchControlScheduleFSCH::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SwitchControlScheduleFSCH*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .commonmodule.SwitchCSG ValDCSG = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::SwitchCSG::_InternalParse;
        object = msg->mutable_valdcsg();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SwitchControlScheduleFSCH::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:commonmodule.SwitchControlScheduleFSCH)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .commonmodule.SwitchCSG ValDCSG = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_valdcsg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:commonmodule.SwitchControlScheduleFSCH)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:commonmodule.SwitchControlScheduleFSCH)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SwitchControlScheduleFSCH::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:commonmodule.SwitchControlScheduleFSCH)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.SwitchCSG ValDCSG = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_valdcsg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::valdcsg(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:commonmodule.SwitchControlScheduleFSCH)
}

::google::protobuf::uint8* SwitchControlScheduleFSCH::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:commonmodule.SwitchControlScheduleFSCH)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.SwitchCSG ValDCSG = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_valdcsg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::valdcsg(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:commonmodule.SwitchControlScheduleFSCH)
  return target;
}

size_t SwitchControlScheduleFSCH::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:commonmodule.SwitchControlScheduleFSCH)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .commonmodule.SwitchCSG ValDCSG = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_valdcsg()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *valdcsg_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SwitchControlScheduleFSCH::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:commonmodule.SwitchControlScheduleFSCH)
  GOOGLE_DCHECK_NE(&from, this);
  const SwitchControlScheduleFSCH* source =
      ::google::protobuf::DynamicCastToGenerated<SwitchControlScheduleFSCH>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:commonmodule.SwitchControlScheduleFSCH)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:commonmodule.SwitchControlScheduleFSCH)
    MergeFrom(*source);
  }
}

void SwitchControlScheduleFSCH::MergeFrom(const SwitchControlScheduleFSCH& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:commonmodule.SwitchControlScheduleFSCH)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_valdcsg()) {
    mutable_valdcsg()->::commonmodule::SwitchCSG::MergeFrom(from.valdcsg());
  }
}

void SwitchControlScheduleFSCH::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:commonmodule.SwitchControlScheduleFSCH)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SwitchControlScheduleFSCH::CopyFrom(const SwitchControlScheduleFSCH& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:commonmodule.SwitchControlScheduleFSCH)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SwitchControlScheduleFSCH::IsInitialized() const {
  return true;
}

void SwitchControlScheduleFSCH::Swap(SwitchControlScheduleFSCH* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SwitchControlScheduleFSCH::InternalSwap(SwitchControlScheduleFSCH* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(valdcsg_, other->valdcsg_);
}

::google::protobuf::Metadata SwitchControlScheduleFSCH::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return ::file_level_metadata_commonmodule_2fcommonmodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Optional_StateKind::InitAsDefaultInstance() {
}
class Optional_StateKind::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Optional_StateKind::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Optional_StateKind::Optional_StateKind()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:commonmodule.Optional_StateKind)
}
Optional_StateKind::Optional_StateKind(const Optional_StateKind& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:commonmodule.Optional_StateKind)
}

void Optional_StateKind::SharedCtor() {
  value_ = 0;
}

Optional_StateKind::~Optional_StateKind() {
  // @@protoc_insertion_point(destructor:commonmodule.Optional_StateKind)
  SharedDtor();
}

void Optional_StateKind::SharedDtor() {
}

void Optional_StateKind::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Optional_StateKind& Optional_StateKind::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Optional_StateKind_commonmodule_2fcommonmodule_2eproto.base);
  return *internal_default_instance();
}


void Optional_StateKind::Clear() {
// @@protoc_insertion_point(message_clear_start:commonmodule.Optional_StateKind)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Optional_StateKind::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Optional_StateKind*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .commonmodule.StateKind value = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_value(static_cast<::commonmodule::StateKind>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Optional_StateKind::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:commonmodule.Optional_StateKind)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .commonmodule.StateKind value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_value(static_cast< ::commonmodule::StateKind >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:commonmodule.Optional_StateKind)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:commonmodule.Optional_StateKind)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Optional_StateKind::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:commonmodule.Optional_StateKind)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.StateKind value = 1;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:commonmodule.Optional_StateKind)
}

::google::protobuf::uint8* Optional_StateKind::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:commonmodule.Optional_StateKind)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.StateKind value = 1;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:commonmodule.Optional_StateKind)
  return target;
}

size_t Optional_StateKind::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:commonmodule.Optional_StateKind)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .commonmodule.StateKind value = 1;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Optional_StateKind::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:commonmodule.Optional_StateKind)
  GOOGLE_DCHECK_NE(&from, this);
  const Optional_StateKind* source =
      ::google::protobuf::DynamicCastToGenerated<Optional_StateKind>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:commonmodule.Optional_StateKind)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:commonmodule.Optional_StateKind)
    MergeFrom(*source);
  }
}

void Optional_StateKind::MergeFrom(const Optional_StateKind& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:commonmodule.Optional_StateKind)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value() != 0) {
    set_value(from.value());
  }
}

void Optional_StateKind::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:commonmodule.Optional_StateKind)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Optional_StateKind::CopyFrom(const Optional_StateKind& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:commonmodule.Optional_StateKind)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Optional_StateKind::IsInitialized() const {
  return true;
}

void Optional_StateKind::Swap(Optional_StateKind* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Optional_StateKind::InternalSwap(Optional_StateKind* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(value_, other->value_);
}

::google::protobuf::Metadata Optional_StateKind::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_commonmodule_2fcommonmodule_2eproto);
  return ::file_level_metadata_commonmodule_2fcommonmodule_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace commonmodule
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::commonmodule::IdentifiedObject* Arena::CreateMaybeMessage< ::commonmodule::IdentifiedObject >(Arena* arena) {
  return Arena::CreateInternal< ::commonmodule::IdentifiedObject >(arena);
}
template<> PROTOBUF_NOINLINE ::commonmodule::ACDCTerminal* Arena::CreateMaybeMessage< ::commonmodule::ACDCTerminal >(Arena* arena) {
  return Arena::CreateInternal< ::commonmodule::ACDCTerminal >(arena);
}
template<> PROTOBUF_NOINLINE ::commonmodule::Optional_UnitSymbolKind* Arena::CreateMaybeMessage< ::commonmodule::Optional_UnitSymbolKind >(Arena* arena) {
  return Arena::CreateInternal< ::commonmodule::Optional_UnitSymbolKind >(arena);
}
template<> PROTOBUF_NOINLINE ::commonmodule::Optional_UnitMultiplierKind* Arena::CreateMaybeMessage< ::commonmodule::Optional_UnitMultiplierKind >(Arena* arena) {
  return Arena::CreateInternal< ::commonmodule::Optional_UnitMultiplierKind >(arena);
}
template<> PROTOBUF_NOINLINE ::commonmodule::ActivePower* Arena::CreateMaybeMessage< ::commonmodule::ActivePower >(Arena* arena) {
  return Arena::CreateInternal< ::commonmodule::ActivePower >(arena);
}
template<> PROTOBUF_NOINLINE ::commonmodule::Optional_PhaseCodeKind* Arena::CreateMaybeMessage< ::commonmodule::Optional_PhaseCodeKind >(Arena* arena) {
  return Arena::CreateInternal< ::commonmodule::Optional_PhaseCodeKind >(arena);
}
template<> PROTOBUF_NOINLINE ::commonmodule::AnalogueValue* Arena::CreateMaybeMessage< ::commonmodule::AnalogueValue >(Arena* arena) {
  return Arena::CreateInternal< ::commonmodule::AnalogueValue >(arena);
}
template<> PROTOBUF_NOINLINE ::commonmodule::Optional_ValidityKind* Arena::CreateMaybeMessage< ::commonmodule::Optional_ValidityKind >(Arena* arena) {
  return Arena::CreateInternal< ::commonmodule::Optional_ValidityKind >(arena);
}
template<> PROTOBUF_NOINLINE ::commonmodule::DetailQual* Arena::CreateMaybeMessage< ::commonmodule::DetailQual >(Arena* arena) {
  return Arena::CreateInternal< ::commonmodule::DetailQual >(arena);
}
template<> PROTOBUF_NOINLINE ::commonmodule::Optional_SourceKind* Arena::CreateMaybeMessage< ::commonmodule::Optional_SourceKind >(Arena* arena) {
  return Arena::CreateInternal< ::commonmodule::Optional_SourceKind >(arena);
}
template<> PROTOBUF_NOINLINE ::commonmodule::Quality* Arena::CreateMaybeMessage< ::commonmodule::Quality >(Arena* arena) {
  return Arena::CreateInternal< ::commonmodule::Quality >(arena);
}
template<> PROTOBUF_NOINLINE ::commonmodule::Optional_TimeAccuracyKind* Arena::CreateMaybeMessage< ::commonmodule::Optional_TimeAccuracyKind >(Arena* arena) {
  return Arena::CreateInternal< ::commonmodule::Optional_TimeAccuracyKind >(arena);
}
template<> PROTOBUF_NOINLINE ::commonmodule::TimeQuality* Arena::CreateMaybeMessage< ::commonmodule::TimeQuality >(Arena* arena) {
  return Arena::CreateInternal< ::commonmodule::TimeQuality >(arena);
}
template<> PROTOBUF_NOINLINE ::commonmodule::Timestamp* Arena::CreateMaybeMessage< ::commonmodule::Timestamp >(Arena* arena) {
  return Arena::CreateInternal< ::commonmodule::Timestamp >(arena);
}
template<> PROTOBUF_NOINLINE ::commonmodule::Unit* Arena::CreateMaybeMessage< ::commonmodule::Unit >(Arena* arena) {
  return Arena::CreateInternal< ::commonmodule::Unit >(arena);
}
template<> PROTOBUF_NOINLINE ::commonmodule::MV* Arena::CreateMaybeMessage< ::commonmodule::MV >(Arena* arena) {
  return Arena::CreateInternal< ::commonmodule::MV >(arena);
}
template<> PROTOBUF_NOINLINE ::commonmodule::LogicalNode* Arena::CreateMaybeMessage< ::commonmodule::LogicalNode >(Arena* arena) {
  return Arena::CreateInternal< ::commonmodule::LogicalNode >(arena);
}
template<> PROTOBUF_NOINLINE ::commonmodule::AnalogStatusGGIO* Arena::CreateMaybeMessage< ::commonmodule::AnalogStatusGGIO >(Arena* arena) {
  return Arena::CreateInternal< ::commonmodule::AnalogStatusGGIO >(arena);
}
template<> PROTOBUF_NOINLINE ::commonmodule::AnalogueValueCtl* Arena::CreateMaybeMessage< ::commonmodule::AnalogueValueCtl >(Arena* arena) {
  return Arena::CreateInternal< ::commonmodule::AnalogueValueCtl >(arena);
}
template<> PROTOBUF_NOINLINE ::commonmodule::NamedObject* Arena::CreateMaybeMessage< ::commonmodule::NamedObject >(Arena* arena) {
  return Arena::CreateInternal< ::commonmodule::NamedObject >(arena);
}
template<> PROTOBUF_NOINLINE ::commonmodule::ApplicationSystem* Arena::CreateMaybeMessage< ::commonmodule::ApplicationSystem >(Arena* arena) {
  return Arena::CreateInternal< ::commonmodule::ApplicationSystem >(arena);
}
template<> PROTOBUF_NOINLINE ::commonmodule::ASG* Arena::CreateMaybeMessage< ::commonmodule::ASG >(Arena* arena) {
  return Arena::CreateInternal< ::commonmodule::ASG >(arena);
}
template<> PROTOBUF_NOINLINE ::commonmodule::BCR* Arena::CreateMaybeMessage< ::commonmodule::BCR >(Arena* arena) {
  return Arena::CreateInternal< ::commonmodule::BCR >(arena);
}
template<> PROTOBUF_NOINLINE ::commonmodule::StatusSPS* Arena::CreateMaybeMessage< ::commonmodule::StatusSPS >(Arena* arena) {
  return Arena::CreateInternal< ::commonmodule::StatusSPS >(arena);
}
template<> PROTOBUF_NOINLINE ::commonmodule::BooleanStatusGGIO* Arena::CreateMaybeMessage< ::commonmodule::BooleanStatusGGIO >(Arena* arena) {
  return Arena::CreateInternal< ::commonmodule::BooleanStatusGGIO >(arena);
}
template<> PROTOBUF_NOINLINE ::commonmodule::CheckConditions* Arena::CreateMaybeMessage< ::commonmodule::CheckConditions >(Arena* arena) {
  return Arena::CreateInternal< ::commonmodule::CheckConditions >(arena);
}
template<> PROTOBUF_NOINLINE ::commonmodule::Vector* Arena::CreateMaybeMessage< ::commonmodule::Vector >(Arena* arena) {
  return Arena::CreateInternal< ::commonmodule::Vector >(arena);
}
template<> PROTOBUF_NOINLINE ::commonmodule::CMV* Arena::CreateMaybeMessage< ::commonmodule::CMV >(Arena* arena) {
  return Arena::CreateInternal< ::commonmodule::CMV >(arena);
}
template<> PROTOBUF_NOINLINE ::commonmodule::ConductingEquipment* Arena::CreateMaybeMessage< ::commonmodule::ConductingEquipment >(Arena* arena) {
  return Arena::CreateInternal< ::commonmodule::ConductingEquipment >(arena);
}
template<> PROTOBUF_NOINLINE ::commonmodule::Terminal* Arena::CreateMaybeMessage< ::commonmodule::Terminal >(Arena* arena) {
  return Arena::CreateInternal< ::commonmodule::Terminal >(arena);
}
template<> PROTOBUF_NOINLINE ::commonmodule::ConductingEquipmentTerminalReading* Arena::CreateMaybeMessage< ::commonmodule::ConductingEquipmentTerminalReading >(Arena* arena) {
  return Arena::CreateInternal< ::commonmodule::ConductingEquipmentTerminalReading >(arena);
}
template<> PROTOBUF_NOINLINE ::commonmodule::ControlDPC* Arena::CreateMaybeMessage< ::commonmodule::ControlDPC >(Arena* arena) {
  return Arena::CreateInternal< ::commonmodule::ControlDPC >(arena);
}
template<> PROTOBUF_NOINLINE ::commonmodule::ControlTimestamp* Arena::CreateMaybeMessage< ::commonmodule::ControlTimestamp >(Arena* arena) {
  return Arena::CreateInternal< ::commonmodule::ControlTimestamp >(arena);
}
template<> PROTOBUF_NOINLINE ::commonmodule::Optional_ScheduleParameterKind* Arena::CreateMaybeMessage< ::commonmodule::Optional_ScheduleParameterKind >(Arena* arena) {
  return Arena::CreateInternal< ::commonmodule::Optional_ScheduleParameterKind >(arena);
}
template<> PROTOBUF_NOINLINE ::commonmodule::ENG_ScheduleParameter* Arena::CreateMaybeMessage< ::commonmodule::ENG_ScheduleParameter >(Arena* arena) {
  return Arena::CreateInternal< ::commonmodule::ENG_ScheduleParameter >(arena);
}
template<> PROTOBUF_NOINLINE ::commonmodule::SchedulePoint* Arena::CreateMaybeMessage< ::commonmodule::SchedulePoint >(Arena* arena) {
  return Arena::CreateInternal< ::commonmodule::SchedulePoint >(arena);
}
template<> PROTOBUF_NOINLINE ::commonmodule::ScheduleCSG* Arena::CreateMaybeMessage< ::commonmodule::ScheduleCSG >(Arena* arena) {
  return Arena::CreateInternal< ::commonmodule::ScheduleCSG >(arena);
}
template<> PROTOBUF_NOINLINE ::commonmodule::ControlScheduleFSCH* Arena::CreateMaybeMessage< ::commonmodule::ControlScheduleFSCH >(Arena* arena) {
  return Arena::CreateInternal< ::commonmodule::ControlScheduleFSCH >(arena);
}
template<> PROTOBUF_NOINLINE ::commonmodule::LogicalNodeForControl* Arena::CreateMaybeMessage< ::commonmodule::LogicalNodeForControl >(Arena* arena) {
  return Arena::CreateInternal< ::commonmodule::LogicalNodeForControl >(arena);
}
template<> PROTOBUF_NOINLINE ::commonmodule::ControlFSCC* Arena::CreateMaybeMessage< ::commonmodule::ControlFSCC >(Arena* arena) {
  return Arena::CreateInternal< ::commonmodule::ControlFSCC >(arena);
}
template<> PROTOBUF_NOINLINE ::commonmodule::ControlING* Arena::CreateMaybeMessage< ::commonmodule::ControlING >(Arena* arena) {
  return Arena::CreateInternal< ::commonmodule::ControlING >(arena);
}
template<> PROTOBUF_NOINLINE ::commonmodule::ControlISC* Arena::CreateMaybeMessage< ::commonmodule::ControlISC >(Arena* arena) {
  return Arena::CreateInternal< ::commonmodule::ControlISC >(arena);
}
template<> PROTOBUF_NOINLINE ::commonmodule::MessageInfo* Arena::CreateMaybeMessage< ::commonmodule::MessageInfo >(Arena* arena) {
  return Arena::CreateInternal< ::commonmodule::MessageInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::commonmodule::ControlMessageInfo* Arena::CreateMaybeMessage< ::commonmodule::ControlMessageInfo >(Arena* arena) {
  return Arena::CreateInternal< ::commonmodule::ControlMessageInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::commonmodule::ControlSPC* Arena::CreateMaybeMessage< ::commonmodule::ControlSPC >(Arena* arena) {
  return Arena::CreateInternal< ::commonmodule::ControlSPC >(arena);
}
template<> PROTOBUF_NOINLINE ::commonmodule::ControlValue* Arena::CreateMaybeMessage< ::commonmodule::ControlValue >(Arena* arena) {
  return Arena::CreateInternal< ::commonmodule::ControlValue >(arena);
}
template<> PROTOBUF_NOINLINE ::commonmodule::DateTimeInterval* Arena::CreateMaybeMessage< ::commonmodule::DateTimeInterval >(Arena* arena) {
  return Arena::CreateInternal< ::commonmodule::DateTimeInterval >(arena);
}
template<> PROTOBUF_NOINLINE ::commonmodule::DEL* Arena::CreateMaybeMessage< ::commonmodule::DEL >(Arena* arena) {
  return Arena::CreateInternal< ::commonmodule::DEL >(arena);
}
template<> PROTOBUF_NOINLINE ::commonmodule::EnergyConsumer* Arena::CreateMaybeMessage< ::commonmodule::EnergyConsumer >(Arena* arena) {
  return Arena::CreateInternal< ::commonmodule::EnergyConsumer >(arena);
}
template<> PROTOBUF_NOINLINE ::commonmodule::Optional_CalcMethodKind* Arena::CreateMaybeMessage< ::commonmodule::Optional_CalcMethodKind >(Arena* arena) {
  return Arena::CreateInternal< ::commonmodule::Optional_CalcMethodKind >(arena);
}
template<> PROTOBUF_NOINLINE ::commonmodule::ENG_CalcMethodKind* Arena::CreateMaybeMessage< ::commonmodule::ENG_CalcMethodKind >(Arena* arena) {
  return Arena::CreateInternal< ::commonmodule::ENG_CalcMethodKind >(arena);
}
template<> PROTOBUF_NOINLINE ::commonmodule::Optional_GridConnectModeKind* Arena::CreateMaybeMessage< ::commonmodule::Optional_GridConnectModeKind >(Arena* arena) {
  return Arena::CreateInternal< ::commonmodule::Optional_GridConnectModeKind >(arena);
}
template<> PROTOBUF_NOINLINE ::commonmodule::ENG_GridConnectModeKind* Arena::CreateMaybeMessage< ::commonmodule::ENG_GridConnectModeKind >(Arena* arena) {
  return Arena::CreateInternal< ::commonmodule::ENG_GridConnectModeKind >(arena);
}
template<> PROTOBUF_NOINLINE ::commonmodule::Optional_PFSignKind* Arena::CreateMaybeMessage< ::commonmodule::Optional_PFSignKind >(Arena* arena) {
  return Arena::CreateInternal< ::commonmodule::Optional_PFSignKind >(arena);
}
template<> PROTOBUF_NOINLINE ::commonmodule::ENG_PFSignKind* Arena::CreateMaybeMessage< ::commonmodule::ENG_PFSignKind >(Arena* arena) {
  return Arena::CreateInternal< ::commonmodule::ENG_PFSignKind >(arena);
}
template<> PROTOBUF_NOINLINE ::commonmodule::Optional_BehaviourModeKind* Arena::CreateMaybeMessage< ::commonmodule::Optional_BehaviourModeKind >(Arena* arena) {
  return Arena::CreateInternal< ::commonmodule::Optional_BehaviourModeKind >(arena);
}
template<> PROTOBUF_NOINLINE ::commonmodule::ENS_BehaviourModeKind* Arena::CreateMaybeMessage< ::commonmodule::ENS_BehaviourModeKind >(Arena* arena) {
  return Arena::CreateInternal< ::commonmodule::ENS_BehaviourModeKind >(arena);
}
template<> PROTOBUF_NOINLINE ::commonmodule::Optional_DERGeneratorStateKind* Arena::CreateMaybeMessage< ::commonmodule::Optional_DERGeneratorStateKind >(Arena* arena) {
  return Arena::CreateInternal< ::commonmodule::Optional_DERGeneratorStateKind >(arena);
}
template<> PROTOBUF_NOINLINE ::commonmodule::ENS_DERGeneratorStateKind* Arena::CreateMaybeMessage< ::commonmodule::ENS_DERGeneratorStateKind >(Arena* arena) {
  return Arena::CreateInternal< ::commonmodule::ENS_DERGeneratorStateKind >(arena);
}
template<> PROTOBUF_NOINLINE ::commonmodule::Optional_DynamicTestKind* Arena::CreateMaybeMessage< ::commonmodule::Optional_DynamicTestKind >(Arena* arena) {
  return Arena::CreateInternal< ::commonmodule::Optional_DynamicTestKind >(arena);
}
template<> PROTOBUF_NOINLINE ::commonmodule::ENS_DynamicTestKind* Arena::CreateMaybeMessage< ::commonmodule::ENS_DynamicTestKind >(Arena* arena) {
  return Arena::CreateInternal< ::commonmodule::ENS_DynamicTestKind >(arena);
}
template<> PROTOBUF_NOINLINE ::commonmodule::ENS_GridConnectModeKind* Arena::CreateMaybeMessage< ::commonmodule::ENS_GridConnectModeKind >(Arena* arena) {
  return Arena::CreateInternal< ::commonmodule::ENS_GridConnectModeKind >(arena);
}
template<> PROTOBUF_NOINLINE ::commonmodule::Optional_HealthKind* Arena::CreateMaybeMessage< ::commonmodule::Optional_HealthKind >(Arena* arena) {
  return Arena::CreateInternal< ::commonmodule::Optional_HealthKind >(arena);
}
template<> PROTOBUF_NOINLINE ::commonmodule::ENS_HealthKind* Arena::CreateMaybeMessage< ::commonmodule::ENS_HealthKind >(Arena* arena) {
  return Arena::CreateInternal< ::commonmodule::ENS_HealthKind >(arena);
}
template<> PROTOBUF_NOINLINE ::commonmodule::ESS* Arena::CreateMaybeMessage< ::commonmodule::ESS >(Arena* arena) {
  return Arena::CreateInternal< ::commonmodule::ESS >(arena);
}
template<> PROTOBUF_NOINLINE ::commonmodule::EventMessageInfo* Arena::CreateMaybeMessage< ::commonmodule::EventMessageInfo >(Arena* arena) {
  return Arena::CreateInternal< ::commonmodule::EventMessageInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::commonmodule::EventValue* Arena::CreateMaybeMessage< ::commonmodule::EventValue >(Arena* arena) {
  return Arena::CreateInternal< ::commonmodule::EventValue >(arena);
}
template<> PROTOBUF_NOINLINE ::commonmodule::ForecastValueSource* Arena::CreateMaybeMessage< ::commonmodule::ForecastValueSource >(Arena* arena) {
  return Arena::CreateInternal< ::commonmodule::ForecastValueSource >(arena);
}
template<> PROTOBUF_NOINLINE ::commonmodule::ForecastIED* Arena::CreateMaybeMessage< ::commonmodule::ForecastIED >(Arena* arena) {
  return Arena::CreateInternal< ::commonmodule::ForecastIED >(arena);
}
template<> PROTOBUF_NOINLINE ::commonmodule::ForecastValue* Arena::CreateMaybeMessage< ::commonmodule::ForecastValue >(Arena* arena) {
  return Arena::CreateInternal< ::commonmodule::ForecastValue >(arena);
}
template<> PROTOBUF_NOINLINE ::commonmodule::IED* Arena::CreateMaybeMessage< ::commonmodule::IED >(Arena* arena) {
  return Arena::CreateInternal< ::commonmodule::IED >(arena);
}
template<> PROTOBUF_NOINLINE ::commonmodule::StatusINS* Arena::CreateMaybeMessage< ::commonmodule::StatusINS >(Arena* arena) {
  return Arena::CreateInternal< ::commonmodule::StatusINS >(arena);
}
template<> PROTOBUF_NOINLINE ::commonmodule::IntegerStatusGGIO* Arena::CreateMaybeMessage< ::commonmodule::IntegerStatusGGIO >(Arena* arena) {
  return Arena::CreateInternal< ::commonmodule::IntegerStatusGGIO >(arena);
}
template<> PROTOBUF_NOINLINE ::commonmodule::LogicalNodeForEventAndStatus* Arena::CreateMaybeMessage< ::commonmodule::LogicalNodeForEventAndStatus >(Arena* arena) {
  return Arena::CreateInternal< ::commonmodule::LogicalNodeForEventAndStatus >(arena);
}
template<> PROTOBUF_NOINLINE ::commonmodule::MeasurementValue* Arena::CreateMaybeMessage< ::commonmodule::MeasurementValue >(Arena* arena) {
  return Arena::CreateInternal< ::commonmodule::MeasurementValue >(arena);
}
template<> PROTOBUF_NOINLINE ::commonmodule::Meter* Arena::CreateMaybeMessage< ::commonmodule::Meter >(Arena* arena) {
  return Arena::CreateInternal< ::commonmodule::Meter >(arena);
}
template<> PROTOBUF_NOINLINE ::commonmodule::OptimizationMessageInfo* Arena::CreateMaybeMessage< ::commonmodule::OptimizationMessageInfo >(Arena* arena) {
  return Arena::CreateInternal< ::commonmodule::OptimizationMessageInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::commonmodule::ReadingMMTN* Arena::CreateMaybeMessage< ::commonmodule::ReadingMMTN >(Arena* arena) {
  return Arena::CreateInternal< ::commonmodule::ReadingMMTN >(arena);
}
template<> PROTOBUF_NOINLINE ::commonmodule::PhaseMMTN* Arena::CreateMaybeMessage< ::commonmodule::PhaseMMTN >(Arena* arena) {
  return Arena::CreateInternal< ::commonmodule::PhaseMMTN >(arena);
}
template<> PROTOBUF_NOINLINE ::commonmodule::RampRate* Arena::CreateMaybeMessage< ::commonmodule::RampRate >(Arena* arena) {
  return Arena::CreateInternal< ::commonmodule::RampRate >(arena);
}
template<> PROTOBUF_NOINLINE ::commonmodule::ReadingMessageInfo* Arena::CreateMaybeMessage< ::commonmodule::ReadingMessageInfo >(Arena* arena) {
  return Arena::CreateInternal< ::commonmodule::ReadingMessageInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::commonmodule::ReadingMMTR* Arena::CreateMaybeMessage< ::commonmodule::ReadingMMTR >(Arena* arena) {
  return Arena::CreateInternal< ::commonmodule::ReadingMMTR >(arena);
}
template<> PROTOBUF_NOINLINE ::commonmodule::WYE* Arena::CreateMaybeMessage< ::commonmodule::WYE >(Arena* arena) {
  return Arena::CreateInternal< ::commonmodule::WYE >(arena);
}
template<> PROTOBUF_NOINLINE ::commonmodule::ReadingMMXU* Arena::CreateMaybeMessage< ::commonmodule::ReadingMMXU >(Arena* arena) {
  return Arena::CreateInternal< ::commonmodule::ReadingMMXU >(arena);
}
template<> PROTOBUF_NOINLINE ::commonmodule::Optional_DbPosKind* Arena::CreateMaybeMessage< ::commonmodule::Optional_DbPosKind >(Arena* arena) {
  return Arena::CreateInternal< ::commonmodule::Optional_DbPosKind >(arena);
}
template<> PROTOBUF_NOINLINE ::commonmodule::StatusDPS* Arena::CreateMaybeMessage< ::commonmodule::StatusDPS >(Arena* arena) {
  return Arena::CreateInternal< ::commonmodule::StatusDPS >(arena);
}
template<> PROTOBUF_NOINLINE ::commonmodule::StatusAndEventXCBR* Arena::CreateMaybeMessage< ::commonmodule::StatusAndEventXCBR >(Arena* arena) {
  return Arena::CreateInternal< ::commonmodule::StatusAndEventXCBR >(arena);
}
template<> PROTOBUF_NOINLINE ::commonmodule::StatusISC* Arena::CreateMaybeMessage< ::commonmodule::StatusISC >(Arena* arena) {
  return Arena::CreateInternal< ::commonmodule::StatusISC >(arena);
}
template<> PROTOBUF_NOINLINE ::commonmodule::StatusMessageInfo* Arena::CreateMaybeMessage< ::commonmodule::StatusMessageInfo >(Arena* arena) {
  return Arena::CreateInternal< ::commonmodule::StatusMessageInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::commonmodule::StatusSPC* Arena::CreateMaybeMessage< ::commonmodule::StatusSPC >(Arena* arena) {
  return Arena::CreateInternal< ::commonmodule::StatusSPC >(arena);
}
template<> PROTOBUF_NOINLINE ::commonmodule::StatusValue* Arena::CreateMaybeMessage< ::commonmodule::StatusValue >(Arena* arena) {
  return Arena::CreateInternal< ::commonmodule::StatusValue >(arena);
}
template<> PROTOBUF_NOINLINE ::commonmodule::VSS* Arena::CreateMaybeMessage< ::commonmodule::VSS >(Arena* arena) {
  return Arena::CreateInternal< ::commonmodule::VSS >(arena);
}
template<> PROTOBUF_NOINLINE ::commonmodule::StringStatusGGIO* Arena::CreateMaybeMessage< ::commonmodule::StringStatusGGIO >(Arena* arena) {
  return Arena::CreateInternal< ::commonmodule::StringStatusGGIO >(arena);
}
template<> PROTOBUF_NOINLINE ::commonmodule::SwitchPoint* Arena::CreateMaybeMessage< ::commonmodule::SwitchPoint >(Arena* arena) {
  return Arena::CreateInternal< ::commonmodule::SwitchPoint >(arena);
}
template<> PROTOBUF_NOINLINE ::commonmodule::SwitchCSG* Arena::CreateMaybeMessage< ::commonmodule::SwitchCSG >(Arena* arena) {
  return Arena::CreateInternal< ::commonmodule::SwitchCSG >(arena);
}
template<> PROTOBUF_NOINLINE ::commonmodule::SwitchControlScheduleFSCH* Arena::CreateMaybeMessage< ::commonmodule::SwitchControlScheduleFSCH >(Arena* arena) {
  return Arena::CreateInternal< ::commonmodule::SwitchControlScheduleFSCH >(arena);
}
template<> PROTOBUF_NOINLINE ::commonmodule::Optional_StateKind* Arena::CreateMaybeMessage< ::commonmodule::Optional_StateKind >(Arena* arena) {
  return Arena::CreateInternal< ::commonmodule::Optional_StateKind >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
