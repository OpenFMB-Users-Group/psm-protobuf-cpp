// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: coordinationservicemodule/coordinationservicemodule.proto

#include "coordinationservicemodule/coordinationservicemodule.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_commonmodule_2fcommonmodule_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ControlDPC_commonmodule_2fcommonmodule_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_commonmodule_2fcommonmodule_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ApplicationSystem_commonmodule_2fcommonmodule_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_commonmodule_2fcommonmodule_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_CheckConditions_commonmodule_2fcommonmodule_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_commonmodule_2fcommonmodule_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ControlMessageInfo_commonmodule_2fcommonmodule_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_commonmodule_2fcommonmodule_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_EventMessageInfo_commonmodule_2fcommonmodule_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_commonmodule_2fcommonmodule_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_EventValue_commonmodule_2fcommonmodule_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_commonmodule_2fcommonmodule_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_LogicalNodeForControl_commonmodule_2fcommonmodule_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_commonmodule_2fcommonmodule_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_ControlValue_commonmodule_2fcommonmodule_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_commonmodule_2fcommonmodule_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_StatusSPS_commonmodule_2fcommonmodule_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_commonmodule_2fcommonmodule_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_LogicalNodeForEventAndStatus_commonmodule_2fcommonmodule_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_coordinationservicemodule_2fcoordinationservicemodule_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ENG_CoordinationServiceModeKind_coordinationservicemodule_2fcoordinationservicemodule_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_coordinationservicemodule_2fcoordinationservicemodule_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_CoordinationEvent_coordinationservicemodule_2fcoordinationservicemodule_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_coordinationservicemodule_2fcoordinationservicemodule_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_CoordinationStatus_coordinationservicemodule_2fcoordinationservicemodule_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_coordinationservicemodule_2fcoordinationservicemodule_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_CoordinationControlDCSC_coordinationservicemodule_2fcoordinationservicemodule_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_coordinationservicemodule_2fcoordinationservicemodule_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_CoordinationControl_coordinationservicemodule_2fcoordinationservicemodule_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_coordinationservicemodule_2fcoordinationservicemodule_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_CoordinationEventDCSC_coordinationservicemodule_2fcoordinationservicemodule_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_coordinationservicemodule_2fcoordinationservicemodule_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_CoordinationStatusDCSC_coordinationservicemodule_2fcoordinationservicemodule_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fwrappers_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_StringValue_google_2fprotobuf_2fwrappers_2eproto;
namespace coordinationservicemodule {
class Optional_CoordinationServiceModeKindDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Optional_CoordinationServiceModeKind> _instance;
} _Optional_CoordinationServiceModeKind_default_instance_;
class ENG_CoordinationServiceModeKindDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ENG_CoordinationServiceModeKind> _instance;
} _ENG_CoordinationServiceModeKind_default_instance_;
class CoordinationControlDCSCDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CoordinationControlDCSC> _instance;
} _CoordinationControlDCSC_default_instance_;
class CoordinationControlDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CoordinationControl> _instance;
} _CoordinationControl_default_instance_;
class CoordinationControlProfileDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CoordinationControlProfile> _instance;
} _CoordinationControlProfile_default_instance_;
class CoordinationEventDCSCDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CoordinationEventDCSC> _instance;
} _CoordinationEventDCSC_default_instance_;
class CoordinationEventDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CoordinationEvent> _instance;
} _CoordinationEvent_default_instance_;
class CoordinationEventProfileDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CoordinationEventProfile> _instance;
} _CoordinationEventProfile_default_instance_;
class CoordinationStatusDCSCDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CoordinationStatusDCSC> _instance;
} _CoordinationStatusDCSC_default_instance_;
class CoordinationStatusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CoordinationStatus> _instance;
} _CoordinationStatus_default_instance_;
class CoordinationStatusProfileDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CoordinationStatusProfile> _instance;
} _CoordinationStatusProfile_default_instance_;
}  // namespace coordinationservicemodule
static void InitDefaultsOptional_CoordinationServiceModeKind_coordinationservicemodule_2fcoordinationservicemodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::coordinationservicemodule::_Optional_CoordinationServiceModeKind_default_instance_;
    new (ptr) ::coordinationservicemodule::Optional_CoordinationServiceModeKind();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::coordinationservicemodule::Optional_CoordinationServiceModeKind::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Optional_CoordinationServiceModeKind_coordinationservicemodule_2fcoordinationservicemodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsOptional_CoordinationServiceModeKind_coordinationservicemodule_2fcoordinationservicemodule_2eproto}, {}};

static void InitDefaultsENG_CoordinationServiceModeKind_coordinationservicemodule_2fcoordinationservicemodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::coordinationservicemodule::_ENG_CoordinationServiceModeKind_default_instance_;
    new (ptr) ::coordinationservicemodule::ENG_CoordinationServiceModeKind();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::coordinationservicemodule::ENG_CoordinationServiceModeKind::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ENG_CoordinationServiceModeKind_coordinationservicemodule_2fcoordinationservicemodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsENG_CoordinationServiceModeKind_coordinationservicemodule_2fcoordinationservicemodule_2eproto}, {
      &scc_info_StringValue_google_2fprotobuf_2fwrappers_2eproto.base,}};

static void InitDefaultsCoordinationControlDCSC_coordinationservicemodule_2fcoordinationservicemodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::coordinationservicemodule::_CoordinationControlDCSC_default_instance_;
    new (ptr) ::coordinationservicemodule::CoordinationControlDCSC();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::coordinationservicemodule::CoordinationControlDCSC::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_CoordinationControlDCSC_coordinationservicemodule_2fcoordinationservicemodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsCoordinationControlDCSC_coordinationservicemodule_2fcoordinationservicemodule_2eproto}, {
      &scc_info_LogicalNodeForControl_commonmodule_2fcommonmodule_2eproto.base,
      &scc_info_ENG_CoordinationServiceModeKind_coordinationservicemodule_2fcoordinationservicemodule_2eproto.base,
      &scc_info_ControlDPC_commonmodule_2fcommonmodule_2eproto.base,}};

static void InitDefaultsCoordinationControl_coordinationservicemodule_2fcoordinationservicemodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::coordinationservicemodule::_CoordinationControl_default_instance_;
    new (ptr) ::coordinationservicemodule::CoordinationControl();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::coordinationservicemodule::CoordinationControl::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_CoordinationControl_coordinationservicemodule_2fcoordinationservicemodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsCoordinationControl_coordinationservicemodule_2fcoordinationservicemodule_2eproto}, {
      &scc_info_ControlValue_commonmodule_2fcommonmodule_2eproto.base,
      &scc_info_CheckConditions_commonmodule_2fcommonmodule_2eproto.base,
      &scc_info_CoordinationControlDCSC_coordinationservicemodule_2fcoordinationservicemodule_2eproto.base,}};

static void InitDefaultsCoordinationControlProfile_coordinationservicemodule_2fcoordinationservicemodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::coordinationservicemodule::_CoordinationControlProfile_default_instance_;
    new (ptr) ::coordinationservicemodule::CoordinationControlProfile();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::coordinationservicemodule::CoordinationControlProfile::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_CoordinationControlProfile_coordinationservicemodule_2fcoordinationservicemodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsCoordinationControlProfile_coordinationservicemodule_2fcoordinationservicemodule_2eproto}, {
      &scc_info_ControlMessageInfo_commonmodule_2fcommonmodule_2eproto.base,
      &scc_info_ApplicationSystem_commonmodule_2fcommonmodule_2eproto.base,
      &scc_info_CoordinationControl_coordinationservicemodule_2fcoordinationservicemodule_2eproto.base,}};

static void InitDefaultsCoordinationEventDCSC_coordinationservicemodule_2fcoordinationservicemodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::coordinationservicemodule::_CoordinationEventDCSC_default_instance_;
    new (ptr) ::coordinationservicemodule::CoordinationEventDCSC();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::coordinationservicemodule::CoordinationEventDCSC::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_CoordinationEventDCSC_coordinationservicemodule_2fcoordinationservicemodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsCoordinationEventDCSC_coordinationservicemodule_2fcoordinationservicemodule_2eproto}, {
      &scc_info_LogicalNodeForEventAndStatus_commonmodule_2fcommonmodule_2eproto.base,
      &scc_info_ENG_CoordinationServiceModeKind_coordinationservicemodule_2fcoordinationservicemodule_2eproto.base,
      &scc_info_StatusSPS_commonmodule_2fcommonmodule_2eproto.base,}};

static void InitDefaultsCoordinationEvent_coordinationservicemodule_2fcoordinationservicemodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::coordinationservicemodule::_CoordinationEvent_default_instance_;
    new (ptr) ::coordinationservicemodule::CoordinationEvent();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::coordinationservicemodule::CoordinationEvent::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_CoordinationEvent_coordinationservicemodule_2fcoordinationservicemodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsCoordinationEvent_coordinationservicemodule_2fcoordinationservicemodule_2eproto}, {
      &scc_info_EventValue_commonmodule_2fcommonmodule_2eproto.base,
      &scc_info_CoordinationEventDCSC_coordinationservicemodule_2fcoordinationservicemodule_2eproto.base,}};

static void InitDefaultsCoordinationEventProfile_coordinationservicemodule_2fcoordinationservicemodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::coordinationservicemodule::_CoordinationEventProfile_default_instance_;
    new (ptr) ::coordinationservicemodule::CoordinationEventProfile();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::coordinationservicemodule::CoordinationEventProfile::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_CoordinationEventProfile_coordinationservicemodule_2fcoordinationservicemodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsCoordinationEventProfile_coordinationservicemodule_2fcoordinationservicemodule_2eproto}, {
      &scc_info_EventMessageInfo_commonmodule_2fcommonmodule_2eproto.base,
      &scc_info_ApplicationSystem_commonmodule_2fcommonmodule_2eproto.base,
      &scc_info_CoordinationEvent_coordinationservicemodule_2fcoordinationservicemodule_2eproto.base,}};

static void InitDefaultsCoordinationStatusDCSC_coordinationservicemodule_2fcoordinationservicemodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::coordinationservicemodule::_CoordinationStatusDCSC_default_instance_;
    new (ptr) ::coordinationservicemodule::CoordinationStatusDCSC();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::coordinationservicemodule::CoordinationStatusDCSC::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_CoordinationStatusDCSC_coordinationservicemodule_2fcoordinationservicemodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsCoordinationStatusDCSC_coordinationservicemodule_2fcoordinationservicemodule_2eproto}, {
      &scc_info_LogicalNodeForEventAndStatus_commonmodule_2fcommonmodule_2eproto.base,
      &scc_info_ENG_CoordinationServiceModeKind_coordinationservicemodule_2fcoordinationservicemodule_2eproto.base,
      &scc_info_StatusSPS_commonmodule_2fcommonmodule_2eproto.base,}};

static void InitDefaultsCoordinationStatus_coordinationservicemodule_2fcoordinationservicemodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::coordinationservicemodule::_CoordinationStatus_default_instance_;
    new (ptr) ::coordinationservicemodule::CoordinationStatus();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::coordinationservicemodule::CoordinationStatus::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_CoordinationStatus_coordinationservicemodule_2fcoordinationservicemodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsCoordinationStatus_coordinationservicemodule_2fcoordinationservicemodule_2eproto}, {
      &scc_info_EventValue_commonmodule_2fcommonmodule_2eproto.base,
      &scc_info_CoordinationStatusDCSC_coordinationservicemodule_2fcoordinationservicemodule_2eproto.base,}};

static void InitDefaultsCoordinationStatusProfile_coordinationservicemodule_2fcoordinationservicemodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::coordinationservicemodule::_CoordinationStatusProfile_default_instance_;
    new (ptr) ::coordinationservicemodule::CoordinationStatusProfile();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::coordinationservicemodule::CoordinationStatusProfile::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_CoordinationStatusProfile_coordinationservicemodule_2fcoordinationservicemodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsCoordinationStatusProfile_coordinationservicemodule_2fcoordinationservicemodule_2eproto}, {
      &scc_info_EventMessageInfo_commonmodule_2fcommonmodule_2eproto.base,
      &scc_info_ApplicationSystem_commonmodule_2fcommonmodule_2eproto.base,
      &scc_info_CoordinationStatus_coordinationservicemodule_2fcoordinationservicemodule_2eproto.base,}};

void InitDefaults_coordinationservicemodule_2fcoordinationservicemodule_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_Optional_CoordinationServiceModeKind_coordinationservicemodule_2fcoordinationservicemodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ENG_CoordinationServiceModeKind_coordinationservicemodule_2fcoordinationservicemodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CoordinationControlDCSC_coordinationservicemodule_2fcoordinationservicemodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CoordinationControl_coordinationservicemodule_2fcoordinationservicemodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CoordinationControlProfile_coordinationservicemodule_2fcoordinationservicemodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CoordinationEventDCSC_coordinationservicemodule_2fcoordinationservicemodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CoordinationEvent_coordinationservicemodule_2fcoordinationservicemodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CoordinationEventProfile_coordinationservicemodule_2fcoordinationservicemodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CoordinationStatusDCSC_coordinationservicemodule_2fcoordinationservicemodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CoordinationStatus_coordinationservicemodule_2fcoordinationservicemodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CoordinationStatusProfile_coordinationservicemodule_2fcoordinationservicemodule_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_coordinationservicemodule_2fcoordinationservicemodule_2eproto[11];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors_coordinationservicemodule_2fcoordinationservicemodule_2eproto[1];
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_coordinationservicemodule_2fcoordinationservicemodule_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_coordinationservicemodule_2fcoordinationservicemodule_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::coordinationservicemodule::Optional_CoordinationServiceModeKind, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::coordinationservicemodule::Optional_CoordinationServiceModeKind, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::coordinationservicemodule::ENG_CoordinationServiceModeKind, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::coordinationservicemodule::ENG_CoordinationServiceModeKind, setval_),
  PROTOBUF_FIELD_OFFSET(::coordinationservicemodule::ENG_CoordinationServiceModeKind, setvalextension_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::coordinationservicemodule::CoordinationControlDCSC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::coordinationservicemodule::CoordinationControlDCSC, logicalnodeforcontrol_),
  PROTOBUF_FIELD_OFFSET(::coordinationservicemodule::CoordinationControlDCSC, coordinationservicemode_),
  PROTOBUF_FIELD_OFFSET(::coordinationservicemodule::CoordinationControlDCSC, island_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::coordinationservicemodule::CoordinationControl, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::coordinationservicemodule::CoordinationControl, controlvalue_),
  PROTOBUF_FIELD_OFFSET(::coordinationservicemodule::CoordinationControl, check_),
  PROTOBUF_FIELD_OFFSET(::coordinationservicemodule::CoordinationControl, coordinationcontroldcsc_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::coordinationservicemodule::CoordinationControlProfile, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::coordinationservicemodule::CoordinationControlProfile, controlmessageinfo_),
  PROTOBUF_FIELD_OFFSET(::coordinationservicemodule::CoordinationControlProfile, applicationsystem_),
  PROTOBUF_FIELD_OFFSET(::coordinationservicemodule::CoordinationControlProfile, coordinationcontrol_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::coordinationservicemodule::CoordinationEventDCSC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::coordinationservicemodule::CoordinationEventDCSC, logicalnodeforeventandstatus_),
  PROTOBUF_FIELD_OFFSET(::coordinationservicemodule::CoordinationEventDCSC, coordinationservicemode_),
  PROTOBUF_FIELD_OFFSET(::coordinationservicemodule::CoordinationEventDCSC, island_),
  PROTOBUF_FIELD_OFFSET(::coordinationservicemodule::CoordinationEventDCSC, permissibleauto_),
  PROTOBUF_FIELD_OFFSET(::coordinationservicemodule::CoordinationEventDCSC, permissiblemanual_),
  PROTOBUF_FIELD_OFFSET(::coordinationservicemodule::CoordinationEventDCSC, permissiblenetzero_),
  PROTOBUF_FIELD_OFFSET(::coordinationservicemodule::CoordinationEventDCSC, permissiblestart_),
  PROTOBUF_FIELD_OFFSET(::coordinationservicemodule::CoordinationEventDCSC, permissiblestop_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::coordinationservicemodule::CoordinationEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::coordinationservicemodule::CoordinationEvent, eventvalue_),
  PROTOBUF_FIELD_OFFSET(::coordinationservicemodule::CoordinationEvent, coordinationeventdcsc_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::coordinationservicemodule::CoordinationEventProfile, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::coordinationservicemodule::CoordinationEventProfile, eventmessageinfo_),
  PROTOBUF_FIELD_OFFSET(::coordinationservicemodule::CoordinationEventProfile, applicationsystem_),
  PROTOBUF_FIELD_OFFSET(::coordinationservicemodule::CoordinationEventProfile, coordinationevent_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::coordinationservicemodule::CoordinationStatusDCSC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::coordinationservicemodule::CoordinationStatusDCSC, logicalnodeforeventandstatus_),
  PROTOBUF_FIELD_OFFSET(::coordinationservicemodule::CoordinationStatusDCSC, coordinationservicemode_),
  PROTOBUF_FIELD_OFFSET(::coordinationservicemodule::CoordinationStatusDCSC, island_),
  PROTOBUF_FIELD_OFFSET(::coordinationservicemodule::CoordinationStatusDCSC, permissibleauto_),
  PROTOBUF_FIELD_OFFSET(::coordinationservicemodule::CoordinationStatusDCSC, permissiblemanual_),
  PROTOBUF_FIELD_OFFSET(::coordinationservicemodule::CoordinationStatusDCSC, permissiblenetzero_),
  PROTOBUF_FIELD_OFFSET(::coordinationservicemodule::CoordinationStatusDCSC, permissiblestart_),
  PROTOBUF_FIELD_OFFSET(::coordinationservicemodule::CoordinationStatusDCSC, permissiblestop_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::coordinationservicemodule::CoordinationStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::coordinationservicemodule::CoordinationStatus, eventvalue_),
  PROTOBUF_FIELD_OFFSET(::coordinationservicemodule::CoordinationStatus, coordinationstatusdcsc_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::coordinationservicemodule::CoordinationStatusProfile, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::coordinationservicemodule::CoordinationStatusProfile, eventmessageinfo_),
  PROTOBUF_FIELD_OFFSET(::coordinationservicemodule::CoordinationStatusProfile, applicationsystem_),
  PROTOBUF_FIELD_OFFSET(::coordinationservicemodule::CoordinationStatusProfile, coordinationstatus_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::coordinationservicemodule::Optional_CoordinationServiceModeKind)},
  { 6, -1, sizeof(::coordinationservicemodule::ENG_CoordinationServiceModeKind)},
  { 13, -1, sizeof(::coordinationservicemodule::CoordinationControlDCSC)},
  { 21, -1, sizeof(::coordinationservicemodule::CoordinationControl)},
  { 29, -1, sizeof(::coordinationservicemodule::CoordinationControlProfile)},
  { 37, -1, sizeof(::coordinationservicemodule::CoordinationEventDCSC)},
  { 50, -1, sizeof(::coordinationservicemodule::CoordinationEvent)},
  { 57, -1, sizeof(::coordinationservicemodule::CoordinationEventProfile)},
  { 65, -1, sizeof(::coordinationservicemodule::CoordinationStatusDCSC)},
  { 78, -1, sizeof(::coordinationservicemodule::CoordinationStatus)},
  { 85, -1, sizeof(::coordinationservicemodule::CoordinationStatusProfile)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::coordinationservicemodule::_Optional_CoordinationServiceModeKind_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::coordinationservicemodule::_ENG_CoordinationServiceModeKind_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::coordinationservicemodule::_CoordinationControlDCSC_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::coordinationservicemodule::_CoordinationControl_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::coordinationservicemodule::_CoordinationControlProfile_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::coordinationservicemodule::_CoordinationEventDCSC_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::coordinationservicemodule::_CoordinationEvent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::coordinationservicemodule::_CoordinationEventProfile_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::coordinationservicemodule::_CoordinationStatusDCSC_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::coordinationservicemodule::_CoordinationStatus_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::coordinationservicemodule::_CoordinationStatusProfile_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_coordinationservicemodule_2fcoordinationservicemodule_2eproto = {
  {}, AddDescriptors_coordinationservicemodule_2fcoordinationservicemodule_2eproto, "coordinationservicemodule/coordinationservicemodule.proto", schemas,
  file_default_instances, TableStruct_coordinationservicemodule_2fcoordinationservicemodule_2eproto::offsets,
  file_level_metadata_coordinationservicemodule_2fcoordinationservicemodule_2eproto, 11, file_level_enum_descriptors_coordinationservicemodule_2fcoordinationservicemodule_2eproto, file_level_service_descriptors_coordinationservicemodule_2fcoordinationservicemodule_2eproto,
};

const char descriptor_table_protodef_coordinationservicemodule_2fcoordinationservicemodule_2eproto[] =
  "\n9coordinationservicemodule/coordination"
  "servicemodule.proto\022\031coordinationservice"
  "module\032\tuml.proto\032\036google/protobuf/wrapp"
  "ers.proto\032\037commonmodule/commonmodule.pro"
  "to\"m\n$Optional_CoordinationServiceModeKi"
  "nd\022E\n\005value\030\001 \001(\01626.coordinationservicem"
  "odule.CoordinationServiceModeKind\"\252\001\n\037EN"
  "G_CoordinationServiceModeKind\022P\n\006setVal\030"
  "\001 \001(\01626.coordinationservicemodule.Coordi"
  "nationServiceModeKindB\010\210\265\030\001\220\265\030\001\0225\n\017setVa"
  "lExtension\030\002 \001(\0132\034.google.protobuf.Strin"
  "gValue\"\352\001\n\027CoordinationControlDCSC\022H\n\025lo"
  "gicalNodeForControl\030\001 \001(\0132#.commonmodule"
  ".LogicalNodeForControlB\004\200\265\030\001\022[\n\027Coordina"
  "tionServiceMode\030\002 \001(\0132:.coordinationserv"
  "icemodule.ENG_CoordinationServiceModeKin"
  "d\022(\n\006Island\030\003 \001(\0132\030.commonmodule.Control"
  "DPC\"\332\001\n\023CoordinationControl\0226\n\014controlVa"
  "lue\030\001 \001(\0132\032.commonmodule.ControlValueB\004\200"
  "\265\030\001\022,\n\005check\030\002 \001(\0132\035.commonmodule.CheckC"
  "onditions\022]\n\027coordinationControlDCSC\030\003 \001"
  "(\01322.coordinationservicemodule.Coordinat"
  "ionControlDCSCB\010\210\265\030\001\220\265\030\001\"\203\002\n\032Coordinatio"
  "nControlProfile\022B\n\022controlMessageInfo\030\001 "
  "\001(\0132 .commonmodule.ControlMessageInfoB\004\200"
  "\265\030\001\022D\n\021applicationSystem\030\002 \001(\0132\037.commonm"
  "odule.ApplicationSystemB\010\210\265\030\001\220\265\030\001\022U\n\023coo"
  "rdinationControl\030\003 \001(\0132..coordinationser"
  "vicemodule.CoordinationControlB\010\210\265\030\001\220\265\030\001"
  ":\004\300\363\030\001\"\365\003\n\025CoordinationEventDCSC\022V\n\034logi"
  "calNodeForEventAndStatus\030\001 \001(\0132*.commonm"
  "odule.LogicalNodeForEventAndStatusB\004\200\265\030\001"
  "\022[\n\027CoordinationServiceMode\030\002 \001(\0132:.coor"
  "dinationservicemodule.ENG_CoordinationSe"
  "rviceModeKind\022\'\n\006Island\030\003 \001(\0132\027.commonmo"
  "dule.StatusSPS\0220\n\017PermissibleAuto\030\004 \001(\0132"
  "\027.commonmodule.StatusSPS\0222\n\021PermissibleM"
  "anual\030\005 \001(\0132\027.commonmodule.StatusSPS\0223\n\022"
  "PermissibleNetzero\030\006 \001(\0132\027.commonmodule."
  "StatusSPS\0221\n\020PermissibleStart\030\007 \001(\0132\027.co"
  "mmonmodule.StatusSPS\0220\n\017PermissibleStop\030"
  "\010 \001(\0132\027.commonmodule.StatusSPS\"\242\001\n\021Coord"
  "inationEvent\0222\n\neventValue\030\001 \001(\0132\030.commo"
  "nmodule.EventValueB\004\200\265\030\001\022Y\n\025coordination"
  "EventDCSC\030\002 \001(\01320.coordinationservicemod"
  "ule.CoordinationEventDCSCB\010\210\265\030\001\220\265\030\001\"\371\001\n\030"
  "CoordinationEventProfile\022>\n\020eventMessage"
  "Info\030\001 \001(\0132\036.commonmodule.EventMessageIn"
  "foB\004\200\265\030\001\022D\n\021applicationSystem\030\002 \001(\0132\037.co"
  "mmonmodule.ApplicationSystemB\010\210\265\030\001\220\265\030\001\022Q"
  "\n\021coordinationEvent\030\003 \001(\0132,.coordination"
  "servicemodule.CoordinationEventB\010\210\265\030\001\220\265\030"
  "\001:\004\300\363\030\001\"\366\003\n\026CoordinationStatusDCSC\022V\n\034lo"
  "gicalNodeForEventAndStatus\030\001 \001(\0132*.commo"
  "nmodule.LogicalNodeForEventAndStatusB\004\200\265"
  "\030\001\022[\n\027CoordinationServiceMode\030\002 \001(\0132:.co"
  "ordinationservicemodule.ENG_Coordination"
  "ServiceModeKind\022\'\n\006Island\030\003 \001(\0132\027.common"
  "module.StatusSPS\0220\n\017PermissibleAuto\030\004 \001("
  "\0132\027.commonmodule.StatusSPS\0222\n\021Permissibl"
  "eManual\030\005 \001(\0132\027.commonmodule.StatusSPS\0223"
  "\n\022PermissibleNetzero\030\006 \001(\0132\027.commonmodul"
  "e.StatusSPS\0221\n\020PermissibleStart\030\007 \001(\0132\027."
  "commonmodule.StatusSPS\0220\n\017PermissibleSto"
  "p\030\010 \001(\0132\027.commonmodule.StatusSPS\"\245\001\n\022Coo"
  "rdinationStatus\0222\n\neventValue\030\001 \001(\0132\030.co"
  "mmonmodule.EventValueB\004\200\265\030\001\022[\n\026coordinat"
  "ionStatusDCSC\030\002 \001(\01321.coordinationservic"
  "emodule.CoordinationStatusDCSCB\010\210\265\030\001\220\265\030\001"
  "\"\374\001\n\031CoordinationStatusProfile\022>\n\020eventM"
  "essageInfo\030\001 \001(\0132\036.commonmodule.EventMes"
  "sageInfoB\004\200\265\030\001\022D\n\021applicationSystem\030\002 \001("
  "\0132\037.commonmodule.ApplicationSystemB\010\210\265\030\001"
  "\220\265\030\001\022S\n\022coordinationStatus\030\003 \001(\0132-.coord"
  "inationservicemodule.CoordinationStatusB"
  "\010\210\265\030\001\220\265\030\001:\004\300\363\030\001*\207\002\n\033CoordinationServiceM"
  "odeKind\022$\n CoordinationServiceModeKind_n"
  "one\020\000\022$\n CoordinationServiceModeKind_aut"
  "o\020\001\022&\n\"CoordinationServiceModeKind_manua"
  "l\020\002\022\'\n#CoordinationServiceModeKind_netze"
  "ro\020\003\022%\n!CoordinationServiceModeKind_star"
  "t\020\004\022$\n CoordinationServiceModeKind_stop\020"
  "\005B\250\001\n!openfmb.coordinationservicemoduleP"
  "\001Z]gitlab.com/openfmb/psm/ops/protobuf/g"
  "o-openfmb-ops-protobuf/openfmb/coordinat"
  "ionservicemodule\252\002!openfmb.coordinations"
  "ervicemoduleb\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_coordinationservicemodule_2fcoordinationservicemodule_2eproto = {
  false, InitDefaults_coordinationservicemodule_2fcoordinationservicemodule_2eproto, 
  descriptor_table_protodef_coordinationservicemodule_2fcoordinationservicemodule_2eproto,
  "coordinationservicemodule/coordinationservicemodule.proto", &assign_descriptors_table_coordinationservicemodule_2fcoordinationservicemodule_2eproto, 3460,
};

void AddDescriptors_coordinationservicemodule_2fcoordinationservicemodule_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[3] =
  {
    ::AddDescriptors_uml_2eproto,
    ::AddDescriptors_google_2fprotobuf_2fwrappers_2eproto,
    ::AddDescriptors_commonmodule_2fcommonmodule_2eproto,
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_coordinationservicemodule_2fcoordinationservicemodule_2eproto, deps, 3);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_coordinationservicemodule_2fcoordinationservicemodule_2eproto = []() { AddDescriptors_coordinationservicemodule_2fcoordinationservicemodule_2eproto(); return true; }();
namespace coordinationservicemodule {
const ::google::protobuf::EnumDescriptor* CoordinationServiceModeKind_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_coordinationservicemodule_2fcoordinationservicemodule_2eproto);
  return file_level_enum_descriptors_coordinationservicemodule_2fcoordinationservicemodule_2eproto[0];
}
bool CoordinationServiceModeKind_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void Optional_CoordinationServiceModeKind::InitAsDefaultInstance() {
}
class Optional_CoordinationServiceModeKind::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Optional_CoordinationServiceModeKind::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Optional_CoordinationServiceModeKind::Optional_CoordinationServiceModeKind()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:coordinationservicemodule.Optional_CoordinationServiceModeKind)
}
Optional_CoordinationServiceModeKind::Optional_CoordinationServiceModeKind(const Optional_CoordinationServiceModeKind& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:coordinationservicemodule.Optional_CoordinationServiceModeKind)
}

void Optional_CoordinationServiceModeKind::SharedCtor() {
  value_ = 0;
}

Optional_CoordinationServiceModeKind::~Optional_CoordinationServiceModeKind() {
  // @@protoc_insertion_point(destructor:coordinationservicemodule.Optional_CoordinationServiceModeKind)
  SharedDtor();
}

void Optional_CoordinationServiceModeKind::SharedDtor() {
}

void Optional_CoordinationServiceModeKind::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Optional_CoordinationServiceModeKind& Optional_CoordinationServiceModeKind::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Optional_CoordinationServiceModeKind_coordinationservicemodule_2fcoordinationservicemodule_2eproto.base);
  return *internal_default_instance();
}


void Optional_CoordinationServiceModeKind::Clear() {
// @@protoc_insertion_point(message_clear_start:coordinationservicemodule.Optional_CoordinationServiceModeKind)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Optional_CoordinationServiceModeKind::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Optional_CoordinationServiceModeKind*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .coordinationservicemodule.CoordinationServiceModeKind value = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_value(static_cast<::coordinationservicemodule::CoordinationServiceModeKind>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Optional_CoordinationServiceModeKind::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:coordinationservicemodule.Optional_CoordinationServiceModeKind)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .coordinationservicemodule.CoordinationServiceModeKind value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_value(static_cast< ::coordinationservicemodule::CoordinationServiceModeKind >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:coordinationservicemodule.Optional_CoordinationServiceModeKind)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:coordinationservicemodule.Optional_CoordinationServiceModeKind)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Optional_CoordinationServiceModeKind::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:coordinationservicemodule.Optional_CoordinationServiceModeKind)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .coordinationservicemodule.CoordinationServiceModeKind value = 1;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:coordinationservicemodule.Optional_CoordinationServiceModeKind)
}

::google::protobuf::uint8* Optional_CoordinationServiceModeKind::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:coordinationservicemodule.Optional_CoordinationServiceModeKind)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .coordinationservicemodule.CoordinationServiceModeKind value = 1;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:coordinationservicemodule.Optional_CoordinationServiceModeKind)
  return target;
}

size_t Optional_CoordinationServiceModeKind::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:coordinationservicemodule.Optional_CoordinationServiceModeKind)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .coordinationservicemodule.CoordinationServiceModeKind value = 1;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Optional_CoordinationServiceModeKind::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:coordinationservicemodule.Optional_CoordinationServiceModeKind)
  GOOGLE_DCHECK_NE(&from, this);
  const Optional_CoordinationServiceModeKind* source =
      ::google::protobuf::DynamicCastToGenerated<Optional_CoordinationServiceModeKind>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:coordinationservicemodule.Optional_CoordinationServiceModeKind)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:coordinationservicemodule.Optional_CoordinationServiceModeKind)
    MergeFrom(*source);
  }
}

void Optional_CoordinationServiceModeKind::MergeFrom(const Optional_CoordinationServiceModeKind& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:coordinationservicemodule.Optional_CoordinationServiceModeKind)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value() != 0) {
    set_value(from.value());
  }
}

void Optional_CoordinationServiceModeKind::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:coordinationservicemodule.Optional_CoordinationServiceModeKind)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Optional_CoordinationServiceModeKind::CopyFrom(const Optional_CoordinationServiceModeKind& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:coordinationservicemodule.Optional_CoordinationServiceModeKind)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Optional_CoordinationServiceModeKind::IsInitialized() const {
  return true;
}

void Optional_CoordinationServiceModeKind::Swap(Optional_CoordinationServiceModeKind* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Optional_CoordinationServiceModeKind::InternalSwap(Optional_CoordinationServiceModeKind* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(value_, other->value_);
}

::google::protobuf::Metadata Optional_CoordinationServiceModeKind::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_coordinationservicemodule_2fcoordinationservicemodule_2eproto);
  return ::file_level_metadata_coordinationservicemodule_2fcoordinationservicemodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ENG_CoordinationServiceModeKind::InitAsDefaultInstance() {
  ::coordinationservicemodule::_ENG_CoordinationServiceModeKind_default_instance_._instance.get_mutable()->setvalextension_ = const_cast< ::google::protobuf::StringValue*>(
      ::google::protobuf::StringValue::internal_default_instance());
}
class ENG_CoordinationServiceModeKind::HasBitSetters {
 public:
  static const ::google::protobuf::StringValue& setvalextension(const ENG_CoordinationServiceModeKind* msg);
};

const ::google::protobuf::StringValue&
ENG_CoordinationServiceModeKind::HasBitSetters::setvalextension(const ENG_CoordinationServiceModeKind* msg) {
  return *msg->setvalextension_;
}
void ENG_CoordinationServiceModeKind::clear_setvalextension() {
  if (GetArenaNoVirtual() == nullptr && setvalextension_ != nullptr) {
    delete setvalextension_;
  }
  setvalextension_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ENG_CoordinationServiceModeKind::kSetValFieldNumber;
const int ENG_CoordinationServiceModeKind::kSetValExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ENG_CoordinationServiceModeKind::ENG_CoordinationServiceModeKind()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:coordinationservicemodule.ENG_CoordinationServiceModeKind)
}
ENG_CoordinationServiceModeKind::ENG_CoordinationServiceModeKind(const ENG_CoordinationServiceModeKind& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_setvalextension()) {
    setvalextension_ = new ::google::protobuf::StringValue(*from.setvalextension_);
  } else {
    setvalextension_ = nullptr;
  }
  setval_ = from.setval_;
  // @@protoc_insertion_point(copy_constructor:coordinationservicemodule.ENG_CoordinationServiceModeKind)
}

void ENG_CoordinationServiceModeKind::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ENG_CoordinationServiceModeKind_coordinationservicemodule_2fcoordinationservicemodule_2eproto.base);
  ::memset(&setvalextension_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&setval_) -
      reinterpret_cast<char*>(&setvalextension_)) + sizeof(setval_));
}

ENG_CoordinationServiceModeKind::~ENG_CoordinationServiceModeKind() {
  // @@protoc_insertion_point(destructor:coordinationservicemodule.ENG_CoordinationServiceModeKind)
  SharedDtor();
}

void ENG_CoordinationServiceModeKind::SharedDtor() {
  if (this != internal_default_instance()) delete setvalextension_;
}

void ENG_CoordinationServiceModeKind::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ENG_CoordinationServiceModeKind& ENG_CoordinationServiceModeKind::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ENG_CoordinationServiceModeKind_coordinationservicemodule_2fcoordinationservicemodule_2eproto.base);
  return *internal_default_instance();
}


void ENG_CoordinationServiceModeKind::Clear() {
// @@protoc_insertion_point(message_clear_start:coordinationservicemodule.ENG_CoordinationServiceModeKind)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && setvalextension_ != nullptr) {
    delete setvalextension_;
  }
  setvalextension_ = nullptr;
  setval_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ENG_CoordinationServiceModeKind::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ENG_CoordinationServiceModeKind*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .coordinationservicemodule.CoordinationServiceModeKind setVal = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_setval(static_cast<::coordinationservicemodule::CoordinationServiceModeKind>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .google.protobuf.StringValue setValExtension = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::StringValue::_InternalParse;
        object = msg->mutable_setvalextension();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ENG_CoordinationServiceModeKind::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:coordinationservicemodule.ENG_CoordinationServiceModeKind)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .coordinationservicemodule.CoordinationServiceModeKind setVal = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_setval(static_cast< ::coordinationservicemodule::CoordinationServiceModeKind >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.StringValue setValExtension = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_setvalextension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:coordinationservicemodule.ENG_CoordinationServiceModeKind)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:coordinationservicemodule.ENG_CoordinationServiceModeKind)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ENG_CoordinationServiceModeKind::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:coordinationservicemodule.ENG_CoordinationServiceModeKind)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .coordinationservicemodule.CoordinationServiceModeKind setVal = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->setval() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->setval(), output);
  }

  // .google.protobuf.StringValue setValExtension = 2;
  if (this->has_setvalextension()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::setvalextension(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:coordinationservicemodule.ENG_CoordinationServiceModeKind)
}

::google::protobuf::uint8* ENG_CoordinationServiceModeKind::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:coordinationservicemodule.ENG_CoordinationServiceModeKind)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .coordinationservicemodule.CoordinationServiceModeKind setVal = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->setval() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->setval(), target);
  }

  // .google.protobuf.StringValue setValExtension = 2;
  if (this->has_setvalextension()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::setvalextension(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:coordinationservicemodule.ENG_CoordinationServiceModeKind)
  return target;
}

size_t ENG_CoordinationServiceModeKind::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:coordinationservicemodule.ENG_CoordinationServiceModeKind)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.StringValue setValExtension = 2;
  if (this->has_setvalextension()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *setvalextension_);
  }

  // .coordinationservicemodule.CoordinationServiceModeKind setVal = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->setval() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->setval());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ENG_CoordinationServiceModeKind::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:coordinationservicemodule.ENG_CoordinationServiceModeKind)
  GOOGLE_DCHECK_NE(&from, this);
  const ENG_CoordinationServiceModeKind* source =
      ::google::protobuf::DynamicCastToGenerated<ENG_CoordinationServiceModeKind>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:coordinationservicemodule.ENG_CoordinationServiceModeKind)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:coordinationservicemodule.ENG_CoordinationServiceModeKind)
    MergeFrom(*source);
  }
}

void ENG_CoordinationServiceModeKind::MergeFrom(const ENG_CoordinationServiceModeKind& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:coordinationservicemodule.ENG_CoordinationServiceModeKind)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_setvalextension()) {
    mutable_setvalextension()->::google::protobuf::StringValue::MergeFrom(from.setvalextension());
  }
  if (from.setval() != 0) {
    set_setval(from.setval());
  }
}

void ENG_CoordinationServiceModeKind::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:coordinationservicemodule.ENG_CoordinationServiceModeKind)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ENG_CoordinationServiceModeKind::CopyFrom(const ENG_CoordinationServiceModeKind& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:coordinationservicemodule.ENG_CoordinationServiceModeKind)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ENG_CoordinationServiceModeKind::IsInitialized() const {
  return true;
}

void ENG_CoordinationServiceModeKind::Swap(ENG_CoordinationServiceModeKind* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ENG_CoordinationServiceModeKind::InternalSwap(ENG_CoordinationServiceModeKind* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(setvalextension_, other->setvalextension_);
  swap(setval_, other->setval_);
}

::google::protobuf::Metadata ENG_CoordinationServiceModeKind::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_coordinationservicemodule_2fcoordinationservicemodule_2eproto);
  return ::file_level_metadata_coordinationservicemodule_2fcoordinationservicemodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CoordinationControlDCSC::InitAsDefaultInstance() {
  ::coordinationservicemodule::_CoordinationControlDCSC_default_instance_._instance.get_mutable()->logicalnodeforcontrol_ = const_cast< ::commonmodule::LogicalNodeForControl*>(
      ::commonmodule::LogicalNodeForControl::internal_default_instance());
  ::coordinationservicemodule::_CoordinationControlDCSC_default_instance_._instance.get_mutable()->coordinationservicemode_ = const_cast< ::coordinationservicemodule::ENG_CoordinationServiceModeKind*>(
      ::coordinationservicemodule::ENG_CoordinationServiceModeKind::internal_default_instance());
  ::coordinationservicemodule::_CoordinationControlDCSC_default_instance_._instance.get_mutable()->island_ = const_cast< ::commonmodule::ControlDPC*>(
      ::commonmodule::ControlDPC::internal_default_instance());
}
class CoordinationControlDCSC::HasBitSetters {
 public:
  static const ::commonmodule::LogicalNodeForControl& logicalnodeforcontrol(const CoordinationControlDCSC* msg);
  static const ::coordinationservicemodule::ENG_CoordinationServiceModeKind& coordinationservicemode(const CoordinationControlDCSC* msg);
  static const ::commonmodule::ControlDPC& island(const CoordinationControlDCSC* msg);
};

const ::commonmodule::LogicalNodeForControl&
CoordinationControlDCSC::HasBitSetters::logicalnodeforcontrol(const CoordinationControlDCSC* msg) {
  return *msg->logicalnodeforcontrol_;
}
const ::coordinationservicemodule::ENG_CoordinationServiceModeKind&
CoordinationControlDCSC::HasBitSetters::coordinationservicemode(const CoordinationControlDCSC* msg) {
  return *msg->coordinationservicemode_;
}
const ::commonmodule::ControlDPC&
CoordinationControlDCSC::HasBitSetters::island(const CoordinationControlDCSC* msg) {
  return *msg->island_;
}
void CoordinationControlDCSC::clear_logicalnodeforcontrol() {
  if (GetArenaNoVirtual() == nullptr && logicalnodeforcontrol_ != nullptr) {
    delete logicalnodeforcontrol_;
  }
  logicalnodeforcontrol_ = nullptr;
}
void CoordinationControlDCSC::clear_island() {
  if (GetArenaNoVirtual() == nullptr && island_ != nullptr) {
    delete island_;
  }
  island_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CoordinationControlDCSC::kLogicalNodeForControlFieldNumber;
const int CoordinationControlDCSC::kCoordinationServiceModeFieldNumber;
const int CoordinationControlDCSC::kIslandFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CoordinationControlDCSC::CoordinationControlDCSC()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:coordinationservicemodule.CoordinationControlDCSC)
}
CoordinationControlDCSC::CoordinationControlDCSC(const CoordinationControlDCSC& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_logicalnodeforcontrol()) {
    logicalnodeforcontrol_ = new ::commonmodule::LogicalNodeForControl(*from.logicalnodeforcontrol_);
  } else {
    logicalnodeforcontrol_ = nullptr;
  }
  if (from.has_coordinationservicemode()) {
    coordinationservicemode_ = new ::coordinationservicemodule::ENG_CoordinationServiceModeKind(*from.coordinationservicemode_);
  } else {
    coordinationservicemode_ = nullptr;
  }
  if (from.has_island()) {
    island_ = new ::commonmodule::ControlDPC(*from.island_);
  } else {
    island_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:coordinationservicemodule.CoordinationControlDCSC)
}

void CoordinationControlDCSC::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CoordinationControlDCSC_coordinationservicemodule_2fcoordinationservicemodule_2eproto.base);
  ::memset(&logicalnodeforcontrol_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&island_) -
      reinterpret_cast<char*>(&logicalnodeforcontrol_)) + sizeof(island_));
}

CoordinationControlDCSC::~CoordinationControlDCSC() {
  // @@protoc_insertion_point(destructor:coordinationservicemodule.CoordinationControlDCSC)
  SharedDtor();
}

void CoordinationControlDCSC::SharedDtor() {
  if (this != internal_default_instance()) delete logicalnodeforcontrol_;
  if (this != internal_default_instance()) delete coordinationservicemode_;
  if (this != internal_default_instance()) delete island_;
}

void CoordinationControlDCSC::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CoordinationControlDCSC& CoordinationControlDCSC::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CoordinationControlDCSC_coordinationservicemodule_2fcoordinationservicemodule_2eproto.base);
  return *internal_default_instance();
}


void CoordinationControlDCSC::Clear() {
// @@protoc_insertion_point(message_clear_start:coordinationservicemodule.CoordinationControlDCSC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && logicalnodeforcontrol_ != nullptr) {
    delete logicalnodeforcontrol_;
  }
  logicalnodeforcontrol_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && coordinationservicemode_ != nullptr) {
    delete coordinationservicemode_;
  }
  coordinationservicemode_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && island_ != nullptr) {
    delete island_;
  }
  island_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CoordinationControlDCSC::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CoordinationControlDCSC*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .commonmodule.LogicalNodeForControl logicalNodeForControl = 1 [(.uml.option_parent_message) = true];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::LogicalNodeForControl::_InternalParse;
        object = msg->mutable_logicalnodeforcontrol();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .coordinationservicemodule.ENG_CoordinationServiceModeKind CoordinationServiceMode = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::coordinationservicemodule::ENG_CoordinationServiceModeKind::_InternalParse;
        object = msg->mutable_coordinationservicemode();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .commonmodule.ControlDPC Island = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::ControlDPC::_InternalParse;
        object = msg->mutable_island();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CoordinationControlDCSC::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:coordinationservicemodule.CoordinationControlDCSC)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .commonmodule.LogicalNodeForControl logicalNodeForControl = 1 [(.uml.option_parent_message) = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_logicalnodeforcontrol()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .coordinationservicemodule.ENG_CoordinationServiceModeKind CoordinationServiceMode = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_coordinationservicemode()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.ControlDPC Island = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_island()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:coordinationservicemodule.CoordinationControlDCSC)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:coordinationservicemodule.CoordinationControlDCSC)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CoordinationControlDCSC::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:coordinationservicemodule.CoordinationControlDCSC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.LogicalNodeForControl logicalNodeForControl = 1 [(.uml.option_parent_message) = true];
  if (this->has_logicalnodeforcontrol()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::logicalnodeforcontrol(this), output);
  }

  // .coordinationservicemodule.ENG_CoordinationServiceModeKind CoordinationServiceMode = 2;
  if (this->has_coordinationservicemode()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::coordinationservicemode(this), output);
  }

  // .commonmodule.ControlDPC Island = 3;
  if (this->has_island()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::island(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:coordinationservicemodule.CoordinationControlDCSC)
}

::google::protobuf::uint8* CoordinationControlDCSC::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:coordinationservicemodule.CoordinationControlDCSC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.LogicalNodeForControl logicalNodeForControl = 1 [(.uml.option_parent_message) = true];
  if (this->has_logicalnodeforcontrol()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::logicalnodeforcontrol(this), target);
  }

  // .coordinationservicemodule.ENG_CoordinationServiceModeKind CoordinationServiceMode = 2;
  if (this->has_coordinationservicemode()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::coordinationservicemode(this), target);
  }

  // .commonmodule.ControlDPC Island = 3;
  if (this->has_island()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::island(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:coordinationservicemodule.CoordinationControlDCSC)
  return target;
}

size_t CoordinationControlDCSC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:coordinationservicemodule.CoordinationControlDCSC)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .commonmodule.LogicalNodeForControl logicalNodeForControl = 1 [(.uml.option_parent_message) = true];
  if (this->has_logicalnodeforcontrol()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *logicalnodeforcontrol_);
  }

  // .coordinationservicemodule.ENG_CoordinationServiceModeKind CoordinationServiceMode = 2;
  if (this->has_coordinationservicemode()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *coordinationservicemode_);
  }

  // .commonmodule.ControlDPC Island = 3;
  if (this->has_island()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *island_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CoordinationControlDCSC::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:coordinationservicemodule.CoordinationControlDCSC)
  GOOGLE_DCHECK_NE(&from, this);
  const CoordinationControlDCSC* source =
      ::google::protobuf::DynamicCastToGenerated<CoordinationControlDCSC>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:coordinationservicemodule.CoordinationControlDCSC)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:coordinationservicemodule.CoordinationControlDCSC)
    MergeFrom(*source);
  }
}

void CoordinationControlDCSC::MergeFrom(const CoordinationControlDCSC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:coordinationservicemodule.CoordinationControlDCSC)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_logicalnodeforcontrol()) {
    mutable_logicalnodeforcontrol()->::commonmodule::LogicalNodeForControl::MergeFrom(from.logicalnodeforcontrol());
  }
  if (from.has_coordinationservicemode()) {
    mutable_coordinationservicemode()->::coordinationservicemodule::ENG_CoordinationServiceModeKind::MergeFrom(from.coordinationservicemode());
  }
  if (from.has_island()) {
    mutable_island()->::commonmodule::ControlDPC::MergeFrom(from.island());
  }
}

void CoordinationControlDCSC::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:coordinationservicemodule.CoordinationControlDCSC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CoordinationControlDCSC::CopyFrom(const CoordinationControlDCSC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:coordinationservicemodule.CoordinationControlDCSC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CoordinationControlDCSC::IsInitialized() const {
  return true;
}

void CoordinationControlDCSC::Swap(CoordinationControlDCSC* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CoordinationControlDCSC::InternalSwap(CoordinationControlDCSC* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(logicalnodeforcontrol_, other->logicalnodeforcontrol_);
  swap(coordinationservicemode_, other->coordinationservicemode_);
  swap(island_, other->island_);
}

::google::protobuf::Metadata CoordinationControlDCSC::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_coordinationservicemodule_2fcoordinationservicemodule_2eproto);
  return ::file_level_metadata_coordinationservicemodule_2fcoordinationservicemodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CoordinationControl::InitAsDefaultInstance() {
  ::coordinationservicemodule::_CoordinationControl_default_instance_._instance.get_mutable()->controlvalue_ = const_cast< ::commonmodule::ControlValue*>(
      ::commonmodule::ControlValue::internal_default_instance());
  ::coordinationservicemodule::_CoordinationControl_default_instance_._instance.get_mutable()->check_ = const_cast< ::commonmodule::CheckConditions*>(
      ::commonmodule::CheckConditions::internal_default_instance());
  ::coordinationservicemodule::_CoordinationControl_default_instance_._instance.get_mutable()->coordinationcontroldcsc_ = const_cast< ::coordinationservicemodule::CoordinationControlDCSC*>(
      ::coordinationservicemodule::CoordinationControlDCSC::internal_default_instance());
}
class CoordinationControl::HasBitSetters {
 public:
  static const ::commonmodule::ControlValue& controlvalue(const CoordinationControl* msg);
  static const ::commonmodule::CheckConditions& check(const CoordinationControl* msg);
  static const ::coordinationservicemodule::CoordinationControlDCSC& coordinationcontroldcsc(const CoordinationControl* msg);
};

const ::commonmodule::ControlValue&
CoordinationControl::HasBitSetters::controlvalue(const CoordinationControl* msg) {
  return *msg->controlvalue_;
}
const ::commonmodule::CheckConditions&
CoordinationControl::HasBitSetters::check(const CoordinationControl* msg) {
  return *msg->check_;
}
const ::coordinationservicemodule::CoordinationControlDCSC&
CoordinationControl::HasBitSetters::coordinationcontroldcsc(const CoordinationControl* msg) {
  return *msg->coordinationcontroldcsc_;
}
void CoordinationControl::clear_controlvalue() {
  if (GetArenaNoVirtual() == nullptr && controlvalue_ != nullptr) {
    delete controlvalue_;
  }
  controlvalue_ = nullptr;
}
void CoordinationControl::clear_check() {
  if (GetArenaNoVirtual() == nullptr && check_ != nullptr) {
    delete check_;
  }
  check_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CoordinationControl::kControlValueFieldNumber;
const int CoordinationControl::kCheckFieldNumber;
const int CoordinationControl::kCoordinationControlDCSCFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CoordinationControl::CoordinationControl()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:coordinationservicemodule.CoordinationControl)
}
CoordinationControl::CoordinationControl(const CoordinationControl& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_controlvalue()) {
    controlvalue_ = new ::commonmodule::ControlValue(*from.controlvalue_);
  } else {
    controlvalue_ = nullptr;
  }
  if (from.has_check()) {
    check_ = new ::commonmodule::CheckConditions(*from.check_);
  } else {
    check_ = nullptr;
  }
  if (from.has_coordinationcontroldcsc()) {
    coordinationcontroldcsc_ = new ::coordinationservicemodule::CoordinationControlDCSC(*from.coordinationcontroldcsc_);
  } else {
    coordinationcontroldcsc_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:coordinationservicemodule.CoordinationControl)
}

void CoordinationControl::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CoordinationControl_coordinationservicemodule_2fcoordinationservicemodule_2eproto.base);
  ::memset(&controlvalue_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&coordinationcontroldcsc_) -
      reinterpret_cast<char*>(&controlvalue_)) + sizeof(coordinationcontroldcsc_));
}

CoordinationControl::~CoordinationControl() {
  // @@protoc_insertion_point(destructor:coordinationservicemodule.CoordinationControl)
  SharedDtor();
}

void CoordinationControl::SharedDtor() {
  if (this != internal_default_instance()) delete controlvalue_;
  if (this != internal_default_instance()) delete check_;
  if (this != internal_default_instance()) delete coordinationcontroldcsc_;
}

void CoordinationControl::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CoordinationControl& CoordinationControl::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CoordinationControl_coordinationservicemodule_2fcoordinationservicemodule_2eproto.base);
  return *internal_default_instance();
}


void CoordinationControl::Clear() {
// @@protoc_insertion_point(message_clear_start:coordinationservicemodule.CoordinationControl)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && controlvalue_ != nullptr) {
    delete controlvalue_;
  }
  controlvalue_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && check_ != nullptr) {
    delete check_;
  }
  check_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && coordinationcontroldcsc_ != nullptr) {
    delete coordinationcontroldcsc_;
  }
  coordinationcontroldcsc_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CoordinationControl::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CoordinationControl*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .commonmodule.ControlValue controlValue = 1 [(.uml.option_parent_message) = true];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::ControlValue::_InternalParse;
        object = msg->mutable_controlvalue();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .commonmodule.CheckConditions check = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::CheckConditions::_InternalParse;
        object = msg->mutable_check();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .coordinationservicemodule.CoordinationControlDCSC coordinationControlDCSC = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::coordinationservicemodule::CoordinationControlDCSC::_InternalParse;
        object = msg->mutable_coordinationcontroldcsc();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CoordinationControl::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:coordinationservicemodule.CoordinationControl)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .commonmodule.ControlValue controlValue = 1 [(.uml.option_parent_message) = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_controlvalue()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.CheckConditions check = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_check()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .coordinationservicemodule.CoordinationControlDCSC coordinationControlDCSC = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_coordinationcontroldcsc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:coordinationservicemodule.CoordinationControl)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:coordinationservicemodule.CoordinationControl)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CoordinationControl::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:coordinationservicemodule.CoordinationControl)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.ControlValue controlValue = 1 [(.uml.option_parent_message) = true];
  if (this->has_controlvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::controlvalue(this), output);
  }

  // .commonmodule.CheckConditions check = 2;
  if (this->has_check()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::check(this), output);
  }

  // .coordinationservicemodule.CoordinationControlDCSC coordinationControlDCSC = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_coordinationcontroldcsc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::coordinationcontroldcsc(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:coordinationservicemodule.CoordinationControl)
}

::google::protobuf::uint8* CoordinationControl::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:coordinationservicemodule.CoordinationControl)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.ControlValue controlValue = 1 [(.uml.option_parent_message) = true];
  if (this->has_controlvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::controlvalue(this), target);
  }

  // .commonmodule.CheckConditions check = 2;
  if (this->has_check()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::check(this), target);
  }

  // .coordinationservicemodule.CoordinationControlDCSC coordinationControlDCSC = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_coordinationcontroldcsc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::coordinationcontroldcsc(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:coordinationservicemodule.CoordinationControl)
  return target;
}

size_t CoordinationControl::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:coordinationservicemodule.CoordinationControl)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .commonmodule.ControlValue controlValue = 1 [(.uml.option_parent_message) = true];
  if (this->has_controlvalue()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *controlvalue_);
  }

  // .commonmodule.CheckConditions check = 2;
  if (this->has_check()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *check_);
  }

  // .coordinationservicemodule.CoordinationControlDCSC coordinationControlDCSC = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_coordinationcontroldcsc()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *coordinationcontroldcsc_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CoordinationControl::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:coordinationservicemodule.CoordinationControl)
  GOOGLE_DCHECK_NE(&from, this);
  const CoordinationControl* source =
      ::google::protobuf::DynamicCastToGenerated<CoordinationControl>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:coordinationservicemodule.CoordinationControl)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:coordinationservicemodule.CoordinationControl)
    MergeFrom(*source);
  }
}

void CoordinationControl::MergeFrom(const CoordinationControl& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:coordinationservicemodule.CoordinationControl)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_controlvalue()) {
    mutable_controlvalue()->::commonmodule::ControlValue::MergeFrom(from.controlvalue());
  }
  if (from.has_check()) {
    mutable_check()->::commonmodule::CheckConditions::MergeFrom(from.check());
  }
  if (from.has_coordinationcontroldcsc()) {
    mutable_coordinationcontroldcsc()->::coordinationservicemodule::CoordinationControlDCSC::MergeFrom(from.coordinationcontroldcsc());
  }
}

void CoordinationControl::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:coordinationservicemodule.CoordinationControl)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CoordinationControl::CopyFrom(const CoordinationControl& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:coordinationservicemodule.CoordinationControl)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CoordinationControl::IsInitialized() const {
  return true;
}

void CoordinationControl::Swap(CoordinationControl* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CoordinationControl::InternalSwap(CoordinationControl* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(controlvalue_, other->controlvalue_);
  swap(check_, other->check_);
  swap(coordinationcontroldcsc_, other->coordinationcontroldcsc_);
}

::google::protobuf::Metadata CoordinationControl::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_coordinationservicemodule_2fcoordinationservicemodule_2eproto);
  return ::file_level_metadata_coordinationservicemodule_2fcoordinationservicemodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CoordinationControlProfile::InitAsDefaultInstance() {
  ::coordinationservicemodule::_CoordinationControlProfile_default_instance_._instance.get_mutable()->controlmessageinfo_ = const_cast< ::commonmodule::ControlMessageInfo*>(
      ::commonmodule::ControlMessageInfo::internal_default_instance());
  ::coordinationservicemodule::_CoordinationControlProfile_default_instance_._instance.get_mutable()->applicationsystem_ = const_cast< ::commonmodule::ApplicationSystem*>(
      ::commonmodule::ApplicationSystem::internal_default_instance());
  ::coordinationservicemodule::_CoordinationControlProfile_default_instance_._instance.get_mutable()->coordinationcontrol_ = const_cast< ::coordinationservicemodule::CoordinationControl*>(
      ::coordinationservicemodule::CoordinationControl::internal_default_instance());
}
class CoordinationControlProfile::HasBitSetters {
 public:
  static const ::commonmodule::ControlMessageInfo& controlmessageinfo(const CoordinationControlProfile* msg);
  static const ::commonmodule::ApplicationSystem& applicationsystem(const CoordinationControlProfile* msg);
  static const ::coordinationservicemodule::CoordinationControl& coordinationcontrol(const CoordinationControlProfile* msg);
};

const ::commonmodule::ControlMessageInfo&
CoordinationControlProfile::HasBitSetters::controlmessageinfo(const CoordinationControlProfile* msg) {
  return *msg->controlmessageinfo_;
}
const ::commonmodule::ApplicationSystem&
CoordinationControlProfile::HasBitSetters::applicationsystem(const CoordinationControlProfile* msg) {
  return *msg->applicationsystem_;
}
const ::coordinationservicemodule::CoordinationControl&
CoordinationControlProfile::HasBitSetters::coordinationcontrol(const CoordinationControlProfile* msg) {
  return *msg->coordinationcontrol_;
}
void CoordinationControlProfile::clear_controlmessageinfo() {
  if (GetArenaNoVirtual() == nullptr && controlmessageinfo_ != nullptr) {
    delete controlmessageinfo_;
  }
  controlmessageinfo_ = nullptr;
}
void CoordinationControlProfile::clear_applicationsystem() {
  if (GetArenaNoVirtual() == nullptr && applicationsystem_ != nullptr) {
    delete applicationsystem_;
  }
  applicationsystem_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CoordinationControlProfile::kControlMessageInfoFieldNumber;
const int CoordinationControlProfile::kApplicationSystemFieldNumber;
const int CoordinationControlProfile::kCoordinationControlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CoordinationControlProfile::CoordinationControlProfile()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:coordinationservicemodule.CoordinationControlProfile)
}
CoordinationControlProfile::CoordinationControlProfile(const CoordinationControlProfile& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_controlmessageinfo()) {
    controlmessageinfo_ = new ::commonmodule::ControlMessageInfo(*from.controlmessageinfo_);
  } else {
    controlmessageinfo_ = nullptr;
  }
  if (from.has_applicationsystem()) {
    applicationsystem_ = new ::commonmodule::ApplicationSystem(*from.applicationsystem_);
  } else {
    applicationsystem_ = nullptr;
  }
  if (from.has_coordinationcontrol()) {
    coordinationcontrol_ = new ::coordinationservicemodule::CoordinationControl(*from.coordinationcontrol_);
  } else {
    coordinationcontrol_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:coordinationservicemodule.CoordinationControlProfile)
}

void CoordinationControlProfile::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CoordinationControlProfile_coordinationservicemodule_2fcoordinationservicemodule_2eproto.base);
  ::memset(&controlmessageinfo_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&coordinationcontrol_) -
      reinterpret_cast<char*>(&controlmessageinfo_)) + sizeof(coordinationcontrol_));
}

CoordinationControlProfile::~CoordinationControlProfile() {
  // @@protoc_insertion_point(destructor:coordinationservicemodule.CoordinationControlProfile)
  SharedDtor();
}

void CoordinationControlProfile::SharedDtor() {
  if (this != internal_default_instance()) delete controlmessageinfo_;
  if (this != internal_default_instance()) delete applicationsystem_;
  if (this != internal_default_instance()) delete coordinationcontrol_;
}

void CoordinationControlProfile::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CoordinationControlProfile& CoordinationControlProfile::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CoordinationControlProfile_coordinationservicemodule_2fcoordinationservicemodule_2eproto.base);
  return *internal_default_instance();
}


void CoordinationControlProfile::Clear() {
// @@protoc_insertion_point(message_clear_start:coordinationservicemodule.CoordinationControlProfile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && controlmessageinfo_ != nullptr) {
    delete controlmessageinfo_;
  }
  controlmessageinfo_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && applicationsystem_ != nullptr) {
    delete applicationsystem_;
  }
  applicationsystem_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && coordinationcontrol_ != nullptr) {
    delete coordinationcontrol_;
  }
  coordinationcontrol_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CoordinationControlProfile::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CoordinationControlProfile*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .commonmodule.ControlMessageInfo controlMessageInfo = 1 [(.uml.option_parent_message) = true];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::ControlMessageInfo::_InternalParse;
        object = msg->mutable_controlmessageinfo();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .commonmodule.ApplicationSystem applicationSystem = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::ApplicationSystem::_InternalParse;
        object = msg->mutable_applicationsystem();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .coordinationservicemodule.CoordinationControl coordinationControl = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::coordinationservicemodule::CoordinationControl::_InternalParse;
        object = msg->mutable_coordinationcontrol();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CoordinationControlProfile::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:coordinationservicemodule.CoordinationControlProfile)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .commonmodule.ControlMessageInfo controlMessageInfo = 1 [(.uml.option_parent_message) = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_controlmessageinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.ApplicationSystem applicationSystem = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_applicationsystem()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .coordinationservicemodule.CoordinationControl coordinationControl = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_coordinationcontrol()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:coordinationservicemodule.CoordinationControlProfile)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:coordinationservicemodule.CoordinationControlProfile)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CoordinationControlProfile::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:coordinationservicemodule.CoordinationControlProfile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.ControlMessageInfo controlMessageInfo = 1 [(.uml.option_parent_message) = true];
  if (this->has_controlmessageinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::controlmessageinfo(this), output);
  }

  // .commonmodule.ApplicationSystem applicationSystem = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_applicationsystem()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::applicationsystem(this), output);
  }

  // .coordinationservicemodule.CoordinationControl coordinationControl = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_coordinationcontrol()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::coordinationcontrol(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:coordinationservicemodule.CoordinationControlProfile)
}

::google::protobuf::uint8* CoordinationControlProfile::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:coordinationservicemodule.CoordinationControlProfile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.ControlMessageInfo controlMessageInfo = 1 [(.uml.option_parent_message) = true];
  if (this->has_controlmessageinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::controlmessageinfo(this), target);
  }

  // .commonmodule.ApplicationSystem applicationSystem = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_applicationsystem()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::applicationsystem(this), target);
  }

  // .coordinationservicemodule.CoordinationControl coordinationControl = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_coordinationcontrol()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::coordinationcontrol(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:coordinationservicemodule.CoordinationControlProfile)
  return target;
}

size_t CoordinationControlProfile::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:coordinationservicemodule.CoordinationControlProfile)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .commonmodule.ControlMessageInfo controlMessageInfo = 1 [(.uml.option_parent_message) = true];
  if (this->has_controlmessageinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *controlmessageinfo_);
  }

  // .commonmodule.ApplicationSystem applicationSystem = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_applicationsystem()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *applicationsystem_);
  }

  // .coordinationservicemodule.CoordinationControl coordinationControl = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_coordinationcontrol()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *coordinationcontrol_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CoordinationControlProfile::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:coordinationservicemodule.CoordinationControlProfile)
  GOOGLE_DCHECK_NE(&from, this);
  const CoordinationControlProfile* source =
      ::google::protobuf::DynamicCastToGenerated<CoordinationControlProfile>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:coordinationservicemodule.CoordinationControlProfile)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:coordinationservicemodule.CoordinationControlProfile)
    MergeFrom(*source);
  }
}

void CoordinationControlProfile::MergeFrom(const CoordinationControlProfile& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:coordinationservicemodule.CoordinationControlProfile)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_controlmessageinfo()) {
    mutable_controlmessageinfo()->::commonmodule::ControlMessageInfo::MergeFrom(from.controlmessageinfo());
  }
  if (from.has_applicationsystem()) {
    mutable_applicationsystem()->::commonmodule::ApplicationSystem::MergeFrom(from.applicationsystem());
  }
  if (from.has_coordinationcontrol()) {
    mutable_coordinationcontrol()->::coordinationservicemodule::CoordinationControl::MergeFrom(from.coordinationcontrol());
  }
}

void CoordinationControlProfile::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:coordinationservicemodule.CoordinationControlProfile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CoordinationControlProfile::CopyFrom(const CoordinationControlProfile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:coordinationservicemodule.CoordinationControlProfile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CoordinationControlProfile::IsInitialized() const {
  return true;
}

void CoordinationControlProfile::Swap(CoordinationControlProfile* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CoordinationControlProfile::InternalSwap(CoordinationControlProfile* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(controlmessageinfo_, other->controlmessageinfo_);
  swap(applicationsystem_, other->applicationsystem_);
  swap(coordinationcontrol_, other->coordinationcontrol_);
}

::google::protobuf::Metadata CoordinationControlProfile::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_coordinationservicemodule_2fcoordinationservicemodule_2eproto);
  return ::file_level_metadata_coordinationservicemodule_2fcoordinationservicemodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CoordinationEventDCSC::InitAsDefaultInstance() {
  ::coordinationservicemodule::_CoordinationEventDCSC_default_instance_._instance.get_mutable()->logicalnodeforeventandstatus_ = const_cast< ::commonmodule::LogicalNodeForEventAndStatus*>(
      ::commonmodule::LogicalNodeForEventAndStatus::internal_default_instance());
  ::coordinationservicemodule::_CoordinationEventDCSC_default_instance_._instance.get_mutable()->coordinationservicemode_ = const_cast< ::coordinationservicemodule::ENG_CoordinationServiceModeKind*>(
      ::coordinationservicemodule::ENG_CoordinationServiceModeKind::internal_default_instance());
  ::coordinationservicemodule::_CoordinationEventDCSC_default_instance_._instance.get_mutable()->island_ = const_cast< ::commonmodule::StatusSPS*>(
      ::commonmodule::StatusSPS::internal_default_instance());
  ::coordinationservicemodule::_CoordinationEventDCSC_default_instance_._instance.get_mutable()->permissibleauto_ = const_cast< ::commonmodule::StatusSPS*>(
      ::commonmodule::StatusSPS::internal_default_instance());
  ::coordinationservicemodule::_CoordinationEventDCSC_default_instance_._instance.get_mutable()->permissiblemanual_ = const_cast< ::commonmodule::StatusSPS*>(
      ::commonmodule::StatusSPS::internal_default_instance());
  ::coordinationservicemodule::_CoordinationEventDCSC_default_instance_._instance.get_mutable()->permissiblenetzero_ = const_cast< ::commonmodule::StatusSPS*>(
      ::commonmodule::StatusSPS::internal_default_instance());
  ::coordinationservicemodule::_CoordinationEventDCSC_default_instance_._instance.get_mutable()->permissiblestart_ = const_cast< ::commonmodule::StatusSPS*>(
      ::commonmodule::StatusSPS::internal_default_instance());
  ::coordinationservicemodule::_CoordinationEventDCSC_default_instance_._instance.get_mutable()->permissiblestop_ = const_cast< ::commonmodule::StatusSPS*>(
      ::commonmodule::StatusSPS::internal_default_instance());
}
class CoordinationEventDCSC::HasBitSetters {
 public:
  static const ::commonmodule::LogicalNodeForEventAndStatus& logicalnodeforeventandstatus(const CoordinationEventDCSC* msg);
  static const ::coordinationservicemodule::ENG_CoordinationServiceModeKind& coordinationservicemode(const CoordinationEventDCSC* msg);
  static const ::commonmodule::StatusSPS& island(const CoordinationEventDCSC* msg);
  static const ::commonmodule::StatusSPS& permissibleauto(const CoordinationEventDCSC* msg);
  static const ::commonmodule::StatusSPS& permissiblemanual(const CoordinationEventDCSC* msg);
  static const ::commonmodule::StatusSPS& permissiblenetzero(const CoordinationEventDCSC* msg);
  static const ::commonmodule::StatusSPS& permissiblestart(const CoordinationEventDCSC* msg);
  static const ::commonmodule::StatusSPS& permissiblestop(const CoordinationEventDCSC* msg);
};

const ::commonmodule::LogicalNodeForEventAndStatus&
CoordinationEventDCSC::HasBitSetters::logicalnodeforeventandstatus(const CoordinationEventDCSC* msg) {
  return *msg->logicalnodeforeventandstatus_;
}
const ::coordinationservicemodule::ENG_CoordinationServiceModeKind&
CoordinationEventDCSC::HasBitSetters::coordinationservicemode(const CoordinationEventDCSC* msg) {
  return *msg->coordinationservicemode_;
}
const ::commonmodule::StatusSPS&
CoordinationEventDCSC::HasBitSetters::island(const CoordinationEventDCSC* msg) {
  return *msg->island_;
}
const ::commonmodule::StatusSPS&
CoordinationEventDCSC::HasBitSetters::permissibleauto(const CoordinationEventDCSC* msg) {
  return *msg->permissibleauto_;
}
const ::commonmodule::StatusSPS&
CoordinationEventDCSC::HasBitSetters::permissiblemanual(const CoordinationEventDCSC* msg) {
  return *msg->permissiblemanual_;
}
const ::commonmodule::StatusSPS&
CoordinationEventDCSC::HasBitSetters::permissiblenetzero(const CoordinationEventDCSC* msg) {
  return *msg->permissiblenetzero_;
}
const ::commonmodule::StatusSPS&
CoordinationEventDCSC::HasBitSetters::permissiblestart(const CoordinationEventDCSC* msg) {
  return *msg->permissiblestart_;
}
const ::commonmodule::StatusSPS&
CoordinationEventDCSC::HasBitSetters::permissiblestop(const CoordinationEventDCSC* msg) {
  return *msg->permissiblestop_;
}
void CoordinationEventDCSC::clear_logicalnodeforeventandstatus() {
  if (GetArenaNoVirtual() == nullptr && logicalnodeforeventandstatus_ != nullptr) {
    delete logicalnodeforeventandstatus_;
  }
  logicalnodeforeventandstatus_ = nullptr;
}
void CoordinationEventDCSC::clear_island() {
  if (GetArenaNoVirtual() == nullptr && island_ != nullptr) {
    delete island_;
  }
  island_ = nullptr;
}
void CoordinationEventDCSC::clear_permissibleauto() {
  if (GetArenaNoVirtual() == nullptr && permissibleauto_ != nullptr) {
    delete permissibleauto_;
  }
  permissibleauto_ = nullptr;
}
void CoordinationEventDCSC::clear_permissiblemanual() {
  if (GetArenaNoVirtual() == nullptr && permissiblemanual_ != nullptr) {
    delete permissiblemanual_;
  }
  permissiblemanual_ = nullptr;
}
void CoordinationEventDCSC::clear_permissiblenetzero() {
  if (GetArenaNoVirtual() == nullptr && permissiblenetzero_ != nullptr) {
    delete permissiblenetzero_;
  }
  permissiblenetzero_ = nullptr;
}
void CoordinationEventDCSC::clear_permissiblestart() {
  if (GetArenaNoVirtual() == nullptr && permissiblestart_ != nullptr) {
    delete permissiblestart_;
  }
  permissiblestart_ = nullptr;
}
void CoordinationEventDCSC::clear_permissiblestop() {
  if (GetArenaNoVirtual() == nullptr && permissiblestop_ != nullptr) {
    delete permissiblestop_;
  }
  permissiblestop_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CoordinationEventDCSC::kLogicalNodeForEventAndStatusFieldNumber;
const int CoordinationEventDCSC::kCoordinationServiceModeFieldNumber;
const int CoordinationEventDCSC::kIslandFieldNumber;
const int CoordinationEventDCSC::kPermissibleAutoFieldNumber;
const int CoordinationEventDCSC::kPermissibleManualFieldNumber;
const int CoordinationEventDCSC::kPermissibleNetzeroFieldNumber;
const int CoordinationEventDCSC::kPermissibleStartFieldNumber;
const int CoordinationEventDCSC::kPermissibleStopFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CoordinationEventDCSC::CoordinationEventDCSC()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:coordinationservicemodule.CoordinationEventDCSC)
}
CoordinationEventDCSC::CoordinationEventDCSC(const CoordinationEventDCSC& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_logicalnodeforeventandstatus()) {
    logicalnodeforeventandstatus_ = new ::commonmodule::LogicalNodeForEventAndStatus(*from.logicalnodeforeventandstatus_);
  } else {
    logicalnodeforeventandstatus_ = nullptr;
  }
  if (from.has_coordinationservicemode()) {
    coordinationservicemode_ = new ::coordinationservicemodule::ENG_CoordinationServiceModeKind(*from.coordinationservicemode_);
  } else {
    coordinationservicemode_ = nullptr;
  }
  if (from.has_island()) {
    island_ = new ::commonmodule::StatusSPS(*from.island_);
  } else {
    island_ = nullptr;
  }
  if (from.has_permissibleauto()) {
    permissibleauto_ = new ::commonmodule::StatusSPS(*from.permissibleauto_);
  } else {
    permissibleauto_ = nullptr;
  }
  if (from.has_permissiblemanual()) {
    permissiblemanual_ = new ::commonmodule::StatusSPS(*from.permissiblemanual_);
  } else {
    permissiblemanual_ = nullptr;
  }
  if (from.has_permissiblenetzero()) {
    permissiblenetzero_ = new ::commonmodule::StatusSPS(*from.permissiblenetzero_);
  } else {
    permissiblenetzero_ = nullptr;
  }
  if (from.has_permissiblestart()) {
    permissiblestart_ = new ::commonmodule::StatusSPS(*from.permissiblestart_);
  } else {
    permissiblestart_ = nullptr;
  }
  if (from.has_permissiblestop()) {
    permissiblestop_ = new ::commonmodule::StatusSPS(*from.permissiblestop_);
  } else {
    permissiblestop_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:coordinationservicemodule.CoordinationEventDCSC)
}

void CoordinationEventDCSC::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CoordinationEventDCSC_coordinationservicemodule_2fcoordinationservicemodule_2eproto.base);
  ::memset(&logicalnodeforeventandstatus_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&permissiblestop_) -
      reinterpret_cast<char*>(&logicalnodeforeventandstatus_)) + sizeof(permissiblestop_));
}

CoordinationEventDCSC::~CoordinationEventDCSC() {
  // @@protoc_insertion_point(destructor:coordinationservicemodule.CoordinationEventDCSC)
  SharedDtor();
}

void CoordinationEventDCSC::SharedDtor() {
  if (this != internal_default_instance()) delete logicalnodeforeventandstatus_;
  if (this != internal_default_instance()) delete coordinationservicemode_;
  if (this != internal_default_instance()) delete island_;
  if (this != internal_default_instance()) delete permissibleauto_;
  if (this != internal_default_instance()) delete permissiblemanual_;
  if (this != internal_default_instance()) delete permissiblenetzero_;
  if (this != internal_default_instance()) delete permissiblestart_;
  if (this != internal_default_instance()) delete permissiblestop_;
}

void CoordinationEventDCSC::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CoordinationEventDCSC& CoordinationEventDCSC::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CoordinationEventDCSC_coordinationservicemodule_2fcoordinationservicemodule_2eproto.base);
  return *internal_default_instance();
}


void CoordinationEventDCSC::Clear() {
// @@protoc_insertion_point(message_clear_start:coordinationservicemodule.CoordinationEventDCSC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && logicalnodeforeventandstatus_ != nullptr) {
    delete logicalnodeforeventandstatus_;
  }
  logicalnodeforeventandstatus_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && coordinationservicemode_ != nullptr) {
    delete coordinationservicemode_;
  }
  coordinationservicemode_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && island_ != nullptr) {
    delete island_;
  }
  island_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && permissibleauto_ != nullptr) {
    delete permissibleauto_;
  }
  permissibleauto_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && permissiblemanual_ != nullptr) {
    delete permissiblemanual_;
  }
  permissiblemanual_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && permissiblenetzero_ != nullptr) {
    delete permissiblenetzero_;
  }
  permissiblenetzero_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && permissiblestart_ != nullptr) {
    delete permissiblestart_;
  }
  permissiblestart_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && permissiblestop_ != nullptr) {
    delete permissiblestop_;
  }
  permissiblestop_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CoordinationEventDCSC::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CoordinationEventDCSC*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .commonmodule.LogicalNodeForEventAndStatus logicalNodeForEventAndStatus = 1 [(.uml.option_parent_message) = true];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::LogicalNodeForEventAndStatus::_InternalParse;
        object = msg->mutable_logicalnodeforeventandstatus();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .coordinationservicemodule.ENG_CoordinationServiceModeKind CoordinationServiceMode = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::coordinationservicemodule::ENG_CoordinationServiceModeKind::_InternalParse;
        object = msg->mutable_coordinationservicemode();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .commonmodule.StatusSPS Island = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::StatusSPS::_InternalParse;
        object = msg->mutable_island();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .commonmodule.StatusSPS PermissibleAuto = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::StatusSPS::_InternalParse;
        object = msg->mutable_permissibleauto();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .commonmodule.StatusSPS PermissibleManual = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::StatusSPS::_InternalParse;
        object = msg->mutable_permissiblemanual();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .commonmodule.StatusSPS PermissibleNetzero = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::StatusSPS::_InternalParse;
        object = msg->mutable_permissiblenetzero();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .commonmodule.StatusSPS PermissibleStart = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::StatusSPS::_InternalParse;
        object = msg->mutable_permissiblestart();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .commonmodule.StatusSPS PermissibleStop = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 66) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::StatusSPS::_InternalParse;
        object = msg->mutable_permissiblestop();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CoordinationEventDCSC::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:coordinationservicemodule.CoordinationEventDCSC)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .commonmodule.LogicalNodeForEventAndStatus logicalNodeForEventAndStatus = 1 [(.uml.option_parent_message) = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_logicalnodeforeventandstatus()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .coordinationservicemodule.ENG_CoordinationServiceModeKind CoordinationServiceMode = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_coordinationservicemode()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.StatusSPS Island = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_island()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.StatusSPS PermissibleAuto = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_permissibleauto()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.StatusSPS PermissibleManual = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_permissiblemanual()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.StatusSPS PermissibleNetzero = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_permissiblenetzero()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.StatusSPS PermissibleStart = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_permissiblestart()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.StatusSPS PermissibleStop = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (66 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_permissiblestop()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:coordinationservicemodule.CoordinationEventDCSC)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:coordinationservicemodule.CoordinationEventDCSC)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CoordinationEventDCSC::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:coordinationservicemodule.CoordinationEventDCSC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.LogicalNodeForEventAndStatus logicalNodeForEventAndStatus = 1 [(.uml.option_parent_message) = true];
  if (this->has_logicalnodeforeventandstatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::logicalnodeforeventandstatus(this), output);
  }

  // .coordinationservicemodule.ENG_CoordinationServiceModeKind CoordinationServiceMode = 2;
  if (this->has_coordinationservicemode()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::coordinationservicemode(this), output);
  }

  // .commonmodule.StatusSPS Island = 3;
  if (this->has_island()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::island(this), output);
  }

  // .commonmodule.StatusSPS PermissibleAuto = 4;
  if (this->has_permissibleauto()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::permissibleauto(this), output);
  }

  // .commonmodule.StatusSPS PermissibleManual = 5;
  if (this->has_permissiblemanual()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, HasBitSetters::permissiblemanual(this), output);
  }

  // .commonmodule.StatusSPS PermissibleNetzero = 6;
  if (this->has_permissiblenetzero()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, HasBitSetters::permissiblenetzero(this), output);
  }

  // .commonmodule.StatusSPS PermissibleStart = 7;
  if (this->has_permissiblestart()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, HasBitSetters::permissiblestart(this), output);
  }

  // .commonmodule.StatusSPS PermissibleStop = 8;
  if (this->has_permissiblestop()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, HasBitSetters::permissiblestop(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:coordinationservicemodule.CoordinationEventDCSC)
}

::google::protobuf::uint8* CoordinationEventDCSC::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:coordinationservicemodule.CoordinationEventDCSC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.LogicalNodeForEventAndStatus logicalNodeForEventAndStatus = 1 [(.uml.option_parent_message) = true];
  if (this->has_logicalnodeforeventandstatus()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::logicalnodeforeventandstatus(this), target);
  }

  // .coordinationservicemodule.ENG_CoordinationServiceModeKind CoordinationServiceMode = 2;
  if (this->has_coordinationservicemode()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::coordinationservicemode(this), target);
  }

  // .commonmodule.StatusSPS Island = 3;
  if (this->has_island()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::island(this), target);
  }

  // .commonmodule.StatusSPS PermissibleAuto = 4;
  if (this->has_permissibleauto()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::permissibleauto(this), target);
  }

  // .commonmodule.StatusSPS PermissibleManual = 5;
  if (this->has_permissiblemanual()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, HasBitSetters::permissiblemanual(this), target);
  }

  // .commonmodule.StatusSPS PermissibleNetzero = 6;
  if (this->has_permissiblenetzero()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, HasBitSetters::permissiblenetzero(this), target);
  }

  // .commonmodule.StatusSPS PermissibleStart = 7;
  if (this->has_permissiblestart()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, HasBitSetters::permissiblestart(this), target);
  }

  // .commonmodule.StatusSPS PermissibleStop = 8;
  if (this->has_permissiblestop()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, HasBitSetters::permissiblestop(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:coordinationservicemodule.CoordinationEventDCSC)
  return target;
}

size_t CoordinationEventDCSC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:coordinationservicemodule.CoordinationEventDCSC)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .commonmodule.LogicalNodeForEventAndStatus logicalNodeForEventAndStatus = 1 [(.uml.option_parent_message) = true];
  if (this->has_logicalnodeforeventandstatus()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *logicalnodeforeventandstatus_);
  }

  // .coordinationservicemodule.ENG_CoordinationServiceModeKind CoordinationServiceMode = 2;
  if (this->has_coordinationservicemode()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *coordinationservicemode_);
  }

  // .commonmodule.StatusSPS Island = 3;
  if (this->has_island()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *island_);
  }

  // .commonmodule.StatusSPS PermissibleAuto = 4;
  if (this->has_permissibleauto()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *permissibleauto_);
  }

  // .commonmodule.StatusSPS PermissibleManual = 5;
  if (this->has_permissiblemanual()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *permissiblemanual_);
  }

  // .commonmodule.StatusSPS PermissibleNetzero = 6;
  if (this->has_permissiblenetzero()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *permissiblenetzero_);
  }

  // .commonmodule.StatusSPS PermissibleStart = 7;
  if (this->has_permissiblestart()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *permissiblestart_);
  }

  // .commonmodule.StatusSPS PermissibleStop = 8;
  if (this->has_permissiblestop()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *permissiblestop_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CoordinationEventDCSC::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:coordinationservicemodule.CoordinationEventDCSC)
  GOOGLE_DCHECK_NE(&from, this);
  const CoordinationEventDCSC* source =
      ::google::protobuf::DynamicCastToGenerated<CoordinationEventDCSC>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:coordinationservicemodule.CoordinationEventDCSC)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:coordinationservicemodule.CoordinationEventDCSC)
    MergeFrom(*source);
  }
}

void CoordinationEventDCSC::MergeFrom(const CoordinationEventDCSC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:coordinationservicemodule.CoordinationEventDCSC)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_logicalnodeforeventandstatus()) {
    mutable_logicalnodeforeventandstatus()->::commonmodule::LogicalNodeForEventAndStatus::MergeFrom(from.logicalnodeforeventandstatus());
  }
  if (from.has_coordinationservicemode()) {
    mutable_coordinationservicemode()->::coordinationservicemodule::ENG_CoordinationServiceModeKind::MergeFrom(from.coordinationservicemode());
  }
  if (from.has_island()) {
    mutable_island()->::commonmodule::StatusSPS::MergeFrom(from.island());
  }
  if (from.has_permissibleauto()) {
    mutable_permissibleauto()->::commonmodule::StatusSPS::MergeFrom(from.permissibleauto());
  }
  if (from.has_permissiblemanual()) {
    mutable_permissiblemanual()->::commonmodule::StatusSPS::MergeFrom(from.permissiblemanual());
  }
  if (from.has_permissiblenetzero()) {
    mutable_permissiblenetzero()->::commonmodule::StatusSPS::MergeFrom(from.permissiblenetzero());
  }
  if (from.has_permissiblestart()) {
    mutable_permissiblestart()->::commonmodule::StatusSPS::MergeFrom(from.permissiblestart());
  }
  if (from.has_permissiblestop()) {
    mutable_permissiblestop()->::commonmodule::StatusSPS::MergeFrom(from.permissiblestop());
  }
}

void CoordinationEventDCSC::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:coordinationservicemodule.CoordinationEventDCSC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CoordinationEventDCSC::CopyFrom(const CoordinationEventDCSC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:coordinationservicemodule.CoordinationEventDCSC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CoordinationEventDCSC::IsInitialized() const {
  return true;
}

void CoordinationEventDCSC::Swap(CoordinationEventDCSC* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CoordinationEventDCSC::InternalSwap(CoordinationEventDCSC* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(logicalnodeforeventandstatus_, other->logicalnodeforeventandstatus_);
  swap(coordinationservicemode_, other->coordinationservicemode_);
  swap(island_, other->island_);
  swap(permissibleauto_, other->permissibleauto_);
  swap(permissiblemanual_, other->permissiblemanual_);
  swap(permissiblenetzero_, other->permissiblenetzero_);
  swap(permissiblestart_, other->permissiblestart_);
  swap(permissiblestop_, other->permissiblestop_);
}

::google::protobuf::Metadata CoordinationEventDCSC::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_coordinationservicemodule_2fcoordinationservicemodule_2eproto);
  return ::file_level_metadata_coordinationservicemodule_2fcoordinationservicemodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CoordinationEvent::InitAsDefaultInstance() {
  ::coordinationservicemodule::_CoordinationEvent_default_instance_._instance.get_mutable()->eventvalue_ = const_cast< ::commonmodule::EventValue*>(
      ::commonmodule::EventValue::internal_default_instance());
  ::coordinationservicemodule::_CoordinationEvent_default_instance_._instance.get_mutable()->coordinationeventdcsc_ = const_cast< ::coordinationservicemodule::CoordinationEventDCSC*>(
      ::coordinationservicemodule::CoordinationEventDCSC::internal_default_instance());
}
class CoordinationEvent::HasBitSetters {
 public:
  static const ::commonmodule::EventValue& eventvalue(const CoordinationEvent* msg);
  static const ::coordinationservicemodule::CoordinationEventDCSC& coordinationeventdcsc(const CoordinationEvent* msg);
};

const ::commonmodule::EventValue&
CoordinationEvent::HasBitSetters::eventvalue(const CoordinationEvent* msg) {
  return *msg->eventvalue_;
}
const ::coordinationservicemodule::CoordinationEventDCSC&
CoordinationEvent::HasBitSetters::coordinationeventdcsc(const CoordinationEvent* msg) {
  return *msg->coordinationeventdcsc_;
}
void CoordinationEvent::clear_eventvalue() {
  if (GetArenaNoVirtual() == nullptr && eventvalue_ != nullptr) {
    delete eventvalue_;
  }
  eventvalue_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CoordinationEvent::kEventValueFieldNumber;
const int CoordinationEvent::kCoordinationEventDCSCFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CoordinationEvent::CoordinationEvent()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:coordinationservicemodule.CoordinationEvent)
}
CoordinationEvent::CoordinationEvent(const CoordinationEvent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_eventvalue()) {
    eventvalue_ = new ::commonmodule::EventValue(*from.eventvalue_);
  } else {
    eventvalue_ = nullptr;
  }
  if (from.has_coordinationeventdcsc()) {
    coordinationeventdcsc_ = new ::coordinationservicemodule::CoordinationEventDCSC(*from.coordinationeventdcsc_);
  } else {
    coordinationeventdcsc_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:coordinationservicemodule.CoordinationEvent)
}

void CoordinationEvent::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CoordinationEvent_coordinationservicemodule_2fcoordinationservicemodule_2eproto.base);
  ::memset(&eventvalue_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&coordinationeventdcsc_) -
      reinterpret_cast<char*>(&eventvalue_)) + sizeof(coordinationeventdcsc_));
}

CoordinationEvent::~CoordinationEvent() {
  // @@protoc_insertion_point(destructor:coordinationservicemodule.CoordinationEvent)
  SharedDtor();
}

void CoordinationEvent::SharedDtor() {
  if (this != internal_default_instance()) delete eventvalue_;
  if (this != internal_default_instance()) delete coordinationeventdcsc_;
}

void CoordinationEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CoordinationEvent& CoordinationEvent::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CoordinationEvent_coordinationservicemodule_2fcoordinationservicemodule_2eproto.base);
  return *internal_default_instance();
}


void CoordinationEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:coordinationservicemodule.CoordinationEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && eventvalue_ != nullptr) {
    delete eventvalue_;
  }
  eventvalue_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && coordinationeventdcsc_ != nullptr) {
    delete coordinationeventdcsc_;
  }
  coordinationeventdcsc_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CoordinationEvent::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CoordinationEvent*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .commonmodule.EventValue eventValue = 1 [(.uml.option_parent_message) = true];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::EventValue::_InternalParse;
        object = msg->mutable_eventvalue();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .coordinationservicemodule.CoordinationEventDCSC coordinationEventDCSC = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::coordinationservicemodule::CoordinationEventDCSC::_InternalParse;
        object = msg->mutable_coordinationeventdcsc();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CoordinationEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:coordinationservicemodule.CoordinationEvent)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .commonmodule.EventValue eventValue = 1 [(.uml.option_parent_message) = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_eventvalue()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .coordinationservicemodule.CoordinationEventDCSC coordinationEventDCSC = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_coordinationeventdcsc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:coordinationservicemodule.CoordinationEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:coordinationservicemodule.CoordinationEvent)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CoordinationEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:coordinationservicemodule.CoordinationEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.EventValue eventValue = 1 [(.uml.option_parent_message) = true];
  if (this->has_eventvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::eventvalue(this), output);
  }

  // .coordinationservicemodule.CoordinationEventDCSC coordinationEventDCSC = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_coordinationeventdcsc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::coordinationeventdcsc(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:coordinationservicemodule.CoordinationEvent)
}

::google::protobuf::uint8* CoordinationEvent::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:coordinationservicemodule.CoordinationEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.EventValue eventValue = 1 [(.uml.option_parent_message) = true];
  if (this->has_eventvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::eventvalue(this), target);
  }

  // .coordinationservicemodule.CoordinationEventDCSC coordinationEventDCSC = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_coordinationeventdcsc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::coordinationeventdcsc(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:coordinationservicemodule.CoordinationEvent)
  return target;
}

size_t CoordinationEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:coordinationservicemodule.CoordinationEvent)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .commonmodule.EventValue eventValue = 1 [(.uml.option_parent_message) = true];
  if (this->has_eventvalue()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *eventvalue_);
  }

  // .coordinationservicemodule.CoordinationEventDCSC coordinationEventDCSC = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_coordinationeventdcsc()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *coordinationeventdcsc_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CoordinationEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:coordinationservicemodule.CoordinationEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const CoordinationEvent* source =
      ::google::protobuf::DynamicCastToGenerated<CoordinationEvent>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:coordinationservicemodule.CoordinationEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:coordinationservicemodule.CoordinationEvent)
    MergeFrom(*source);
  }
}

void CoordinationEvent::MergeFrom(const CoordinationEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:coordinationservicemodule.CoordinationEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_eventvalue()) {
    mutable_eventvalue()->::commonmodule::EventValue::MergeFrom(from.eventvalue());
  }
  if (from.has_coordinationeventdcsc()) {
    mutable_coordinationeventdcsc()->::coordinationservicemodule::CoordinationEventDCSC::MergeFrom(from.coordinationeventdcsc());
  }
}

void CoordinationEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:coordinationservicemodule.CoordinationEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CoordinationEvent::CopyFrom(const CoordinationEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:coordinationservicemodule.CoordinationEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CoordinationEvent::IsInitialized() const {
  return true;
}

void CoordinationEvent::Swap(CoordinationEvent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CoordinationEvent::InternalSwap(CoordinationEvent* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(eventvalue_, other->eventvalue_);
  swap(coordinationeventdcsc_, other->coordinationeventdcsc_);
}

::google::protobuf::Metadata CoordinationEvent::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_coordinationservicemodule_2fcoordinationservicemodule_2eproto);
  return ::file_level_metadata_coordinationservicemodule_2fcoordinationservicemodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CoordinationEventProfile::InitAsDefaultInstance() {
  ::coordinationservicemodule::_CoordinationEventProfile_default_instance_._instance.get_mutable()->eventmessageinfo_ = const_cast< ::commonmodule::EventMessageInfo*>(
      ::commonmodule::EventMessageInfo::internal_default_instance());
  ::coordinationservicemodule::_CoordinationEventProfile_default_instance_._instance.get_mutable()->applicationsystem_ = const_cast< ::commonmodule::ApplicationSystem*>(
      ::commonmodule::ApplicationSystem::internal_default_instance());
  ::coordinationservicemodule::_CoordinationEventProfile_default_instance_._instance.get_mutable()->coordinationevent_ = const_cast< ::coordinationservicemodule::CoordinationEvent*>(
      ::coordinationservicemodule::CoordinationEvent::internal_default_instance());
}
class CoordinationEventProfile::HasBitSetters {
 public:
  static const ::commonmodule::EventMessageInfo& eventmessageinfo(const CoordinationEventProfile* msg);
  static const ::commonmodule::ApplicationSystem& applicationsystem(const CoordinationEventProfile* msg);
  static const ::coordinationservicemodule::CoordinationEvent& coordinationevent(const CoordinationEventProfile* msg);
};

const ::commonmodule::EventMessageInfo&
CoordinationEventProfile::HasBitSetters::eventmessageinfo(const CoordinationEventProfile* msg) {
  return *msg->eventmessageinfo_;
}
const ::commonmodule::ApplicationSystem&
CoordinationEventProfile::HasBitSetters::applicationsystem(const CoordinationEventProfile* msg) {
  return *msg->applicationsystem_;
}
const ::coordinationservicemodule::CoordinationEvent&
CoordinationEventProfile::HasBitSetters::coordinationevent(const CoordinationEventProfile* msg) {
  return *msg->coordinationevent_;
}
void CoordinationEventProfile::clear_eventmessageinfo() {
  if (GetArenaNoVirtual() == nullptr && eventmessageinfo_ != nullptr) {
    delete eventmessageinfo_;
  }
  eventmessageinfo_ = nullptr;
}
void CoordinationEventProfile::clear_applicationsystem() {
  if (GetArenaNoVirtual() == nullptr && applicationsystem_ != nullptr) {
    delete applicationsystem_;
  }
  applicationsystem_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CoordinationEventProfile::kEventMessageInfoFieldNumber;
const int CoordinationEventProfile::kApplicationSystemFieldNumber;
const int CoordinationEventProfile::kCoordinationEventFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CoordinationEventProfile::CoordinationEventProfile()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:coordinationservicemodule.CoordinationEventProfile)
}
CoordinationEventProfile::CoordinationEventProfile(const CoordinationEventProfile& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_eventmessageinfo()) {
    eventmessageinfo_ = new ::commonmodule::EventMessageInfo(*from.eventmessageinfo_);
  } else {
    eventmessageinfo_ = nullptr;
  }
  if (from.has_applicationsystem()) {
    applicationsystem_ = new ::commonmodule::ApplicationSystem(*from.applicationsystem_);
  } else {
    applicationsystem_ = nullptr;
  }
  if (from.has_coordinationevent()) {
    coordinationevent_ = new ::coordinationservicemodule::CoordinationEvent(*from.coordinationevent_);
  } else {
    coordinationevent_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:coordinationservicemodule.CoordinationEventProfile)
}

void CoordinationEventProfile::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CoordinationEventProfile_coordinationservicemodule_2fcoordinationservicemodule_2eproto.base);
  ::memset(&eventmessageinfo_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&coordinationevent_) -
      reinterpret_cast<char*>(&eventmessageinfo_)) + sizeof(coordinationevent_));
}

CoordinationEventProfile::~CoordinationEventProfile() {
  // @@protoc_insertion_point(destructor:coordinationservicemodule.CoordinationEventProfile)
  SharedDtor();
}

void CoordinationEventProfile::SharedDtor() {
  if (this != internal_default_instance()) delete eventmessageinfo_;
  if (this != internal_default_instance()) delete applicationsystem_;
  if (this != internal_default_instance()) delete coordinationevent_;
}

void CoordinationEventProfile::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CoordinationEventProfile& CoordinationEventProfile::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CoordinationEventProfile_coordinationservicemodule_2fcoordinationservicemodule_2eproto.base);
  return *internal_default_instance();
}


void CoordinationEventProfile::Clear() {
// @@protoc_insertion_point(message_clear_start:coordinationservicemodule.CoordinationEventProfile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && eventmessageinfo_ != nullptr) {
    delete eventmessageinfo_;
  }
  eventmessageinfo_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && applicationsystem_ != nullptr) {
    delete applicationsystem_;
  }
  applicationsystem_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && coordinationevent_ != nullptr) {
    delete coordinationevent_;
  }
  coordinationevent_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CoordinationEventProfile::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CoordinationEventProfile*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .commonmodule.EventMessageInfo eventMessageInfo = 1 [(.uml.option_parent_message) = true];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::EventMessageInfo::_InternalParse;
        object = msg->mutable_eventmessageinfo();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .commonmodule.ApplicationSystem applicationSystem = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::ApplicationSystem::_InternalParse;
        object = msg->mutable_applicationsystem();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .coordinationservicemodule.CoordinationEvent coordinationEvent = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::coordinationservicemodule::CoordinationEvent::_InternalParse;
        object = msg->mutable_coordinationevent();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CoordinationEventProfile::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:coordinationservicemodule.CoordinationEventProfile)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .commonmodule.EventMessageInfo eventMessageInfo = 1 [(.uml.option_parent_message) = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_eventmessageinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.ApplicationSystem applicationSystem = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_applicationsystem()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .coordinationservicemodule.CoordinationEvent coordinationEvent = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_coordinationevent()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:coordinationservicemodule.CoordinationEventProfile)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:coordinationservicemodule.CoordinationEventProfile)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CoordinationEventProfile::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:coordinationservicemodule.CoordinationEventProfile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.EventMessageInfo eventMessageInfo = 1 [(.uml.option_parent_message) = true];
  if (this->has_eventmessageinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::eventmessageinfo(this), output);
  }

  // .commonmodule.ApplicationSystem applicationSystem = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_applicationsystem()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::applicationsystem(this), output);
  }

  // .coordinationservicemodule.CoordinationEvent coordinationEvent = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_coordinationevent()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::coordinationevent(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:coordinationservicemodule.CoordinationEventProfile)
}

::google::protobuf::uint8* CoordinationEventProfile::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:coordinationservicemodule.CoordinationEventProfile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.EventMessageInfo eventMessageInfo = 1 [(.uml.option_parent_message) = true];
  if (this->has_eventmessageinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::eventmessageinfo(this), target);
  }

  // .commonmodule.ApplicationSystem applicationSystem = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_applicationsystem()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::applicationsystem(this), target);
  }

  // .coordinationservicemodule.CoordinationEvent coordinationEvent = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_coordinationevent()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::coordinationevent(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:coordinationservicemodule.CoordinationEventProfile)
  return target;
}

size_t CoordinationEventProfile::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:coordinationservicemodule.CoordinationEventProfile)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .commonmodule.EventMessageInfo eventMessageInfo = 1 [(.uml.option_parent_message) = true];
  if (this->has_eventmessageinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *eventmessageinfo_);
  }

  // .commonmodule.ApplicationSystem applicationSystem = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_applicationsystem()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *applicationsystem_);
  }

  // .coordinationservicemodule.CoordinationEvent coordinationEvent = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_coordinationevent()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *coordinationevent_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CoordinationEventProfile::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:coordinationservicemodule.CoordinationEventProfile)
  GOOGLE_DCHECK_NE(&from, this);
  const CoordinationEventProfile* source =
      ::google::protobuf::DynamicCastToGenerated<CoordinationEventProfile>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:coordinationservicemodule.CoordinationEventProfile)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:coordinationservicemodule.CoordinationEventProfile)
    MergeFrom(*source);
  }
}

void CoordinationEventProfile::MergeFrom(const CoordinationEventProfile& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:coordinationservicemodule.CoordinationEventProfile)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_eventmessageinfo()) {
    mutable_eventmessageinfo()->::commonmodule::EventMessageInfo::MergeFrom(from.eventmessageinfo());
  }
  if (from.has_applicationsystem()) {
    mutable_applicationsystem()->::commonmodule::ApplicationSystem::MergeFrom(from.applicationsystem());
  }
  if (from.has_coordinationevent()) {
    mutable_coordinationevent()->::coordinationservicemodule::CoordinationEvent::MergeFrom(from.coordinationevent());
  }
}

void CoordinationEventProfile::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:coordinationservicemodule.CoordinationEventProfile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CoordinationEventProfile::CopyFrom(const CoordinationEventProfile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:coordinationservicemodule.CoordinationEventProfile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CoordinationEventProfile::IsInitialized() const {
  return true;
}

void CoordinationEventProfile::Swap(CoordinationEventProfile* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CoordinationEventProfile::InternalSwap(CoordinationEventProfile* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(eventmessageinfo_, other->eventmessageinfo_);
  swap(applicationsystem_, other->applicationsystem_);
  swap(coordinationevent_, other->coordinationevent_);
}

::google::protobuf::Metadata CoordinationEventProfile::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_coordinationservicemodule_2fcoordinationservicemodule_2eproto);
  return ::file_level_metadata_coordinationservicemodule_2fcoordinationservicemodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CoordinationStatusDCSC::InitAsDefaultInstance() {
  ::coordinationservicemodule::_CoordinationStatusDCSC_default_instance_._instance.get_mutable()->logicalnodeforeventandstatus_ = const_cast< ::commonmodule::LogicalNodeForEventAndStatus*>(
      ::commonmodule::LogicalNodeForEventAndStatus::internal_default_instance());
  ::coordinationservicemodule::_CoordinationStatusDCSC_default_instance_._instance.get_mutable()->coordinationservicemode_ = const_cast< ::coordinationservicemodule::ENG_CoordinationServiceModeKind*>(
      ::coordinationservicemodule::ENG_CoordinationServiceModeKind::internal_default_instance());
  ::coordinationservicemodule::_CoordinationStatusDCSC_default_instance_._instance.get_mutable()->island_ = const_cast< ::commonmodule::StatusSPS*>(
      ::commonmodule::StatusSPS::internal_default_instance());
  ::coordinationservicemodule::_CoordinationStatusDCSC_default_instance_._instance.get_mutable()->permissibleauto_ = const_cast< ::commonmodule::StatusSPS*>(
      ::commonmodule::StatusSPS::internal_default_instance());
  ::coordinationservicemodule::_CoordinationStatusDCSC_default_instance_._instance.get_mutable()->permissiblemanual_ = const_cast< ::commonmodule::StatusSPS*>(
      ::commonmodule::StatusSPS::internal_default_instance());
  ::coordinationservicemodule::_CoordinationStatusDCSC_default_instance_._instance.get_mutable()->permissiblenetzero_ = const_cast< ::commonmodule::StatusSPS*>(
      ::commonmodule::StatusSPS::internal_default_instance());
  ::coordinationservicemodule::_CoordinationStatusDCSC_default_instance_._instance.get_mutable()->permissiblestart_ = const_cast< ::commonmodule::StatusSPS*>(
      ::commonmodule::StatusSPS::internal_default_instance());
  ::coordinationservicemodule::_CoordinationStatusDCSC_default_instance_._instance.get_mutable()->permissiblestop_ = const_cast< ::commonmodule::StatusSPS*>(
      ::commonmodule::StatusSPS::internal_default_instance());
}
class CoordinationStatusDCSC::HasBitSetters {
 public:
  static const ::commonmodule::LogicalNodeForEventAndStatus& logicalnodeforeventandstatus(const CoordinationStatusDCSC* msg);
  static const ::coordinationservicemodule::ENG_CoordinationServiceModeKind& coordinationservicemode(const CoordinationStatusDCSC* msg);
  static const ::commonmodule::StatusSPS& island(const CoordinationStatusDCSC* msg);
  static const ::commonmodule::StatusSPS& permissibleauto(const CoordinationStatusDCSC* msg);
  static const ::commonmodule::StatusSPS& permissiblemanual(const CoordinationStatusDCSC* msg);
  static const ::commonmodule::StatusSPS& permissiblenetzero(const CoordinationStatusDCSC* msg);
  static const ::commonmodule::StatusSPS& permissiblestart(const CoordinationStatusDCSC* msg);
  static const ::commonmodule::StatusSPS& permissiblestop(const CoordinationStatusDCSC* msg);
};

const ::commonmodule::LogicalNodeForEventAndStatus&
CoordinationStatusDCSC::HasBitSetters::logicalnodeforeventandstatus(const CoordinationStatusDCSC* msg) {
  return *msg->logicalnodeforeventandstatus_;
}
const ::coordinationservicemodule::ENG_CoordinationServiceModeKind&
CoordinationStatusDCSC::HasBitSetters::coordinationservicemode(const CoordinationStatusDCSC* msg) {
  return *msg->coordinationservicemode_;
}
const ::commonmodule::StatusSPS&
CoordinationStatusDCSC::HasBitSetters::island(const CoordinationStatusDCSC* msg) {
  return *msg->island_;
}
const ::commonmodule::StatusSPS&
CoordinationStatusDCSC::HasBitSetters::permissibleauto(const CoordinationStatusDCSC* msg) {
  return *msg->permissibleauto_;
}
const ::commonmodule::StatusSPS&
CoordinationStatusDCSC::HasBitSetters::permissiblemanual(const CoordinationStatusDCSC* msg) {
  return *msg->permissiblemanual_;
}
const ::commonmodule::StatusSPS&
CoordinationStatusDCSC::HasBitSetters::permissiblenetzero(const CoordinationStatusDCSC* msg) {
  return *msg->permissiblenetzero_;
}
const ::commonmodule::StatusSPS&
CoordinationStatusDCSC::HasBitSetters::permissiblestart(const CoordinationStatusDCSC* msg) {
  return *msg->permissiblestart_;
}
const ::commonmodule::StatusSPS&
CoordinationStatusDCSC::HasBitSetters::permissiblestop(const CoordinationStatusDCSC* msg) {
  return *msg->permissiblestop_;
}
void CoordinationStatusDCSC::clear_logicalnodeforeventandstatus() {
  if (GetArenaNoVirtual() == nullptr && logicalnodeforeventandstatus_ != nullptr) {
    delete logicalnodeforeventandstatus_;
  }
  logicalnodeforeventandstatus_ = nullptr;
}
void CoordinationStatusDCSC::clear_island() {
  if (GetArenaNoVirtual() == nullptr && island_ != nullptr) {
    delete island_;
  }
  island_ = nullptr;
}
void CoordinationStatusDCSC::clear_permissibleauto() {
  if (GetArenaNoVirtual() == nullptr && permissibleauto_ != nullptr) {
    delete permissibleauto_;
  }
  permissibleauto_ = nullptr;
}
void CoordinationStatusDCSC::clear_permissiblemanual() {
  if (GetArenaNoVirtual() == nullptr && permissiblemanual_ != nullptr) {
    delete permissiblemanual_;
  }
  permissiblemanual_ = nullptr;
}
void CoordinationStatusDCSC::clear_permissiblenetzero() {
  if (GetArenaNoVirtual() == nullptr && permissiblenetzero_ != nullptr) {
    delete permissiblenetzero_;
  }
  permissiblenetzero_ = nullptr;
}
void CoordinationStatusDCSC::clear_permissiblestart() {
  if (GetArenaNoVirtual() == nullptr && permissiblestart_ != nullptr) {
    delete permissiblestart_;
  }
  permissiblestart_ = nullptr;
}
void CoordinationStatusDCSC::clear_permissiblestop() {
  if (GetArenaNoVirtual() == nullptr && permissiblestop_ != nullptr) {
    delete permissiblestop_;
  }
  permissiblestop_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CoordinationStatusDCSC::kLogicalNodeForEventAndStatusFieldNumber;
const int CoordinationStatusDCSC::kCoordinationServiceModeFieldNumber;
const int CoordinationStatusDCSC::kIslandFieldNumber;
const int CoordinationStatusDCSC::kPermissibleAutoFieldNumber;
const int CoordinationStatusDCSC::kPermissibleManualFieldNumber;
const int CoordinationStatusDCSC::kPermissibleNetzeroFieldNumber;
const int CoordinationStatusDCSC::kPermissibleStartFieldNumber;
const int CoordinationStatusDCSC::kPermissibleStopFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CoordinationStatusDCSC::CoordinationStatusDCSC()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:coordinationservicemodule.CoordinationStatusDCSC)
}
CoordinationStatusDCSC::CoordinationStatusDCSC(const CoordinationStatusDCSC& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_logicalnodeforeventandstatus()) {
    logicalnodeforeventandstatus_ = new ::commonmodule::LogicalNodeForEventAndStatus(*from.logicalnodeforeventandstatus_);
  } else {
    logicalnodeforeventandstatus_ = nullptr;
  }
  if (from.has_coordinationservicemode()) {
    coordinationservicemode_ = new ::coordinationservicemodule::ENG_CoordinationServiceModeKind(*from.coordinationservicemode_);
  } else {
    coordinationservicemode_ = nullptr;
  }
  if (from.has_island()) {
    island_ = new ::commonmodule::StatusSPS(*from.island_);
  } else {
    island_ = nullptr;
  }
  if (from.has_permissibleauto()) {
    permissibleauto_ = new ::commonmodule::StatusSPS(*from.permissibleauto_);
  } else {
    permissibleauto_ = nullptr;
  }
  if (from.has_permissiblemanual()) {
    permissiblemanual_ = new ::commonmodule::StatusSPS(*from.permissiblemanual_);
  } else {
    permissiblemanual_ = nullptr;
  }
  if (from.has_permissiblenetzero()) {
    permissiblenetzero_ = new ::commonmodule::StatusSPS(*from.permissiblenetzero_);
  } else {
    permissiblenetzero_ = nullptr;
  }
  if (from.has_permissiblestart()) {
    permissiblestart_ = new ::commonmodule::StatusSPS(*from.permissiblestart_);
  } else {
    permissiblestart_ = nullptr;
  }
  if (from.has_permissiblestop()) {
    permissiblestop_ = new ::commonmodule::StatusSPS(*from.permissiblestop_);
  } else {
    permissiblestop_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:coordinationservicemodule.CoordinationStatusDCSC)
}

void CoordinationStatusDCSC::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CoordinationStatusDCSC_coordinationservicemodule_2fcoordinationservicemodule_2eproto.base);
  ::memset(&logicalnodeforeventandstatus_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&permissiblestop_) -
      reinterpret_cast<char*>(&logicalnodeforeventandstatus_)) + sizeof(permissiblestop_));
}

CoordinationStatusDCSC::~CoordinationStatusDCSC() {
  // @@protoc_insertion_point(destructor:coordinationservicemodule.CoordinationStatusDCSC)
  SharedDtor();
}

void CoordinationStatusDCSC::SharedDtor() {
  if (this != internal_default_instance()) delete logicalnodeforeventandstatus_;
  if (this != internal_default_instance()) delete coordinationservicemode_;
  if (this != internal_default_instance()) delete island_;
  if (this != internal_default_instance()) delete permissibleauto_;
  if (this != internal_default_instance()) delete permissiblemanual_;
  if (this != internal_default_instance()) delete permissiblenetzero_;
  if (this != internal_default_instance()) delete permissiblestart_;
  if (this != internal_default_instance()) delete permissiblestop_;
}

void CoordinationStatusDCSC::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CoordinationStatusDCSC& CoordinationStatusDCSC::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CoordinationStatusDCSC_coordinationservicemodule_2fcoordinationservicemodule_2eproto.base);
  return *internal_default_instance();
}


void CoordinationStatusDCSC::Clear() {
// @@protoc_insertion_point(message_clear_start:coordinationservicemodule.CoordinationStatusDCSC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && logicalnodeforeventandstatus_ != nullptr) {
    delete logicalnodeforeventandstatus_;
  }
  logicalnodeforeventandstatus_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && coordinationservicemode_ != nullptr) {
    delete coordinationservicemode_;
  }
  coordinationservicemode_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && island_ != nullptr) {
    delete island_;
  }
  island_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && permissibleauto_ != nullptr) {
    delete permissibleauto_;
  }
  permissibleauto_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && permissiblemanual_ != nullptr) {
    delete permissiblemanual_;
  }
  permissiblemanual_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && permissiblenetzero_ != nullptr) {
    delete permissiblenetzero_;
  }
  permissiblenetzero_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && permissiblestart_ != nullptr) {
    delete permissiblestart_;
  }
  permissiblestart_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && permissiblestop_ != nullptr) {
    delete permissiblestop_;
  }
  permissiblestop_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CoordinationStatusDCSC::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CoordinationStatusDCSC*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .commonmodule.LogicalNodeForEventAndStatus logicalNodeForEventAndStatus = 1 [(.uml.option_parent_message) = true];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::LogicalNodeForEventAndStatus::_InternalParse;
        object = msg->mutable_logicalnodeforeventandstatus();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .coordinationservicemodule.ENG_CoordinationServiceModeKind CoordinationServiceMode = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::coordinationservicemodule::ENG_CoordinationServiceModeKind::_InternalParse;
        object = msg->mutable_coordinationservicemode();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .commonmodule.StatusSPS Island = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::StatusSPS::_InternalParse;
        object = msg->mutable_island();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .commonmodule.StatusSPS PermissibleAuto = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::StatusSPS::_InternalParse;
        object = msg->mutable_permissibleauto();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .commonmodule.StatusSPS PermissibleManual = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::StatusSPS::_InternalParse;
        object = msg->mutable_permissiblemanual();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .commonmodule.StatusSPS PermissibleNetzero = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::StatusSPS::_InternalParse;
        object = msg->mutable_permissiblenetzero();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .commonmodule.StatusSPS PermissibleStart = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::StatusSPS::_InternalParse;
        object = msg->mutable_permissiblestart();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .commonmodule.StatusSPS PermissibleStop = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 66) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::StatusSPS::_InternalParse;
        object = msg->mutable_permissiblestop();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CoordinationStatusDCSC::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:coordinationservicemodule.CoordinationStatusDCSC)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .commonmodule.LogicalNodeForEventAndStatus logicalNodeForEventAndStatus = 1 [(.uml.option_parent_message) = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_logicalnodeforeventandstatus()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .coordinationservicemodule.ENG_CoordinationServiceModeKind CoordinationServiceMode = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_coordinationservicemode()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.StatusSPS Island = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_island()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.StatusSPS PermissibleAuto = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_permissibleauto()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.StatusSPS PermissibleManual = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_permissiblemanual()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.StatusSPS PermissibleNetzero = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_permissiblenetzero()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.StatusSPS PermissibleStart = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_permissiblestart()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.StatusSPS PermissibleStop = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (66 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_permissiblestop()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:coordinationservicemodule.CoordinationStatusDCSC)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:coordinationservicemodule.CoordinationStatusDCSC)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CoordinationStatusDCSC::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:coordinationservicemodule.CoordinationStatusDCSC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.LogicalNodeForEventAndStatus logicalNodeForEventAndStatus = 1 [(.uml.option_parent_message) = true];
  if (this->has_logicalnodeforeventandstatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::logicalnodeforeventandstatus(this), output);
  }

  // .coordinationservicemodule.ENG_CoordinationServiceModeKind CoordinationServiceMode = 2;
  if (this->has_coordinationservicemode()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::coordinationservicemode(this), output);
  }

  // .commonmodule.StatusSPS Island = 3;
  if (this->has_island()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::island(this), output);
  }

  // .commonmodule.StatusSPS PermissibleAuto = 4;
  if (this->has_permissibleauto()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::permissibleauto(this), output);
  }

  // .commonmodule.StatusSPS PermissibleManual = 5;
  if (this->has_permissiblemanual()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, HasBitSetters::permissiblemanual(this), output);
  }

  // .commonmodule.StatusSPS PermissibleNetzero = 6;
  if (this->has_permissiblenetzero()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, HasBitSetters::permissiblenetzero(this), output);
  }

  // .commonmodule.StatusSPS PermissibleStart = 7;
  if (this->has_permissiblestart()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, HasBitSetters::permissiblestart(this), output);
  }

  // .commonmodule.StatusSPS PermissibleStop = 8;
  if (this->has_permissiblestop()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, HasBitSetters::permissiblestop(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:coordinationservicemodule.CoordinationStatusDCSC)
}

::google::protobuf::uint8* CoordinationStatusDCSC::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:coordinationservicemodule.CoordinationStatusDCSC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.LogicalNodeForEventAndStatus logicalNodeForEventAndStatus = 1 [(.uml.option_parent_message) = true];
  if (this->has_logicalnodeforeventandstatus()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::logicalnodeforeventandstatus(this), target);
  }

  // .coordinationservicemodule.ENG_CoordinationServiceModeKind CoordinationServiceMode = 2;
  if (this->has_coordinationservicemode()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::coordinationservicemode(this), target);
  }

  // .commonmodule.StatusSPS Island = 3;
  if (this->has_island()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::island(this), target);
  }

  // .commonmodule.StatusSPS PermissibleAuto = 4;
  if (this->has_permissibleauto()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::permissibleauto(this), target);
  }

  // .commonmodule.StatusSPS PermissibleManual = 5;
  if (this->has_permissiblemanual()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, HasBitSetters::permissiblemanual(this), target);
  }

  // .commonmodule.StatusSPS PermissibleNetzero = 6;
  if (this->has_permissiblenetzero()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, HasBitSetters::permissiblenetzero(this), target);
  }

  // .commonmodule.StatusSPS PermissibleStart = 7;
  if (this->has_permissiblestart()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, HasBitSetters::permissiblestart(this), target);
  }

  // .commonmodule.StatusSPS PermissibleStop = 8;
  if (this->has_permissiblestop()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, HasBitSetters::permissiblestop(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:coordinationservicemodule.CoordinationStatusDCSC)
  return target;
}

size_t CoordinationStatusDCSC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:coordinationservicemodule.CoordinationStatusDCSC)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .commonmodule.LogicalNodeForEventAndStatus logicalNodeForEventAndStatus = 1 [(.uml.option_parent_message) = true];
  if (this->has_logicalnodeforeventandstatus()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *logicalnodeforeventandstatus_);
  }

  // .coordinationservicemodule.ENG_CoordinationServiceModeKind CoordinationServiceMode = 2;
  if (this->has_coordinationservicemode()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *coordinationservicemode_);
  }

  // .commonmodule.StatusSPS Island = 3;
  if (this->has_island()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *island_);
  }

  // .commonmodule.StatusSPS PermissibleAuto = 4;
  if (this->has_permissibleauto()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *permissibleauto_);
  }

  // .commonmodule.StatusSPS PermissibleManual = 5;
  if (this->has_permissiblemanual()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *permissiblemanual_);
  }

  // .commonmodule.StatusSPS PermissibleNetzero = 6;
  if (this->has_permissiblenetzero()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *permissiblenetzero_);
  }

  // .commonmodule.StatusSPS PermissibleStart = 7;
  if (this->has_permissiblestart()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *permissiblestart_);
  }

  // .commonmodule.StatusSPS PermissibleStop = 8;
  if (this->has_permissiblestop()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *permissiblestop_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CoordinationStatusDCSC::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:coordinationservicemodule.CoordinationStatusDCSC)
  GOOGLE_DCHECK_NE(&from, this);
  const CoordinationStatusDCSC* source =
      ::google::protobuf::DynamicCastToGenerated<CoordinationStatusDCSC>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:coordinationservicemodule.CoordinationStatusDCSC)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:coordinationservicemodule.CoordinationStatusDCSC)
    MergeFrom(*source);
  }
}

void CoordinationStatusDCSC::MergeFrom(const CoordinationStatusDCSC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:coordinationservicemodule.CoordinationStatusDCSC)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_logicalnodeforeventandstatus()) {
    mutable_logicalnodeforeventandstatus()->::commonmodule::LogicalNodeForEventAndStatus::MergeFrom(from.logicalnodeforeventandstatus());
  }
  if (from.has_coordinationservicemode()) {
    mutable_coordinationservicemode()->::coordinationservicemodule::ENG_CoordinationServiceModeKind::MergeFrom(from.coordinationservicemode());
  }
  if (from.has_island()) {
    mutable_island()->::commonmodule::StatusSPS::MergeFrom(from.island());
  }
  if (from.has_permissibleauto()) {
    mutable_permissibleauto()->::commonmodule::StatusSPS::MergeFrom(from.permissibleauto());
  }
  if (from.has_permissiblemanual()) {
    mutable_permissiblemanual()->::commonmodule::StatusSPS::MergeFrom(from.permissiblemanual());
  }
  if (from.has_permissiblenetzero()) {
    mutable_permissiblenetzero()->::commonmodule::StatusSPS::MergeFrom(from.permissiblenetzero());
  }
  if (from.has_permissiblestart()) {
    mutable_permissiblestart()->::commonmodule::StatusSPS::MergeFrom(from.permissiblestart());
  }
  if (from.has_permissiblestop()) {
    mutable_permissiblestop()->::commonmodule::StatusSPS::MergeFrom(from.permissiblestop());
  }
}

void CoordinationStatusDCSC::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:coordinationservicemodule.CoordinationStatusDCSC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CoordinationStatusDCSC::CopyFrom(const CoordinationStatusDCSC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:coordinationservicemodule.CoordinationStatusDCSC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CoordinationStatusDCSC::IsInitialized() const {
  return true;
}

void CoordinationStatusDCSC::Swap(CoordinationStatusDCSC* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CoordinationStatusDCSC::InternalSwap(CoordinationStatusDCSC* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(logicalnodeforeventandstatus_, other->logicalnodeforeventandstatus_);
  swap(coordinationservicemode_, other->coordinationservicemode_);
  swap(island_, other->island_);
  swap(permissibleauto_, other->permissibleauto_);
  swap(permissiblemanual_, other->permissiblemanual_);
  swap(permissiblenetzero_, other->permissiblenetzero_);
  swap(permissiblestart_, other->permissiblestart_);
  swap(permissiblestop_, other->permissiblestop_);
}

::google::protobuf::Metadata CoordinationStatusDCSC::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_coordinationservicemodule_2fcoordinationservicemodule_2eproto);
  return ::file_level_metadata_coordinationservicemodule_2fcoordinationservicemodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CoordinationStatus::InitAsDefaultInstance() {
  ::coordinationservicemodule::_CoordinationStatus_default_instance_._instance.get_mutable()->eventvalue_ = const_cast< ::commonmodule::EventValue*>(
      ::commonmodule::EventValue::internal_default_instance());
  ::coordinationservicemodule::_CoordinationStatus_default_instance_._instance.get_mutable()->coordinationstatusdcsc_ = const_cast< ::coordinationservicemodule::CoordinationStatusDCSC*>(
      ::coordinationservicemodule::CoordinationStatusDCSC::internal_default_instance());
}
class CoordinationStatus::HasBitSetters {
 public:
  static const ::commonmodule::EventValue& eventvalue(const CoordinationStatus* msg);
  static const ::coordinationservicemodule::CoordinationStatusDCSC& coordinationstatusdcsc(const CoordinationStatus* msg);
};

const ::commonmodule::EventValue&
CoordinationStatus::HasBitSetters::eventvalue(const CoordinationStatus* msg) {
  return *msg->eventvalue_;
}
const ::coordinationservicemodule::CoordinationStatusDCSC&
CoordinationStatus::HasBitSetters::coordinationstatusdcsc(const CoordinationStatus* msg) {
  return *msg->coordinationstatusdcsc_;
}
void CoordinationStatus::clear_eventvalue() {
  if (GetArenaNoVirtual() == nullptr && eventvalue_ != nullptr) {
    delete eventvalue_;
  }
  eventvalue_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CoordinationStatus::kEventValueFieldNumber;
const int CoordinationStatus::kCoordinationStatusDCSCFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CoordinationStatus::CoordinationStatus()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:coordinationservicemodule.CoordinationStatus)
}
CoordinationStatus::CoordinationStatus(const CoordinationStatus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_eventvalue()) {
    eventvalue_ = new ::commonmodule::EventValue(*from.eventvalue_);
  } else {
    eventvalue_ = nullptr;
  }
  if (from.has_coordinationstatusdcsc()) {
    coordinationstatusdcsc_ = new ::coordinationservicemodule::CoordinationStatusDCSC(*from.coordinationstatusdcsc_);
  } else {
    coordinationstatusdcsc_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:coordinationservicemodule.CoordinationStatus)
}

void CoordinationStatus::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CoordinationStatus_coordinationservicemodule_2fcoordinationservicemodule_2eproto.base);
  ::memset(&eventvalue_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&coordinationstatusdcsc_) -
      reinterpret_cast<char*>(&eventvalue_)) + sizeof(coordinationstatusdcsc_));
}

CoordinationStatus::~CoordinationStatus() {
  // @@protoc_insertion_point(destructor:coordinationservicemodule.CoordinationStatus)
  SharedDtor();
}

void CoordinationStatus::SharedDtor() {
  if (this != internal_default_instance()) delete eventvalue_;
  if (this != internal_default_instance()) delete coordinationstatusdcsc_;
}

void CoordinationStatus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CoordinationStatus& CoordinationStatus::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CoordinationStatus_coordinationservicemodule_2fcoordinationservicemodule_2eproto.base);
  return *internal_default_instance();
}


void CoordinationStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:coordinationservicemodule.CoordinationStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && eventvalue_ != nullptr) {
    delete eventvalue_;
  }
  eventvalue_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && coordinationstatusdcsc_ != nullptr) {
    delete coordinationstatusdcsc_;
  }
  coordinationstatusdcsc_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CoordinationStatus::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CoordinationStatus*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .commonmodule.EventValue eventValue = 1 [(.uml.option_parent_message) = true];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::EventValue::_InternalParse;
        object = msg->mutable_eventvalue();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .coordinationservicemodule.CoordinationStatusDCSC coordinationStatusDCSC = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::coordinationservicemodule::CoordinationStatusDCSC::_InternalParse;
        object = msg->mutable_coordinationstatusdcsc();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CoordinationStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:coordinationservicemodule.CoordinationStatus)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .commonmodule.EventValue eventValue = 1 [(.uml.option_parent_message) = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_eventvalue()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .coordinationservicemodule.CoordinationStatusDCSC coordinationStatusDCSC = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_coordinationstatusdcsc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:coordinationservicemodule.CoordinationStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:coordinationservicemodule.CoordinationStatus)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CoordinationStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:coordinationservicemodule.CoordinationStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.EventValue eventValue = 1 [(.uml.option_parent_message) = true];
  if (this->has_eventvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::eventvalue(this), output);
  }

  // .coordinationservicemodule.CoordinationStatusDCSC coordinationStatusDCSC = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_coordinationstatusdcsc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::coordinationstatusdcsc(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:coordinationservicemodule.CoordinationStatus)
}

::google::protobuf::uint8* CoordinationStatus::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:coordinationservicemodule.CoordinationStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.EventValue eventValue = 1 [(.uml.option_parent_message) = true];
  if (this->has_eventvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::eventvalue(this), target);
  }

  // .coordinationservicemodule.CoordinationStatusDCSC coordinationStatusDCSC = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_coordinationstatusdcsc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::coordinationstatusdcsc(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:coordinationservicemodule.CoordinationStatus)
  return target;
}

size_t CoordinationStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:coordinationservicemodule.CoordinationStatus)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .commonmodule.EventValue eventValue = 1 [(.uml.option_parent_message) = true];
  if (this->has_eventvalue()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *eventvalue_);
  }

  // .coordinationservicemodule.CoordinationStatusDCSC coordinationStatusDCSC = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_coordinationstatusdcsc()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *coordinationstatusdcsc_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CoordinationStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:coordinationservicemodule.CoordinationStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const CoordinationStatus* source =
      ::google::protobuf::DynamicCastToGenerated<CoordinationStatus>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:coordinationservicemodule.CoordinationStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:coordinationservicemodule.CoordinationStatus)
    MergeFrom(*source);
  }
}

void CoordinationStatus::MergeFrom(const CoordinationStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:coordinationservicemodule.CoordinationStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_eventvalue()) {
    mutable_eventvalue()->::commonmodule::EventValue::MergeFrom(from.eventvalue());
  }
  if (from.has_coordinationstatusdcsc()) {
    mutable_coordinationstatusdcsc()->::coordinationservicemodule::CoordinationStatusDCSC::MergeFrom(from.coordinationstatusdcsc());
  }
}

void CoordinationStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:coordinationservicemodule.CoordinationStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CoordinationStatus::CopyFrom(const CoordinationStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:coordinationservicemodule.CoordinationStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CoordinationStatus::IsInitialized() const {
  return true;
}

void CoordinationStatus::Swap(CoordinationStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CoordinationStatus::InternalSwap(CoordinationStatus* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(eventvalue_, other->eventvalue_);
  swap(coordinationstatusdcsc_, other->coordinationstatusdcsc_);
}

::google::protobuf::Metadata CoordinationStatus::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_coordinationservicemodule_2fcoordinationservicemodule_2eproto);
  return ::file_level_metadata_coordinationservicemodule_2fcoordinationservicemodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CoordinationStatusProfile::InitAsDefaultInstance() {
  ::coordinationservicemodule::_CoordinationStatusProfile_default_instance_._instance.get_mutable()->eventmessageinfo_ = const_cast< ::commonmodule::EventMessageInfo*>(
      ::commonmodule::EventMessageInfo::internal_default_instance());
  ::coordinationservicemodule::_CoordinationStatusProfile_default_instance_._instance.get_mutable()->applicationsystem_ = const_cast< ::commonmodule::ApplicationSystem*>(
      ::commonmodule::ApplicationSystem::internal_default_instance());
  ::coordinationservicemodule::_CoordinationStatusProfile_default_instance_._instance.get_mutable()->coordinationstatus_ = const_cast< ::coordinationservicemodule::CoordinationStatus*>(
      ::coordinationservicemodule::CoordinationStatus::internal_default_instance());
}
class CoordinationStatusProfile::HasBitSetters {
 public:
  static const ::commonmodule::EventMessageInfo& eventmessageinfo(const CoordinationStatusProfile* msg);
  static const ::commonmodule::ApplicationSystem& applicationsystem(const CoordinationStatusProfile* msg);
  static const ::coordinationservicemodule::CoordinationStatus& coordinationstatus(const CoordinationStatusProfile* msg);
};

const ::commonmodule::EventMessageInfo&
CoordinationStatusProfile::HasBitSetters::eventmessageinfo(const CoordinationStatusProfile* msg) {
  return *msg->eventmessageinfo_;
}
const ::commonmodule::ApplicationSystem&
CoordinationStatusProfile::HasBitSetters::applicationsystem(const CoordinationStatusProfile* msg) {
  return *msg->applicationsystem_;
}
const ::coordinationservicemodule::CoordinationStatus&
CoordinationStatusProfile::HasBitSetters::coordinationstatus(const CoordinationStatusProfile* msg) {
  return *msg->coordinationstatus_;
}
void CoordinationStatusProfile::clear_eventmessageinfo() {
  if (GetArenaNoVirtual() == nullptr && eventmessageinfo_ != nullptr) {
    delete eventmessageinfo_;
  }
  eventmessageinfo_ = nullptr;
}
void CoordinationStatusProfile::clear_applicationsystem() {
  if (GetArenaNoVirtual() == nullptr && applicationsystem_ != nullptr) {
    delete applicationsystem_;
  }
  applicationsystem_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CoordinationStatusProfile::kEventMessageInfoFieldNumber;
const int CoordinationStatusProfile::kApplicationSystemFieldNumber;
const int CoordinationStatusProfile::kCoordinationStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CoordinationStatusProfile::CoordinationStatusProfile()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:coordinationservicemodule.CoordinationStatusProfile)
}
CoordinationStatusProfile::CoordinationStatusProfile(const CoordinationStatusProfile& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_eventmessageinfo()) {
    eventmessageinfo_ = new ::commonmodule::EventMessageInfo(*from.eventmessageinfo_);
  } else {
    eventmessageinfo_ = nullptr;
  }
  if (from.has_applicationsystem()) {
    applicationsystem_ = new ::commonmodule::ApplicationSystem(*from.applicationsystem_);
  } else {
    applicationsystem_ = nullptr;
  }
  if (from.has_coordinationstatus()) {
    coordinationstatus_ = new ::coordinationservicemodule::CoordinationStatus(*from.coordinationstatus_);
  } else {
    coordinationstatus_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:coordinationservicemodule.CoordinationStatusProfile)
}

void CoordinationStatusProfile::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CoordinationStatusProfile_coordinationservicemodule_2fcoordinationservicemodule_2eproto.base);
  ::memset(&eventmessageinfo_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&coordinationstatus_) -
      reinterpret_cast<char*>(&eventmessageinfo_)) + sizeof(coordinationstatus_));
}

CoordinationStatusProfile::~CoordinationStatusProfile() {
  // @@protoc_insertion_point(destructor:coordinationservicemodule.CoordinationStatusProfile)
  SharedDtor();
}

void CoordinationStatusProfile::SharedDtor() {
  if (this != internal_default_instance()) delete eventmessageinfo_;
  if (this != internal_default_instance()) delete applicationsystem_;
  if (this != internal_default_instance()) delete coordinationstatus_;
}

void CoordinationStatusProfile::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CoordinationStatusProfile& CoordinationStatusProfile::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CoordinationStatusProfile_coordinationservicemodule_2fcoordinationservicemodule_2eproto.base);
  return *internal_default_instance();
}


void CoordinationStatusProfile::Clear() {
// @@protoc_insertion_point(message_clear_start:coordinationservicemodule.CoordinationStatusProfile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && eventmessageinfo_ != nullptr) {
    delete eventmessageinfo_;
  }
  eventmessageinfo_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && applicationsystem_ != nullptr) {
    delete applicationsystem_;
  }
  applicationsystem_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && coordinationstatus_ != nullptr) {
    delete coordinationstatus_;
  }
  coordinationstatus_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CoordinationStatusProfile::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CoordinationStatusProfile*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .commonmodule.EventMessageInfo eventMessageInfo = 1 [(.uml.option_parent_message) = true];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::EventMessageInfo::_InternalParse;
        object = msg->mutable_eventmessageinfo();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .commonmodule.ApplicationSystem applicationSystem = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::ApplicationSystem::_InternalParse;
        object = msg->mutable_applicationsystem();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .coordinationservicemodule.CoordinationStatus coordinationStatus = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::coordinationservicemodule::CoordinationStatus::_InternalParse;
        object = msg->mutable_coordinationstatus();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CoordinationStatusProfile::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:coordinationservicemodule.CoordinationStatusProfile)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .commonmodule.EventMessageInfo eventMessageInfo = 1 [(.uml.option_parent_message) = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_eventmessageinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.ApplicationSystem applicationSystem = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_applicationsystem()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .coordinationservicemodule.CoordinationStatus coordinationStatus = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_coordinationstatus()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:coordinationservicemodule.CoordinationStatusProfile)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:coordinationservicemodule.CoordinationStatusProfile)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CoordinationStatusProfile::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:coordinationservicemodule.CoordinationStatusProfile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.EventMessageInfo eventMessageInfo = 1 [(.uml.option_parent_message) = true];
  if (this->has_eventmessageinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::eventmessageinfo(this), output);
  }

  // .commonmodule.ApplicationSystem applicationSystem = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_applicationsystem()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::applicationsystem(this), output);
  }

  // .coordinationservicemodule.CoordinationStatus coordinationStatus = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_coordinationstatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::coordinationstatus(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:coordinationservicemodule.CoordinationStatusProfile)
}

::google::protobuf::uint8* CoordinationStatusProfile::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:coordinationservicemodule.CoordinationStatusProfile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.EventMessageInfo eventMessageInfo = 1 [(.uml.option_parent_message) = true];
  if (this->has_eventmessageinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::eventmessageinfo(this), target);
  }

  // .commonmodule.ApplicationSystem applicationSystem = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_applicationsystem()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::applicationsystem(this), target);
  }

  // .coordinationservicemodule.CoordinationStatus coordinationStatus = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_coordinationstatus()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::coordinationstatus(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:coordinationservicemodule.CoordinationStatusProfile)
  return target;
}

size_t CoordinationStatusProfile::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:coordinationservicemodule.CoordinationStatusProfile)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .commonmodule.EventMessageInfo eventMessageInfo = 1 [(.uml.option_parent_message) = true];
  if (this->has_eventmessageinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *eventmessageinfo_);
  }

  // .commonmodule.ApplicationSystem applicationSystem = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_applicationsystem()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *applicationsystem_);
  }

  // .coordinationservicemodule.CoordinationStatus coordinationStatus = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_coordinationstatus()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *coordinationstatus_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CoordinationStatusProfile::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:coordinationservicemodule.CoordinationStatusProfile)
  GOOGLE_DCHECK_NE(&from, this);
  const CoordinationStatusProfile* source =
      ::google::protobuf::DynamicCastToGenerated<CoordinationStatusProfile>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:coordinationservicemodule.CoordinationStatusProfile)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:coordinationservicemodule.CoordinationStatusProfile)
    MergeFrom(*source);
  }
}

void CoordinationStatusProfile::MergeFrom(const CoordinationStatusProfile& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:coordinationservicemodule.CoordinationStatusProfile)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_eventmessageinfo()) {
    mutable_eventmessageinfo()->::commonmodule::EventMessageInfo::MergeFrom(from.eventmessageinfo());
  }
  if (from.has_applicationsystem()) {
    mutable_applicationsystem()->::commonmodule::ApplicationSystem::MergeFrom(from.applicationsystem());
  }
  if (from.has_coordinationstatus()) {
    mutable_coordinationstatus()->::coordinationservicemodule::CoordinationStatus::MergeFrom(from.coordinationstatus());
  }
}

void CoordinationStatusProfile::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:coordinationservicemodule.CoordinationStatusProfile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CoordinationStatusProfile::CopyFrom(const CoordinationStatusProfile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:coordinationservicemodule.CoordinationStatusProfile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CoordinationStatusProfile::IsInitialized() const {
  return true;
}

void CoordinationStatusProfile::Swap(CoordinationStatusProfile* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CoordinationStatusProfile::InternalSwap(CoordinationStatusProfile* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(eventmessageinfo_, other->eventmessageinfo_);
  swap(applicationsystem_, other->applicationsystem_);
  swap(coordinationstatus_, other->coordinationstatus_);
}

::google::protobuf::Metadata CoordinationStatusProfile::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_coordinationservicemodule_2fcoordinationservicemodule_2eproto);
  return ::file_level_metadata_coordinationservicemodule_2fcoordinationservicemodule_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace coordinationservicemodule
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::coordinationservicemodule::Optional_CoordinationServiceModeKind* Arena::CreateMaybeMessage< ::coordinationservicemodule::Optional_CoordinationServiceModeKind >(Arena* arena) {
  return Arena::CreateInternal< ::coordinationservicemodule::Optional_CoordinationServiceModeKind >(arena);
}
template<> PROTOBUF_NOINLINE ::coordinationservicemodule::ENG_CoordinationServiceModeKind* Arena::CreateMaybeMessage< ::coordinationservicemodule::ENG_CoordinationServiceModeKind >(Arena* arena) {
  return Arena::CreateInternal< ::coordinationservicemodule::ENG_CoordinationServiceModeKind >(arena);
}
template<> PROTOBUF_NOINLINE ::coordinationservicemodule::CoordinationControlDCSC* Arena::CreateMaybeMessage< ::coordinationservicemodule::CoordinationControlDCSC >(Arena* arena) {
  return Arena::CreateInternal< ::coordinationservicemodule::CoordinationControlDCSC >(arena);
}
template<> PROTOBUF_NOINLINE ::coordinationservicemodule::CoordinationControl* Arena::CreateMaybeMessage< ::coordinationservicemodule::CoordinationControl >(Arena* arena) {
  return Arena::CreateInternal< ::coordinationservicemodule::CoordinationControl >(arena);
}
template<> PROTOBUF_NOINLINE ::coordinationservicemodule::CoordinationControlProfile* Arena::CreateMaybeMessage< ::coordinationservicemodule::CoordinationControlProfile >(Arena* arena) {
  return Arena::CreateInternal< ::coordinationservicemodule::CoordinationControlProfile >(arena);
}
template<> PROTOBUF_NOINLINE ::coordinationservicemodule::CoordinationEventDCSC* Arena::CreateMaybeMessage< ::coordinationservicemodule::CoordinationEventDCSC >(Arena* arena) {
  return Arena::CreateInternal< ::coordinationservicemodule::CoordinationEventDCSC >(arena);
}
template<> PROTOBUF_NOINLINE ::coordinationservicemodule::CoordinationEvent* Arena::CreateMaybeMessage< ::coordinationservicemodule::CoordinationEvent >(Arena* arena) {
  return Arena::CreateInternal< ::coordinationservicemodule::CoordinationEvent >(arena);
}
template<> PROTOBUF_NOINLINE ::coordinationservicemodule::CoordinationEventProfile* Arena::CreateMaybeMessage< ::coordinationservicemodule::CoordinationEventProfile >(Arena* arena) {
  return Arena::CreateInternal< ::coordinationservicemodule::CoordinationEventProfile >(arena);
}
template<> PROTOBUF_NOINLINE ::coordinationservicemodule::CoordinationStatusDCSC* Arena::CreateMaybeMessage< ::coordinationservicemodule::CoordinationStatusDCSC >(Arena* arena) {
  return Arena::CreateInternal< ::coordinationservicemodule::CoordinationStatusDCSC >(arena);
}
template<> PROTOBUF_NOINLINE ::coordinationservicemodule::CoordinationStatus* Arena::CreateMaybeMessage< ::coordinationservicemodule::CoordinationStatus >(Arena* arena) {
  return Arena::CreateInternal< ::coordinationservicemodule::CoordinationStatus >(arena);
}
template<> PROTOBUF_NOINLINE ::coordinationservicemodule::CoordinationStatusProfile* Arena::CreateMaybeMessage< ::coordinationservicemodule::CoordinationStatusProfile >(Arena* arena) {
  return Arena::CreateInternal< ::coordinationservicemodule::CoordinationStatusProfile >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
