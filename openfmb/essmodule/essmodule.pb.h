// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: essmodule/essmodule.proto
// Protobuf C++ Version: 6.31.1

#ifndef essmodule_2fessmodule_2eproto_2epb_2eh
#define essmodule_2fessmodule_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6031001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "uml.pb.h"
#include "google/protobuf/wrappers.pb.h"
#include "commonmodule/commonmodule.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_essmodule_2fessmodule_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_essmodule_2fessmodule_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_essmodule_2fessmodule_2eproto;
}  // extern "C"
namespace essmodule {
class ESSCSG;
struct ESSCSGDefaultTypeInternal;
extern ESSCSGDefaultTypeInternal _ESSCSG_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ESSCSG_class_data_;
class ESSCapability;
struct ESSCapabilityDefaultTypeInternal;
extern ESSCapabilityDefaultTypeInternal _ESSCapability_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ESSCapability_class_data_;
class ESSCapabilityConfiguration;
struct ESSCapabilityConfigurationDefaultTypeInternal;
extern ESSCapabilityConfigurationDefaultTypeInternal _ESSCapabilityConfiguration_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ESSCapabilityConfiguration_class_data_;
class ESSCapabilityOverride;
struct ESSCapabilityOverrideDefaultTypeInternal;
extern ESSCapabilityOverrideDefaultTypeInternal _ESSCapabilityOverride_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ESSCapabilityOverride_class_data_;
class ESSCapabilityOverrideProfile;
struct ESSCapabilityOverrideProfileDefaultTypeInternal;
extern ESSCapabilityOverrideProfileDefaultTypeInternal _ESSCapabilityOverrideProfile_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ESSCapabilityOverrideProfile_class_data_;
class ESSCapabilityProfile;
struct ESSCapabilityProfileDefaultTypeInternal;
extern ESSCapabilityProfileDefaultTypeInternal _ESSCapabilityProfile_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ESSCapabilityProfile_class_data_;
class ESSCapabilityRatings;
struct ESSCapabilityRatingsDefaultTypeInternal;
extern ESSCapabilityRatingsDefaultTypeInternal _ESSCapabilityRatings_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ESSCapabilityRatings_class_data_;
class ESSControl;
struct ESSControlDefaultTypeInternal;
extern ESSControlDefaultTypeInternal _ESSControl_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ESSControl_class_data_;
class ESSControlProfile;
struct ESSControlProfileDefaultTypeInternal;
extern ESSControlProfileDefaultTypeInternal _ESSControlProfile_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ESSControlProfile_class_data_;
class ESSControlScheduleFSCH;
struct ESSControlScheduleFSCHDefaultTypeInternal;
extern ESSControlScheduleFSCHDefaultTypeInternal _ESSControlScheduleFSCH_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ESSControlScheduleFSCH_class_data_;
class ESSCurvePoint;
struct ESSCurvePointDefaultTypeInternal;
extern ESSCurvePointDefaultTypeInternal _ESSCurvePoint_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ESSCurvePoint_class_data_;
class ESSDiscreteControl;
struct ESSDiscreteControlDefaultTypeInternal;
extern ESSDiscreteControlDefaultTypeInternal _ESSDiscreteControl_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ESSDiscreteControl_class_data_;
class ESSDiscreteControlDBAT;
struct ESSDiscreteControlDBATDefaultTypeInternal;
extern ESSDiscreteControlDBATDefaultTypeInternal _ESSDiscreteControlDBAT_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ESSDiscreteControlDBAT_class_data_;
class ESSDiscreteControlProfile;
struct ESSDiscreteControlProfileDefaultTypeInternal;
extern ESSDiscreteControlProfileDefaultTypeInternal _ESSDiscreteControlProfile_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ESSDiscreteControlProfile_class_data_;
class ESSEvent;
struct ESSEventDefaultTypeInternal;
extern ESSEventDefaultTypeInternal _ESSEvent_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ESSEvent_class_data_;
class ESSEventAndStatusZGEN;
struct ESSEventAndStatusZGENDefaultTypeInternal;
extern ESSEventAndStatusZGENDefaultTypeInternal _ESSEventAndStatusZGEN_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ESSEventAndStatusZGEN_class_data_;
class ESSEventProfile;
struct ESSEventProfileDefaultTypeInternal;
extern ESSEventProfileDefaultTypeInternal _ESSEventProfile_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ESSEventProfile_class_data_;
class ESSEventZGEN;
struct ESSEventZGENDefaultTypeInternal;
extern ESSEventZGENDefaultTypeInternal _ESSEventZGEN_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ESSEventZGEN_class_data_;
class ESSFunction;
struct ESSFunctionDefaultTypeInternal;
extern ESSFunctionDefaultTypeInternal _ESSFunction_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ESSFunction_class_data_;
class ESSPoint;
struct ESSPointDefaultTypeInternal;
extern ESSPointDefaultTypeInternal _ESSPoint_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ESSPoint_class_data_;
class ESSPointStatus;
struct ESSPointStatusDefaultTypeInternal;
extern ESSPointStatusDefaultTypeInternal _ESSPointStatus_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ESSPointStatus_class_data_;
class ESSReading;
struct ESSReadingDefaultTypeInternal;
extern ESSReadingDefaultTypeInternal _ESSReading_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ESSReading_class_data_;
class ESSReadingProfile;
struct ESSReadingProfileDefaultTypeInternal;
extern ESSReadingProfileDefaultTypeInternal _ESSReadingProfile_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ESSReadingProfile_class_data_;
class ESSStatus;
struct ESSStatusDefaultTypeInternal;
extern ESSStatusDefaultTypeInternal _ESSStatus_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ESSStatus_class_data_;
class ESSStatusProfile;
struct ESSStatusProfileDefaultTypeInternal;
extern ESSStatusProfileDefaultTypeInternal _ESSStatusProfile_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ESSStatusProfile_class_data_;
class ESSStatusZGEN;
struct ESSStatusZGENDefaultTypeInternal;
extern ESSStatusZGENDefaultTypeInternal _ESSStatusZGEN_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ESSStatusZGEN_class_data_;
class EssControlFSCC;
struct EssControlFSCCDefaultTypeInternal;
extern EssControlFSCCDefaultTypeInternal _EssControlFSCC_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull EssControlFSCC_class_data_;
class EssEventZBAT;
struct EssEventZBATDefaultTypeInternal;
extern EssEventZBATDefaultTypeInternal _EssEventZBAT_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull EssEventZBAT_class_data_;
class EssStatusZBAT;
struct EssStatusZBATDefaultTypeInternal;
extern EssStatusZBATDefaultTypeInternal _EssStatusZBAT_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull EssStatusZBAT_class_data_;
}  // namespace essmodule
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace essmodule {

// ===================================================================


// -------------------------------------------------------------------

class ESSFunction final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:essmodule.ESSFunction) */ {
 public:
  inline ESSFunction() : ESSFunction(nullptr) {}
  ~ESSFunction() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ESSFunction* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ESSFunction));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ESSFunction(::google::protobuf::internal::ConstantInitialized);

  inline ESSFunction(const ESSFunction& from) : ESSFunction(nullptr, from) {}
  inline ESSFunction(ESSFunction&& from) noexcept
      : ESSFunction(nullptr, ::std::move(from)) {}
  inline ESSFunction& operator=(const ESSFunction& from) {
    CopyFrom(from);
    return *this;
  }
  inline ESSFunction& operator=(ESSFunction&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ESSFunction& default_instance() {
    return *reinterpret_cast<const ESSFunction*>(
        &_ESSFunction_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(ESSFunction& a, ESSFunction& b) { a.Swap(&b); }
  inline void Swap(ESSFunction* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ESSFunction* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ESSFunction* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ESSFunction>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ESSFunction& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ESSFunction& from) { ESSFunction::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ESSFunction* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "essmodule.ESSFunction"; }

 protected:
  explicit ESSFunction(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ESSFunction(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ESSFunction& from);
  ESSFunction(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ESSFunction&& from) noexcept
      : ESSFunction(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCapacityFirmingFieldNumber = 1,
    kFrequencyRegulationFieldNumber = 2,
    kPeakShavingFieldNumber = 3,
    kSocLimitFieldNumber = 4,
    kSocManagementFieldNumber = 5,
    kVoltageDroopFieldNumber = 6,
    kVoltagePIFieldNumber = 7,
  };
  // .commonmodule.CapacityFirming capacityFirming = 1;
  bool has_capacityfirming() const;
  void clear_capacityfirming() ;
  const ::commonmodule::CapacityFirming& capacityfirming() const;
  [[nodiscard]] ::commonmodule::CapacityFirming* PROTOBUF_NULLABLE release_capacityfirming();
  ::commonmodule::CapacityFirming* PROTOBUF_NONNULL mutable_capacityfirming();
  void set_allocated_capacityfirming(::commonmodule::CapacityFirming* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_capacityfirming(::commonmodule::CapacityFirming* PROTOBUF_NULLABLE value);
  ::commonmodule::CapacityFirming* PROTOBUF_NULLABLE unsafe_arena_release_capacityfirming();

  private:
  const ::commonmodule::CapacityFirming& _internal_capacityfirming() const;
  ::commonmodule::CapacityFirming* PROTOBUF_NONNULL _internal_mutable_capacityfirming();

  public:
  // .commonmodule.FrequencyRegulation frequencyRegulation = 2;
  bool has_frequencyregulation() const;
  void clear_frequencyregulation() ;
  const ::commonmodule::FrequencyRegulation& frequencyregulation() const;
  [[nodiscard]] ::commonmodule::FrequencyRegulation* PROTOBUF_NULLABLE release_frequencyregulation();
  ::commonmodule::FrequencyRegulation* PROTOBUF_NONNULL mutable_frequencyregulation();
  void set_allocated_frequencyregulation(::commonmodule::FrequencyRegulation* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_frequencyregulation(::commonmodule::FrequencyRegulation* PROTOBUF_NULLABLE value);
  ::commonmodule::FrequencyRegulation* PROTOBUF_NULLABLE unsafe_arena_release_frequencyregulation();

  private:
  const ::commonmodule::FrequencyRegulation& _internal_frequencyregulation() const;
  ::commonmodule::FrequencyRegulation* PROTOBUF_NONNULL _internal_mutable_frequencyregulation();

  public:
  // .commonmodule.PeakShaving peakShaving = 3;
  bool has_peakshaving() const;
  void clear_peakshaving() ;
  const ::commonmodule::PeakShaving& peakshaving() const;
  [[nodiscard]] ::commonmodule::PeakShaving* PROTOBUF_NULLABLE release_peakshaving();
  ::commonmodule::PeakShaving* PROTOBUF_NONNULL mutable_peakshaving();
  void set_allocated_peakshaving(::commonmodule::PeakShaving* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_peakshaving(::commonmodule::PeakShaving* PROTOBUF_NULLABLE value);
  ::commonmodule::PeakShaving* PROTOBUF_NULLABLE unsafe_arena_release_peakshaving();

  private:
  const ::commonmodule::PeakShaving& _internal_peakshaving() const;
  ::commonmodule::PeakShaving* PROTOBUF_NONNULL _internal_mutable_peakshaving();

  public:
  // .commonmodule.SocLimit socLimit = 4;
  bool has_soclimit() const;
  void clear_soclimit() ;
  const ::commonmodule::SocLimit& soclimit() const;
  [[nodiscard]] ::commonmodule::SocLimit* PROTOBUF_NULLABLE release_soclimit();
  ::commonmodule::SocLimit* PROTOBUF_NONNULL mutable_soclimit();
  void set_allocated_soclimit(::commonmodule::SocLimit* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_soclimit(::commonmodule::SocLimit* PROTOBUF_NULLABLE value);
  ::commonmodule::SocLimit* PROTOBUF_NULLABLE unsafe_arena_release_soclimit();

  private:
  const ::commonmodule::SocLimit& _internal_soclimit() const;
  ::commonmodule::SocLimit* PROTOBUF_NONNULL _internal_mutable_soclimit();

  public:
  // .commonmodule.SOCManagement socManagement = 5;
  bool has_socmanagement() const;
  void clear_socmanagement() ;
  const ::commonmodule::SOCManagement& socmanagement() const;
  [[nodiscard]] ::commonmodule::SOCManagement* PROTOBUF_NULLABLE release_socmanagement();
  ::commonmodule::SOCManagement* PROTOBUF_NONNULL mutable_socmanagement();
  void set_allocated_socmanagement(::commonmodule::SOCManagement* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_socmanagement(::commonmodule::SOCManagement* PROTOBUF_NULLABLE value);
  ::commonmodule::SOCManagement* PROTOBUF_NULLABLE unsafe_arena_release_socmanagement();

  private:
  const ::commonmodule::SOCManagement& _internal_socmanagement() const;
  ::commonmodule::SOCManagement* PROTOBUF_NONNULL _internal_mutable_socmanagement();

  public:
  // .commonmodule.VoltageDroop voltageDroop = 6;
  bool has_voltagedroop() const;
  void clear_voltagedroop() ;
  const ::commonmodule::VoltageDroop& voltagedroop() const;
  [[nodiscard]] ::commonmodule::VoltageDroop* PROTOBUF_NULLABLE release_voltagedroop();
  ::commonmodule::VoltageDroop* PROTOBUF_NONNULL mutable_voltagedroop();
  void set_allocated_voltagedroop(::commonmodule::VoltageDroop* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_voltagedroop(::commonmodule::VoltageDroop* PROTOBUF_NULLABLE value);
  ::commonmodule::VoltageDroop* PROTOBUF_NULLABLE unsafe_arena_release_voltagedroop();

  private:
  const ::commonmodule::VoltageDroop& _internal_voltagedroop() const;
  ::commonmodule::VoltageDroop* PROTOBUF_NONNULL _internal_mutable_voltagedroop();

  public:
  // .commonmodule.VoltagePI voltagePI = 7;
  bool has_voltagepi() const;
  void clear_voltagepi() ;
  const ::commonmodule::VoltagePI& voltagepi() const;
  [[nodiscard]] ::commonmodule::VoltagePI* PROTOBUF_NULLABLE release_voltagepi();
  ::commonmodule::VoltagePI* PROTOBUF_NONNULL mutable_voltagepi();
  void set_allocated_voltagepi(::commonmodule::VoltagePI* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_voltagepi(::commonmodule::VoltagePI* PROTOBUF_NULLABLE value);
  ::commonmodule::VoltagePI* PROTOBUF_NULLABLE unsafe_arena_release_voltagepi();

  private:
  const ::commonmodule::VoltagePI& _internal_voltagepi() const;
  ::commonmodule::VoltagePI* PROTOBUF_NONNULL _internal_mutable_voltagepi();

  public:
  // @@protoc_insertion_point(class_scope:essmodule.ESSFunction)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 7,
                                   7, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ESSFunction& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::commonmodule::CapacityFirming* PROTOBUF_NULLABLE capacityfirming_;
    ::commonmodule::FrequencyRegulation* PROTOBUF_NULLABLE frequencyregulation_;
    ::commonmodule::PeakShaving* PROTOBUF_NULLABLE peakshaving_;
    ::commonmodule::SocLimit* PROTOBUF_NULLABLE soclimit_;
    ::commonmodule::SOCManagement* PROTOBUF_NULLABLE socmanagement_;
    ::commonmodule::VoltageDroop* PROTOBUF_NULLABLE voltagedroop_;
    ::commonmodule::VoltagePI* PROTOBUF_NULLABLE voltagepi_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_essmodule_2fessmodule_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ESSFunction_class_data_;
// -------------------------------------------------------------------

class EssStatusZBAT final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:essmodule.EssStatusZBAT) */ {
 public:
  inline EssStatusZBAT() : EssStatusZBAT(nullptr) {}
  ~EssStatusZBAT() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(EssStatusZBAT* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(EssStatusZBAT));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR EssStatusZBAT(::google::protobuf::internal::ConstantInitialized);

  inline EssStatusZBAT(const EssStatusZBAT& from) : EssStatusZBAT(nullptr, from) {}
  inline EssStatusZBAT(EssStatusZBAT&& from) noexcept
      : EssStatusZBAT(nullptr, ::std::move(from)) {}
  inline EssStatusZBAT& operator=(const EssStatusZBAT& from) {
    CopyFrom(from);
    return *this;
  }
  inline EssStatusZBAT& operator=(EssStatusZBAT&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EssStatusZBAT& default_instance() {
    return *reinterpret_cast<const EssStatusZBAT*>(
        &_EssStatusZBAT_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 25;
  friend void swap(EssStatusZBAT& a, EssStatusZBAT& b) { a.Swap(&b); }
  inline void Swap(EssStatusZBAT* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EssStatusZBAT* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EssStatusZBAT* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<EssStatusZBAT>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EssStatusZBAT& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const EssStatusZBAT& from) { EssStatusZBAT::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(EssStatusZBAT* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "essmodule.EssStatusZBAT"; }

 protected:
  explicit EssStatusZBAT(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  EssStatusZBAT(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const EssStatusZBAT& from);
  EssStatusZBAT(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, EssStatusZBAT&& from) noexcept
      : EssStatusZBAT(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLogicalNodeForEventAndStatusFieldNumber = 1,
    kBatStFieldNumber = 2,
    kGriModFieldNumber = 3,
    kSocFieldNumber = 4,
    kStdbyFieldNumber = 5,
    kSoHFieldNumber = 6,
    kWHAvailFieldNumber = 7,
  };
  // .commonmodule.LogicalNodeForEventAndStatus logicalNodeForEventAndStatus = 1 [(.uml.option_parent_message) = true];
  bool has_logicalnodeforeventandstatus() const;
  void clear_logicalnodeforeventandstatus() ;
  const ::commonmodule::LogicalNodeForEventAndStatus& logicalnodeforeventandstatus() const;
  [[nodiscard]] ::commonmodule::LogicalNodeForEventAndStatus* PROTOBUF_NULLABLE release_logicalnodeforeventandstatus();
  ::commonmodule::LogicalNodeForEventAndStatus* PROTOBUF_NONNULL mutable_logicalnodeforeventandstatus();
  void set_allocated_logicalnodeforeventandstatus(::commonmodule::LogicalNodeForEventAndStatus* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_logicalnodeforeventandstatus(::commonmodule::LogicalNodeForEventAndStatus* PROTOBUF_NULLABLE value);
  ::commonmodule::LogicalNodeForEventAndStatus* PROTOBUF_NULLABLE unsafe_arena_release_logicalnodeforeventandstatus();

  private:
  const ::commonmodule::LogicalNodeForEventAndStatus& _internal_logicalnodeforeventandstatus() const;
  ::commonmodule::LogicalNodeForEventAndStatus* PROTOBUF_NONNULL _internal_mutable_logicalnodeforeventandstatus();

  public:
  // .commonmodule.StatusSPS BatSt = 2;
  bool has_batst() const;
  void clear_batst() ;
  const ::commonmodule::StatusSPS& batst() const;
  [[nodiscard]] ::commonmodule::StatusSPS* PROTOBUF_NULLABLE release_batst();
  ::commonmodule::StatusSPS* PROTOBUF_NONNULL mutable_batst();
  void set_allocated_batst(::commonmodule::StatusSPS* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_batst(::commonmodule::StatusSPS* PROTOBUF_NULLABLE value);
  ::commonmodule::StatusSPS* PROTOBUF_NULLABLE unsafe_arena_release_batst();

  private:
  const ::commonmodule::StatusSPS& _internal_batst() const;
  ::commonmodule::StatusSPS* PROTOBUF_NONNULL _internal_mutable_batst();

  public:
  // .commonmodule.ENG_GridConnectModeKind GriMod = 3;
  bool has_grimod() const;
  void clear_grimod() ;
  const ::commonmodule::ENG_GridConnectModeKind& grimod() const;
  [[nodiscard]] ::commonmodule::ENG_GridConnectModeKind* PROTOBUF_NULLABLE release_grimod();
  ::commonmodule::ENG_GridConnectModeKind* PROTOBUF_NONNULL mutable_grimod();
  void set_allocated_grimod(::commonmodule::ENG_GridConnectModeKind* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_grimod(::commonmodule::ENG_GridConnectModeKind* PROTOBUF_NULLABLE value);
  ::commonmodule::ENG_GridConnectModeKind* PROTOBUF_NULLABLE unsafe_arena_release_grimod();

  private:
  const ::commonmodule::ENG_GridConnectModeKind& _internal_grimod() const;
  ::commonmodule::ENG_GridConnectModeKind* PROTOBUF_NONNULL _internal_mutable_grimod();

  public:
  // .commonmodule.MV Soc = 4;
  bool has_soc() const;
  void clear_soc() ;
  const ::commonmodule::MV& soc() const;
  [[nodiscard]] ::commonmodule::MV* PROTOBUF_NULLABLE release_soc();
  ::commonmodule::MV* PROTOBUF_NONNULL mutable_soc();
  void set_allocated_soc(::commonmodule::MV* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_soc(::commonmodule::MV* PROTOBUF_NULLABLE value);
  ::commonmodule::MV* PROTOBUF_NULLABLE unsafe_arena_release_soc();

  private:
  const ::commonmodule::MV& _internal_soc() const;
  ::commonmodule::MV* PROTOBUF_NONNULL _internal_mutable_soc();

  public:
  // .commonmodule.StatusSPS Stdby = 5;
  bool has_stdby() const;
  void clear_stdby() ;
  const ::commonmodule::StatusSPS& stdby() const;
  [[nodiscard]] ::commonmodule::StatusSPS* PROTOBUF_NULLABLE release_stdby();
  ::commonmodule::StatusSPS* PROTOBUF_NONNULL mutable_stdby();
  void set_allocated_stdby(::commonmodule::StatusSPS* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_stdby(::commonmodule::StatusSPS* PROTOBUF_NULLABLE value);
  ::commonmodule::StatusSPS* PROTOBUF_NULLABLE unsafe_arena_release_stdby();

  private:
  const ::commonmodule::StatusSPS& _internal_stdby() const;
  ::commonmodule::StatusSPS* PROTOBUF_NONNULL _internal_mutable_stdby();

  public:
  // .commonmodule.MV SoH = 6;
  bool has_soh() const;
  void clear_soh() ;
  const ::commonmodule::MV& soh() const;
  [[nodiscard]] ::commonmodule::MV* PROTOBUF_NULLABLE release_soh();
  ::commonmodule::MV* PROTOBUF_NONNULL mutable_soh();
  void set_allocated_soh(::commonmodule::MV* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_soh(::commonmodule::MV* PROTOBUF_NULLABLE value);
  ::commonmodule::MV* PROTOBUF_NULLABLE unsafe_arena_release_soh();

  private:
  const ::commonmodule::MV& _internal_soh() const;
  ::commonmodule::MV* PROTOBUF_NONNULL _internal_mutable_soh();

  public:
  // .commonmodule.MV WHAvail = 7;
  bool has_whavail() const;
  void clear_whavail() ;
  const ::commonmodule::MV& whavail() const;
  [[nodiscard]] ::commonmodule::MV* PROTOBUF_NULLABLE release_whavail();
  ::commonmodule::MV* PROTOBUF_NONNULL mutable_whavail();
  void set_allocated_whavail(::commonmodule::MV* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_whavail(::commonmodule::MV* PROTOBUF_NULLABLE value);
  ::commonmodule::MV* PROTOBUF_NULLABLE unsafe_arena_release_whavail();

  private:
  const ::commonmodule::MV& _internal_whavail() const;
  ::commonmodule::MV* PROTOBUF_NONNULL _internal_mutable_whavail();

  public:
  // @@protoc_insertion_point(class_scope:essmodule.EssStatusZBAT)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 7,
                                   7, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const EssStatusZBAT& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::commonmodule::LogicalNodeForEventAndStatus* PROTOBUF_NULLABLE logicalnodeforeventandstatus_;
    ::commonmodule::StatusSPS* PROTOBUF_NULLABLE batst_;
    ::commonmodule::ENG_GridConnectModeKind* PROTOBUF_NULLABLE grimod_;
    ::commonmodule::MV* PROTOBUF_NULLABLE soc_;
    ::commonmodule::StatusSPS* PROTOBUF_NULLABLE stdby_;
    ::commonmodule::MV* PROTOBUF_NULLABLE soh_;
    ::commonmodule::MV* PROTOBUF_NULLABLE whavail_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_essmodule_2fessmodule_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull EssStatusZBAT_class_data_;
// -------------------------------------------------------------------

class EssEventZBAT final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:essmodule.EssEventZBAT) */ {
 public:
  inline EssEventZBAT() : EssEventZBAT(nullptr) {}
  ~EssEventZBAT() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(EssEventZBAT* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(EssEventZBAT));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR EssEventZBAT(::google::protobuf::internal::ConstantInitialized);

  inline EssEventZBAT(const EssEventZBAT& from) : EssEventZBAT(nullptr, from) {}
  inline EssEventZBAT(EssEventZBAT&& from) noexcept
      : EssEventZBAT(nullptr, ::std::move(from)) {}
  inline EssEventZBAT& operator=(const EssEventZBAT& from) {
    CopyFrom(from);
    return *this;
  }
  inline EssEventZBAT& operator=(EssEventZBAT&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EssEventZBAT& default_instance() {
    return *reinterpret_cast<const EssEventZBAT*>(
        &_EssEventZBAT_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 17;
  friend void swap(EssEventZBAT& a, EssEventZBAT& b) { a.Swap(&b); }
  inline void Swap(EssEventZBAT* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EssEventZBAT* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EssEventZBAT* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<EssEventZBAT>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EssEventZBAT& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const EssEventZBAT& from) { EssEventZBAT::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(EssEventZBAT* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "essmodule.EssEventZBAT"; }

 protected:
  explicit EssEventZBAT(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  EssEventZBAT(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const EssEventZBAT& from);
  EssEventZBAT(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, EssEventZBAT&& from) noexcept
      : EssEventZBAT(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLogicalNodeForEventAndStatusFieldNumber = 1,
    kBatHiFieldNumber = 2,
    kBatLoFieldNumber = 3,
    kBatStFieldNumber = 4,
    kSocFieldNumber = 5,
    kStdbyFieldNumber = 6,
    kSoHFieldNumber = 7,
    kWHAvailFieldNumber = 8,
  };
  // .commonmodule.LogicalNodeForEventAndStatus logicalNodeForEventAndStatus = 1 [(.uml.option_parent_message) = true];
  bool has_logicalnodeforeventandstatus() const;
  void clear_logicalnodeforeventandstatus() ;
  const ::commonmodule::LogicalNodeForEventAndStatus& logicalnodeforeventandstatus() const;
  [[nodiscard]] ::commonmodule::LogicalNodeForEventAndStatus* PROTOBUF_NULLABLE release_logicalnodeforeventandstatus();
  ::commonmodule::LogicalNodeForEventAndStatus* PROTOBUF_NONNULL mutable_logicalnodeforeventandstatus();
  void set_allocated_logicalnodeforeventandstatus(::commonmodule::LogicalNodeForEventAndStatus* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_logicalnodeforeventandstatus(::commonmodule::LogicalNodeForEventAndStatus* PROTOBUF_NULLABLE value);
  ::commonmodule::LogicalNodeForEventAndStatus* PROTOBUF_NULLABLE unsafe_arena_release_logicalnodeforeventandstatus();

  private:
  const ::commonmodule::LogicalNodeForEventAndStatus& _internal_logicalnodeforeventandstatus() const;
  ::commonmodule::LogicalNodeForEventAndStatus* PROTOBUF_NONNULL _internal_mutable_logicalnodeforeventandstatus();

  public:
  // .commonmodule.StatusSPS BatHi = 2;
  bool has_bathi() const;
  void clear_bathi() ;
  const ::commonmodule::StatusSPS& bathi() const;
  [[nodiscard]] ::commonmodule::StatusSPS* PROTOBUF_NULLABLE release_bathi();
  ::commonmodule::StatusSPS* PROTOBUF_NONNULL mutable_bathi();
  void set_allocated_bathi(::commonmodule::StatusSPS* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_bathi(::commonmodule::StatusSPS* PROTOBUF_NULLABLE value);
  ::commonmodule::StatusSPS* PROTOBUF_NULLABLE unsafe_arena_release_bathi();

  private:
  const ::commonmodule::StatusSPS& _internal_bathi() const;
  ::commonmodule::StatusSPS* PROTOBUF_NONNULL _internal_mutable_bathi();

  public:
  // .commonmodule.StatusSPS BatLo = 3;
  bool has_batlo() const;
  void clear_batlo() ;
  const ::commonmodule::StatusSPS& batlo() const;
  [[nodiscard]] ::commonmodule::StatusSPS* PROTOBUF_NULLABLE release_batlo();
  ::commonmodule::StatusSPS* PROTOBUF_NONNULL mutable_batlo();
  void set_allocated_batlo(::commonmodule::StatusSPS* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_batlo(::commonmodule::StatusSPS* PROTOBUF_NULLABLE value);
  ::commonmodule::StatusSPS* PROTOBUF_NULLABLE unsafe_arena_release_batlo();

  private:
  const ::commonmodule::StatusSPS& _internal_batlo() const;
  ::commonmodule::StatusSPS* PROTOBUF_NONNULL _internal_mutable_batlo();

  public:
  // .commonmodule.StatusSPS BatSt = 4;
  bool has_batst() const;
  void clear_batst() ;
  const ::commonmodule::StatusSPS& batst() const;
  [[nodiscard]] ::commonmodule::StatusSPS* PROTOBUF_NULLABLE release_batst();
  ::commonmodule::StatusSPS* PROTOBUF_NONNULL mutable_batst();
  void set_allocated_batst(::commonmodule::StatusSPS* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_batst(::commonmodule::StatusSPS* PROTOBUF_NULLABLE value);
  ::commonmodule::StatusSPS* PROTOBUF_NULLABLE unsafe_arena_release_batst();

  private:
  const ::commonmodule::StatusSPS& _internal_batst() const;
  ::commonmodule::StatusSPS* PROTOBUF_NONNULL _internal_mutable_batst();

  public:
  // .commonmodule.MV Soc = 5;
  bool has_soc() const;
  void clear_soc() ;
  const ::commonmodule::MV& soc() const;
  [[nodiscard]] ::commonmodule::MV* PROTOBUF_NULLABLE release_soc();
  ::commonmodule::MV* PROTOBUF_NONNULL mutable_soc();
  void set_allocated_soc(::commonmodule::MV* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_soc(::commonmodule::MV* PROTOBUF_NULLABLE value);
  ::commonmodule::MV* PROTOBUF_NULLABLE unsafe_arena_release_soc();

  private:
  const ::commonmodule::MV& _internal_soc() const;
  ::commonmodule::MV* PROTOBUF_NONNULL _internal_mutable_soc();

  public:
  // .commonmodule.StatusSPS Stdby = 6;
  bool has_stdby() const;
  void clear_stdby() ;
  const ::commonmodule::StatusSPS& stdby() const;
  [[nodiscard]] ::commonmodule::StatusSPS* PROTOBUF_NULLABLE release_stdby();
  ::commonmodule::StatusSPS* PROTOBUF_NONNULL mutable_stdby();
  void set_allocated_stdby(::commonmodule::StatusSPS* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_stdby(::commonmodule::StatusSPS* PROTOBUF_NULLABLE value);
  ::commonmodule::StatusSPS* PROTOBUF_NULLABLE unsafe_arena_release_stdby();

  private:
  const ::commonmodule::StatusSPS& _internal_stdby() const;
  ::commonmodule::StatusSPS* PROTOBUF_NONNULL _internal_mutable_stdby();

  public:
  // .commonmodule.MV SoH = 7;
  bool has_soh() const;
  void clear_soh() ;
  const ::commonmodule::MV& soh() const;
  [[nodiscard]] ::commonmodule::MV* PROTOBUF_NULLABLE release_soh();
  ::commonmodule::MV* PROTOBUF_NONNULL mutable_soh();
  void set_allocated_soh(::commonmodule::MV* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_soh(::commonmodule::MV* PROTOBUF_NULLABLE value);
  ::commonmodule::MV* PROTOBUF_NULLABLE unsafe_arena_release_soh();

  private:
  const ::commonmodule::MV& _internal_soh() const;
  ::commonmodule::MV* PROTOBUF_NONNULL _internal_mutable_soh();

  public:
  // .commonmodule.MV WHAvail = 8;
  bool has_whavail() const;
  void clear_whavail() ;
  const ::commonmodule::MV& whavail() const;
  [[nodiscard]] ::commonmodule::MV* PROTOBUF_NULLABLE release_whavail();
  ::commonmodule::MV* PROTOBUF_NONNULL mutable_whavail();
  void set_allocated_whavail(::commonmodule::MV* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_whavail(::commonmodule::MV* PROTOBUF_NULLABLE value);
  ::commonmodule::MV* PROTOBUF_NULLABLE unsafe_arena_release_whavail();

  private:
  const ::commonmodule::MV& _internal_whavail() const;
  ::commonmodule::MV* PROTOBUF_NONNULL _internal_mutable_whavail();

  public:
  // @@protoc_insertion_point(class_scope:essmodule.EssEventZBAT)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 8,
                                   8, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const EssEventZBAT& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::commonmodule::LogicalNodeForEventAndStatus* PROTOBUF_NULLABLE logicalnodeforeventandstatus_;
    ::commonmodule::StatusSPS* PROTOBUF_NULLABLE bathi_;
    ::commonmodule::StatusSPS* PROTOBUF_NULLABLE batlo_;
    ::commonmodule::StatusSPS* PROTOBUF_NULLABLE batst_;
    ::commonmodule::MV* PROTOBUF_NULLABLE soc_;
    ::commonmodule::StatusSPS* PROTOBUF_NULLABLE stdby_;
    ::commonmodule::MV* PROTOBUF_NULLABLE soh_;
    ::commonmodule::MV* PROTOBUF_NULLABLE whavail_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_essmodule_2fessmodule_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull EssEventZBAT_class_data_;
// -------------------------------------------------------------------

class ESSCapabilityRatings final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:essmodule.ESSCapabilityRatings) */ {
 public:
  inline ESSCapabilityRatings() : ESSCapabilityRatings(nullptr) {}
  ~ESSCapabilityRatings() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ESSCapabilityRatings* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ESSCapabilityRatings));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ESSCapabilityRatings(::google::protobuf::internal::ConstantInitialized);

  inline ESSCapabilityRatings(const ESSCapabilityRatings& from) : ESSCapabilityRatings(nullptr, from) {}
  inline ESSCapabilityRatings(ESSCapabilityRatings&& from) noexcept
      : ESSCapabilityRatings(nullptr, ::std::move(from)) {}
  inline ESSCapabilityRatings& operator=(const ESSCapabilityRatings& from) {
    CopyFrom(from);
    return *this;
  }
  inline ESSCapabilityRatings& operator=(ESSCapabilityRatings&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ESSCapabilityRatings& default_instance() {
    return *reinterpret_cast<const ESSCapabilityRatings*>(
        &_ESSCapabilityRatings_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(ESSCapabilityRatings& a, ESSCapabilityRatings& b) { a.Swap(&b); }
  inline void Swap(ESSCapabilityRatings* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ESSCapabilityRatings* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ESSCapabilityRatings* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ESSCapabilityRatings>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ESSCapabilityRatings& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ESSCapabilityRatings& from) { ESSCapabilityRatings::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ESSCapabilityRatings* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "essmodule.ESSCapabilityRatings"; }

 protected:
  explicit ESSCapabilityRatings(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ESSCapabilityRatings(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ESSCapabilityRatings& from);
  ESSCapabilityRatings(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ESSCapabilityRatings&& from) noexcept
      : ESSCapabilityRatings(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSourceCapabilityRatingsFieldNumber = 1,
    kVAChaRteMaxRtgFieldNumber = 2,
    kVADisChaRteMaxRtgFieldNumber = 3,
    kWChaRteMaxRtgFieldNumber = 4,
    kWDisChaRteMaxRtgFieldNumber = 5,
    kWHRtgFieldNumber = 6,
  };
  // .commonmodule.SourceCapabilityRatings sourceCapabilityRatings = 1 [(.uml.option_parent_message) = true];
  bool has_sourcecapabilityratings() const;
  void clear_sourcecapabilityratings() ;
  const ::commonmodule::SourceCapabilityRatings& sourcecapabilityratings() const;
  [[nodiscard]] ::commonmodule::SourceCapabilityRatings* PROTOBUF_NULLABLE release_sourcecapabilityratings();
  ::commonmodule::SourceCapabilityRatings* PROTOBUF_NONNULL mutable_sourcecapabilityratings();
  void set_allocated_sourcecapabilityratings(::commonmodule::SourceCapabilityRatings* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_sourcecapabilityratings(::commonmodule::SourceCapabilityRatings* PROTOBUF_NULLABLE value);
  ::commonmodule::SourceCapabilityRatings* PROTOBUF_NULLABLE unsafe_arena_release_sourcecapabilityratings();

  private:
  const ::commonmodule::SourceCapabilityRatings& _internal_sourcecapabilityratings() const;
  ::commonmodule::SourceCapabilityRatings* PROTOBUF_NONNULL _internal_mutable_sourcecapabilityratings();

  public:
  // .commonmodule.ASG VAChaRteMaxRtg = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  bool has_vachartemaxrtg() const;
  void clear_vachartemaxrtg() ;
  const ::commonmodule::ASG& vachartemaxrtg() const;
  [[nodiscard]] ::commonmodule::ASG* PROTOBUF_NULLABLE release_vachartemaxrtg();
  ::commonmodule::ASG* PROTOBUF_NONNULL mutable_vachartemaxrtg();
  void set_allocated_vachartemaxrtg(::commonmodule::ASG* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_vachartemaxrtg(::commonmodule::ASG* PROTOBUF_NULLABLE value);
  ::commonmodule::ASG* PROTOBUF_NULLABLE unsafe_arena_release_vachartemaxrtg();

  private:
  const ::commonmodule::ASG& _internal_vachartemaxrtg() const;
  ::commonmodule::ASG* PROTOBUF_NONNULL _internal_mutable_vachartemaxrtg();

  public:
  // .commonmodule.ASG VADisChaRteMaxRtg = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  bool has_vadischartemaxrtg() const;
  void clear_vadischartemaxrtg() ;
  const ::commonmodule::ASG& vadischartemaxrtg() const;
  [[nodiscard]] ::commonmodule::ASG* PROTOBUF_NULLABLE release_vadischartemaxrtg();
  ::commonmodule::ASG* PROTOBUF_NONNULL mutable_vadischartemaxrtg();
  void set_allocated_vadischartemaxrtg(::commonmodule::ASG* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_vadischartemaxrtg(::commonmodule::ASG* PROTOBUF_NULLABLE value);
  ::commonmodule::ASG* PROTOBUF_NULLABLE unsafe_arena_release_vadischartemaxrtg();

  private:
  const ::commonmodule::ASG& _internal_vadischartemaxrtg() const;
  ::commonmodule::ASG* PROTOBUF_NONNULL _internal_mutable_vadischartemaxrtg();

  public:
  // .commonmodule.ASG WChaRteMaxRtg = 4 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  bool has_wchartemaxrtg() const;
  void clear_wchartemaxrtg() ;
  const ::commonmodule::ASG& wchartemaxrtg() const;
  [[nodiscard]] ::commonmodule::ASG* PROTOBUF_NULLABLE release_wchartemaxrtg();
  ::commonmodule::ASG* PROTOBUF_NONNULL mutable_wchartemaxrtg();
  void set_allocated_wchartemaxrtg(::commonmodule::ASG* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_wchartemaxrtg(::commonmodule::ASG* PROTOBUF_NULLABLE value);
  ::commonmodule::ASG* PROTOBUF_NULLABLE unsafe_arena_release_wchartemaxrtg();

  private:
  const ::commonmodule::ASG& _internal_wchartemaxrtg() const;
  ::commonmodule::ASG* PROTOBUF_NONNULL _internal_mutable_wchartemaxrtg();

  public:
  // .commonmodule.ASG WDisChaRteMaxRtg = 5 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  bool has_wdischartemaxrtg() const;
  void clear_wdischartemaxrtg() ;
  const ::commonmodule::ASG& wdischartemaxrtg() const;
  [[nodiscard]] ::commonmodule::ASG* PROTOBUF_NULLABLE release_wdischartemaxrtg();
  ::commonmodule::ASG* PROTOBUF_NONNULL mutable_wdischartemaxrtg();
  void set_allocated_wdischartemaxrtg(::commonmodule::ASG* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_wdischartemaxrtg(::commonmodule::ASG* PROTOBUF_NULLABLE value);
  ::commonmodule::ASG* PROTOBUF_NULLABLE unsafe_arena_release_wdischartemaxrtg();

  private:
  const ::commonmodule::ASG& _internal_wdischartemaxrtg() const;
  ::commonmodule::ASG* PROTOBUF_NONNULL _internal_mutable_wdischartemaxrtg();

  public:
  // .commonmodule.ASG WHRtg = 6 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  bool has_whrtg() const;
  void clear_whrtg() ;
  const ::commonmodule::ASG& whrtg() const;
  [[nodiscard]] ::commonmodule::ASG* PROTOBUF_NULLABLE release_whrtg();
  ::commonmodule::ASG* PROTOBUF_NONNULL mutable_whrtg();
  void set_allocated_whrtg(::commonmodule::ASG* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_whrtg(::commonmodule::ASG* PROTOBUF_NULLABLE value);
  ::commonmodule::ASG* PROTOBUF_NULLABLE unsafe_arena_release_whrtg();

  private:
  const ::commonmodule::ASG& _internal_whrtg() const;
  ::commonmodule::ASG* PROTOBUF_NONNULL _internal_mutable_whrtg();

  public:
  // @@protoc_insertion_point(class_scope:essmodule.ESSCapabilityRatings)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 6,
                                   6, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ESSCapabilityRatings& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::commonmodule::SourceCapabilityRatings* PROTOBUF_NULLABLE sourcecapabilityratings_;
    ::commonmodule::ASG* PROTOBUF_NULLABLE vachartemaxrtg_;
    ::commonmodule::ASG* PROTOBUF_NULLABLE vadischartemaxrtg_;
    ::commonmodule::ASG* PROTOBUF_NULLABLE wchartemaxrtg_;
    ::commonmodule::ASG* PROTOBUF_NULLABLE wdischartemaxrtg_;
    ::commonmodule::ASG* PROTOBUF_NULLABLE whrtg_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_essmodule_2fessmodule_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ESSCapabilityRatings_class_data_;
// -------------------------------------------------------------------

class ESSCapabilityConfiguration final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:essmodule.ESSCapabilityConfiguration) */ {
 public:
  inline ESSCapabilityConfiguration() : ESSCapabilityConfiguration(nullptr) {}
  ~ESSCapabilityConfiguration() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ESSCapabilityConfiguration* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ESSCapabilityConfiguration));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ESSCapabilityConfiguration(::google::protobuf::internal::ConstantInitialized);

  inline ESSCapabilityConfiguration(const ESSCapabilityConfiguration& from) : ESSCapabilityConfiguration(nullptr, from) {}
  inline ESSCapabilityConfiguration(ESSCapabilityConfiguration&& from) noexcept
      : ESSCapabilityConfiguration(nullptr, ::std::move(from)) {}
  inline ESSCapabilityConfiguration& operator=(const ESSCapabilityConfiguration& from) {
    CopyFrom(from);
    return *this;
  }
  inline ESSCapabilityConfiguration& operator=(ESSCapabilityConfiguration&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ESSCapabilityConfiguration& default_instance() {
    return *reinterpret_cast<const ESSCapabilityConfiguration*>(
        &_ESSCapabilityConfiguration_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(ESSCapabilityConfiguration& a, ESSCapabilityConfiguration& b) { a.Swap(&b); }
  inline void Swap(ESSCapabilityConfiguration* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ESSCapabilityConfiguration* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ESSCapabilityConfiguration* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ESSCapabilityConfiguration>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ESSCapabilityConfiguration& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ESSCapabilityConfiguration& from) { ESSCapabilityConfiguration::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ESSCapabilityConfiguration* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "essmodule.ESSCapabilityConfiguration"; }

 protected:
  explicit ESSCapabilityConfiguration(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ESSCapabilityConfiguration(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ESSCapabilityConfiguration& from);
  ESSCapabilityConfiguration(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ESSCapabilityConfiguration&& from) noexcept
      : ESSCapabilityConfiguration(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSourceCapabilityConfigurationFieldNumber = 1,
    kVAChaRteMaxFieldNumber = 2,
    kVADisChaRteMaxFieldNumber = 3,
    kWChaRteMaxFieldNumber = 4,
    kWDisChaRteMaxFieldNumber = 5,
  };
  // .commonmodule.SourceCapabilityConfiguration sourceCapabilityConfiguration = 1 [(.uml.option_parent_message) = true];
  bool has_sourcecapabilityconfiguration() const;
  void clear_sourcecapabilityconfiguration() ;
  const ::commonmodule::SourceCapabilityConfiguration& sourcecapabilityconfiguration() const;
  [[nodiscard]] ::commonmodule::SourceCapabilityConfiguration* PROTOBUF_NULLABLE release_sourcecapabilityconfiguration();
  ::commonmodule::SourceCapabilityConfiguration* PROTOBUF_NONNULL mutable_sourcecapabilityconfiguration();
  void set_allocated_sourcecapabilityconfiguration(::commonmodule::SourceCapabilityConfiguration* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_sourcecapabilityconfiguration(::commonmodule::SourceCapabilityConfiguration* PROTOBUF_NULLABLE value);
  ::commonmodule::SourceCapabilityConfiguration* PROTOBUF_NULLABLE unsafe_arena_release_sourcecapabilityconfiguration();

  private:
  const ::commonmodule::SourceCapabilityConfiguration& _internal_sourcecapabilityconfiguration() const;
  ::commonmodule::SourceCapabilityConfiguration* PROTOBUF_NONNULL _internal_mutable_sourcecapabilityconfiguration();

  public:
  // .commonmodule.ASG VAChaRteMax = 2;
  bool has_vachartemax() const;
  void clear_vachartemax() ;
  const ::commonmodule::ASG& vachartemax() const;
  [[nodiscard]] ::commonmodule::ASG* PROTOBUF_NULLABLE release_vachartemax();
  ::commonmodule::ASG* PROTOBUF_NONNULL mutable_vachartemax();
  void set_allocated_vachartemax(::commonmodule::ASG* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_vachartemax(::commonmodule::ASG* PROTOBUF_NULLABLE value);
  ::commonmodule::ASG* PROTOBUF_NULLABLE unsafe_arena_release_vachartemax();

  private:
  const ::commonmodule::ASG& _internal_vachartemax() const;
  ::commonmodule::ASG* PROTOBUF_NONNULL _internal_mutable_vachartemax();

  public:
  // .commonmodule.ASG VADisChaRteMax = 3;
  bool has_vadischartemax() const;
  void clear_vadischartemax() ;
  const ::commonmodule::ASG& vadischartemax() const;
  [[nodiscard]] ::commonmodule::ASG* PROTOBUF_NULLABLE release_vadischartemax();
  ::commonmodule::ASG* PROTOBUF_NONNULL mutable_vadischartemax();
  void set_allocated_vadischartemax(::commonmodule::ASG* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_vadischartemax(::commonmodule::ASG* PROTOBUF_NULLABLE value);
  ::commonmodule::ASG* PROTOBUF_NULLABLE unsafe_arena_release_vadischartemax();

  private:
  const ::commonmodule::ASG& _internal_vadischartemax() const;
  ::commonmodule::ASG* PROTOBUF_NONNULL _internal_mutable_vadischartemax();

  public:
  // .commonmodule.ASG WChaRteMax = 4;
  bool has_wchartemax() const;
  void clear_wchartemax() ;
  const ::commonmodule::ASG& wchartemax() const;
  [[nodiscard]] ::commonmodule::ASG* PROTOBUF_NULLABLE release_wchartemax();
  ::commonmodule::ASG* PROTOBUF_NONNULL mutable_wchartemax();
  void set_allocated_wchartemax(::commonmodule::ASG* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_wchartemax(::commonmodule::ASG* PROTOBUF_NULLABLE value);
  ::commonmodule::ASG* PROTOBUF_NULLABLE unsafe_arena_release_wchartemax();

  private:
  const ::commonmodule::ASG& _internal_wchartemax() const;
  ::commonmodule::ASG* PROTOBUF_NONNULL _internal_mutable_wchartemax();

  public:
  // .commonmodule.ASG WDisChaRteMax = 5;
  bool has_wdischartemax() const;
  void clear_wdischartemax() ;
  const ::commonmodule::ASG& wdischartemax() const;
  [[nodiscard]] ::commonmodule::ASG* PROTOBUF_NULLABLE release_wdischartemax();
  ::commonmodule::ASG* PROTOBUF_NONNULL mutable_wdischartemax();
  void set_allocated_wdischartemax(::commonmodule::ASG* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_wdischartemax(::commonmodule::ASG* PROTOBUF_NULLABLE value);
  ::commonmodule::ASG* PROTOBUF_NULLABLE unsafe_arena_release_wdischartemax();

  private:
  const ::commonmodule::ASG& _internal_wdischartemax() const;
  ::commonmodule::ASG* PROTOBUF_NONNULL _internal_mutable_wdischartemax();

  public:
  // @@protoc_insertion_point(class_scope:essmodule.ESSCapabilityConfiguration)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5,
                                   5, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ESSCapabilityConfiguration& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::commonmodule::SourceCapabilityConfiguration* PROTOBUF_NULLABLE sourcecapabilityconfiguration_;
    ::commonmodule::ASG* PROTOBUF_NULLABLE vachartemax_;
    ::commonmodule::ASG* PROTOBUF_NULLABLE vadischartemax_;
    ::commonmodule::ASG* PROTOBUF_NULLABLE wchartemax_;
    ::commonmodule::ASG* PROTOBUF_NULLABLE wdischartemax_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_essmodule_2fessmodule_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ESSCapabilityConfiguration_class_data_;
// -------------------------------------------------------------------

class ESSReading final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:essmodule.ESSReading) */ {
 public:
  inline ESSReading() : ESSReading(nullptr) {}
  ~ESSReading() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ESSReading* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ESSReading));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ESSReading(::google::protobuf::internal::ConstantInitialized);

  inline ESSReading(const ESSReading& from) : ESSReading(nullptr, from) {}
  inline ESSReading(ESSReading&& from) noexcept
      : ESSReading(nullptr, ::std::move(from)) {}
  inline ESSReading& operator=(const ESSReading& from) {
    CopyFrom(from);
    return *this;
  }
  inline ESSReading& operator=(ESSReading&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ESSReading& default_instance() {
    return *reinterpret_cast<const ESSReading*>(
        &_ESSReading_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 23;
  friend void swap(ESSReading& a, ESSReading& b) { a.Swap(&b); }
  inline void Swap(ESSReading* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ESSReading* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ESSReading* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ESSReading>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ESSReading& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ESSReading& from) { ESSReading::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ESSReading* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "essmodule.ESSReading"; }

 protected:
  explicit ESSReading(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ESSReading(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ESSReading& from);
  ESSReading(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ESSReading&& from) noexcept
      : ESSReading(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kConductingEquipmentTerminalReadingFieldNumber = 1,
    kPhaseMMTNFieldNumber = 2,
    kReadingMMTRFieldNumber = 3,
    kReadingMMXUFieldNumber = 4,
    kReadingMMDCFieldNumber = 5,
  };
  // .commonmodule.ConductingEquipmentTerminalReading conductingEquipmentTerminalReading = 1 [(.uml.option_parent_message) = true];
  bool has_conductingequipmentterminalreading() const;
  void clear_conductingequipmentterminalreading() ;
  const ::commonmodule::ConductingEquipmentTerminalReading& conductingequipmentterminalreading() const;
  [[nodiscard]] ::commonmodule::ConductingEquipmentTerminalReading* PROTOBUF_NULLABLE release_conductingequipmentterminalreading();
  ::commonmodule::ConductingEquipmentTerminalReading* PROTOBUF_NONNULL mutable_conductingequipmentterminalreading();
  void set_allocated_conductingequipmentterminalreading(::commonmodule::ConductingEquipmentTerminalReading* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_conductingequipmentterminalreading(::commonmodule::ConductingEquipmentTerminalReading* PROTOBUF_NULLABLE value);
  ::commonmodule::ConductingEquipmentTerminalReading* PROTOBUF_NULLABLE unsafe_arena_release_conductingequipmentterminalreading();

  private:
  const ::commonmodule::ConductingEquipmentTerminalReading& _internal_conductingequipmentterminalreading() const;
  ::commonmodule::ConductingEquipmentTerminalReading* PROTOBUF_NONNULL _internal_mutable_conductingequipmentterminalreading();

  public:
  // .commonmodule.PhaseMMTN phaseMMTN = 2;
  bool has_phasemmtn() const;
  void clear_phasemmtn() ;
  const ::commonmodule::PhaseMMTN& phasemmtn() const;
  [[nodiscard]] ::commonmodule::PhaseMMTN* PROTOBUF_NULLABLE release_phasemmtn();
  ::commonmodule::PhaseMMTN* PROTOBUF_NONNULL mutable_phasemmtn();
  void set_allocated_phasemmtn(::commonmodule::PhaseMMTN* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_phasemmtn(::commonmodule::PhaseMMTN* PROTOBUF_NULLABLE value);
  ::commonmodule::PhaseMMTN* PROTOBUF_NULLABLE unsafe_arena_release_phasemmtn();

  private:
  const ::commonmodule::PhaseMMTN& _internal_phasemmtn() const;
  ::commonmodule::PhaseMMTN* PROTOBUF_NONNULL _internal_mutable_phasemmtn();

  public:
  // .commonmodule.ReadingMMTR readingMMTR = 3;
  bool has_readingmmtr() const;
  void clear_readingmmtr() ;
  const ::commonmodule::ReadingMMTR& readingmmtr() const;
  [[nodiscard]] ::commonmodule::ReadingMMTR* PROTOBUF_NULLABLE release_readingmmtr();
  ::commonmodule::ReadingMMTR* PROTOBUF_NONNULL mutable_readingmmtr();
  void set_allocated_readingmmtr(::commonmodule::ReadingMMTR* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_readingmmtr(::commonmodule::ReadingMMTR* PROTOBUF_NULLABLE value);
  ::commonmodule::ReadingMMTR* PROTOBUF_NULLABLE unsafe_arena_release_readingmmtr();

  private:
  const ::commonmodule::ReadingMMTR& _internal_readingmmtr() const;
  ::commonmodule::ReadingMMTR* PROTOBUF_NONNULL _internal_mutable_readingmmtr();

  public:
  // .commonmodule.ReadingMMXU readingMMXU = 4;
  bool has_readingmmxu() const;
  void clear_readingmmxu() ;
  const ::commonmodule::ReadingMMXU& readingmmxu() const;
  [[nodiscard]] ::commonmodule::ReadingMMXU* PROTOBUF_NULLABLE release_readingmmxu();
  ::commonmodule::ReadingMMXU* PROTOBUF_NONNULL mutable_readingmmxu();
  void set_allocated_readingmmxu(::commonmodule::ReadingMMXU* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_readingmmxu(::commonmodule::ReadingMMXU* PROTOBUF_NULLABLE value);
  ::commonmodule::ReadingMMXU* PROTOBUF_NULLABLE unsafe_arena_release_readingmmxu();

  private:
  const ::commonmodule::ReadingMMXU& _internal_readingmmxu() const;
  ::commonmodule::ReadingMMXU* PROTOBUF_NONNULL _internal_mutable_readingmmxu();

  public:
  // .commonmodule.ReadingMMDC readingMMDC = 5;
  bool has_readingmmdc() const;
  void clear_readingmmdc() ;
  const ::commonmodule::ReadingMMDC& readingmmdc() const;
  [[nodiscard]] ::commonmodule::ReadingMMDC* PROTOBUF_NULLABLE release_readingmmdc();
  ::commonmodule::ReadingMMDC* PROTOBUF_NONNULL mutable_readingmmdc();
  void set_allocated_readingmmdc(::commonmodule::ReadingMMDC* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_readingmmdc(::commonmodule::ReadingMMDC* PROTOBUF_NULLABLE value);
  ::commonmodule::ReadingMMDC* PROTOBUF_NULLABLE unsafe_arena_release_readingmmdc();

  private:
  const ::commonmodule::ReadingMMDC& _internal_readingmmdc() const;
  ::commonmodule::ReadingMMDC* PROTOBUF_NONNULL _internal_mutable_readingmmdc();

  public:
  // @@protoc_insertion_point(class_scope:essmodule.ESSReading)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5,
                                   5, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ESSReading& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::commonmodule::ConductingEquipmentTerminalReading* PROTOBUF_NULLABLE conductingequipmentterminalreading_;
    ::commonmodule::PhaseMMTN* PROTOBUF_NULLABLE phasemmtn_;
    ::commonmodule::ReadingMMTR* PROTOBUF_NULLABLE readingmmtr_;
    ::commonmodule::ReadingMMXU* PROTOBUF_NULLABLE readingmmxu_;
    ::commonmodule::ReadingMMDC* PROTOBUF_NULLABLE readingmmdc_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_essmodule_2fessmodule_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ESSReading_class_data_;
// -------------------------------------------------------------------

class ESSPointStatus final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:essmodule.ESSPointStatus) */ {
 public:
  inline ESSPointStatus() : ESSPointStatus(nullptr) {}
  ~ESSPointStatus() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ESSPointStatus* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ESSPointStatus));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ESSPointStatus(::google::protobuf::internal::ConstantInitialized);

  inline ESSPointStatus(const ESSPointStatus& from) : ESSPointStatus(nullptr, from) {}
  inline ESSPointStatus(ESSPointStatus&& from) noexcept
      : ESSPointStatus(nullptr, ::std::move(from)) {}
  inline ESSPointStatus& operator=(const ESSPointStatus& from) {
    CopyFrom(from);
    return *this;
  }
  inline ESSPointStatus& operator=(ESSPointStatus&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ESSPointStatus& default_instance() {
    return *reinterpret_cast<const ESSPointStatus*>(
        &_ESSPointStatus_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 18;
  friend void swap(ESSPointStatus& a, ESSPointStatus& b) { a.Swap(&b); }
  inline void Swap(ESSPointStatus* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ESSPointStatus* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ESSPointStatus* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ESSPointStatus>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ESSPointStatus& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ESSPointStatus& from) { ESSPointStatus::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ESSPointStatus* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "essmodule.ESSPointStatus"; }

 protected:
  explicit ESSPointStatus(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ESSPointStatus(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ESSPointStatus& from);
  ESSPointStatus(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ESSPointStatus&& from) noexcept
      : ESSPointStatus(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBlackStartEnabledFieldNumber = 1,
    kFrequencySetPointEnabledFieldNumber = 2,
    kFunctionFieldNumber = 3,
    kModeFieldNumber = 4,
    kPctHzDroopFieldNumber = 5,
    kPctVDroopFieldNumber = 6,
    kRampRatesFieldNumber = 7,
    kReactivePwrSetPointEnabledFieldNumber = 8,
    kRealPwrSetPointEnabledFieldNumber = 9,
    kStateFieldNumber = 10,
    kSyncBackToGridFieldNumber = 11,
    kTransToIslndOnGridLossEnabledFieldNumber = 12,
    kVoltageSetPointEnabledFieldNumber = 13,
    kEnterServiceOperationFieldNumber = 14,
    kHzWOperationFieldNumber = 15,
    kLimitWOperationFieldNumber = 16,
    kPFOperationFieldNumber = 17,
    kTmHzTripOperationFieldNumber = 18,
    kTmVoltTripOperationFieldNumber = 19,
    kVArOperationFieldNumber = 20,
    kVoltVarOperationFieldNumber = 21,
    kVoltWOperationFieldNumber = 22,
    kWVarOperationFieldNumber = 23,
  };
  // .commonmodule.StatusSPS blackStartEnabled = 1;
  bool has_blackstartenabled() const;
  void clear_blackstartenabled() ;
  const ::commonmodule::StatusSPS& blackstartenabled() const;
  [[nodiscard]] ::commonmodule::StatusSPS* PROTOBUF_NULLABLE release_blackstartenabled();
  ::commonmodule::StatusSPS* PROTOBUF_NONNULL mutable_blackstartenabled();
  void set_allocated_blackstartenabled(::commonmodule::StatusSPS* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_blackstartenabled(::commonmodule::StatusSPS* PROTOBUF_NULLABLE value);
  ::commonmodule::StatusSPS* PROTOBUF_NULLABLE unsafe_arena_release_blackstartenabled();

  private:
  const ::commonmodule::StatusSPS& _internal_blackstartenabled() const;
  ::commonmodule::StatusSPS* PROTOBUF_NONNULL _internal_mutable_blackstartenabled();

  public:
  // .commonmodule.StatusSPS frequencySetPointEnabled = 2;
  bool has_frequencysetpointenabled() const;
  void clear_frequencysetpointenabled() ;
  const ::commonmodule::StatusSPS& frequencysetpointenabled() const;
  [[nodiscard]] ::commonmodule::StatusSPS* PROTOBUF_NULLABLE release_frequencysetpointenabled();
  ::commonmodule::StatusSPS* PROTOBUF_NONNULL mutable_frequencysetpointenabled();
  void set_allocated_frequencysetpointenabled(::commonmodule::StatusSPS* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_frequencysetpointenabled(::commonmodule::StatusSPS* PROTOBUF_NULLABLE value);
  ::commonmodule::StatusSPS* PROTOBUF_NULLABLE unsafe_arena_release_frequencysetpointenabled();

  private:
  const ::commonmodule::StatusSPS& _internal_frequencysetpointenabled() const;
  ::commonmodule::StatusSPS* PROTOBUF_NONNULL _internal_mutable_frequencysetpointenabled();

  public:
  // .essmodule.ESSFunction function = 3;
  bool has_function() const;
  void clear_function() ;
  const ::essmodule::ESSFunction& function() const;
  [[nodiscard]] ::essmodule::ESSFunction* PROTOBUF_NULLABLE release_function();
  ::essmodule::ESSFunction* PROTOBUF_NONNULL mutable_function();
  void set_allocated_function(::essmodule::ESSFunction* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_function(::essmodule::ESSFunction* PROTOBUF_NULLABLE value);
  ::essmodule::ESSFunction* PROTOBUF_NULLABLE unsafe_arena_release_function();

  private:
  const ::essmodule::ESSFunction& _internal_function() const;
  ::essmodule::ESSFunction* PROTOBUF_NONNULL _internal_mutable_function();

  public:
  // .commonmodule.ENG_GridConnectModeKind mode = 4;
  bool has_mode() const;
  void clear_mode() ;
  const ::commonmodule::ENG_GridConnectModeKind& mode() const;
  [[nodiscard]] ::commonmodule::ENG_GridConnectModeKind* PROTOBUF_NULLABLE release_mode();
  ::commonmodule::ENG_GridConnectModeKind* PROTOBUF_NONNULL mutable_mode();
  void set_allocated_mode(::commonmodule::ENG_GridConnectModeKind* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_mode(::commonmodule::ENG_GridConnectModeKind* PROTOBUF_NULLABLE value);
  ::commonmodule::ENG_GridConnectModeKind* PROTOBUF_NULLABLE unsafe_arena_release_mode();

  private:
  const ::commonmodule::ENG_GridConnectModeKind& _internal_mode() const;
  ::commonmodule::ENG_GridConnectModeKind* PROTOBUF_NONNULL _internal_mutable_mode();

  public:
  // .google.protobuf.FloatValue pctHzDroop = 5;
  bool has_pcthzdroop() const;
  void clear_pcthzdroop() ;
  const ::google::protobuf::FloatValue& pcthzdroop() const;
  [[nodiscard]] ::google::protobuf::FloatValue* PROTOBUF_NULLABLE release_pcthzdroop();
  ::google::protobuf::FloatValue* PROTOBUF_NONNULL mutable_pcthzdroop();
  void set_allocated_pcthzdroop(::google::protobuf::FloatValue* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_pcthzdroop(::google::protobuf::FloatValue* PROTOBUF_NULLABLE value);
  ::google::protobuf::FloatValue* PROTOBUF_NULLABLE unsafe_arena_release_pcthzdroop();

  private:
  const ::google::protobuf::FloatValue& _internal_pcthzdroop() const;
  ::google::protobuf::FloatValue* PROTOBUF_NONNULL _internal_mutable_pcthzdroop();

  public:
  // .google.protobuf.FloatValue pctVDroop = 6;
  bool has_pctvdroop() const;
  void clear_pctvdroop() ;
  const ::google::protobuf::FloatValue& pctvdroop() const;
  [[nodiscard]] ::google::protobuf::FloatValue* PROTOBUF_NULLABLE release_pctvdroop();
  ::google::protobuf::FloatValue* PROTOBUF_NONNULL mutable_pctvdroop();
  void set_allocated_pctvdroop(::google::protobuf::FloatValue* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_pctvdroop(::google::protobuf::FloatValue* PROTOBUF_NULLABLE value);
  ::google::protobuf::FloatValue* PROTOBUF_NULLABLE unsafe_arena_release_pctvdroop();

  private:
  const ::google::protobuf::FloatValue& _internal_pctvdroop() const;
  ::google::protobuf::FloatValue* PROTOBUF_NONNULL _internal_mutable_pctvdroop();

  public:
  // .commonmodule.RampRate rampRates = 7;
  bool has_ramprates() const;
  void clear_ramprates() ;
  const ::commonmodule::RampRate& ramprates() const;
  [[nodiscard]] ::commonmodule::RampRate* PROTOBUF_NULLABLE release_ramprates();
  ::commonmodule::RampRate* PROTOBUF_NONNULL mutable_ramprates();
  void set_allocated_ramprates(::commonmodule::RampRate* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_ramprates(::commonmodule::RampRate* PROTOBUF_NULLABLE value);
  ::commonmodule::RampRate* PROTOBUF_NULLABLE unsafe_arena_release_ramprates();

  private:
  const ::commonmodule::RampRate& _internal_ramprates() const;
  ::commonmodule::RampRate* PROTOBUF_NONNULL _internal_mutable_ramprates();

  public:
  // .commonmodule.StatusSPS reactivePwrSetPointEnabled = 8;
  bool has_reactivepwrsetpointenabled() const;
  void clear_reactivepwrsetpointenabled() ;
  const ::commonmodule::StatusSPS& reactivepwrsetpointenabled() const;
  [[nodiscard]] ::commonmodule::StatusSPS* PROTOBUF_NULLABLE release_reactivepwrsetpointenabled();
  ::commonmodule::StatusSPS* PROTOBUF_NONNULL mutable_reactivepwrsetpointenabled();
  void set_allocated_reactivepwrsetpointenabled(::commonmodule::StatusSPS* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_reactivepwrsetpointenabled(::commonmodule::StatusSPS* PROTOBUF_NULLABLE value);
  ::commonmodule::StatusSPS* PROTOBUF_NULLABLE unsafe_arena_release_reactivepwrsetpointenabled();

  private:
  const ::commonmodule::StatusSPS& _internal_reactivepwrsetpointenabled() const;
  ::commonmodule::StatusSPS* PROTOBUF_NONNULL _internal_mutable_reactivepwrsetpointenabled();

  public:
  // .commonmodule.StatusSPS realPwrSetPointEnabled = 9;
  bool has_realpwrsetpointenabled() const;
  void clear_realpwrsetpointenabled() ;
  const ::commonmodule::StatusSPS& realpwrsetpointenabled() const;
  [[nodiscard]] ::commonmodule::StatusSPS* PROTOBUF_NULLABLE release_realpwrsetpointenabled();
  ::commonmodule::StatusSPS* PROTOBUF_NONNULL mutable_realpwrsetpointenabled();
  void set_allocated_realpwrsetpointenabled(::commonmodule::StatusSPS* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_realpwrsetpointenabled(::commonmodule::StatusSPS* PROTOBUF_NULLABLE value);
  ::commonmodule::StatusSPS* PROTOBUF_NULLABLE unsafe_arena_release_realpwrsetpointenabled();

  private:
  const ::commonmodule::StatusSPS& _internal_realpwrsetpointenabled() const;
  ::commonmodule::StatusSPS* PROTOBUF_NONNULL _internal_mutable_realpwrsetpointenabled();

  public:
  // .commonmodule.Optional_StateKind state = 10;
  bool has_state() const;
  void clear_state() ;
  const ::commonmodule::Optional_StateKind& state() const;
  [[nodiscard]] ::commonmodule::Optional_StateKind* PROTOBUF_NULLABLE release_state();
  ::commonmodule::Optional_StateKind* PROTOBUF_NONNULL mutable_state();
  void set_allocated_state(::commonmodule::Optional_StateKind* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_state(::commonmodule::Optional_StateKind* PROTOBUF_NULLABLE value);
  ::commonmodule::Optional_StateKind* PROTOBUF_NULLABLE unsafe_arena_release_state();

  private:
  const ::commonmodule::Optional_StateKind& _internal_state() const;
  ::commonmodule::Optional_StateKind* PROTOBUF_NONNULL _internal_mutable_state();

  public:
  // .commonmodule.StatusSPS syncBackToGrid = 11;
  bool has_syncbacktogrid() const;
  void clear_syncbacktogrid() ;
  const ::commonmodule::StatusSPS& syncbacktogrid() const;
  [[nodiscard]] ::commonmodule::StatusSPS* PROTOBUF_NULLABLE release_syncbacktogrid();
  ::commonmodule::StatusSPS* PROTOBUF_NONNULL mutable_syncbacktogrid();
  void set_allocated_syncbacktogrid(::commonmodule::StatusSPS* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_syncbacktogrid(::commonmodule::StatusSPS* PROTOBUF_NULLABLE value);
  ::commonmodule::StatusSPS* PROTOBUF_NULLABLE unsafe_arena_release_syncbacktogrid();

  private:
  const ::commonmodule::StatusSPS& _internal_syncbacktogrid() const;
  ::commonmodule::StatusSPS* PROTOBUF_NONNULL _internal_mutable_syncbacktogrid();

  public:
  // .commonmodule.StatusSPS transToIslndOnGridLossEnabled = 12;
  bool has_transtoislndongridlossenabled() const;
  void clear_transtoislndongridlossenabled() ;
  const ::commonmodule::StatusSPS& transtoislndongridlossenabled() const;
  [[nodiscard]] ::commonmodule::StatusSPS* PROTOBUF_NULLABLE release_transtoislndongridlossenabled();
  ::commonmodule::StatusSPS* PROTOBUF_NONNULL mutable_transtoislndongridlossenabled();
  void set_allocated_transtoislndongridlossenabled(::commonmodule::StatusSPS* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_transtoislndongridlossenabled(::commonmodule::StatusSPS* PROTOBUF_NULLABLE value);
  ::commonmodule::StatusSPS* PROTOBUF_NULLABLE unsafe_arena_release_transtoislndongridlossenabled();

  private:
  const ::commonmodule::StatusSPS& _internal_transtoislndongridlossenabled() const;
  ::commonmodule::StatusSPS* PROTOBUF_NONNULL _internal_mutable_transtoislndongridlossenabled();

  public:
  // .commonmodule.StatusSPS voltageSetPointEnabled = 13;
  bool has_voltagesetpointenabled() const;
  void clear_voltagesetpointenabled() ;
  const ::commonmodule::StatusSPS& voltagesetpointenabled() const;
  [[nodiscard]] ::commonmodule::StatusSPS* PROTOBUF_NULLABLE release_voltagesetpointenabled();
  ::commonmodule::StatusSPS* PROTOBUF_NONNULL mutable_voltagesetpointenabled();
  void set_allocated_voltagesetpointenabled(::commonmodule::StatusSPS* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_voltagesetpointenabled(::commonmodule::StatusSPS* PROTOBUF_NULLABLE value);
  ::commonmodule::StatusSPS* PROTOBUF_NULLABLE unsafe_arena_release_voltagesetpointenabled();

  private:
  const ::commonmodule::StatusSPS& _internal_voltagesetpointenabled() const;
  ::commonmodule::StatusSPS* PROTOBUF_NONNULL _internal_mutable_voltagesetpointenabled();

  public:
  // .commonmodule.EnterServiceAPC enterServiceOperation = 14;
  bool has_enterserviceoperation() const;
  void clear_enterserviceoperation() ;
  const ::commonmodule::EnterServiceAPC& enterserviceoperation() const;
  [[nodiscard]] ::commonmodule::EnterServiceAPC* PROTOBUF_NULLABLE release_enterserviceoperation();
  ::commonmodule::EnterServiceAPC* PROTOBUF_NONNULL mutable_enterserviceoperation();
  void set_allocated_enterserviceoperation(::commonmodule::EnterServiceAPC* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_enterserviceoperation(::commonmodule::EnterServiceAPC* PROTOBUF_NULLABLE value);
  ::commonmodule::EnterServiceAPC* PROTOBUF_NULLABLE unsafe_arena_release_enterserviceoperation();

  private:
  const ::commonmodule::EnterServiceAPC& _internal_enterserviceoperation() const;
  ::commonmodule::EnterServiceAPC* PROTOBUF_NONNULL _internal_mutable_enterserviceoperation();

  public:
  // .commonmodule.HzWAPC hzWOperation = 15;
  bool has_hzwoperation() const;
  void clear_hzwoperation() ;
  const ::commonmodule::HzWAPC& hzwoperation() const;
  [[nodiscard]] ::commonmodule::HzWAPC* PROTOBUF_NULLABLE release_hzwoperation();
  ::commonmodule::HzWAPC* PROTOBUF_NONNULL mutable_hzwoperation();
  void set_allocated_hzwoperation(::commonmodule::HzWAPC* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_hzwoperation(::commonmodule::HzWAPC* PROTOBUF_NULLABLE value);
  ::commonmodule::HzWAPC* PROTOBUF_NULLABLE unsafe_arena_release_hzwoperation();

  private:
  const ::commonmodule::HzWAPC& _internal_hzwoperation() const;
  ::commonmodule::HzWAPC* PROTOBUF_NONNULL _internal_mutable_hzwoperation();

  public:
  // .commonmodule.LimitWAPC limitWOperation = 16;
  bool has_limitwoperation() const;
  void clear_limitwoperation() ;
  const ::commonmodule::LimitWAPC& limitwoperation() const;
  [[nodiscard]] ::commonmodule::LimitWAPC* PROTOBUF_NULLABLE release_limitwoperation();
  ::commonmodule::LimitWAPC* PROTOBUF_NONNULL mutable_limitwoperation();
  void set_allocated_limitwoperation(::commonmodule::LimitWAPC* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_limitwoperation(::commonmodule::LimitWAPC* PROTOBUF_NULLABLE value);
  ::commonmodule::LimitWAPC* PROTOBUF_NULLABLE unsafe_arena_release_limitwoperation();

  private:
  const ::commonmodule::LimitWAPC& _internal_limitwoperation() const;
  ::commonmodule::LimitWAPC* PROTOBUF_NONNULL _internal_mutable_limitwoperation();

  public:
  // .commonmodule.PFSPC pFOperation = 17;
  bool has_pfoperation() const;
  void clear_pfoperation() ;
  const ::commonmodule::PFSPC& pfoperation() const;
  [[nodiscard]] ::commonmodule::PFSPC* PROTOBUF_NULLABLE release_pfoperation();
  ::commonmodule::PFSPC* PROTOBUF_NONNULL mutable_pfoperation();
  void set_allocated_pfoperation(::commonmodule::PFSPC* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_pfoperation(::commonmodule::PFSPC* PROTOBUF_NULLABLE value);
  ::commonmodule::PFSPC* PROTOBUF_NULLABLE unsafe_arena_release_pfoperation();

  private:
  const ::commonmodule::PFSPC& _internal_pfoperation() const;
  ::commonmodule::PFSPC* PROTOBUF_NONNULL _internal_mutable_pfoperation();

  public:
  // .commonmodule.TmHzCSG tmHzTripOperation = 18;
  bool has_tmhztripoperation() const;
  void clear_tmhztripoperation() ;
  const ::commonmodule::TmHzCSG& tmhztripoperation() const;
  [[nodiscard]] ::commonmodule::TmHzCSG* PROTOBUF_NULLABLE release_tmhztripoperation();
  ::commonmodule::TmHzCSG* PROTOBUF_NONNULL mutable_tmhztripoperation();
  void set_allocated_tmhztripoperation(::commonmodule::TmHzCSG* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_tmhztripoperation(::commonmodule::TmHzCSG* PROTOBUF_NULLABLE value);
  ::commonmodule::TmHzCSG* PROTOBUF_NULLABLE unsafe_arena_release_tmhztripoperation();

  private:
  const ::commonmodule::TmHzCSG& _internal_tmhztripoperation() const;
  ::commonmodule::TmHzCSG* PROTOBUF_NONNULL _internal_mutable_tmhztripoperation();

  public:
  // .commonmodule.TmVoltCSG tmVoltTripOperation = 19;
  bool has_tmvolttripoperation() const;
  void clear_tmvolttripoperation() ;
  const ::commonmodule::TmVoltCSG& tmvolttripoperation() const;
  [[nodiscard]] ::commonmodule::TmVoltCSG* PROTOBUF_NULLABLE release_tmvolttripoperation();
  ::commonmodule::TmVoltCSG* PROTOBUF_NONNULL mutable_tmvolttripoperation();
  void set_allocated_tmvolttripoperation(::commonmodule::TmVoltCSG* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_tmvolttripoperation(::commonmodule::TmVoltCSG* PROTOBUF_NULLABLE value);
  ::commonmodule::TmVoltCSG* PROTOBUF_NULLABLE unsafe_arena_release_tmvolttripoperation();

  private:
  const ::commonmodule::TmVoltCSG& _internal_tmvolttripoperation() const;
  ::commonmodule::TmVoltCSG* PROTOBUF_NONNULL _internal_mutable_tmvolttripoperation();

  public:
  // .commonmodule.VarSPC vArOperation = 20;
  bool has_varoperation() const;
  void clear_varoperation() ;
  const ::commonmodule::VarSPC& varoperation() const;
  [[nodiscard]] ::commonmodule::VarSPC* PROTOBUF_NULLABLE release_varoperation();
  ::commonmodule::VarSPC* PROTOBUF_NONNULL mutable_varoperation();
  void set_allocated_varoperation(::commonmodule::VarSPC* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_varoperation(::commonmodule::VarSPC* PROTOBUF_NULLABLE value);
  ::commonmodule::VarSPC* PROTOBUF_NULLABLE unsafe_arena_release_varoperation();

  private:
  const ::commonmodule::VarSPC& _internal_varoperation() const;
  ::commonmodule::VarSPC* PROTOBUF_NONNULL _internal_mutable_varoperation();

  public:
  // .commonmodule.VoltVarCSG voltVarOperation = 21;
  bool has_voltvaroperation() const;
  void clear_voltvaroperation() ;
  const ::commonmodule::VoltVarCSG& voltvaroperation() const;
  [[nodiscard]] ::commonmodule::VoltVarCSG* PROTOBUF_NULLABLE release_voltvaroperation();
  ::commonmodule::VoltVarCSG* PROTOBUF_NONNULL mutable_voltvaroperation();
  void set_allocated_voltvaroperation(::commonmodule::VoltVarCSG* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_voltvaroperation(::commonmodule::VoltVarCSG* PROTOBUF_NULLABLE value);
  ::commonmodule::VoltVarCSG* PROTOBUF_NULLABLE unsafe_arena_release_voltvaroperation();

  private:
  const ::commonmodule::VoltVarCSG& _internal_voltvaroperation() const;
  ::commonmodule::VoltVarCSG* PROTOBUF_NONNULL _internal_mutable_voltvaroperation();

  public:
  // .commonmodule.VoltWCSG voltWOperation = 22;
  bool has_voltwoperation() const;
  void clear_voltwoperation() ;
  const ::commonmodule::VoltWCSG& voltwoperation() const;
  [[nodiscard]] ::commonmodule::VoltWCSG* PROTOBUF_NULLABLE release_voltwoperation();
  ::commonmodule::VoltWCSG* PROTOBUF_NONNULL mutable_voltwoperation();
  void set_allocated_voltwoperation(::commonmodule::VoltWCSG* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_voltwoperation(::commonmodule::VoltWCSG* PROTOBUF_NULLABLE value);
  ::commonmodule::VoltWCSG* PROTOBUF_NULLABLE unsafe_arena_release_voltwoperation();

  private:
  const ::commonmodule::VoltWCSG& _internal_voltwoperation() const;
  ::commonmodule::VoltWCSG* PROTOBUF_NONNULL _internal_mutable_voltwoperation();

  public:
  // .commonmodule.WVarCSG wVarOperation = 23;
  bool has_wvaroperation() const;
  void clear_wvaroperation() ;
  const ::commonmodule::WVarCSG& wvaroperation() const;
  [[nodiscard]] ::commonmodule::WVarCSG* PROTOBUF_NULLABLE release_wvaroperation();
  ::commonmodule::WVarCSG* PROTOBUF_NONNULL mutable_wvaroperation();
  void set_allocated_wvaroperation(::commonmodule::WVarCSG* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_wvaroperation(::commonmodule::WVarCSG* PROTOBUF_NULLABLE value);
  ::commonmodule::WVarCSG* PROTOBUF_NULLABLE unsafe_arena_release_wvaroperation();

  private:
  const ::commonmodule::WVarCSG& _internal_wvaroperation() const;
  ::commonmodule::WVarCSG* PROTOBUF_NONNULL _internal_mutable_wvaroperation();

  public:
  // @@protoc_insertion_point(class_scope:essmodule.ESSPointStatus)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<5, 23,
                                   23, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ESSPointStatus& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::commonmodule::StatusSPS* PROTOBUF_NULLABLE blackstartenabled_;
    ::commonmodule::StatusSPS* PROTOBUF_NULLABLE frequencysetpointenabled_;
    ::essmodule::ESSFunction* PROTOBUF_NULLABLE function_;
    ::commonmodule::ENG_GridConnectModeKind* PROTOBUF_NULLABLE mode_;
    ::google::protobuf::FloatValue* PROTOBUF_NULLABLE pcthzdroop_;
    ::google::protobuf::FloatValue* PROTOBUF_NULLABLE pctvdroop_;
    ::commonmodule::RampRate* PROTOBUF_NULLABLE ramprates_;
    ::commonmodule::StatusSPS* PROTOBUF_NULLABLE reactivepwrsetpointenabled_;
    ::commonmodule::StatusSPS* PROTOBUF_NULLABLE realpwrsetpointenabled_;
    ::commonmodule::Optional_StateKind* PROTOBUF_NULLABLE state_;
    ::commonmodule::StatusSPS* PROTOBUF_NULLABLE syncbacktogrid_;
    ::commonmodule::StatusSPS* PROTOBUF_NULLABLE transtoislndongridlossenabled_;
    ::commonmodule::StatusSPS* PROTOBUF_NULLABLE voltagesetpointenabled_;
    ::commonmodule::EnterServiceAPC* PROTOBUF_NULLABLE enterserviceoperation_;
    ::commonmodule::HzWAPC* PROTOBUF_NULLABLE hzwoperation_;
    ::commonmodule::LimitWAPC* PROTOBUF_NULLABLE limitwoperation_;
    ::commonmodule::PFSPC* PROTOBUF_NULLABLE pfoperation_;
    ::commonmodule::TmHzCSG* PROTOBUF_NULLABLE tmhztripoperation_;
    ::commonmodule::TmVoltCSG* PROTOBUF_NULLABLE tmvolttripoperation_;
    ::commonmodule::VarSPC* PROTOBUF_NULLABLE varoperation_;
    ::commonmodule::VoltVarCSG* PROTOBUF_NULLABLE voltvaroperation_;
    ::commonmodule::VoltWCSG* PROTOBUF_NULLABLE voltwoperation_;
    ::commonmodule::WVarCSG* PROTOBUF_NULLABLE wvaroperation_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_essmodule_2fessmodule_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ESSPointStatus_class_data_;
// -------------------------------------------------------------------

class ESSPoint final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:essmodule.ESSPoint) */ {
 public:
  inline ESSPoint() : ESSPoint(nullptr) {}
  ~ESSPoint() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ESSPoint* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ESSPoint));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ESSPoint(::google::protobuf::internal::ConstantInitialized);

  inline ESSPoint(const ESSPoint& from) : ESSPoint(nullptr, from) {}
  inline ESSPoint(ESSPoint&& from) noexcept
      : ESSPoint(nullptr, ::std::move(from)) {}
  inline ESSPoint& operator=(const ESSPoint& from) {
    CopyFrom(from);
    return *this;
  }
  inline ESSPoint& operator=(ESSPoint&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ESSPoint& default_instance() {
    return *reinterpret_cast<const ESSPoint*>(
        &_ESSPoint_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(ESSPoint& a, ESSPoint& b) { a.Swap(&b); }
  inline void Swap(ESSPoint* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ESSPoint* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ESSPoint* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ESSPoint>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ESSPoint& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ESSPoint& from) { ESSPoint::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ESSPoint* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "essmodule.ESSPoint"; }

 protected:
  explicit ESSPoint(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ESSPoint(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ESSPoint& from);
  ESSPoint(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ESSPoint&& from) noexcept
      : ESSPoint(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBlackStartEnabledFieldNumber = 1,
    kFunctionFieldNumber = 3,
    kModeFieldNumber = 4,
    kRampRatesFieldNumber = 7,
    kResetFieldNumber = 10,
    kStateFieldNumber = 11,
    kTransToIslndOnGridLossEnabledFieldNumber = 13,
    kEnterServiceOperationFieldNumber = 16,
    kHzWOperationFieldNumber = 17,
    kLimitWOperationFieldNumber = 18,
    kPFOperationFieldNumber = 19,
    kTmHzTripOperationFieldNumber = 20,
    kTmVoltTripOperationFieldNumber = 21,
    kVArOperationFieldNumber = 22,
    kVoltVarOperationFieldNumber = 23,
    kVoltWOperationFieldNumber = 24,
    kWVarOperationFieldNumber = 25,
    kWOperationFieldNumber = 26,
  };
  // .commonmodule.ControlSPC blackStartEnabled = 1;
  bool has_blackstartenabled() const;
  void clear_blackstartenabled() ;
  const ::commonmodule::ControlSPC& blackstartenabled() const;
  [[nodiscard]] ::commonmodule::ControlSPC* PROTOBUF_NULLABLE release_blackstartenabled();
  ::commonmodule::ControlSPC* PROTOBUF_NONNULL mutable_blackstartenabled();
  void set_allocated_blackstartenabled(::commonmodule::ControlSPC* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_blackstartenabled(::commonmodule::ControlSPC* PROTOBUF_NULLABLE value);
  ::commonmodule::ControlSPC* PROTOBUF_NULLABLE unsafe_arena_release_blackstartenabled();

  private:
  const ::commonmodule::ControlSPC& _internal_blackstartenabled() const;
  ::commonmodule::ControlSPC* PROTOBUF_NONNULL _internal_mutable_blackstartenabled();

  public:
  // .essmodule.ESSFunction function = 3;
  bool has_function() const;
  void clear_function() ;
  const ::essmodule::ESSFunction& function() const;
  [[nodiscard]] ::essmodule::ESSFunction* PROTOBUF_NULLABLE release_function();
  ::essmodule::ESSFunction* PROTOBUF_NONNULL mutable_function();
  void set_allocated_function(::essmodule::ESSFunction* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_function(::essmodule::ESSFunction* PROTOBUF_NULLABLE value);
  ::essmodule::ESSFunction* PROTOBUF_NULLABLE unsafe_arena_release_function();

  private:
  const ::essmodule::ESSFunction& _internal_function() const;
  ::essmodule::ESSFunction* PROTOBUF_NONNULL _internal_mutable_function();

  public:
  // .commonmodule.ENG_GridConnectModeKind mode = 4;
  bool has_mode() const;
  void clear_mode() ;
  const ::commonmodule::ENG_GridConnectModeKind& mode() const;
  [[nodiscard]] ::commonmodule::ENG_GridConnectModeKind* PROTOBUF_NULLABLE release_mode();
  ::commonmodule::ENG_GridConnectModeKind* PROTOBUF_NONNULL mutable_mode();
  void set_allocated_mode(::commonmodule::ENG_GridConnectModeKind* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_mode(::commonmodule::ENG_GridConnectModeKind* PROTOBUF_NULLABLE value);
  ::commonmodule::ENG_GridConnectModeKind* PROTOBUF_NULLABLE unsafe_arena_release_mode();

  private:
  const ::commonmodule::ENG_GridConnectModeKind& _internal_mode() const;
  ::commonmodule::ENG_GridConnectModeKind* PROTOBUF_NONNULL _internal_mutable_mode();

  public:
  // .commonmodule.RampRate rampRates = 7;
  bool has_ramprates() const;
  void clear_ramprates() ;
  const ::commonmodule::RampRate& ramprates() const;
  [[nodiscard]] ::commonmodule::RampRate* PROTOBUF_NULLABLE release_ramprates();
  ::commonmodule::RampRate* PROTOBUF_NONNULL mutable_ramprates();
  void set_allocated_ramprates(::commonmodule::RampRate* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_ramprates(::commonmodule::RampRate* PROTOBUF_NULLABLE value);
  ::commonmodule::RampRate* PROTOBUF_NULLABLE unsafe_arena_release_ramprates();

  private:
  const ::commonmodule::RampRate& _internal_ramprates() const;
  ::commonmodule::RampRate* PROTOBUF_NONNULL _internal_mutable_ramprates();

  public:
  // .commonmodule.ControlSPC reset = 10;
  bool has_reset() const;
  void clear_reset() ;
  const ::commonmodule::ControlSPC& reset() const;
  [[nodiscard]] ::commonmodule::ControlSPC* PROTOBUF_NULLABLE release_reset();
  ::commonmodule::ControlSPC* PROTOBUF_NONNULL mutable_reset();
  void set_allocated_reset(::commonmodule::ControlSPC* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_reset(::commonmodule::ControlSPC* PROTOBUF_NULLABLE value);
  ::commonmodule::ControlSPC* PROTOBUF_NULLABLE unsafe_arena_release_reset();

  private:
  const ::commonmodule::ControlSPC& _internal_reset() const;
  ::commonmodule::ControlSPC* PROTOBUF_NONNULL _internal_mutable_reset();

  public:
  // .commonmodule.Optional_StateKind state = 11;
  bool has_state() const;
  void clear_state() ;
  const ::commonmodule::Optional_StateKind& state() const;
  [[nodiscard]] ::commonmodule::Optional_StateKind* PROTOBUF_NULLABLE release_state();
  ::commonmodule::Optional_StateKind* PROTOBUF_NONNULL mutable_state();
  void set_allocated_state(::commonmodule::Optional_StateKind* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_state(::commonmodule::Optional_StateKind* PROTOBUF_NULLABLE value);
  ::commonmodule::Optional_StateKind* PROTOBUF_NULLABLE unsafe_arena_release_state();

  private:
  const ::commonmodule::Optional_StateKind& _internal_state() const;
  ::commonmodule::Optional_StateKind* PROTOBUF_NONNULL _internal_mutable_state();

  public:
  // .commonmodule.ControlSPC transToIslndOnGridLossEnabled = 13;
  bool has_transtoislndongridlossenabled() const;
  void clear_transtoislndongridlossenabled() ;
  const ::commonmodule::ControlSPC& transtoislndongridlossenabled() const;
  [[nodiscard]] ::commonmodule::ControlSPC* PROTOBUF_NULLABLE release_transtoislndongridlossenabled();
  ::commonmodule::ControlSPC* PROTOBUF_NONNULL mutable_transtoislndongridlossenabled();
  void set_allocated_transtoislndongridlossenabled(::commonmodule::ControlSPC* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_transtoislndongridlossenabled(::commonmodule::ControlSPC* PROTOBUF_NULLABLE value);
  ::commonmodule::ControlSPC* PROTOBUF_NULLABLE unsafe_arena_release_transtoislndongridlossenabled();

  private:
  const ::commonmodule::ControlSPC& _internal_transtoislndongridlossenabled() const;
  ::commonmodule::ControlSPC* PROTOBUF_NONNULL _internal_mutable_transtoislndongridlossenabled();

  public:
  // .commonmodule.EnterServiceAPC enterServiceOperation = 16;
  bool has_enterserviceoperation() const;
  void clear_enterserviceoperation() ;
  const ::commonmodule::EnterServiceAPC& enterserviceoperation() const;
  [[nodiscard]] ::commonmodule::EnterServiceAPC* PROTOBUF_NULLABLE release_enterserviceoperation();
  ::commonmodule::EnterServiceAPC* PROTOBUF_NONNULL mutable_enterserviceoperation();
  void set_allocated_enterserviceoperation(::commonmodule::EnterServiceAPC* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_enterserviceoperation(::commonmodule::EnterServiceAPC* PROTOBUF_NULLABLE value);
  ::commonmodule::EnterServiceAPC* PROTOBUF_NULLABLE unsafe_arena_release_enterserviceoperation();

  private:
  const ::commonmodule::EnterServiceAPC& _internal_enterserviceoperation() const;
  ::commonmodule::EnterServiceAPC* PROTOBUF_NONNULL _internal_mutable_enterserviceoperation();

  public:
  // .commonmodule.HzWAPC hzWOperation = 17;
  bool has_hzwoperation() const;
  void clear_hzwoperation() ;
  const ::commonmodule::HzWAPC& hzwoperation() const;
  [[nodiscard]] ::commonmodule::HzWAPC* PROTOBUF_NULLABLE release_hzwoperation();
  ::commonmodule::HzWAPC* PROTOBUF_NONNULL mutable_hzwoperation();
  void set_allocated_hzwoperation(::commonmodule::HzWAPC* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_hzwoperation(::commonmodule::HzWAPC* PROTOBUF_NULLABLE value);
  ::commonmodule::HzWAPC* PROTOBUF_NULLABLE unsafe_arena_release_hzwoperation();

  private:
  const ::commonmodule::HzWAPC& _internal_hzwoperation() const;
  ::commonmodule::HzWAPC* PROTOBUF_NONNULL _internal_mutable_hzwoperation();

  public:
  // .commonmodule.LimitWAPC limitWOperation = 18;
  bool has_limitwoperation() const;
  void clear_limitwoperation() ;
  const ::commonmodule::LimitWAPC& limitwoperation() const;
  [[nodiscard]] ::commonmodule::LimitWAPC* PROTOBUF_NULLABLE release_limitwoperation();
  ::commonmodule::LimitWAPC* PROTOBUF_NONNULL mutable_limitwoperation();
  void set_allocated_limitwoperation(::commonmodule::LimitWAPC* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_limitwoperation(::commonmodule::LimitWAPC* PROTOBUF_NULLABLE value);
  ::commonmodule::LimitWAPC* PROTOBUF_NULLABLE unsafe_arena_release_limitwoperation();

  private:
  const ::commonmodule::LimitWAPC& _internal_limitwoperation() const;
  ::commonmodule::LimitWAPC* PROTOBUF_NONNULL _internal_mutable_limitwoperation();

  public:
  // .commonmodule.PFSPC pFOperation = 19;
  bool has_pfoperation() const;
  void clear_pfoperation() ;
  const ::commonmodule::PFSPC& pfoperation() const;
  [[nodiscard]] ::commonmodule::PFSPC* PROTOBUF_NULLABLE release_pfoperation();
  ::commonmodule::PFSPC* PROTOBUF_NONNULL mutable_pfoperation();
  void set_allocated_pfoperation(::commonmodule::PFSPC* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_pfoperation(::commonmodule::PFSPC* PROTOBUF_NULLABLE value);
  ::commonmodule::PFSPC* PROTOBUF_NULLABLE unsafe_arena_release_pfoperation();

  private:
  const ::commonmodule::PFSPC& _internal_pfoperation() const;
  ::commonmodule::PFSPC* PROTOBUF_NONNULL _internal_mutable_pfoperation();

  public:
  // .commonmodule.TmHzCSG tmHzTripOperation = 20;
  bool has_tmhztripoperation() const;
  void clear_tmhztripoperation() ;
  const ::commonmodule::TmHzCSG& tmhztripoperation() const;
  [[nodiscard]] ::commonmodule::TmHzCSG* PROTOBUF_NULLABLE release_tmhztripoperation();
  ::commonmodule::TmHzCSG* PROTOBUF_NONNULL mutable_tmhztripoperation();
  void set_allocated_tmhztripoperation(::commonmodule::TmHzCSG* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_tmhztripoperation(::commonmodule::TmHzCSG* PROTOBUF_NULLABLE value);
  ::commonmodule::TmHzCSG* PROTOBUF_NULLABLE unsafe_arena_release_tmhztripoperation();

  private:
  const ::commonmodule::TmHzCSG& _internal_tmhztripoperation() const;
  ::commonmodule::TmHzCSG* PROTOBUF_NONNULL _internal_mutable_tmhztripoperation();

  public:
  // .commonmodule.TmVoltCSG tmVoltTripOperation = 21;
  bool has_tmvolttripoperation() const;
  void clear_tmvolttripoperation() ;
  const ::commonmodule::TmVoltCSG& tmvolttripoperation() const;
  [[nodiscard]] ::commonmodule::TmVoltCSG* PROTOBUF_NULLABLE release_tmvolttripoperation();
  ::commonmodule::TmVoltCSG* PROTOBUF_NONNULL mutable_tmvolttripoperation();
  void set_allocated_tmvolttripoperation(::commonmodule::TmVoltCSG* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_tmvolttripoperation(::commonmodule::TmVoltCSG* PROTOBUF_NULLABLE value);
  ::commonmodule::TmVoltCSG* PROTOBUF_NULLABLE unsafe_arena_release_tmvolttripoperation();

  private:
  const ::commonmodule::TmVoltCSG& _internal_tmvolttripoperation() const;
  ::commonmodule::TmVoltCSG* PROTOBUF_NONNULL _internal_mutable_tmvolttripoperation();

  public:
  // .commonmodule.VarSPC vArOperation = 22;
  bool has_varoperation() const;
  void clear_varoperation() ;
  const ::commonmodule::VarSPC& varoperation() const;
  [[nodiscard]] ::commonmodule::VarSPC* PROTOBUF_NULLABLE release_varoperation();
  ::commonmodule::VarSPC* PROTOBUF_NONNULL mutable_varoperation();
  void set_allocated_varoperation(::commonmodule::VarSPC* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_varoperation(::commonmodule::VarSPC* PROTOBUF_NULLABLE value);
  ::commonmodule::VarSPC* PROTOBUF_NULLABLE unsafe_arena_release_varoperation();

  private:
  const ::commonmodule::VarSPC& _internal_varoperation() const;
  ::commonmodule::VarSPC* PROTOBUF_NONNULL _internal_mutable_varoperation();

  public:
  // .commonmodule.VoltVarCSG voltVarOperation = 23;
  bool has_voltvaroperation() const;
  void clear_voltvaroperation() ;
  const ::commonmodule::VoltVarCSG& voltvaroperation() const;
  [[nodiscard]] ::commonmodule::VoltVarCSG* PROTOBUF_NULLABLE release_voltvaroperation();
  ::commonmodule::VoltVarCSG* PROTOBUF_NONNULL mutable_voltvaroperation();
  void set_allocated_voltvaroperation(::commonmodule::VoltVarCSG* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_voltvaroperation(::commonmodule::VoltVarCSG* PROTOBUF_NULLABLE value);
  ::commonmodule::VoltVarCSG* PROTOBUF_NULLABLE unsafe_arena_release_voltvaroperation();

  private:
  const ::commonmodule::VoltVarCSG& _internal_voltvaroperation() const;
  ::commonmodule::VoltVarCSG* PROTOBUF_NONNULL _internal_mutable_voltvaroperation();

  public:
  // .commonmodule.VoltWCSG voltWOperation = 24;
  bool has_voltwoperation() const;
  void clear_voltwoperation() ;
  const ::commonmodule::VoltWCSG& voltwoperation() const;
  [[nodiscard]] ::commonmodule::VoltWCSG* PROTOBUF_NULLABLE release_voltwoperation();
  ::commonmodule::VoltWCSG* PROTOBUF_NONNULL mutable_voltwoperation();
  void set_allocated_voltwoperation(::commonmodule::VoltWCSG* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_voltwoperation(::commonmodule::VoltWCSG* PROTOBUF_NULLABLE value);
  ::commonmodule::VoltWCSG* PROTOBUF_NULLABLE unsafe_arena_release_voltwoperation();

  private:
  const ::commonmodule::VoltWCSG& _internal_voltwoperation() const;
  ::commonmodule::VoltWCSG* PROTOBUF_NONNULL _internal_mutable_voltwoperation();

  public:
  // .commonmodule.WVarCSG wVarOperation = 25;
  bool has_wvaroperation() const;
  void clear_wvaroperation() ;
  const ::commonmodule::WVarCSG& wvaroperation() const;
  [[nodiscard]] ::commonmodule::WVarCSG* PROTOBUF_NULLABLE release_wvaroperation();
  ::commonmodule::WVarCSG* PROTOBUF_NONNULL mutable_wvaroperation();
  void set_allocated_wvaroperation(::commonmodule::WVarCSG* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_wvaroperation(::commonmodule::WVarCSG* PROTOBUF_NULLABLE value);
  ::commonmodule::WVarCSG* PROTOBUF_NULLABLE unsafe_arena_release_wvaroperation();

  private:
  const ::commonmodule::WVarCSG& _internal_wvaroperation() const;
  ::commonmodule::WVarCSG* PROTOBUF_NONNULL _internal_mutable_wvaroperation();

  public:
  // .commonmodule.WSPC wOperation = 26;
  bool has_woperation() const;
  void clear_woperation() ;
  const ::commonmodule::WSPC& woperation() const;
  [[nodiscard]] ::commonmodule::WSPC* PROTOBUF_NULLABLE release_woperation();
  ::commonmodule::WSPC* PROTOBUF_NONNULL mutable_woperation();
  void set_allocated_woperation(::commonmodule::WSPC* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_woperation(::commonmodule::WSPC* PROTOBUF_NULLABLE value);
  ::commonmodule::WSPC* PROTOBUF_NULLABLE unsafe_arena_release_woperation();

  private:
  const ::commonmodule::WSPC& _internal_woperation() const;
  ::commonmodule::WSPC* PROTOBUF_NONNULL _internal_mutable_woperation();

  public:
  // @@protoc_insertion_point(class_scope:essmodule.ESSPoint)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<5, 18,
                                   18, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ESSPoint& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::commonmodule::ControlSPC* PROTOBUF_NULLABLE blackstartenabled_;
    ::essmodule::ESSFunction* PROTOBUF_NULLABLE function_;
    ::commonmodule::ENG_GridConnectModeKind* PROTOBUF_NULLABLE mode_;
    ::commonmodule::RampRate* PROTOBUF_NULLABLE ramprates_;
    ::commonmodule::ControlSPC* PROTOBUF_NULLABLE reset_;
    ::commonmodule::Optional_StateKind* PROTOBUF_NULLABLE state_;
    ::commonmodule::ControlSPC* PROTOBUF_NULLABLE transtoislndongridlossenabled_;
    ::commonmodule::EnterServiceAPC* PROTOBUF_NULLABLE enterserviceoperation_;
    ::commonmodule::HzWAPC* PROTOBUF_NULLABLE hzwoperation_;
    ::commonmodule::LimitWAPC* PROTOBUF_NULLABLE limitwoperation_;
    ::commonmodule::PFSPC* PROTOBUF_NULLABLE pfoperation_;
    ::commonmodule::TmHzCSG* PROTOBUF_NULLABLE tmhztripoperation_;
    ::commonmodule::TmVoltCSG* PROTOBUF_NULLABLE tmvolttripoperation_;
    ::commonmodule::VarSPC* PROTOBUF_NULLABLE varoperation_;
    ::commonmodule::VoltVarCSG* PROTOBUF_NULLABLE voltvaroperation_;
    ::commonmodule::VoltWCSG* PROTOBUF_NULLABLE voltwoperation_;
    ::commonmodule::WVarCSG* PROTOBUF_NULLABLE wvaroperation_;
    ::commonmodule::WSPC* PROTOBUF_NULLABLE woperation_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_essmodule_2fessmodule_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ESSPoint_class_data_;
// -------------------------------------------------------------------

class ESSCapabilityOverride final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:essmodule.ESSCapabilityOverride) */ {
 public:
  inline ESSCapabilityOverride() : ESSCapabilityOverride(nullptr) {}
  ~ESSCapabilityOverride() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ESSCapabilityOverride* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ESSCapabilityOverride));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ESSCapabilityOverride(::google::protobuf::internal::ConstantInitialized);

  inline ESSCapabilityOverride(const ESSCapabilityOverride& from) : ESSCapabilityOverride(nullptr, from) {}
  inline ESSCapabilityOverride(ESSCapabilityOverride&& from) noexcept
      : ESSCapabilityOverride(nullptr, ::std::move(from)) {}
  inline ESSCapabilityOverride& operator=(const ESSCapabilityOverride& from) {
    CopyFrom(from);
    return *this;
  }
  inline ESSCapabilityOverride& operator=(ESSCapabilityOverride&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ESSCapabilityOverride& default_instance() {
    return *reinterpret_cast<const ESSCapabilityOverride*>(
        &_ESSCapabilityOverride_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(ESSCapabilityOverride& a, ESSCapabilityOverride& b) { a.Swap(&b); }
  inline void Swap(ESSCapabilityOverride* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ESSCapabilityOverride* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ESSCapabilityOverride* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ESSCapabilityOverride>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ESSCapabilityOverride& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ESSCapabilityOverride& from) { ESSCapabilityOverride::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ESSCapabilityOverride* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "essmodule.ESSCapabilityOverride"; }

 protected:
  explicit ESSCapabilityOverride(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ESSCapabilityOverride(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ESSCapabilityOverride& from);
  ESSCapabilityOverride(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ESSCapabilityOverride&& from) noexcept
      : ESSCapabilityOverride(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNameplateValueFieldNumber = 1,
    kEssCapabilityConfigurationFieldNumber = 2,
  };
  // .commonmodule.NameplateValue nameplateValue = 1 [(.uml.option_parent_message) = true];
  bool has_nameplatevalue() const;
  void clear_nameplatevalue() ;
  const ::commonmodule::NameplateValue& nameplatevalue() const;
  [[nodiscard]] ::commonmodule::NameplateValue* PROTOBUF_NULLABLE release_nameplatevalue();
  ::commonmodule::NameplateValue* PROTOBUF_NONNULL mutable_nameplatevalue();
  void set_allocated_nameplatevalue(::commonmodule::NameplateValue* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_nameplatevalue(::commonmodule::NameplateValue* PROTOBUF_NULLABLE value);
  ::commonmodule::NameplateValue* PROTOBUF_NULLABLE unsafe_arena_release_nameplatevalue();

  private:
  const ::commonmodule::NameplateValue& _internal_nameplatevalue() const;
  ::commonmodule::NameplateValue* PROTOBUF_NONNULL _internal_mutable_nameplatevalue();

  public:
  // .essmodule.ESSCapabilityConfiguration essCapabilityConfiguration = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  bool has_esscapabilityconfiguration() const;
  void clear_esscapabilityconfiguration() ;
  const ::essmodule::ESSCapabilityConfiguration& esscapabilityconfiguration() const;
  [[nodiscard]] ::essmodule::ESSCapabilityConfiguration* PROTOBUF_NULLABLE release_esscapabilityconfiguration();
  ::essmodule::ESSCapabilityConfiguration* PROTOBUF_NONNULL mutable_esscapabilityconfiguration();
  void set_allocated_esscapabilityconfiguration(::essmodule::ESSCapabilityConfiguration* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_esscapabilityconfiguration(::essmodule::ESSCapabilityConfiguration* PROTOBUF_NULLABLE value);
  ::essmodule::ESSCapabilityConfiguration* PROTOBUF_NULLABLE unsafe_arena_release_esscapabilityconfiguration();

  private:
  const ::essmodule::ESSCapabilityConfiguration& _internal_esscapabilityconfiguration() const;
  ::essmodule::ESSCapabilityConfiguration* PROTOBUF_NONNULL _internal_mutable_esscapabilityconfiguration();

  public:
  // @@protoc_insertion_point(class_scope:essmodule.ESSCapabilityOverride)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   2, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ESSCapabilityOverride& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::commonmodule::NameplateValue* PROTOBUF_NULLABLE nameplatevalue_;
    ::essmodule::ESSCapabilityConfiguration* PROTOBUF_NULLABLE esscapabilityconfiguration_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_essmodule_2fessmodule_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ESSCapabilityOverride_class_data_;
// -------------------------------------------------------------------

class ESSCapability final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:essmodule.ESSCapability) */ {
 public:
  inline ESSCapability() : ESSCapability(nullptr) {}
  ~ESSCapability() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ESSCapability* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ESSCapability));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ESSCapability(::google::protobuf::internal::ConstantInitialized);

  inline ESSCapability(const ESSCapability& from) : ESSCapability(nullptr, from) {}
  inline ESSCapability(ESSCapability&& from) noexcept
      : ESSCapability(nullptr, ::std::move(from)) {}
  inline ESSCapability& operator=(const ESSCapability& from) {
    CopyFrom(from);
    return *this;
  }
  inline ESSCapability& operator=(ESSCapability&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ESSCapability& default_instance() {
    return *reinterpret_cast<const ESSCapability*>(
        &_ESSCapability_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(ESSCapability& a, ESSCapability& b) { a.Swap(&b); }
  inline void Swap(ESSCapability* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ESSCapability* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ESSCapability* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ESSCapability>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ESSCapability& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ESSCapability& from) { ESSCapability::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ESSCapability* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "essmodule.ESSCapability"; }

 protected:
  explicit ESSCapability(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ESSCapability(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ESSCapability& from);
  ESSCapability(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ESSCapability&& from) noexcept
      : ESSCapability(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNameplateValueFieldNumber = 1,
    kEssCapabilityRatingsFieldNumber = 2,
    kEssCapabilityConfigurationFieldNumber = 3,
  };
  // .commonmodule.NameplateValue nameplateValue = 1 [(.uml.option_parent_message) = true];
  bool has_nameplatevalue() const;
  void clear_nameplatevalue() ;
  const ::commonmodule::NameplateValue& nameplatevalue() const;
  [[nodiscard]] ::commonmodule::NameplateValue* PROTOBUF_NULLABLE release_nameplatevalue();
  ::commonmodule::NameplateValue* PROTOBUF_NONNULL mutable_nameplatevalue();
  void set_allocated_nameplatevalue(::commonmodule::NameplateValue* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_nameplatevalue(::commonmodule::NameplateValue* PROTOBUF_NULLABLE value);
  ::commonmodule::NameplateValue* PROTOBUF_NULLABLE unsafe_arena_release_nameplatevalue();

  private:
  const ::commonmodule::NameplateValue& _internal_nameplatevalue() const;
  ::commonmodule::NameplateValue* PROTOBUF_NONNULL _internal_mutable_nameplatevalue();

  public:
  // .essmodule.ESSCapabilityRatings essCapabilityRatings = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  bool has_esscapabilityratings() const;
  void clear_esscapabilityratings() ;
  const ::essmodule::ESSCapabilityRatings& esscapabilityratings() const;
  [[nodiscard]] ::essmodule::ESSCapabilityRatings* PROTOBUF_NULLABLE release_esscapabilityratings();
  ::essmodule::ESSCapabilityRatings* PROTOBUF_NONNULL mutable_esscapabilityratings();
  void set_allocated_esscapabilityratings(::essmodule::ESSCapabilityRatings* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_esscapabilityratings(::essmodule::ESSCapabilityRatings* PROTOBUF_NULLABLE value);
  ::essmodule::ESSCapabilityRatings* PROTOBUF_NULLABLE unsafe_arena_release_esscapabilityratings();

  private:
  const ::essmodule::ESSCapabilityRatings& _internal_esscapabilityratings() const;
  ::essmodule::ESSCapabilityRatings* PROTOBUF_NONNULL _internal_mutable_esscapabilityratings();

  public:
  // .essmodule.ESSCapabilityConfiguration essCapabilityConfiguration = 3;
  bool has_esscapabilityconfiguration() const;
  void clear_esscapabilityconfiguration() ;
  const ::essmodule::ESSCapabilityConfiguration& esscapabilityconfiguration() const;
  [[nodiscard]] ::essmodule::ESSCapabilityConfiguration* PROTOBUF_NULLABLE release_esscapabilityconfiguration();
  ::essmodule::ESSCapabilityConfiguration* PROTOBUF_NONNULL mutable_esscapabilityconfiguration();
  void set_allocated_esscapabilityconfiguration(::essmodule::ESSCapabilityConfiguration* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_esscapabilityconfiguration(::essmodule::ESSCapabilityConfiguration* PROTOBUF_NULLABLE value);
  ::essmodule::ESSCapabilityConfiguration* PROTOBUF_NULLABLE unsafe_arena_release_esscapabilityconfiguration();

  private:
  const ::essmodule::ESSCapabilityConfiguration& _internal_esscapabilityconfiguration() const;
  ::essmodule::ESSCapabilityConfiguration* PROTOBUF_NONNULL _internal_mutable_esscapabilityconfiguration();

  public:
  // @@protoc_insertion_point(class_scope:essmodule.ESSCapability)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   3, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ESSCapability& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::commonmodule::NameplateValue* PROTOBUF_NULLABLE nameplatevalue_;
    ::essmodule::ESSCapabilityRatings* PROTOBUF_NULLABLE esscapabilityratings_;
    ::essmodule::ESSCapabilityConfiguration* PROTOBUF_NULLABLE esscapabilityconfiguration_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_essmodule_2fessmodule_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ESSCapability_class_data_;
// -------------------------------------------------------------------

class ESSReadingProfile final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:essmodule.ESSReadingProfile) */ {
 public:
  inline ESSReadingProfile() : ESSReadingProfile(nullptr) {}
  ~ESSReadingProfile() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ESSReadingProfile* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ESSReadingProfile));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ESSReadingProfile(::google::protobuf::internal::ConstantInitialized);

  inline ESSReadingProfile(const ESSReadingProfile& from) : ESSReadingProfile(nullptr, from) {}
  inline ESSReadingProfile(ESSReadingProfile&& from) noexcept
      : ESSReadingProfile(nullptr, ::std::move(from)) {}
  inline ESSReadingProfile& operator=(const ESSReadingProfile& from) {
    CopyFrom(from);
    return *this;
  }
  inline ESSReadingProfile& operator=(ESSReadingProfile&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ESSReadingProfile& default_instance() {
    return *reinterpret_cast<const ESSReadingProfile*>(
        &_ESSReadingProfile_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 24;
  friend void swap(ESSReadingProfile& a, ESSReadingProfile& b) { a.Swap(&b); }
  inline void Swap(ESSReadingProfile* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ESSReadingProfile* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ESSReadingProfile* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ESSReadingProfile>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ESSReadingProfile& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ESSReadingProfile& from) { ESSReadingProfile::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ESSReadingProfile* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "essmodule.ESSReadingProfile"; }

 protected:
  explicit ESSReadingProfile(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ESSReadingProfile(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ESSReadingProfile& from);
  ESSReadingProfile(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ESSReadingProfile&& from) noexcept
      : ESSReadingProfile(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kReadingMessageInfoFieldNumber = 1,
    kEssFieldNumber = 2,
    kEssReadingFieldNumber = 3,
  };
  // .commonmodule.ReadingMessageInfo readingMessageInfo = 1 [(.uml.option_parent_message) = true];
  bool has_readingmessageinfo() const;
  void clear_readingmessageinfo() ;
  const ::commonmodule::ReadingMessageInfo& readingmessageinfo() const;
  [[nodiscard]] ::commonmodule::ReadingMessageInfo* PROTOBUF_NULLABLE release_readingmessageinfo();
  ::commonmodule::ReadingMessageInfo* PROTOBUF_NONNULL mutable_readingmessageinfo();
  void set_allocated_readingmessageinfo(::commonmodule::ReadingMessageInfo* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_readingmessageinfo(::commonmodule::ReadingMessageInfo* PROTOBUF_NULLABLE value);
  ::commonmodule::ReadingMessageInfo* PROTOBUF_NULLABLE unsafe_arena_release_readingmessageinfo();

  private:
  const ::commonmodule::ReadingMessageInfo& _internal_readingmessageinfo() const;
  ::commonmodule::ReadingMessageInfo* PROTOBUF_NONNULL _internal_mutable_readingmessageinfo();

  public:
  // .commonmodule.ESS ess = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  bool has_ess() const;
  void clear_ess() ;
  const ::commonmodule::ESS& ess() const;
  [[nodiscard]] ::commonmodule::ESS* PROTOBUF_NULLABLE release_ess();
  ::commonmodule::ESS* PROTOBUF_NONNULL mutable_ess();
  void set_allocated_ess(::commonmodule::ESS* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_ess(::commonmodule::ESS* PROTOBUF_NULLABLE value);
  ::commonmodule::ESS* PROTOBUF_NULLABLE unsafe_arena_release_ess();

  private:
  const ::commonmodule::ESS& _internal_ess() const;
  ::commonmodule::ESS* PROTOBUF_NONNULL _internal_mutable_ess();

  public:
  // .essmodule.ESSReading essReading = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  bool has_essreading() const;
  void clear_essreading() ;
  const ::essmodule::ESSReading& essreading() const;
  [[nodiscard]] ::essmodule::ESSReading* PROTOBUF_NULLABLE release_essreading();
  ::essmodule::ESSReading* PROTOBUF_NONNULL mutable_essreading();
  void set_allocated_essreading(::essmodule::ESSReading* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_essreading(::essmodule::ESSReading* PROTOBUF_NULLABLE value);
  ::essmodule::ESSReading* PROTOBUF_NULLABLE unsafe_arena_release_essreading();

  private:
  const ::essmodule::ESSReading& _internal_essreading() const;
  ::essmodule::ESSReading* PROTOBUF_NONNULL _internal_mutable_essreading();

  public:
  // @@protoc_insertion_point(class_scope:essmodule.ESSReadingProfile)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   3, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ESSReadingProfile& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::commonmodule::ReadingMessageInfo* PROTOBUF_NULLABLE readingmessageinfo_;
    ::commonmodule::ESS* PROTOBUF_NULLABLE ess_;
    ::essmodule::ESSReading* PROTOBUF_NULLABLE essreading_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_essmodule_2fessmodule_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ESSReadingProfile_class_data_;
// -------------------------------------------------------------------

class ESSEventAndStatusZGEN final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:essmodule.ESSEventAndStatusZGEN) */ {
 public:
  inline ESSEventAndStatusZGEN() : ESSEventAndStatusZGEN(nullptr) {}
  ~ESSEventAndStatusZGEN() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ESSEventAndStatusZGEN* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ESSEventAndStatusZGEN));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ESSEventAndStatusZGEN(::google::protobuf::internal::ConstantInitialized);

  inline ESSEventAndStatusZGEN(const ESSEventAndStatusZGEN& from) : ESSEventAndStatusZGEN(nullptr, from) {}
  inline ESSEventAndStatusZGEN(ESSEventAndStatusZGEN&& from) noexcept
      : ESSEventAndStatusZGEN(nullptr, ::std::move(from)) {}
  inline ESSEventAndStatusZGEN& operator=(const ESSEventAndStatusZGEN& from) {
    CopyFrom(from);
    return *this;
  }
  inline ESSEventAndStatusZGEN& operator=(ESSEventAndStatusZGEN&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ESSEventAndStatusZGEN& default_instance() {
    return *reinterpret_cast<const ESSEventAndStatusZGEN*>(
        &_ESSEventAndStatusZGEN_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 19;
  friend void swap(ESSEventAndStatusZGEN& a, ESSEventAndStatusZGEN& b) { a.Swap(&b); }
  inline void Swap(ESSEventAndStatusZGEN* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ESSEventAndStatusZGEN* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ESSEventAndStatusZGEN* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ESSEventAndStatusZGEN>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ESSEventAndStatusZGEN& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ESSEventAndStatusZGEN& from) { ESSEventAndStatusZGEN::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ESSEventAndStatusZGEN* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "essmodule.ESSEventAndStatusZGEN"; }

 protected:
  explicit ESSEventAndStatusZGEN(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ESSEventAndStatusZGEN(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ESSEventAndStatusZGEN& from);
  ESSEventAndStatusZGEN(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ESSEventAndStatusZGEN&& from) noexcept
      : ESSEventAndStatusZGEN(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLogicalNodeForEventAndStatusFieldNumber = 1,
    kAuxPwrStFieldNumber = 2,
    kDynamicTestFieldNumber = 3,
    kEmgStopFieldNumber = 4,
    kGnSynStFieldNumber = 5,
    kAlrmFieldNumber = 6,
    kPointStatusFieldNumber = 7,
  };
  // .commonmodule.LogicalNodeForEventAndStatus logicalNodeForEventAndStatus = 1 [(.uml.option_parent_message) = true];
  bool has_logicalnodeforeventandstatus() const;
  void clear_logicalnodeforeventandstatus() ;
  const ::commonmodule::LogicalNodeForEventAndStatus& logicalnodeforeventandstatus() const;
  [[nodiscard]] ::commonmodule::LogicalNodeForEventAndStatus* PROTOBUF_NULLABLE release_logicalnodeforeventandstatus();
  ::commonmodule::LogicalNodeForEventAndStatus* PROTOBUF_NONNULL mutable_logicalnodeforeventandstatus();
  void set_allocated_logicalnodeforeventandstatus(::commonmodule::LogicalNodeForEventAndStatus* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_logicalnodeforeventandstatus(::commonmodule::LogicalNodeForEventAndStatus* PROTOBUF_NULLABLE value);
  ::commonmodule::LogicalNodeForEventAndStatus* PROTOBUF_NULLABLE unsafe_arena_release_logicalnodeforeventandstatus();

  private:
  const ::commonmodule::LogicalNodeForEventAndStatus& _internal_logicalnodeforeventandstatus() const;
  ::commonmodule::LogicalNodeForEventAndStatus* PROTOBUF_NONNULL _internal_mutable_logicalnodeforeventandstatus();

  public:
  // .commonmodule.StatusSPS AuxPwrSt = 2;
  bool has_auxpwrst() const;
  void clear_auxpwrst() ;
  const ::commonmodule::StatusSPS& auxpwrst() const;
  [[nodiscard]] ::commonmodule::StatusSPS* PROTOBUF_NULLABLE release_auxpwrst();
  ::commonmodule::StatusSPS* PROTOBUF_NONNULL mutable_auxpwrst();
  void set_allocated_auxpwrst(::commonmodule::StatusSPS* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_auxpwrst(::commonmodule::StatusSPS* PROTOBUF_NULLABLE value);
  ::commonmodule::StatusSPS* PROTOBUF_NULLABLE unsafe_arena_release_auxpwrst();

  private:
  const ::commonmodule::StatusSPS& _internal_auxpwrst() const;
  ::commonmodule::StatusSPS* PROTOBUF_NONNULL _internal_mutable_auxpwrst();

  public:
  // .commonmodule.ENS_DynamicTestKind DynamicTest = 3;
  bool has_dynamictest() const;
  void clear_dynamictest() ;
  const ::commonmodule::ENS_DynamicTestKind& dynamictest() const;
  [[nodiscard]] ::commonmodule::ENS_DynamicTestKind* PROTOBUF_NULLABLE release_dynamictest();
  ::commonmodule::ENS_DynamicTestKind* PROTOBUF_NONNULL mutable_dynamictest();
  void set_allocated_dynamictest(::commonmodule::ENS_DynamicTestKind* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_dynamictest(::commonmodule::ENS_DynamicTestKind* PROTOBUF_NULLABLE value);
  ::commonmodule::ENS_DynamicTestKind* PROTOBUF_NULLABLE unsafe_arena_release_dynamictest();

  private:
  const ::commonmodule::ENS_DynamicTestKind& _internal_dynamictest() const;
  ::commonmodule::ENS_DynamicTestKind* PROTOBUF_NONNULL _internal_mutable_dynamictest();

  public:
  // .commonmodule.StatusSPS EmgStop = 4;
  bool has_emgstop() const;
  void clear_emgstop() ;
  const ::commonmodule::StatusSPS& emgstop() const;
  [[nodiscard]] ::commonmodule::StatusSPS* PROTOBUF_NULLABLE release_emgstop();
  ::commonmodule::StatusSPS* PROTOBUF_NONNULL mutable_emgstop();
  void set_allocated_emgstop(::commonmodule::StatusSPS* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_emgstop(::commonmodule::StatusSPS* PROTOBUF_NULLABLE value);
  ::commonmodule::StatusSPS* PROTOBUF_NULLABLE unsafe_arena_release_emgstop();

  private:
  const ::commonmodule::StatusSPS& _internal_emgstop() const;
  ::commonmodule::StatusSPS* PROTOBUF_NONNULL _internal_mutable_emgstop();

  public:
  // .commonmodule.StatusSPS GnSynSt = 5;
  bool has_gnsynst() const;
  void clear_gnsynst() ;
  const ::commonmodule::StatusSPS& gnsynst() const;
  [[nodiscard]] ::commonmodule::StatusSPS* PROTOBUF_NULLABLE release_gnsynst();
  ::commonmodule::StatusSPS* PROTOBUF_NONNULL mutable_gnsynst();
  void set_allocated_gnsynst(::commonmodule::StatusSPS* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_gnsynst(::commonmodule::StatusSPS* PROTOBUF_NULLABLE value);
  ::commonmodule::StatusSPS* PROTOBUF_NULLABLE unsafe_arena_release_gnsynst();

  private:
  const ::commonmodule::StatusSPS& _internal_gnsynst() const;
  ::commonmodule::StatusSPS* PROTOBUF_NONNULL _internal_mutable_gnsynst();

  public:
  // .commonmodule.Optional_AlrmKind Alrm = 6;
  bool has_alrm() const;
  void clear_alrm() ;
  const ::commonmodule::Optional_AlrmKind& alrm() const;
  [[nodiscard]] ::commonmodule::Optional_AlrmKind* PROTOBUF_NULLABLE release_alrm();
  ::commonmodule::Optional_AlrmKind* PROTOBUF_NONNULL mutable_alrm();
  void set_allocated_alrm(::commonmodule::Optional_AlrmKind* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_alrm(::commonmodule::Optional_AlrmKind* PROTOBUF_NULLABLE value);
  ::commonmodule::Optional_AlrmKind* PROTOBUF_NULLABLE unsafe_arena_release_alrm();

  private:
  const ::commonmodule::Optional_AlrmKind& _internal_alrm() const;
  ::commonmodule::Optional_AlrmKind* PROTOBUF_NONNULL _internal_mutable_alrm();

  public:
  // .essmodule.ESSPointStatus PointStatus = 7;
  bool has_pointstatus() const;
  void clear_pointstatus() ;
  const ::essmodule::ESSPointStatus& pointstatus() const;
  [[nodiscard]] ::essmodule::ESSPointStatus* PROTOBUF_NULLABLE release_pointstatus();
  ::essmodule::ESSPointStatus* PROTOBUF_NONNULL mutable_pointstatus();
  void set_allocated_pointstatus(::essmodule::ESSPointStatus* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_pointstatus(::essmodule::ESSPointStatus* PROTOBUF_NULLABLE value);
  ::essmodule::ESSPointStatus* PROTOBUF_NULLABLE unsafe_arena_release_pointstatus();

  private:
  const ::essmodule::ESSPointStatus& _internal_pointstatus() const;
  ::essmodule::ESSPointStatus* PROTOBUF_NONNULL _internal_mutable_pointstatus();

  public:
  // @@protoc_insertion_point(class_scope:essmodule.ESSEventAndStatusZGEN)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 7,
                                   7, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ESSEventAndStatusZGEN& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::commonmodule::LogicalNodeForEventAndStatus* PROTOBUF_NULLABLE logicalnodeforeventandstatus_;
    ::commonmodule::StatusSPS* PROTOBUF_NULLABLE auxpwrst_;
    ::commonmodule::ENS_DynamicTestKind* PROTOBUF_NULLABLE dynamictest_;
    ::commonmodule::StatusSPS* PROTOBUF_NULLABLE emgstop_;
    ::commonmodule::StatusSPS* PROTOBUF_NULLABLE gnsynst_;
    ::commonmodule::Optional_AlrmKind* PROTOBUF_NULLABLE alrm_;
    ::essmodule::ESSPointStatus* PROTOBUF_NULLABLE pointstatus_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_essmodule_2fessmodule_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ESSEventAndStatusZGEN_class_data_;
// -------------------------------------------------------------------

class ESSDiscreteControlDBAT final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:essmodule.ESSDiscreteControlDBAT) */ {
 public:
  inline ESSDiscreteControlDBAT() : ESSDiscreteControlDBAT(nullptr) {}
  ~ESSDiscreteControlDBAT() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ESSDiscreteControlDBAT* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ESSDiscreteControlDBAT));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ESSDiscreteControlDBAT(::google::protobuf::internal::ConstantInitialized);

  inline ESSDiscreteControlDBAT(const ESSDiscreteControlDBAT& from) : ESSDiscreteControlDBAT(nullptr, from) {}
  inline ESSDiscreteControlDBAT(ESSDiscreteControlDBAT&& from) noexcept
      : ESSDiscreteControlDBAT(nullptr, ::std::move(from)) {}
  inline ESSDiscreteControlDBAT& operator=(const ESSDiscreteControlDBAT& from) {
    CopyFrom(from);
    return *this;
  }
  inline ESSDiscreteControlDBAT& operator=(ESSDiscreteControlDBAT&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ESSDiscreteControlDBAT& default_instance() {
    return *reinterpret_cast<const ESSDiscreteControlDBAT*>(
        &_ESSDiscreteControlDBAT_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 14;
  friend void swap(ESSDiscreteControlDBAT& a, ESSDiscreteControlDBAT& b) { a.Swap(&b); }
  inline void Swap(ESSDiscreteControlDBAT* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ESSDiscreteControlDBAT* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ESSDiscreteControlDBAT* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ESSDiscreteControlDBAT>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ESSDiscreteControlDBAT& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ESSDiscreteControlDBAT& from) { ESSDiscreteControlDBAT::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ESSDiscreteControlDBAT* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "essmodule.ESSDiscreteControlDBAT"; }

 protected:
  explicit ESSDiscreteControlDBAT(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ESSDiscreteControlDBAT(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ESSDiscreteControlDBAT& from);
  ESSDiscreteControlDBAT(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ESSDiscreteControlDBAT&& from) noexcept
      : ESSDiscreteControlDBAT(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLogicalNodeForControlFieldNumber = 1,
    kControlFieldNumber = 2,
  };
  // .commonmodule.LogicalNodeForControl logicalNodeForControl = 1 [(.uml.option_parent_message) = true];
  bool has_logicalnodeforcontrol() const;
  void clear_logicalnodeforcontrol() ;
  const ::commonmodule::LogicalNodeForControl& logicalnodeforcontrol() const;
  [[nodiscard]] ::commonmodule::LogicalNodeForControl* PROTOBUF_NULLABLE release_logicalnodeforcontrol();
  ::commonmodule::LogicalNodeForControl* PROTOBUF_NONNULL mutable_logicalnodeforcontrol();
  void set_allocated_logicalnodeforcontrol(::commonmodule::LogicalNodeForControl* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_logicalnodeforcontrol(::commonmodule::LogicalNodeForControl* PROTOBUF_NULLABLE value);
  ::commonmodule::LogicalNodeForControl* PROTOBUF_NULLABLE unsafe_arena_release_logicalnodeforcontrol();

  private:
  const ::commonmodule::LogicalNodeForControl& _internal_logicalnodeforcontrol() const;
  ::commonmodule::LogicalNodeForControl* PROTOBUF_NONNULL _internal_mutable_logicalnodeforcontrol();

  public:
  // .essmodule.ESSPoint control = 2;
  bool has_control() const;
  void clear_control() ;
  const ::essmodule::ESSPoint& control() const;
  [[nodiscard]] ::essmodule::ESSPoint* PROTOBUF_NULLABLE release_control();
  ::essmodule::ESSPoint* PROTOBUF_NONNULL mutable_control();
  void set_allocated_control(::essmodule::ESSPoint* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_control(::essmodule::ESSPoint* PROTOBUF_NULLABLE value);
  ::essmodule::ESSPoint* PROTOBUF_NULLABLE unsafe_arena_release_control();

  private:
  const ::essmodule::ESSPoint& _internal_control() const;
  ::essmodule::ESSPoint* PROTOBUF_NONNULL _internal_mutable_control();

  public:
  // @@protoc_insertion_point(class_scope:essmodule.ESSDiscreteControlDBAT)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   2, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ESSDiscreteControlDBAT& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::commonmodule::LogicalNodeForControl* PROTOBUF_NULLABLE logicalnodeforcontrol_;
    ::essmodule::ESSPoint* PROTOBUF_NULLABLE control_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_essmodule_2fessmodule_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ESSDiscreteControlDBAT_class_data_;
// -------------------------------------------------------------------

class ESSCurvePoint final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:essmodule.ESSCurvePoint) */ {
 public:
  inline ESSCurvePoint() : ESSCurvePoint(nullptr) {}
  ~ESSCurvePoint() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ESSCurvePoint* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ESSCurvePoint));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ESSCurvePoint(::google::protobuf::internal::ConstantInitialized);

  inline ESSCurvePoint(const ESSCurvePoint& from) : ESSCurvePoint(nullptr, from) {}
  inline ESSCurvePoint(ESSCurvePoint&& from) noexcept
      : ESSCurvePoint(nullptr, ::std::move(from)) {}
  inline ESSCurvePoint& operator=(const ESSCurvePoint& from) {
    CopyFrom(from);
    return *this;
  }
  inline ESSCurvePoint& operator=(ESSCurvePoint&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ESSCurvePoint& default_instance() {
    return *reinterpret_cast<const ESSCurvePoint*>(
        &_ESSCurvePoint_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(ESSCurvePoint& a, ESSCurvePoint& b) { a.Swap(&b); }
  inline void Swap(ESSCurvePoint* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ESSCurvePoint* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ESSCurvePoint* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ESSCurvePoint>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ESSCurvePoint& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ESSCurvePoint& from) { ESSCurvePoint::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ESSCurvePoint* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "essmodule.ESSCurvePoint"; }

 protected:
  explicit ESSCurvePoint(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ESSCurvePoint(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ESSCurvePoint& from);
  ESSCurvePoint(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ESSCurvePoint&& from) noexcept
      : ESSCurvePoint(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kControlFieldNumber = 1,
    kStartTimeFieldNumber = 2,
  };
  // .essmodule.ESSPoint control = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  bool has_control() const;
  void clear_control() ;
  const ::essmodule::ESSPoint& control() const;
  [[nodiscard]] ::essmodule::ESSPoint* PROTOBUF_NULLABLE release_control();
  ::essmodule::ESSPoint* PROTOBUF_NONNULL mutable_control();
  void set_allocated_control(::essmodule::ESSPoint* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_control(::essmodule::ESSPoint* PROTOBUF_NULLABLE value);
  ::essmodule::ESSPoint* PROTOBUF_NULLABLE unsafe_arena_release_control();

  private:
  const ::essmodule::ESSPoint& _internal_control() const;
  ::essmodule::ESSPoint* PROTOBUF_NONNULL _internal_mutable_control();

  public:
  // .commonmodule.ControlTimestamp startTime = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  bool has_starttime() const;
  void clear_starttime() ;
  const ::commonmodule::ControlTimestamp& starttime() const;
  [[nodiscard]] ::commonmodule::ControlTimestamp* PROTOBUF_NULLABLE release_starttime();
  ::commonmodule::ControlTimestamp* PROTOBUF_NONNULL mutable_starttime();
  void set_allocated_starttime(::commonmodule::ControlTimestamp* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_starttime(::commonmodule::ControlTimestamp* PROTOBUF_NULLABLE value);
  ::commonmodule::ControlTimestamp* PROTOBUF_NULLABLE unsafe_arena_release_starttime();

  private:
  const ::commonmodule::ControlTimestamp& _internal_starttime() const;
  ::commonmodule::ControlTimestamp* PROTOBUF_NONNULL _internal_mutable_starttime();

  public:
  // @@protoc_insertion_point(class_scope:essmodule.ESSCurvePoint)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   2, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ESSCurvePoint& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::essmodule::ESSPoint* PROTOBUF_NULLABLE control_;
    ::commonmodule::ControlTimestamp* PROTOBUF_NULLABLE starttime_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_essmodule_2fessmodule_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ESSCurvePoint_class_data_;
// -------------------------------------------------------------------

class ESSCapabilityProfile final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:essmodule.ESSCapabilityProfile) */ {
 public:
  inline ESSCapabilityProfile() : ESSCapabilityProfile(nullptr) {}
  ~ESSCapabilityProfile() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ESSCapabilityProfile* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ESSCapabilityProfile));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ESSCapabilityProfile(::google::protobuf::internal::ConstantInitialized);

  inline ESSCapabilityProfile(const ESSCapabilityProfile& from) : ESSCapabilityProfile(nullptr, from) {}
  inline ESSCapabilityProfile(ESSCapabilityProfile&& from) noexcept
      : ESSCapabilityProfile(nullptr, ::std::move(from)) {}
  inline ESSCapabilityProfile& operator=(const ESSCapabilityProfile& from) {
    CopyFrom(from);
    return *this;
  }
  inline ESSCapabilityProfile& operator=(ESSCapabilityProfile&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ESSCapabilityProfile& default_instance() {
    return *reinterpret_cast<const ESSCapabilityProfile*>(
        &_ESSCapabilityProfile_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(ESSCapabilityProfile& a, ESSCapabilityProfile& b) { a.Swap(&b); }
  inline void Swap(ESSCapabilityProfile* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ESSCapabilityProfile* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ESSCapabilityProfile* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ESSCapabilityProfile>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ESSCapabilityProfile& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ESSCapabilityProfile& from) { ESSCapabilityProfile::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ESSCapabilityProfile* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "essmodule.ESSCapabilityProfile"; }

 protected:
  explicit ESSCapabilityProfile(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ESSCapabilityProfile(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ESSCapabilityProfile& from);
  ESSCapabilityProfile(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ESSCapabilityProfile&& from) noexcept
      : ESSCapabilityProfile(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCapabilityMessageInfoFieldNumber = 1,
    kEssFieldNumber = 2,
    kEssCapabilityFieldNumber = 3,
  };
  // .commonmodule.CapabilityMessageInfo capabilityMessageInfo = 1 [(.uml.option_parent_message) = true];
  bool has_capabilitymessageinfo() const;
  void clear_capabilitymessageinfo() ;
  const ::commonmodule::CapabilityMessageInfo& capabilitymessageinfo() const;
  [[nodiscard]] ::commonmodule::CapabilityMessageInfo* PROTOBUF_NULLABLE release_capabilitymessageinfo();
  ::commonmodule::CapabilityMessageInfo* PROTOBUF_NONNULL mutable_capabilitymessageinfo();
  void set_allocated_capabilitymessageinfo(::commonmodule::CapabilityMessageInfo* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_capabilitymessageinfo(::commonmodule::CapabilityMessageInfo* PROTOBUF_NULLABLE value);
  ::commonmodule::CapabilityMessageInfo* PROTOBUF_NULLABLE unsafe_arena_release_capabilitymessageinfo();

  private:
  const ::commonmodule::CapabilityMessageInfo& _internal_capabilitymessageinfo() const;
  ::commonmodule::CapabilityMessageInfo* PROTOBUF_NONNULL _internal_mutable_capabilitymessageinfo();

  public:
  // .commonmodule.ESS ess = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  bool has_ess() const;
  void clear_ess() ;
  const ::commonmodule::ESS& ess() const;
  [[nodiscard]] ::commonmodule::ESS* PROTOBUF_NULLABLE release_ess();
  ::commonmodule::ESS* PROTOBUF_NONNULL mutable_ess();
  void set_allocated_ess(::commonmodule::ESS* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_ess(::commonmodule::ESS* PROTOBUF_NULLABLE value);
  ::commonmodule::ESS* PROTOBUF_NULLABLE unsafe_arena_release_ess();

  private:
  const ::commonmodule::ESS& _internal_ess() const;
  ::commonmodule::ESS* PROTOBUF_NONNULL _internal_mutable_ess();

  public:
  // .essmodule.ESSCapability essCapability = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  bool has_esscapability() const;
  void clear_esscapability() ;
  const ::essmodule::ESSCapability& esscapability() const;
  [[nodiscard]] ::essmodule::ESSCapability* PROTOBUF_NULLABLE release_esscapability();
  ::essmodule::ESSCapability* PROTOBUF_NONNULL mutable_esscapability();
  void set_allocated_esscapability(::essmodule::ESSCapability* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_esscapability(::essmodule::ESSCapability* PROTOBUF_NULLABLE value);
  ::essmodule::ESSCapability* PROTOBUF_NULLABLE unsafe_arena_release_esscapability();

  private:
  const ::essmodule::ESSCapability& _internal_esscapability() const;
  ::essmodule::ESSCapability* PROTOBUF_NONNULL _internal_mutable_esscapability();

  public:
  // @@protoc_insertion_point(class_scope:essmodule.ESSCapabilityProfile)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   3, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ESSCapabilityProfile& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::commonmodule::CapabilityMessageInfo* PROTOBUF_NULLABLE capabilitymessageinfo_;
    ::commonmodule::ESS* PROTOBUF_NULLABLE ess_;
    ::essmodule::ESSCapability* PROTOBUF_NULLABLE esscapability_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_essmodule_2fessmodule_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ESSCapabilityProfile_class_data_;
// -------------------------------------------------------------------

class ESSCapabilityOverrideProfile final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:essmodule.ESSCapabilityOverrideProfile) */ {
 public:
  inline ESSCapabilityOverrideProfile() : ESSCapabilityOverrideProfile(nullptr) {}
  ~ESSCapabilityOverrideProfile() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ESSCapabilityOverrideProfile* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ESSCapabilityOverrideProfile));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ESSCapabilityOverrideProfile(::google::protobuf::internal::ConstantInitialized);

  inline ESSCapabilityOverrideProfile(const ESSCapabilityOverrideProfile& from) : ESSCapabilityOverrideProfile(nullptr, from) {}
  inline ESSCapabilityOverrideProfile(ESSCapabilityOverrideProfile&& from) noexcept
      : ESSCapabilityOverrideProfile(nullptr, ::std::move(from)) {}
  inline ESSCapabilityOverrideProfile& operator=(const ESSCapabilityOverrideProfile& from) {
    CopyFrom(from);
    return *this;
  }
  inline ESSCapabilityOverrideProfile& operator=(ESSCapabilityOverrideProfile&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ESSCapabilityOverrideProfile& default_instance() {
    return *reinterpret_cast<const ESSCapabilityOverrideProfile*>(
        &_ESSCapabilityOverrideProfile_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(ESSCapabilityOverrideProfile& a, ESSCapabilityOverrideProfile& b) { a.Swap(&b); }
  inline void Swap(ESSCapabilityOverrideProfile* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ESSCapabilityOverrideProfile* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ESSCapabilityOverrideProfile* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ESSCapabilityOverrideProfile>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ESSCapabilityOverrideProfile& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ESSCapabilityOverrideProfile& from) { ESSCapabilityOverrideProfile::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ESSCapabilityOverrideProfile* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "essmodule.ESSCapabilityOverrideProfile"; }

 protected:
  explicit ESSCapabilityOverrideProfile(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ESSCapabilityOverrideProfile(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ESSCapabilityOverrideProfile& from);
  ESSCapabilityOverrideProfile(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ESSCapabilityOverrideProfile&& from) noexcept
      : ESSCapabilityOverrideProfile(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCapabilityMessageInfoFieldNumber = 1,
    kEssFieldNumber = 2,
    kEssCapabilityOverrideFieldNumber = 3,
  };
  // .commonmodule.CapabilityMessageInfo capabilityMessageInfo = 1 [(.uml.option_parent_message) = true];
  bool has_capabilitymessageinfo() const;
  void clear_capabilitymessageinfo() ;
  const ::commonmodule::CapabilityMessageInfo& capabilitymessageinfo() const;
  [[nodiscard]] ::commonmodule::CapabilityMessageInfo* PROTOBUF_NULLABLE release_capabilitymessageinfo();
  ::commonmodule::CapabilityMessageInfo* PROTOBUF_NONNULL mutable_capabilitymessageinfo();
  void set_allocated_capabilitymessageinfo(::commonmodule::CapabilityMessageInfo* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_capabilitymessageinfo(::commonmodule::CapabilityMessageInfo* PROTOBUF_NULLABLE value);
  ::commonmodule::CapabilityMessageInfo* PROTOBUF_NULLABLE unsafe_arena_release_capabilitymessageinfo();

  private:
  const ::commonmodule::CapabilityMessageInfo& _internal_capabilitymessageinfo() const;
  ::commonmodule::CapabilityMessageInfo* PROTOBUF_NONNULL _internal_mutable_capabilitymessageinfo();

  public:
  // .commonmodule.ESS ess = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  bool has_ess() const;
  void clear_ess() ;
  const ::commonmodule::ESS& ess() const;
  [[nodiscard]] ::commonmodule::ESS* PROTOBUF_NULLABLE release_ess();
  ::commonmodule::ESS* PROTOBUF_NONNULL mutable_ess();
  void set_allocated_ess(::commonmodule::ESS* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_ess(::commonmodule::ESS* PROTOBUF_NULLABLE value);
  ::commonmodule::ESS* PROTOBUF_NULLABLE unsafe_arena_release_ess();

  private:
  const ::commonmodule::ESS& _internal_ess() const;
  ::commonmodule::ESS* PROTOBUF_NONNULL _internal_mutable_ess();

  public:
  // .essmodule.ESSCapabilityOverride essCapabilityOverride = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  bool has_esscapabilityoverride() const;
  void clear_esscapabilityoverride() ;
  const ::essmodule::ESSCapabilityOverride& esscapabilityoverride() const;
  [[nodiscard]] ::essmodule::ESSCapabilityOverride* PROTOBUF_NULLABLE release_esscapabilityoverride();
  ::essmodule::ESSCapabilityOverride* PROTOBUF_NONNULL mutable_esscapabilityoverride();
  void set_allocated_esscapabilityoverride(::essmodule::ESSCapabilityOverride* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_esscapabilityoverride(::essmodule::ESSCapabilityOverride* PROTOBUF_NULLABLE value);
  ::essmodule::ESSCapabilityOverride* PROTOBUF_NULLABLE unsafe_arena_release_esscapabilityoverride();

  private:
  const ::essmodule::ESSCapabilityOverride& _internal_esscapabilityoverride() const;
  ::essmodule::ESSCapabilityOverride* PROTOBUF_NONNULL _internal_mutable_esscapabilityoverride();

  public:
  // @@protoc_insertion_point(class_scope:essmodule.ESSCapabilityOverrideProfile)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   3, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ESSCapabilityOverrideProfile& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::commonmodule::CapabilityMessageInfo* PROTOBUF_NULLABLE capabilitymessageinfo_;
    ::commonmodule::ESS* PROTOBUF_NULLABLE ess_;
    ::essmodule::ESSCapabilityOverride* PROTOBUF_NULLABLE esscapabilityoverride_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_essmodule_2fessmodule_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ESSCapabilityOverrideProfile_class_data_;
// -------------------------------------------------------------------

class ESSStatusZGEN final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:essmodule.ESSStatusZGEN) */ {
 public:
  inline ESSStatusZGEN() : ESSStatusZGEN(nullptr) {}
  ~ESSStatusZGEN() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ESSStatusZGEN* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ESSStatusZGEN));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ESSStatusZGEN(::google::protobuf::internal::ConstantInitialized);

  inline ESSStatusZGEN(const ESSStatusZGEN& from) : ESSStatusZGEN(nullptr, from) {}
  inline ESSStatusZGEN(ESSStatusZGEN&& from) noexcept
      : ESSStatusZGEN(nullptr, ::std::move(from)) {}
  inline ESSStatusZGEN& operator=(const ESSStatusZGEN& from) {
    CopyFrom(from);
    return *this;
  }
  inline ESSStatusZGEN& operator=(ESSStatusZGEN&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ESSStatusZGEN& default_instance() {
    return *reinterpret_cast<const ESSStatusZGEN*>(
        &_ESSStatusZGEN_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 26;
  friend void swap(ESSStatusZGEN& a, ESSStatusZGEN& b) { a.Swap(&b); }
  inline void Swap(ESSStatusZGEN* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ESSStatusZGEN* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ESSStatusZGEN* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ESSStatusZGEN>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ESSStatusZGEN& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ESSStatusZGEN& from) { ESSStatusZGEN::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ESSStatusZGEN* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "essmodule.ESSStatusZGEN"; }

 protected:
  explicit ESSStatusZGEN(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ESSStatusZGEN(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ESSStatusZGEN& from);
  ESSStatusZGEN(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ESSStatusZGEN&& from) noexcept
      : ESSStatusZGEN(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kESSEventAndStatusZGENFieldNumber = 1,
  };
  // .essmodule.ESSEventAndStatusZGEN eSSEventAndStatusZGEN = 1 [(.uml.option_parent_message) = true];
  bool has_esseventandstatuszgen() const;
  void clear_esseventandstatuszgen() ;
  const ::essmodule::ESSEventAndStatusZGEN& esseventandstatuszgen() const;
  [[nodiscard]] ::essmodule::ESSEventAndStatusZGEN* PROTOBUF_NULLABLE release_esseventandstatuszgen();
  ::essmodule::ESSEventAndStatusZGEN* PROTOBUF_NONNULL mutable_esseventandstatuszgen();
  void set_allocated_esseventandstatuszgen(::essmodule::ESSEventAndStatusZGEN* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_esseventandstatuszgen(::essmodule::ESSEventAndStatusZGEN* PROTOBUF_NULLABLE value);
  ::essmodule::ESSEventAndStatusZGEN* PROTOBUF_NULLABLE unsafe_arena_release_esseventandstatuszgen();

  private:
  const ::essmodule::ESSEventAndStatusZGEN& _internal_esseventandstatuszgen() const;
  ::essmodule::ESSEventAndStatusZGEN* PROTOBUF_NONNULL _internal_mutable_esseventandstatuszgen();

  public:
  // @@protoc_insertion_point(class_scope:essmodule.ESSStatusZGEN)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ESSStatusZGEN& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::essmodule::ESSEventAndStatusZGEN* PROTOBUF_NULLABLE esseventandstatuszgen_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_essmodule_2fessmodule_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ESSStatusZGEN_class_data_;
// -------------------------------------------------------------------

class ESSEventZGEN final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:essmodule.ESSEventZGEN) */ {
 public:
  inline ESSEventZGEN() : ESSEventZGEN(nullptr) {}
  ~ESSEventZGEN() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ESSEventZGEN* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ESSEventZGEN));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ESSEventZGEN(::google::protobuf::internal::ConstantInitialized);

  inline ESSEventZGEN(const ESSEventZGEN& from) : ESSEventZGEN(nullptr, from) {}
  inline ESSEventZGEN(ESSEventZGEN&& from) noexcept
      : ESSEventZGEN(nullptr, ::std::move(from)) {}
  inline ESSEventZGEN& operator=(const ESSEventZGEN& from) {
    CopyFrom(from);
    return *this;
  }
  inline ESSEventZGEN& operator=(ESSEventZGEN&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ESSEventZGEN& default_instance() {
    return *reinterpret_cast<const ESSEventZGEN*>(
        &_ESSEventZGEN_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 20;
  friend void swap(ESSEventZGEN& a, ESSEventZGEN& b) { a.Swap(&b); }
  inline void Swap(ESSEventZGEN* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ESSEventZGEN* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ESSEventZGEN* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ESSEventZGEN>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ESSEventZGEN& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ESSEventZGEN& from) { ESSEventZGEN::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ESSEventZGEN* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "essmodule.ESSEventZGEN"; }

 protected:
  explicit ESSEventZGEN(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ESSEventZGEN(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ESSEventZGEN& from);
  ESSEventZGEN(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ESSEventZGEN&& from) noexcept
      : ESSEventZGEN(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kESSEventAndStatusZGENFieldNumber = 1,
  };
  // .essmodule.ESSEventAndStatusZGEN eSSEventAndStatusZGEN = 1 [(.uml.option_parent_message) = true];
  bool has_esseventandstatuszgen() const;
  void clear_esseventandstatuszgen() ;
  const ::essmodule::ESSEventAndStatusZGEN& esseventandstatuszgen() const;
  [[nodiscard]] ::essmodule::ESSEventAndStatusZGEN* PROTOBUF_NULLABLE release_esseventandstatuszgen();
  ::essmodule::ESSEventAndStatusZGEN* PROTOBUF_NONNULL mutable_esseventandstatuszgen();
  void set_allocated_esseventandstatuszgen(::essmodule::ESSEventAndStatusZGEN* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_esseventandstatuszgen(::essmodule::ESSEventAndStatusZGEN* PROTOBUF_NULLABLE value);
  ::essmodule::ESSEventAndStatusZGEN* PROTOBUF_NULLABLE unsafe_arena_release_esseventandstatuszgen();

  private:
  const ::essmodule::ESSEventAndStatusZGEN& _internal_esseventandstatuszgen() const;
  ::essmodule::ESSEventAndStatusZGEN* PROTOBUF_NONNULL _internal_mutable_esseventandstatuszgen();

  public:
  // @@protoc_insertion_point(class_scope:essmodule.ESSEventZGEN)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ESSEventZGEN& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::essmodule::ESSEventAndStatusZGEN* PROTOBUF_NULLABLE esseventandstatuszgen_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_essmodule_2fessmodule_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ESSEventZGEN_class_data_;
// -------------------------------------------------------------------

class ESSDiscreteControl final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:essmodule.ESSDiscreteControl) */ {
 public:
  inline ESSDiscreteControl() : ESSDiscreteControl(nullptr) {}
  ~ESSDiscreteControl() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ESSDiscreteControl* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ESSDiscreteControl));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ESSDiscreteControl(::google::protobuf::internal::ConstantInitialized);

  inline ESSDiscreteControl(const ESSDiscreteControl& from) : ESSDiscreteControl(nullptr, from) {}
  inline ESSDiscreteControl(ESSDiscreteControl&& from) noexcept
      : ESSDiscreteControl(nullptr, ::std::move(from)) {}
  inline ESSDiscreteControl& operator=(const ESSDiscreteControl& from) {
    CopyFrom(from);
    return *this;
  }
  inline ESSDiscreteControl& operator=(ESSDiscreteControl&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ESSDiscreteControl& default_instance() {
    return *reinterpret_cast<const ESSDiscreteControl*>(
        &_ESSDiscreteControl_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 15;
  friend void swap(ESSDiscreteControl& a, ESSDiscreteControl& b) { a.Swap(&b); }
  inline void Swap(ESSDiscreteControl* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ESSDiscreteControl* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ESSDiscreteControl* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ESSDiscreteControl>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ESSDiscreteControl& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ESSDiscreteControl& from) { ESSDiscreteControl::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ESSDiscreteControl* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "essmodule.ESSDiscreteControl"; }

 protected:
  explicit ESSDiscreteControl(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ESSDiscreteControl(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ESSDiscreteControl& from);
  ESSDiscreteControl(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ESSDiscreteControl&& from) noexcept
      : ESSDiscreteControl(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kControlValueFieldNumber = 1,
    kCheckFieldNumber = 2,
    kEssDiscreteControlDBATFieldNumber = 3,
  };
  // .commonmodule.ControlValue controlValue = 1 [(.uml.option_parent_message) = true];
  bool has_controlvalue() const;
  void clear_controlvalue() ;
  const ::commonmodule::ControlValue& controlvalue() const;
  [[nodiscard]] ::commonmodule::ControlValue* PROTOBUF_NULLABLE release_controlvalue();
  ::commonmodule::ControlValue* PROTOBUF_NONNULL mutable_controlvalue();
  void set_allocated_controlvalue(::commonmodule::ControlValue* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_controlvalue(::commonmodule::ControlValue* PROTOBUF_NULLABLE value);
  ::commonmodule::ControlValue* PROTOBUF_NULLABLE unsafe_arena_release_controlvalue();

  private:
  const ::commonmodule::ControlValue& _internal_controlvalue() const;
  ::commonmodule::ControlValue* PROTOBUF_NONNULL _internal_mutable_controlvalue();

  public:
  // .commonmodule.CheckConditions check = 2;
  bool has_check() const;
  void clear_check() ;
  const ::commonmodule::CheckConditions& check() const;
  [[nodiscard]] ::commonmodule::CheckConditions* PROTOBUF_NULLABLE release_check();
  ::commonmodule::CheckConditions* PROTOBUF_NONNULL mutable_check();
  void set_allocated_check(::commonmodule::CheckConditions* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_check(::commonmodule::CheckConditions* PROTOBUF_NULLABLE value);
  ::commonmodule::CheckConditions* PROTOBUF_NULLABLE unsafe_arena_release_check();

  private:
  const ::commonmodule::CheckConditions& _internal_check() const;
  ::commonmodule::CheckConditions* PROTOBUF_NONNULL _internal_mutable_check();

  public:
  // .essmodule.ESSDiscreteControlDBAT essDiscreteControlDBAT = 3;
  bool has_essdiscretecontroldbat() const;
  void clear_essdiscretecontroldbat() ;
  const ::essmodule::ESSDiscreteControlDBAT& essdiscretecontroldbat() const;
  [[nodiscard]] ::essmodule::ESSDiscreteControlDBAT* PROTOBUF_NULLABLE release_essdiscretecontroldbat();
  ::essmodule::ESSDiscreteControlDBAT* PROTOBUF_NONNULL mutable_essdiscretecontroldbat();
  void set_allocated_essdiscretecontroldbat(::essmodule::ESSDiscreteControlDBAT* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_essdiscretecontroldbat(::essmodule::ESSDiscreteControlDBAT* PROTOBUF_NULLABLE value);
  ::essmodule::ESSDiscreteControlDBAT* PROTOBUF_NULLABLE unsafe_arena_release_essdiscretecontroldbat();

  private:
  const ::essmodule::ESSDiscreteControlDBAT& _internal_essdiscretecontroldbat() const;
  ::essmodule::ESSDiscreteControlDBAT* PROTOBUF_NONNULL _internal_mutable_essdiscretecontroldbat();

  public:
  // @@protoc_insertion_point(class_scope:essmodule.ESSDiscreteControl)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   3, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ESSDiscreteControl& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::commonmodule::ControlValue* PROTOBUF_NULLABLE controlvalue_;
    ::commonmodule::CheckConditions* PROTOBUF_NULLABLE check_;
    ::essmodule::ESSDiscreteControlDBAT* PROTOBUF_NULLABLE essdiscretecontroldbat_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_essmodule_2fessmodule_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ESSDiscreteControl_class_data_;
// -------------------------------------------------------------------

class ESSCSG final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:essmodule.ESSCSG) */ {
 public:
  inline ESSCSG() : ESSCSG(nullptr) {}
  ~ESSCSG() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ESSCSG* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ESSCSG));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ESSCSG(::google::protobuf::internal::ConstantInitialized);

  inline ESSCSG(const ESSCSG& from) : ESSCSG(nullptr, from) {}
  inline ESSCSG(ESSCSG&& from) noexcept
      : ESSCSG(nullptr, ::std::move(from)) {}
  inline ESSCSG& operator=(const ESSCSG& from) {
    CopyFrom(from);
    return *this;
  }
  inline ESSCSG& operator=(ESSCSG&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ESSCSG& default_instance() {
    return *reinterpret_cast<const ESSCSG*>(
        &_ESSCSG_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(ESSCSG& a, ESSCSG& b) { a.Swap(&b); }
  inline void Swap(ESSCSG* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ESSCSG* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ESSCSG* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ESSCSG>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ESSCSG& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ESSCSG& from) { ESSCSG::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ESSCSG* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "essmodule.ESSCSG"; }

 protected:
  explicit ESSCSG(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ESSCSG(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ESSCSG& from);
  ESSCSG(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ESSCSG&& from) noexcept
      : ESSCSG(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCrvPtsFieldNumber = 1,
  };
  // repeated .essmodule.ESSCurvePoint crvPts = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  int crvpts_size() const;
  private:
  int _internal_crvpts_size() const;

  public:
  void clear_crvpts() ;
  ::essmodule::ESSCurvePoint* PROTOBUF_NONNULL mutable_crvpts(int index);
  ::google::protobuf::RepeatedPtrField<::essmodule::ESSCurvePoint>* PROTOBUF_NONNULL mutable_crvpts();

  private:
  const ::google::protobuf::RepeatedPtrField<::essmodule::ESSCurvePoint>& _internal_crvpts() const;
  ::google::protobuf::RepeatedPtrField<::essmodule::ESSCurvePoint>* PROTOBUF_NONNULL _internal_mutable_crvpts();
  public:
  const ::essmodule::ESSCurvePoint& crvpts(int index) const;
  ::essmodule::ESSCurvePoint* PROTOBUF_NONNULL add_crvpts();
  const ::google::protobuf::RepeatedPtrField<::essmodule::ESSCurvePoint>& crvpts() const;
  // @@protoc_insertion_point(class_scope:essmodule.ESSCSG)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ESSCSG& from_msg);
    ::google::protobuf::RepeatedPtrField< ::essmodule::ESSCurvePoint > crvpts_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_essmodule_2fessmodule_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ESSCSG_class_data_;
// -------------------------------------------------------------------

class ESSStatus final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:essmodule.ESSStatus) */ {
 public:
  inline ESSStatus() : ESSStatus(nullptr) {}
  ~ESSStatus() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ESSStatus* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ESSStatus));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ESSStatus(::google::protobuf::internal::ConstantInitialized);

  inline ESSStatus(const ESSStatus& from) : ESSStatus(nullptr, from) {}
  inline ESSStatus(ESSStatus&& from) noexcept
      : ESSStatus(nullptr, ::std::move(from)) {}
  inline ESSStatus& operator=(const ESSStatus& from) {
    CopyFrom(from);
    return *this;
  }
  inline ESSStatus& operator=(ESSStatus&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ESSStatus& default_instance() {
    return *reinterpret_cast<const ESSStatus*>(
        &_ESSStatus_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 27;
  friend void swap(ESSStatus& a, ESSStatus& b) { a.Swap(&b); }
  inline void Swap(ESSStatus* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ESSStatus* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ESSStatus* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ESSStatus>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ESSStatus& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ESSStatus& from) { ESSStatus::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ESSStatus* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "essmodule.ESSStatus"; }

 protected:
  explicit ESSStatus(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ESSStatus(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ESSStatus& from);
  ESSStatus(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ESSStatus&& from) noexcept
      : ESSStatus(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kStatusValueFieldNumber = 1,
    kEssStatusZBATFieldNumber = 2,
    kEssStatusZGENFieldNumber = 3,
  };
  // .commonmodule.StatusValue statusValue = 1 [(.uml.option_parent_message) = true];
  bool has_statusvalue() const;
  void clear_statusvalue() ;
  const ::commonmodule::StatusValue& statusvalue() const;
  [[nodiscard]] ::commonmodule::StatusValue* PROTOBUF_NULLABLE release_statusvalue();
  ::commonmodule::StatusValue* PROTOBUF_NONNULL mutable_statusvalue();
  void set_allocated_statusvalue(::commonmodule::StatusValue* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_statusvalue(::commonmodule::StatusValue* PROTOBUF_NULLABLE value);
  ::commonmodule::StatusValue* PROTOBUF_NULLABLE unsafe_arena_release_statusvalue();

  private:
  const ::commonmodule::StatusValue& _internal_statusvalue() const;
  ::commonmodule::StatusValue* PROTOBUF_NONNULL _internal_mutable_statusvalue();

  public:
  // .essmodule.EssStatusZBAT essStatusZBAT = 2;
  bool has_essstatuszbat() const;
  void clear_essstatuszbat() ;
  const ::essmodule::EssStatusZBAT& essstatuszbat() const;
  [[nodiscard]] ::essmodule::EssStatusZBAT* PROTOBUF_NULLABLE release_essstatuszbat();
  ::essmodule::EssStatusZBAT* PROTOBUF_NONNULL mutable_essstatuszbat();
  void set_allocated_essstatuszbat(::essmodule::EssStatusZBAT* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_essstatuszbat(::essmodule::EssStatusZBAT* PROTOBUF_NULLABLE value);
  ::essmodule::EssStatusZBAT* PROTOBUF_NULLABLE unsafe_arena_release_essstatuszbat();

  private:
  const ::essmodule::EssStatusZBAT& _internal_essstatuszbat() const;
  ::essmodule::EssStatusZBAT* PROTOBUF_NONNULL _internal_mutable_essstatuszbat();

  public:
  // .essmodule.ESSStatusZGEN essStatusZGEN = 3;
  bool has_essstatuszgen() const;
  void clear_essstatuszgen() ;
  const ::essmodule::ESSStatusZGEN& essstatuszgen() const;
  [[nodiscard]] ::essmodule::ESSStatusZGEN* PROTOBUF_NULLABLE release_essstatuszgen();
  ::essmodule::ESSStatusZGEN* PROTOBUF_NONNULL mutable_essstatuszgen();
  void set_allocated_essstatuszgen(::essmodule::ESSStatusZGEN* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_essstatuszgen(::essmodule::ESSStatusZGEN* PROTOBUF_NULLABLE value);
  ::essmodule::ESSStatusZGEN* PROTOBUF_NULLABLE unsafe_arena_release_essstatuszgen();

  private:
  const ::essmodule::ESSStatusZGEN& _internal_essstatuszgen() const;
  ::essmodule::ESSStatusZGEN* PROTOBUF_NONNULL _internal_mutable_essstatuszgen();

  public:
  // @@protoc_insertion_point(class_scope:essmodule.ESSStatus)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   3, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ESSStatus& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::commonmodule::StatusValue* PROTOBUF_NULLABLE statusvalue_;
    ::essmodule::EssStatusZBAT* PROTOBUF_NULLABLE essstatuszbat_;
    ::essmodule::ESSStatusZGEN* PROTOBUF_NULLABLE essstatuszgen_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_essmodule_2fessmodule_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ESSStatus_class_data_;
// -------------------------------------------------------------------

class ESSEvent final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:essmodule.ESSEvent) */ {
 public:
  inline ESSEvent() : ESSEvent(nullptr) {}
  ~ESSEvent() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ESSEvent* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ESSEvent));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ESSEvent(::google::protobuf::internal::ConstantInitialized);

  inline ESSEvent(const ESSEvent& from) : ESSEvent(nullptr, from) {}
  inline ESSEvent(ESSEvent&& from) noexcept
      : ESSEvent(nullptr, ::std::move(from)) {}
  inline ESSEvent& operator=(const ESSEvent& from) {
    CopyFrom(from);
    return *this;
  }
  inline ESSEvent& operator=(ESSEvent&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ESSEvent& default_instance() {
    return *reinterpret_cast<const ESSEvent*>(
        &_ESSEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 21;
  friend void swap(ESSEvent& a, ESSEvent& b) { a.Swap(&b); }
  inline void Swap(ESSEvent* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ESSEvent* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ESSEvent* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ESSEvent>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ESSEvent& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ESSEvent& from) { ESSEvent::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ESSEvent* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "essmodule.ESSEvent"; }

 protected:
  explicit ESSEvent(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ESSEvent(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ESSEvent& from);
  ESSEvent(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ESSEvent&& from) noexcept
      : ESSEvent(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEventValueFieldNumber = 1,
    kEssEventZBATFieldNumber = 2,
    kEssEventZGENFieldNumber = 3,
  };
  // .commonmodule.EventValue eventValue = 1 [(.uml.option_parent_message) = true];
  bool has_eventvalue() const;
  void clear_eventvalue() ;
  const ::commonmodule::EventValue& eventvalue() const;
  [[nodiscard]] ::commonmodule::EventValue* PROTOBUF_NULLABLE release_eventvalue();
  ::commonmodule::EventValue* PROTOBUF_NONNULL mutable_eventvalue();
  void set_allocated_eventvalue(::commonmodule::EventValue* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_eventvalue(::commonmodule::EventValue* PROTOBUF_NULLABLE value);
  ::commonmodule::EventValue* PROTOBUF_NULLABLE unsafe_arena_release_eventvalue();

  private:
  const ::commonmodule::EventValue& _internal_eventvalue() const;
  ::commonmodule::EventValue* PROTOBUF_NONNULL _internal_mutable_eventvalue();

  public:
  // .essmodule.EssEventZBAT essEventZBAT = 2;
  bool has_esseventzbat() const;
  void clear_esseventzbat() ;
  const ::essmodule::EssEventZBAT& esseventzbat() const;
  [[nodiscard]] ::essmodule::EssEventZBAT* PROTOBUF_NULLABLE release_esseventzbat();
  ::essmodule::EssEventZBAT* PROTOBUF_NONNULL mutable_esseventzbat();
  void set_allocated_esseventzbat(::essmodule::EssEventZBAT* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_esseventzbat(::essmodule::EssEventZBAT* PROTOBUF_NULLABLE value);
  ::essmodule::EssEventZBAT* PROTOBUF_NULLABLE unsafe_arena_release_esseventzbat();

  private:
  const ::essmodule::EssEventZBAT& _internal_esseventzbat() const;
  ::essmodule::EssEventZBAT* PROTOBUF_NONNULL _internal_mutable_esseventzbat();

  public:
  // .essmodule.ESSEventZGEN essEventZGEN = 3;
  bool has_esseventzgen() const;
  void clear_esseventzgen() ;
  const ::essmodule::ESSEventZGEN& esseventzgen() const;
  [[nodiscard]] ::essmodule::ESSEventZGEN* PROTOBUF_NULLABLE release_esseventzgen();
  ::essmodule::ESSEventZGEN* PROTOBUF_NONNULL mutable_esseventzgen();
  void set_allocated_esseventzgen(::essmodule::ESSEventZGEN* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_esseventzgen(::essmodule::ESSEventZGEN* PROTOBUF_NULLABLE value);
  ::essmodule::ESSEventZGEN* PROTOBUF_NULLABLE unsafe_arena_release_esseventzgen();

  private:
  const ::essmodule::ESSEventZGEN& _internal_esseventzgen() const;
  ::essmodule::ESSEventZGEN* PROTOBUF_NONNULL _internal_mutable_esseventzgen();

  public:
  // @@protoc_insertion_point(class_scope:essmodule.ESSEvent)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   3, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ESSEvent& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::commonmodule::EventValue* PROTOBUF_NULLABLE eventvalue_;
    ::essmodule::EssEventZBAT* PROTOBUF_NULLABLE esseventzbat_;
    ::essmodule::ESSEventZGEN* PROTOBUF_NULLABLE esseventzgen_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_essmodule_2fessmodule_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ESSEvent_class_data_;
// -------------------------------------------------------------------

class ESSDiscreteControlProfile final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:essmodule.ESSDiscreteControlProfile) */ {
 public:
  inline ESSDiscreteControlProfile() : ESSDiscreteControlProfile(nullptr) {}
  ~ESSDiscreteControlProfile() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ESSDiscreteControlProfile* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ESSDiscreteControlProfile));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ESSDiscreteControlProfile(::google::protobuf::internal::ConstantInitialized);

  inline ESSDiscreteControlProfile(const ESSDiscreteControlProfile& from) : ESSDiscreteControlProfile(nullptr, from) {}
  inline ESSDiscreteControlProfile(ESSDiscreteControlProfile&& from) noexcept
      : ESSDiscreteControlProfile(nullptr, ::std::move(from)) {}
  inline ESSDiscreteControlProfile& operator=(const ESSDiscreteControlProfile& from) {
    CopyFrom(from);
    return *this;
  }
  inline ESSDiscreteControlProfile& operator=(ESSDiscreteControlProfile&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ESSDiscreteControlProfile& default_instance() {
    return *reinterpret_cast<const ESSDiscreteControlProfile*>(
        &_ESSDiscreteControlProfile_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 16;
  friend void swap(ESSDiscreteControlProfile& a, ESSDiscreteControlProfile& b) { a.Swap(&b); }
  inline void Swap(ESSDiscreteControlProfile* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ESSDiscreteControlProfile* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ESSDiscreteControlProfile* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ESSDiscreteControlProfile>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ESSDiscreteControlProfile& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ESSDiscreteControlProfile& from) { ESSDiscreteControlProfile::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ESSDiscreteControlProfile* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "essmodule.ESSDiscreteControlProfile"; }

 protected:
  explicit ESSDiscreteControlProfile(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ESSDiscreteControlProfile(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ESSDiscreteControlProfile& from);
  ESSDiscreteControlProfile(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ESSDiscreteControlProfile&& from) noexcept
      : ESSDiscreteControlProfile(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kControlMessageInfoFieldNumber = 1,
    kEssFieldNumber = 2,
    kEssDiscreteControlFieldNumber = 3,
  };
  // .commonmodule.ControlMessageInfo controlMessageInfo = 1 [(.uml.option_parent_message) = true];
  bool has_controlmessageinfo() const;
  void clear_controlmessageinfo() ;
  const ::commonmodule::ControlMessageInfo& controlmessageinfo() const;
  [[nodiscard]] ::commonmodule::ControlMessageInfo* PROTOBUF_NULLABLE release_controlmessageinfo();
  ::commonmodule::ControlMessageInfo* PROTOBUF_NONNULL mutable_controlmessageinfo();
  void set_allocated_controlmessageinfo(::commonmodule::ControlMessageInfo* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_controlmessageinfo(::commonmodule::ControlMessageInfo* PROTOBUF_NULLABLE value);
  ::commonmodule::ControlMessageInfo* PROTOBUF_NULLABLE unsafe_arena_release_controlmessageinfo();

  private:
  const ::commonmodule::ControlMessageInfo& _internal_controlmessageinfo() const;
  ::commonmodule::ControlMessageInfo* PROTOBUF_NONNULL _internal_mutable_controlmessageinfo();

  public:
  // .commonmodule.ESS ess = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  bool has_ess() const;
  void clear_ess() ;
  const ::commonmodule::ESS& ess() const;
  [[nodiscard]] ::commonmodule::ESS* PROTOBUF_NULLABLE release_ess();
  ::commonmodule::ESS* PROTOBUF_NONNULL mutable_ess();
  void set_allocated_ess(::commonmodule::ESS* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_ess(::commonmodule::ESS* PROTOBUF_NULLABLE value);
  ::commonmodule::ESS* PROTOBUF_NULLABLE unsafe_arena_release_ess();

  private:
  const ::commonmodule::ESS& _internal_ess() const;
  ::commonmodule::ESS* PROTOBUF_NONNULL _internal_mutable_ess();

  public:
  // .essmodule.ESSDiscreteControl essDiscreteControl = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  bool has_essdiscretecontrol() const;
  void clear_essdiscretecontrol() ;
  const ::essmodule::ESSDiscreteControl& essdiscretecontrol() const;
  [[nodiscard]] ::essmodule::ESSDiscreteControl* PROTOBUF_NULLABLE release_essdiscretecontrol();
  ::essmodule::ESSDiscreteControl* PROTOBUF_NONNULL mutable_essdiscretecontrol();
  void set_allocated_essdiscretecontrol(::essmodule::ESSDiscreteControl* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_essdiscretecontrol(::essmodule::ESSDiscreteControl* PROTOBUF_NULLABLE value);
  ::essmodule::ESSDiscreteControl* PROTOBUF_NULLABLE unsafe_arena_release_essdiscretecontrol();

  private:
  const ::essmodule::ESSDiscreteControl& _internal_essdiscretecontrol() const;
  ::essmodule::ESSDiscreteControl* PROTOBUF_NONNULL _internal_mutable_essdiscretecontrol();

  public:
  // @@protoc_insertion_point(class_scope:essmodule.ESSDiscreteControlProfile)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   3, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ESSDiscreteControlProfile& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::commonmodule::ControlMessageInfo* PROTOBUF_NULLABLE controlmessageinfo_;
    ::commonmodule::ESS* PROTOBUF_NULLABLE ess_;
    ::essmodule::ESSDiscreteControl* PROTOBUF_NULLABLE essdiscretecontrol_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_essmodule_2fessmodule_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ESSDiscreteControlProfile_class_data_;
// -------------------------------------------------------------------

class ESSControlScheduleFSCH final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:essmodule.ESSControlScheduleFSCH) */ {
 public:
  inline ESSControlScheduleFSCH() : ESSControlScheduleFSCH(nullptr) {}
  ~ESSControlScheduleFSCH() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ESSControlScheduleFSCH* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ESSControlScheduleFSCH));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ESSControlScheduleFSCH(::google::protobuf::internal::ConstantInitialized);

  inline ESSControlScheduleFSCH(const ESSControlScheduleFSCH& from) : ESSControlScheduleFSCH(nullptr, from) {}
  inline ESSControlScheduleFSCH(ESSControlScheduleFSCH&& from) noexcept
      : ESSControlScheduleFSCH(nullptr, ::std::move(from)) {}
  inline ESSControlScheduleFSCH& operator=(const ESSControlScheduleFSCH& from) {
    CopyFrom(from);
    return *this;
  }
  inline ESSControlScheduleFSCH& operator=(ESSControlScheduleFSCH&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ESSControlScheduleFSCH& default_instance() {
    return *reinterpret_cast<const ESSControlScheduleFSCH*>(
        &_ESSControlScheduleFSCH_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(ESSControlScheduleFSCH& a, ESSControlScheduleFSCH& b) { a.Swap(&b); }
  inline void Swap(ESSControlScheduleFSCH* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ESSControlScheduleFSCH* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ESSControlScheduleFSCH* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ESSControlScheduleFSCH>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ESSControlScheduleFSCH& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ESSControlScheduleFSCH& from) { ESSControlScheduleFSCH::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ESSControlScheduleFSCH* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "essmodule.ESSControlScheduleFSCH"; }

 protected:
  explicit ESSControlScheduleFSCH(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ESSControlScheduleFSCH(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ESSControlScheduleFSCH& from);
  ESSControlScheduleFSCH(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ESSControlScheduleFSCH&& from) noexcept
      : ESSControlScheduleFSCH(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kValDCSGFieldNumber = 1,
  };
  // .essmodule.ESSCSG ValDCSG = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  bool has_valdcsg() const;
  void clear_valdcsg() ;
  const ::essmodule::ESSCSG& valdcsg() const;
  [[nodiscard]] ::essmodule::ESSCSG* PROTOBUF_NULLABLE release_valdcsg();
  ::essmodule::ESSCSG* PROTOBUF_NONNULL mutable_valdcsg();
  void set_allocated_valdcsg(::essmodule::ESSCSG* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_valdcsg(::essmodule::ESSCSG* PROTOBUF_NULLABLE value);
  ::essmodule::ESSCSG* PROTOBUF_NULLABLE unsafe_arena_release_valdcsg();

  private:
  const ::essmodule::ESSCSG& _internal_valdcsg() const;
  ::essmodule::ESSCSG* PROTOBUF_NONNULL _internal_mutable_valdcsg();

  public:
  // @@protoc_insertion_point(class_scope:essmodule.ESSControlScheduleFSCH)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ESSControlScheduleFSCH& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::essmodule::ESSCSG* PROTOBUF_NULLABLE valdcsg_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_essmodule_2fessmodule_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ESSControlScheduleFSCH_class_data_;
// -------------------------------------------------------------------

class EssControlFSCC final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:essmodule.EssControlFSCC) */ {
 public:
  inline EssControlFSCC() : EssControlFSCC(nullptr) {}
  ~EssControlFSCC() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(EssControlFSCC* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(EssControlFSCC));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR EssControlFSCC(::google::protobuf::internal::ConstantInitialized);

  inline EssControlFSCC(const EssControlFSCC& from) : EssControlFSCC(nullptr, from) {}
  inline EssControlFSCC(EssControlFSCC&& from) noexcept
      : EssControlFSCC(nullptr, ::std::move(from)) {}
  inline EssControlFSCC& operator=(const EssControlFSCC& from) {
    CopyFrom(from);
    return *this;
  }
  inline EssControlFSCC& operator=(EssControlFSCC&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EssControlFSCC& default_instance() {
    return *reinterpret_cast<const EssControlFSCC*>(
        &_EssControlFSCC_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(EssControlFSCC& a, EssControlFSCC& b) { a.Swap(&b); }
  inline void Swap(EssControlFSCC* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EssControlFSCC* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EssControlFSCC* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<EssControlFSCC>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EssControlFSCC& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const EssControlFSCC& from) { EssControlFSCC::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(EssControlFSCC* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "essmodule.EssControlFSCC"; }

 protected:
  explicit EssControlFSCC(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  EssControlFSCC(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const EssControlFSCC& from);
  EssControlFSCC(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, EssControlFSCC&& from) noexcept
      : EssControlFSCC(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kControlFSCCFieldNumber = 1,
    kEssControlScheduleFSCHFieldNumber = 2,
  };
  // .commonmodule.ControlFSCC controlFSCC = 1 [(.uml.option_parent_message) = true];
  bool has_controlfscc() const;
  void clear_controlfscc() ;
  const ::commonmodule::ControlFSCC& controlfscc() const;
  [[nodiscard]] ::commonmodule::ControlFSCC* PROTOBUF_NULLABLE release_controlfscc();
  ::commonmodule::ControlFSCC* PROTOBUF_NONNULL mutable_controlfscc();
  void set_allocated_controlfscc(::commonmodule::ControlFSCC* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_controlfscc(::commonmodule::ControlFSCC* PROTOBUF_NULLABLE value);
  ::commonmodule::ControlFSCC* PROTOBUF_NULLABLE unsafe_arena_release_controlfscc();

  private:
  const ::commonmodule::ControlFSCC& _internal_controlfscc() const;
  ::commonmodule::ControlFSCC* PROTOBUF_NONNULL _internal_mutable_controlfscc();

  public:
  // .essmodule.ESSControlScheduleFSCH essControlScheduleFSCH = 2;
  bool has_esscontrolschedulefsch() const;
  void clear_esscontrolschedulefsch() ;
  const ::essmodule::ESSControlScheduleFSCH& esscontrolschedulefsch() const;
  [[nodiscard]] ::essmodule::ESSControlScheduleFSCH* PROTOBUF_NULLABLE release_esscontrolschedulefsch();
  ::essmodule::ESSControlScheduleFSCH* PROTOBUF_NONNULL mutable_esscontrolschedulefsch();
  void set_allocated_esscontrolschedulefsch(::essmodule::ESSControlScheduleFSCH* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_esscontrolschedulefsch(::essmodule::ESSControlScheduleFSCH* PROTOBUF_NULLABLE value);
  ::essmodule::ESSControlScheduleFSCH* PROTOBUF_NULLABLE unsafe_arena_release_esscontrolschedulefsch();

  private:
  const ::essmodule::ESSControlScheduleFSCH& _internal_esscontrolschedulefsch() const;
  ::essmodule::ESSControlScheduleFSCH* PROTOBUF_NONNULL _internal_mutable_esscontrolschedulefsch();

  public:
  // @@protoc_insertion_point(class_scope:essmodule.EssControlFSCC)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   2, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const EssControlFSCC& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::commonmodule::ControlFSCC* PROTOBUF_NULLABLE controlfscc_;
    ::essmodule::ESSControlScheduleFSCH* PROTOBUF_NULLABLE esscontrolschedulefsch_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_essmodule_2fessmodule_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull EssControlFSCC_class_data_;
// -------------------------------------------------------------------

class ESSStatusProfile final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:essmodule.ESSStatusProfile) */ {
 public:
  inline ESSStatusProfile() : ESSStatusProfile(nullptr) {}
  ~ESSStatusProfile() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ESSStatusProfile* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ESSStatusProfile));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ESSStatusProfile(::google::protobuf::internal::ConstantInitialized);

  inline ESSStatusProfile(const ESSStatusProfile& from) : ESSStatusProfile(nullptr, from) {}
  inline ESSStatusProfile(ESSStatusProfile&& from) noexcept
      : ESSStatusProfile(nullptr, ::std::move(from)) {}
  inline ESSStatusProfile& operator=(const ESSStatusProfile& from) {
    CopyFrom(from);
    return *this;
  }
  inline ESSStatusProfile& operator=(ESSStatusProfile&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ESSStatusProfile& default_instance() {
    return *reinterpret_cast<const ESSStatusProfile*>(
        &_ESSStatusProfile_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 28;
  friend void swap(ESSStatusProfile& a, ESSStatusProfile& b) { a.Swap(&b); }
  inline void Swap(ESSStatusProfile* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ESSStatusProfile* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ESSStatusProfile* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ESSStatusProfile>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ESSStatusProfile& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ESSStatusProfile& from) { ESSStatusProfile::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ESSStatusProfile* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "essmodule.ESSStatusProfile"; }

 protected:
  explicit ESSStatusProfile(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ESSStatusProfile(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ESSStatusProfile& from);
  ESSStatusProfile(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ESSStatusProfile&& from) noexcept
      : ESSStatusProfile(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kStatusMessageInfoFieldNumber = 1,
    kEssFieldNumber = 2,
    kEssStatusFieldNumber = 3,
  };
  // .commonmodule.StatusMessageInfo statusMessageInfo = 1 [(.uml.option_parent_message) = true];
  bool has_statusmessageinfo() const;
  void clear_statusmessageinfo() ;
  const ::commonmodule::StatusMessageInfo& statusmessageinfo() const;
  [[nodiscard]] ::commonmodule::StatusMessageInfo* PROTOBUF_NULLABLE release_statusmessageinfo();
  ::commonmodule::StatusMessageInfo* PROTOBUF_NONNULL mutable_statusmessageinfo();
  void set_allocated_statusmessageinfo(::commonmodule::StatusMessageInfo* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_statusmessageinfo(::commonmodule::StatusMessageInfo* PROTOBUF_NULLABLE value);
  ::commonmodule::StatusMessageInfo* PROTOBUF_NULLABLE unsafe_arena_release_statusmessageinfo();

  private:
  const ::commonmodule::StatusMessageInfo& _internal_statusmessageinfo() const;
  ::commonmodule::StatusMessageInfo* PROTOBUF_NONNULL _internal_mutable_statusmessageinfo();

  public:
  // .commonmodule.ESS ess = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  bool has_ess() const;
  void clear_ess() ;
  const ::commonmodule::ESS& ess() const;
  [[nodiscard]] ::commonmodule::ESS* PROTOBUF_NULLABLE release_ess();
  ::commonmodule::ESS* PROTOBUF_NONNULL mutable_ess();
  void set_allocated_ess(::commonmodule::ESS* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_ess(::commonmodule::ESS* PROTOBUF_NULLABLE value);
  ::commonmodule::ESS* PROTOBUF_NULLABLE unsafe_arena_release_ess();

  private:
  const ::commonmodule::ESS& _internal_ess() const;
  ::commonmodule::ESS* PROTOBUF_NONNULL _internal_mutable_ess();

  public:
  // .essmodule.ESSStatus essStatus = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  bool has_essstatus() const;
  void clear_essstatus() ;
  const ::essmodule::ESSStatus& essstatus() const;
  [[nodiscard]] ::essmodule::ESSStatus* PROTOBUF_NULLABLE release_essstatus();
  ::essmodule::ESSStatus* PROTOBUF_NONNULL mutable_essstatus();
  void set_allocated_essstatus(::essmodule::ESSStatus* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_essstatus(::essmodule::ESSStatus* PROTOBUF_NULLABLE value);
  ::essmodule::ESSStatus* PROTOBUF_NULLABLE unsafe_arena_release_essstatus();

  private:
  const ::essmodule::ESSStatus& _internal_essstatus() const;
  ::essmodule::ESSStatus* PROTOBUF_NONNULL _internal_mutable_essstatus();

  public:
  // @@protoc_insertion_point(class_scope:essmodule.ESSStatusProfile)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   3, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ESSStatusProfile& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::commonmodule::StatusMessageInfo* PROTOBUF_NULLABLE statusmessageinfo_;
    ::commonmodule::ESS* PROTOBUF_NULLABLE ess_;
    ::essmodule::ESSStatus* PROTOBUF_NULLABLE essstatus_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_essmodule_2fessmodule_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ESSStatusProfile_class_data_;
// -------------------------------------------------------------------

class ESSEventProfile final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:essmodule.ESSEventProfile) */ {
 public:
  inline ESSEventProfile() : ESSEventProfile(nullptr) {}
  ~ESSEventProfile() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ESSEventProfile* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ESSEventProfile));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ESSEventProfile(::google::protobuf::internal::ConstantInitialized);

  inline ESSEventProfile(const ESSEventProfile& from) : ESSEventProfile(nullptr, from) {}
  inline ESSEventProfile(ESSEventProfile&& from) noexcept
      : ESSEventProfile(nullptr, ::std::move(from)) {}
  inline ESSEventProfile& operator=(const ESSEventProfile& from) {
    CopyFrom(from);
    return *this;
  }
  inline ESSEventProfile& operator=(ESSEventProfile&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ESSEventProfile& default_instance() {
    return *reinterpret_cast<const ESSEventProfile*>(
        &_ESSEventProfile_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 22;
  friend void swap(ESSEventProfile& a, ESSEventProfile& b) { a.Swap(&b); }
  inline void Swap(ESSEventProfile* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ESSEventProfile* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ESSEventProfile* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ESSEventProfile>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ESSEventProfile& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ESSEventProfile& from) { ESSEventProfile::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ESSEventProfile* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "essmodule.ESSEventProfile"; }

 protected:
  explicit ESSEventProfile(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ESSEventProfile(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ESSEventProfile& from);
  ESSEventProfile(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ESSEventProfile&& from) noexcept
      : ESSEventProfile(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEventMessageInfoFieldNumber = 1,
    kEssFieldNumber = 2,
    kEssEventFieldNumber = 3,
  };
  // .commonmodule.EventMessageInfo eventMessageInfo = 1 [(.uml.option_parent_message) = true];
  bool has_eventmessageinfo() const;
  void clear_eventmessageinfo() ;
  const ::commonmodule::EventMessageInfo& eventmessageinfo() const;
  [[nodiscard]] ::commonmodule::EventMessageInfo* PROTOBUF_NULLABLE release_eventmessageinfo();
  ::commonmodule::EventMessageInfo* PROTOBUF_NONNULL mutable_eventmessageinfo();
  void set_allocated_eventmessageinfo(::commonmodule::EventMessageInfo* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_eventmessageinfo(::commonmodule::EventMessageInfo* PROTOBUF_NULLABLE value);
  ::commonmodule::EventMessageInfo* PROTOBUF_NULLABLE unsafe_arena_release_eventmessageinfo();

  private:
  const ::commonmodule::EventMessageInfo& _internal_eventmessageinfo() const;
  ::commonmodule::EventMessageInfo* PROTOBUF_NONNULL _internal_mutable_eventmessageinfo();

  public:
  // .commonmodule.ESS ess = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  bool has_ess() const;
  void clear_ess() ;
  const ::commonmodule::ESS& ess() const;
  [[nodiscard]] ::commonmodule::ESS* PROTOBUF_NULLABLE release_ess();
  ::commonmodule::ESS* PROTOBUF_NONNULL mutable_ess();
  void set_allocated_ess(::commonmodule::ESS* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_ess(::commonmodule::ESS* PROTOBUF_NULLABLE value);
  ::commonmodule::ESS* PROTOBUF_NULLABLE unsafe_arena_release_ess();

  private:
  const ::commonmodule::ESS& _internal_ess() const;
  ::commonmodule::ESS* PROTOBUF_NONNULL _internal_mutable_ess();

  public:
  // .essmodule.ESSEvent essEvent = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  bool has_essevent() const;
  void clear_essevent() ;
  const ::essmodule::ESSEvent& essevent() const;
  [[nodiscard]] ::essmodule::ESSEvent* PROTOBUF_NULLABLE release_essevent();
  ::essmodule::ESSEvent* PROTOBUF_NONNULL mutable_essevent();
  void set_allocated_essevent(::essmodule::ESSEvent* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_essevent(::essmodule::ESSEvent* PROTOBUF_NULLABLE value);
  ::essmodule::ESSEvent* PROTOBUF_NULLABLE unsafe_arena_release_essevent();

  private:
  const ::essmodule::ESSEvent& _internal_essevent() const;
  ::essmodule::ESSEvent* PROTOBUF_NONNULL _internal_mutable_essevent();

  public:
  // @@protoc_insertion_point(class_scope:essmodule.ESSEventProfile)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   3, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ESSEventProfile& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::commonmodule::EventMessageInfo* PROTOBUF_NULLABLE eventmessageinfo_;
    ::commonmodule::ESS* PROTOBUF_NULLABLE ess_;
    ::essmodule::ESSEvent* PROTOBUF_NULLABLE essevent_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_essmodule_2fessmodule_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ESSEventProfile_class_data_;
// -------------------------------------------------------------------

class ESSControl final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:essmodule.ESSControl) */ {
 public:
  inline ESSControl() : ESSControl(nullptr) {}
  ~ESSControl() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ESSControl* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ESSControl));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ESSControl(::google::protobuf::internal::ConstantInitialized);

  inline ESSControl(const ESSControl& from) : ESSControl(nullptr, from) {}
  inline ESSControl(ESSControl&& from) noexcept
      : ESSControl(nullptr, ::std::move(from)) {}
  inline ESSControl& operator=(const ESSControl& from) {
    CopyFrom(from);
    return *this;
  }
  inline ESSControl& operator=(ESSControl&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ESSControl& default_instance() {
    return *reinterpret_cast<const ESSControl*>(
        &_ESSControl_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 12;
  friend void swap(ESSControl& a, ESSControl& b) { a.Swap(&b); }
  inline void Swap(ESSControl* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ESSControl* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ESSControl* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ESSControl>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ESSControl& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ESSControl& from) { ESSControl::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ESSControl* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "essmodule.ESSControl"; }

 protected:
  explicit ESSControl(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ESSControl(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ESSControl& from);
  ESSControl(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ESSControl&& from) noexcept
      : ESSControl(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kControlValueFieldNumber = 1,
    kCheckFieldNumber = 2,
    kEssControlFSCCFieldNumber = 3,
  };
  // .commonmodule.ControlValue controlValue = 1 [(.uml.option_parent_message) = true];
  bool has_controlvalue() const;
  void clear_controlvalue() ;
  const ::commonmodule::ControlValue& controlvalue() const;
  [[nodiscard]] ::commonmodule::ControlValue* PROTOBUF_NULLABLE release_controlvalue();
  ::commonmodule::ControlValue* PROTOBUF_NONNULL mutable_controlvalue();
  void set_allocated_controlvalue(::commonmodule::ControlValue* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_controlvalue(::commonmodule::ControlValue* PROTOBUF_NULLABLE value);
  ::commonmodule::ControlValue* PROTOBUF_NULLABLE unsafe_arena_release_controlvalue();

  private:
  const ::commonmodule::ControlValue& _internal_controlvalue() const;
  ::commonmodule::ControlValue* PROTOBUF_NONNULL _internal_mutable_controlvalue();

  public:
  // .commonmodule.CheckConditions check = 2;
  bool has_check() const;
  void clear_check() ;
  const ::commonmodule::CheckConditions& check() const;
  [[nodiscard]] ::commonmodule::CheckConditions* PROTOBUF_NULLABLE release_check();
  ::commonmodule::CheckConditions* PROTOBUF_NONNULL mutable_check();
  void set_allocated_check(::commonmodule::CheckConditions* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_check(::commonmodule::CheckConditions* PROTOBUF_NULLABLE value);
  ::commonmodule::CheckConditions* PROTOBUF_NULLABLE unsafe_arena_release_check();

  private:
  const ::commonmodule::CheckConditions& _internal_check() const;
  ::commonmodule::CheckConditions* PROTOBUF_NONNULL _internal_mutable_check();

  public:
  // .essmodule.EssControlFSCC essControlFSCC = 3;
  bool has_esscontrolfscc() const;
  void clear_esscontrolfscc() ;
  const ::essmodule::EssControlFSCC& esscontrolfscc() const;
  [[nodiscard]] ::essmodule::EssControlFSCC* PROTOBUF_NULLABLE release_esscontrolfscc();
  ::essmodule::EssControlFSCC* PROTOBUF_NONNULL mutable_esscontrolfscc();
  void set_allocated_esscontrolfscc(::essmodule::EssControlFSCC* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_esscontrolfscc(::essmodule::EssControlFSCC* PROTOBUF_NULLABLE value);
  ::essmodule::EssControlFSCC* PROTOBUF_NULLABLE unsafe_arena_release_esscontrolfscc();

  private:
  const ::essmodule::EssControlFSCC& _internal_esscontrolfscc() const;
  ::essmodule::EssControlFSCC* PROTOBUF_NONNULL _internal_mutable_esscontrolfscc();

  public:
  // @@protoc_insertion_point(class_scope:essmodule.ESSControl)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   3, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ESSControl& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::commonmodule::ControlValue* PROTOBUF_NULLABLE controlvalue_;
    ::commonmodule::CheckConditions* PROTOBUF_NULLABLE check_;
    ::essmodule::EssControlFSCC* PROTOBUF_NULLABLE esscontrolfscc_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_essmodule_2fessmodule_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ESSControl_class_data_;
// -------------------------------------------------------------------

class ESSControlProfile final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:essmodule.ESSControlProfile) */ {
 public:
  inline ESSControlProfile() : ESSControlProfile(nullptr) {}
  ~ESSControlProfile() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ESSControlProfile* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ESSControlProfile));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ESSControlProfile(::google::protobuf::internal::ConstantInitialized);

  inline ESSControlProfile(const ESSControlProfile& from) : ESSControlProfile(nullptr, from) {}
  inline ESSControlProfile(ESSControlProfile&& from) noexcept
      : ESSControlProfile(nullptr, ::std::move(from)) {}
  inline ESSControlProfile& operator=(const ESSControlProfile& from) {
    CopyFrom(from);
    return *this;
  }
  inline ESSControlProfile& operator=(ESSControlProfile&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ESSControlProfile& default_instance() {
    return *reinterpret_cast<const ESSControlProfile*>(
        &_ESSControlProfile_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 13;
  friend void swap(ESSControlProfile& a, ESSControlProfile& b) { a.Swap(&b); }
  inline void Swap(ESSControlProfile* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ESSControlProfile* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ESSControlProfile* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ESSControlProfile>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ESSControlProfile& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ESSControlProfile& from) { ESSControlProfile::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ESSControlProfile* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "essmodule.ESSControlProfile"; }

 protected:
  explicit ESSControlProfile(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ESSControlProfile(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ESSControlProfile& from);
  ESSControlProfile(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ESSControlProfile&& from) noexcept
      : ESSControlProfile(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kControlMessageInfoFieldNumber = 1,
    kEssFieldNumber = 2,
    kEssControlFieldNumber = 3,
  };
  // .commonmodule.ControlMessageInfo controlMessageInfo = 1 [(.uml.option_parent_message) = true];
  bool has_controlmessageinfo() const;
  void clear_controlmessageinfo() ;
  const ::commonmodule::ControlMessageInfo& controlmessageinfo() const;
  [[nodiscard]] ::commonmodule::ControlMessageInfo* PROTOBUF_NULLABLE release_controlmessageinfo();
  ::commonmodule::ControlMessageInfo* PROTOBUF_NONNULL mutable_controlmessageinfo();
  void set_allocated_controlmessageinfo(::commonmodule::ControlMessageInfo* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_controlmessageinfo(::commonmodule::ControlMessageInfo* PROTOBUF_NULLABLE value);
  ::commonmodule::ControlMessageInfo* PROTOBUF_NULLABLE unsafe_arena_release_controlmessageinfo();

  private:
  const ::commonmodule::ControlMessageInfo& _internal_controlmessageinfo() const;
  ::commonmodule::ControlMessageInfo* PROTOBUF_NONNULL _internal_mutable_controlmessageinfo();

  public:
  // .commonmodule.ESS ess = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  bool has_ess() const;
  void clear_ess() ;
  const ::commonmodule::ESS& ess() const;
  [[nodiscard]] ::commonmodule::ESS* PROTOBUF_NULLABLE release_ess();
  ::commonmodule::ESS* PROTOBUF_NONNULL mutable_ess();
  void set_allocated_ess(::commonmodule::ESS* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_ess(::commonmodule::ESS* PROTOBUF_NULLABLE value);
  ::commonmodule::ESS* PROTOBUF_NULLABLE unsafe_arena_release_ess();

  private:
  const ::commonmodule::ESS& _internal_ess() const;
  ::commonmodule::ESS* PROTOBUF_NONNULL _internal_mutable_ess();

  public:
  // .essmodule.ESSControl essControl = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  bool has_esscontrol() const;
  void clear_esscontrol() ;
  const ::essmodule::ESSControl& esscontrol() const;
  [[nodiscard]] ::essmodule::ESSControl* PROTOBUF_NULLABLE release_esscontrol();
  ::essmodule::ESSControl* PROTOBUF_NONNULL mutable_esscontrol();
  void set_allocated_esscontrol(::essmodule::ESSControl* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_esscontrol(::essmodule::ESSControl* PROTOBUF_NULLABLE value);
  ::essmodule::ESSControl* PROTOBUF_NULLABLE unsafe_arena_release_esscontrol();

  private:
  const ::essmodule::ESSControl& _internal_esscontrol() const;
  ::essmodule::ESSControl* PROTOBUF_NONNULL _internal_mutable_esscontrol();

  public:
  // @@protoc_insertion_point(class_scope:essmodule.ESSControlProfile)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   3, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ESSControlProfile& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::commonmodule::ControlMessageInfo* PROTOBUF_NULLABLE controlmessageinfo_;
    ::commonmodule::ESS* PROTOBUF_NULLABLE ess_;
    ::essmodule::ESSControl* PROTOBUF_NULLABLE esscontrol_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_essmodule_2fessmodule_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ESSControlProfile_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// ESSCapabilityConfiguration

// .commonmodule.SourceCapabilityConfiguration sourceCapabilityConfiguration = 1 [(.uml.option_parent_message) = true];
inline bool ESSCapabilityConfiguration::has_sourcecapabilityconfiguration() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.sourcecapabilityconfiguration_ != nullptr);
  return value;
}
inline const ::commonmodule::SourceCapabilityConfiguration& ESSCapabilityConfiguration::_internal_sourcecapabilityconfiguration() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::SourceCapabilityConfiguration* p = _impl_.sourcecapabilityconfiguration_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::SourceCapabilityConfiguration&>(::commonmodule::_SourceCapabilityConfiguration_default_instance_);
}
inline const ::commonmodule::SourceCapabilityConfiguration& ESSCapabilityConfiguration::sourcecapabilityconfiguration() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSCapabilityConfiguration.sourceCapabilityConfiguration)
  return _internal_sourcecapabilityconfiguration();
}
inline void ESSCapabilityConfiguration::unsafe_arena_set_allocated_sourcecapabilityconfiguration(
    ::commonmodule::SourceCapabilityConfiguration* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.sourcecapabilityconfiguration_);
  }
  _impl_.sourcecapabilityconfiguration_ = reinterpret_cast<::commonmodule::SourceCapabilityConfiguration*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSCapabilityConfiguration.sourceCapabilityConfiguration)
}
inline ::commonmodule::SourceCapabilityConfiguration* PROTOBUF_NULLABLE ESSCapabilityConfiguration::release_sourcecapabilityconfiguration() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::commonmodule::SourceCapabilityConfiguration* released = _impl_.sourcecapabilityconfiguration_;
  _impl_.sourcecapabilityconfiguration_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::SourceCapabilityConfiguration* PROTOBUF_NULLABLE ESSCapabilityConfiguration::unsafe_arena_release_sourcecapabilityconfiguration() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSCapabilityConfiguration.sourceCapabilityConfiguration)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::commonmodule::SourceCapabilityConfiguration* temp = _impl_.sourcecapabilityconfiguration_;
  _impl_.sourcecapabilityconfiguration_ = nullptr;
  return temp;
}
inline ::commonmodule::SourceCapabilityConfiguration* PROTOBUF_NONNULL ESSCapabilityConfiguration::_internal_mutable_sourcecapabilityconfiguration() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.sourcecapabilityconfiguration_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::SourceCapabilityConfiguration>(GetArena());
    _impl_.sourcecapabilityconfiguration_ = reinterpret_cast<::commonmodule::SourceCapabilityConfiguration*>(p);
  }
  return _impl_.sourcecapabilityconfiguration_;
}
inline ::commonmodule::SourceCapabilityConfiguration* PROTOBUF_NONNULL ESSCapabilityConfiguration::mutable_sourcecapabilityconfiguration()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::commonmodule::SourceCapabilityConfiguration* _msg = _internal_mutable_sourcecapabilityconfiguration();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSCapabilityConfiguration.sourceCapabilityConfiguration)
  return _msg;
}
inline void ESSCapabilityConfiguration::set_allocated_sourcecapabilityconfiguration(::commonmodule::SourceCapabilityConfiguration* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.sourcecapabilityconfiguration_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.sourcecapabilityconfiguration_ = reinterpret_cast<::commonmodule::SourceCapabilityConfiguration*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSCapabilityConfiguration.sourceCapabilityConfiguration)
}

// .commonmodule.ASG VAChaRteMax = 2;
inline bool ESSCapabilityConfiguration::has_vachartemax() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.vachartemax_ != nullptr);
  return value;
}
inline const ::commonmodule::ASG& ESSCapabilityConfiguration::_internal_vachartemax() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::ASG* p = _impl_.vachartemax_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::ASG&>(::commonmodule::_ASG_default_instance_);
}
inline const ::commonmodule::ASG& ESSCapabilityConfiguration::vachartemax() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSCapabilityConfiguration.VAChaRteMax)
  return _internal_vachartemax();
}
inline void ESSCapabilityConfiguration::unsafe_arena_set_allocated_vachartemax(
    ::commonmodule::ASG* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.vachartemax_);
  }
  _impl_.vachartemax_ = reinterpret_cast<::commonmodule::ASG*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSCapabilityConfiguration.VAChaRteMax)
}
inline ::commonmodule::ASG* PROTOBUF_NULLABLE ESSCapabilityConfiguration::release_vachartemax() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::commonmodule::ASG* released = _impl_.vachartemax_;
  _impl_.vachartemax_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::ASG* PROTOBUF_NULLABLE ESSCapabilityConfiguration::unsafe_arena_release_vachartemax() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSCapabilityConfiguration.VAChaRteMax)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::commonmodule::ASG* temp = _impl_.vachartemax_;
  _impl_.vachartemax_ = nullptr;
  return temp;
}
inline ::commonmodule::ASG* PROTOBUF_NONNULL ESSCapabilityConfiguration::_internal_mutable_vachartemax() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.vachartemax_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::ASG>(GetArena());
    _impl_.vachartemax_ = reinterpret_cast<::commonmodule::ASG*>(p);
  }
  return _impl_.vachartemax_;
}
inline ::commonmodule::ASG* PROTOBUF_NONNULL ESSCapabilityConfiguration::mutable_vachartemax()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::commonmodule::ASG* _msg = _internal_mutable_vachartemax();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSCapabilityConfiguration.VAChaRteMax)
  return _msg;
}
inline void ESSCapabilityConfiguration::set_allocated_vachartemax(::commonmodule::ASG* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.vachartemax_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.vachartemax_ = reinterpret_cast<::commonmodule::ASG*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSCapabilityConfiguration.VAChaRteMax)
}

// .commonmodule.ASG VADisChaRteMax = 3;
inline bool ESSCapabilityConfiguration::has_vadischartemax() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.vadischartemax_ != nullptr);
  return value;
}
inline const ::commonmodule::ASG& ESSCapabilityConfiguration::_internal_vadischartemax() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::ASG* p = _impl_.vadischartemax_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::ASG&>(::commonmodule::_ASG_default_instance_);
}
inline const ::commonmodule::ASG& ESSCapabilityConfiguration::vadischartemax() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSCapabilityConfiguration.VADisChaRteMax)
  return _internal_vadischartemax();
}
inline void ESSCapabilityConfiguration::unsafe_arena_set_allocated_vadischartemax(
    ::commonmodule::ASG* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.vadischartemax_);
  }
  _impl_.vadischartemax_ = reinterpret_cast<::commonmodule::ASG*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSCapabilityConfiguration.VADisChaRteMax)
}
inline ::commonmodule::ASG* PROTOBUF_NULLABLE ESSCapabilityConfiguration::release_vadischartemax() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::commonmodule::ASG* released = _impl_.vadischartemax_;
  _impl_.vadischartemax_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::ASG* PROTOBUF_NULLABLE ESSCapabilityConfiguration::unsafe_arena_release_vadischartemax() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSCapabilityConfiguration.VADisChaRteMax)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::commonmodule::ASG* temp = _impl_.vadischartemax_;
  _impl_.vadischartemax_ = nullptr;
  return temp;
}
inline ::commonmodule::ASG* PROTOBUF_NONNULL ESSCapabilityConfiguration::_internal_mutable_vadischartemax() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.vadischartemax_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::ASG>(GetArena());
    _impl_.vadischartemax_ = reinterpret_cast<::commonmodule::ASG*>(p);
  }
  return _impl_.vadischartemax_;
}
inline ::commonmodule::ASG* PROTOBUF_NONNULL ESSCapabilityConfiguration::mutable_vadischartemax()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::commonmodule::ASG* _msg = _internal_mutable_vadischartemax();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSCapabilityConfiguration.VADisChaRteMax)
  return _msg;
}
inline void ESSCapabilityConfiguration::set_allocated_vadischartemax(::commonmodule::ASG* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.vadischartemax_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.vadischartemax_ = reinterpret_cast<::commonmodule::ASG*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSCapabilityConfiguration.VADisChaRteMax)
}

// .commonmodule.ASG WChaRteMax = 4;
inline bool ESSCapabilityConfiguration::has_wchartemax() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.wchartemax_ != nullptr);
  return value;
}
inline const ::commonmodule::ASG& ESSCapabilityConfiguration::_internal_wchartemax() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::ASG* p = _impl_.wchartemax_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::ASG&>(::commonmodule::_ASG_default_instance_);
}
inline const ::commonmodule::ASG& ESSCapabilityConfiguration::wchartemax() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSCapabilityConfiguration.WChaRteMax)
  return _internal_wchartemax();
}
inline void ESSCapabilityConfiguration::unsafe_arena_set_allocated_wchartemax(
    ::commonmodule::ASG* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.wchartemax_);
  }
  _impl_.wchartemax_ = reinterpret_cast<::commonmodule::ASG*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSCapabilityConfiguration.WChaRteMax)
}
inline ::commonmodule::ASG* PROTOBUF_NULLABLE ESSCapabilityConfiguration::release_wchartemax() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::commonmodule::ASG* released = _impl_.wchartemax_;
  _impl_.wchartemax_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::ASG* PROTOBUF_NULLABLE ESSCapabilityConfiguration::unsafe_arena_release_wchartemax() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSCapabilityConfiguration.WChaRteMax)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::commonmodule::ASG* temp = _impl_.wchartemax_;
  _impl_.wchartemax_ = nullptr;
  return temp;
}
inline ::commonmodule::ASG* PROTOBUF_NONNULL ESSCapabilityConfiguration::_internal_mutable_wchartemax() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.wchartemax_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::ASG>(GetArena());
    _impl_.wchartemax_ = reinterpret_cast<::commonmodule::ASG*>(p);
  }
  return _impl_.wchartemax_;
}
inline ::commonmodule::ASG* PROTOBUF_NONNULL ESSCapabilityConfiguration::mutable_wchartemax()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::commonmodule::ASG* _msg = _internal_mutable_wchartemax();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSCapabilityConfiguration.WChaRteMax)
  return _msg;
}
inline void ESSCapabilityConfiguration::set_allocated_wchartemax(::commonmodule::ASG* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.wchartemax_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.wchartemax_ = reinterpret_cast<::commonmodule::ASG*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSCapabilityConfiguration.WChaRteMax)
}

// .commonmodule.ASG WDisChaRteMax = 5;
inline bool ESSCapabilityConfiguration::has_wdischartemax() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.wdischartemax_ != nullptr);
  return value;
}
inline const ::commonmodule::ASG& ESSCapabilityConfiguration::_internal_wdischartemax() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::ASG* p = _impl_.wdischartemax_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::ASG&>(::commonmodule::_ASG_default_instance_);
}
inline const ::commonmodule::ASG& ESSCapabilityConfiguration::wdischartemax() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSCapabilityConfiguration.WDisChaRteMax)
  return _internal_wdischartemax();
}
inline void ESSCapabilityConfiguration::unsafe_arena_set_allocated_wdischartemax(
    ::commonmodule::ASG* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.wdischartemax_);
  }
  _impl_.wdischartemax_ = reinterpret_cast<::commonmodule::ASG*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSCapabilityConfiguration.WDisChaRteMax)
}
inline ::commonmodule::ASG* PROTOBUF_NULLABLE ESSCapabilityConfiguration::release_wdischartemax() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::commonmodule::ASG* released = _impl_.wdischartemax_;
  _impl_.wdischartemax_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::ASG* PROTOBUF_NULLABLE ESSCapabilityConfiguration::unsafe_arena_release_wdischartemax() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSCapabilityConfiguration.WDisChaRteMax)

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::commonmodule::ASG* temp = _impl_.wdischartemax_;
  _impl_.wdischartemax_ = nullptr;
  return temp;
}
inline ::commonmodule::ASG* PROTOBUF_NONNULL ESSCapabilityConfiguration::_internal_mutable_wdischartemax() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.wdischartemax_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::ASG>(GetArena());
    _impl_.wdischartemax_ = reinterpret_cast<::commonmodule::ASG*>(p);
  }
  return _impl_.wdischartemax_;
}
inline ::commonmodule::ASG* PROTOBUF_NONNULL ESSCapabilityConfiguration::mutable_wdischartemax()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000010u;
  ::commonmodule::ASG* _msg = _internal_mutable_wdischartemax();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSCapabilityConfiguration.WDisChaRteMax)
  return _msg;
}
inline void ESSCapabilityConfiguration::set_allocated_wdischartemax(::commonmodule::ASG* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.wdischartemax_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }

  _impl_.wdischartemax_ = reinterpret_cast<::commonmodule::ASG*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSCapabilityConfiguration.WDisChaRteMax)
}

// -------------------------------------------------------------------

// ESSCapabilityOverride

// .commonmodule.NameplateValue nameplateValue = 1 [(.uml.option_parent_message) = true];
inline bool ESSCapabilityOverride::has_nameplatevalue() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.nameplatevalue_ != nullptr);
  return value;
}
inline const ::commonmodule::NameplateValue& ESSCapabilityOverride::_internal_nameplatevalue() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::NameplateValue* p = _impl_.nameplatevalue_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::NameplateValue&>(::commonmodule::_NameplateValue_default_instance_);
}
inline const ::commonmodule::NameplateValue& ESSCapabilityOverride::nameplatevalue() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSCapabilityOverride.nameplateValue)
  return _internal_nameplatevalue();
}
inline void ESSCapabilityOverride::unsafe_arena_set_allocated_nameplatevalue(
    ::commonmodule::NameplateValue* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.nameplatevalue_);
  }
  _impl_.nameplatevalue_ = reinterpret_cast<::commonmodule::NameplateValue*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSCapabilityOverride.nameplateValue)
}
inline ::commonmodule::NameplateValue* PROTOBUF_NULLABLE ESSCapabilityOverride::release_nameplatevalue() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::commonmodule::NameplateValue* released = _impl_.nameplatevalue_;
  _impl_.nameplatevalue_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::NameplateValue* PROTOBUF_NULLABLE ESSCapabilityOverride::unsafe_arena_release_nameplatevalue() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSCapabilityOverride.nameplateValue)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::commonmodule::NameplateValue* temp = _impl_.nameplatevalue_;
  _impl_.nameplatevalue_ = nullptr;
  return temp;
}
inline ::commonmodule::NameplateValue* PROTOBUF_NONNULL ESSCapabilityOverride::_internal_mutable_nameplatevalue() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.nameplatevalue_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::NameplateValue>(GetArena());
    _impl_.nameplatevalue_ = reinterpret_cast<::commonmodule::NameplateValue*>(p);
  }
  return _impl_.nameplatevalue_;
}
inline ::commonmodule::NameplateValue* PROTOBUF_NONNULL ESSCapabilityOverride::mutable_nameplatevalue()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::commonmodule::NameplateValue* _msg = _internal_mutable_nameplatevalue();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSCapabilityOverride.nameplateValue)
  return _msg;
}
inline void ESSCapabilityOverride::set_allocated_nameplatevalue(::commonmodule::NameplateValue* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.nameplatevalue_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.nameplatevalue_ = reinterpret_cast<::commonmodule::NameplateValue*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSCapabilityOverride.nameplateValue)
}

// .essmodule.ESSCapabilityConfiguration essCapabilityConfiguration = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
inline bool ESSCapabilityOverride::has_esscapabilityconfiguration() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.esscapabilityconfiguration_ != nullptr);
  return value;
}
inline void ESSCapabilityOverride::clear_esscapabilityconfiguration() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.esscapabilityconfiguration_ != nullptr) _impl_.esscapabilityconfiguration_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::essmodule::ESSCapabilityConfiguration& ESSCapabilityOverride::_internal_esscapabilityconfiguration() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::essmodule::ESSCapabilityConfiguration* p = _impl_.esscapabilityconfiguration_;
  return p != nullptr ? *p : reinterpret_cast<const ::essmodule::ESSCapabilityConfiguration&>(::essmodule::_ESSCapabilityConfiguration_default_instance_);
}
inline const ::essmodule::ESSCapabilityConfiguration& ESSCapabilityOverride::esscapabilityconfiguration() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSCapabilityOverride.essCapabilityConfiguration)
  return _internal_esscapabilityconfiguration();
}
inline void ESSCapabilityOverride::unsafe_arena_set_allocated_esscapabilityconfiguration(
    ::essmodule::ESSCapabilityConfiguration* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.esscapabilityconfiguration_);
  }
  _impl_.esscapabilityconfiguration_ = reinterpret_cast<::essmodule::ESSCapabilityConfiguration*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSCapabilityOverride.essCapabilityConfiguration)
}
inline ::essmodule::ESSCapabilityConfiguration* PROTOBUF_NULLABLE ESSCapabilityOverride::release_esscapabilityconfiguration() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::essmodule::ESSCapabilityConfiguration* released = _impl_.esscapabilityconfiguration_;
  _impl_.esscapabilityconfiguration_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::essmodule::ESSCapabilityConfiguration* PROTOBUF_NULLABLE ESSCapabilityOverride::unsafe_arena_release_esscapabilityconfiguration() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSCapabilityOverride.essCapabilityConfiguration)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::essmodule::ESSCapabilityConfiguration* temp = _impl_.esscapabilityconfiguration_;
  _impl_.esscapabilityconfiguration_ = nullptr;
  return temp;
}
inline ::essmodule::ESSCapabilityConfiguration* PROTOBUF_NONNULL ESSCapabilityOverride::_internal_mutable_esscapabilityconfiguration() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.esscapabilityconfiguration_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::essmodule::ESSCapabilityConfiguration>(GetArena());
    _impl_.esscapabilityconfiguration_ = reinterpret_cast<::essmodule::ESSCapabilityConfiguration*>(p);
  }
  return _impl_.esscapabilityconfiguration_;
}
inline ::essmodule::ESSCapabilityConfiguration* PROTOBUF_NONNULL ESSCapabilityOverride::mutable_esscapabilityconfiguration()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::essmodule::ESSCapabilityConfiguration* _msg = _internal_mutable_esscapabilityconfiguration();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSCapabilityOverride.essCapabilityConfiguration)
  return _msg;
}
inline void ESSCapabilityOverride::set_allocated_esscapabilityconfiguration(::essmodule::ESSCapabilityConfiguration* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.esscapabilityconfiguration_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.esscapabilityconfiguration_ = reinterpret_cast<::essmodule::ESSCapabilityConfiguration*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSCapabilityOverride.essCapabilityConfiguration)
}

// -------------------------------------------------------------------

// ESSCapabilityOverrideProfile

// .commonmodule.CapabilityMessageInfo capabilityMessageInfo = 1 [(.uml.option_parent_message) = true];
inline bool ESSCapabilityOverrideProfile::has_capabilitymessageinfo() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.capabilitymessageinfo_ != nullptr);
  return value;
}
inline const ::commonmodule::CapabilityMessageInfo& ESSCapabilityOverrideProfile::_internal_capabilitymessageinfo() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::CapabilityMessageInfo* p = _impl_.capabilitymessageinfo_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::CapabilityMessageInfo&>(::commonmodule::_CapabilityMessageInfo_default_instance_);
}
inline const ::commonmodule::CapabilityMessageInfo& ESSCapabilityOverrideProfile::capabilitymessageinfo() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSCapabilityOverrideProfile.capabilityMessageInfo)
  return _internal_capabilitymessageinfo();
}
inline void ESSCapabilityOverrideProfile::unsafe_arena_set_allocated_capabilitymessageinfo(
    ::commonmodule::CapabilityMessageInfo* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.capabilitymessageinfo_);
  }
  _impl_.capabilitymessageinfo_ = reinterpret_cast<::commonmodule::CapabilityMessageInfo*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSCapabilityOverrideProfile.capabilityMessageInfo)
}
inline ::commonmodule::CapabilityMessageInfo* PROTOBUF_NULLABLE ESSCapabilityOverrideProfile::release_capabilitymessageinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::commonmodule::CapabilityMessageInfo* released = _impl_.capabilitymessageinfo_;
  _impl_.capabilitymessageinfo_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::CapabilityMessageInfo* PROTOBUF_NULLABLE ESSCapabilityOverrideProfile::unsafe_arena_release_capabilitymessageinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSCapabilityOverrideProfile.capabilityMessageInfo)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::commonmodule::CapabilityMessageInfo* temp = _impl_.capabilitymessageinfo_;
  _impl_.capabilitymessageinfo_ = nullptr;
  return temp;
}
inline ::commonmodule::CapabilityMessageInfo* PROTOBUF_NONNULL ESSCapabilityOverrideProfile::_internal_mutable_capabilitymessageinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.capabilitymessageinfo_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::CapabilityMessageInfo>(GetArena());
    _impl_.capabilitymessageinfo_ = reinterpret_cast<::commonmodule::CapabilityMessageInfo*>(p);
  }
  return _impl_.capabilitymessageinfo_;
}
inline ::commonmodule::CapabilityMessageInfo* PROTOBUF_NONNULL ESSCapabilityOverrideProfile::mutable_capabilitymessageinfo()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::commonmodule::CapabilityMessageInfo* _msg = _internal_mutable_capabilitymessageinfo();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSCapabilityOverrideProfile.capabilityMessageInfo)
  return _msg;
}
inline void ESSCapabilityOverrideProfile::set_allocated_capabilitymessageinfo(::commonmodule::CapabilityMessageInfo* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.capabilitymessageinfo_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.capabilitymessageinfo_ = reinterpret_cast<::commonmodule::CapabilityMessageInfo*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSCapabilityOverrideProfile.capabilityMessageInfo)
}

// .commonmodule.ESS ess = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
inline bool ESSCapabilityOverrideProfile::has_ess() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.ess_ != nullptr);
  return value;
}
inline const ::commonmodule::ESS& ESSCapabilityOverrideProfile::_internal_ess() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::ESS* p = _impl_.ess_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::ESS&>(::commonmodule::_ESS_default_instance_);
}
inline const ::commonmodule::ESS& ESSCapabilityOverrideProfile::ess() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSCapabilityOverrideProfile.ess)
  return _internal_ess();
}
inline void ESSCapabilityOverrideProfile::unsafe_arena_set_allocated_ess(
    ::commonmodule::ESS* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.ess_);
  }
  _impl_.ess_ = reinterpret_cast<::commonmodule::ESS*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSCapabilityOverrideProfile.ess)
}
inline ::commonmodule::ESS* PROTOBUF_NULLABLE ESSCapabilityOverrideProfile::release_ess() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::commonmodule::ESS* released = _impl_.ess_;
  _impl_.ess_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::ESS* PROTOBUF_NULLABLE ESSCapabilityOverrideProfile::unsafe_arena_release_ess() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSCapabilityOverrideProfile.ess)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::commonmodule::ESS* temp = _impl_.ess_;
  _impl_.ess_ = nullptr;
  return temp;
}
inline ::commonmodule::ESS* PROTOBUF_NONNULL ESSCapabilityOverrideProfile::_internal_mutable_ess() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.ess_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::ESS>(GetArena());
    _impl_.ess_ = reinterpret_cast<::commonmodule::ESS*>(p);
  }
  return _impl_.ess_;
}
inline ::commonmodule::ESS* PROTOBUF_NONNULL ESSCapabilityOverrideProfile::mutable_ess()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::commonmodule::ESS* _msg = _internal_mutable_ess();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSCapabilityOverrideProfile.ess)
  return _msg;
}
inline void ESSCapabilityOverrideProfile::set_allocated_ess(::commonmodule::ESS* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.ess_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.ess_ = reinterpret_cast<::commonmodule::ESS*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSCapabilityOverrideProfile.ess)
}

// .essmodule.ESSCapabilityOverride essCapabilityOverride = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
inline bool ESSCapabilityOverrideProfile::has_esscapabilityoverride() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.esscapabilityoverride_ != nullptr);
  return value;
}
inline void ESSCapabilityOverrideProfile::clear_esscapabilityoverride() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.esscapabilityoverride_ != nullptr) _impl_.esscapabilityoverride_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::essmodule::ESSCapabilityOverride& ESSCapabilityOverrideProfile::_internal_esscapabilityoverride() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::essmodule::ESSCapabilityOverride* p = _impl_.esscapabilityoverride_;
  return p != nullptr ? *p : reinterpret_cast<const ::essmodule::ESSCapabilityOverride&>(::essmodule::_ESSCapabilityOverride_default_instance_);
}
inline const ::essmodule::ESSCapabilityOverride& ESSCapabilityOverrideProfile::esscapabilityoverride() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSCapabilityOverrideProfile.essCapabilityOverride)
  return _internal_esscapabilityoverride();
}
inline void ESSCapabilityOverrideProfile::unsafe_arena_set_allocated_esscapabilityoverride(
    ::essmodule::ESSCapabilityOverride* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.esscapabilityoverride_);
  }
  _impl_.esscapabilityoverride_ = reinterpret_cast<::essmodule::ESSCapabilityOverride*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSCapabilityOverrideProfile.essCapabilityOverride)
}
inline ::essmodule::ESSCapabilityOverride* PROTOBUF_NULLABLE ESSCapabilityOverrideProfile::release_esscapabilityoverride() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::essmodule::ESSCapabilityOverride* released = _impl_.esscapabilityoverride_;
  _impl_.esscapabilityoverride_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::essmodule::ESSCapabilityOverride* PROTOBUF_NULLABLE ESSCapabilityOverrideProfile::unsafe_arena_release_esscapabilityoverride() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSCapabilityOverrideProfile.essCapabilityOverride)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::essmodule::ESSCapabilityOverride* temp = _impl_.esscapabilityoverride_;
  _impl_.esscapabilityoverride_ = nullptr;
  return temp;
}
inline ::essmodule::ESSCapabilityOverride* PROTOBUF_NONNULL ESSCapabilityOverrideProfile::_internal_mutable_esscapabilityoverride() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.esscapabilityoverride_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::essmodule::ESSCapabilityOverride>(GetArena());
    _impl_.esscapabilityoverride_ = reinterpret_cast<::essmodule::ESSCapabilityOverride*>(p);
  }
  return _impl_.esscapabilityoverride_;
}
inline ::essmodule::ESSCapabilityOverride* PROTOBUF_NONNULL ESSCapabilityOverrideProfile::mutable_esscapabilityoverride()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::essmodule::ESSCapabilityOverride* _msg = _internal_mutable_esscapabilityoverride();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSCapabilityOverrideProfile.essCapabilityOverride)
  return _msg;
}
inline void ESSCapabilityOverrideProfile::set_allocated_esscapabilityoverride(::essmodule::ESSCapabilityOverride* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.esscapabilityoverride_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.esscapabilityoverride_ = reinterpret_cast<::essmodule::ESSCapabilityOverride*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSCapabilityOverrideProfile.essCapabilityOverride)
}

// -------------------------------------------------------------------

// ESSCapabilityRatings

// .commonmodule.SourceCapabilityRatings sourceCapabilityRatings = 1 [(.uml.option_parent_message) = true];
inline bool ESSCapabilityRatings::has_sourcecapabilityratings() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.sourcecapabilityratings_ != nullptr);
  return value;
}
inline const ::commonmodule::SourceCapabilityRatings& ESSCapabilityRatings::_internal_sourcecapabilityratings() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::SourceCapabilityRatings* p = _impl_.sourcecapabilityratings_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::SourceCapabilityRatings&>(::commonmodule::_SourceCapabilityRatings_default_instance_);
}
inline const ::commonmodule::SourceCapabilityRatings& ESSCapabilityRatings::sourcecapabilityratings() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSCapabilityRatings.sourceCapabilityRatings)
  return _internal_sourcecapabilityratings();
}
inline void ESSCapabilityRatings::unsafe_arena_set_allocated_sourcecapabilityratings(
    ::commonmodule::SourceCapabilityRatings* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.sourcecapabilityratings_);
  }
  _impl_.sourcecapabilityratings_ = reinterpret_cast<::commonmodule::SourceCapabilityRatings*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSCapabilityRatings.sourceCapabilityRatings)
}
inline ::commonmodule::SourceCapabilityRatings* PROTOBUF_NULLABLE ESSCapabilityRatings::release_sourcecapabilityratings() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::commonmodule::SourceCapabilityRatings* released = _impl_.sourcecapabilityratings_;
  _impl_.sourcecapabilityratings_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::SourceCapabilityRatings* PROTOBUF_NULLABLE ESSCapabilityRatings::unsafe_arena_release_sourcecapabilityratings() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSCapabilityRatings.sourceCapabilityRatings)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::commonmodule::SourceCapabilityRatings* temp = _impl_.sourcecapabilityratings_;
  _impl_.sourcecapabilityratings_ = nullptr;
  return temp;
}
inline ::commonmodule::SourceCapabilityRatings* PROTOBUF_NONNULL ESSCapabilityRatings::_internal_mutable_sourcecapabilityratings() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.sourcecapabilityratings_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::SourceCapabilityRatings>(GetArena());
    _impl_.sourcecapabilityratings_ = reinterpret_cast<::commonmodule::SourceCapabilityRatings*>(p);
  }
  return _impl_.sourcecapabilityratings_;
}
inline ::commonmodule::SourceCapabilityRatings* PROTOBUF_NONNULL ESSCapabilityRatings::mutable_sourcecapabilityratings()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::commonmodule::SourceCapabilityRatings* _msg = _internal_mutable_sourcecapabilityratings();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSCapabilityRatings.sourceCapabilityRatings)
  return _msg;
}
inline void ESSCapabilityRatings::set_allocated_sourcecapabilityratings(::commonmodule::SourceCapabilityRatings* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.sourcecapabilityratings_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.sourcecapabilityratings_ = reinterpret_cast<::commonmodule::SourceCapabilityRatings*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSCapabilityRatings.sourceCapabilityRatings)
}

// .commonmodule.ASG VAChaRteMaxRtg = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
inline bool ESSCapabilityRatings::has_vachartemaxrtg() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.vachartemaxrtg_ != nullptr);
  return value;
}
inline const ::commonmodule::ASG& ESSCapabilityRatings::_internal_vachartemaxrtg() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::ASG* p = _impl_.vachartemaxrtg_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::ASG&>(::commonmodule::_ASG_default_instance_);
}
inline const ::commonmodule::ASG& ESSCapabilityRatings::vachartemaxrtg() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSCapabilityRatings.VAChaRteMaxRtg)
  return _internal_vachartemaxrtg();
}
inline void ESSCapabilityRatings::unsafe_arena_set_allocated_vachartemaxrtg(
    ::commonmodule::ASG* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.vachartemaxrtg_);
  }
  _impl_.vachartemaxrtg_ = reinterpret_cast<::commonmodule::ASG*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSCapabilityRatings.VAChaRteMaxRtg)
}
inline ::commonmodule::ASG* PROTOBUF_NULLABLE ESSCapabilityRatings::release_vachartemaxrtg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::commonmodule::ASG* released = _impl_.vachartemaxrtg_;
  _impl_.vachartemaxrtg_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::ASG* PROTOBUF_NULLABLE ESSCapabilityRatings::unsafe_arena_release_vachartemaxrtg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSCapabilityRatings.VAChaRteMaxRtg)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::commonmodule::ASG* temp = _impl_.vachartemaxrtg_;
  _impl_.vachartemaxrtg_ = nullptr;
  return temp;
}
inline ::commonmodule::ASG* PROTOBUF_NONNULL ESSCapabilityRatings::_internal_mutable_vachartemaxrtg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.vachartemaxrtg_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::ASG>(GetArena());
    _impl_.vachartemaxrtg_ = reinterpret_cast<::commonmodule::ASG*>(p);
  }
  return _impl_.vachartemaxrtg_;
}
inline ::commonmodule::ASG* PROTOBUF_NONNULL ESSCapabilityRatings::mutable_vachartemaxrtg()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::commonmodule::ASG* _msg = _internal_mutable_vachartemaxrtg();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSCapabilityRatings.VAChaRteMaxRtg)
  return _msg;
}
inline void ESSCapabilityRatings::set_allocated_vachartemaxrtg(::commonmodule::ASG* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.vachartemaxrtg_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.vachartemaxrtg_ = reinterpret_cast<::commonmodule::ASG*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSCapabilityRatings.VAChaRteMaxRtg)
}

// .commonmodule.ASG VADisChaRteMaxRtg = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
inline bool ESSCapabilityRatings::has_vadischartemaxrtg() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.vadischartemaxrtg_ != nullptr);
  return value;
}
inline const ::commonmodule::ASG& ESSCapabilityRatings::_internal_vadischartemaxrtg() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::ASG* p = _impl_.vadischartemaxrtg_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::ASG&>(::commonmodule::_ASG_default_instance_);
}
inline const ::commonmodule::ASG& ESSCapabilityRatings::vadischartemaxrtg() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSCapabilityRatings.VADisChaRteMaxRtg)
  return _internal_vadischartemaxrtg();
}
inline void ESSCapabilityRatings::unsafe_arena_set_allocated_vadischartemaxrtg(
    ::commonmodule::ASG* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.vadischartemaxrtg_);
  }
  _impl_.vadischartemaxrtg_ = reinterpret_cast<::commonmodule::ASG*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSCapabilityRatings.VADisChaRteMaxRtg)
}
inline ::commonmodule::ASG* PROTOBUF_NULLABLE ESSCapabilityRatings::release_vadischartemaxrtg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::commonmodule::ASG* released = _impl_.vadischartemaxrtg_;
  _impl_.vadischartemaxrtg_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::ASG* PROTOBUF_NULLABLE ESSCapabilityRatings::unsafe_arena_release_vadischartemaxrtg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSCapabilityRatings.VADisChaRteMaxRtg)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::commonmodule::ASG* temp = _impl_.vadischartemaxrtg_;
  _impl_.vadischartemaxrtg_ = nullptr;
  return temp;
}
inline ::commonmodule::ASG* PROTOBUF_NONNULL ESSCapabilityRatings::_internal_mutable_vadischartemaxrtg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.vadischartemaxrtg_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::ASG>(GetArena());
    _impl_.vadischartemaxrtg_ = reinterpret_cast<::commonmodule::ASG*>(p);
  }
  return _impl_.vadischartemaxrtg_;
}
inline ::commonmodule::ASG* PROTOBUF_NONNULL ESSCapabilityRatings::mutable_vadischartemaxrtg()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::commonmodule::ASG* _msg = _internal_mutable_vadischartemaxrtg();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSCapabilityRatings.VADisChaRteMaxRtg)
  return _msg;
}
inline void ESSCapabilityRatings::set_allocated_vadischartemaxrtg(::commonmodule::ASG* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.vadischartemaxrtg_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.vadischartemaxrtg_ = reinterpret_cast<::commonmodule::ASG*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSCapabilityRatings.VADisChaRteMaxRtg)
}

// .commonmodule.ASG WChaRteMaxRtg = 4 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
inline bool ESSCapabilityRatings::has_wchartemaxrtg() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.wchartemaxrtg_ != nullptr);
  return value;
}
inline const ::commonmodule::ASG& ESSCapabilityRatings::_internal_wchartemaxrtg() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::ASG* p = _impl_.wchartemaxrtg_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::ASG&>(::commonmodule::_ASG_default_instance_);
}
inline const ::commonmodule::ASG& ESSCapabilityRatings::wchartemaxrtg() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSCapabilityRatings.WChaRteMaxRtg)
  return _internal_wchartemaxrtg();
}
inline void ESSCapabilityRatings::unsafe_arena_set_allocated_wchartemaxrtg(
    ::commonmodule::ASG* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.wchartemaxrtg_);
  }
  _impl_.wchartemaxrtg_ = reinterpret_cast<::commonmodule::ASG*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSCapabilityRatings.WChaRteMaxRtg)
}
inline ::commonmodule::ASG* PROTOBUF_NULLABLE ESSCapabilityRatings::release_wchartemaxrtg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::commonmodule::ASG* released = _impl_.wchartemaxrtg_;
  _impl_.wchartemaxrtg_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::ASG* PROTOBUF_NULLABLE ESSCapabilityRatings::unsafe_arena_release_wchartemaxrtg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSCapabilityRatings.WChaRteMaxRtg)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::commonmodule::ASG* temp = _impl_.wchartemaxrtg_;
  _impl_.wchartemaxrtg_ = nullptr;
  return temp;
}
inline ::commonmodule::ASG* PROTOBUF_NONNULL ESSCapabilityRatings::_internal_mutable_wchartemaxrtg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.wchartemaxrtg_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::ASG>(GetArena());
    _impl_.wchartemaxrtg_ = reinterpret_cast<::commonmodule::ASG*>(p);
  }
  return _impl_.wchartemaxrtg_;
}
inline ::commonmodule::ASG* PROTOBUF_NONNULL ESSCapabilityRatings::mutable_wchartemaxrtg()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::commonmodule::ASG* _msg = _internal_mutable_wchartemaxrtg();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSCapabilityRatings.WChaRteMaxRtg)
  return _msg;
}
inline void ESSCapabilityRatings::set_allocated_wchartemaxrtg(::commonmodule::ASG* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.wchartemaxrtg_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.wchartemaxrtg_ = reinterpret_cast<::commonmodule::ASG*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSCapabilityRatings.WChaRteMaxRtg)
}

// .commonmodule.ASG WDisChaRteMaxRtg = 5 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
inline bool ESSCapabilityRatings::has_wdischartemaxrtg() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.wdischartemaxrtg_ != nullptr);
  return value;
}
inline const ::commonmodule::ASG& ESSCapabilityRatings::_internal_wdischartemaxrtg() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::ASG* p = _impl_.wdischartemaxrtg_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::ASG&>(::commonmodule::_ASG_default_instance_);
}
inline const ::commonmodule::ASG& ESSCapabilityRatings::wdischartemaxrtg() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSCapabilityRatings.WDisChaRteMaxRtg)
  return _internal_wdischartemaxrtg();
}
inline void ESSCapabilityRatings::unsafe_arena_set_allocated_wdischartemaxrtg(
    ::commonmodule::ASG* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.wdischartemaxrtg_);
  }
  _impl_.wdischartemaxrtg_ = reinterpret_cast<::commonmodule::ASG*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSCapabilityRatings.WDisChaRteMaxRtg)
}
inline ::commonmodule::ASG* PROTOBUF_NULLABLE ESSCapabilityRatings::release_wdischartemaxrtg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::commonmodule::ASG* released = _impl_.wdischartemaxrtg_;
  _impl_.wdischartemaxrtg_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::ASG* PROTOBUF_NULLABLE ESSCapabilityRatings::unsafe_arena_release_wdischartemaxrtg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSCapabilityRatings.WDisChaRteMaxRtg)

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::commonmodule::ASG* temp = _impl_.wdischartemaxrtg_;
  _impl_.wdischartemaxrtg_ = nullptr;
  return temp;
}
inline ::commonmodule::ASG* PROTOBUF_NONNULL ESSCapabilityRatings::_internal_mutable_wdischartemaxrtg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.wdischartemaxrtg_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::ASG>(GetArena());
    _impl_.wdischartemaxrtg_ = reinterpret_cast<::commonmodule::ASG*>(p);
  }
  return _impl_.wdischartemaxrtg_;
}
inline ::commonmodule::ASG* PROTOBUF_NONNULL ESSCapabilityRatings::mutable_wdischartemaxrtg()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000010u;
  ::commonmodule::ASG* _msg = _internal_mutable_wdischartemaxrtg();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSCapabilityRatings.WDisChaRteMaxRtg)
  return _msg;
}
inline void ESSCapabilityRatings::set_allocated_wdischartemaxrtg(::commonmodule::ASG* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.wdischartemaxrtg_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }

  _impl_.wdischartemaxrtg_ = reinterpret_cast<::commonmodule::ASG*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSCapabilityRatings.WDisChaRteMaxRtg)
}

// .commonmodule.ASG WHRtg = 6 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
inline bool ESSCapabilityRatings::has_whrtg() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.whrtg_ != nullptr);
  return value;
}
inline const ::commonmodule::ASG& ESSCapabilityRatings::_internal_whrtg() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::ASG* p = _impl_.whrtg_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::ASG&>(::commonmodule::_ASG_default_instance_);
}
inline const ::commonmodule::ASG& ESSCapabilityRatings::whrtg() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSCapabilityRatings.WHRtg)
  return _internal_whrtg();
}
inline void ESSCapabilityRatings::unsafe_arena_set_allocated_whrtg(
    ::commonmodule::ASG* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.whrtg_);
  }
  _impl_.whrtg_ = reinterpret_cast<::commonmodule::ASG*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSCapabilityRatings.WHRtg)
}
inline ::commonmodule::ASG* PROTOBUF_NULLABLE ESSCapabilityRatings::release_whrtg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::commonmodule::ASG* released = _impl_.whrtg_;
  _impl_.whrtg_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::ASG* PROTOBUF_NULLABLE ESSCapabilityRatings::unsafe_arena_release_whrtg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSCapabilityRatings.WHRtg)

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::commonmodule::ASG* temp = _impl_.whrtg_;
  _impl_.whrtg_ = nullptr;
  return temp;
}
inline ::commonmodule::ASG* PROTOBUF_NONNULL ESSCapabilityRatings::_internal_mutable_whrtg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.whrtg_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::ASG>(GetArena());
    _impl_.whrtg_ = reinterpret_cast<::commonmodule::ASG*>(p);
  }
  return _impl_.whrtg_;
}
inline ::commonmodule::ASG* PROTOBUF_NONNULL ESSCapabilityRatings::mutable_whrtg()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000020u;
  ::commonmodule::ASG* _msg = _internal_mutable_whrtg();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSCapabilityRatings.WHRtg)
  return _msg;
}
inline void ESSCapabilityRatings::set_allocated_whrtg(::commonmodule::ASG* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.whrtg_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }

  _impl_.whrtg_ = reinterpret_cast<::commonmodule::ASG*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSCapabilityRatings.WHRtg)
}

// -------------------------------------------------------------------

// ESSCapability

// .commonmodule.NameplateValue nameplateValue = 1 [(.uml.option_parent_message) = true];
inline bool ESSCapability::has_nameplatevalue() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.nameplatevalue_ != nullptr);
  return value;
}
inline const ::commonmodule::NameplateValue& ESSCapability::_internal_nameplatevalue() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::NameplateValue* p = _impl_.nameplatevalue_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::NameplateValue&>(::commonmodule::_NameplateValue_default_instance_);
}
inline const ::commonmodule::NameplateValue& ESSCapability::nameplatevalue() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSCapability.nameplateValue)
  return _internal_nameplatevalue();
}
inline void ESSCapability::unsafe_arena_set_allocated_nameplatevalue(
    ::commonmodule::NameplateValue* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.nameplatevalue_);
  }
  _impl_.nameplatevalue_ = reinterpret_cast<::commonmodule::NameplateValue*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSCapability.nameplateValue)
}
inline ::commonmodule::NameplateValue* PROTOBUF_NULLABLE ESSCapability::release_nameplatevalue() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::commonmodule::NameplateValue* released = _impl_.nameplatevalue_;
  _impl_.nameplatevalue_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::NameplateValue* PROTOBUF_NULLABLE ESSCapability::unsafe_arena_release_nameplatevalue() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSCapability.nameplateValue)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::commonmodule::NameplateValue* temp = _impl_.nameplatevalue_;
  _impl_.nameplatevalue_ = nullptr;
  return temp;
}
inline ::commonmodule::NameplateValue* PROTOBUF_NONNULL ESSCapability::_internal_mutable_nameplatevalue() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.nameplatevalue_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::NameplateValue>(GetArena());
    _impl_.nameplatevalue_ = reinterpret_cast<::commonmodule::NameplateValue*>(p);
  }
  return _impl_.nameplatevalue_;
}
inline ::commonmodule::NameplateValue* PROTOBUF_NONNULL ESSCapability::mutable_nameplatevalue()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::commonmodule::NameplateValue* _msg = _internal_mutable_nameplatevalue();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSCapability.nameplateValue)
  return _msg;
}
inline void ESSCapability::set_allocated_nameplatevalue(::commonmodule::NameplateValue* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.nameplatevalue_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.nameplatevalue_ = reinterpret_cast<::commonmodule::NameplateValue*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSCapability.nameplateValue)
}

// .essmodule.ESSCapabilityRatings essCapabilityRatings = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
inline bool ESSCapability::has_esscapabilityratings() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.esscapabilityratings_ != nullptr);
  return value;
}
inline void ESSCapability::clear_esscapabilityratings() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.esscapabilityratings_ != nullptr) _impl_.esscapabilityratings_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::essmodule::ESSCapabilityRatings& ESSCapability::_internal_esscapabilityratings() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::essmodule::ESSCapabilityRatings* p = _impl_.esscapabilityratings_;
  return p != nullptr ? *p : reinterpret_cast<const ::essmodule::ESSCapabilityRatings&>(::essmodule::_ESSCapabilityRatings_default_instance_);
}
inline const ::essmodule::ESSCapabilityRatings& ESSCapability::esscapabilityratings() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSCapability.essCapabilityRatings)
  return _internal_esscapabilityratings();
}
inline void ESSCapability::unsafe_arena_set_allocated_esscapabilityratings(
    ::essmodule::ESSCapabilityRatings* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.esscapabilityratings_);
  }
  _impl_.esscapabilityratings_ = reinterpret_cast<::essmodule::ESSCapabilityRatings*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSCapability.essCapabilityRatings)
}
inline ::essmodule::ESSCapabilityRatings* PROTOBUF_NULLABLE ESSCapability::release_esscapabilityratings() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::essmodule::ESSCapabilityRatings* released = _impl_.esscapabilityratings_;
  _impl_.esscapabilityratings_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::essmodule::ESSCapabilityRatings* PROTOBUF_NULLABLE ESSCapability::unsafe_arena_release_esscapabilityratings() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSCapability.essCapabilityRatings)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::essmodule::ESSCapabilityRatings* temp = _impl_.esscapabilityratings_;
  _impl_.esscapabilityratings_ = nullptr;
  return temp;
}
inline ::essmodule::ESSCapabilityRatings* PROTOBUF_NONNULL ESSCapability::_internal_mutable_esscapabilityratings() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.esscapabilityratings_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::essmodule::ESSCapabilityRatings>(GetArena());
    _impl_.esscapabilityratings_ = reinterpret_cast<::essmodule::ESSCapabilityRatings*>(p);
  }
  return _impl_.esscapabilityratings_;
}
inline ::essmodule::ESSCapabilityRatings* PROTOBUF_NONNULL ESSCapability::mutable_esscapabilityratings()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::essmodule::ESSCapabilityRatings* _msg = _internal_mutable_esscapabilityratings();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSCapability.essCapabilityRatings)
  return _msg;
}
inline void ESSCapability::set_allocated_esscapabilityratings(::essmodule::ESSCapabilityRatings* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.esscapabilityratings_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.esscapabilityratings_ = reinterpret_cast<::essmodule::ESSCapabilityRatings*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSCapability.essCapabilityRatings)
}

// .essmodule.ESSCapabilityConfiguration essCapabilityConfiguration = 3;
inline bool ESSCapability::has_esscapabilityconfiguration() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.esscapabilityconfiguration_ != nullptr);
  return value;
}
inline void ESSCapability::clear_esscapabilityconfiguration() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.esscapabilityconfiguration_ != nullptr) _impl_.esscapabilityconfiguration_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::essmodule::ESSCapabilityConfiguration& ESSCapability::_internal_esscapabilityconfiguration() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::essmodule::ESSCapabilityConfiguration* p = _impl_.esscapabilityconfiguration_;
  return p != nullptr ? *p : reinterpret_cast<const ::essmodule::ESSCapabilityConfiguration&>(::essmodule::_ESSCapabilityConfiguration_default_instance_);
}
inline const ::essmodule::ESSCapabilityConfiguration& ESSCapability::esscapabilityconfiguration() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSCapability.essCapabilityConfiguration)
  return _internal_esscapabilityconfiguration();
}
inline void ESSCapability::unsafe_arena_set_allocated_esscapabilityconfiguration(
    ::essmodule::ESSCapabilityConfiguration* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.esscapabilityconfiguration_);
  }
  _impl_.esscapabilityconfiguration_ = reinterpret_cast<::essmodule::ESSCapabilityConfiguration*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSCapability.essCapabilityConfiguration)
}
inline ::essmodule::ESSCapabilityConfiguration* PROTOBUF_NULLABLE ESSCapability::release_esscapabilityconfiguration() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::essmodule::ESSCapabilityConfiguration* released = _impl_.esscapabilityconfiguration_;
  _impl_.esscapabilityconfiguration_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::essmodule::ESSCapabilityConfiguration* PROTOBUF_NULLABLE ESSCapability::unsafe_arena_release_esscapabilityconfiguration() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSCapability.essCapabilityConfiguration)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::essmodule::ESSCapabilityConfiguration* temp = _impl_.esscapabilityconfiguration_;
  _impl_.esscapabilityconfiguration_ = nullptr;
  return temp;
}
inline ::essmodule::ESSCapabilityConfiguration* PROTOBUF_NONNULL ESSCapability::_internal_mutable_esscapabilityconfiguration() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.esscapabilityconfiguration_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::essmodule::ESSCapabilityConfiguration>(GetArena());
    _impl_.esscapabilityconfiguration_ = reinterpret_cast<::essmodule::ESSCapabilityConfiguration*>(p);
  }
  return _impl_.esscapabilityconfiguration_;
}
inline ::essmodule::ESSCapabilityConfiguration* PROTOBUF_NONNULL ESSCapability::mutable_esscapabilityconfiguration()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::essmodule::ESSCapabilityConfiguration* _msg = _internal_mutable_esscapabilityconfiguration();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSCapability.essCapabilityConfiguration)
  return _msg;
}
inline void ESSCapability::set_allocated_esscapabilityconfiguration(::essmodule::ESSCapabilityConfiguration* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.esscapabilityconfiguration_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.esscapabilityconfiguration_ = reinterpret_cast<::essmodule::ESSCapabilityConfiguration*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSCapability.essCapabilityConfiguration)
}

// -------------------------------------------------------------------

// ESSCapabilityProfile

// .commonmodule.CapabilityMessageInfo capabilityMessageInfo = 1 [(.uml.option_parent_message) = true];
inline bool ESSCapabilityProfile::has_capabilitymessageinfo() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.capabilitymessageinfo_ != nullptr);
  return value;
}
inline const ::commonmodule::CapabilityMessageInfo& ESSCapabilityProfile::_internal_capabilitymessageinfo() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::CapabilityMessageInfo* p = _impl_.capabilitymessageinfo_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::CapabilityMessageInfo&>(::commonmodule::_CapabilityMessageInfo_default_instance_);
}
inline const ::commonmodule::CapabilityMessageInfo& ESSCapabilityProfile::capabilitymessageinfo() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSCapabilityProfile.capabilityMessageInfo)
  return _internal_capabilitymessageinfo();
}
inline void ESSCapabilityProfile::unsafe_arena_set_allocated_capabilitymessageinfo(
    ::commonmodule::CapabilityMessageInfo* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.capabilitymessageinfo_);
  }
  _impl_.capabilitymessageinfo_ = reinterpret_cast<::commonmodule::CapabilityMessageInfo*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSCapabilityProfile.capabilityMessageInfo)
}
inline ::commonmodule::CapabilityMessageInfo* PROTOBUF_NULLABLE ESSCapabilityProfile::release_capabilitymessageinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::commonmodule::CapabilityMessageInfo* released = _impl_.capabilitymessageinfo_;
  _impl_.capabilitymessageinfo_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::CapabilityMessageInfo* PROTOBUF_NULLABLE ESSCapabilityProfile::unsafe_arena_release_capabilitymessageinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSCapabilityProfile.capabilityMessageInfo)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::commonmodule::CapabilityMessageInfo* temp = _impl_.capabilitymessageinfo_;
  _impl_.capabilitymessageinfo_ = nullptr;
  return temp;
}
inline ::commonmodule::CapabilityMessageInfo* PROTOBUF_NONNULL ESSCapabilityProfile::_internal_mutable_capabilitymessageinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.capabilitymessageinfo_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::CapabilityMessageInfo>(GetArena());
    _impl_.capabilitymessageinfo_ = reinterpret_cast<::commonmodule::CapabilityMessageInfo*>(p);
  }
  return _impl_.capabilitymessageinfo_;
}
inline ::commonmodule::CapabilityMessageInfo* PROTOBUF_NONNULL ESSCapabilityProfile::mutable_capabilitymessageinfo()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::commonmodule::CapabilityMessageInfo* _msg = _internal_mutable_capabilitymessageinfo();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSCapabilityProfile.capabilityMessageInfo)
  return _msg;
}
inline void ESSCapabilityProfile::set_allocated_capabilitymessageinfo(::commonmodule::CapabilityMessageInfo* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.capabilitymessageinfo_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.capabilitymessageinfo_ = reinterpret_cast<::commonmodule::CapabilityMessageInfo*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSCapabilityProfile.capabilityMessageInfo)
}

// .commonmodule.ESS ess = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
inline bool ESSCapabilityProfile::has_ess() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.ess_ != nullptr);
  return value;
}
inline const ::commonmodule::ESS& ESSCapabilityProfile::_internal_ess() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::ESS* p = _impl_.ess_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::ESS&>(::commonmodule::_ESS_default_instance_);
}
inline const ::commonmodule::ESS& ESSCapabilityProfile::ess() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSCapabilityProfile.ess)
  return _internal_ess();
}
inline void ESSCapabilityProfile::unsafe_arena_set_allocated_ess(
    ::commonmodule::ESS* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.ess_);
  }
  _impl_.ess_ = reinterpret_cast<::commonmodule::ESS*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSCapabilityProfile.ess)
}
inline ::commonmodule::ESS* PROTOBUF_NULLABLE ESSCapabilityProfile::release_ess() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::commonmodule::ESS* released = _impl_.ess_;
  _impl_.ess_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::ESS* PROTOBUF_NULLABLE ESSCapabilityProfile::unsafe_arena_release_ess() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSCapabilityProfile.ess)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::commonmodule::ESS* temp = _impl_.ess_;
  _impl_.ess_ = nullptr;
  return temp;
}
inline ::commonmodule::ESS* PROTOBUF_NONNULL ESSCapabilityProfile::_internal_mutable_ess() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.ess_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::ESS>(GetArena());
    _impl_.ess_ = reinterpret_cast<::commonmodule::ESS*>(p);
  }
  return _impl_.ess_;
}
inline ::commonmodule::ESS* PROTOBUF_NONNULL ESSCapabilityProfile::mutable_ess()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::commonmodule::ESS* _msg = _internal_mutable_ess();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSCapabilityProfile.ess)
  return _msg;
}
inline void ESSCapabilityProfile::set_allocated_ess(::commonmodule::ESS* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.ess_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.ess_ = reinterpret_cast<::commonmodule::ESS*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSCapabilityProfile.ess)
}

// .essmodule.ESSCapability essCapability = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
inline bool ESSCapabilityProfile::has_esscapability() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.esscapability_ != nullptr);
  return value;
}
inline void ESSCapabilityProfile::clear_esscapability() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.esscapability_ != nullptr) _impl_.esscapability_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::essmodule::ESSCapability& ESSCapabilityProfile::_internal_esscapability() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::essmodule::ESSCapability* p = _impl_.esscapability_;
  return p != nullptr ? *p : reinterpret_cast<const ::essmodule::ESSCapability&>(::essmodule::_ESSCapability_default_instance_);
}
inline const ::essmodule::ESSCapability& ESSCapabilityProfile::esscapability() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSCapabilityProfile.essCapability)
  return _internal_esscapability();
}
inline void ESSCapabilityProfile::unsafe_arena_set_allocated_esscapability(
    ::essmodule::ESSCapability* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.esscapability_);
  }
  _impl_.esscapability_ = reinterpret_cast<::essmodule::ESSCapability*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSCapabilityProfile.essCapability)
}
inline ::essmodule::ESSCapability* PROTOBUF_NULLABLE ESSCapabilityProfile::release_esscapability() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::essmodule::ESSCapability* released = _impl_.esscapability_;
  _impl_.esscapability_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::essmodule::ESSCapability* PROTOBUF_NULLABLE ESSCapabilityProfile::unsafe_arena_release_esscapability() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSCapabilityProfile.essCapability)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::essmodule::ESSCapability* temp = _impl_.esscapability_;
  _impl_.esscapability_ = nullptr;
  return temp;
}
inline ::essmodule::ESSCapability* PROTOBUF_NONNULL ESSCapabilityProfile::_internal_mutable_esscapability() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.esscapability_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::essmodule::ESSCapability>(GetArena());
    _impl_.esscapability_ = reinterpret_cast<::essmodule::ESSCapability*>(p);
  }
  return _impl_.esscapability_;
}
inline ::essmodule::ESSCapability* PROTOBUF_NONNULL ESSCapabilityProfile::mutable_esscapability()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::essmodule::ESSCapability* _msg = _internal_mutable_esscapability();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSCapabilityProfile.essCapability)
  return _msg;
}
inline void ESSCapabilityProfile::set_allocated_esscapability(::essmodule::ESSCapability* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.esscapability_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.esscapability_ = reinterpret_cast<::essmodule::ESSCapability*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSCapabilityProfile.essCapability)
}

// -------------------------------------------------------------------

// ESSFunction

// .commonmodule.CapacityFirming capacityFirming = 1;
inline bool ESSFunction::has_capacityfirming() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.capacityfirming_ != nullptr);
  return value;
}
inline const ::commonmodule::CapacityFirming& ESSFunction::_internal_capacityfirming() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::CapacityFirming* p = _impl_.capacityfirming_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::CapacityFirming&>(::commonmodule::_CapacityFirming_default_instance_);
}
inline const ::commonmodule::CapacityFirming& ESSFunction::capacityfirming() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSFunction.capacityFirming)
  return _internal_capacityfirming();
}
inline void ESSFunction::unsafe_arena_set_allocated_capacityfirming(
    ::commonmodule::CapacityFirming* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.capacityfirming_);
  }
  _impl_.capacityfirming_ = reinterpret_cast<::commonmodule::CapacityFirming*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSFunction.capacityFirming)
}
inline ::commonmodule::CapacityFirming* PROTOBUF_NULLABLE ESSFunction::release_capacityfirming() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::commonmodule::CapacityFirming* released = _impl_.capacityfirming_;
  _impl_.capacityfirming_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::CapacityFirming* PROTOBUF_NULLABLE ESSFunction::unsafe_arena_release_capacityfirming() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSFunction.capacityFirming)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::commonmodule::CapacityFirming* temp = _impl_.capacityfirming_;
  _impl_.capacityfirming_ = nullptr;
  return temp;
}
inline ::commonmodule::CapacityFirming* PROTOBUF_NONNULL ESSFunction::_internal_mutable_capacityfirming() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.capacityfirming_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::CapacityFirming>(GetArena());
    _impl_.capacityfirming_ = reinterpret_cast<::commonmodule::CapacityFirming*>(p);
  }
  return _impl_.capacityfirming_;
}
inline ::commonmodule::CapacityFirming* PROTOBUF_NONNULL ESSFunction::mutable_capacityfirming()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::commonmodule::CapacityFirming* _msg = _internal_mutable_capacityfirming();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSFunction.capacityFirming)
  return _msg;
}
inline void ESSFunction::set_allocated_capacityfirming(::commonmodule::CapacityFirming* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.capacityfirming_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.capacityfirming_ = reinterpret_cast<::commonmodule::CapacityFirming*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSFunction.capacityFirming)
}

// .commonmodule.FrequencyRegulation frequencyRegulation = 2;
inline bool ESSFunction::has_frequencyregulation() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.frequencyregulation_ != nullptr);
  return value;
}
inline const ::commonmodule::FrequencyRegulation& ESSFunction::_internal_frequencyregulation() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::FrequencyRegulation* p = _impl_.frequencyregulation_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::FrequencyRegulation&>(::commonmodule::_FrequencyRegulation_default_instance_);
}
inline const ::commonmodule::FrequencyRegulation& ESSFunction::frequencyregulation() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSFunction.frequencyRegulation)
  return _internal_frequencyregulation();
}
inline void ESSFunction::unsafe_arena_set_allocated_frequencyregulation(
    ::commonmodule::FrequencyRegulation* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.frequencyregulation_);
  }
  _impl_.frequencyregulation_ = reinterpret_cast<::commonmodule::FrequencyRegulation*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSFunction.frequencyRegulation)
}
inline ::commonmodule::FrequencyRegulation* PROTOBUF_NULLABLE ESSFunction::release_frequencyregulation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::commonmodule::FrequencyRegulation* released = _impl_.frequencyregulation_;
  _impl_.frequencyregulation_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::FrequencyRegulation* PROTOBUF_NULLABLE ESSFunction::unsafe_arena_release_frequencyregulation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSFunction.frequencyRegulation)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::commonmodule::FrequencyRegulation* temp = _impl_.frequencyregulation_;
  _impl_.frequencyregulation_ = nullptr;
  return temp;
}
inline ::commonmodule::FrequencyRegulation* PROTOBUF_NONNULL ESSFunction::_internal_mutable_frequencyregulation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.frequencyregulation_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::FrequencyRegulation>(GetArena());
    _impl_.frequencyregulation_ = reinterpret_cast<::commonmodule::FrequencyRegulation*>(p);
  }
  return _impl_.frequencyregulation_;
}
inline ::commonmodule::FrequencyRegulation* PROTOBUF_NONNULL ESSFunction::mutable_frequencyregulation()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::commonmodule::FrequencyRegulation* _msg = _internal_mutable_frequencyregulation();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSFunction.frequencyRegulation)
  return _msg;
}
inline void ESSFunction::set_allocated_frequencyregulation(::commonmodule::FrequencyRegulation* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.frequencyregulation_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.frequencyregulation_ = reinterpret_cast<::commonmodule::FrequencyRegulation*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSFunction.frequencyRegulation)
}

// .commonmodule.PeakShaving peakShaving = 3;
inline bool ESSFunction::has_peakshaving() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.peakshaving_ != nullptr);
  return value;
}
inline const ::commonmodule::PeakShaving& ESSFunction::_internal_peakshaving() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::PeakShaving* p = _impl_.peakshaving_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::PeakShaving&>(::commonmodule::_PeakShaving_default_instance_);
}
inline const ::commonmodule::PeakShaving& ESSFunction::peakshaving() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSFunction.peakShaving)
  return _internal_peakshaving();
}
inline void ESSFunction::unsafe_arena_set_allocated_peakshaving(
    ::commonmodule::PeakShaving* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.peakshaving_);
  }
  _impl_.peakshaving_ = reinterpret_cast<::commonmodule::PeakShaving*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSFunction.peakShaving)
}
inline ::commonmodule::PeakShaving* PROTOBUF_NULLABLE ESSFunction::release_peakshaving() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::commonmodule::PeakShaving* released = _impl_.peakshaving_;
  _impl_.peakshaving_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::PeakShaving* PROTOBUF_NULLABLE ESSFunction::unsafe_arena_release_peakshaving() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSFunction.peakShaving)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::commonmodule::PeakShaving* temp = _impl_.peakshaving_;
  _impl_.peakshaving_ = nullptr;
  return temp;
}
inline ::commonmodule::PeakShaving* PROTOBUF_NONNULL ESSFunction::_internal_mutable_peakshaving() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.peakshaving_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::PeakShaving>(GetArena());
    _impl_.peakshaving_ = reinterpret_cast<::commonmodule::PeakShaving*>(p);
  }
  return _impl_.peakshaving_;
}
inline ::commonmodule::PeakShaving* PROTOBUF_NONNULL ESSFunction::mutable_peakshaving()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::commonmodule::PeakShaving* _msg = _internal_mutable_peakshaving();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSFunction.peakShaving)
  return _msg;
}
inline void ESSFunction::set_allocated_peakshaving(::commonmodule::PeakShaving* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.peakshaving_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.peakshaving_ = reinterpret_cast<::commonmodule::PeakShaving*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSFunction.peakShaving)
}

// .commonmodule.SocLimit socLimit = 4;
inline bool ESSFunction::has_soclimit() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.soclimit_ != nullptr);
  return value;
}
inline const ::commonmodule::SocLimit& ESSFunction::_internal_soclimit() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::SocLimit* p = _impl_.soclimit_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::SocLimit&>(::commonmodule::_SocLimit_default_instance_);
}
inline const ::commonmodule::SocLimit& ESSFunction::soclimit() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSFunction.socLimit)
  return _internal_soclimit();
}
inline void ESSFunction::unsafe_arena_set_allocated_soclimit(
    ::commonmodule::SocLimit* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.soclimit_);
  }
  _impl_.soclimit_ = reinterpret_cast<::commonmodule::SocLimit*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSFunction.socLimit)
}
inline ::commonmodule::SocLimit* PROTOBUF_NULLABLE ESSFunction::release_soclimit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::commonmodule::SocLimit* released = _impl_.soclimit_;
  _impl_.soclimit_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::SocLimit* PROTOBUF_NULLABLE ESSFunction::unsafe_arena_release_soclimit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSFunction.socLimit)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::commonmodule::SocLimit* temp = _impl_.soclimit_;
  _impl_.soclimit_ = nullptr;
  return temp;
}
inline ::commonmodule::SocLimit* PROTOBUF_NONNULL ESSFunction::_internal_mutable_soclimit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.soclimit_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::SocLimit>(GetArena());
    _impl_.soclimit_ = reinterpret_cast<::commonmodule::SocLimit*>(p);
  }
  return _impl_.soclimit_;
}
inline ::commonmodule::SocLimit* PROTOBUF_NONNULL ESSFunction::mutable_soclimit()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::commonmodule::SocLimit* _msg = _internal_mutable_soclimit();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSFunction.socLimit)
  return _msg;
}
inline void ESSFunction::set_allocated_soclimit(::commonmodule::SocLimit* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.soclimit_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.soclimit_ = reinterpret_cast<::commonmodule::SocLimit*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSFunction.socLimit)
}

// .commonmodule.SOCManagement socManagement = 5;
inline bool ESSFunction::has_socmanagement() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.socmanagement_ != nullptr);
  return value;
}
inline const ::commonmodule::SOCManagement& ESSFunction::_internal_socmanagement() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::SOCManagement* p = _impl_.socmanagement_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::SOCManagement&>(::commonmodule::_SOCManagement_default_instance_);
}
inline const ::commonmodule::SOCManagement& ESSFunction::socmanagement() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSFunction.socManagement)
  return _internal_socmanagement();
}
inline void ESSFunction::unsafe_arena_set_allocated_socmanagement(
    ::commonmodule::SOCManagement* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.socmanagement_);
  }
  _impl_.socmanagement_ = reinterpret_cast<::commonmodule::SOCManagement*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSFunction.socManagement)
}
inline ::commonmodule::SOCManagement* PROTOBUF_NULLABLE ESSFunction::release_socmanagement() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::commonmodule::SOCManagement* released = _impl_.socmanagement_;
  _impl_.socmanagement_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::SOCManagement* PROTOBUF_NULLABLE ESSFunction::unsafe_arena_release_socmanagement() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSFunction.socManagement)

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::commonmodule::SOCManagement* temp = _impl_.socmanagement_;
  _impl_.socmanagement_ = nullptr;
  return temp;
}
inline ::commonmodule::SOCManagement* PROTOBUF_NONNULL ESSFunction::_internal_mutable_socmanagement() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.socmanagement_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::SOCManagement>(GetArena());
    _impl_.socmanagement_ = reinterpret_cast<::commonmodule::SOCManagement*>(p);
  }
  return _impl_.socmanagement_;
}
inline ::commonmodule::SOCManagement* PROTOBUF_NONNULL ESSFunction::mutable_socmanagement()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000010u;
  ::commonmodule::SOCManagement* _msg = _internal_mutable_socmanagement();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSFunction.socManagement)
  return _msg;
}
inline void ESSFunction::set_allocated_socmanagement(::commonmodule::SOCManagement* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.socmanagement_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }

  _impl_.socmanagement_ = reinterpret_cast<::commonmodule::SOCManagement*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSFunction.socManagement)
}

// .commonmodule.VoltageDroop voltageDroop = 6;
inline bool ESSFunction::has_voltagedroop() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.voltagedroop_ != nullptr);
  return value;
}
inline const ::commonmodule::VoltageDroop& ESSFunction::_internal_voltagedroop() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::VoltageDroop* p = _impl_.voltagedroop_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::VoltageDroop&>(::commonmodule::_VoltageDroop_default_instance_);
}
inline const ::commonmodule::VoltageDroop& ESSFunction::voltagedroop() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSFunction.voltageDroop)
  return _internal_voltagedroop();
}
inline void ESSFunction::unsafe_arena_set_allocated_voltagedroop(
    ::commonmodule::VoltageDroop* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.voltagedroop_);
  }
  _impl_.voltagedroop_ = reinterpret_cast<::commonmodule::VoltageDroop*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSFunction.voltageDroop)
}
inline ::commonmodule::VoltageDroop* PROTOBUF_NULLABLE ESSFunction::release_voltagedroop() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::commonmodule::VoltageDroop* released = _impl_.voltagedroop_;
  _impl_.voltagedroop_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::VoltageDroop* PROTOBUF_NULLABLE ESSFunction::unsafe_arena_release_voltagedroop() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSFunction.voltageDroop)

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::commonmodule::VoltageDroop* temp = _impl_.voltagedroop_;
  _impl_.voltagedroop_ = nullptr;
  return temp;
}
inline ::commonmodule::VoltageDroop* PROTOBUF_NONNULL ESSFunction::_internal_mutable_voltagedroop() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.voltagedroop_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::VoltageDroop>(GetArena());
    _impl_.voltagedroop_ = reinterpret_cast<::commonmodule::VoltageDroop*>(p);
  }
  return _impl_.voltagedroop_;
}
inline ::commonmodule::VoltageDroop* PROTOBUF_NONNULL ESSFunction::mutable_voltagedroop()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000020u;
  ::commonmodule::VoltageDroop* _msg = _internal_mutable_voltagedroop();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSFunction.voltageDroop)
  return _msg;
}
inline void ESSFunction::set_allocated_voltagedroop(::commonmodule::VoltageDroop* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.voltagedroop_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }

  _impl_.voltagedroop_ = reinterpret_cast<::commonmodule::VoltageDroop*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSFunction.voltageDroop)
}

// .commonmodule.VoltagePI voltagePI = 7;
inline bool ESSFunction::has_voltagepi() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.voltagepi_ != nullptr);
  return value;
}
inline const ::commonmodule::VoltagePI& ESSFunction::_internal_voltagepi() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::VoltagePI* p = _impl_.voltagepi_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::VoltagePI&>(::commonmodule::_VoltagePI_default_instance_);
}
inline const ::commonmodule::VoltagePI& ESSFunction::voltagepi() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSFunction.voltagePI)
  return _internal_voltagepi();
}
inline void ESSFunction::unsafe_arena_set_allocated_voltagepi(
    ::commonmodule::VoltagePI* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.voltagepi_);
  }
  _impl_.voltagepi_ = reinterpret_cast<::commonmodule::VoltagePI*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000040u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000040u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSFunction.voltagePI)
}
inline ::commonmodule::VoltagePI* PROTOBUF_NULLABLE ESSFunction::release_voltagepi() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000040u;
  ::commonmodule::VoltagePI* released = _impl_.voltagepi_;
  _impl_.voltagepi_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::VoltagePI* PROTOBUF_NULLABLE ESSFunction::unsafe_arena_release_voltagepi() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSFunction.voltagePI)

  _impl_._has_bits_[0] &= ~0x00000040u;
  ::commonmodule::VoltagePI* temp = _impl_.voltagepi_;
  _impl_.voltagepi_ = nullptr;
  return temp;
}
inline ::commonmodule::VoltagePI* PROTOBUF_NONNULL ESSFunction::_internal_mutable_voltagepi() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.voltagepi_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::VoltagePI>(GetArena());
    _impl_.voltagepi_ = reinterpret_cast<::commonmodule::VoltagePI*>(p);
  }
  return _impl_.voltagepi_;
}
inline ::commonmodule::VoltagePI* PROTOBUF_NONNULL ESSFunction::mutable_voltagepi()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000040u;
  ::commonmodule::VoltagePI* _msg = _internal_mutable_voltagepi();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSFunction.voltagePI)
  return _msg;
}
inline void ESSFunction::set_allocated_voltagepi(::commonmodule::VoltagePI* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.voltagepi_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000040u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000040u;
  }

  _impl_.voltagepi_ = reinterpret_cast<::commonmodule::VoltagePI*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSFunction.voltagePI)
}

// -------------------------------------------------------------------

// ESSPoint

// .commonmodule.ControlSPC blackStartEnabled = 1;
inline bool ESSPoint::has_blackstartenabled() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.blackstartenabled_ != nullptr);
  return value;
}
inline const ::commonmodule::ControlSPC& ESSPoint::_internal_blackstartenabled() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::ControlSPC* p = _impl_.blackstartenabled_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::ControlSPC&>(::commonmodule::_ControlSPC_default_instance_);
}
inline const ::commonmodule::ControlSPC& ESSPoint::blackstartenabled() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSPoint.blackStartEnabled)
  return _internal_blackstartenabled();
}
inline void ESSPoint::unsafe_arena_set_allocated_blackstartenabled(
    ::commonmodule::ControlSPC* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.blackstartenabled_);
  }
  _impl_.blackstartenabled_ = reinterpret_cast<::commonmodule::ControlSPC*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSPoint.blackStartEnabled)
}
inline ::commonmodule::ControlSPC* PROTOBUF_NULLABLE ESSPoint::release_blackstartenabled() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::commonmodule::ControlSPC* released = _impl_.blackstartenabled_;
  _impl_.blackstartenabled_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::ControlSPC* PROTOBUF_NULLABLE ESSPoint::unsafe_arena_release_blackstartenabled() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSPoint.blackStartEnabled)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::commonmodule::ControlSPC* temp = _impl_.blackstartenabled_;
  _impl_.blackstartenabled_ = nullptr;
  return temp;
}
inline ::commonmodule::ControlSPC* PROTOBUF_NONNULL ESSPoint::_internal_mutable_blackstartenabled() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.blackstartenabled_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::ControlSPC>(GetArena());
    _impl_.blackstartenabled_ = reinterpret_cast<::commonmodule::ControlSPC*>(p);
  }
  return _impl_.blackstartenabled_;
}
inline ::commonmodule::ControlSPC* PROTOBUF_NONNULL ESSPoint::mutable_blackstartenabled()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::commonmodule::ControlSPC* _msg = _internal_mutable_blackstartenabled();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSPoint.blackStartEnabled)
  return _msg;
}
inline void ESSPoint::set_allocated_blackstartenabled(::commonmodule::ControlSPC* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.blackstartenabled_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.blackstartenabled_ = reinterpret_cast<::commonmodule::ControlSPC*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSPoint.blackStartEnabled)
}

// .essmodule.ESSFunction function = 3;
inline bool ESSPoint::has_function() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.function_ != nullptr);
  return value;
}
inline void ESSPoint::clear_function() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.function_ != nullptr) _impl_.function_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::essmodule::ESSFunction& ESSPoint::_internal_function() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::essmodule::ESSFunction* p = _impl_.function_;
  return p != nullptr ? *p : reinterpret_cast<const ::essmodule::ESSFunction&>(::essmodule::_ESSFunction_default_instance_);
}
inline const ::essmodule::ESSFunction& ESSPoint::function() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSPoint.function)
  return _internal_function();
}
inline void ESSPoint::unsafe_arena_set_allocated_function(
    ::essmodule::ESSFunction* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.function_);
  }
  _impl_.function_ = reinterpret_cast<::essmodule::ESSFunction*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSPoint.function)
}
inline ::essmodule::ESSFunction* PROTOBUF_NULLABLE ESSPoint::release_function() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::essmodule::ESSFunction* released = _impl_.function_;
  _impl_.function_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::essmodule::ESSFunction* PROTOBUF_NULLABLE ESSPoint::unsafe_arena_release_function() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSPoint.function)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::essmodule::ESSFunction* temp = _impl_.function_;
  _impl_.function_ = nullptr;
  return temp;
}
inline ::essmodule::ESSFunction* PROTOBUF_NONNULL ESSPoint::_internal_mutable_function() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.function_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::essmodule::ESSFunction>(GetArena());
    _impl_.function_ = reinterpret_cast<::essmodule::ESSFunction*>(p);
  }
  return _impl_.function_;
}
inline ::essmodule::ESSFunction* PROTOBUF_NONNULL ESSPoint::mutable_function()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::essmodule::ESSFunction* _msg = _internal_mutable_function();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSPoint.function)
  return _msg;
}
inline void ESSPoint::set_allocated_function(::essmodule::ESSFunction* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.function_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.function_ = reinterpret_cast<::essmodule::ESSFunction*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSPoint.function)
}

// .commonmodule.ENG_GridConnectModeKind mode = 4;
inline bool ESSPoint::has_mode() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.mode_ != nullptr);
  return value;
}
inline const ::commonmodule::ENG_GridConnectModeKind& ESSPoint::_internal_mode() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::ENG_GridConnectModeKind* p = _impl_.mode_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::ENG_GridConnectModeKind&>(::commonmodule::_ENG_GridConnectModeKind_default_instance_);
}
inline const ::commonmodule::ENG_GridConnectModeKind& ESSPoint::mode() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSPoint.mode)
  return _internal_mode();
}
inline void ESSPoint::unsafe_arena_set_allocated_mode(
    ::commonmodule::ENG_GridConnectModeKind* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.mode_);
  }
  _impl_.mode_ = reinterpret_cast<::commonmodule::ENG_GridConnectModeKind*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSPoint.mode)
}
inline ::commonmodule::ENG_GridConnectModeKind* PROTOBUF_NULLABLE ESSPoint::release_mode() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::commonmodule::ENG_GridConnectModeKind* released = _impl_.mode_;
  _impl_.mode_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::ENG_GridConnectModeKind* PROTOBUF_NULLABLE ESSPoint::unsafe_arena_release_mode() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSPoint.mode)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::commonmodule::ENG_GridConnectModeKind* temp = _impl_.mode_;
  _impl_.mode_ = nullptr;
  return temp;
}
inline ::commonmodule::ENG_GridConnectModeKind* PROTOBUF_NONNULL ESSPoint::_internal_mutable_mode() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.mode_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::ENG_GridConnectModeKind>(GetArena());
    _impl_.mode_ = reinterpret_cast<::commonmodule::ENG_GridConnectModeKind*>(p);
  }
  return _impl_.mode_;
}
inline ::commonmodule::ENG_GridConnectModeKind* PROTOBUF_NONNULL ESSPoint::mutable_mode()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::commonmodule::ENG_GridConnectModeKind* _msg = _internal_mutable_mode();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSPoint.mode)
  return _msg;
}
inline void ESSPoint::set_allocated_mode(::commonmodule::ENG_GridConnectModeKind* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.mode_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.mode_ = reinterpret_cast<::commonmodule::ENG_GridConnectModeKind*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSPoint.mode)
}

// .commonmodule.RampRate rampRates = 7;
inline bool ESSPoint::has_ramprates() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.ramprates_ != nullptr);
  return value;
}
inline const ::commonmodule::RampRate& ESSPoint::_internal_ramprates() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::RampRate* p = _impl_.ramprates_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::RampRate&>(::commonmodule::_RampRate_default_instance_);
}
inline const ::commonmodule::RampRate& ESSPoint::ramprates() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSPoint.rampRates)
  return _internal_ramprates();
}
inline void ESSPoint::unsafe_arena_set_allocated_ramprates(
    ::commonmodule::RampRate* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.ramprates_);
  }
  _impl_.ramprates_ = reinterpret_cast<::commonmodule::RampRate*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSPoint.rampRates)
}
inline ::commonmodule::RampRate* PROTOBUF_NULLABLE ESSPoint::release_ramprates() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::commonmodule::RampRate* released = _impl_.ramprates_;
  _impl_.ramprates_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::RampRate* PROTOBUF_NULLABLE ESSPoint::unsafe_arena_release_ramprates() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSPoint.rampRates)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::commonmodule::RampRate* temp = _impl_.ramprates_;
  _impl_.ramprates_ = nullptr;
  return temp;
}
inline ::commonmodule::RampRate* PROTOBUF_NONNULL ESSPoint::_internal_mutable_ramprates() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.ramprates_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::RampRate>(GetArena());
    _impl_.ramprates_ = reinterpret_cast<::commonmodule::RampRate*>(p);
  }
  return _impl_.ramprates_;
}
inline ::commonmodule::RampRate* PROTOBUF_NONNULL ESSPoint::mutable_ramprates()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::commonmodule::RampRate* _msg = _internal_mutable_ramprates();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSPoint.rampRates)
  return _msg;
}
inline void ESSPoint::set_allocated_ramprates(::commonmodule::RampRate* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.ramprates_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.ramprates_ = reinterpret_cast<::commonmodule::RampRate*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSPoint.rampRates)
}

// .commonmodule.ControlSPC reset = 10;
inline bool ESSPoint::has_reset() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.reset_ != nullptr);
  return value;
}
inline const ::commonmodule::ControlSPC& ESSPoint::_internal_reset() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::ControlSPC* p = _impl_.reset_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::ControlSPC&>(::commonmodule::_ControlSPC_default_instance_);
}
inline const ::commonmodule::ControlSPC& ESSPoint::reset() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSPoint.reset)
  return _internal_reset();
}
inline void ESSPoint::unsafe_arena_set_allocated_reset(
    ::commonmodule::ControlSPC* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.reset_);
  }
  _impl_.reset_ = reinterpret_cast<::commonmodule::ControlSPC*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSPoint.reset)
}
inline ::commonmodule::ControlSPC* PROTOBUF_NULLABLE ESSPoint::release_reset() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::commonmodule::ControlSPC* released = _impl_.reset_;
  _impl_.reset_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::ControlSPC* PROTOBUF_NULLABLE ESSPoint::unsafe_arena_release_reset() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSPoint.reset)

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::commonmodule::ControlSPC* temp = _impl_.reset_;
  _impl_.reset_ = nullptr;
  return temp;
}
inline ::commonmodule::ControlSPC* PROTOBUF_NONNULL ESSPoint::_internal_mutable_reset() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.reset_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::ControlSPC>(GetArena());
    _impl_.reset_ = reinterpret_cast<::commonmodule::ControlSPC*>(p);
  }
  return _impl_.reset_;
}
inline ::commonmodule::ControlSPC* PROTOBUF_NONNULL ESSPoint::mutable_reset()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000010u;
  ::commonmodule::ControlSPC* _msg = _internal_mutable_reset();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSPoint.reset)
  return _msg;
}
inline void ESSPoint::set_allocated_reset(::commonmodule::ControlSPC* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.reset_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }

  _impl_.reset_ = reinterpret_cast<::commonmodule::ControlSPC*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSPoint.reset)
}

// .commonmodule.Optional_StateKind state = 11;
inline bool ESSPoint::has_state() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.state_ != nullptr);
  return value;
}
inline const ::commonmodule::Optional_StateKind& ESSPoint::_internal_state() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::Optional_StateKind* p = _impl_.state_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::Optional_StateKind&>(::commonmodule::_Optional_StateKind_default_instance_);
}
inline const ::commonmodule::Optional_StateKind& ESSPoint::state() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSPoint.state)
  return _internal_state();
}
inline void ESSPoint::unsafe_arena_set_allocated_state(
    ::commonmodule::Optional_StateKind* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.state_);
  }
  _impl_.state_ = reinterpret_cast<::commonmodule::Optional_StateKind*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSPoint.state)
}
inline ::commonmodule::Optional_StateKind* PROTOBUF_NULLABLE ESSPoint::release_state() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::commonmodule::Optional_StateKind* released = _impl_.state_;
  _impl_.state_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::Optional_StateKind* PROTOBUF_NULLABLE ESSPoint::unsafe_arena_release_state() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSPoint.state)

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::commonmodule::Optional_StateKind* temp = _impl_.state_;
  _impl_.state_ = nullptr;
  return temp;
}
inline ::commonmodule::Optional_StateKind* PROTOBUF_NONNULL ESSPoint::_internal_mutable_state() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.state_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::Optional_StateKind>(GetArena());
    _impl_.state_ = reinterpret_cast<::commonmodule::Optional_StateKind*>(p);
  }
  return _impl_.state_;
}
inline ::commonmodule::Optional_StateKind* PROTOBUF_NONNULL ESSPoint::mutable_state()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000020u;
  ::commonmodule::Optional_StateKind* _msg = _internal_mutable_state();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSPoint.state)
  return _msg;
}
inline void ESSPoint::set_allocated_state(::commonmodule::Optional_StateKind* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.state_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }

  _impl_.state_ = reinterpret_cast<::commonmodule::Optional_StateKind*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSPoint.state)
}

// .commonmodule.ControlSPC transToIslndOnGridLossEnabled = 13;
inline bool ESSPoint::has_transtoislndongridlossenabled() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.transtoislndongridlossenabled_ != nullptr);
  return value;
}
inline const ::commonmodule::ControlSPC& ESSPoint::_internal_transtoislndongridlossenabled() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::ControlSPC* p = _impl_.transtoislndongridlossenabled_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::ControlSPC&>(::commonmodule::_ControlSPC_default_instance_);
}
inline const ::commonmodule::ControlSPC& ESSPoint::transtoislndongridlossenabled() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSPoint.transToIslndOnGridLossEnabled)
  return _internal_transtoislndongridlossenabled();
}
inline void ESSPoint::unsafe_arena_set_allocated_transtoislndongridlossenabled(
    ::commonmodule::ControlSPC* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.transtoislndongridlossenabled_);
  }
  _impl_.transtoislndongridlossenabled_ = reinterpret_cast<::commonmodule::ControlSPC*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000040u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000040u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSPoint.transToIslndOnGridLossEnabled)
}
inline ::commonmodule::ControlSPC* PROTOBUF_NULLABLE ESSPoint::release_transtoislndongridlossenabled() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000040u;
  ::commonmodule::ControlSPC* released = _impl_.transtoislndongridlossenabled_;
  _impl_.transtoislndongridlossenabled_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::ControlSPC* PROTOBUF_NULLABLE ESSPoint::unsafe_arena_release_transtoislndongridlossenabled() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSPoint.transToIslndOnGridLossEnabled)

  _impl_._has_bits_[0] &= ~0x00000040u;
  ::commonmodule::ControlSPC* temp = _impl_.transtoislndongridlossenabled_;
  _impl_.transtoislndongridlossenabled_ = nullptr;
  return temp;
}
inline ::commonmodule::ControlSPC* PROTOBUF_NONNULL ESSPoint::_internal_mutable_transtoislndongridlossenabled() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.transtoislndongridlossenabled_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::ControlSPC>(GetArena());
    _impl_.transtoislndongridlossenabled_ = reinterpret_cast<::commonmodule::ControlSPC*>(p);
  }
  return _impl_.transtoislndongridlossenabled_;
}
inline ::commonmodule::ControlSPC* PROTOBUF_NONNULL ESSPoint::mutable_transtoislndongridlossenabled()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000040u;
  ::commonmodule::ControlSPC* _msg = _internal_mutable_transtoislndongridlossenabled();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSPoint.transToIslndOnGridLossEnabled)
  return _msg;
}
inline void ESSPoint::set_allocated_transtoislndongridlossenabled(::commonmodule::ControlSPC* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.transtoislndongridlossenabled_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000040u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000040u;
  }

  _impl_.transtoislndongridlossenabled_ = reinterpret_cast<::commonmodule::ControlSPC*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSPoint.transToIslndOnGridLossEnabled)
}

// .commonmodule.EnterServiceAPC enterServiceOperation = 16;
inline bool ESSPoint::has_enterserviceoperation() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.enterserviceoperation_ != nullptr);
  return value;
}
inline const ::commonmodule::EnterServiceAPC& ESSPoint::_internal_enterserviceoperation() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::EnterServiceAPC* p = _impl_.enterserviceoperation_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::EnterServiceAPC&>(::commonmodule::_EnterServiceAPC_default_instance_);
}
inline const ::commonmodule::EnterServiceAPC& ESSPoint::enterserviceoperation() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSPoint.enterServiceOperation)
  return _internal_enterserviceoperation();
}
inline void ESSPoint::unsafe_arena_set_allocated_enterserviceoperation(
    ::commonmodule::EnterServiceAPC* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.enterserviceoperation_);
  }
  _impl_.enterserviceoperation_ = reinterpret_cast<::commonmodule::EnterServiceAPC*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000080u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000080u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSPoint.enterServiceOperation)
}
inline ::commonmodule::EnterServiceAPC* PROTOBUF_NULLABLE ESSPoint::release_enterserviceoperation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000080u;
  ::commonmodule::EnterServiceAPC* released = _impl_.enterserviceoperation_;
  _impl_.enterserviceoperation_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::EnterServiceAPC* PROTOBUF_NULLABLE ESSPoint::unsafe_arena_release_enterserviceoperation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSPoint.enterServiceOperation)

  _impl_._has_bits_[0] &= ~0x00000080u;
  ::commonmodule::EnterServiceAPC* temp = _impl_.enterserviceoperation_;
  _impl_.enterserviceoperation_ = nullptr;
  return temp;
}
inline ::commonmodule::EnterServiceAPC* PROTOBUF_NONNULL ESSPoint::_internal_mutable_enterserviceoperation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.enterserviceoperation_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::EnterServiceAPC>(GetArena());
    _impl_.enterserviceoperation_ = reinterpret_cast<::commonmodule::EnterServiceAPC*>(p);
  }
  return _impl_.enterserviceoperation_;
}
inline ::commonmodule::EnterServiceAPC* PROTOBUF_NONNULL ESSPoint::mutable_enterserviceoperation()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000080u;
  ::commonmodule::EnterServiceAPC* _msg = _internal_mutable_enterserviceoperation();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSPoint.enterServiceOperation)
  return _msg;
}
inline void ESSPoint::set_allocated_enterserviceoperation(::commonmodule::EnterServiceAPC* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.enterserviceoperation_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000080u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000080u;
  }

  _impl_.enterserviceoperation_ = reinterpret_cast<::commonmodule::EnterServiceAPC*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSPoint.enterServiceOperation)
}

// .commonmodule.HzWAPC hzWOperation = 17;
inline bool ESSPoint::has_hzwoperation() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.hzwoperation_ != nullptr);
  return value;
}
inline const ::commonmodule::HzWAPC& ESSPoint::_internal_hzwoperation() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::HzWAPC* p = _impl_.hzwoperation_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::HzWAPC&>(::commonmodule::_HzWAPC_default_instance_);
}
inline const ::commonmodule::HzWAPC& ESSPoint::hzwoperation() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSPoint.hzWOperation)
  return _internal_hzwoperation();
}
inline void ESSPoint::unsafe_arena_set_allocated_hzwoperation(
    ::commonmodule::HzWAPC* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.hzwoperation_);
  }
  _impl_.hzwoperation_ = reinterpret_cast<::commonmodule::HzWAPC*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000100u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000100u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSPoint.hzWOperation)
}
inline ::commonmodule::HzWAPC* PROTOBUF_NULLABLE ESSPoint::release_hzwoperation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000100u;
  ::commonmodule::HzWAPC* released = _impl_.hzwoperation_;
  _impl_.hzwoperation_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::HzWAPC* PROTOBUF_NULLABLE ESSPoint::unsafe_arena_release_hzwoperation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSPoint.hzWOperation)

  _impl_._has_bits_[0] &= ~0x00000100u;
  ::commonmodule::HzWAPC* temp = _impl_.hzwoperation_;
  _impl_.hzwoperation_ = nullptr;
  return temp;
}
inline ::commonmodule::HzWAPC* PROTOBUF_NONNULL ESSPoint::_internal_mutable_hzwoperation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.hzwoperation_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::HzWAPC>(GetArena());
    _impl_.hzwoperation_ = reinterpret_cast<::commonmodule::HzWAPC*>(p);
  }
  return _impl_.hzwoperation_;
}
inline ::commonmodule::HzWAPC* PROTOBUF_NONNULL ESSPoint::mutable_hzwoperation()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000100u;
  ::commonmodule::HzWAPC* _msg = _internal_mutable_hzwoperation();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSPoint.hzWOperation)
  return _msg;
}
inline void ESSPoint::set_allocated_hzwoperation(::commonmodule::HzWAPC* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.hzwoperation_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000100u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000100u;
  }

  _impl_.hzwoperation_ = reinterpret_cast<::commonmodule::HzWAPC*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSPoint.hzWOperation)
}

// .commonmodule.LimitWAPC limitWOperation = 18;
inline bool ESSPoint::has_limitwoperation() const {
  bool value = (_impl_._has_bits_[0] & 0x00000200u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.limitwoperation_ != nullptr);
  return value;
}
inline const ::commonmodule::LimitWAPC& ESSPoint::_internal_limitwoperation() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::LimitWAPC* p = _impl_.limitwoperation_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::LimitWAPC&>(::commonmodule::_LimitWAPC_default_instance_);
}
inline const ::commonmodule::LimitWAPC& ESSPoint::limitwoperation() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSPoint.limitWOperation)
  return _internal_limitwoperation();
}
inline void ESSPoint::unsafe_arena_set_allocated_limitwoperation(
    ::commonmodule::LimitWAPC* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.limitwoperation_);
  }
  _impl_.limitwoperation_ = reinterpret_cast<::commonmodule::LimitWAPC*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000200u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000200u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSPoint.limitWOperation)
}
inline ::commonmodule::LimitWAPC* PROTOBUF_NULLABLE ESSPoint::release_limitwoperation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000200u;
  ::commonmodule::LimitWAPC* released = _impl_.limitwoperation_;
  _impl_.limitwoperation_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::LimitWAPC* PROTOBUF_NULLABLE ESSPoint::unsafe_arena_release_limitwoperation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSPoint.limitWOperation)

  _impl_._has_bits_[0] &= ~0x00000200u;
  ::commonmodule::LimitWAPC* temp = _impl_.limitwoperation_;
  _impl_.limitwoperation_ = nullptr;
  return temp;
}
inline ::commonmodule::LimitWAPC* PROTOBUF_NONNULL ESSPoint::_internal_mutable_limitwoperation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.limitwoperation_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::LimitWAPC>(GetArena());
    _impl_.limitwoperation_ = reinterpret_cast<::commonmodule::LimitWAPC*>(p);
  }
  return _impl_.limitwoperation_;
}
inline ::commonmodule::LimitWAPC* PROTOBUF_NONNULL ESSPoint::mutable_limitwoperation()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000200u;
  ::commonmodule::LimitWAPC* _msg = _internal_mutable_limitwoperation();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSPoint.limitWOperation)
  return _msg;
}
inline void ESSPoint::set_allocated_limitwoperation(::commonmodule::LimitWAPC* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.limitwoperation_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000200u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000200u;
  }

  _impl_.limitwoperation_ = reinterpret_cast<::commonmodule::LimitWAPC*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSPoint.limitWOperation)
}

// .commonmodule.PFSPC pFOperation = 19;
inline bool ESSPoint::has_pfoperation() const {
  bool value = (_impl_._has_bits_[0] & 0x00000400u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pfoperation_ != nullptr);
  return value;
}
inline const ::commonmodule::PFSPC& ESSPoint::_internal_pfoperation() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::PFSPC* p = _impl_.pfoperation_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::PFSPC&>(::commonmodule::_PFSPC_default_instance_);
}
inline const ::commonmodule::PFSPC& ESSPoint::pfoperation() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSPoint.pFOperation)
  return _internal_pfoperation();
}
inline void ESSPoint::unsafe_arena_set_allocated_pfoperation(
    ::commonmodule::PFSPC* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pfoperation_);
  }
  _impl_.pfoperation_ = reinterpret_cast<::commonmodule::PFSPC*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000400u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000400u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSPoint.pFOperation)
}
inline ::commonmodule::PFSPC* PROTOBUF_NULLABLE ESSPoint::release_pfoperation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000400u;
  ::commonmodule::PFSPC* released = _impl_.pfoperation_;
  _impl_.pfoperation_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::PFSPC* PROTOBUF_NULLABLE ESSPoint::unsafe_arena_release_pfoperation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSPoint.pFOperation)

  _impl_._has_bits_[0] &= ~0x00000400u;
  ::commonmodule::PFSPC* temp = _impl_.pfoperation_;
  _impl_.pfoperation_ = nullptr;
  return temp;
}
inline ::commonmodule::PFSPC* PROTOBUF_NONNULL ESSPoint::_internal_mutable_pfoperation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pfoperation_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::PFSPC>(GetArena());
    _impl_.pfoperation_ = reinterpret_cast<::commonmodule::PFSPC*>(p);
  }
  return _impl_.pfoperation_;
}
inline ::commonmodule::PFSPC* PROTOBUF_NONNULL ESSPoint::mutable_pfoperation()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000400u;
  ::commonmodule::PFSPC* _msg = _internal_mutable_pfoperation();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSPoint.pFOperation)
  return _msg;
}
inline void ESSPoint::set_allocated_pfoperation(::commonmodule::PFSPC* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pfoperation_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000400u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000400u;
  }

  _impl_.pfoperation_ = reinterpret_cast<::commonmodule::PFSPC*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSPoint.pFOperation)
}

// .commonmodule.TmHzCSG tmHzTripOperation = 20;
inline bool ESSPoint::has_tmhztripoperation() const {
  bool value = (_impl_._has_bits_[0] & 0x00000800u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.tmhztripoperation_ != nullptr);
  return value;
}
inline const ::commonmodule::TmHzCSG& ESSPoint::_internal_tmhztripoperation() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::TmHzCSG* p = _impl_.tmhztripoperation_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::TmHzCSG&>(::commonmodule::_TmHzCSG_default_instance_);
}
inline const ::commonmodule::TmHzCSG& ESSPoint::tmhztripoperation() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSPoint.tmHzTripOperation)
  return _internal_tmhztripoperation();
}
inline void ESSPoint::unsafe_arena_set_allocated_tmhztripoperation(
    ::commonmodule::TmHzCSG* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.tmhztripoperation_);
  }
  _impl_.tmhztripoperation_ = reinterpret_cast<::commonmodule::TmHzCSG*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000800u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000800u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSPoint.tmHzTripOperation)
}
inline ::commonmodule::TmHzCSG* PROTOBUF_NULLABLE ESSPoint::release_tmhztripoperation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000800u;
  ::commonmodule::TmHzCSG* released = _impl_.tmhztripoperation_;
  _impl_.tmhztripoperation_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::TmHzCSG* PROTOBUF_NULLABLE ESSPoint::unsafe_arena_release_tmhztripoperation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSPoint.tmHzTripOperation)

  _impl_._has_bits_[0] &= ~0x00000800u;
  ::commonmodule::TmHzCSG* temp = _impl_.tmhztripoperation_;
  _impl_.tmhztripoperation_ = nullptr;
  return temp;
}
inline ::commonmodule::TmHzCSG* PROTOBUF_NONNULL ESSPoint::_internal_mutable_tmhztripoperation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.tmhztripoperation_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::TmHzCSG>(GetArena());
    _impl_.tmhztripoperation_ = reinterpret_cast<::commonmodule::TmHzCSG*>(p);
  }
  return _impl_.tmhztripoperation_;
}
inline ::commonmodule::TmHzCSG* PROTOBUF_NONNULL ESSPoint::mutable_tmhztripoperation()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000800u;
  ::commonmodule::TmHzCSG* _msg = _internal_mutable_tmhztripoperation();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSPoint.tmHzTripOperation)
  return _msg;
}
inline void ESSPoint::set_allocated_tmhztripoperation(::commonmodule::TmHzCSG* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.tmhztripoperation_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000800u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000800u;
  }

  _impl_.tmhztripoperation_ = reinterpret_cast<::commonmodule::TmHzCSG*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSPoint.tmHzTripOperation)
}

// .commonmodule.TmVoltCSG tmVoltTripOperation = 21;
inline bool ESSPoint::has_tmvolttripoperation() const {
  bool value = (_impl_._has_bits_[0] & 0x00001000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.tmvolttripoperation_ != nullptr);
  return value;
}
inline const ::commonmodule::TmVoltCSG& ESSPoint::_internal_tmvolttripoperation() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::TmVoltCSG* p = _impl_.tmvolttripoperation_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::TmVoltCSG&>(::commonmodule::_TmVoltCSG_default_instance_);
}
inline const ::commonmodule::TmVoltCSG& ESSPoint::tmvolttripoperation() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSPoint.tmVoltTripOperation)
  return _internal_tmvolttripoperation();
}
inline void ESSPoint::unsafe_arena_set_allocated_tmvolttripoperation(
    ::commonmodule::TmVoltCSG* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.tmvolttripoperation_);
  }
  _impl_.tmvolttripoperation_ = reinterpret_cast<::commonmodule::TmVoltCSG*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00001000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00001000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSPoint.tmVoltTripOperation)
}
inline ::commonmodule::TmVoltCSG* PROTOBUF_NULLABLE ESSPoint::release_tmvolttripoperation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00001000u;
  ::commonmodule::TmVoltCSG* released = _impl_.tmvolttripoperation_;
  _impl_.tmvolttripoperation_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::TmVoltCSG* PROTOBUF_NULLABLE ESSPoint::unsafe_arena_release_tmvolttripoperation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSPoint.tmVoltTripOperation)

  _impl_._has_bits_[0] &= ~0x00001000u;
  ::commonmodule::TmVoltCSG* temp = _impl_.tmvolttripoperation_;
  _impl_.tmvolttripoperation_ = nullptr;
  return temp;
}
inline ::commonmodule::TmVoltCSG* PROTOBUF_NONNULL ESSPoint::_internal_mutable_tmvolttripoperation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.tmvolttripoperation_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::TmVoltCSG>(GetArena());
    _impl_.tmvolttripoperation_ = reinterpret_cast<::commonmodule::TmVoltCSG*>(p);
  }
  return _impl_.tmvolttripoperation_;
}
inline ::commonmodule::TmVoltCSG* PROTOBUF_NONNULL ESSPoint::mutable_tmvolttripoperation()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00001000u;
  ::commonmodule::TmVoltCSG* _msg = _internal_mutable_tmvolttripoperation();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSPoint.tmVoltTripOperation)
  return _msg;
}
inline void ESSPoint::set_allocated_tmvolttripoperation(::commonmodule::TmVoltCSG* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.tmvolttripoperation_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00001000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00001000u;
  }

  _impl_.tmvolttripoperation_ = reinterpret_cast<::commonmodule::TmVoltCSG*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSPoint.tmVoltTripOperation)
}

// .commonmodule.VarSPC vArOperation = 22;
inline bool ESSPoint::has_varoperation() const {
  bool value = (_impl_._has_bits_[0] & 0x00002000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.varoperation_ != nullptr);
  return value;
}
inline const ::commonmodule::VarSPC& ESSPoint::_internal_varoperation() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::VarSPC* p = _impl_.varoperation_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::VarSPC&>(::commonmodule::_VarSPC_default_instance_);
}
inline const ::commonmodule::VarSPC& ESSPoint::varoperation() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSPoint.vArOperation)
  return _internal_varoperation();
}
inline void ESSPoint::unsafe_arena_set_allocated_varoperation(
    ::commonmodule::VarSPC* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.varoperation_);
  }
  _impl_.varoperation_ = reinterpret_cast<::commonmodule::VarSPC*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00002000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00002000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSPoint.vArOperation)
}
inline ::commonmodule::VarSPC* PROTOBUF_NULLABLE ESSPoint::release_varoperation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00002000u;
  ::commonmodule::VarSPC* released = _impl_.varoperation_;
  _impl_.varoperation_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::VarSPC* PROTOBUF_NULLABLE ESSPoint::unsafe_arena_release_varoperation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSPoint.vArOperation)

  _impl_._has_bits_[0] &= ~0x00002000u;
  ::commonmodule::VarSPC* temp = _impl_.varoperation_;
  _impl_.varoperation_ = nullptr;
  return temp;
}
inline ::commonmodule::VarSPC* PROTOBUF_NONNULL ESSPoint::_internal_mutable_varoperation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.varoperation_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::VarSPC>(GetArena());
    _impl_.varoperation_ = reinterpret_cast<::commonmodule::VarSPC*>(p);
  }
  return _impl_.varoperation_;
}
inline ::commonmodule::VarSPC* PROTOBUF_NONNULL ESSPoint::mutable_varoperation()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00002000u;
  ::commonmodule::VarSPC* _msg = _internal_mutable_varoperation();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSPoint.vArOperation)
  return _msg;
}
inline void ESSPoint::set_allocated_varoperation(::commonmodule::VarSPC* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.varoperation_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00002000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00002000u;
  }

  _impl_.varoperation_ = reinterpret_cast<::commonmodule::VarSPC*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSPoint.vArOperation)
}

// .commonmodule.VoltVarCSG voltVarOperation = 23;
inline bool ESSPoint::has_voltvaroperation() const {
  bool value = (_impl_._has_bits_[0] & 0x00004000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.voltvaroperation_ != nullptr);
  return value;
}
inline const ::commonmodule::VoltVarCSG& ESSPoint::_internal_voltvaroperation() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::VoltVarCSG* p = _impl_.voltvaroperation_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::VoltVarCSG&>(::commonmodule::_VoltVarCSG_default_instance_);
}
inline const ::commonmodule::VoltVarCSG& ESSPoint::voltvaroperation() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSPoint.voltVarOperation)
  return _internal_voltvaroperation();
}
inline void ESSPoint::unsafe_arena_set_allocated_voltvaroperation(
    ::commonmodule::VoltVarCSG* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.voltvaroperation_);
  }
  _impl_.voltvaroperation_ = reinterpret_cast<::commonmodule::VoltVarCSG*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00004000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00004000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSPoint.voltVarOperation)
}
inline ::commonmodule::VoltVarCSG* PROTOBUF_NULLABLE ESSPoint::release_voltvaroperation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00004000u;
  ::commonmodule::VoltVarCSG* released = _impl_.voltvaroperation_;
  _impl_.voltvaroperation_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::VoltVarCSG* PROTOBUF_NULLABLE ESSPoint::unsafe_arena_release_voltvaroperation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSPoint.voltVarOperation)

  _impl_._has_bits_[0] &= ~0x00004000u;
  ::commonmodule::VoltVarCSG* temp = _impl_.voltvaroperation_;
  _impl_.voltvaroperation_ = nullptr;
  return temp;
}
inline ::commonmodule::VoltVarCSG* PROTOBUF_NONNULL ESSPoint::_internal_mutable_voltvaroperation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.voltvaroperation_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::VoltVarCSG>(GetArena());
    _impl_.voltvaroperation_ = reinterpret_cast<::commonmodule::VoltVarCSG*>(p);
  }
  return _impl_.voltvaroperation_;
}
inline ::commonmodule::VoltVarCSG* PROTOBUF_NONNULL ESSPoint::mutable_voltvaroperation()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00004000u;
  ::commonmodule::VoltVarCSG* _msg = _internal_mutable_voltvaroperation();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSPoint.voltVarOperation)
  return _msg;
}
inline void ESSPoint::set_allocated_voltvaroperation(::commonmodule::VoltVarCSG* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.voltvaroperation_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00004000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00004000u;
  }

  _impl_.voltvaroperation_ = reinterpret_cast<::commonmodule::VoltVarCSG*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSPoint.voltVarOperation)
}

// .commonmodule.VoltWCSG voltWOperation = 24;
inline bool ESSPoint::has_voltwoperation() const {
  bool value = (_impl_._has_bits_[0] & 0x00008000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.voltwoperation_ != nullptr);
  return value;
}
inline const ::commonmodule::VoltWCSG& ESSPoint::_internal_voltwoperation() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::VoltWCSG* p = _impl_.voltwoperation_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::VoltWCSG&>(::commonmodule::_VoltWCSG_default_instance_);
}
inline const ::commonmodule::VoltWCSG& ESSPoint::voltwoperation() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSPoint.voltWOperation)
  return _internal_voltwoperation();
}
inline void ESSPoint::unsafe_arena_set_allocated_voltwoperation(
    ::commonmodule::VoltWCSG* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.voltwoperation_);
  }
  _impl_.voltwoperation_ = reinterpret_cast<::commonmodule::VoltWCSG*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00008000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00008000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSPoint.voltWOperation)
}
inline ::commonmodule::VoltWCSG* PROTOBUF_NULLABLE ESSPoint::release_voltwoperation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00008000u;
  ::commonmodule::VoltWCSG* released = _impl_.voltwoperation_;
  _impl_.voltwoperation_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::VoltWCSG* PROTOBUF_NULLABLE ESSPoint::unsafe_arena_release_voltwoperation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSPoint.voltWOperation)

  _impl_._has_bits_[0] &= ~0x00008000u;
  ::commonmodule::VoltWCSG* temp = _impl_.voltwoperation_;
  _impl_.voltwoperation_ = nullptr;
  return temp;
}
inline ::commonmodule::VoltWCSG* PROTOBUF_NONNULL ESSPoint::_internal_mutable_voltwoperation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.voltwoperation_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::VoltWCSG>(GetArena());
    _impl_.voltwoperation_ = reinterpret_cast<::commonmodule::VoltWCSG*>(p);
  }
  return _impl_.voltwoperation_;
}
inline ::commonmodule::VoltWCSG* PROTOBUF_NONNULL ESSPoint::mutable_voltwoperation()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00008000u;
  ::commonmodule::VoltWCSG* _msg = _internal_mutable_voltwoperation();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSPoint.voltWOperation)
  return _msg;
}
inline void ESSPoint::set_allocated_voltwoperation(::commonmodule::VoltWCSG* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.voltwoperation_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00008000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00008000u;
  }

  _impl_.voltwoperation_ = reinterpret_cast<::commonmodule::VoltWCSG*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSPoint.voltWOperation)
}

// .commonmodule.WVarCSG wVarOperation = 25;
inline bool ESSPoint::has_wvaroperation() const {
  bool value = (_impl_._has_bits_[0] & 0x00010000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.wvaroperation_ != nullptr);
  return value;
}
inline const ::commonmodule::WVarCSG& ESSPoint::_internal_wvaroperation() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::WVarCSG* p = _impl_.wvaroperation_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::WVarCSG&>(::commonmodule::_WVarCSG_default_instance_);
}
inline const ::commonmodule::WVarCSG& ESSPoint::wvaroperation() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSPoint.wVarOperation)
  return _internal_wvaroperation();
}
inline void ESSPoint::unsafe_arena_set_allocated_wvaroperation(
    ::commonmodule::WVarCSG* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.wvaroperation_);
  }
  _impl_.wvaroperation_ = reinterpret_cast<::commonmodule::WVarCSG*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00010000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00010000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSPoint.wVarOperation)
}
inline ::commonmodule::WVarCSG* PROTOBUF_NULLABLE ESSPoint::release_wvaroperation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00010000u;
  ::commonmodule::WVarCSG* released = _impl_.wvaroperation_;
  _impl_.wvaroperation_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::WVarCSG* PROTOBUF_NULLABLE ESSPoint::unsafe_arena_release_wvaroperation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSPoint.wVarOperation)

  _impl_._has_bits_[0] &= ~0x00010000u;
  ::commonmodule::WVarCSG* temp = _impl_.wvaroperation_;
  _impl_.wvaroperation_ = nullptr;
  return temp;
}
inline ::commonmodule::WVarCSG* PROTOBUF_NONNULL ESSPoint::_internal_mutable_wvaroperation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.wvaroperation_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::WVarCSG>(GetArena());
    _impl_.wvaroperation_ = reinterpret_cast<::commonmodule::WVarCSG*>(p);
  }
  return _impl_.wvaroperation_;
}
inline ::commonmodule::WVarCSG* PROTOBUF_NONNULL ESSPoint::mutable_wvaroperation()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00010000u;
  ::commonmodule::WVarCSG* _msg = _internal_mutable_wvaroperation();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSPoint.wVarOperation)
  return _msg;
}
inline void ESSPoint::set_allocated_wvaroperation(::commonmodule::WVarCSG* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.wvaroperation_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00010000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00010000u;
  }

  _impl_.wvaroperation_ = reinterpret_cast<::commonmodule::WVarCSG*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSPoint.wVarOperation)
}

// .commonmodule.WSPC wOperation = 26;
inline bool ESSPoint::has_woperation() const {
  bool value = (_impl_._has_bits_[0] & 0x00020000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.woperation_ != nullptr);
  return value;
}
inline const ::commonmodule::WSPC& ESSPoint::_internal_woperation() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::WSPC* p = _impl_.woperation_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::WSPC&>(::commonmodule::_WSPC_default_instance_);
}
inline const ::commonmodule::WSPC& ESSPoint::woperation() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSPoint.wOperation)
  return _internal_woperation();
}
inline void ESSPoint::unsafe_arena_set_allocated_woperation(
    ::commonmodule::WSPC* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.woperation_);
  }
  _impl_.woperation_ = reinterpret_cast<::commonmodule::WSPC*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00020000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00020000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSPoint.wOperation)
}
inline ::commonmodule::WSPC* PROTOBUF_NULLABLE ESSPoint::release_woperation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00020000u;
  ::commonmodule::WSPC* released = _impl_.woperation_;
  _impl_.woperation_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::WSPC* PROTOBUF_NULLABLE ESSPoint::unsafe_arena_release_woperation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSPoint.wOperation)

  _impl_._has_bits_[0] &= ~0x00020000u;
  ::commonmodule::WSPC* temp = _impl_.woperation_;
  _impl_.woperation_ = nullptr;
  return temp;
}
inline ::commonmodule::WSPC* PROTOBUF_NONNULL ESSPoint::_internal_mutable_woperation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.woperation_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::WSPC>(GetArena());
    _impl_.woperation_ = reinterpret_cast<::commonmodule::WSPC*>(p);
  }
  return _impl_.woperation_;
}
inline ::commonmodule::WSPC* PROTOBUF_NONNULL ESSPoint::mutable_woperation()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00020000u;
  ::commonmodule::WSPC* _msg = _internal_mutable_woperation();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSPoint.wOperation)
  return _msg;
}
inline void ESSPoint::set_allocated_woperation(::commonmodule::WSPC* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.woperation_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00020000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00020000u;
  }

  _impl_.woperation_ = reinterpret_cast<::commonmodule::WSPC*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSPoint.wOperation)
}

// -------------------------------------------------------------------

// ESSCurvePoint

// .essmodule.ESSPoint control = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
inline bool ESSCurvePoint::has_control() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.control_ != nullptr);
  return value;
}
inline void ESSCurvePoint::clear_control() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.control_ != nullptr) _impl_.control_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::essmodule::ESSPoint& ESSCurvePoint::_internal_control() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::essmodule::ESSPoint* p = _impl_.control_;
  return p != nullptr ? *p : reinterpret_cast<const ::essmodule::ESSPoint&>(::essmodule::_ESSPoint_default_instance_);
}
inline const ::essmodule::ESSPoint& ESSCurvePoint::control() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSCurvePoint.control)
  return _internal_control();
}
inline void ESSCurvePoint::unsafe_arena_set_allocated_control(
    ::essmodule::ESSPoint* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.control_);
  }
  _impl_.control_ = reinterpret_cast<::essmodule::ESSPoint*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSCurvePoint.control)
}
inline ::essmodule::ESSPoint* PROTOBUF_NULLABLE ESSCurvePoint::release_control() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::essmodule::ESSPoint* released = _impl_.control_;
  _impl_.control_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::essmodule::ESSPoint* PROTOBUF_NULLABLE ESSCurvePoint::unsafe_arena_release_control() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSCurvePoint.control)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::essmodule::ESSPoint* temp = _impl_.control_;
  _impl_.control_ = nullptr;
  return temp;
}
inline ::essmodule::ESSPoint* PROTOBUF_NONNULL ESSCurvePoint::_internal_mutable_control() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.control_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::essmodule::ESSPoint>(GetArena());
    _impl_.control_ = reinterpret_cast<::essmodule::ESSPoint*>(p);
  }
  return _impl_.control_;
}
inline ::essmodule::ESSPoint* PROTOBUF_NONNULL ESSCurvePoint::mutable_control()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::essmodule::ESSPoint* _msg = _internal_mutable_control();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSCurvePoint.control)
  return _msg;
}
inline void ESSCurvePoint::set_allocated_control(::essmodule::ESSPoint* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.control_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.control_ = reinterpret_cast<::essmodule::ESSPoint*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSCurvePoint.control)
}

// .commonmodule.ControlTimestamp startTime = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
inline bool ESSCurvePoint::has_starttime() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.starttime_ != nullptr);
  return value;
}
inline const ::commonmodule::ControlTimestamp& ESSCurvePoint::_internal_starttime() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::ControlTimestamp* p = _impl_.starttime_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::ControlTimestamp&>(::commonmodule::_ControlTimestamp_default_instance_);
}
inline const ::commonmodule::ControlTimestamp& ESSCurvePoint::starttime() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSCurvePoint.startTime)
  return _internal_starttime();
}
inline void ESSCurvePoint::unsafe_arena_set_allocated_starttime(
    ::commonmodule::ControlTimestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.starttime_);
  }
  _impl_.starttime_ = reinterpret_cast<::commonmodule::ControlTimestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSCurvePoint.startTime)
}
inline ::commonmodule::ControlTimestamp* PROTOBUF_NULLABLE ESSCurvePoint::release_starttime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::commonmodule::ControlTimestamp* released = _impl_.starttime_;
  _impl_.starttime_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::ControlTimestamp* PROTOBUF_NULLABLE ESSCurvePoint::unsafe_arena_release_starttime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSCurvePoint.startTime)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::commonmodule::ControlTimestamp* temp = _impl_.starttime_;
  _impl_.starttime_ = nullptr;
  return temp;
}
inline ::commonmodule::ControlTimestamp* PROTOBUF_NONNULL ESSCurvePoint::_internal_mutable_starttime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.starttime_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::ControlTimestamp>(GetArena());
    _impl_.starttime_ = reinterpret_cast<::commonmodule::ControlTimestamp*>(p);
  }
  return _impl_.starttime_;
}
inline ::commonmodule::ControlTimestamp* PROTOBUF_NONNULL ESSCurvePoint::mutable_starttime()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::commonmodule::ControlTimestamp* _msg = _internal_mutable_starttime();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSCurvePoint.startTime)
  return _msg;
}
inline void ESSCurvePoint::set_allocated_starttime(::commonmodule::ControlTimestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.starttime_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.starttime_ = reinterpret_cast<::commonmodule::ControlTimestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSCurvePoint.startTime)
}

// -------------------------------------------------------------------

// ESSCSG

// repeated .essmodule.ESSCurvePoint crvPts = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
inline int ESSCSG::_internal_crvpts_size() const {
  return _internal_crvpts().size();
}
inline int ESSCSG::crvpts_size() const {
  return _internal_crvpts_size();
}
inline void ESSCSG::clear_crvpts() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.crvpts_.Clear();
}
inline ::essmodule::ESSCurvePoint* PROTOBUF_NONNULL ESSCSG::mutable_crvpts(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:essmodule.ESSCSG.crvPts)
  return _internal_mutable_crvpts()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::essmodule::ESSCurvePoint>* PROTOBUF_NONNULL ESSCSG::mutable_crvpts()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:essmodule.ESSCSG.crvPts)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_crvpts();
}
inline const ::essmodule::ESSCurvePoint& ESSCSG::crvpts(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSCSG.crvPts)
  return _internal_crvpts().Get(index);
}
inline ::essmodule::ESSCurvePoint* PROTOBUF_NONNULL ESSCSG::add_crvpts()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::essmodule::ESSCurvePoint* _add = _internal_mutable_crvpts()->Add();
  // @@protoc_insertion_point(field_add:essmodule.ESSCSG.crvPts)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::essmodule::ESSCurvePoint>& ESSCSG::crvpts() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:essmodule.ESSCSG.crvPts)
  return _internal_crvpts();
}
inline const ::google::protobuf::RepeatedPtrField<::essmodule::ESSCurvePoint>&
ESSCSG::_internal_crvpts() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.crvpts_;
}
inline ::google::protobuf::RepeatedPtrField<::essmodule::ESSCurvePoint>* PROTOBUF_NONNULL
ESSCSG::_internal_mutable_crvpts() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.crvpts_;
}

// -------------------------------------------------------------------

// ESSControlScheduleFSCH

// .essmodule.ESSCSG ValDCSG = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
inline bool ESSControlScheduleFSCH::has_valdcsg() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.valdcsg_ != nullptr);
  return value;
}
inline void ESSControlScheduleFSCH::clear_valdcsg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.valdcsg_ != nullptr) _impl_.valdcsg_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::essmodule::ESSCSG& ESSControlScheduleFSCH::_internal_valdcsg() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::essmodule::ESSCSG* p = _impl_.valdcsg_;
  return p != nullptr ? *p : reinterpret_cast<const ::essmodule::ESSCSG&>(::essmodule::_ESSCSG_default_instance_);
}
inline const ::essmodule::ESSCSG& ESSControlScheduleFSCH::valdcsg() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSControlScheduleFSCH.ValDCSG)
  return _internal_valdcsg();
}
inline void ESSControlScheduleFSCH::unsafe_arena_set_allocated_valdcsg(
    ::essmodule::ESSCSG* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.valdcsg_);
  }
  _impl_.valdcsg_ = reinterpret_cast<::essmodule::ESSCSG*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSControlScheduleFSCH.ValDCSG)
}
inline ::essmodule::ESSCSG* PROTOBUF_NULLABLE ESSControlScheduleFSCH::release_valdcsg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::essmodule::ESSCSG* released = _impl_.valdcsg_;
  _impl_.valdcsg_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::essmodule::ESSCSG* PROTOBUF_NULLABLE ESSControlScheduleFSCH::unsafe_arena_release_valdcsg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSControlScheduleFSCH.ValDCSG)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::essmodule::ESSCSG* temp = _impl_.valdcsg_;
  _impl_.valdcsg_ = nullptr;
  return temp;
}
inline ::essmodule::ESSCSG* PROTOBUF_NONNULL ESSControlScheduleFSCH::_internal_mutable_valdcsg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.valdcsg_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::essmodule::ESSCSG>(GetArena());
    _impl_.valdcsg_ = reinterpret_cast<::essmodule::ESSCSG*>(p);
  }
  return _impl_.valdcsg_;
}
inline ::essmodule::ESSCSG* PROTOBUF_NONNULL ESSControlScheduleFSCH::mutable_valdcsg()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::essmodule::ESSCSG* _msg = _internal_mutable_valdcsg();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSControlScheduleFSCH.ValDCSG)
  return _msg;
}
inline void ESSControlScheduleFSCH::set_allocated_valdcsg(::essmodule::ESSCSG* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.valdcsg_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.valdcsg_ = reinterpret_cast<::essmodule::ESSCSG*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSControlScheduleFSCH.ValDCSG)
}

// -------------------------------------------------------------------

// EssControlFSCC

// .commonmodule.ControlFSCC controlFSCC = 1 [(.uml.option_parent_message) = true];
inline bool EssControlFSCC::has_controlfscc() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.controlfscc_ != nullptr);
  return value;
}
inline const ::commonmodule::ControlFSCC& EssControlFSCC::_internal_controlfscc() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::ControlFSCC* p = _impl_.controlfscc_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::ControlFSCC&>(::commonmodule::_ControlFSCC_default_instance_);
}
inline const ::commonmodule::ControlFSCC& EssControlFSCC::controlfscc() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.EssControlFSCC.controlFSCC)
  return _internal_controlfscc();
}
inline void EssControlFSCC::unsafe_arena_set_allocated_controlfscc(
    ::commonmodule::ControlFSCC* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.controlfscc_);
  }
  _impl_.controlfscc_ = reinterpret_cast<::commonmodule::ControlFSCC*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.EssControlFSCC.controlFSCC)
}
inline ::commonmodule::ControlFSCC* PROTOBUF_NULLABLE EssControlFSCC::release_controlfscc() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::commonmodule::ControlFSCC* released = _impl_.controlfscc_;
  _impl_.controlfscc_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::ControlFSCC* PROTOBUF_NULLABLE EssControlFSCC::unsafe_arena_release_controlfscc() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.EssControlFSCC.controlFSCC)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::commonmodule::ControlFSCC* temp = _impl_.controlfscc_;
  _impl_.controlfscc_ = nullptr;
  return temp;
}
inline ::commonmodule::ControlFSCC* PROTOBUF_NONNULL EssControlFSCC::_internal_mutable_controlfscc() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.controlfscc_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::ControlFSCC>(GetArena());
    _impl_.controlfscc_ = reinterpret_cast<::commonmodule::ControlFSCC*>(p);
  }
  return _impl_.controlfscc_;
}
inline ::commonmodule::ControlFSCC* PROTOBUF_NONNULL EssControlFSCC::mutable_controlfscc()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::commonmodule::ControlFSCC* _msg = _internal_mutable_controlfscc();
  // @@protoc_insertion_point(field_mutable:essmodule.EssControlFSCC.controlFSCC)
  return _msg;
}
inline void EssControlFSCC::set_allocated_controlfscc(::commonmodule::ControlFSCC* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.controlfscc_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.controlfscc_ = reinterpret_cast<::commonmodule::ControlFSCC*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.EssControlFSCC.controlFSCC)
}

// .essmodule.ESSControlScheduleFSCH essControlScheduleFSCH = 2;
inline bool EssControlFSCC::has_esscontrolschedulefsch() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.esscontrolschedulefsch_ != nullptr);
  return value;
}
inline void EssControlFSCC::clear_esscontrolschedulefsch() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.esscontrolschedulefsch_ != nullptr) _impl_.esscontrolschedulefsch_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::essmodule::ESSControlScheduleFSCH& EssControlFSCC::_internal_esscontrolschedulefsch() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::essmodule::ESSControlScheduleFSCH* p = _impl_.esscontrolschedulefsch_;
  return p != nullptr ? *p : reinterpret_cast<const ::essmodule::ESSControlScheduleFSCH&>(::essmodule::_ESSControlScheduleFSCH_default_instance_);
}
inline const ::essmodule::ESSControlScheduleFSCH& EssControlFSCC::esscontrolschedulefsch() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.EssControlFSCC.essControlScheduleFSCH)
  return _internal_esscontrolschedulefsch();
}
inline void EssControlFSCC::unsafe_arena_set_allocated_esscontrolschedulefsch(
    ::essmodule::ESSControlScheduleFSCH* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.esscontrolschedulefsch_);
  }
  _impl_.esscontrolschedulefsch_ = reinterpret_cast<::essmodule::ESSControlScheduleFSCH*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.EssControlFSCC.essControlScheduleFSCH)
}
inline ::essmodule::ESSControlScheduleFSCH* PROTOBUF_NULLABLE EssControlFSCC::release_esscontrolschedulefsch() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::essmodule::ESSControlScheduleFSCH* released = _impl_.esscontrolschedulefsch_;
  _impl_.esscontrolschedulefsch_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::essmodule::ESSControlScheduleFSCH* PROTOBUF_NULLABLE EssControlFSCC::unsafe_arena_release_esscontrolschedulefsch() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.EssControlFSCC.essControlScheduleFSCH)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::essmodule::ESSControlScheduleFSCH* temp = _impl_.esscontrolschedulefsch_;
  _impl_.esscontrolschedulefsch_ = nullptr;
  return temp;
}
inline ::essmodule::ESSControlScheduleFSCH* PROTOBUF_NONNULL EssControlFSCC::_internal_mutable_esscontrolschedulefsch() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.esscontrolschedulefsch_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::essmodule::ESSControlScheduleFSCH>(GetArena());
    _impl_.esscontrolschedulefsch_ = reinterpret_cast<::essmodule::ESSControlScheduleFSCH*>(p);
  }
  return _impl_.esscontrolschedulefsch_;
}
inline ::essmodule::ESSControlScheduleFSCH* PROTOBUF_NONNULL EssControlFSCC::mutable_esscontrolschedulefsch()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::essmodule::ESSControlScheduleFSCH* _msg = _internal_mutable_esscontrolschedulefsch();
  // @@protoc_insertion_point(field_mutable:essmodule.EssControlFSCC.essControlScheduleFSCH)
  return _msg;
}
inline void EssControlFSCC::set_allocated_esscontrolschedulefsch(::essmodule::ESSControlScheduleFSCH* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.esscontrolschedulefsch_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.esscontrolschedulefsch_ = reinterpret_cast<::essmodule::ESSControlScheduleFSCH*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.EssControlFSCC.essControlScheduleFSCH)
}

// -------------------------------------------------------------------

// ESSControl

// .commonmodule.ControlValue controlValue = 1 [(.uml.option_parent_message) = true];
inline bool ESSControl::has_controlvalue() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.controlvalue_ != nullptr);
  return value;
}
inline const ::commonmodule::ControlValue& ESSControl::_internal_controlvalue() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::ControlValue* p = _impl_.controlvalue_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::ControlValue&>(::commonmodule::_ControlValue_default_instance_);
}
inline const ::commonmodule::ControlValue& ESSControl::controlvalue() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSControl.controlValue)
  return _internal_controlvalue();
}
inline void ESSControl::unsafe_arena_set_allocated_controlvalue(
    ::commonmodule::ControlValue* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.controlvalue_);
  }
  _impl_.controlvalue_ = reinterpret_cast<::commonmodule::ControlValue*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSControl.controlValue)
}
inline ::commonmodule::ControlValue* PROTOBUF_NULLABLE ESSControl::release_controlvalue() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::commonmodule::ControlValue* released = _impl_.controlvalue_;
  _impl_.controlvalue_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::ControlValue* PROTOBUF_NULLABLE ESSControl::unsafe_arena_release_controlvalue() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSControl.controlValue)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::commonmodule::ControlValue* temp = _impl_.controlvalue_;
  _impl_.controlvalue_ = nullptr;
  return temp;
}
inline ::commonmodule::ControlValue* PROTOBUF_NONNULL ESSControl::_internal_mutable_controlvalue() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.controlvalue_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::ControlValue>(GetArena());
    _impl_.controlvalue_ = reinterpret_cast<::commonmodule::ControlValue*>(p);
  }
  return _impl_.controlvalue_;
}
inline ::commonmodule::ControlValue* PROTOBUF_NONNULL ESSControl::mutable_controlvalue()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::commonmodule::ControlValue* _msg = _internal_mutable_controlvalue();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSControl.controlValue)
  return _msg;
}
inline void ESSControl::set_allocated_controlvalue(::commonmodule::ControlValue* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.controlvalue_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.controlvalue_ = reinterpret_cast<::commonmodule::ControlValue*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSControl.controlValue)
}

// .commonmodule.CheckConditions check = 2;
inline bool ESSControl::has_check() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.check_ != nullptr);
  return value;
}
inline const ::commonmodule::CheckConditions& ESSControl::_internal_check() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::CheckConditions* p = _impl_.check_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::CheckConditions&>(::commonmodule::_CheckConditions_default_instance_);
}
inline const ::commonmodule::CheckConditions& ESSControl::check() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSControl.check)
  return _internal_check();
}
inline void ESSControl::unsafe_arena_set_allocated_check(
    ::commonmodule::CheckConditions* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.check_);
  }
  _impl_.check_ = reinterpret_cast<::commonmodule::CheckConditions*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSControl.check)
}
inline ::commonmodule::CheckConditions* PROTOBUF_NULLABLE ESSControl::release_check() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::commonmodule::CheckConditions* released = _impl_.check_;
  _impl_.check_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::CheckConditions* PROTOBUF_NULLABLE ESSControl::unsafe_arena_release_check() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSControl.check)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::commonmodule::CheckConditions* temp = _impl_.check_;
  _impl_.check_ = nullptr;
  return temp;
}
inline ::commonmodule::CheckConditions* PROTOBUF_NONNULL ESSControl::_internal_mutable_check() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.check_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::CheckConditions>(GetArena());
    _impl_.check_ = reinterpret_cast<::commonmodule::CheckConditions*>(p);
  }
  return _impl_.check_;
}
inline ::commonmodule::CheckConditions* PROTOBUF_NONNULL ESSControl::mutable_check()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::commonmodule::CheckConditions* _msg = _internal_mutable_check();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSControl.check)
  return _msg;
}
inline void ESSControl::set_allocated_check(::commonmodule::CheckConditions* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.check_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.check_ = reinterpret_cast<::commonmodule::CheckConditions*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSControl.check)
}

// .essmodule.EssControlFSCC essControlFSCC = 3;
inline bool ESSControl::has_esscontrolfscc() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.esscontrolfscc_ != nullptr);
  return value;
}
inline void ESSControl::clear_esscontrolfscc() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.esscontrolfscc_ != nullptr) _impl_.esscontrolfscc_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::essmodule::EssControlFSCC& ESSControl::_internal_esscontrolfscc() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::essmodule::EssControlFSCC* p = _impl_.esscontrolfscc_;
  return p != nullptr ? *p : reinterpret_cast<const ::essmodule::EssControlFSCC&>(::essmodule::_EssControlFSCC_default_instance_);
}
inline const ::essmodule::EssControlFSCC& ESSControl::esscontrolfscc() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSControl.essControlFSCC)
  return _internal_esscontrolfscc();
}
inline void ESSControl::unsafe_arena_set_allocated_esscontrolfscc(
    ::essmodule::EssControlFSCC* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.esscontrolfscc_);
  }
  _impl_.esscontrolfscc_ = reinterpret_cast<::essmodule::EssControlFSCC*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSControl.essControlFSCC)
}
inline ::essmodule::EssControlFSCC* PROTOBUF_NULLABLE ESSControl::release_esscontrolfscc() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::essmodule::EssControlFSCC* released = _impl_.esscontrolfscc_;
  _impl_.esscontrolfscc_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::essmodule::EssControlFSCC* PROTOBUF_NULLABLE ESSControl::unsafe_arena_release_esscontrolfscc() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSControl.essControlFSCC)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::essmodule::EssControlFSCC* temp = _impl_.esscontrolfscc_;
  _impl_.esscontrolfscc_ = nullptr;
  return temp;
}
inline ::essmodule::EssControlFSCC* PROTOBUF_NONNULL ESSControl::_internal_mutable_esscontrolfscc() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.esscontrolfscc_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::essmodule::EssControlFSCC>(GetArena());
    _impl_.esscontrolfscc_ = reinterpret_cast<::essmodule::EssControlFSCC*>(p);
  }
  return _impl_.esscontrolfscc_;
}
inline ::essmodule::EssControlFSCC* PROTOBUF_NONNULL ESSControl::mutable_esscontrolfscc()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::essmodule::EssControlFSCC* _msg = _internal_mutable_esscontrolfscc();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSControl.essControlFSCC)
  return _msg;
}
inline void ESSControl::set_allocated_esscontrolfscc(::essmodule::EssControlFSCC* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.esscontrolfscc_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.esscontrolfscc_ = reinterpret_cast<::essmodule::EssControlFSCC*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSControl.essControlFSCC)
}

// -------------------------------------------------------------------

// ESSControlProfile

// .commonmodule.ControlMessageInfo controlMessageInfo = 1 [(.uml.option_parent_message) = true];
inline bool ESSControlProfile::has_controlmessageinfo() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.controlmessageinfo_ != nullptr);
  return value;
}
inline const ::commonmodule::ControlMessageInfo& ESSControlProfile::_internal_controlmessageinfo() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::ControlMessageInfo* p = _impl_.controlmessageinfo_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::ControlMessageInfo&>(::commonmodule::_ControlMessageInfo_default_instance_);
}
inline const ::commonmodule::ControlMessageInfo& ESSControlProfile::controlmessageinfo() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSControlProfile.controlMessageInfo)
  return _internal_controlmessageinfo();
}
inline void ESSControlProfile::unsafe_arena_set_allocated_controlmessageinfo(
    ::commonmodule::ControlMessageInfo* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.controlmessageinfo_);
  }
  _impl_.controlmessageinfo_ = reinterpret_cast<::commonmodule::ControlMessageInfo*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSControlProfile.controlMessageInfo)
}
inline ::commonmodule::ControlMessageInfo* PROTOBUF_NULLABLE ESSControlProfile::release_controlmessageinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::commonmodule::ControlMessageInfo* released = _impl_.controlmessageinfo_;
  _impl_.controlmessageinfo_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::ControlMessageInfo* PROTOBUF_NULLABLE ESSControlProfile::unsafe_arena_release_controlmessageinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSControlProfile.controlMessageInfo)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::commonmodule::ControlMessageInfo* temp = _impl_.controlmessageinfo_;
  _impl_.controlmessageinfo_ = nullptr;
  return temp;
}
inline ::commonmodule::ControlMessageInfo* PROTOBUF_NONNULL ESSControlProfile::_internal_mutable_controlmessageinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.controlmessageinfo_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::ControlMessageInfo>(GetArena());
    _impl_.controlmessageinfo_ = reinterpret_cast<::commonmodule::ControlMessageInfo*>(p);
  }
  return _impl_.controlmessageinfo_;
}
inline ::commonmodule::ControlMessageInfo* PROTOBUF_NONNULL ESSControlProfile::mutable_controlmessageinfo()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::commonmodule::ControlMessageInfo* _msg = _internal_mutable_controlmessageinfo();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSControlProfile.controlMessageInfo)
  return _msg;
}
inline void ESSControlProfile::set_allocated_controlmessageinfo(::commonmodule::ControlMessageInfo* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.controlmessageinfo_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.controlmessageinfo_ = reinterpret_cast<::commonmodule::ControlMessageInfo*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSControlProfile.controlMessageInfo)
}

// .commonmodule.ESS ess = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
inline bool ESSControlProfile::has_ess() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.ess_ != nullptr);
  return value;
}
inline const ::commonmodule::ESS& ESSControlProfile::_internal_ess() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::ESS* p = _impl_.ess_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::ESS&>(::commonmodule::_ESS_default_instance_);
}
inline const ::commonmodule::ESS& ESSControlProfile::ess() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSControlProfile.ess)
  return _internal_ess();
}
inline void ESSControlProfile::unsafe_arena_set_allocated_ess(
    ::commonmodule::ESS* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.ess_);
  }
  _impl_.ess_ = reinterpret_cast<::commonmodule::ESS*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSControlProfile.ess)
}
inline ::commonmodule::ESS* PROTOBUF_NULLABLE ESSControlProfile::release_ess() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::commonmodule::ESS* released = _impl_.ess_;
  _impl_.ess_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::ESS* PROTOBUF_NULLABLE ESSControlProfile::unsafe_arena_release_ess() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSControlProfile.ess)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::commonmodule::ESS* temp = _impl_.ess_;
  _impl_.ess_ = nullptr;
  return temp;
}
inline ::commonmodule::ESS* PROTOBUF_NONNULL ESSControlProfile::_internal_mutable_ess() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.ess_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::ESS>(GetArena());
    _impl_.ess_ = reinterpret_cast<::commonmodule::ESS*>(p);
  }
  return _impl_.ess_;
}
inline ::commonmodule::ESS* PROTOBUF_NONNULL ESSControlProfile::mutable_ess()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::commonmodule::ESS* _msg = _internal_mutable_ess();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSControlProfile.ess)
  return _msg;
}
inline void ESSControlProfile::set_allocated_ess(::commonmodule::ESS* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.ess_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.ess_ = reinterpret_cast<::commonmodule::ESS*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSControlProfile.ess)
}

// .essmodule.ESSControl essControl = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
inline bool ESSControlProfile::has_esscontrol() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.esscontrol_ != nullptr);
  return value;
}
inline void ESSControlProfile::clear_esscontrol() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.esscontrol_ != nullptr) _impl_.esscontrol_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::essmodule::ESSControl& ESSControlProfile::_internal_esscontrol() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::essmodule::ESSControl* p = _impl_.esscontrol_;
  return p != nullptr ? *p : reinterpret_cast<const ::essmodule::ESSControl&>(::essmodule::_ESSControl_default_instance_);
}
inline const ::essmodule::ESSControl& ESSControlProfile::esscontrol() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSControlProfile.essControl)
  return _internal_esscontrol();
}
inline void ESSControlProfile::unsafe_arena_set_allocated_esscontrol(
    ::essmodule::ESSControl* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.esscontrol_);
  }
  _impl_.esscontrol_ = reinterpret_cast<::essmodule::ESSControl*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSControlProfile.essControl)
}
inline ::essmodule::ESSControl* PROTOBUF_NULLABLE ESSControlProfile::release_esscontrol() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::essmodule::ESSControl* released = _impl_.esscontrol_;
  _impl_.esscontrol_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::essmodule::ESSControl* PROTOBUF_NULLABLE ESSControlProfile::unsafe_arena_release_esscontrol() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSControlProfile.essControl)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::essmodule::ESSControl* temp = _impl_.esscontrol_;
  _impl_.esscontrol_ = nullptr;
  return temp;
}
inline ::essmodule::ESSControl* PROTOBUF_NONNULL ESSControlProfile::_internal_mutable_esscontrol() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.esscontrol_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::essmodule::ESSControl>(GetArena());
    _impl_.esscontrol_ = reinterpret_cast<::essmodule::ESSControl*>(p);
  }
  return _impl_.esscontrol_;
}
inline ::essmodule::ESSControl* PROTOBUF_NONNULL ESSControlProfile::mutable_esscontrol()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::essmodule::ESSControl* _msg = _internal_mutable_esscontrol();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSControlProfile.essControl)
  return _msg;
}
inline void ESSControlProfile::set_allocated_esscontrol(::essmodule::ESSControl* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.esscontrol_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.esscontrol_ = reinterpret_cast<::essmodule::ESSControl*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSControlProfile.essControl)
}

// -------------------------------------------------------------------

// ESSDiscreteControlDBAT

// .commonmodule.LogicalNodeForControl logicalNodeForControl = 1 [(.uml.option_parent_message) = true];
inline bool ESSDiscreteControlDBAT::has_logicalnodeforcontrol() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.logicalnodeforcontrol_ != nullptr);
  return value;
}
inline const ::commonmodule::LogicalNodeForControl& ESSDiscreteControlDBAT::_internal_logicalnodeforcontrol() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::LogicalNodeForControl* p = _impl_.logicalnodeforcontrol_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::LogicalNodeForControl&>(::commonmodule::_LogicalNodeForControl_default_instance_);
}
inline const ::commonmodule::LogicalNodeForControl& ESSDiscreteControlDBAT::logicalnodeforcontrol() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSDiscreteControlDBAT.logicalNodeForControl)
  return _internal_logicalnodeforcontrol();
}
inline void ESSDiscreteControlDBAT::unsafe_arena_set_allocated_logicalnodeforcontrol(
    ::commonmodule::LogicalNodeForControl* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.logicalnodeforcontrol_);
  }
  _impl_.logicalnodeforcontrol_ = reinterpret_cast<::commonmodule::LogicalNodeForControl*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSDiscreteControlDBAT.logicalNodeForControl)
}
inline ::commonmodule::LogicalNodeForControl* PROTOBUF_NULLABLE ESSDiscreteControlDBAT::release_logicalnodeforcontrol() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::commonmodule::LogicalNodeForControl* released = _impl_.logicalnodeforcontrol_;
  _impl_.logicalnodeforcontrol_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::LogicalNodeForControl* PROTOBUF_NULLABLE ESSDiscreteControlDBAT::unsafe_arena_release_logicalnodeforcontrol() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSDiscreteControlDBAT.logicalNodeForControl)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::commonmodule::LogicalNodeForControl* temp = _impl_.logicalnodeforcontrol_;
  _impl_.logicalnodeforcontrol_ = nullptr;
  return temp;
}
inline ::commonmodule::LogicalNodeForControl* PROTOBUF_NONNULL ESSDiscreteControlDBAT::_internal_mutable_logicalnodeforcontrol() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.logicalnodeforcontrol_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::LogicalNodeForControl>(GetArena());
    _impl_.logicalnodeforcontrol_ = reinterpret_cast<::commonmodule::LogicalNodeForControl*>(p);
  }
  return _impl_.logicalnodeforcontrol_;
}
inline ::commonmodule::LogicalNodeForControl* PROTOBUF_NONNULL ESSDiscreteControlDBAT::mutable_logicalnodeforcontrol()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::commonmodule::LogicalNodeForControl* _msg = _internal_mutable_logicalnodeforcontrol();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSDiscreteControlDBAT.logicalNodeForControl)
  return _msg;
}
inline void ESSDiscreteControlDBAT::set_allocated_logicalnodeforcontrol(::commonmodule::LogicalNodeForControl* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.logicalnodeforcontrol_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.logicalnodeforcontrol_ = reinterpret_cast<::commonmodule::LogicalNodeForControl*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSDiscreteControlDBAT.logicalNodeForControl)
}

// .essmodule.ESSPoint control = 2;
inline bool ESSDiscreteControlDBAT::has_control() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.control_ != nullptr);
  return value;
}
inline void ESSDiscreteControlDBAT::clear_control() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.control_ != nullptr) _impl_.control_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::essmodule::ESSPoint& ESSDiscreteControlDBAT::_internal_control() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::essmodule::ESSPoint* p = _impl_.control_;
  return p != nullptr ? *p : reinterpret_cast<const ::essmodule::ESSPoint&>(::essmodule::_ESSPoint_default_instance_);
}
inline const ::essmodule::ESSPoint& ESSDiscreteControlDBAT::control() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSDiscreteControlDBAT.control)
  return _internal_control();
}
inline void ESSDiscreteControlDBAT::unsafe_arena_set_allocated_control(
    ::essmodule::ESSPoint* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.control_);
  }
  _impl_.control_ = reinterpret_cast<::essmodule::ESSPoint*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSDiscreteControlDBAT.control)
}
inline ::essmodule::ESSPoint* PROTOBUF_NULLABLE ESSDiscreteControlDBAT::release_control() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::essmodule::ESSPoint* released = _impl_.control_;
  _impl_.control_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::essmodule::ESSPoint* PROTOBUF_NULLABLE ESSDiscreteControlDBAT::unsafe_arena_release_control() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSDiscreteControlDBAT.control)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::essmodule::ESSPoint* temp = _impl_.control_;
  _impl_.control_ = nullptr;
  return temp;
}
inline ::essmodule::ESSPoint* PROTOBUF_NONNULL ESSDiscreteControlDBAT::_internal_mutable_control() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.control_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::essmodule::ESSPoint>(GetArena());
    _impl_.control_ = reinterpret_cast<::essmodule::ESSPoint*>(p);
  }
  return _impl_.control_;
}
inline ::essmodule::ESSPoint* PROTOBUF_NONNULL ESSDiscreteControlDBAT::mutable_control()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::essmodule::ESSPoint* _msg = _internal_mutable_control();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSDiscreteControlDBAT.control)
  return _msg;
}
inline void ESSDiscreteControlDBAT::set_allocated_control(::essmodule::ESSPoint* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.control_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.control_ = reinterpret_cast<::essmodule::ESSPoint*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSDiscreteControlDBAT.control)
}

// -------------------------------------------------------------------

// ESSDiscreteControl

// .commonmodule.ControlValue controlValue = 1 [(.uml.option_parent_message) = true];
inline bool ESSDiscreteControl::has_controlvalue() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.controlvalue_ != nullptr);
  return value;
}
inline const ::commonmodule::ControlValue& ESSDiscreteControl::_internal_controlvalue() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::ControlValue* p = _impl_.controlvalue_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::ControlValue&>(::commonmodule::_ControlValue_default_instance_);
}
inline const ::commonmodule::ControlValue& ESSDiscreteControl::controlvalue() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSDiscreteControl.controlValue)
  return _internal_controlvalue();
}
inline void ESSDiscreteControl::unsafe_arena_set_allocated_controlvalue(
    ::commonmodule::ControlValue* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.controlvalue_);
  }
  _impl_.controlvalue_ = reinterpret_cast<::commonmodule::ControlValue*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSDiscreteControl.controlValue)
}
inline ::commonmodule::ControlValue* PROTOBUF_NULLABLE ESSDiscreteControl::release_controlvalue() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::commonmodule::ControlValue* released = _impl_.controlvalue_;
  _impl_.controlvalue_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::ControlValue* PROTOBUF_NULLABLE ESSDiscreteControl::unsafe_arena_release_controlvalue() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSDiscreteControl.controlValue)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::commonmodule::ControlValue* temp = _impl_.controlvalue_;
  _impl_.controlvalue_ = nullptr;
  return temp;
}
inline ::commonmodule::ControlValue* PROTOBUF_NONNULL ESSDiscreteControl::_internal_mutable_controlvalue() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.controlvalue_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::ControlValue>(GetArena());
    _impl_.controlvalue_ = reinterpret_cast<::commonmodule::ControlValue*>(p);
  }
  return _impl_.controlvalue_;
}
inline ::commonmodule::ControlValue* PROTOBUF_NONNULL ESSDiscreteControl::mutable_controlvalue()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::commonmodule::ControlValue* _msg = _internal_mutable_controlvalue();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSDiscreteControl.controlValue)
  return _msg;
}
inline void ESSDiscreteControl::set_allocated_controlvalue(::commonmodule::ControlValue* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.controlvalue_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.controlvalue_ = reinterpret_cast<::commonmodule::ControlValue*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSDiscreteControl.controlValue)
}

// .commonmodule.CheckConditions check = 2;
inline bool ESSDiscreteControl::has_check() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.check_ != nullptr);
  return value;
}
inline const ::commonmodule::CheckConditions& ESSDiscreteControl::_internal_check() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::CheckConditions* p = _impl_.check_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::CheckConditions&>(::commonmodule::_CheckConditions_default_instance_);
}
inline const ::commonmodule::CheckConditions& ESSDiscreteControl::check() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSDiscreteControl.check)
  return _internal_check();
}
inline void ESSDiscreteControl::unsafe_arena_set_allocated_check(
    ::commonmodule::CheckConditions* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.check_);
  }
  _impl_.check_ = reinterpret_cast<::commonmodule::CheckConditions*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSDiscreteControl.check)
}
inline ::commonmodule::CheckConditions* PROTOBUF_NULLABLE ESSDiscreteControl::release_check() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::commonmodule::CheckConditions* released = _impl_.check_;
  _impl_.check_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::CheckConditions* PROTOBUF_NULLABLE ESSDiscreteControl::unsafe_arena_release_check() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSDiscreteControl.check)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::commonmodule::CheckConditions* temp = _impl_.check_;
  _impl_.check_ = nullptr;
  return temp;
}
inline ::commonmodule::CheckConditions* PROTOBUF_NONNULL ESSDiscreteControl::_internal_mutable_check() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.check_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::CheckConditions>(GetArena());
    _impl_.check_ = reinterpret_cast<::commonmodule::CheckConditions*>(p);
  }
  return _impl_.check_;
}
inline ::commonmodule::CheckConditions* PROTOBUF_NONNULL ESSDiscreteControl::mutable_check()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::commonmodule::CheckConditions* _msg = _internal_mutable_check();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSDiscreteControl.check)
  return _msg;
}
inline void ESSDiscreteControl::set_allocated_check(::commonmodule::CheckConditions* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.check_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.check_ = reinterpret_cast<::commonmodule::CheckConditions*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSDiscreteControl.check)
}

// .essmodule.ESSDiscreteControlDBAT essDiscreteControlDBAT = 3;
inline bool ESSDiscreteControl::has_essdiscretecontroldbat() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.essdiscretecontroldbat_ != nullptr);
  return value;
}
inline void ESSDiscreteControl::clear_essdiscretecontroldbat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.essdiscretecontroldbat_ != nullptr) _impl_.essdiscretecontroldbat_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::essmodule::ESSDiscreteControlDBAT& ESSDiscreteControl::_internal_essdiscretecontroldbat() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::essmodule::ESSDiscreteControlDBAT* p = _impl_.essdiscretecontroldbat_;
  return p != nullptr ? *p : reinterpret_cast<const ::essmodule::ESSDiscreteControlDBAT&>(::essmodule::_ESSDiscreteControlDBAT_default_instance_);
}
inline const ::essmodule::ESSDiscreteControlDBAT& ESSDiscreteControl::essdiscretecontroldbat() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSDiscreteControl.essDiscreteControlDBAT)
  return _internal_essdiscretecontroldbat();
}
inline void ESSDiscreteControl::unsafe_arena_set_allocated_essdiscretecontroldbat(
    ::essmodule::ESSDiscreteControlDBAT* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.essdiscretecontroldbat_);
  }
  _impl_.essdiscretecontroldbat_ = reinterpret_cast<::essmodule::ESSDiscreteControlDBAT*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSDiscreteControl.essDiscreteControlDBAT)
}
inline ::essmodule::ESSDiscreteControlDBAT* PROTOBUF_NULLABLE ESSDiscreteControl::release_essdiscretecontroldbat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::essmodule::ESSDiscreteControlDBAT* released = _impl_.essdiscretecontroldbat_;
  _impl_.essdiscretecontroldbat_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::essmodule::ESSDiscreteControlDBAT* PROTOBUF_NULLABLE ESSDiscreteControl::unsafe_arena_release_essdiscretecontroldbat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSDiscreteControl.essDiscreteControlDBAT)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::essmodule::ESSDiscreteControlDBAT* temp = _impl_.essdiscretecontroldbat_;
  _impl_.essdiscretecontroldbat_ = nullptr;
  return temp;
}
inline ::essmodule::ESSDiscreteControlDBAT* PROTOBUF_NONNULL ESSDiscreteControl::_internal_mutable_essdiscretecontroldbat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.essdiscretecontroldbat_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::essmodule::ESSDiscreteControlDBAT>(GetArena());
    _impl_.essdiscretecontroldbat_ = reinterpret_cast<::essmodule::ESSDiscreteControlDBAT*>(p);
  }
  return _impl_.essdiscretecontroldbat_;
}
inline ::essmodule::ESSDiscreteControlDBAT* PROTOBUF_NONNULL ESSDiscreteControl::mutable_essdiscretecontroldbat()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::essmodule::ESSDiscreteControlDBAT* _msg = _internal_mutable_essdiscretecontroldbat();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSDiscreteControl.essDiscreteControlDBAT)
  return _msg;
}
inline void ESSDiscreteControl::set_allocated_essdiscretecontroldbat(::essmodule::ESSDiscreteControlDBAT* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.essdiscretecontroldbat_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.essdiscretecontroldbat_ = reinterpret_cast<::essmodule::ESSDiscreteControlDBAT*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSDiscreteControl.essDiscreteControlDBAT)
}

// -------------------------------------------------------------------

// ESSDiscreteControlProfile

// .commonmodule.ControlMessageInfo controlMessageInfo = 1 [(.uml.option_parent_message) = true];
inline bool ESSDiscreteControlProfile::has_controlmessageinfo() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.controlmessageinfo_ != nullptr);
  return value;
}
inline const ::commonmodule::ControlMessageInfo& ESSDiscreteControlProfile::_internal_controlmessageinfo() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::ControlMessageInfo* p = _impl_.controlmessageinfo_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::ControlMessageInfo&>(::commonmodule::_ControlMessageInfo_default_instance_);
}
inline const ::commonmodule::ControlMessageInfo& ESSDiscreteControlProfile::controlmessageinfo() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSDiscreteControlProfile.controlMessageInfo)
  return _internal_controlmessageinfo();
}
inline void ESSDiscreteControlProfile::unsafe_arena_set_allocated_controlmessageinfo(
    ::commonmodule::ControlMessageInfo* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.controlmessageinfo_);
  }
  _impl_.controlmessageinfo_ = reinterpret_cast<::commonmodule::ControlMessageInfo*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSDiscreteControlProfile.controlMessageInfo)
}
inline ::commonmodule::ControlMessageInfo* PROTOBUF_NULLABLE ESSDiscreteControlProfile::release_controlmessageinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::commonmodule::ControlMessageInfo* released = _impl_.controlmessageinfo_;
  _impl_.controlmessageinfo_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::ControlMessageInfo* PROTOBUF_NULLABLE ESSDiscreteControlProfile::unsafe_arena_release_controlmessageinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSDiscreteControlProfile.controlMessageInfo)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::commonmodule::ControlMessageInfo* temp = _impl_.controlmessageinfo_;
  _impl_.controlmessageinfo_ = nullptr;
  return temp;
}
inline ::commonmodule::ControlMessageInfo* PROTOBUF_NONNULL ESSDiscreteControlProfile::_internal_mutable_controlmessageinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.controlmessageinfo_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::ControlMessageInfo>(GetArena());
    _impl_.controlmessageinfo_ = reinterpret_cast<::commonmodule::ControlMessageInfo*>(p);
  }
  return _impl_.controlmessageinfo_;
}
inline ::commonmodule::ControlMessageInfo* PROTOBUF_NONNULL ESSDiscreteControlProfile::mutable_controlmessageinfo()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::commonmodule::ControlMessageInfo* _msg = _internal_mutable_controlmessageinfo();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSDiscreteControlProfile.controlMessageInfo)
  return _msg;
}
inline void ESSDiscreteControlProfile::set_allocated_controlmessageinfo(::commonmodule::ControlMessageInfo* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.controlmessageinfo_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.controlmessageinfo_ = reinterpret_cast<::commonmodule::ControlMessageInfo*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSDiscreteControlProfile.controlMessageInfo)
}

// .commonmodule.ESS ess = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
inline bool ESSDiscreteControlProfile::has_ess() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.ess_ != nullptr);
  return value;
}
inline const ::commonmodule::ESS& ESSDiscreteControlProfile::_internal_ess() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::ESS* p = _impl_.ess_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::ESS&>(::commonmodule::_ESS_default_instance_);
}
inline const ::commonmodule::ESS& ESSDiscreteControlProfile::ess() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSDiscreteControlProfile.ess)
  return _internal_ess();
}
inline void ESSDiscreteControlProfile::unsafe_arena_set_allocated_ess(
    ::commonmodule::ESS* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.ess_);
  }
  _impl_.ess_ = reinterpret_cast<::commonmodule::ESS*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSDiscreteControlProfile.ess)
}
inline ::commonmodule::ESS* PROTOBUF_NULLABLE ESSDiscreteControlProfile::release_ess() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::commonmodule::ESS* released = _impl_.ess_;
  _impl_.ess_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::ESS* PROTOBUF_NULLABLE ESSDiscreteControlProfile::unsafe_arena_release_ess() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSDiscreteControlProfile.ess)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::commonmodule::ESS* temp = _impl_.ess_;
  _impl_.ess_ = nullptr;
  return temp;
}
inline ::commonmodule::ESS* PROTOBUF_NONNULL ESSDiscreteControlProfile::_internal_mutable_ess() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.ess_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::ESS>(GetArena());
    _impl_.ess_ = reinterpret_cast<::commonmodule::ESS*>(p);
  }
  return _impl_.ess_;
}
inline ::commonmodule::ESS* PROTOBUF_NONNULL ESSDiscreteControlProfile::mutable_ess()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::commonmodule::ESS* _msg = _internal_mutable_ess();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSDiscreteControlProfile.ess)
  return _msg;
}
inline void ESSDiscreteControlProfile::set_allocated_ess(::commonmodule::ESS* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.ess_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.ess_ = reinterpret_cast<::commonmodule::ESS*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSDiscreteControlProfile.ess)
}

// .essmodule.ESSDiscreteControl essDiscreteControl = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
inline bool ESSDiscreteControlProfile::has_essdiscretecontrol() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.essdiscretecontrol_ != nullptr);
  return value;
}
inline void ESSDiscreteControlProfile::clear_essdiscretecontrol() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.essdiscretecontrol_ != nullptr) _impl_.essdiscretecontrol_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::essmodule::ESSDiscreteControl& ESSDiscreteControlProfile::_internal_essdiscretecontrol() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::essmodule::ESSDiscreteControl* p = _impl_.essdiscretecontrol_;
  return p != nullptr ? *p : reinterpret_cast<const ::essmodule::ESSDiscreteControl&>(::essmodule::_ESSDiscreteControl_default_instance_);
}
inline const ::essmodule::ESSDiscreteControl& ESSDiscreteControlProfile::essdiscretecontrol() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSDiscreteControlProfile.essDiscreteControl)
  return _internal_essdiscretecontrol();
}
inline void ESSDiscreteControlProfile::unsafe_arena_set_allocated_essdiscretecontrol(
    ::essmodule::ESSDiscreteControl* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.essdiscretecontrol_);
  }
  _impl_.essdiscretecontrol_ = reinterpret_cast<::essmodule::ESSDiscreteControl*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSDiscreteControlProfile.essDiscreteControl)
}
inline ::essmodule::ESSDiscreteControl* PROTOBUF_NULLABLE ESSDiscreteControlProfile::release_essdiscretecontrol() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::essmodule::ESSDiscreteControl* released = _impl_.essdiscretecontrol_;
  _impl_.essdiscretecontrol_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::essmodule::ESSDiscreteControl* PROTOBUF_NULLABLE ESSDiscreteControlProfile::unsafe_arena_release_essdiscretecontrol() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSDiscreteControlProfile.essDiscreteControl)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::essmodule::ESSDiscreteControl* temp = _impl_.essdiscretecontrol_;
  _impl_.essdiscretecontrol_ = nullptr;
  return temp;
}
inline ::essmodule::ESSDiscreteControl* PROTOBUF_NONNULL ESSDiscreteControlProfile::_internal_mutable_essdiscretecontrol() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.essdiscretecontrol_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::essmodule::ESSDiscreteControl>(GetArena());
    _impl_.essdiscretecontrol_ = reinterpret_cast<::essmodule::ESSDiscreteControl*>(p);
  }
  return _impl_.essdiscretecontrol_;
}
inline ::essmodule::ESSDiscreteControl* PROTOBUF_NONNULL ESSDiscreteControlProfile::mutable_essdiscretecontrol()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::essmodule::ESSDiscreteControl* _msg = _internal_mutable_essdiscretecontrol();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSDiscreteControlProfile.essDiscreteControl)
  return _msg;
}
inline void ESSDiscreteControlProfile::set_allocated_essdiscretecontrol(::essmodule::ESSDiscreteControl* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.essdiscretecontrol_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.essdiscretecontrol_ = reinterpret_cast<::essmodule::ESSDiscreteControl*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSDiscreteControlProfile.essDiscreteControl)
}

// -------------------------------------------------------------------

// EssEventZBAT

// .commonmodule.LogicalNodeForEventAndStatus logicalNodeForEventAndStatus = 1 [(.uml.option_parent_message) = true];
inline bool EssEventZBAT::has_logicalnodeforeventandstatus() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.logicalnodeforeventandstatus_ != nullptr);
  return value;
}
inline const ::commonmodule::LogicalNodeForEventAndStatus& EssEventZBAT::_internal_logicalnodeforeventandstatus() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::LogicalNodeForEventAndStatus* p = _impl_.logicalnodeforeventandstatus_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::LogicalNodeForEventAndStatus&>(::commonmodule::_LogicalNodeForEventAndStatus_default_instance_);
}
inline const ::commonmodule::LogicalNodeForEventAndStatus& EssEventZBAT::logicalnodeforeventandstatus() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.EssEventZBAT.logicalNodeForEventAndStatus)
  return _internal_logicalnodeforeventandstatus();
}
inline void EssEventZBAT::unsafe_arena_set_allocated_logicalnodeforeventandstatus(
    ::commonmodule::LogicalNodeForEventAndStatus* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.logicalnodeforeventandstatus_);
  }
  _impl_.logicalnodeforeventandstatus_ = reinterpret_cast<::commonmodule::LogicalNodeForEventAndStatus*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.EssEventZBAT.logicalNodeForEventAndStatus)
}
inline ::commonmodule::LogicalNodeForEventAndStatus* PROTOBUF_NULLABLE EssEventZBAT::release_logicalnodeforeventandstatus() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::commonmodule::LogicalNodeForEventAndStatus* released = _impl_.logicalnodeforeventandstatus_;
  _impl_.logicalnodeforeventandstatus_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::LogicalNodeForEventAndStatus* PROTOBUF_NULLABLE EssEventZBAT::unsafe_arena_release_logicalnodeforeventandstatus() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.EssEventZBAT.logicalNodeForEventAndStatus)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::commonmodule::LogicalNodeForEventAndStatus* temp = _impl_.logicalnodeforeventandstatus_;
  _impl_.logicalnodeforeventandstatus_ = nullptr;
  return temp;
}
inline ::commonmodule::LogicalNodeForEventAndStatus* PROTOBUF_NONNULL EssEventZBAT::_internal_mutable_logicalnodeforeventandstatus() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.logicalnodeforeventandstatus_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::LogicalNodeForEventAndStatus>(GetArena());
    _impl_.logicalnodeforeventandstatus_ = reinterpret_cast<::commonmodule::LogicalNodeForEventAndStatus*>(p);
  }
  return _impl_.logicalnodeforeventandstatus_;
}
inline ::commonmodule::LogicalNodeForEventAndStatus* PROTOBUF_NONNULL EssEventZBAT::mutable_logicalnodeforeventandstatus()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::commonmodule::LogicalNodeForEventAndStatus* _msg = _internal_mutable_logicalnodeforeventandstatus();
  // @@protoc_insertion_point(field_mutable:essmodule.EssEventZBAT.logicalNodeForEventAndStatus)
  return _msg;
}
inline void EssEventZBAT::set_allocated_logicalnodeforeventandstatus(::commonmodule::LogicalNodeForEventAndStatus* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.logicalnodeforeventandstatus_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.logicalnodeforeventandstatus_ = reinterpret_cast<::commonmodule::LogicalNodeForEventAndStatus*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.EssEventZBAT.logicalNodeForEventAndStatus)
}

// .commonmodule.StatusSPS BatHi = 2;
inline bool EssEventZBAT::has_bathi() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.bathi_ != nullptr);
  return value;
}
inline const ::commonmodule::StatusSPS& EssEventZBAT::_internal_bathi() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::StatusSPS* p = _impl_.bathi_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::StatusSPS&>(::commonmodule::_StatusSPS_default_instance_);
}
inline const ::commonmodule::StatusSPS& EssEventZBAT::bathi() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.EssEventZBAT.BatHi)
  return _internal_bathi();
}
inline void EssEventZBAT::unsafe_arena_set_allocated_bathi(
    ::commonmodule::StatusSPS* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.bathi_);
  }
  _impl_.bathi_ = reinterpret_cast<::commonmodule::StatusSPS*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.EssEventZBAT.BatHi)
}
inline ::commonmodule::StatusSPS* PROTOBUF_NULLABLE EssEventZBAT::release_bathi() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::commonmodule::StatusSPS* released = _impl_.bathi_;
  _impl_.bathi_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::StatusSPS* PROTOBUF_NULLABLE EssEventZBAT::unsafe_arena_release_bathi() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.EssEventZBAT.BatHi)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::commonmodule::StatusSPS* temp = _impl_.bathi_;
  _impl_.bathi_ = nullptr;
  return temp;
}
inline ::commonmodule::StatusSPS* PROTOBUF_NONNULL EssEventZBAT::_internal_mutable_bathi() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.bathi_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::StatusSPS>(GetArena());
    _impl_.bathi_ = reinterpret_cast<::commonmodule::StatusSPS*>(p);
  }
  return _impl_.bathi_;
}
inline ::commonmodule::StatusSPS* PROTOBUF_NONNULL EssEventZBAT::mutable_bathi()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::commonmodule::StatusSPS* _msg = _internal_mutable_bathi();
  // @@protoc_insertion_point(field_mutable:essmodule.EssEventZBAT.BatHi)
  return _msg;
}
inline void EssEventZBAT::set_allocated_bathi(::commonmodule::StatusSPS* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.bathi_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.bathi_ = reinterpret_cast<::commonmodule::StatusSPS*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.EssEventZBAT.BatHi)
}

// .commonmodule.StatusSPS BatLo = 3;
inline bool EssEventZBAT::has_batlo() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.batlo_ != nullptr);
  return value;
}
inline const ::commonmodule::StatusSPS& EssEventZBAT::_internal_batlo() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::StatusSPS* p = _impl_.batlo_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::StatusSPS&>(::commonmodule::_StatusSPS_default_instance_);
}
inline const ::commonmodule::StatusSPS& EssEventZBAT::batlo() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.EssEventZBAT.BatLo)
  return _internal_batlo();
}
inline void EssEventZBAT::unsafe_arena_set_allocated_batlo(
    ::commonmodule::StatusSPS* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.batlo_);
  }
  _impl_.batlo_ = reinterpret_cast<::commonmodule::StatusSPS*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.EssEventZBAT.BatLo)
}
inline ::commonmodule::StatusSPS* PROTOBUF_NULLABLE EssEventZBAT::release_batlo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::commonmodule::StatusSPS* released = _impl_.batlo_;
  _impl_.batlo_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::StatusSPS* PROTOBUF_NULLABLE EssEventZBAT::unsafe_arena_release_batlo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.EssEventZBAT.BatLo)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::commonmodule::StatusSPS* temp = _impl_.batlo_;
  _impl_.batlo_ = nullptr;
  return temp;
}
inline ::commonmodule::StatusSPS* PROTOBUF_NONNULL EssEventZBAT::_internal_mutable_batlo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.batlo_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::StatusSPS>(GetArena());
    _impl_.batlo_ = reinterpret_cast<::commonmodule::StatusSPS*>(p);
  }
  return _impl_.batlo_;
}
inline ::commonmodule::StatusSPS* PROTOBUF_NONNULL EssEventZBAT::mutable_batlo()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::commonmodule::StatusSPS* _msg = _internal_mutable_batlo();
  // @@protoc_insertion_point(field_mutable:essmodule.EssEventZBAT.BatLo)
  return _msg;
}
inline void EssEventZBAT::set_allocated_batlo(::commonmodule::StatusSPS* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.batlo_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.batlo_ = reinterpret_cast<::commonmodule::StatusSPS*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.EssEventZBAT.BatLo)
}

// .commonmodule.StatusSPS BatSt = 4;
inline bool EssEventZBAT::has_batst() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.batst_ != nullptr);
  return value;
}
inline const ::commonmodule::StatusSPS& EssEventZBAT::_internal_batst() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::StatusSPS* p = _impl_.batst_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::StatusSPS&>(::commonmodule::_StatusSPS_default_instance_);
}
inline const ::commonmodule::StatusSPS& EssEventZBAT::batst() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.EssEventZBAT.BatSt)
  return _internal_batst();
}
inline void EssEventZBAT::unsafe_arena_set_allocated_batst(
    ::commonmodule::StatusSPS* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.batst_);
  }
  _impl_.batst_ = reinterpret_cast<::commonmodule::StatusSPS*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.EssEventZBAT.BatSt)
}
inline ::commonmodule::StatusSPS* PROTOBUF_NULLABLE EssEventZBAT::release_batst() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::commonmodule::StatusSPS* released = _impl_.batst_;
  _impl_.batst_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::StatusSPS* PROTOBUF_NULLABLE EssEventZBAT::unsafe_arena_release_batst() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.EssEventZBAT.BatSt)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::commonmodule::StatusSPS* temp = _impl_.batst_;
  _impl_.batst_ = nullptr;
  return temp;
}
inline ::commonmodule::StatusSPS* PROTOBUF_NONNULL EssEventZBAT::_internal_mutable_batst() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.batst_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::StatusSPS>(GetArena());
    _impl_.batst_ = reinterpret_cast<::commonmodule::StatusSPS*>(p);
  }
  return _impl_.batst_;
}
inline ::commonmodule::StatusSPS* PROTOBUF_NONNULL EssEventZBAT::mutable_batst()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::commonmodule::StatusSPS* _msg = _internal_mutable_batst();
  // @@protoc_insertion_point(field_mutable:essmodule.EssEventZBAT.BatSt)
  return _msg;
}
inline void EssEventZBAT::set_allocated_batst(::commonmodule::StatusSPS* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.batst_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.batst_ = reinterpret_cast<::commonmodule::StatusSPS*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.EssEventZBAT.BatSt)
}

// .commonmodule.MV Soc = 5;
inline bool EssEventZBAT::has_soc() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.soc_ != nullptr);
  return value;
}
inline const ::commonmodule::MV& EssEventZBAT::_internal_soc() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::MV* p = _impl_.soc_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::MV&>(::commonmodule::_MV_default_instance_);
}
inline const ::commonmodule::MV& EssEventZBAT::soc() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.EssEventZBAT.Soc)
  return _internal_soc();
}
inline void EssEventZBAT::unsafe_arena_set_allocated_soc(
    ::commonmodule::MV* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.soc_);
  }
  _impl_.soc_ = reinterpret_cast<::commonmodule::MV*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.EssEventZBAT.Soc)
}
inline ::commonmodule::MV* PROTOBUF_NULLABLE EssEventZBAT::release_soc() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::commonmodule::MV* released = _impl_.soc_;
  _impl_.soc_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::MV* PROTOBUF_NULLABLE EssEventZBAT::unsafe_arena_release_soc() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.EssEventZBAT.Soc)

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::commonmodule::MV* temp = _impl_.soc_;
  _impl_.soc_ = nullptr;
  return temp;
}
inline ::commonmodule::MV* PROTOBUF_NONNULL EssEventZBAT::_internal_mutable_soc() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.soc_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::MV>(GetArena());
    _impl_.soc_ = reinterpret_cast<::commonmodule::MV*>(p);
  }
  return _impl_.soc_;
}
inline ::commonmodule::MV* PROTOBUF_NONNULL EssEventZBAT::mutable_soc()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000010u;
  ::commonmodule::MV* _msg = _internal_mutable_soc();
  // @@protoc_insertion_point(field_mutable:essmodule.EssEventZBAT.Soc)
  return _msg;
}
inline void EssEventZBAT::set_allocated_soc(::commonmodule::MV* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.soc_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }

  _impl_.soc_ = reinterpret_cast<::commonmodule::MV*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.EssEventZBAT.Soc)
}

// .commonmodule.StatusSPS Stdby = 6;
inline bool EssEventZBAT::has_stdby() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.stdby_ != nullptr);
  return value;
}
inline const ::commonmodule::StatusSPS& EssEventZBAT::_internal_stdby() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::StatusSPS* p = _impl_.stdby_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::StatusSPS&>(::commonmodule::_StatusSPS_default_instance_);
}
inline const ::commonmodule::StatusSPS& EssEventZBAT::stdby() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.EssEventZBAT.Stdby)
  return _internal_stdby();
}
inline void EssEventZBAT::unsafe_arena_set_allocated_stdby(
    ::commonmodule::StatusSPS* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.stdby_);
  }
  _impl_.stdby_ = reinterpret_cast<::commonmodule::StatusSPS*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.EssEventZBAT.Stdby)
}
inline ::commonmodule::StatusSPS* PROTOBUF_NULLABLE EssEventZBAT::release_stdby() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::commonmodule::StatusSPS* released = _impl_.stdby_;
  _impl_.stdby_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::StatusSPS* PROTOBUF_NULLABLE EssEventZBAT::unsafe_arena_release_stdby() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.EssEventZBAT.Stdby)

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::commonmodule::StatusSPS* temp = _impl_.stdby_;
  _impl_.stdby_ = nullptr;
  return temp;
}
inline ::commonmodule::StatusSPS* PROTOBUF_NONNULL EssEventZBAT::_internal_mutable_stdby() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.stdby_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::StatusSPS>(GetArena());
    _impl_.stdby_ = reinterpret_cast<::commonmodule::StatusSPS*>(p);
  }
  return _impl_.stdby_;
}
inline ::commonmodule::StatusSPS* PROTOBUF_NONNULL EssEventZBAT::mutable_stdby()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000020u;
  ::commonmodule::StatusSPS* _msg = _internal_mutable_stdby();
  // @@protoc_insertion_point(field_mutable:essmodule.EssEventZBAT.Stdby)
  return _msg;
}
inline void EssEventZBAT::set_allocated_stdby(::commonmodule::StatusSPS* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.stdby_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }

  _impl_.stdby_ = reinterpret_cast<::commonmodule::StatusSPS*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.EssEventZBAT.Stdby)
}

// .commonmodule.MV SoH = 7;
inline bool EssEventZBAT::has_soh() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.soh_ != nullptr);
  return value;
}
inline const ::commonmodule::MV& EssEventZBAT::_internal_soh() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::MV* p = _impl_.soh_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::MV&>(::commonmodule::_MV_default_instance_);
}
inline const ::commonmodule::MV& EssEventZBAT::soh() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.EssEventZBAT.SoH)
  return _internal_soh();
}
inline void EssEventZBAT::unsafe_arena_set_allocated_soh(
    ::commonmodule::MV* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.soh_);
  }
  _impl_.soh_ = reinterpret_cast<::commonmodule::MV*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000040u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000040u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.EssEventZBAT.SoH)
}
inline ::commonmodule::MV* PROTOBUF_NULLABLE EssEventZBAT::release_soh() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000040u;
  ::commonmodule::MV* released = _impl_.soh_;
  _impl_.soh_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::MV* PROTOBUF_NULLABLE EssEventZBAT::unsafe_arena_release_soh() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.EssEventZBAT.SoH)

  _impl_._has_bits_[0] &= ~0x00000040u;
  ::commonmodule::MV* temp = _impl_.soh_;
  _impl_.soh_ = nullptr;
  return temp;
}
inline ::commonmodule::MV* PROTOBUF_NONNULL EssEventZBAT::_internal_mutable_soh() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.soh_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::MV>(GetArena());
    _impl_.soh_ = reinterpret_cast<::commonmodule::MV*>(p);
  }
  return _impl_.soh_;
}
inline ::commonmodule::MV* PROTOBUF_NONNULL EssEventZBAT::mutable_soh()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000040u;
  ::commonmodule::MV* _msg = _internal_mutable_soh();
  // @@protoc_insertion_point(field_mutable:essmodule.EssEventZBAT.SoH)
  return _msg;
}
inline void EssEventZBAT::set_allocated_soh(::commonmodule::MV* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.soh_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000040u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000040u;
  }

  _impl_.soh_ = reinterpret_cast<::commonmodule::MV*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.EssEventZBAT.SoH)
}

// .commonmodule.MV WHAvail = 8;
inline bool EssEventZBAT::has_whavail() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.whavail_ != nullptr);
  return value;
}
inline const ::commonmodule::MV& EssEventZBAT::_internal_whavail() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::MV* p = _impl_.whavail_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::MV&>(::commonmodule::_MV_default_instance_);
}
inline const ::commonmodule::MV& EssEventZBAT::whavail() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.EssEventZBAT.WHAvail)
  return _internal_whavail();
}
inline void EssEventZBAT::unsafe_arena_set_allocated_whavail(
    ::commonmodule::MV* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.whavail_);
  }
  _impl_.whavail_ = reinterpret_cast<::commonmodule::MV*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000080u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000080u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.EssEventZBAT.WHAvail)
}
inline ::commonmodule::MV* PROTOBUF_NULLABLE EssEventZBAT::release_whavail() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000080u;
  ::commonmodule::MV* released = _impl_.whavail_;
  _impl_.whavail_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::MV* PROTOBUF_NULLABLE EssEventZBAT::unsafe_arena_release_whavail() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.EssEventZBAT.WHAvail)

  _impl_._has_bits_[0] &= ~0x00000080u;
  ::commonmodule::MV* temp = _impl_.whavail_;
  _impl_.whavail_ = nullptr;
  return temp;
}
inline ::commonmodule::MV* PROTOBUF_NONNULL EssEventZBAT::_internal_mutable_whavail() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.whavail_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::MV>(GetArena());
    _impl_.whavail_ = reinterpret_cast<::commonmodule::MV*>(p);
  }
  return _impl_.whavail_;
}
inline ::commonmodule::MV* PROTOBUF_NONNULL EssEventZBAT::mutable_whavail()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000080u;
  ::commonmodule::MV* _msg = _internal_mutable_whavail();
  // @@protoc_insertion_point(field_mutable:essmodule.EssEventZBAT.WHAvail)
  return _msg;
}
inline void EssEventZBAT::set_allocated_whavail(::commonmodule::MV* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.whavail_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000080u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000080u;
  }

  _impl_.whavail_ = reinterpret_cast<::commonmodule::MV*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.EssEventZBAT.WHAvail)
}

// -------------------------------------------------------------------

// ESSPointStatus

// .commonmodule.StatusSPS blackStartEnabled = 1;
inline bool ESSPointStatus::has_blackstartenabled() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.blackstartenabled_ != nullptr);
  return value;
}
inline const ::commonmodule::StatusSPS& ESSPointStatus::_internal_blackstartenabled() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::StatusSPS* p = _impl_.blackstartenabled_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::StatusSPS&>(::commonmodule::_StatusSPS_default_instance_);
}
inline const ::commonmodule::StatusSPS& ESSPointStatus::blackstartenabled() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSPointStatus.blackStartEnabled)
  return _internal_blackstartenabled();
}
inline void ESSPointStatus::unsafe_arena_set_allocated_blackstartenabled(
    ::commonmodule::StatusSPS* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.blackstartenabled_);
  }
  _impl_.blackstartenabled_ = reinterpret_cast<::commonmodule::StatusSPS*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSPointStatus.blackStartEnabled)
}
inline ::commonmodule::StatusSPS* PROTOBUF_NULLABLE ESSPointStatus::release_blackstartenabled() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::commonmodule::StatusSPS* released = _impl_.blackstartenabled_;
  _impl_.blackstartenabled_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::StatusSPS* PROTOBUF_NULLABLE ESSPointStatus::unsafe_arena_release_blackstartenabled() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSPointStatus.blackStartEnabled)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::commonmodule::StatusSPS* temp = _impl_.blackstartenabled_;
  _impl_.blackstartenabled_ = nullptr;
  return temp;
}
inline ::commonmodule::StatusSPS* PROTOBUF_NONNULL ESSPointStatus::_internal_mutable_blackstartenabled() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.blackstartenabled_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::StatusSPS>(GetArena());
    _impl_.blackstartenabled_ = reinterpret_cast<::commonmodule::StatusSPS*>(p);
  }
  return _impl_.blackstartenabled_;
}
inline ::commonmodule::StatusSPS* PROTOBUF_NONNULL ESSPointStatus::mutable_blackstartenabled()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::commonmodule::StatusSPS* _msg = _internal_mutable_blackstartenabled();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSPointStatus.blackStartEnabled)
  return _msg;
}
inline void ESSPointStatus::set_allocated_blackstartenabled(::commonmodule::StatusSPS* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.blackstartenabled_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.blackstartenabled_ = reinterpret_cast<::commonmodule::StatusSPS*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSPointStatus.blackStartEnabled)
}

// .commonmodule.StatusSPS frequencySetPointEnabled = 2;
inline bool ESSPointStatus::has_frequencysetpointenabled() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.frequencysetpointenabled_ != nullptr);
  return value;
}
inline const ::commonmodule::StatusSPS& ESSPointStatus::_internal_frequencysetpointenabled() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::StatusSPS* p = _impl_.frequencysetpointenabled_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::StatusSPS&>(::commonmodule::_StatusSPS_default_instance_);
}
inline const ::commonmodule::StatusSPS& ESSPointStatus::frequencysetpointenabled() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSPointStatus.frequencySetPointEnabled)
  return _internal_frequencysetpointenabled();
}
inline void ESSPointStatus::unsafe_arena_set_allocated_frequencysetpointenabled(
    ::commonmodule::StatusSPS* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.frequencysetpointenabled_);
  }
  _impl_.frequencysetpointenabled_ = reinterpret_cast<::commonmodule::StatusSPS*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSPointStatus.frequencySetPointEnabled)
}
inline ::commonmodule::StatusSPS* PROTOBUF_NULLABLE ESSPointStatus::release_frequencysetpointenabled() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::commonmodule::StatusSPS* released = _impl_.frequencysetpointenabled_;
  _impl_.frequencysetpointenabled_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::StatusSPS* PROTOBUF_NULLABLE ESSPointStatus::unsafe_arena_release_frequencysetpointenabled() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSPointStatus.frequencySetPointEnabled)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::commonmodule::StatusSPS* temp = _impl_.frequencysetpointenabled_;
  _impl_.frequencysetpointenabled_ = nullptr;
  return temp;
}
inline ::commonmodule::StatusSPS* PROTOBUF_NONNULL ESSPointStatus::_internal_mutable_frequencysetpointenabled() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.frequencysetpointenabled_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::StatusSPS>(GetArena());
    _impl_.frequencysetpointenabled_ = reinterpret_cast<::commonmodule::StatusSPS*>(p);
  }
  return _impl_.frequencysetpointenabled_;
}
inline ::commonmodule::StatusSPS* PROTOBUF_NONNULL ESSPointStatus::mutable_frequencysetpointenabled()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::commonmodule::StatusSPS* _msg = _internal_mutable_frequencysetpointenabled();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSPointStatus.frequencySetPointEnabled)
  return _msg;
}
inline void ESSPointStatus::set_allocated_frequencysetpointenabled(::commonmodule::StatusSPS* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.frequencysetpointenabled_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.frequencysetpointenabled_ = reinterpret_cast<::commonmodule::StatusSPS*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSPointStatus.frequencySetPointEnabled)
}

// .essmodule.ESSFunction function = 3;
inline bool ESSPointStatus::has_function() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.function_ != nullptr);
  return value;
}
inline void ESSPointStatus::clear_function() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.function_ != nullptr) _impl_.function_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::essmodule::ESSFunction& ESSPointStatus::_internal_function() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::essmodule::ESSFunction* p = _impl_.function_;
  return p != nullptr ? *p : reinterpret_cast<const ::essmodule::ESSFunction&>(::essmodule::_ESSFunction_default_instance_);
}
inline const ::essmodule::ESSFunction& ESSPointStatus::function() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSPointStatus.function)
  return _internal_function();
}
inline void ESSPointStatus::unsafe_arena_set_allocated_function(
    ::essmodule::ESSFunction* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.function_);
  }
  _impl_.function_ = reinterpret_cast<::essmodule::ESSFunction*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSPointStatus.function)
}
inline ::essmodule::ESSFunction* PROTOBUF_NULLABLE ESSPointStatus::release_function() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::essmodule::ESSFunction* released = _impl_.function_;
  _impl_.function_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::essmodule::ESSFunction* PROTOBUF_NULLABLE ESSPointStatus::unsafe_arena_release_function() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSPointStatus.function)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::essmodule::ESSFunction* temp = _impl_.function_;
  _impl_.function_ = nullptr;
  return temp;
}
inline ::essmodule::ESSFunction* PROTOBUF_NONNULL ESSPointStatus::_internal_mutable_function() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.function_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::essmodule::ESSFunction>(GetArena());
    _impl_.function_ = reinterpret_cast<::essmodule::ESSFunction*>(p);
  }
  return _impl_.function_;
}
inline ::essmodule::ESSFunction* PROTOBUF_NONNULL ESSPointStatus::mutable_function()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::essmodule::ESSFunction* _msg = _internal_mutable_function();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSPointStatus.function)
  return _msg;
}
inline void ESSPointStatus::set_allocated_function(::essmodule::ESSFunction* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.function_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.function_ = reinterpret_cast<::essmodule::ESSFunction*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSPointStatus.function)
}

// .commonmodule.ENG_GridConnectModeKind mode = 4;
inline bool ESSPointStatus::has_mode() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.mode_ != nullptr);
  return value;
}
inline const ::commonmodule::ENG_GridConnectModeKind& ESSPointStatus::_internal_mode() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::ENG_GridConnectModeKind* p = _impl_.mode_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::ENG_GridConnectModeKind&>(::commonmodule::_ENG_GridConnectModeKind_default_instance_);
}
inline const ::commonmodule::ENG_GridConnectModeKind& ESSPointStatus::mode() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSPointStatus.mode)
  return _internal_mode();
}
inline void ESSPointStatus::unsafe_arena_set_allocated_mode(
    ::commonmodule::ENG_GridConnectModeKind* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.mode_);
  }
  _impl_.mode_ = reinterpret_cast<::commonmodule::ENG_GridConnectModeKind*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSPointStatus.mode)
}
inline ::commonmodule::ENG_GridConnectModeKind* PROTOBUF_NULLABLE ESSPointStatus::release_mode() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::commonmodule::ENG_GridConnectModeKind* released = _impl_.mode_;
  _impl_.mode_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::ENG_GridConnectModeKind* PROTOBUF_NULLABLE ESSPointStatus::unsafe_arena_release_mode() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSPointStatus.mode)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::commonmodule::ENG_GridConnectModeKind* temp = _impl_.mode_;
  _impl_.mode_ = nullptr;
  return temp;
}
inline ::commonmodule::ENG_GridConnectModeKind* PROTOBUF_NONNULL ESSPointStatus::_internal_mutable_mode() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.mode_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::ENG_GridConnectModeKind>(GetArena());
    _impl_.mode_ = reinterpret_cast<::commonmodule::ENG_GridConnectModeKind*>(p);
  }
  return _impl_.mode_;
}
inline ::commonmodule::ENG_GridConnectModeKind* PROTOBUF_NONNULL ESSPointStatus::mutable_mode()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::commonmodule::ENG_GridConnectModeKind* _msg = _internal_mutable_mode();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSPointStatus.mode)
  return _msg;
}
inline void ESSPointStatus::set_allocated_mode(::commonmodule::ENG_GridConnectModeKind* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.mode_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.mode_ = reinterpret_cast<::commonmodule::ENG_GridConnectModeKind*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSPointStatus.mode)
}

// .google.protobuf.FloatValue pctHzDroop = 5;
inline bool ESSPointStatus::has_pcthzdroop() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pcthzdroop_ != nullptr);
  return value;
}
inline const ::google::protobuf::FloatValue& ESSPointStatus::_internal_pcthzdroop() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::FloatValue* p = _impl_.pcthzdroop_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::FloatValue&>(::google::protobuf::_FloatValue_default_instance_);
}
inline const ::google::protobuf::FloatValue& ESSPointStatus::pcthzdroop() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSPointStatus.pctHzDroop)
  return _internal_pcthzdroop();
}
inline void ESSPointStatus::unsafe_arena_set_allocated_pcthzdroop(
    ::google::protobuf::FloatValue* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pcthzdroop_);
  }
  _impl_.pcthzdroop_ = reinterpret_cast<::google::protobuf::FloatValue*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSPointStatus.pctHzDroop)
}
inline ::google::protobuf::FloatValue* PROTOBUF_NULLABLE ESSPointStatus::release_pcthzdroop() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::google::protobuf::FloatValue* released = _impl_.pcthzdroop_;
  _impl_.pcthzdroop_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::FloatValue* PROTOBUF_NULLABLE ESSPointStatus::unsafe_arena_release_pcthzdroop() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSPointStatus.pctHzDroop)

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::google::protobuf::FloatValue* temp = _impl_.pcthzdroop_;
  _impl_.pcthzdroop_ = nullptr;
  return temp;
}
inline ::google::protobuf::FloatValue* PROTOBUF_NONNULL ESSPointStatus::_internal_mutable_pcthzdroop() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pcthzdroop_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::FloatValue>(GetArena());
    _impl_.pcthzdroop_ = reinterpret_cast<::google::protobuf::FloatValue*>(p);
  }
  return _impl_.pcthzdroop_;
}
inline ::google::protobuf::FloatValue* PROTOBUF_NONNULL ESSPointStatus::mutable_pcthzdroop()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000010u;
  ::google::protobuf::FloatValue* _msg = _internal_mutable_pcthzdroop();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSPointStatus.pctHzDroop)
  return _msg;
}
inline void ESSPointStatus::set_allocated_pcthzdroop(::google::protobuf::FloatValue* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pcthzdroop_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }

  _impl_.pcthzdroop_ = reinterpret_cast<::google::protobuf::FloatValue*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSPointStatus.pctHzDroop)
}

// .google.protobuf.FloatValue pctVDroop = 6;
inline bool ESSPointStatus::has_pctvdroop() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pctvdroop_ != nullptr);
  return value;
}
inline const ::google::protobuf::FloatValue& ESSPointStatus::_internal_pctvdroop() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::FloatValue* p = _impl_.pctvdroop_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::FloatValue&>(::google::protobuf::_FloatValue_default_instance_);
}
inline const ::google::protobuf::FloatValue& ESSPointStatus::pctvdroop() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSPointStatus.pctVDroop)
  return _internal_pctvdroop();
}
inline void ESSPointStatus::unsafe_arena_set_allocated_pctvdroop(
    ::google::protobuf::FloatValue* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pctvdroop_);
  }
  _impl_.pctvdroop_ = reinterpret_cast<::google::protobuf::FloatValue*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSPointStatus.pctVDroop)
}
inline ::google::protobuf::FloatValue* PROTOBUF_NULLABLE ESSPointStatus::release_pctvdroop() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::google::protobuf::FloatValue* released = _impl_.pctvdroop_;
  _impl_.pctvdroop_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::FloatValue* PROTOBUF_NULLABLE ESSPointStatus::unsafe_arena_release_pctvdroop() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSPointStatus.pctVDroop)

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::google::protobuf::FloatValue* temp = _impl_.pctvdroop_;
  _impl_.pctvdroop_ = nullptr;
  return temp;
}
inline ::google::protobuf::FloatValue* PROTOBUF_NONNULL ESSPointStatus::_internal_mutable_pctvdroop() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pctvdroop_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::FloatValue>(GetArena());
    _impl_.pctvdroop_ = reinterpret_cast<::google::protobuf::FloatValue*>(p);
  }
  return _impl_.pctvdroop_;
}
inline ::google::protobuf::FloatValue* PROTOBUF_NONNULL ESSPointStatus::mutable_pctvdroop()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000020u;
  ::google::protobuf::FloatValue* _msg = _internal_mutable_pctvdroop();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSPointStatus.pctVDroop)
  return _msg;
}
inline void ESSPointStatus::set_allocated_pctvdroop(::google::protobuf::FloatValue* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pctvdroop_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }

  _impl_.pctvdroop_ = reinterpret_cast<::google::protobuf::FloatValue*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSPointStatus.pctVDroop)
}

// .commonmodule.RampRate rampRates = 7;
inline bool ESSPointStatus::has_ramprates() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.ramprates_ != nullptr);
  return value;
}
inline const ::commonmodule::RampRate& ESSPointStatus::_internal_ramprates() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::RampRate* p = _impl_.ramprates_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::RampRate&>(::commonmodule::_RampRate_default_instance_);
}
inline const ::commonmodule::RampRate& ESSPointStatus::ramprates() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSPointStatus.rampRates)
  return _internal_ramprates();
}
inline void ESSPointStatus::unsafe_arena_set_allocated_ramprates(
    ::commonmodule::RampRate* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.ramprates_);
  }
  _impl_.ramprates_ = reinterpret_cast<::commonmodule::RampRate*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000040u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000040u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSPointStatus.rampRates)
}
inline ::commonmodule::RampRate* PROTOBUF_NULLABLE ESSPointStatus::release_ramprates() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000040u;
  ::commonmodule::RampRate* released = _impl_.ramprates_;
  _impl_.ramprates_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::RampRate* PROTOBUF_NULLABLE ESSPointStatus::unsafe_arena_release_ramprates() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSPointStatus.rampRates)

  _impl_._has_bits_[0] &= ~0x00000040u;
  ::commonmodule::RampRate* temp = _impl_.ramprates_;
  _impl_.ramprates_ = nullptr;
  return temp;
}
inline ::commonmodule::RampRate* PROTOBUF_NONNULL ESSPointStatus::_internal_mutable_ramprates() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.ramprates_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::RampRate>(GetArena());
    _impl_.ramprates_ = reinterpret_cast<::commonmodule::RampRate*>(p);
  }
  return _impl_.ramprates_;
}
inline ::commonmodule::RampRate* PROTOBUF_NONNULL ESSPointStatus::mutable_ramprates()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000040u;
  ::commonmodule::RampRate* _msg = _internal_mutable_ramprates();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSPointStatus.rampRates)
  return _msg;
}
inline void ESSPointStatus::set_allocated_ramprates(::commonmodule::RampRate* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.ramprates_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000040u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000040u;
  }

  _impl_.ramprates_ = reinterpret_cast<::commonmodule::RampRate*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSPointStatus.rampRates)
}

// .commonmodule.StatusSPS reactivePwrSetPointEnabled = 8;
inline bool ESSPointStatus::has_reactivepwrsetpointenabled() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.reactivepwrsetpointenabled_ != nullptr);
  return value;
}
inline const ::commonmodule::StatusSPS& ESSPointStatus::_internal_reactivepwrsetpointenabled() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::StatusSPS* p = _impl_.reactivepwrsetpointenabled_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::StatusSPS&>(::commonmodule::_StatusSPS_default_instance_);
}
inline const ::commonmodule::StatusSPS& ESSPointStatus::reactivepwrsetpointenabled() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSPointStatus.reactivePwrSetPointEnabled)
  return _internal_reactivepwrsetpointenabled();
}
inline void ESSPointStatus::unsafe_arena_set_allocated_reactivepwrsetpointenabled(
    ::commonmodule::StatusSPS* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.reactivepwrsetpointenabled_);
  }
  _impl_.reactivepwrsetpointenabled_ = reinterpret_cast<::commonmodule::StatusSPS*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000080u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000080u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSPointStatus.reactivePwrSetPointEnabled)
}
inline ::commonmodule::StatusSPS* PROTOBUF_NULLABLE ESSPointStatus::release_reactivepwrsetpointenabled() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000080u;
  ::commonmodule::StatusSPS* released = _impl_.reactivepwrsetpointenabled_;
  _impl_.reactivepwrsetpointenabled_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::StatusSPS* PROTOBUF_NULLABLE ESSPointStatus::unsafe_arena_release_reactivepwrsetpointenabled() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSPointStatus.reactivePwrSetPointEnabled)

  _impl_._has_bits_[0] &= ~0x00000080u;
  ::commonmodule::StatusSPS* temp = _impl_.reactivepwrsetpointenabled_;
  _impl_.reactivepwrsetpointenabled_ = nullptr;
  return temp;
}
inline ::commonmodule::StatusSPS* PROTOBUF_NONNULL ESSPointStatus::_internal_mutable_reactivepwrsetpointenabled() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.reactivepwrsetpointenabled_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::StatusSPS>(GetArena());
    _impl_.reactivepwrsetpointenabled_ = reinterpret_cast<::commonmodule::StatusSPS*>(p);
  }
  return _impl_.reactivepwrsetpointenabled_;
}
inline ::commonmodule::StatusSPS* PROTOBUF_NONNULL ESSPointStatus::mutable_reactivepwrsetpointenabled()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000080u;
  ::commonmodule::StatusSPS* _msg = _internal_mutable_reactivepwrsetpointenabled();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSPointStatus.reactivePwrSetPointEnabled)
  return _msg;
}
inline void ESSPointStatus::set_allocated_reactivepwrsetpointenabled(::commonmodule::StatusSPS* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.reactivepwrsetpointenabled_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000080u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000080u;
  }

  _impl_.reactivepwrsetpointenabled_ = reinterpret_cast<::commonmodule::StatusSPS*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSPointStatus.reactivePwrSetPointEnabled)
}

// .commonmodule.StatusSPS realPwrSetPointEnabled = 9;
inline bool ESSPointStatus::has_realpwrsetpointenabled() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.realpwrsetpointenabled_ != nullptr);
  return value;
}
inline const ::commonmodule::StatusSPS& ESSPointStatus::_internal_realpwrsetpointenabled() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::StatusSPS* p = _impl_.realpwrsetpointenabled_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::StatusSPS&>(::commonmodule::_StatusSPS_default_instance_);
}
inline const ::commonmodule::StatusSPS& ESSPointStatus::realpwrsetpointenabled() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSPointStatus.realPwrSetPointEnabled)
  return _internal_realpwrsetpointenabled();
}
inline void ESSPointStatus::unsafe_arena_set_allocated_realpwrsetpointenabled(
    ::commonmodule::StatusSPS* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.realpwrsetpointenabled_);
  }
  _impl_.realpwrsetpointenabled_ = reinterpret_cast<::commonmodule::StatusSPS*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000100u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000100u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSPointStatus.realPwrSetPointEnabled)
}
inline ::commonmodule::StatusSPS* PROTOBUF_NULLABLE ESSPointStatus::release_realpwrsetpointenabled() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000100u;
  ::commonmodule::StatusSPS* released = _impl_.realpwrsetpointenabled_;
  _impl_.realpwrsetpointenabled_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::StatusSPS* PROTOBUF_NULLABLE ESSPointStatus::unsafe_arena_release_realpwrsetpointenabled() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSPointStatus.realPwrSetPointEnabled)

  _impl_._has_bits_[0] &= ~0x00000100u;
  ::commonmodule::StatusSPS* temp = _impl_.realpwrsetpointenabled_;
  _impl_.realpwrsetpointenabled_ = nullptr;
  return temp;
}
inline ::commonmodule::StatusSPS* PROTOBUF_NONNULL ESSPointStatus::_internal_mutable_realpwrsetpointenabled() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.realpwrsetpointenabled_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::StatusSPS>(GetArena());
    _impl_.realpwrsetpointenabled_ = reinterpret_cast<::commonmodule::StatusSPS*>(p);
  }
  return _impl_.realpwrsetpointenabled_;
}
inline ::commonmodule::StatusSPS* PROTOBUF_NONNULL ESSPointStatus::mutable_realpwrsetpointenabled()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000100u;
  ::commonmodule::StatusSPS* _msg = _internal_mutable_realpwrsetpointenabled();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSPointStatus.realPwrSetPointEnabled)
  return _msg;
}
inline void ESSPointStatus::set_allocated_realpwrsetpointenabled(::commonmodule::StatusSPS* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.realpwrsetpointenabled_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000100u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000100u;
  }

  _impl_.realpwrsetpointenabled_ = reinterpret_cast<::commonmodule::StatusSPS*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSPointStatus.realPwrSetPointEnabled)
}

// .commonmodule.Optional_StateKind state = 10;
inline bool ESSPointStatus::has_state() const {
  bool value = (_impl_._has_bits_[0] & 0x00000200u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.state_ != nullptr);
  return value;
}
inline const ::commonmodule::Optional_StateKind& ESSPointStatus::_internal_state() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::Optional_StateKind* p = _impl_.state_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::Optional_StateKind&>(::commonmodule::_Optional_StateKind_default_instance_);
}
inline const ::commonmodule::Optional_StateKind& ESSPointStatus::state() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSPointStatus.state)
  return _internal_state();
}
inline void ESSPointStatus::unsafe_arena_set_allocated_state(
    ::commonmodule::Optional_StateKind* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.state_);
  }
  _impl_.state_ = reinterpret_cast<::commonmodule::Optional_StateKind*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000200u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000200u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSPointStatus.state)
}
inline ::commonmodule::Optional_StateKind* PROTOBUF_NULLABLE ESSPointStatus::release_state() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000200u;
  ::commonmodule::Optional_StateKind* released = _impl_.state_;
  _impl_.state_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::Optional_StateKind* PROTOBUF_NULLABLE ESSPointStatus::unsafe_arena_release_state() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSPointStatus.state)

  _impl_._has_bits_[0] &= ~0x00000200u;
  ::commonmodule::Optional_StateKind* temp = _impl_.state_;
  _impl_.state_ = nullptr;
  return temp;
}
inline ::commonmodule::Optional_StateKind* PROTOBUF_NONNULL ESSPointStatus::_internal_mutable_state() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.state_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::Optional_StateKind>(GetArena());
    _impl_.state_ = reinterpret_cast<::commonmodule::Optional_StateKind*>(p);
  }
  return _impl_.state_;
}
inline ::commonmodule::Optional_StateKind* PROTOBUF_NONNULL ESSPointStatus::mutable_state()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000200u;
  ::commonmodule::Optional_StateKind* _msg = _internal_mutable_state();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSPointStatus.state)
  return _msg;
}
inline void ESSPointStatus::set_allocated_state(::commonmodule::Optional_StateKind* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.state_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000200u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000200u;
  }

  _impl_.state_ = reinterpret_cast<::commonmodule::Optional_StateKind*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSPointStatus.state)
}

// .commonmodule.StatusSPS syncBackToGrid = 11;
inline bool ESSPointStatus::has_syncbacktogrid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000400u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.syncbacktogrid_ != nullptr);
  return value;
}
inline const ::commonmodule::StatusSPS& ESSPointStatus::_internal_syncbacktogrid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::StatusSPS* p = _impl_.syncbacktogrid_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::StatusSPS&>(::commonmodule::_StatusSPS_default_instance_);
}
inline const ::commonmodule::StatusSPS& ESSPointStatus::syncbacktogrid() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSPointStatus.syncBackToGrid)
  return _internal_syncbacktogrid();
}
inline void ESSPointStatus::unsafe_arena_set_allocated_syncbacktogrid(
    ::commonmodule::StatusSPS* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.syncbacktogrid_);
  }
  _impl_.syncbacktogrid_ = reinterpret_cast<::commonmodule::StatusSPS*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000400u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000400u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSPointStatus.syncBackToGrid)
}
inline ::commonmodule::StatusSPS* PROTOBUF_NULLABLE ESSPointStatus::release_syncbacktogrid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000400u;
  ::commonmodule::StatusSPS* released = _impl_.syncbacktogrid_;
  _impl_.syncbacktogrid_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::StatusSPS* PROTOBUF_NULLABLE ESSPointStatus::unsafe_arena_release_syncbacktogrid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSPointStatus.syncBackToGrid)

  _impl_._has_bits_[0] &= ~0x00000400u;
  ::commonmodule::StatusSPS* temp = _impl_.syncbacktogrid_;
  _impl_.syncbacktogrid_ = nullptr;
  return temp;
}
inline ::commonmodule::StatusSPS* PROTOBUF_NONNULL ESSPointStatus::_internal_mutable_syncbacktogrid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.syncbacktogrid_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::StatusSPS>(GetArena());
    _impl_.syncbacktogrid_ = reinterpret_cast<::commonmodule::StatusSPS*>(p);
  }
  return _impl_.syncbacktogrid_;
}
inline ::commonmodule::StatusSPS* PROTOBUF_NONNULL ESSPointStatus::mutable_syncbacktogrid()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000400u;
  ::commonmodule::StatusSPS* _msg = _internal_mutable_syncbacktogrid();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSPointStatus.syncBackToGrid)
  return _msg;
}
inline void ESSPointStatus::set_allocated_syncbacktogrid(::commonmodule::StatusSPS* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.syncbacktogrid_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000400u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000400u;
  }

  _impl_.syncbacktogrid_ = reinterpret_cast<::commonmodule::StatusSPS*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSPointStatus.syncBackToGrid)
}

// .commonmodule.StatusSPS transToIslndOnGridLossEnabled = 12;
inline bool ESSPointStatus::has_transtoislndongridlossenabled() const {
  bool value = (_impl_._has_bits_[0] & 0x00000800u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.transtoislndongridlossenabled_ != nullptr);
  return value;
}
inline const ::commonmodule::StatusSPS& ESSPointStatus::_internal_transtoislndongridlossenabled() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::StatusSPS* p = _impl_.transtoislndongridlossenabled_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::StatusSPS&>(::commonmodule::_StatusSPS_default_instance_);
}
inline const ::commonmodule::StatusSPS& ESSPointStatus::transtoislndongridlossenabled() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSPointStatus.transToIslndOnGridLossEnabled)
  return _internal_transtoislndongridlossenabled();
}
inline void ESSPointStatus::unsafe_arena_set_allocated_transtoislndongridlossenabled(
    ::commonmodule::StatusSPS* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.transtoislndongridlossenabled_);
  }
  _impl_.transtoislndongridlossenabled_ = reinterpret_cast<::commonmodule::StatusSPS*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000800u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000800u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSPointStatus.transToIslndOnGridLossEnabled)
}
inline ::commonmodule::StatusSPS* PROTOBUF_NULLABLE ESSPointStatus::release_transtoislndongridlossenabled() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000800u;
  ::commonmodule::StatusSPS* released = _impl_.transtoislndongridlossenabled_;
  _impl_.transtoislndongridlossenabled_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::StatusSPS* PROTOBUF_NULLABLE ESSPointStatus::unsafe_arena_release_transtoislndongridlossenabled() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSPointStatus.transToIslndOnGridLossEnabled)

  _impl_._has_bits_[0] &= ~0x00000800u;
  ::commonmodule::StatusSPS* temp = _impl_.transtoislndongridlossenabled_;
  _impl_.transtoislndongridlossenabled_ = nullptr;
  return temp;
}
inline ::commonmodule::StatusSPS* PROTOBUF_NONNULL ESSPointStatus::_internal_mutable_transtoislndongridlossenabled() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.transtoislndongridlossenabled_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::StatusSPS>(GetArena());
    _impl_.transtoislndongridlossenabled_ = reinterpret_cast<::commonmodule::StatusSPS*>(p);
  }
  return _impl_.transtoislndongridlossenabled_;
}
inline ::commonmodule::StatusSPS* PROTOBUF_NONNULL ESSPointStatus::mutable_transtoislndongridlossenabled()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000800u;
  ::commonmodule::StatusSPS* _msg = _internal_mutable_transtoislndongridlossenabled();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSPointStatus.transToIslndOnGridLossEnabled)
  return _msg;
}
inline void ESSPointStatus::set_allocated_transtoislndongridlossenabled(::commonmodule::StatusSPS* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.transtoislndongridlossenabled_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000800u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000800u;
  }

  _impl_.transtoislndongridlossenabled_ = reinterpret_cast<::commonmodule::StatusSPS*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSPointStatus.transToIslndOnGridLossEnabled)
}

// .commonmodule.StatusSPS voltageSetPointEnabled = 13;
inline bool ESSPointStatus::has_voltagesetpointenabled() const {
  bool value = (_impl_._has_bits_[0] & 0x00001000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.voltagesetpointenabled_ != nullptr);
  return value;
}
inline const ::commonmodule::StatusSPS& ESSPointStatus::_internal_voltagesetpointenabled() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::StatusSPS* p = _impl_.voltagesetpointenabled_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::StatusSPS&>(::commonmodule::_StatusSPS_default_instance_);
}
inline const ::commonmodule::StatusSPS& ESSPointStatus::voltagesetpointenabled() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSPointStatus.voltageSetPointEnabled)
  return _internal_voltagesetpointenabled();
}
inline void ESSPointStatus::unsafe_arena_set_allocated_voltagesetpointenabled(
    ::commonmodule::StatusSPS* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.voltagesetpointenabled_);
  }
  _impl_.voltagesetpointenabled_ = reinterpret_cast<::commonmodule::StatusSPS*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00001000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00001000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSPointStatus.voltageSetPointEnabled)
}
inline ::commonmodule::StatusSPS* PROTOBUF_NULLABLE ESSPointStatus::release_voltagesetpointenabled() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00001000u;
  ::commonmodule::StatusSPS* released = _impl_.voltagesetpointenabled_;
  _impl_.voltagesetpointenabled_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::StatusSPS* PROTOBUF_NULLABLE ESSPointStatus::unsafe_arena_release_voltagesetpointenabled() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSPointStatus.voltageSetPointEnabled)

  _impl_._has_bits_[0] &= ~0x00001000u;
  ::commonmodule::StatusSPS* temp = _impl_.voltagesetpointenabled_;
  _impl_.voltagesetpointenabled_ = nullptr;
  return temp;
}
inline ::commonmodule::StatusSPS* PROTOBUF_NONNULL ESSPointStatus::_internal_mutable_voltagesetpointenabled() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.voltagesetpointenabled_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::StatusSPS>(GetArena());
    _impl_.voltagesetpointenabled_ = reinterpret_cast<::commonmodule::StatusSPS*>(p);
  }
  return _impl_.voltagesetpointenabled_;
}
inline ::commonmodule::StatusSPS* PROTOBUF_NONNULL ESSPointStatus::mutable_voltagesetpointenabled()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00001000u;
  ::commonmodule::StatusSPS* _msg = _internal_mutable_voltagesetpointenabled();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSPointStatus.voltageSetPointEnabled)
  return _msg;
}
inline void ESSPointStatus::set_allocated_voltagesetpointenabled(::commonmodule::StatusSPS* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.voltagesetpointenabled_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00001000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00001000u;
  }

  _impl_.voltagesetpointenabled_ = reinterpret_cast<::commonmodule::StatusSPS*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSPointStatus.voltageSetPointEnabled)
}

// .commonmodule.EnterServiceAPC enterServiceOperation = 14;
inline bool ESSPointStatus::has_enterserviceoperation() const {
  bool value = (_impl_._has_bits_[0] & 0x00002000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.enterserviceoperation_ != nullptr);
  return value;
}
inline const ::commonmodule::EnterServiceAPC& ESSPointStatus::_internal_enterserviceoperation() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::EnterServiceAPC* p = _impl_.enterserviceoperation_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::EnterServiceAPC&>(::commonmodule::_EnterServiceAPC_default_instance_);
}
inline const ::commonmodule::EnterServiceAPC& ESSPointStatus::enterserviceoperation() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSPointStatus.enterServiceOperation)
  return _internal_enterserviceoperation();
}
inline void ESSPointStatus::unsafe_arena_set_allocated_enterserviceoperation(
    ::commonmodule::EnterServiceAPC* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.enterserviceoperation_);
  }
  _impl_.enterserviceoperation_ = reinterpret_cast<::commonmodule::EnterServiceAPC*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00002000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00002000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSPointStatus.enterServiceOperation)
}
inline ::commonmodule::EnterServiceAPC* PROTOBUF_NULLABLE ESSPointStatus::release_enterserviceoperation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00002000u;
  ::commonmodule::EnterServiceAPC* released = _impl_.enterserviceoperation_;
  _impl_.enterserviceoperation_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::EnterServiceAPC* PROTOBUF_NULLABLE ESSPointStatus::unsafe_arena_release_enterserviceoperation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSPointStatus.enterServiceOperation)

  _impl_._has_bits_[0] &= ~0x00002000u;
  ::commonmodule::EnterServiceAPC* temp = _impl_.enterserviceoperation_;
  _impl_.enterserviceoperation_ = nullptr;
  return temp;
}
inline ::commonmodule::EnterServiceAPC* PROTOBUF_NONNULL ESSPointStatus::_internal_mutable_enterserviceoperation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.enterserviceoperation_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::EnterServiceAPC>(GetArena());
    _impl_.enterserviceoperation_ = reinterpret_cast<::commonmodule::EnterServiceAPC*>(p);
  }
  return _impl_.enterserviceoperation_;
}
inline ::commonmodule::EnterServiceAPC* PROTOBUF_NONNULL ESSPointStatus::mutable_enterserviceoperation()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00002000u;
  ::commonmodule::EnterServiceAPC* _msg = _internal_mutable_enterserviceoperation();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSPointStatus.enterServiceOperation)
  return _msg;
}
inline void ESSPointStatus::set_allocated_enterserviceoperation(::commonmodule::EnterServiceAPC* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.enterserviceoperation_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00002000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00002000u;
  }

  _impl_.enterserviceoperation_ = reinterpret_cast<::commonmodule::EnterServiceAPC*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSPointStatus.enterServiceOperation)
}

// .commonmodule.HzWAPC hzWOperation = 15;
inline bool ESSPointStatus::has_hzwoperation() const {
  bool value = (_impl_._has_bits_[0] & 0x00004000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.hzwoperation_ != nullptr);
  return value;
}
inline const ::commonmodule::HzWAPC& ESSPointStatus::_internal_hzwoperation() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::HzWAPC* p = _impl_.hzwoperation_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::HzWAPC&>(::commonmodule::_HzWAPC_default_instance_);
}
inline const ::commonmodule::HzWAPC& ESSPointStatus::hzwoperation() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSPointStatus.hzWOperation)
  return _internal_hzwoperation();
}
inline void ESSPointStatus::unsafe_arena_set_allocated_hzwoperation(
    ::commonmodule::HzWAPC* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.hzwoperation_);
  }
  _impl_.hzwoperation_ = reinterpret_cast<::commonmodule::HzWAPC*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00004000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00004000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSPointStatus.hzWOperation)
}
inline ::commonmodule::HzWAPC* PROTOBUF_NULLABLE ESSPointStatus::release_hzwoperation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00004000u;
  ::commonmodule::HzWAPC* released = _impl_.hzwoperation_;
  _impl_.hzwoperation_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::HzWAPC* PROTOBUF_NULLABLE ESSPointStatus::unsafe_arena_release_hzwoperation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSPointStatus.hzWOperation)

  _impl_._has_bits_[0] &= ~0x00004000u;
  ::commonmodule::HzWAPC* temp = _impl_.hzwoperation_;
  _impl_.hzwoperation_ = nullptr;
  return temp;
}
inline ::commonmodule::HzWAPC* PROTOBUF_NONNULL ESSPointStatus::_internal_mutable_hzwoperation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.hzwoperation_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::HzWAPC>(GetArena());
    _impl_.hzwoperation_ = reinterpret_cast<::commonmodule::HzWAPC*>(p);
  }
  return _impl_.hzwoperation_;
}
inline ::commonmodule::HzWAPC* PROTOBUF_NONNULL ESSPointStatus::mutable_hzwoperation()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00004000u;
  ::commonmodule::HzWAPC* _msg = _internal_mutable_hzwoperation();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSPointStatus.hzWOperation)
  return _msg;
}
inline void ESSPointStatus::set_allocated_hzwoperation(::commonmodule::HzWAPC* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.hzwoperation_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00004000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00004000u;
  }

  _impl_.hzwoperation_ = reinterpret_cast<::commonmodule::HzWAPC*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSPointStatus.hzWOperation)
}

// .commonmodule.LimitWAPC limitWOperation = 16;
inline bool ESSPointStatus::has_limitwoperation() const {
  bool value = (_impl_._has_bits_[0] & 0x00008000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.limitwoperation_ != nullptr);
  return value;
}
inline const ::commonmodule::LimitWAPC& ESSPointStatus::_internal_limitwoperation() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::LimitWAPC* p = _impl_.limitwoperation_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::LimitWAPC&>(::commonmodule::_LimitWAPC_default_instance_);
}
inline const ::commonmodule::LimitWAPC& ESSPointStatus::limitwoperation() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSPointStatus.limitWOperation)
  return _internal_limitwoperation();
}
inline void ESSPointStatus::unsafe_arena_set_allocated_limitwoperation(
    ::commonmodule::LimitWAPC* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.limitwoperation_);
  }
  _impl_.limitwoperation_ = reinterpret_cast<::commonmodule::LimitWAPC*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00008000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00008000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSPointStatus.limitWOperation)
}
inline ::commonmodule::LimitWAPC* PROTOBUF_NULLABLE ESSPointStatus::release_limitwoperation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00008000u;
  ::commonmodule::LimitWAPC* released = _impl_.limitwoperation_;
  _impl_.limitwoperation_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::LimitWAPC* PROTOBUF_NULLABLE ESSPointStatus::unsafe_arena_release_limitwoperation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSPointStatus.limitWOperation)

  _impl_._has_bits_[0] &= ~0x00008000u;
  ::commonmodule::LimitWAPC* temp = _impl_.limitwoperation_;
  _impl_.limitwoperation_ = nullptr;
  return temp;
}
inline ::commonmodule::LimitWAPC* PROTOBUF_NONNULL ESSPointStatus::_internal_mutable_limitwoperation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.limitwoperation_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::LimitWAPC>(GetArena());
    _impl_.limitwoperation_ = reinterpret_cast<::commonmodule::LimitWAPC*>(p);
  }
  return _impl_.limitwoperation_;
}
inline ::commonmodule::LimitWAPC* PROTOBUF_NONNULL ESSPointStatus::mutable_limitwoperation()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00008000u;
  ::commonmodule::LimitWAPC* _msg = _internal_mutable_limitwoperation();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSPointStatus.limitWOperation)
  return _msg;
}
inline void ESSPointStatus::set_allocated_limitwoperation(::commonmodule::LimitWAPC* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.limitwoperation_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00008000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00008000u;
  }

  _impl_.limitwoperation_ = reinterpret_cast<::commonmodule::LimitWAPC*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSPointStatus.limitWOperation)
}

// .commonmodule.PFSPC pFOperation = 17;
inline bool ESSPointStatus::has_pfoperation() const {
  bool value = (_impl_._has_bits_[0] & 0x00010000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pfoperation_ != nullptr);
  return value;
}
inline const ::commonmodule::PFSPC& ESSPointStatus::_internal_pfoperation() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::PFSPC* p = _impl_.pfoperation_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::PFSPC&>(::commonmodule::_PFSPC_default_instance_);
}
inline const ::commonmodule::PFSPC& ESSPointStatus::pfoperation() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSPointStatus.pFOperation)
  return _internal_pfoperation();
}
inline void ESSPointStatus::unsafe_arena_set_allocated_pfoperation(
    ::commonmodule::PFSPC* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pfoperation_);
  }
  _impl_.pfoperation_ = reinterpret_cast<::commonmodule::PFSPC*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00010000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00010000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSPointStatus.pFOperation)
}
inline ::commonmodule::PFSPC* PROTOBUF_NULLABLE ESSPointStatus::release_pfoperation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00010000u;
  ::commonmodule::PFSPC* released = _impl_.pfoperation_;
  _impl_.pfoperation_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::PFSPC* PROTOBUF_NULLABLE ESSPointStatus::unsafe_arena_release_pfoperation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSPointStatus.pFOperation)

  _impl_._has_bits_[0] &= ~0x00010000u;
  ::commonmodule::PFSPC* temp = _impl_.pfoperation_;
  _impl_.pfoperation_ = nullptr;
  return temp;
}
inline ::commonmodule::PFSPC* PROTOBUF_NONNULL ESSPointStatus::_internal_mutable_pfoperation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pfoperation_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::PFSPC>(GetArena());
    _impl_.pfoperation_ = reinterpret_cast<::commonmodule::PFSPC*>(p);
  }
  return _impl_.pfoperation_;
}
inline ::commonmodule::PFSPC* PROTOBUF_NONNULL ESSPointStatus::mutable_pfoperation()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00010000u;
  ::commonmodule::PFSPC* _msg = _internal_mutable_pfoperation();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSPointStatus.pFOperation)
  return _msg;
}
inline void ESSPointStatus::set_allocated_pfoperation(::commonmodule::PFSPC* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pfoperation_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00010000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00010000u;
  }

  _impl_.pfoperation_ = reinterpret_cast<::commonmodule::PFSPC*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSPointStatus.pFOperation)
}

// .commonmodule.TmHzCSG tmHzTripOperation = 18;
inline bool ESSPointStatus::has_tmhztripoperation() const {
  bool value = (_impl_._has_bits_[0] & 0x00020000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.tmhztripoperation_ != nullptr);
  return value;
}
inline const ::commonmodule::TmHzCSG& ESSPointStatus::_internal_tmhztripoperation() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::TmHzCSG* p = _impl_.tmhztripoperation_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::TmHzCSG&>(::commonmodule::_TmHzCSG_default_instance_);
}
inline const ::commonmodule::TmHzCSG& ESSPointStatus::tmhztripoperation() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSPointStatus.tmHzTripOperation)
  return _internal_tmhztripoperation();
}
inline void ESSPointStatus::unsafe_arena_set_allocated_tmhztripoperation(
    ::commonmodule::TmHzCSG* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.tmhztripoperation_);
  }
  _impl_.tmhztripoperation_ = reinterpret_cast<::commonmodule::TmHzCSG*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00020000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00020000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSPointStatus.tmHzTripOperation)
}
inline ::commonmodule::TmHzCSG* PROTOBUF_NULLABLE ESSPointStatus::release_tmhztripoperation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00020000u;
  ::commonmodule::TmHzCSG* released = _impl_.tmhztripoperation_;
  _impl_.tmhztripoperation_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::TmHzCSG* PROTOBUF_NULLABLE ESSPointStatus::unsafe_arena_release_tmhztripoperation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSPointStatus.tmHzTripOperation)

  _impl_._has_bits_[0] &= ~0x00020000u;
  ::commonmodule::TmHzCSG* temp = _impl_.tmhztripoperation_;
  _impl_.tmhztripoperation_ = nullptr;
  return temp;
}
inline ::commonmodule::TmHzCSG* PROTOBUF_NONNULL ESSPointStatus::_internal_mutable_tmhztripoperation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.tmhztripoperation_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::TmHzCSG>(GetArena());
    _impl_.tmhztripoperation_ = reinterpret_cast<::commonmodule::TmHzCSG*>(p);
  }
  return _impl_.tmhztripoperation_;
}
inline ::commonmodule::TmHzCSG* PROTOBUF_NONNULL ESSPointStatus::mutable_tmhztripoperation()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00020000u;
  ::commonmodule::TmHzCSG* _msg = _internal_mutable_tmhztripoperation();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSPointStatus.tmHzTripOperation)
  return _msg;
}
inline void ESSPointStatus::set_allocated_tmhztripoperation(::commonmodule::TmHzCSG* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.tmhztripoperation_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00020000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00020000u;
  }

  _impl_.tmhztripoperation_ = reinterpret_cast<::commonmodule::TmHzCSG*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSPointStatus.tmHzTripOperation)
}

// .commonmodule.TmVoltCSG tmVoltTripOperation = 19;
inline bool ESSPointStatus::has_tmvolttripoperation() const {
  bool value = (_impl_._has_bits_[0] & 0x00040000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.tmvolttripoperation_ != nullptr);
  return value;
}
inline const ::commonmodule::TmVoltCSG& ESSPointStatus::_internal_tmvolttripoperation() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::TmVoltCSG* p = _impl_.tmvolttripoperation_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::TmVoltCSG&>(::commonmodule::_TmVoltCSG_default_instance_);
}
inline const ::commonmodule::TmVoltCSG& ESSPointStatus::tmvolttripoperation() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSPointStatus.tmVoltTripOperation)
  return _internal_tmvolttripoperation();
}
inline void ESSPointStatus::unsafe_arena_set_allocated_tmvolttripoperation(
    ::commonmodule::TmVoltCSG* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.tmvolttripoperation_);
  }
  _impl_.tmvolttripoperation_ = reinterpret_cast<::commonmodule::TmVoltCSG*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00040000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00040000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSPointStatus.tmVoltTripOperation)
}
inline ::commonmodule::TmVoltCSG* PROTOBUF_NULLABLE ESSPointStatus::release_tmvolttripoperation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00040000u;
  ::commonmodule::TmVoltCSG* released = _impl_.tmvolttripoperation_;
  _impl_.tmvolttripoperation_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::TmVoltCSG* PROTOBUF_NULLABLE ESSPointStatus::unsafe_arena_release_tmvolttripoperation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSPointStatus.tmVoltTripOperation)

  _impl_._has_bits_[0] &= ~0x00040000u;
  ::commonmodule::TmVoltCSG* temp = _impl_.tmvolttripoperation_;
  _impl_.tmvolttripoperation_ = nullptr;
  return temp;
}
inline ::commonmodule::TmVoltCSG* PROTOBUF_NONNULL ESSPointStatus::_internal_mutable_tmvolttripoperation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.tmvolttripoperation_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::TmVoltCSG>(GetArena());
    _impl_.tmvolttripoperation_ = reinterpret_cast<::commonmodule::TmVoltCSG*>(p);
  }
  return _impl_.tmvolttripoperation_;
}
inline ::commonmodule::TmVoltCSG* PROTOBUF_NONNULL ESSPointStatus::mutable_tmvolttripoperation()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00040000u;
  ::commonmodule::TmVoltCSG* _msg = _internal_mutable_tmvolttripoperation();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSPointStatus.tmVoltTripOperation)
  return _msg;
}
inline void ESSPointStatus::set_allocated_tmvolttripoperation(::commonmodule::TmVoltCSG* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.tmvolttripoperation_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00040000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00040000u;
  }

  _impl_.tmvolttripoperation_ = reinterpret_cast<::commonmodule::TmVoltCSG*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSPointStatus.tmVoltTripOperation)
}

// .commonmodule.VarSPC vArOperation = 20;
inline bool ESSPointStatus::has_varoperation() const {
  bool value = (_impl_._has_bits_[0] & 0x00080000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.varoperation_ != nullptr);
  return value;
}
inline const ::commonmodule::VarSPC& ESSPointStatus::_internal_varoperation() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::VarSPC* p = _impl_.varoperation_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::VarSPC&>(::commonmodule::_VarSPC_default_instance_);
}
inline const ::commonmodule::VarSPC& ESSPointStatus::varoperation() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSPointStatus.vArOperation)
  return _internal_varoperation();
}
inline void ESSPointStatus::unsafe_arena_set_allocated_varoperation(
    ::commonmodule::VarSPC* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.varoperation_);
  }
  _impl_.varoperation_ = reinterpret_cast<::commonmodule::VarSPC*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00080000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00080000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSPointStatus.vArOperation)
}
inline ::commonmodule::VarSPC* PROTOBUF_NULLABLE ESSPointStatus::release_varoperation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00080000u;
  ::commonmodule::VarSPC* released = _impl_.varoperation_;
  _impl_.varoperation_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::VarSPC* PROTOBUF_NULLABLE ESSPointStatus::unsafe_arena_release_varoperation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSPointStatus.vArOperation)

  _impl_._has_bits_[0] &= ~0x00080000u;
  ::commonmodule::VarSPC* temp = _impl_.varoperation_;
  _impl_.varoperation_ = nullptr;
  return temp;
}
inline ::commonmodule::VarSPC* PROTOBUF_NONNULL ESSPointStatus::_internal_mutable_varoperation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.varoperation_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::VarSPC>(GetArena());
    _impl_.varoperation_ = reinterpret_cast<::commonmodule::VarSPC*>(p);
  }
  return _impl_.varoperation_;
}
inline ::commonmodule::VarSPC* PROTOBUF_NONNULL ESSPointStatus::mutable_varoperation()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00080000u;
  ::commonmodule::VarSPC* _msg = _internal_mutable_varoperation();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSPointStatus.vArOperation)
  return _msg;
}
inline void ESSPointStatus::set_allocated_varoperation(::commonmodule::VarSPC* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.varoperation_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00080000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00080000u;
  }

  _impl_.varoperation_ = reinterpret_cast<::commonmodule::VarSPC*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSPointStatus.vArOperation)
}

// .commonmodule.VoltVarCSG voltVarOperation = 21;
inline bool ESSPointStatus::has_voltvaroperation() const {
  bool value = (_impl_._has_bits_[0] & 0x00100000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.voltvaroperation_ != nullptr);
  return value;
}
inline const ::commonmodule::VoltVarCSG& ESSPointStatus::_internal_voltvaroperation() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::VoltVarCSG* p = _impl_.voltvaroperation_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::VoltVarCSG&>(::commonmodule::_VoltVarCSG_default_instance_);
}
inline const ::commonmodule::VoltVarCSG& ESSPointStatus::voltvaroperation() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSPointStatus.voltVarOperation)
  return _internal_voltvaroperation();
}
inline void ESSPointStatus::unsafe_arena_set_allocated_voltvaroperation(
    ::commonmodule::VoltVarCSG* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.voltvaroperation_);
  }
  _impl_.voltvaroperation_ = reinterpret_cast<::commonmodule::VoltVarCSG*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00100000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00100000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSPointStatus.voltVarOperation)
}
inline ::commonmodule::VoltVarCSG* PROTOBUF_NULLABLE ESSPointStatus::release_voltvaroperation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00100000u;
  ::commonmodule::VoltVarCSG* released = _impl_.voltvaroperation_;
  _impl_.voltvaroperation_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::VoltVarCSG* PROTOBUF_NULLABLE ESSPointStatus::unsafe_arena_release_voltvaroperation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSPointStatus.voltVarOperation)

  _impl_._has_bits_[0] &= ~0x00100000u;
  ::commonmodule::VoltVarCSG* temp = _impl_.voltvaroperation_;
  _impl_.voltvaroperation_ = nullptr;
  return temp;
}
inline ::commonmodule::VoltVarCSG* PROTOBUF_NONNULL ESSPointStatus::_internal_mutable_voltvaroperation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.voltvaroperation_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::VoltVarCSG>(GetArena());
    _impl_.voltvaroperation_ = reinterpret_cast<::commonmodule::VoltVarCSG*>(p);
  }
  return _impl_.voltvaroperation_;
}
inline ::commonmodule::VoltVarCSG* PROTOBUF_NONNULL ESSPointStatus::mutable_voltvaroperation()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00100000u;
  ::commonmodule::VoltVarCSG* _msg = _internal_mutable_voltvaroperation();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSPointStatus.voltVarOperation)
  return _msg;
}
inline void ESSPointStatus::set_allocated_voltvaroperation(::commonmodule::VoltVarCSG* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.voltvaroperation_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00100000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00100000u;
  }

  _impl_.voltvaroperation_ = reinterpret_cast<::commonmodule::VoltVarCSG*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSPointStatus.voltVarOperation)
}

// .commonmodule.VoltWCSG voltWOperation = 22;
inline bool ESSPointStatus::has_voltwoperation() const {
  bool value = (_impl_._has_bits_[0] & 0x00200000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.voltwoperation_ != nullptr);
  return value;
}
inline const ::commonmodule::VoltWCSG& ESSPointStatus::_internal_voltwoperation() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::VoltWCSG* p = _impl_.voltwoperation_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::VoltWCSG&>(::commonmodule::_VoltWCSG_default_instance_);
}
inline const ::commonmodule::VoltWCSG& ESSPointStatus::voltwoperation() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSPointStatus.voltWOperation)
  return _internal_voltwoperation();
}
inline void ESSPointStatus::unsafe_arena_set_allocated_voltwoperation(
    ::commonmodule::VoltWCSG* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.voltwoperation_);
  }
  _impl_.voltwoperation_ = reinterpret_cast<::commonmodule::VoltWCSG*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00200000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00200000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSPointStatus.voltWOperation)
}
inline ::commonmodule::VoltWCSG* PROTOBUF_NULLABLE ESSPointStatus::release_voltwoperation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00200000u;
  ::commonmodule::VoltWCSG* released = _impl_.voltwoperation_;
  _impl_.voltwoperation_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::VoltWCSG* PROTOBUF_NULLABLE ESSPointStatus::unsafe_arena_release_voltwoperation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSPointStatus.voltWOperation)

  _impl_._has_bits_[0] &= ~0x00200000u;
  ::commonmodule::VoltWCSG* temp = _impl_.voltwoperation_;
  _impl_.voltwoperation_ = nullptr;
  return temp;
}
inline ::commonmodule::VoltWCSG* PROTOBUF_NONNULL ESSPointStatus::_internal_mutable_voltwoperation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.voltwoperation_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::VoltWCSG>(GetArena());
    _impl_.voltwoperation_ = reinterpret_cast<::commonmodule::VoltWCSG*>(p);
  }
  return _impl_.voltwoperation_;
}
inline ::commonmodule::VoltWCSG* PROTOBUF_NONNULL ESSPointStatus::mutable_voltwoperation()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00200000u;
  ::commonmodule::VoltWCSG* _msg = _internal_mutable_voltwoperation();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSPointStatus.voltWOperation)
  return _msg;
}
inline void ESSPointStatus::set_allocated_voltwoperation(::commonmodule::VoltWCSG* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.voltwoperation_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00200000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00200000u;
  }

  _impl_.voltwoperation_ = reinterpret_cast<::commonmodule::VoltWCSG*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSPointStatus.voltWOperation)
}

// .commonmodule.WVarCSG wVarOperation = 23;
inline bool ESSPointStatus::has_wvaroperation() const {
  bool value = (_impl_._has_bits_[0] & 0x00400000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.wvaroperation_ != nullptr);
  return value;
}
inline const ::commonmodule::WVarCSG& ESSPointStatus::_internal_wvaroperation() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::WVarCSG* p = _impl_.wvaroperation_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::WVarCSG&>(::commonmodule::_WVarCSG_default_instance_);
}
inline const ::commonmodule::WVarCSG& ESSPointStatus::wvaroperation() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSPointStatus.wVarOperation)
  return _internal_wvaroperation();
}
inline void ESSPointStatus::unsafe_arena_set_allocated_wvaroperation(
    ::commonmodule::WVarCSG* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.wvaroperation_);
  }
  _impl_.wvaroperation_ = reinterpret_cast<::commonmodule::WVarCSG*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00400000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00400000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSPointStatus.wVarOperation)
}
inline ::commonmodule::WVarCSG* PROTOBUF_NULLABLE ESSPointStatus::release_wvaroperation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00400000u;
  ::commonmodule::WVarCSG* released = _impl_.wvaroperation_;
  _impl_.wvaroperation_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::WVarCSG* PROTOBUF_NULLABLE ESSPointStatus::unsafe_arena_release_wvaroperation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSPointStatus.wVarOperation)

  _impl_._has_bits_[0] &= ~0x00400000u;
  ::commonmodule::WVarCSG* temp = _impl_.wvaroperation_;
  _impl_.wvaroperation_ = nullptr;
  return temp;
}
inline ::commonmodule::WVarCSG* PROTOBUF_NONNULL ESSPointStatus::_internal_mutable_wvaroperation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.wvaroperation_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::WVarCSG>(GetArena());
    _impl_.wvaroperation_ = reinterpret_cast<::commonmodule::WVarCSG*>(p);
  }
  return _impl_.wvaroperation_;
}
inline ::commonmodule::WVarCSG* PROTOBUF_NONNULL ESSPointStatus::mutable_wvaroperation()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00400000u;
  ::commonmodule::WVarCSG* _msg = _internal_mutable_wvaroperation();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSPointStatus.wVarOperation)
  return _msg;
}
inline void ESSPointStatus::set_allocated_wvaroperation(::commonmodule::WVarCSG* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.wvaroperation_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00400000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00400000u;
  }

  _impl_.wvaroperation_ = reinterpret_cast<::commonmodule::WVarCSG*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSPointStatus.wVarOperation)
}

// -------------------------------------------------------------------

// ESSEventAndStatusZGEN

// .commonmodule.LogicalNodeForEventAndStatus logicalNodeForEventAndStatus = 1 [(.uml.option_parent_message) = true];
inline bool ESSEventAndStatusZGEN::has_logicalnodeforeventandstatus() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.logicalnodeforeventandstatus_ != nullptr);
  return value;
}
inline const ::commonmodule::LogicalNodeForEventAndStatus& ESSEventAndStatusZGEN::_internal_logicalnodeforeventandstatus() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::LogicalNodeForEventAndStatus* p = _impl_.logicalnodeforeventandstatus_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::LogicalNodeForEventAndStatus&>(::commonmodule::_LogicalNodeForEventAndStatus_default_instance_);
}
inline const ::commonmodule::LogicalNodeForEventAndStatus& ESSEventAndStatusZGEN::logicalnodeforeventandstatus() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSEventAndStatusZGEN.logicalNodeForEventAndStatus)
  return _internal_logicalnodeforeventandstatus();
}
inline void ESSEventAndStatusZGEN::unsafe_arena_set_allocated_logicalnodeforeventandstatus(
    ::commonmodule::LogicalNodeForEventAndStatus* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.logicalnodeforeventandstatus_);
  }
  _impl_.logicalnodeforeventandstatus_ = reinterpret_cast<::commonmodule::LogicalNodeForEventAndStatus*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSEventAndStatusZGEN.logicalNodeForEventAndStatus)
}
inline ::commonmodule::LogicalNodeForEventAndStatus* PROTOBUF_NULLABLE ESSEventAndStatusZGEN::release_logicalnodeforeventandstatus() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::commonmodule::LogicalNodeForEventAndStatus* released = _impl_.logicalnodeforeventandstatus_;
  _impl_.logicalnodeforeventandstatus_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::LogicalNodeForEventAndStatus* PROTOBUF_NULLABLE ESSEventAndStatusZGEN::unsafe_arena_release_logicalnodeforeventandstatus() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSEventAndStatusZGEN.logicalNodeForEventAndStatus)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::commonmodule::LogicalNodeForEventAndStatus* temp = _impl_.logicalnodeforeventandstatus_;
  _impl_.logicalnodeforeventandstatus_ = nullptr;
  return temp;
}
inline ::commonmodule::LogicalNodeForEventAndStatus* PROTOBUF_NONNULL ESSEventAndStatusZGEN::_internal_mutable_logicalnodeforeventandstatus() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.logicalnodeforeventandstatus_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::LogicalNodeForEventAndStatus>(GetArena());
    _impl_.logicalnodeforeventandstatus_ = reinterpret_cast<::commonmodule::LogicalNodeForEventAndStatus*>(p);
  }
  return _impl_.logicalnodeforeventandstatus_;
}
inline ::commonmodule::LogicalNodeForEventAndStatus* PROTOBUF_NONNULL ESSEventAndStatusZGEN::mutable_logicalnodeforeventandstatus()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::commonmodule::LogicalNodeForEventAndStatus* _msg = _internal_mutable_logicalnodeforeventandstatus();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSEventAndStatusZGEN.logicalNodeForEventAndStatus)
  return _msg;
}
inline void ESSEventAndStatusZGEN::set_allocated_logicalnodeforeventandstatus(::commonmodule::LogicalNodeForEventAndStatus* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.logicalnodeforeventandstatus_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.logicalnodeforeventandstatus_ = reinterpret_cast<::commonmodule::LogicalNodeForEventAndStatus*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSEventAndStatusZGEN.logicalNodeForEventAndStatus)
}

// .commonmodule.StatusSPS AuxPwrSt = 2;
inline bool ESSEventAndStatusZGEN::has_auxpwrst() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.auxpwrst_ != nullptr);
  return value;
}
inline const ::commonmodule::StatusSPS& ESSEventAndStatusZGEN::_internal_auxpwrst() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::StatusSPS* p = _impl_.auxpwrst_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::StatusSPS&>(::commonmodule::_StatusSPS_default_instance_);
}
inline const ::commonmodule::StatusSPS& ESSEventAndStatusZGEN::auxpwrst() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSEventAndStatusZGEN.AuxPwrSt)
  return _internal_auxpwrst();
}
inline void ESSEventAndStatusZGEN::unsafe_arena_set_allocated_auxpwrst(
    ::commonmodule::StatusSPS* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.auxpwrst_);
  }
  _impl_.auxpwrst_ = reinterpret_cast<::commonmodule::StatusSPS*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSEventAndStatusZGEN.AuxPwrSt)
}
inline ::commonmodule::StatusSPS* PROTOBUF_NULLABLE ESSEventAndStatusZGEN::release_auxpwrst() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::commonmodule::StatusSPS* released = _impl_.auxpwrst_;
  _impl_.auxpwrst_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::StatusSPS* PROTOBUF_NULLABLE ESSEventAndStatusZGEN::unsafe_arena_release_auxpwrst() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSEventAndStatusZGEN.AuxPwrSt)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::commonmodule::StatusSPS* temp = _impl_.auxpwrst_;
  _impl_.auxpwrst_ = nullptr;
  return temp;
}
inline ::commonmodule::StatusSPS* PROTOBUF_NONNULL ESSEventAndStatusZGEN::_internal_mutable_auxpwrst() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.auxpwrst_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::StatusSPS>(GetArena());
    _impl_.auxpwrst_ = reinterpret_cast<::commonmodule::StatusSPS*>(p);
  }
  return _impl_.auxpwrst_;
}
inline ::commonmodule::StatusSPS* PROTOBUF_NONNULL ESSEventAndStatusZGEN::mutable_auxpwrst()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::commonmodule::StatusSPS* _msg = _internal_mutable_auxpwrst();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSEventAndStatusZGEN.AuxPwrSt)
  return _msg;
}
inline void ESSEventAndStatusZGEN::set_allocated_auxpwrst(::commonmodule::StatusSPS* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.auxpwrst_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.auxpwrst_ = reinterpret_cast<::commonmodule::StatusSPS*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSEventAndStatusZGEN.AuxPwrSt)
}

// .commonmodule.ENS_DynamicTestKind DynamicTest = 3;
inline bool ESSEventAndStatusZGEN::has_dynamictest() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.dynamictest_ != nullptr);
  return value;
}
inline const ::commonmodule::ENS_DynamicTestKind& ESSEventAndStatusZGEN::_internal_dynamictest() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::ENS_DynamicTestKind* p = _impl_.dynamictest_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::ENS_DynamicTestKind&>(::commonmodule::_ENS_DynamicTestKind_default_instance_);
}
inline const ::commonmodule::ENS_DynamicTestKind& ESSEventAndStatusZGEN::dynamictest() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSEventAndStatusZGEN.DynamicTest)
  return _internal_dynamictest();
}
inline void ESSEventAndStatusZGEN::unsafe_arena_set_allocated_dynamictest(
    ::commonmodule::ENS_DynamicTestKind* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.dynamictest_);
  }
  _impl_.dynamictest_ = reinterpret_cast<::commonmodule::ENS_DynamicTestKind*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSEventAndStatusZGEN.DynamicTest)
}
inline ::commonmodule::ENS_DynamicTestKind* PROTOBUF_NULLABLE ESSEventAndStatusZGEN::release_dynamictest() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::commonmodule::ENS_DynamicTestKind* released = _impl_.dynamictest_;
  _impl_.dynamictest_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::ENS_DynamicTestKind* PROTOBUF_NULLABLE ESSEventAndStatusZGEN::unsafe_arena_release_dynamictest() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSEventAndStatusZGEN.DynamicTest)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::commonmodule::ENS_DynamicTestKind* temp = _impl_.dynamictest_;
  _impl_.dynamictest_ = nullptr;
  return temp;
}
inline ::commonmodule::ENS_DynamicTestKind* PROTOBUF_NONNULL ESSEventAndStatusZGEN::_internal_mutable_dynamictest() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.dynamictest_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::ENS_DynamicTestKind>(GetArena());
    _impl_.dynamictest_ = reinterpret_cast<::commonmodule::ENS_DynamicTestKind*>(p);
  }
  return _impl_.dynamictest_;
}
inline ::commonmodule::ENS_DynamicTestKind* PROTOBUF_NONNULL ESSEventAndStatusZGEN::mutable_dynamictest()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::commonmodule::ENS_DynamicTestKind* _msg = _internal_mutable_dynamictest();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSEventAndStatusZGEN.DynamicTest)
  return _msg;
}
inline void ESSEventAndStatusZGEN::set_allocated_dynamictest(::commonmodule::ENS_DynamicTestKind* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.dynamictest_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.dynamictest_ = reinterpret_cast<::commonmodule::ENS_DynamicTestKind*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSEventAndStatusZGEN.DynamicTest)
}

// .commonmodule.StatusSPS EmgStop = 4;
inline bool ESSEventAndStatusZGEN::has_emgstop() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.emgstop_ != nullptr);
  return value;
}
inline const ::commonmodule::StatusSPS& ESSEventAndStatusZGEN::_internal_emgstop() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::StatusSPS* p = _impl_.emgstop_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::StatusSPS&>(::commonmodule::_StatusSPS_default_instance_);
}
inline const ::commonmodule::StatusSPS& ESSEventAndStatusZGEN::emgstop() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSEventAndStatusZGEN.EmgStop)
  return _internal_emgstop();
}
inline void ESSEventAndStatusZGEN::unsafe_arena_set_allocated_emgstop(
    ::commonmodule::StatusSPS* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.emgstop_);
  }
  _impl_.emgstop_ = reinterpret_cast<::commonmodule::StatusSPS*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSEventAndStatusZGEN.EmgStop)
}
inline ::commonmodule::StatusSPS* PROTOBUF_NULLABLE ESSEventAndStatusZGEN::release_emgstop() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::commonmodule::StatusSPS* released = _impl_.emgstop_;
  _impl_.emgstop_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::StatusSPS* PROTOBUF_NULLABLE ESSEventAndStatusZGEN::unsafe_arena_release_emgstop() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSEventAndStatusZGEN.EmgStop)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::commonmodule::StatusSPS* temp = _impl_.emgstop_;
  _impl_.emgstop_ = nullptr;
  return temp;
}
inline ::commonmodule::StatusSPS* PROTOBUF_NONNULL ESSEventAndStatusZGEN::_internal_mutable_emgstop() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.emgstop_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::StatusSPS>(GetArena());
    _impl_.emgstop_ = reinterpret_cast<::commonmodule::StatusSPS*>(p);
  }
  return _impl_.emgstop_;
}
inline ::commonmodule::StatusSPS* PROTOBUF_NONNULL ESSEventAndStatusZGEN::mutable_emgstop()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::commonmodule::StatusSPS* _msg = _internal_mutable_emgstop();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSEventAndStatusZGEN.EmgStop)
  return _msg;
}
inline void ESSEventAndStatusZGEN::set_allocated_emgstop(::commonmodule::StatusSPS* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.emgstop_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.emgstop_ = reinterpret_cast<::commonmodule::StatusSPS*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSEventAndStatusZGEN.EmgStop)
}

// .commonmodule.StatusSPS GnSynSt = 5;
inline bool ESSEventAndStatusZGEN::has_gnsynst() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.gnsynst_ != nullptr);
  return value;
}
inline const ::commonmodule::StatusSPS& ESSEventAndStatusZGEN::_internal_gnsynst() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::StatusSPS* p = _impl_.gnsynst_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::StatusSPS&>(::commonmodule::_StatusSPS_default_instance_);
}
inline const ::commonmodule::StatusSPS& ESSEventAndStatusZGEN::gnsynst() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSEventAndStatusZGEN.GnSynSt)
  return _internal_gnsynst();
}
inline void ESSEventAndStatusZGEN::unsafe_arena_set_allocated_gnsynst(
    ::commonmodule::StatusSPS* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.gnsynst_);
  }
  _impl_.gnsynst_ = reinterpret_cast<::commonmodule::StatusSPS*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSEventAndStatusZGEN.GnSynSt)
}
inline ::commonmodule::StatusSPS* PROTOBUF_NULLABLE ESSEventAndStatusZGEN::release_gnsynst() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::commonmodule::StatusSPS* released = _impl_.gnsynst_;
  _impl_.gnsynst_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::StatusSPS* PROTOBUF_NULLABLE ESSEventAndStatusZGEN::unsafe_arena_release_gnsynst() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSEventAndStatusZGEN.GnSynSt)

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::commonmodule::StatusSPS* temp = _impl_.gnsynst_;
  _impl_.gnsynst_ = nullptr;
  return temp;
}
inline ::commonmodule::StatusSPS* PROTOBUF_NONNULL ESSEventAndStatusZGEN::_internal_mutable_gnsynst() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.gnsynst_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::StatusSPS>(GetArena());
    _impl_.gnsynst_ = reinterpret_cast<::commonmodule::StatusSPS*>(p);
  }
  return _impl_.gnsynst_;
}
inline ::commonmodule::StatusSPS* PROTOBUF_NONNULL ESSEventAndStatusZGEN::mutable_gnsynst()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000010u;
  ::commonmodule::StatusSPS* _msg = _internal_mutable_gnsynst();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSEventAndStatusZGEN.GnSynSt)
  return _msg;
}
inline void ESSEventAndStatusZGEN::set_allocated_gnsynst(::commonmodule::StatusSPS* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.gnsynst_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }

  _impl_.gnsynst_ = reinterpret_cast<::commonmodule::StatusSPS*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSEventAndStatusZGEN.GnSynSt)
}

// .commonmodule.Optional_AlrmKind Alrm = 6;
inline bool ESSEventAndStatusZGEN::has_alrm() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.alrm_ != nullptr);
  return value;
}
inline const ::commonmodule::Optional_AlrmKind& ESSEventAndStatusZGEN::_internal_alrm() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::Optional_AlrmKind* p = _impl_.alrm_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::Optional_AlrmKind&>(::commonmodule::_Optional_AlrmKind_default_instance_);
}
inline const ::commonmodule::Optional_AlrmKind& ESSEventAndStatusZGEN::alrm() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSEventAndStatusZGEN.Alrm)
  return _internal_alrm();
}
inline void ESSEventAndStatusZGEN::unsafe_arena_set_allocated_alrm(
    ::commonmodule::Optional_AlrmKind* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.alrm_);
  }
  _impl_.alrm_ = reinterpret_cast<::commonmodule::Optional_AlrmKind*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSEventAndStatusZGEN.Alrm)
}
inline ::commonmodule::Optional_AlrmKind* PROTOBUF_NULLABLE ESSEventAndStatusZGEN::release_alrm() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::commonmodule::Optional_AlrmKind* released = _impl_.alrm_;
  _impl_.alrm_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::Optional_AlrmKind* PROTOBUF_NULLABLE ESSEventAndStatusZGEN::unsafe_arena_release_alrm() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSEventAndStatusZGEN.Alrm)

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::commonmodule::Optional_AlrmKind* temp = _impl_.alrm_;
  _impl_.alrm_ = nullptr;
  return temp;
}
inline ::commonmodule::Optional_AlrmKind* PROTOBUF_NONNULL ESSEventAndStatusZGEN::_internal_mutable_alrm() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.alrm_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::Optional_AlrmKind>(GetArena());
    _impl_.alrm_ = reinterpret_cast<::commonmodule::Optional_AlrmKind*>(p);
  }
  return _impl_.alrm_;
}
inline ::commonmodule::Optional_AlrmKind* PROTOBUF_NONNULL ESSEventAndStatusZGEN::mutable_alrm()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000020u;
  ::commonmodule::Optional_AlrmKind* _msg = _internal_mutable_alrm();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSEventAndStatusZGEN.Alrm)
  return _msg;
}
inline void ESSEventAndStatusZGEN::set_allocated_alrm(::commonmodule::Optional_AlrmKind* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.alrm_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }

  _impl_.alrm_ = reinterpret_cast<::commonmodule::Optional_AlrmKind*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSEventAndStatusZGEN.Alrm)
}

// .essmodule.ESSPointStatus PointStatus = 7;
inline bool ESSEventAndStatusZGEN::has_pointstatus() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pointstatus_ != nullptr);
  return value;
}
inline void ESSEventAndStatusZGEN::clear_pointstatus() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pointstatus_ != nullptr) _impl_.pointstatus_->Clear();
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline const ::essmodule::ESSPointStatus& ESSEventAndStatusZGEN::_internal_pointstatus() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::essmodule::ESSPointStatus* p = _impl_.pointstatus_;
  return p != nullptr ? *p : reinterpret_cast<const ::essmodule::ESSPointStatus&>(::essmodule::_ESSPointStatus_default_instance_);
}
inline const ::essmodule::ESSPointStatus& ESSEventAndStatusZGEN::pointstatus() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSEventAndStatusZGEN.PointStatus)
  return _internal_pointstatus();
}
inline void ESSEventAndStatusZGEN::unsafe_arena_set_allocated_pointstatus(
    ::essmodule::ESSPointStatus* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pointstatus_);
  }
  _impl_.pointstatus_ = reinterpret_cast<::essmodule::ESSPointStatus*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000040u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000040u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSEventAndStatusZGEN.PointStatus)
}
inline ::essmodule::ESSPointStatus* PROTOBUF_NULLABLE ESSEventAndStatusZGEN::release_pointstatus() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000040u;
  ::essmodule::ESSPointStatus* released = _impl_.pointstatus_;
  _impl_.pointstatus_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::essmodule::ESSPointStatus* PROTOBUF_NULLABLE ESSEventAndStatusZGEN::unsafe_arena_release_pointstatus() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSEventAndStatusZGEN.PointStatus)

  _impl_._has_bits_[0] &= ~0x00000040u;
  ::essmodule::ESSPointStatus* temp = _impl_.pointstatus_;
  _impl_.pointstatus_ = nullptr;
  return temp;
}
inline ::essmodule::ESSPointStatus* PROTOBUF_NONNULL ESSEventAndStatusZGEN::_internal_mutable_pointstatus() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pointstatus_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::essmodule::ESSPointStatus>(GetArena());
    _impl_.pointstatus_ = reinterpret_cast<::essmodule::ESSPointStatus*>(p);
  }
  return _impl_.pointstatus_;
}
inline ::essmodule::ESSPointStatus* PROTOBUF_NONNULL ESSEventAndStatusZGEN::mutable_pointstatus()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000040u;
  ::essmodule::ESSPointStatus* _msg = _internal_mutable_pointstatus();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSEventAndStatusZGEN.PointStatus)
  return _msg;
}
inline void ESSEventAndStatusZGEN::set_allocated_pointstatus(::essmodule::ESSPointStatus* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pointstatus_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000040u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000040u;
  }

  _impl_.pointstatus_ = reinterpret_cast<::essmodule::ESSPointStatus*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSEventAndStatusZGEN.PointStatus)
}

// -------------------------------------------------------------------

// ESSEventZGEN

// .essmodule.ESSEventAndStatusZGEN eSSEventAndStatusZGEN = 1 [(.uml.option_parent_message) = true];
inline bool ESSEventZGEN::has_esseventandstatuszgen() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.esseventandstatuszgen_ != nullptr);
  return value;
}
inline void ESSEventZGEN::clear_esseventandstatuszgen() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.esseventandstatuszgen_ != nullptr) _impl_.esseventandstatuszgen_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::essmodule::ESSEventAndStatusZGEN& ESSEventZGEN::_internal_esseventandstatuszgen() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::essmodule::ESSEventAndStatusZGEN* p = _impl_.esseventandstatuszgen_;
  return p != nullptr ? *p : reinterpret_cast<const ::essmodule::ESSEventAndStatusZGEN&>(::essmodule::_ESSEventAndStatusZGEN_default_instance_);
}
inline const ::essmodule::ESSEventAndStatusZGEN& ESSEventZGEN::esseventandstatuszgen() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSEventZGEN.eSSEventAndStatusZGEN)
  return _internal_esseventandstatuszgen();
}
inline void ESSEventZGEN::unsafe_arena_set_allocated_esseventandstatuszgen(
    ::essmodule::ESSEventAndStatusZGEN* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.esseventandstatuszgen_);
  }
  _impl_.esseventandstatuszgen_ = reinterpret_cast<::essmodule::ESSEventAndStatusZGEN*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSEventZGEN.eSSEventAndStatusZGEN)
}
inline ::essmodule::ESSEventAndStatusZGEN* PROTOBUF_NULLABLE ESSEventZGEN::release_esseventandstatuszgen() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::essmodule::ESSEventAndStatusZGEN* released = _impl_.esseventandstatuszgen_;
  _impl_.esseventandstatuszgen_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::essmodule::ESSEventAndStatusZGEN* PROTOBUF_NULLABLE ESSEventZGEN::unsafe_arena_release_esseventandstatuszgen() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSEventZGEN.eSSEventAndStatusZGEN)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::essmodule::ESSEventAndStatusZGEN* temp = _impl_.esseventandstatuszgen_;
  _impl_.esseventandstatuszgen_ = nullptr;
  return temp;
}
inline ::essmodule::ESSEventAndStatusZGEN* PROTOBUF_NONNULL ESSEventZGEN::_internal_mutable_esseventandstatuszgen() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.esseventandstatuszgen_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::essmodule::ESSEventAndStatusZGEN>(GetArena());
    _impl_.esseventandstatuszgen_ = reinterpret_cast<::essmodule::ESSEventAndStatusZGEN*>(p);
  }
  return _impl_.esseventandstatuszgen_;
}
inline ::essmodule::ESSEventAndStatusZGEN* PROTOBUF_NONNULL ESSEventZGEN::mutable_esseventandstatuszgen()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::essmodule::ESSEventAndStatusZGEN* _msg = _internal_mutable_esseventandstatuszgen();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSEventZGEN.eSSEventAndStatusZGEN)
  return _msg;
}
inline void ESSEventZGEN::set_allocated_esseventandstatuszgen(::essmodule::ESSEventAndStatusZGEN* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.esseventandstatuszgen_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.esseventandstatuszgen_ = reinterpret_cast<::essmodule::ESSEventAndStatusZGEN*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSEventZGEN.eSSEventAndStatusZGEN)
}

// -------------------------------------------------------------------

// ESSEvent

// .commonmodule.EventValue eventValue = 1 [(.uml.option_parent_message) = true];
inline bool ESSEvent::has_eventvalue() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.eventvalue_ != nullptr);
  return value;
}
inline const ::commonmodule::EventValue& ESSEvent::_internal_eventvalue() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::EventValue* p = _impl_.eventvalue_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::EventValue&>(::commonmodule::_EventValue_default_instance_);
}
inline const ::commonmodule::EventValue& ESSEvent::eventvalue() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSEvent.eventValue)
  return _internal_eventvalue();
}
inline void ESSEvent::unsafe_arena_set_allocated_eventvalue(
    ::commonmodule::EventValue* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.eventvalue_);
  }
  _impl_.eventvalue_ = reinterpret_cast<::commonmodule::EventValue*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSEvent.eventValue)
}
inline ::commonmodule::EventValue* PROTOBUF_NULLABLE ESSEvent::release_eventvalue() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::commonmodule::EventValue* released = _impl_.eventvalue_;
  _impl_.eventvalue_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::EventValue* PROTOBUF_NULLABLE ESSEvent::unsafe_arena_release_eventvalue() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSEvent.eventValue)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::commonmodule::EventValue* temp = _impl_.eventvalue_;
  _impl_.eventvalue_ = nullptr;
  return temp;
}
inline ::commonmodule::EventValue* PROTOBUF_NONNULL ESSEvent::_internal_mutable_eventvalue() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.eventvalue_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::EventValue>(GetArena());
    _impl_.eventvalue_ = reinterpret_cast<::commonmodule::EventValue*>(p);
  }
  return _impl_.eventvalue_;
}
inline ::commonmodule::EventValue* PROTOBUF_NONNULL ESSEvent::mutable_eventvalue()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::commonmodule::EventValue* _msg = _internal_mutable_eventvalue();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSEvent.eventValue)
  return _msg;
}
inline void ESSEvent::set_allocated_eventvalue(::commonmodule::EventValue* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.eventvalue_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.eventvalue_ = reinterpret_cast<::commonmodule::EventValue*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSEvent.eventValue)
}

// .essmodule.EssEventZBAT essEventZBAT = 2;
inline bool ESSEvent::has_esseventzbat() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.esseventzbat_ != nullptr);
  return value;
}
inline void ESSEvent::clear_esseventzbat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.esseventzbat_ != nullptr) _impl_.esseventzbat_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::essmodule::EssEventZBAT& ESSEvent::_internal_esseventzbat() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::essmodule::EssEventZBAT* p = _impl_.esseventzbat_;
  return p != nullptr ? *p : reinterpret_cast<const ::essmodule::EssEventZBAT&>(::essmodule::_EssEventZBAT_default_instance_);
}
inline const ::essmodule::EssEventZBAT& ESSEvent::esseventzbat() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSEvent.essEventZBAT)
  return _internal_esseventzbat();
}
inline void ESSEvent::unsafe_arena_set_allocated_esseventzbat(
    ::essmodule::EssEventZBAT* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.esseventzbat_);
  }
  _impl_.esseventzbat_ = reinterpret_cast<::essmodule::EssEventZBAT*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSEvent.essEventZBAT)
}
inline ::essmodule::EssEventZBAT* PROTOBUF_NULLABLE ESSEvent::release_esseventzbat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::essmodule::EssEventZBAT* released = _impl_.esseventzbat_;
  _impl_.esseventzbat_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::essmodule::EssEventZBAT* PROTOBUF_NULLABLE ESSEvent::unsafe_arena_release_esseventzbat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSEvent.essEventZBAT)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::essmodule::EssEventZBAT* temp = _impl_.esseventzbat_;
  _impl_.esseventzbat_ = nullptr;
  return temp;
}
inline ::essmodule::EssEventZBAT* PROTOBUF_NONNULL ESSEvent::_internal_mutable_esseventzbat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.esseventzbat_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::essmodule::EssEventZBAT>(GetArena());
    _impl_.esseventzbat_ = reinterpret_cast<::essmodule::EssEventZBAT*>(p);
  }
  return _impl_.esseventzbat_;
}
inline ::essmodule::EssEventZBAT* PROTOBUF_NONNULL ESSEvent::mutable_esseventzbat()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::essmodule::EssEventZBAT* _msg = _internal_mutable_esseventzbat();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSEvent.essEventZBAT)
  return _msg;
}
inline void ESSEvent::set_allocated_esseventzbat(::essmodule::EssEventZBAT* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.esseventzbat_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.esseventzbat_ = reinterpret_cast<::essmodule::EssEventZBAT*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSEvent.essEventZBAT)
}

// .essmodule.ESSEventZGEN essEventZGEN = 3;
inline bool ESSEvent::has_esseventzgen() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.esseventzgen_ != nullptr);
  return value;
}
inline void ESSEvent::clear_esseventzgen() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.esseventzgen_ != nullptr) _impl_.esseventzgen_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::essmodule::ESSEventZGEN& ESSEvent::_internal_esseventzgen() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::essmodule::ESSEventZGEN* p = _impl_.esseventzgen_;
  return p != nullptr ? *p : reinterpret_cast<const ::essmodule::ESSEventZGEN&>(::essmodule::_ESSEventZGEN_default_instance_);
}
inline const ::essmodule::ESSEventZGEN& ESSEvent::esseventzgen() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSEvent.essEventZGEN)
  return _internal_esseventzgen();
}
inline void ESSEvent::unsafe_arena_set_allocated_esseventzgen(
    ::essmodule::ESSEventZGEN* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.esseventzgen_);
  }
  _impl_.esseventzgen_ = reinterpret_cast<::essmodule::ESSEventZGEN*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSEvent.essEventZGEN)
}
inline ::essmodule::ESSEventZGEN* PROTOBUF_NULLABLE ESSEvent::release_esseventzgen() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::essmodule::ESSEventZGEN* released = _impl_.esseventzgen_;
  _impl_.esseventzgen_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::essmodule::ESSEventZGEN* PROTOBUF_NULLABLE ESSEvent::unsafe_arena_release_esseventzgen() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSEvent.essEventZGEN)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::essmodule::ESSEventZGEN* temp = _impl_.esseventzgen_;
  _impl_.esseventzgen_ = nullptr;
  return temp;
}
inline ::essmodule::ESSEventZGEN* PROTOBUF_NONNULL ESSEvent::_internal_mutable_esseventzgen() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.esseventzgen_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::essmodule::ESSEventZGEN>(GetArena());
    _impl_.esseventzgen_ = reinterpret_cast<::essmodule::ESSEventZGEN*>(p);
  }
  return _impl_.esseventzgen_;
}
inline ::essmodule::ESSEventZGEN* PROTOBUF_NONNULL ESSEvent::mutable_esseventzgen()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::essmodule::ESSEventZGEN* _msg = _internal_mutable_esseventzgen();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSEvent.essEventZGEN)
  return _msg;
}
inline void ESSEvent::set_allocated_esseventzgen(::essmodule::ESSEventZGEN* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.esseventzgen_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.esseventzgen_ = reinterpret_cast<::essmodule::ESSEventZGEN*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSEvent.essEventZGEN)
}

// -------------------------------------------------------------------

// ESSEventProfile

// .commonmodule.EventMessageInfo eventMessageInfo = 1 [(.uml.option_parent_message) = true];
inline bool ESSEventProfile::has_eventmessageinfo() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.eventmessageinfo_ != nullptr);
  return value;
}
inline const ::commonmodule::EventMessageInfo& ESSEventProfile::_internal_eventmessageinfo() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::EventMessageInfo* p = _impl_.eventmessageinfo_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::EventMessageInfo&>(::commonmodule::_EventMessageInfo_default_instance_);
}
inline const ::commonmodule::EventMessageInfo& ESSEventProfile::eventmessageinfo() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSEventProfile.eventMessageInfo)
  return _internal_eventmessageinfo();
}
inline void ESSEventProfile::unsafe_arena_set_allocated_eventmessageinfo(
    ::commonmodule::EventMessageInfo* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.eventmessageinfo_);
  }
  _impl_.eventmessageinfo_ = reinterpret_cast<::commonmodule::EventMessageInfo*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSEventProfile.eventMessageInfo)
}
inline ::commonmodule::EventMessageInfo* PROTOBUF_NULLABLE ESSEventProfile::release_eventmessageinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::commonmodule::EventMessageInfo* released = _impl_.eventmessageinfo_;
  _impl_.eventmessageinfo_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::EventMessageInfo* PROTOBUF_NULLABLE ESSEventProfile::unsafe_arena_release_eventmessageinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSEventProfile.eventMessageInfo)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::commonmodule::EventMessageInfo* temp = _impl_.eventmessageinfo_;
  _impl_.eventmessageinfo_ = nullptr;
  return temp;
}
inline ::commonmodule::EventMessageInfo* PROTOBUF_NONNULL ESSEventProfile::_internal_mutable_eventmessageinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.eventmessageinfo_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::EventMessageInfo>(GetArena());
    _impl_.eventmessageinfo_ = reinterpret_cast<::commonmodule::EventMessageInfo*>(p);
  }
  return _impl_.eventmessageinfo_;
}
inline ::commonmodule::EventMessageInfo* PROTOBUF_NONNULL ESSEventProfile::mutable_eventmessageinfo()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::commonmodule::EventMessageInfo* _msg = _internal_mutable_eventmessageinfo();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSEventProfile.eventMessageInfo)
  return _msg;
}
inline void ESSEventProfile::set_allocated_eventmessageinfo(::commonmodule::EventMessageInfo* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.eventmessageinfo_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.eventmessageinfo_ = reinterpret_cast<::commonmodule::EventMessageInfo*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSEventProfile.eventMessageInfo)
}

// .commonmodule.ESS ess = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
inline bool ESSEventProfile::has_ess() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.ess_ != nullptr);
  return value;
}
inline const ::commonmodule::ESS& ESSEventProfile::_internal_ess() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::ESS* p = _impl_.ess_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::ESS&>(::commonmodule::_ESS_default_instance_);
}
inline const ::commonmodule::ESS& ESSEventProfile::ess() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSEventProfile.ess)
  return _internal_ess();
}
inline void ESSEventProfile::unsafe_arena_set_allocated_ess(
    ::commonmodule::ESS* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.ess_);
  }
  _impl_.ess_ = reinterpret_cast<::commonmodule::ESS*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSEventProfile.ess)
}
inline ::commonmodule::ESS* PROTOBUF_NULLABLE ESSEventProfile::release_ess() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::commonmodule::ESS* released = _impl_.ess_;
  _impl_.ess_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::ESS* PROTOBUF_NULLABLE ESSEventProfile::unsafe_arena_release_ess() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSEventProfile.ess)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::commonmodule::ESS* temp = _impl_.ess_;
  _impl_.ess_ = nullptr;
  return temp;
}
inline ::commonmodule::ESS* PROTOBUF_NONNULL ESSEventProfile::_internal_mutable_ess() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.ess_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::ESS>(GetArena());
    _impl_.ess_ = reinterpret_cast<::commonmodule::ESS*>(p);
  }
  return _impl_.ess_;
}
inline ::commonmodule::ESS* PROTOBUF_NONNULL ESSEventProfile::mutable_ess()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::commonmodule::ESS* _msg = _internal_mutable_ess();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSEventProfile.ess)
  return _msg;
}
inline void ESSEventProfile::set_allocated_ess(::commonmodule::ESS* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.ess_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.ess_ = reinterpret_cast<::commonmodule::ESS*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSEventProfile.ess)
}

// .essmodule.ESSEvent essEvent = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
inline bool ESSEventProfile::has_essevent() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.essevent_ != nullptr);
  return value;
}
inline void ESSEventProfile::clear_essevent() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.essevent_ != nullptr) _impl_.essevent_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::essmodule::ESSEvent& ESSEventProfile::_internal_essevent() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::essmodule::ESSEvent* p = _impl_.essevent_;
  return p != nullptr ? *p : reinterpret_cast<const ::essmodule::ESSEvent&>(::essmodule::_ESSEvent_default_instance_);
}
inline const ::essmodule::ESSEvent& ESSEventProfile::essevent() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSEventProfile.essEvent)
  return _internal_essevent();
}
inline void ESSEventProfile::unsafe_arena_set_allocated_essevent(
    ::essmodule::ESSEvent* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.essevent_);
  }
  _impl_.essevent_ = reinterpret_cast<::essmodule::ESSEvent*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSEventProfile.essEvent)
}
inline ::essmodule::ESSEvent* PROTOBUF_NULLABLE ESSEventProfile::release_essevent() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::essmodule::ESSEvent* released = _impl_.essevent_;
  _impl_.essevent_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::essmodule::ESSEvent* PROTOBUF_NULLABLE ESSEventProfile::unsafe_arena_release_essevent() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSEventProfile.essEvent)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::essmodule::ESSEvent* temp = _impl_.essevent_;
  _impl_.essevent_ = nullptr;
  return temp;
}
inline ::essmodule::ESSEvent* PROTOBUF_NONNULL ESSEventProfile::_internal_mutable_essevent() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.essevent_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::essmodule::ESSEvent>(GetArena());
    _impl_.essevent_ = reinterpret_cast<::essmodule::ESSEvent*>(p);
  }
  return _impl_.essevent_;
}
inline ::essmodule::ESSEvent* PROTOBUF_NONNULL ESSEventProfile::mutable_essevent()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::essmodule::ESSEvent* _msg = _internal_mutable_essevent();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSEventProfile.essEvent)
  return _msg;
}
inline void ESSEventProfile::set_allocated_essevent(::essmodule::ESSEvent* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.essevent_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.essevent_ = reinterpret_cast<::essmodule::ESSEvent*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSEventProfile.essEvent)
}

// -------------------------------------------------------------------

// ESSReading

// .commonmodule.ConductingEquipmentTerminalReading conductingEquipmentTerminalReading = 1 [(.uml.option_parent_message) = true];
inline bool ESSReading::has_conductingequipmentterminalreading() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.conductingequipmentterminalreading_ != nullptr);
  return value;
}
inline const ::commonmodule::ConductingEquipmentTerminalReading& ESSReading::_internal_conductingequipmentterminalreading() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::ConductingEquipmentTerminalReading* p = _impl_.conductingequipmentterminalreading_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::ConductingEquipmentTerminalReading&>(::commonmodule::_ConductingEquipmentTerminalReading_default_instance_);
}
inline const ::commonmodule::ConductingEquipmentTerminalReading& ESSReading::conductingequipmentterminalreading() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSReading.conductingEquipmentTerminalReading)
  return _internal_conductingequipmentterminalreading();
}
inline void ESSReading::unsafe_arena_set_allocated_conductingequipmentterminalreading(
    ::commonmodule::ConductingEquipmentTerminalReading* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.conductingequipmentterminalreading_);
  }
  _impl_.conductingequipmentterminalreading_ = reinterpret_cast<::commonmodule::ConductingEquipmentTerminalReading*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSReading.conductingEquipmentTerminalReading)
}
inline ::commonmodule::ConductingEquipmentTerminalReading* PROTOBUF_NULLABLE ESSReading::release_conductingequipmentterminalreading() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::commonmodule::ConductingEquipmentTerminalReading* released = _impl_.conductingequipmentterminalreading_;
  _impl_.conductingequipmentterminalreading_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::ConductingEquipmentTerminalReading* PROTOBUF_NULLABLE ESSReading::unsafe_arena_release_conductingequipmentterminalreading() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSReading.conductingEquipmentTerminalReading)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::commonmodule::ConductingEquipmentTerminalReading* temp = _impl_.conductingequipmentterminalreading_;
  _impl_.conductingequipmentterminalreading_ = nullptr;
  return temp;
}
inline ::commonmodule::ConductingEquipmentTerminalReading* PROTOBUF_NONNULL ESSReading::_internal_mutable_conductingequipmentterminalreading() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.conductingequipmentterminalreading_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::ConductingEquipmentTerminalReading>(GetArena());
    _impl_.conductingequipmentterminalreading_ = reinterpret_cast<::commonmodule::ConductingEquipmentTerminalReading*>(p);
  }
  return _impl_.conductingequipmentterminalreading_;
}
inline ::commonmodule::ConductingEquipmentTerminalReading* PROTOBUF_NONNULL ESSReading::mutable_conductingequipmentterminalreading()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::commonmodule::ConductingEquipmentTerminalReading* _msg = _internal_mutable_conductingequipmentterminalreading();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSReading.conductingEquipmentTerminalReading)
  return _msg;
}
inline void ESSReading::set_allocated_conductingequipmentterminalreading(::commonmodule::ConductingEquipmentTerminalReading* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.conductingequipmentterminalreading_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.conductingequipmentterminalreading_ = reinterpret_cast<::commonmodule::ConductingEquipmentTerminalReading*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSReading.conductingEquipmentTerminalReading)
}

// .commonmodule.PhaseMMTN phaseMMTN = 2;
inline bool ESSReading::has_phasemmtn() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.phasemmtn_ != nullptr);
  return value;
}
inline const ::commonmodule::PhaseMMTN& ESSReading::_internal_phasemmtn() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::PhaseMMTN* p = _impl_.phasemmtn_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::PhaseMMTN&>(::commonmodule::_PhaseMMTN_default_instance_);
}
inline const ::commonmodule::PhaseMMTN& ESSReading::phasemmtn() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSReading.phaseMMTN)
  return _internal_phasemmtn();
}
inline void ESSReading::unsafe_arena_set_allocated_phasemmtn(
    ::commonmodule::PhaseMMTN* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.phasemmtn_);
  }
  _impl_.phasemmtn_ = reinterpret_cast<::commonmodule::PhaseMMTN*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSReading.phaseMMTN)
}
inline ::commonmodule::PhaseMMTN* PROTOBUF_NULLABLE ESSReading::release_phasemmtn() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::commonmodule::PhaseMMTN* released = _impl_.phasemmtn_;
  _impl_.phasemmtn_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::PhaseMMTN* PROTOBUF_NULLABLE ESSReading::unsafe_arena_release_phasemmtn() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSReading.phaseMMTN)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::commonmodule::PhaseMMTN* temp = _impl_.phasemmtn_;
  _impl_.phasemmtn_ = nullptr;
  return temp;
}
inline ::commonmodule::PhaseMMTN* PROTOBUF_NONNULL ESSReading::_internal_mutable_phasemmtn() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.phasemmtn_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::PhaseMMTN>(GetArena());
    _impl_.phasemmtn_ = reinterpret_cast<::commonmodule::PhaseMMTN*>(p);
  }
  return _impl_.phasemmtn_;
}
inline ::commonmodule::PhaseMMTN* PROTOBUF_NONNULL ESSReading::mutable_phasemmtn()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::commonmodule::PhaseMMTN* _msg = _internal_mutable_phasemmtn();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSReading.phaseMMTN)
  return _msg;
}
inline void ESSReading::set_allocated_phasemmtn(::commonmodule::PhaseMMTN* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.phasemmtn_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.phasemmtn_ = reinterpret_cast<::commonmodule::PhaseMMTN*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSReading.phaseMMTN)
}

// .commonmodule.ReadingMMTR readingMMTR = 3;
inline bool ESSReading::has_readingmmtr() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.readingmmtr_ != nullptr);
  return value;
}
inline const ::commonmodule::ReadingMMTR& ESSReading::_internal_readingmmtr() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::ReadingMMTR* p = _impl_.readingmmtr_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::ReadingMMTR&>(::commonmodule::_ReadingMMTR_default_instance_);
}
inline const ::commonmodule::ReadingMMTR& ESSReading::readingmmtr() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSReading.readingMMTR)
  return _internal_readingmmtr();
}
inline void ESSReading::unsafe_arena_set_allocated_readingmmtr(
    ::commonmodule::ReadingMMTR* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.readingmmtr_);
  }
  _impl_.readingmmtr_ = reinterpret_cast<::commonmodule::ReadingMMTR*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSReading.readingMMTR)
}
inline ::commonmodule::ReadingMMTR* PROTOBUF_NULLABLE ESSReading::release_readingmmtr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::commonmodule::ReadingMMTR* released = _impl_.readingmmtr_;
  _impl_.readingmmtr_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::ReadingMMTR* PROTOBUF_NULLABLE ESSReading::unsafe_arena_release_readingmmtr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSReading.readingMMTR)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::commonmodule::ReadingMMTR* temp = _impl_.readingmmtr_;
  _impl_.readingmmtr_ = nullptr;
  return temp;
}
inline ::commonmodule::ReadingMMTR* PROTOBUF_NONNULL ESSReading::_internal_mutable_readingmmtr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.readingmmtr_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::ReadingMMTR>(GetArena());
    _impl_.readingmmtr_ = reinterpret_cast<::commonmodule::ReadingMMTR*>(p);
  }
  return _impl_.readingmmtr_;
}
inline ::commonmodule::ReadingMMTR* PROTOBUF_NONNULL ESSReading::mutable_readingmmtr()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::commonmodule::ReadingMMTR* _msg = _internal_mutable_readingmmtr();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSReading.readingMMTR)
  return _msg;
}
inline void ESSReading::set_allocated_readingmmtr(::commonmodule::ReadingMMTR* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.readingmmtr_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.readingmmtr_ = reinterpret_cast<::commonmodule::ReadingMMTR*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSReading.readingMMTR)
}

// .commonmodule.ReadingMMXU readingMMXU = 4;
inline bool ESSReading::has_readingmmxu() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.readingmmxu_ != nullptr);
  return value;
}
inline const ::commonmodule::ReadingMMXU& ESSReading::_internal_readingmmxu() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::ReadingMMXU* p = _impl_.readingmmxu_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::ReadingMMXU&>(::commonmodule::_ReadingMMXU_default_instance_);
}
inline const ::commonmodule::ReadingMMXU& ESSReading::readingmmxu() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSReading.readingMMXU)
  return _internal_readingmmxu();
}
inline void ESSReading::unsafe_arena_set_allocated_readingmmxu(
    ::commonmodule::ReadingMMXU* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.readingmmxu_);
  }
  _impl_.readingmmxu_ = reinterpret_cast<::commonmodule::ReadingMMXU*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSReading.readingMMXU)
}
inline ::commonmodule::ReadingMMXU* PROTOBUF_NULLABLE ESSReading::release_readingmmxu() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::commonmodule::ReadingMMXU* released = _impl_.readingmmxu_;
  _impl_.readingmmxu_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::ReadingMMXU* PROTOBUF_NULLABLE ESSReading::unsafe_arena_release_readingmmxu() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSReading.readingMMXU)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::commonmodule::ReadingMMXU* temp = _impl_.readingmmxu_;
  _impl_.readingmmxu_ = nullptr;
  return temp;
}
inline ::commonmodule::ReadingMMXU* PROTOBUF_NONNULL ESSReading::_internal_mutable_readingmmxu() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.readingmmxu_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::ReadingMMXU>(GetArena());
    _impl_.readingmmxu_ = reinterpret_cast<::commonmodule::ReadingMMXU*>(p);
  }
  return _impl_.readingmmxu_;
}
inline ::commonmodule::ReadingMMXU* PROTOBUF_NONNULL ESSReading::mutable_readingmmxu()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::commonmodule::ReadingMMXU* _msg = _internal_mutable_readingmmxu();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSReading.readingMMXU)
  return _msg;
}
inline void ESSReading::set_allocated_readingmmxu(::commonmodule::ReadingMMXU* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.readingmmxu_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.readingmmxu_ = reinterpret_cast<::commonmodule::ReadingMMXU*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSReading.readingMMXU)
}

// .commonmodule.ReadingMMDC readingMMDC = 5;
inline bool ESSReading::has_readingmmdc() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.readingmmdc_ != nullptr);
  return value;
}
inline const ::commonmodule::ReadingMMDC& ESSReading::_internal_readingmmdc() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::ReadingMMDC* p = _impl_.readingmmdc_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::ReadingMMDC&>(::commonmodule::_ReadingMMDC_default_instance_);
}
inline const ::commonmodule::ReadingMMDC& ESSReading::readingmmdc() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSReading.readingMMDC)
  return _internal_readingmmdc();
}
inline void ESSReading::unsafe_arena_set_allocated_readingmmdc(
    ::commonmodule::ReadingMMDC* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.readingmmdc_);
  }
  _impl_.readingmmdc_ = reinterpret_cast<::commonmodule::ReadingMMDC*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSReading.readingMMDC)
}
inline ::commonmodule::ReadingMMDC* PROTOBUF_NULLABLE ESSReading::release_readingmmdc() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::commonmodule::ReadingMMDC* released = _impl_.readingmmdc_;
  _impl_.readingmmdc_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::ReadingMMDC* PROTOBUF_NULLABLE ESSReading::unsafe_arena_release_readingmmdc() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSReading.readingMMDC)

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::commonmodule::ReadingMMDC* temp = _impl_.readingmmdc_;
  _impl_.readingmmdc_ = nullptr;
  return temp;
}
inline ::commonmodule::ReadingMMDC* PROTOBUF_NONNULL ESSReading::_internal_mutable_readingmmdc() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.readingmmdc_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::ReadingMMDC>(GetArena());
    _impl_.readingmmdc_ = reinterpret_cast<::commonmodule::ReadingMMDC*>(p);
  }
  return _impl_.readingmmdc_;
}
inline ::commonmodule::ReadingMMDC* PROTOBUF_NONNULL ESSReading::mutable_readingmmdc()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000010u;
  ::commonmodule::ReadingMMDC* _msg = _internal_mutable_readingmmdc();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSReading.readingMMDC)
  return _msg;
}
inline void ESSReading::set_allocated_readingmmdc(::commonmodule::ReadingMMDC* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.readingmmdc_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }

  _impl_.readingmmdc_ = reinterpret_cast<::commonmodule::ReadingMMDC*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSReading.readingMMDC)
}

// -------------------------------------------------------------------

// ESSReadingProfile

// .commonmodule.ReadingMessageInfo readingMessageInfo = 1 [(.uml.option_parent_message) = true];
inline bool ESSReadingProfile::has_readingmessageinfo() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.readingmessageinfo_ != nullptr);
  return value;
}
inline const ::commonmodule::ReadingMessageInfo& ESSReadingProfile::_internal_readingmessageinfo() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::ReadingMessageInfo* p = _impl_.readingmessageinfo_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::ReadingMessageInfo&>(::commonmodule::_ReadingMessageInfo_default_instance_);
}
inline const ::commonmodule::ReadingMessageInfo& ESSReadingProfile::readingmessageinfo() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSReadingProfile.readingMessageInfo)
  return _internal_readingmessageinfo();
}
inline void ESSReadingProfile::unsafe_arena_set_allocated_readingmessageinfo(
    ::commonmodule::ReadingMessageInfo* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.readingmessageinfo_);
  }
  _impl_.readingmessageinfo_ = reinterpret_cast<::commonmodule::ReadingMessageInfo*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSReadingProfile.readingMessageInfo)
}
inline ::commonmodule::ReadingMessageInfo* PROTOBUF_NULLABLE ESSReadingProfile::release_readingmessageinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::commonmodule::ReadingMessageInfo* released = _impl_.readingmessageinfo_;
  _impl_.readingmessageinfo_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::ReadingMessageInfo* PROTOBUF_NULLABLE ESSReadingProfile::unsafe_arena_release_readingmessageinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSReadingProfile.readingMessageInfo)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::commonmodule::ReadingMessageInfo* temp = _impl_.readingmessageinfo_;
  _impl_.readingmessageinfo_ = nullptr;
  return temp;
}
inline ::commonmodule::ReadingMessageInfo* PROTOBUF_NONNULL ESSReadingProfile::_internal_mutable_readingmessageinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.readingmessageinfo_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::ReadingMessageInfo>(GetArena());
    _impl_.readingmessageinfo_ = reinterpret_cast<::commonmodule::ReadingMessageInfo*>(p);
  }
  return _impl_.readingmessageinfo_;
}
inline ::commonmodule::ReadingMessageInfo* PROTOBUF_NONNULL ESSReadingProfile::mutable_readingmessageinfo()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::commonmodule::ReadingMessageInfo* _msg = _internal_mutable_readingmessageinfo();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSReadingProfile.readingMessageInfo)
  return _msg;
}
inline void ESSReadingProfile::set_allocated_readingmessageinfo(::commonmodule::ReadingMessageInfo* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.readingmessageinfo_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.readingmessageinfo_ = reinterpret_cast<::commonmodule::ReadingMessageInfo*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSReadingProfile.readingMessageInfo)
}

// .commonmodule.ESS ess = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
inline bool ESSReadingProfile::has_ess() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.ess_ != nullptr);
  return value;
}
inline const ::commonmodule::ESS& ESSReadingProfile::_internal_ess() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::ESS* p = _impl_.ess_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::ESS&>(::commonmodule::_ESS_default_instance_);
}
inline const ::commonmodule::ESS& ESSReadingProfile::ess() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSReadingProfile.ess)
  return _internal_ess();
}
inline void ESSReadingProfile::unsafe_arena_set_allocated_ess(
    ::commonmodule::ESS* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.ess_);
  }
  _impl_.ess_ = reinterpret_cast<::commonmodule::ESS*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSReadingProfile.ess)
}
inline ::commonmodule::ESS* PROTOBUF_NULLABLE ESSReadingProfile::release_ess() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::commonmodule::ESS* released = _impl_.ess_;
  _impl_.ess_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::ESS* PROTOBUF_NULLABLE ESSReadingProfile::unsafe_arena_release_ess() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSReadingProfile.ess)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::commonmodule::ESS* temp = _impl_.ess_;
  _impl_.ess_ = nullptr;
  return temp;
}
inline ::commonmodule::ESS* PROTOBUF_NONNULL ESSReadingProfile::_internal_mutable_ess() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.ess_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::ESS>(GetArena());
    _impl_.ess_ = reinterpret_cast<::commonmodule::ESS*>(p);
  }
  return _impl_.ess_;
}
inline ::commonmodule::ESS* PROTOBUF_NONNULL ESSReadingProfile::mutable_ess()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::commonmodule::ESS* _msg = _internal_mutable_ess();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSReadingProfile.ess)
  return _msg;
}
inline void ESSReadingProfile::set_allocated_ess(::commonmodule::ESS* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.ess_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.ess_ = reinterpret_cast<::commonmodule::ESS*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSReadingProfile.ess)
}

// .essmodule.ESSReading essReading = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
inline bool ESSReadingProfile::has_essreading() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.essreading_ != nullptr);
  return value;
}
inline void ESSReadingProfile::clear_essreading() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.essreading_ != nullptr) _impl_.essreading_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::essmodule::ESSReading& ESSReadingProfile::_internal_essreading() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::essmodule::ESSReading* p = _impl_.essreading_;
  return p != nullptr ? *p : reinterpret_cast<const ::essmodule::ESSReading&>(::essmodule::_ESSReading_default_instance_);
}
inline const ::essmodule::ESSReading& ESSReadingProfile::essreading() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSReadingProfile.essReading)
  return _internal_essreading();
}
inline void ESSReadingProfile::unsafe_arena_set_allocated_essreading(
    ::essmodule::ESSReading* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.essreading_);
  }
  _impl_.essreading_ = reinterpret_cast<::essmodule::ESSReading*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSReadingProfile.essReading)
}
inline ::essmodule::ESSReading* PROTOBUF_NULLABLE ESSReadingProfile::release_essreading() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::essmodule::ESSReading* released = _impl_.essreading_;
  _impl_.essreading_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::essmodule::ESSReading* PROTOBUF_NULLABLE ESSReadingProfile::unsafe_arena_release_essreading() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSReadingProfile.essReading)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::essmodule::ESSReading* temp = _impl_.essreading_;
  _impl_.essreading_ = nullptr;
  return temp;
}
inline ::essmodule::ESSReading* PROTOBUF_NONNULL ESSReadingProfile::_internal_mutable_essreading() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.essreading_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::essmodule::ESSReading>(GetArena());
    _impl_.essreading_ = reinterpret_cast<::essmodule::ESSReading*>(p);
  }
  return _impl_.essreading_;
}
inline ::essmodule::ESSReading* PROTOBUF_NONNULL ESSReadingProfile::mutable_essreading()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::essmodule::ESSReading* _msg = _internal_mutable_essreading();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSReadingProfile.essReading)
  return _msg;
}
inline void ESSReadingProfile::set_allocated_essreading(::essmodule::ESSReading* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.essreading_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.essreading_ = reinterpret_cast<::essmodule::ESSReading*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSReadingProfile.essReading)
}

// -------------------------------------------------------------------

// EssStatusZBAT

// .commonmodule.LogicalNodeForEventAndStatus logicalNodeForEventAndStatus = 1 [(.uml.option_parent_message) = true];
inline bool EssStatusZBAT::has_logicalnodeforeventandstatus() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.logicalnodeforeventandstatus_ != nullptr);
  return value;
}
inline const ::commonmodule::LogicalNodeForEventAndStatus& EssStatusZBAT::_internal_logicalnodeforeventandstatus() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::LogicalNodeForEventAndStatus* p = _impl_.logicalnodeforeventandstatus_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::LogicalNodeForEventAndStatus&>(::commonmodule::_LogicalNodeForEventAndStatus_default_instance_);
}
inline const ::commonmodule::LogicalNodeForEventAndStatus& EssStatusZBAT::logicalnodeforeventandstatus() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.EssStatusZBAT.logicalNodeForEventAndStatus)
  return _internal_logicalnodeforeventandstatus();
}
inline void EssStatusZBAT::unsafe_arena_set_allocated_logicalnodeforeventandstatus(
    ::commonmodule::LogicalNodeForEventAndStatus* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.logicalnodeforeventandstatus_);
  }
  _impl_.logicalnodeforeventandstatus_ = reinterpret_cast<::commonmodule::LogicalNodeForEventAndStatus*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.EssStatusZBAT.logicalNodeForEventAndStatus)
}
inline ::commonmodule::LogicalNodeForEventAndStatus* PROTOBUF_NULLABLE EssStatusZBAT::release_logicalnodeforeventandstatus() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::commonmodule::LogicalNodeForEventAndStatus* released = _impl_.logicalnodeforeventandstatus_;
  _impl_.logicalnodeforeventandstatus_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::LogicalNodeForEventAndStatus* PROTOBUF_NULLABLE EssStatusZBAT::unsafe_arena_release_logicalnodeforeventandstatus() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.EssStatusZBAT.logicalNodeForEventAndStatus)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::commonmodule::LogicalNodeForEventAndStatus* temp = _impl_.logicalnodeforeventandstatus_;
  _impl_.logicalnodeforeventandstatus_ = nullptr;
  return temp;
}
inline ::commonmodule::LogicalNodeForEventAndStatus* PROTOBUF_NONNULL EssStatusZBAT::_internal_mutable_logicalnodeforeventandstatus() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.logicalnodeforeventandstatus_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::LogicalNodeForEventAndStatus>(GetArena());
    _impl_.logicalnodeforeventandstatus_ = reinterpret_cast<::commonmodule::LogicalNodeForEventAndStatus*>(p);
  }
  return _impl_.logicalnodeforeventandstatus_;
}
inline ::commonmodule::LogicalNodeForEventAndStatus* PROTOBUF_NONNULL EssStatusZBAT::mutable_logicalnodeforeventandstatus()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::commonmodule::LogicalNodeForEventAndStatus* _msg = _internal_mutable_logicalnodeforeventandstatus();
  // @@protoc_insertion_point(field_mutable:essmodule.EssStatusZBAT.logicalNodeForEventAndStatus)
  return _msg;
}
inline void EssStatusZBAT::set_allocated_logicalnodeforeventandstatus(::commonmodule::LogicalNodeForEventAndStatus* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.logicalnodeforeventandstatus_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.logicalnodeforeventandstatus_ = reinterpret_cast<::commonmodule::LogicalNodeForEventAndStatus*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.EssStatusZBAT.logicalNodeForEventAndStatus)
}

// .commonmodule.StatusSPS BatSt = 2;
inline bool EssStatusZBAT::has_batst() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.batst_ != nullptr);
  return value;
}
inline const ::commonmodule::StatusSPS& EssStatusZBAT::_internal_batst() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::StatusSPS* p = _impl_.batst_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::StatusSPS&>(::commonmodule::_StatusSPS_default_instance_);
}
inline const ::commonmodule::StatusSPS& EssStatusZBAT::batst() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.EssStatusZBAT.BatSt)
  return _internal_batst();
}
inline void EssStatusZBAT::unsafe_arena_set_allocated_batst(
    ::commonmodule::StatusSPS* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.batst_);
  }
  _impl_.batst_ = reinterpret_cast<::commonmodule::StatusSPS*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.EssStatusZBAT.BatSt)
}
inline ::commonmodule::StatusSPS* PROTOBUF_NULLABLE EssStatusZBAT::release_batst() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::commonmodule::StatusSPS* released = _impl_.batst_;
  _impl_.batst_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::StatusSPS* PROTOBUF_NULLABLE EssStatusZBAT::unsafe_arena_release_batst() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.EssStatusZBAT.BatSt)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::commonmodule::StatusSPS* temp = _impl_.batst_;
  _impl_.batst_ = nullptr;
  return temp;
}
inline ::commonmodule::StatusSPS* PROTOBUF_NONNULL EssStatusZBAT::_internal_mutable_batst() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.batst_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::StatusSPS>(GetArena());
    _impl_.batst_ = reinterpret_cast<::commonmodule::StatusSPS*>(p);
  }
  return _impl_.batst_;
}
inline ::commonmodule::StatusSPS* PROTOBUF_NONNULL EssStatusZBAT::mutable_batst()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::commonmodule::StatusSPS* _msg = _internal_mutable_batst();
  // @@protoc_insertion_point(field_mutable:essmodule.EssStatusZBAT.BatSt)
  return _msg;
}
inline void EssStatusZBAT::set_allocated_batst(::commonmodule::StatusSPS* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.batst_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.batst_ = reinterpret_cast<::commonmodule::StatusSPS*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.EssStatusZBAT.BatSt)
}

// .commonmodule.ENG_GridConnectModeKind GriMod = 3;
inline bool EssStatusZBAT::has_grimod() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.grimod_ != nullptr);
  return value;
}
inline const ::commonmodule::ENG_GridConnectModeKind& EssStatusZBAT::_internal_grimod() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::ENG_GridConnectModeKind* p = _impl_.grimod_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::ENG_GridConnectModeKind&>(::commonmodule::_ENG_GridConnectModeKind_default_instance_);
}
inline const ::commonmodule::ENG_GridConnectModeKind& EssStatusZBAT::grimod() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.EssStatusZBAT.GriMod)
  return _internal_grimod();
}
inline void EssStatusZBAT::unsafe_arena_set_allocated_grimod(
    ::commonmodule::ENG_GridConnectModeKind* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.grimod_);
  }
  _impl_.grimod_ = reinterpret_cast<::commonmodule::ENG_GridConnectModeKind*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.EssStatusZBAT.GriMod)
}
inline ::commonmodule::ENG_GridConnectModeKind* PROTOBUF_NULLABLE EssStatusZBAT::release_grimod() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::commonmodule::ENG_GridConnectModeKind* released = _impl_.grimod_;
  _impl_.grimod_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::ENG_GridConnectModeKind* PROTOBUF_NULLABLE EssStatusZBAT::unsafe_arena_release_grimod() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.EssStatusZBAT.GriMod)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::commonmodule::ENG_GridConnectModeKind* temp = _impl_.grimod_;
  _impl_.grimod_ = nullptr;
  return temp;
}
inline ::commonmodule::ENG_GridConnectModeKind* PROTOBUF_NONNULL EssStatusZBAT::_internal_mutable_grimod() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.grimod_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::ENG_GridConnectModeKind>(GetArena());
    _impl_.grimod_ = reinterpret_cast<::commonmodule::ENG_GridConnectModeKind*>(p);
  }
  return _impl_.grimod_;
}
inline ::commonmodule::ENG_GridConnectModeKind* PROTOBUF_NONNULL EssStatusZBAT::mutable_grimod()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::commonmodule::ENG_GridConnectModeKind* _msg = _internal_mutable_grimod();
  // @@protoc_insertion_point(field_mutable:essmodule.EssStatusZBAT.GriMod)
  return _msg;
}
inline void EssStatusZBAT::set_allocated_grimod(::commonmodule::ENG_GridConnectModeKind* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.grimod_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.grimod_ = reinterpret_cast<::commonmodule::ENG_GridConnectModeKind*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.EssStatusZBAT.GriMod)
}

// .commonmodule.MV Soc = 4;
inline bool EssStatusZBAT::has_soc() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.soc_ != nullptr);
  return value;
}
inline const ::commonmodule::MV& EssStatusZBAT::_internal_soc() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::MV* p = _impl_.soc_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::MV&>(::commonmodule::_MV_default_instance_);
}
inline const ::commonmodule::MV& EssStatusZBAT::soc() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.EssStatusZBAT.Soc)
  return _internal_soc();
}
inline void EssStatusZBAT::unsafe_arena_set_allocated_soc(
    ::commonmodule::MV* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.soc_);
  }
  _impl_.soc_ = reinterpret_cast<::commonmodule::MV*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.EssStatusZBAT.Soc)
}
inline ::commonmodule::MV* PROTOBUF_NULLABLE EssStatusZBAT::release_soc() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::commonmodule::MV* released = _impl_.soc_;
  _impl_.soc_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::MV* PROTOBUF_NULLABLE EssStatusZBAT::unsafe_arena_release_soc() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.EssStatusZBAT.Soc)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::commonmodule::MV* temp = _impl_.soc_;
  _impl_.soc_ = nullptr;
  return temp;
}
inline ::commonmodule::MV* PROTOBUF_NONNULL EssStatusZBAT::_internal_mutable_soc() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.soc_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::MV>(GetArena());
    _impl_.soc_ = reinterpret_cast<::commonmodule::MV*>(p);
  }
  return _impl_.soc_;
}
inline ::commonmodule::MV* PROTOBUF_NONNULL EssStatusZBAT::mutable_soc()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::commonmodule::MV* _msg = _internal_mutable_soc();
  // @@protoc_insertion_point(field_mutable:essmodule.EssStatusZBAT.Soc)
  return _msg;
}
inline void EssStatusZBAT::set_allocated_soc(::commonmodule::MV* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.soc_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.soc_ = reinterpret_cast<::commonmodule::MV*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.EssStatusZBAT.Soc)
}

// .commonmodule.StatusSPS Stdby = 5;
inline bool EssStatusZBAT::has_stdby() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.stdby_ != nullptr);
  return value;
}
inline const ::commonmodule::StatusSPS& EssStatusZBAT::_internal_stdby() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::StatusSPS* p = _impl_.stdby_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::StatusSPS&>(::commonmodule::_StatusSPS_default_instance_);
}
inline const ::commonmodule::StatusSPS& EssStatusZBAT::stdby() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.EssStatusZBAT.Stdby)
  return _internal_stdby();
}
inline void EssStatusZBAT::unsafe_arena_set_allocated_stdby(
    ::commonmodule::StatusSPS* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.stdby_);
  }
  _impl_.stdby_ = reinterpret_cast<::commonmodule::StatusSPS*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.EssStatusZBAT.Stdby)
}
inline ::commonmodule::StatusSPS* PROTOBUF_NULLABLE EssStatusZBAT::release_stdby() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::commonmodule::StatusSPS* released = _impl_.stdby_;
  _impl_.stdby_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::StatusSPS* PROTOBUF_NULLABLE EssStatusZBAT::unsafe_arena_release_stdby() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.EssStatusZBAT.Stdby)

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::commonmodule::StatusSPS* temp = _impl_.stdby_;
  _impl_.stdby_ = nullptr;
  return temp;
}
inline ::commonmodule::StatusSPS* PROTOBUF_NONNULL EssStatusZBAT::_internal_mutable_stdby() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.stdby_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::StatusSPS>(GetArena());
    _impl_.stdby_ = reinterpret_cast<::commonmodule::StatusSPS*>(p);
  }
  return _impl_.stdby_;
}
inline ::commonmodule::StatusSPS* PROTOBUF_NONNULL EssStatusZBAT::mutable_stdby()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000010u;
  ::commonmodule::StatusSPS* _msg = _internal_mutable_stdby();
  // @@protoc_insertion_point(field_mutable:essmodule.EssStatusZBAT.Stdby)
  return _msg;
}
inline void EssStatusZBAT::set_allocated_stdby(::commonmodule::StatusSPS* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.stdby_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }

  _impl_.stdby_ = reinterpret_cast<::commonmodule::StatusSPS*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.EssStatusZBAT.Stdby)
}

// .commonmodule.MV SoH = 6;
inline bool EssStatusZBAT::has_soh() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.soh_ != nullptr);
  return value;
}
inline const ::commonmodule::MV& EssStatusZBAT::_internal_soh() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::MV* p = _impl_.soh_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::MV&>(::commonmodule::_MV_default_instance_);
}
inline const ::commonmodule::MV& EssStatusZBAT::soh() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.EssStatusZBAT.SoH)
  return _internal_soh();
}
inline void EssStatusZBAT::unsafe_arena_set_allocated_soh(
    ::commonmodule::MV* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.soh_);
  }
  _impl_.soh_ = reinterpret_cast<::commonmodule::MV*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.EssStatusZBAT.SoH)
}
inline ::commonmodule::MV* PROTOBUF_NULLABLE EssStatusZBAT::release_soh() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::commonmodule::MV* released = _impl_.soh_;
  _impl_.soh_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::MV* PROTOBUF_NULLABLE EssStatusZBAT::unsafe_arena_release_soh() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.EssStatusZBAT.SoH)

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::commonmodule::MV* temp = _impl_.soh_;
  _impl_.soh_ = nullptr;
  return temp;
}
inline ::commonmodule::MV* PROTOBUF_NONNULL EssStatusZBAT::_internal_mutable_soh() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.soh_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::MV>(GetArena());
    _impl_.soh_ = reinterpret_cast<::commonmodule::MV*>(p);
  }
  return _impl_.soh_;
}
inline ::commonmodule::MV* PROTOBUF_NONNULL EssStatusZBAT::mutable_soh()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000020u;
  ::commonmodule::MV* _msg = _internal_mutable_soh();
  // @@protoc_insertion_point(field_mutable:essmodule.EssStatusZBAT.SoH)
  return _msg;
}
inline void EssStatusZBAT::set_allocated_soh(::commonmodule::MV* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.soh_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }

  _impl_.soh_ = reinterpret_cast<::commonmodule::MV*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.EssStatusZBAT.SoH)
}

// .commonmodule.MV WHAvail = 7;
inline bool EssStatusZBAT::has_whavail() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.whavail_ != nullptr);
  return value;
}
inline const ::commonmodule::MV& EssStatusZBAT::_internal_whavail() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::MV* p = _impl_.whavail_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::MV&>(::commonmodule::_MV_default_instance_);
}
inline const ::commonmodule::MV& EssStatusZBAT::whavail() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.EssStatusZBAT.WHAvail)
  return _internal_whavail();
}
inline void EssStatusZBAT::unsafe_arena_set_allocated_whavail(
    ::commonmodule::MV* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.whavail_);
  }
  _impl_.whavail_ = reinterpret_cast<::commonmodule::MV*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000040u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000040u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.EssStatusZBAT.WHAvail)
}
inline ::commonmodule::MV* PROTOBUF_NULLABLE EssStatusZBAT::release_whavail() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000040u;
  ::commonmodule::MV* released = _impl_.whavail_;
  _impl_.whavail_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::MV* PROTOBUF_NULLABLE EssStatusZBAT::unsafe_arena_release_whavail() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.EssStatusZBAT.WHAvail)

  _impl_._has_bits_[0] &= ~0x00000040u;
  ::commonmodule::MV* temp = _impl_.whavail_;
  _impl_.whavail_ = nullptr;
  return temp;
}
inline ::commonmodule::MV* PROTOBUF_NONNULL EssStatusZBAT::_internal_mutable_whavail() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.whavail_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::MV>(GetArena());
    _impl_.whavail_ = reinterpret_cast<::commonmodule::MV*>(p);
  }
  return _impl_.whavail_;
}
inline ::commonmodule::MV* PROTOBUF_NONNULL EssStatusZBAT::mutable_whavail()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000040u;
  ::commonmodule::MV* _msg = _internal_mutable_whavail();
  // @@protoc_insertion_point(field_mutable:essmodule.EssStatusZBAT.WHAvail)
  return _msg;
}
inline void EssStatusZBAT::set_allocated_whavail(::commonmodule::MV* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.whavail_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000040u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000040u;
  }

  _impl_.whavail_ = reinterpret_cast<::commonmodule::MV*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.EssStatusZBAT.WHAvail)
}

// -------------------------------------------------------------------

// ESSStatusZGEN

// .essmodule.ESSEventAndStatusZGEN eSSEventAndStatusZGEN = 1 [(.uml.option_parent_message) = true];
inline bool ESSStatusZGEN::has_esseventandstatuszgen() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.esseventandstatuszgen_ != nullptr);
  return value;
}
inline void ESSStatusZGEN::clear_esseventandstatuszgen() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.esseventandstatuszgen_ != nullptr) _impl_.esseventandstatuszgen_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::essmodule::ESSEventAndStatusZGEN& ESSStatusZGEN::_internal_esseventandstatuszgen() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::essmodule::ESSEventAndStatusZGEN* p = _impl_.esseventandstatuszgen_;
  return p != nullptr ? *p : reinterpret_cast<const ::essmodule::ESSEventAndStatusZGEN&>(::essmodule::_ESSEventAndStatusZGEN_default_instance_);
}
inline const ::essmodule::ESSEventAndStatusZGEN& ESSStatusZGEN::esseventandstatuszgen() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSStatusZGEN.eSSEventAndStatusZGEN)
  return _internal_esseventandstatuszgen();
}
inline void ESSStatusZGEN::unsafe_arena_set_allocated_esseventandstatuszgen(
    ::essmodule::ESSEventAndStatusZGEN* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.esseventandstatuszgen_);
  }
  _impl_.esseventandstatuszgen_ = reinterpret_cast<::essmodule::ESSEventAndStatusZGEN*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSStatusZGEN.eSSEventAndStatusZGEN)
}
inline ::essmodule::ESSEventAndStatusZGEN* PROTOBUF_NULLABLE ESSStatusZGEN::release_esseventandstatuszgen() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::essmodule::ESSEventAndStatusZGEN* released = _impl_.esseventandstatuszgen_;
  _impl_.esseventandstatuszgen_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::essmodule::ESSEventAndStatusZGEN* PROTOBUF_NULLABLE ESSStatusZGEN::unsafe_arena_release_esseventandstatuszgen() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSStatusZGEN.eSSEventAndStatusZGEN)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::essmodule::ESSEventAndStatusZGEN* temp = _impl_.esseventandstatuszgen_;
  _impl_.esseventandstatuszgen_ = nullptr;
  return temp;
}
inline ::essmodule::ESSEventAndStatusZGEN* PROTOBUF_NONNULL ESSStatusZGEN::_internal_mutable_esseventandstatuszgen() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.esseventandstatuszgen_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::essmodule::ESSEventAndStatusZGEN>(GetArena());
    _impl_.esseventandstatuszgen_ = reinterpret_cast<::essmodule::ESSEventAndStatusZGEN*>(p);
  }
  return _impl_.esseventandstatuszgen_;
}
inline ::essmodule::ESSEventAndStatusZGEN* PROTOBUF_NONNULL ESSStatusZGEN::mutable_esseventandstatuszgen()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::essmodule::ESSEventAndStatusZGEN* _msg = _internal_mutable_esseventandstatuszgen();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSStatusZGEN.eSSEventAndStatusZGEN)
  return _msg;
}
inline void ESSStatusZGEN::set_allocated_esseventandstatuszgen(::essmodule::ESSEventAndStatusZGEN* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.esseventandstatuszgen_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.esseventandstatuszgen_ = reinterpret_cast<::essmodule::ESSEventAndStatusZGEN*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSStatusZGEN.eSSEventAndStatusZGEN)
}

// -------------------------------------------------------------------

// ESSStatus

// .commonmodule.StatusValue statusValue = 1 [(.uml.option_parent_message) = true];
inline bool ESSStatus::has_statusvalue() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.statusvalue_ != nullptr);
  return value;
}
inline const ::commonmodule::StatusValue& ESSStatus::_internal_statusvalue() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::StatusValue* p = _impl_.statusvalue_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::StatusValue&>(::commonmodule::_StatusValue_default_instance_);
}
inline const ::commonmodule::StatusValue& ESSStatus::statusvalue() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSStatus.statusValue)
  return _internal_statusvalue();
}
inline void ESSStatus::unsafe_arena_set_allocated_statusvalue(
    ::commonmodule::StatusValue* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.statusvalue_);
  }
  _impl_.statusvalue_ = reinterpret_cast<::commonmodule::StatusValue*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSStatus.statusValue)
}
inline ::commonmodule::StatusValue* PROTOBUF_NULLABLE ESSStatus::release_statusvalue() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::commonmodule::StatusValue* released = _impl_.statusvalue_;
  _impl_.statusvalue_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::StatusValue* PROTOBUF_NULLABLE ESSStatus::unsafe_arena_release_statusvalue() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSStatus.statusValue)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::commonmodule::StatusValue* temp = _impl_.statusvalue_;
  _impl_.statusvalue_ = nullptr;
  return temp;
}
inline ::commonmodule::StatusValue* PROTOBUF_NONNULL ESSStatus::_internal_mutable_statusvalue() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.statusvalue_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::StatusValue>(GetArena());
    _impl_.statusvalue_ = reinterpret_cast<::commonmodule::StatusValue*>(p);
  }
  return _impl_.statusvalue_;
}
inline ::commonmodule::StatusValue* PROTOBUF_NONNULL ESSStatus::mutable_statusvalue()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::commonmodule::StatusValue* _msg = _internal_mutable_statusvalue();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSStatus.statusValue)
  return _msg;
}
inline void ESSStatus::set_allocated_statusvalue(::commonmodule::StatusValue* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.statusvalue_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.statusvalue_ = reinterpret_cast<::commonmodule::StatusValue*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSStatus.statusValue)
}

// .essmodule.EssStatusZBAT essStatusZBAT = 2;
inline bool ESSStatus::has_essstatuszbat() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.essstatuszbat_ != nullptr);
  return value;
}
inline void ESSStatus::clear_essstatuszbat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.essstatuszbat_ != nullptr) _impl_.essstatuszbat_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::essmodule::EssStatusZBAT& ESSStatus::_internal_essstatuszbat() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::essmodule::EssStatusZBAT* p = _impl_.essstatuszbat_;
  return p != nullptr ? *p : reinterpret_cast<const ::essmodule::EssStatusZBAT&>(::essmodule::_EssStatusZBAT_default_instance_);
}
inline const ::essmodule::EssStatusZBAT& ESSStatus::essstatuszbat() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSStatus.essStatusZBAT)
  return _internal_essstatuszbat();
}
inline void ESSStatus::unsafe_arena_set_allocated_essstatuszbat(
    ::essmodule::EssStatusZBAT* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.essstatuszbat_);
  }
  _impl_.essstatuszbat_ = reinterpret_cast<::essmodule::EssStatusZBAT*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSStatus.essStatusZBAT)
}
inline ::essmodule::EssStatusZBAT* PROTOBUF_NULLABLE ESSStatus::release_essstatuszbat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::essmodule::EssStatusZBAT* released = _impl_.essstatuszbat_;
  _impl_.essstatuszbat_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::essmodule::EssStatusZBAT* PROTOBUF_NULLABLE ESSStatus::unsafe_arena_release_essstatuszbat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSStatus.essStatusZBAT)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::essmodule::EssStatusZBAT* temp = _impl_.essstatuszbat_;
  _impl_.essstatuszbat_ = nullptr;
  return temp;
}
inline ::essmodule::EssStatusZBAT* PROTOBUF_NONNULL ESSStatus::_internal_mutable_essstatuszbat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.essstatuszbat_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::essmodule::EssStatusZBAT>(GetArena());
    _impl_.essstatuszbat_ = reinterpret_cast<::essmodule::EssStatusZBAT*>(p);
  }
  return _impl_.essstatuszbat_;
}
inline ::essmodule::EssStatusZBAT* PROTOBUF_NONNULL ESSStatus::mutable_essstatuszbat()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::essmodule::EssStatusZBAT* _msg = _internal_mutable_essstatuszbat();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSStatus.essStatusZBAT)
  return _msg;
}
inline void ESSStatus::set_allocated_essstatuszbat(::essmodule::EssStatusZBAT* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.essstatuszbat_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.essstatuszbat_ = reinterpret_cast<::essmodule::EssStatusZBAT*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSStatus.essStatusZBAT)
}

// .essmodule.ESSStatusZGEN essStatusZGEN = 3;
inline bool ESSStatus::has_essstatuszgen() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.essstatuszgen_ != nullptr);
  return value;
}
inline void ESSStatus::clear_essstatuszgen() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.essstatuszgen_ != nullptr) _impl_.essstatuszgen_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::essmodule::ESSStatusZGEN& ESSStatus::_internal_essstatuszgen() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::essmodule::ESSStatusZGEN* p = _impl_.essstatuszgen_;
  return p != nullptr ? *p : reinterpret_cast<const ::essmodule::ESSStatusZGEN&>(::essmodule::_ESSStatusZGEN_default_instance_);
}
inline const ::essmodule::ESSStatusZGEN& ESSStatus::essstatuszgen() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSStatus.essStatusZGEN)
  return _internal_essstatuszgen();
}
inline void ESSStatus::unsafe_arena_set_allocated_essstatuszgen(
    ::essmodule::ESSStatusZGEN* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.essstatuszgen_);
  }
  _impl_.essstatuszgen_ = reinterpret_cast<::essmodule::ESSStatusZGEN*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSStatus.essStatusZGEN)
}
inline ::essmodule::ESSStatusZGEN* PROTOBUF_NULLABLE ESSStatus::release_essstatuszgen() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::essmodule::ESSStatusZGEN* released = _impl_.essstatuszgen_;
  _impl_.essstatuszgen_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::essmodule::ESSStatusZGEN* PROTOBUF_NULLABLE ESSStatus::unsafe_arena_release_essstatuszgen() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSStatus.essStatusZGEN)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::essmodule::ESSStatusZGEN* temp = _impl_.essstatuszgen_;
  _impl_.essstatuszgen_ = nullptr;
  return temp;
}
inline ::essmodule::ESSStatusZGEN* PROTOBUF_NONNULL ESSStatus::_internal_mutable_essstatuszgen() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.essstatuszgen_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::essmodule::ESSStatusZGEN>(GetArena());
    _impl_.essstatuszgen_ = reinterpret_cast<::essmodule::ESSStatusZGEN*>(p);
  }
  return _impl_.essstatuszgen_;
}
inline ::essmodule::ESSStatusZGEN* PROTOBUF_NONNULL ESSStatus::mutable_essstatuszgen()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::essmodule::ESSStatusZGEN* _msg = _internal_mutable_essstatuszgen();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSStatus.essStatusZGEN)
  return _msg;
}
inline void ESSStatus::set_allocated_essstatuszgen(::essmodule::ESSStatusZGEN* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.essstatuszgen_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.essstatuszgen_ = reinterpret_cast<::essmodule::ESSStatusZGEN*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSStatus.essStatusZGEN)
}

// -------------------------------------------------------------------

// ESSStatusProfile

// .commonmodule.StatusMessageInfo statusMessageInfo = 1 [(.uml.option_parent_message) = true];
inline bool ESSStatusProfile::has_statusmessageinfo() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.statusmessageinfo_ != nullptr);
  return value;
}
inline const ::commonmodule::StatusMessageInfo& ESSStatusProfile::_internal_statusmessageinfo() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::StatusMessageInfo* p = _impl_.statusmessageinfo_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::StatusMessageInfo&>(::commonmodule::_StatusMessageInfo_default_instance_);
}
inline const ::commonmodule::StatusMessageInfo& ESSStatusProfile::statusmessageinfo() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSStatusProfile.statusMessageInfo)
  return _internal_statusmessageinfo();
}
inline void ESSStatusProfile::unsafe_arena_set_allocated_statusmessageinfo(
    ::commonmodule::StatusMessageInfo* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.statusmessageinfo_);
  }
  _impl_.statusmessageinfo_ = reinterpret_cast<::commonmodule::StatusMessageInfo*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSStatusProfile.statusMessageInfo)
}
inline ::commonmodule::StatusMessageInfo* PROTOBUF_NULLABLE ESSStatusProfile::release_statusmessageinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::commonmodule::StatusMessageInfo* released = _impl_.statusmessageinfo_;
  _impl_.statusmessageinfo_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::StatusMessageInfo* PROTOBUF_NULLABLE ESSStatusProfile::unsafe_arena_release_statusmessageinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSStatusProfile.statusMessageInfo)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::commonmodule::StatusMessageInfo* temp = _impl_.statusmessageinfo_;
  _impl_.statusmessageinfo_ = nullptr;
  return temp;
}
inline ::commonmodule::StatusMessageInfo* PROTOBUF_NONNULL ESSStatusProfile::_internal_mutable_statusmessageinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.statusmessageinfo_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::StatusMessageInfo>(GetArena());
    _impl_.statusmessageinfo_ = reinterpret_cast<::commonmodule::StatusMessageInfo*>(p);
  }
  return _impl_.statusmessageinfo_;
}
inline ::commonmodule::StatusMessageInfo* PROTOBUF_NONNULL ESSStatusProfile::mutable_statusmessageinfo()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::commonmodule::StatusMessageInfo* _msg = _internal_mutable_statusmessageinfo();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSStatusProfile.statusMessageInfo)
  return _msg;
}
inline void ESSStatusProfile::set_allocated_statusmessageinfo(::commonmodule::StatusMessageInfo* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.statusmessageinfo_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.statusmessageinfo_ = reinterpret_cast<::commonmodule::StatusMessageInfo*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSStatusProfile.statusMessageInfo)
}

// .commonmodule.ESS ess = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
inline bool ESSStatusProfile::has_ess() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.ess_ != nullptr);
  return value;
}
inline const ::commonmodule::ESS& ESSStatusProfile::_internal_ess() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::ESS* p = _impl_.ess_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::ESS&>(::commonmodule::_ESS_default_instance_);
}
inline const ::commonmodule::ESS& ESSStatusProfile::ess() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSStatusProfile.ess)
  return _internal_ess();
}
inline void ESSStatusProfile::unsafe_arena_set_allocated_ess(
    ::commonmodule::ESS* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.ess_);
  }
  _impl_.ess_ = reinterpret_cast<::commonmodule::ESS*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSStatusProfile.ess)
}
inline ::commonmodule::ESS* PROTOBUF_NULLABLE ESSStatusProfile::release_ess() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::commonmodule::ESS* released = _impl_.ess_;
  _impl_.ess_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::ESS* PROTOBUF_NULLABLE ESSStatusProfile::unsafe_arena_release_ess() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSStatusProfile.ess)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::commonmodule::ESS* temp = _impl_.ess_;
  _impl_.ess_ = nullptr;
  return temp;
}
inline ::commonmodule::ESS* PROTOBUF_NONNULL ESSStatusProfile::_internal_mutable_ess() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.ess_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::ESS>(GetArena());
    _impl_.ess_ = reinterpret_cast<::commonmodule::ESS*>(p);
  }
  return _impl_.ess_;
}
inline ::commonmodule::ESS* PROTOBUF_NONNULL ESSStatusProfile::mutable_ess()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::commonmodule::ESS* _msg = _internal_mutable_ess();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSStatusProfile.ess)
  return _msg;
}
inline void ESSStatusProfile::set_allocated_ess(::commonmodule::ESS* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.ess_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.ess_ = reinterpret_cast<::commonmodule::ESS*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSStatusProfile.ess)
}

// .essmodule.ESSStatus essStatus = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
inline bool ESSStatusProfile::has_essstatus() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.essstatus_ != nullptr);
  return value;
}
inline void ESSStatusProfile::clear_essstatus() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.essstatus_ != nullptr) _impl_.essstatus_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::essmodule::ESSStatus& ESSStatusProfile::_internal_essstatus() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::essmodule::ESSStatus* p = _impl_.essstatus_;
  return p != nullptr ? *p : reinterpret_cast<const ::essmodule::ESSStatus&>(::essmodule::_ESSStatus_default_instance_);
}
inline const ::essmodule::ESSStatus& ESSStatusProfile::essstatus() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:essmodule.ESSStatusProfile.essStatus)
  return _internal_essstatus();
}
inline void ESSStatusProfile::unsafe_arena_set_allocated_essstatus(
    ::essmodule::ESSStatus* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.essstatus_);
  }
  _impl_.essstatus_ = reinterpret_cast<::essmodule::ESSStatus*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:essmodule.ESSStatusProfile.essStatus)
}
inline ::essmodule::ESSStatus* PROTOBUF_NULLABLE ESSStatusProfile::release_essstatus() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::essmodule::ESSStatus* released = _impl_.essstatus_;
  _impl_.essstatus_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::essmodule::ESSStatus* PROTOBUF_NULLABLE ESSStatusProfile::unsafe_arena_release_essstatus() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:essmodule.ESSStatusProfile.essStatus)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::essmodule::ESSStatus* temp = _impl_.essstatus_;
  _impl_.essstatus_ = nullptr;
  return temp;
}
inline ::essmodule::ESSStatus* PROTOBUF_NONNULL ESSStatusProfile::_internal_mutable_essstatus() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.essstatus_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::essmodule::ESSStatus>(GetArena());
    _impl_.essstatus_ = reinterpret_cast<::essmodule::ESSStatus*>(p);
  }
  return _impl_.essstatus_;
}
inline ::essmodule::ESSStatus* PROTOBUF_NONNULL ESSStatusProfile::mutable_essstatus()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::essmodule::ESSStatus* _msg = _internal_mutable_essstatus();
  // @@protoc_insertion_point(field_mutable:essmodule.ESSStatusProfile.essStatus)
  return _msg;
}
inline void ESSStatusProfile::set_allocated_essstatus(::essmodule::ESSStatus* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.essstatus_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.essstatus_ = reinterpret_cast<::essmodule::ESSStatus*>(value);
  // @@protoc_insertion_point(field_set_allocated:essmodule.ESSStatusProfile.essStatus)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace essmodule


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // essmodule_2fessmodule_2eproto_2epb_2eh
