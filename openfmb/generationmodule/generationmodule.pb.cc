// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: generationmodule/generationmodule.proto

#include "generationmodule/generationmodule.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace generationmodule {
constexpr GenerationPoint::GenerationPoint(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : blackstartenabled_(nullptr)
  , frequencysetpointenabled_(nullptr)
  , pcthzdroop_(nullptr)
  , pctvdroop_(nullptr)
  , ramprates_(nullptr)
  , reactivepwrsetpointenabled_(nullptr)
  , realpwrsetpointenabled_(nullptr)
  , reset_(nullptr)
  , state_(nullptr)
  , syncbacktogrid_(nullptr)
  , transtoislndongridlossenabled_(nullptr)
  , voltagesetpointenabled_(nullptr)
  , starttime_(nullptr){}
struct GenerationPointDefaultTypeInternal {
  constexpr GenerationPointDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GenerationPointDefaultTypeInternal() {}
  union {
    GenerationPoint _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GenerationPointDefaultTypeInternal _GenerationPoint_default_instance_;
constexpr GenerationCSG::GenerationCSG(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : crvpts_(){}
struct GenerationCSGDefaultTypeInternal {
  constexpr GenerationCSGDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GenerationCSGDefaultTypeInternal() {}
  union {
    GenerationCSG _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GenerationCSGDefaultTypeInternal _GenerationCSG_default_instance_;
constexpr GenerationControlScheduleFSCH::GenerationControlScheduleFSCH(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : valdcsg_(nullptr){}
struct GenerationControlScheduleFSCHDefaultTypeInternal {
  constexpr GenerationControlScheduleFSCHDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GenerationControlScheduleFSCHDefaultTypeInternal() {}
  union {
    GenerationControlScheduleFSCH _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GenerationControlScheduleFSCHDefaultTypeInternal _GenerationControlScheduleFSCH_default_instance_;
constexpr GenerationControlFSCC::GenerationControlFSCC(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : controlfscc_(nullptr)
  , generationcontrolschedulefsch_(nullptr){}
struct GenerationControlFSCCDefaultTypeInternal {
  constexpr GenerationControlFSCCDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GenerationControlFSCCDefaultTypeInternal() {}
  union {
    GenerationControlFSCC _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GenerationControlFSCCDefaultTypeInternal _GenerationControlFSCC_default_instance_;
constexpr GenerationControl::GenerationControl(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : controlvalue_(nullptr)
  , check_(nullptr)
  , generationcontrolfscc_(nullptr){}
struct GenerationControlDefaultTypeInternal {
  constexpr GenerationControlDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GenerationControlDefaultTypeInternal() {}
  union {
    GenerationControl _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GenerationControlDefaultTypeInternal _GenerationControl_default_instance_;
constexpr GeneratingUnit::GeneratingUnit(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : conductingequipment_(nullptr)
  , maxoperatingp_(nullptr){}
struct GeneratingUnitDefaultTypeInternal {
  constexpr GeneratingUnitDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GeneratingUnitDefaultTypeInternal() {}
  union {
    GeneratingUnit _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GeneratingUnitDefaultTypeInternal _GeneratingUnit_default_instance_;
constexpr GenerationControlProfile::GenerationControlProfile(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : controlmessageinfo_(nullptr)
  , generatingunit_(nullptr)
  , generationcontrol_(nullptr){}
struct GenerationControlProfileDefaultTypeInternal {
  constexpr GenerationControlProfileDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GenerationControlProfileDefaultTypeInternal() {}
  union {
    GenerationControlProfile _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GenerationControlProfileDefaultTypeInternal _GenerationControlProfile_default_instance_;
constexpr DroopParameter::DroopParameter(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : slope_(nullptr)
  , unloadedoffset_(nullptr){}
struct DroopParameterDefaultTypeInternal {
  constexpr DroopParameterDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DroopParameterDefaultTypeInternal() {}
  union {
    DroopParameter _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DroopParameterDefaultTypeInternal _DroopParameter_default_instance_;
constexpr RealPowerControl::RealPowerControl(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : droopsetpoint_(nullptr)
  , isochronoussetpoint_(nullptr)
  , realpowercontrolmode_(nullptr)
  , realpowersetpoint_(nullptr){}
struct RealPowerControlDefaultTypeInternal {
  constexpr RealPowerControlDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RealPowerControlDefaultTypeInternal() {}
  union {
    RealPowerControl _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RealPowerControlDefaultTypeInternal _RealPowerControl_default_instance_;
constexpr ReactivePowerControl::ReactivePowerControl(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : droopsetpoint_(nullptr)
  , powerfactorsetpoint_(nullptr)
  , reactivepowercontrolmode_(nullptr)
  , reactivepowersetpoint_(nullptr)
  , voltagesetpoint_(nullptr){}
struct ReactivePowerControlDefaultTypeInternal {
  constexpr ReactivePowerControlDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ReactivePowerControlDefaultTypeInternal() {}
  union {
    ReactivePowerControl _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ReactivePowerControlDefaultTypeInternal _ReactivePowerControl_default_instance_;
constexpr GenerationDiscreteControl::GenerationDiscreteControl(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : controlvalue_(nullptr)
  , check_(nullptr)
  , reactivepowercontrol_(nullptr)
  , realpowercontrol_(nullptr){}
struct GenerationDiscreteControlDefaultTypeInternal {
  constexpr GenerationDiscreteControlDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GenerationDiscreteControlDefaultTypeInternal() {}
  union {
    GenerationDiscreteControl _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GenerationDiscreteControlDefaultTypeInternal _GenerationDiscreteControl_default_instance_;
constexpr GenerationDiscreteControlProfile::GenerationDiscreteControlProfile(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : controlmessageinfo_(nullptr)
  , generatingunit_(nullptr)
  , generationdiscretecontrol_(nullptr){}
struct GenerationDiscreteControlProfileDefaultTypeInternal {
  constexpr GenerationDiscreteControlProfileDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GenerationDiscreteControlProfileDefaultTypeInternal() {}
  union {
    GenerationDiscreteControlProfile _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GenerationDiscreteControlProfileDefaultTypeInternal _GenerationDiscreteControlProfile_default_instance_;
constexpr GenerationReading::GenerationReading(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : conductingequipmentterminalreading_(nullptr)
  , phasemmtn_(nullptr)
  , readingmmtr_(nullptr)
  , readingmmxu_(nullptr){}
struct GenerationReadingDefaultTypeInternal {
  constexpr GenerationReadingDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GenerationReadingDefaultTypeInternal() {}
  union {
    GenerationReading _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GenerationReadingDefaultTypeInternal _GenerationReading_default_instance_;
constexpr GenerationReadingProfile::GenerationReadingProfile(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : readingmessageinfo_(nullptr)
  , generatingunit_(nullptr)
  , generationreading_(nullptr){}
struct GenerationReadingProfileDefaultTypeInternal {
  constexpr GenerationReadingProfileDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GenerationReadingProfileDefaultTypeInternal() {}
  union {
    GenerationReadingProfile _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GenerationReadingProfileDefaultTypeInternal _GenerationReadingProfile_default_instance_;
constexpr GenerationPointStatus::GenerationPointStatus(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : blackstartenabled_(nullptr)
  , frequencysetpointenabled_(nullptr)
  , pcthzdroop_(nullptr)
  , pctvdroop_(nullptr)
  , ramprates_(nullptr)
  , reactivepwrsetpointenabled_(nullptr)
  , realpwrsetpointenabled_(nullptr)
  , state_(nullptr)
  , syncbacktogrid_(nullptr)
  , transtoislndongridlossenabled_(nullptr)
  , voltagesetpointenabled_(nullptr){}
struct GenerationPointStatusDefaultTypeInternal {
  constexpr GenerationPointStatusDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GenerationPointStatusDefaultTypeInternal() {}
  union {
    GenerationPointStatus _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GenerationPointStatusDefaultTypeInternal _GenerationPointStatus_default_instance_;
constexpr GenerationEventAndStatusZGEN::GenerationEventAndStatusZGEN(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : logicalnodeforeventandstatus_(nullptr)
  , auxpwrst_(nullptr)
  , dynamictest_(nullptr)
  , emgstop_(nullptr)
  , gnsynst_(nullptr)
  , pointstatus_(nullptr){}
struct GenerationEventAndStatusZGENDefaultTypeInternal {
  constexpr GenerationEventAndStatusZGENDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GenerationEventAndStatusZGENDefaultTypeInternal() {}
  union {
    GenerationEventAndStatusZGEN _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GenerationEventAndStatusZGENDefaultTypeInternal _GenerationEventAndStatusZGEN_default_instance_;
constexpr GenerationEventZGEN::GenerationEventZGEN(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : generationeventandstatuszgen_(nullptr){}
struct GenerationEventZGENDefaultTypeInternal {
  constexpr GenerationEventZGENDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GenerationEventZGENDefaultTypeInternal() {}
  union {
    GenerationEventZGEN _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GenerationEventZGENDefaultTypeInternal _GenerationEventZGEN_default_instance_;
constexpr GenerationEvent::GenerationEvent(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : eventvalue_(nullptr)
  , generationeventzgen_(nullptr){}
struct GenerationEventDefaultTypeInternal {
  constexpr GenerationEventDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GenerationEventDefaultTypeInternal() {}
  union {
    GenerationEvent _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GenerationEventDefaultTypeInternal _GenerationEvent_default_instance_;
constexpr GenerationEventProfile::GenerationEventProfile(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : eventmessageinfo_(nullptr)
  , generatingunit_(nullptr)
  , generationevent_(nullptr){}
struct GenerationEventProfileDefaultTypeInternal {
  constexpr GenerationEventProfileDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GenerationEventProfileDefaultTypeInternal() {}
  union {
    GenerationEventProfile _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GenerationEventProfileDefaultTypeInternal _GenerationEventProfile_default_instance_;
constexpr GenerationStatusZGEN::GenerationStatusZGEN(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : generationeventandstatuszgen_(nullptr){}
struct GenerationStatusZGENDefaultTypeInternal {
  constexpr GenerationStatusZGENDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GenerationStatusZGENDefaultTypeInternal() {}
  union {
    GenerationStatusZGEN _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GenerationStatusZGENDefaultTypeInternal _GenerationStatusZGEN_default_instance_;
constexpr GenerationStatus::GenerationStatus(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : statusvalue_(nullptr)
  , generationstatuszgen_(nullptr){}
struct GenerationStatusDefaultTypeInternal {
  constexpr GenerationStatusDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GenerationStatusDefaultTypeInternal() {}
  union {
    GenerationStatus _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GenerationStatusDefaultTypeInternal _GenerationStatus_default_instance_;
constexpr GenerationStatusProfile::GenerationStatusProfile(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : statusmessageinfo_(nullptr)
  , generatingunit_(nullptr)
  , generationstatus_(nullptr){}
struct GenerationStatusProfileDefaultTypeInternal {
  constexpr GenerationStatusProfileDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GenerationStatusProfileDefaultTypeInternal() {}
  union {
    GenerationStatusProfile _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GenerationStatusProfileDefaultTypeInternal _GenerationStatusProfile_default_instance_;
}  // namespace generationmodule
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_generationmodule_2fgenerationmodule_2eproto[22];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_generationmodule_2fgenerationmodule_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_generationmodule_2fgenerationmodule_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_generationmodule_2fgenerationmodule_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::generationmodule::GenerationPoint, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::generationmodule::GenerationPoint, blackstartenabled_),
  PROTOBUF_FIELD_OFFSET(::generationmodule::GenerationPoint, frequencysetpointenabled_),
  PROTOBUF_FIELD_OFFSET(::generationmodule::GenerationPoint, pcthzdroop_),
  PROTOBUF_FIELD_OFFSET(::generationmodule::GenerationPoint, pctvdroop_),
  PROTOBUF_FIELD_OFFSET(::generationmodule::GenerationPoint, ramprates_),
  PROTOBUF_FIELD_OFFSET(::generationmodule::GenerationPoint, reactivepwrsetpointenabled_),
  PROTOBUF_FIELD_OFFSET(::generationmodule::GenerationPoint, realpwrsetpointenabled_),
  PROTOBUF_FIELD_OFFSET(::generationmodule::GenerationPoint, reset_),
  PROTOBUF_FIELD_OFFSET(::generationmodule::GenerationPoint, state_),
  PROTOBUF_FIELD_OFFSET(::generationmodule::GenerationPoint, syncbacktogrid_),
  PROTOBUF_FIELD_OFFSET(::generationmodule::GenerationPoint, transtoislndongridlossenabled_),
  PROTOBUF_FIELD_OFFSET(::generationmodule::GenerationPoint, voltagesetpointenabled_),
  PROTOBUF_FIELD_OFFSET(::generationmodule::GenerationPoint, starttime_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::generationmodule::GenerationCSG, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::generationmodule::GenerationCSG, crvpts_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::generationmodule::GenerationControlScheduleFSCH, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::generationmodule::GenerationControlScheduleFSCH, valdcsg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::generationmodule::GenerationControlFSCC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::generationmodule::GenerationControlFSCC, controlfscc_),
  PROTOBUF_FIELD_OFFSET(::generationmodule::GenerationControlFSCC, generationcontrolschedulefsch_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::generationmodule::GenerationControl, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::generationmodule::GenerationControl, controlvalue_),
  PROTOBUF_FIELD_OFFSET(::generationmodule::GenerationControl, check_),
  PROTOBUF_FIELD_OFFSET(::generationmodule::GenerationControl, generationcontrolfscc_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::generationmodule::GeneratingUnit, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::generationmodule::GeneratingUnit, conductingequipment_),
  PROTOBUF_FIELD_OFFSET(::generationmodule::GeneratingUnit, maxoperatingp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::generationmodule::GenerationControlProfile, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::generationmodule::GenerationControlProfile, controlmessageinfo_),
  PROTOBUF_FIELD_OFFSET(::generationmodule::GenerationControlProfile, generatingunit_),
  PROTOBUF_FIELD_OFFSET(::generationmodule::GenerationControlProfile, generationcontrol_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::generationmodule::DroopParameter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::generationmodule::DroopParameter, slope_),
  PROTOBUF_FIELD_OFFSET(::generationmodule::DroopParameter, unloadedoffset_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::generationmodule::RealPowerControl, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::generationmodule::RealPowerControl, droopsetpoint_),
  PROTOBUF_FIELD_OFFSET(::generationmodule::RealPowerControl, isochronoussetpoint_),
  PROTOBUF_FIELD_OFFSET(::generationmodule::RealPowerControl, realpowercontrolmode_),
  PROTOBUF_FIELD_OFFSET(::generationmodule::RealPowerControl, realpowersetpoint_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::generationmodule::ReactivePowerControl, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::generationmodule::ReactivePowerControl, droopsetpoint_),
  PROTOBUF_FIELD_OFFSET(::generationmodule::ReactivePowerControl, powerfactorsetpoint_),
  PROTOBUF_FIELD_OFFSET(::generationmodule::ReactivePowerControl, reactivepowercontrolmode_),
  PROTOBUF_FIELD_OFFSET(::generationmodule::ReactivePowerControl, reactivepowersetpoint_),
  PROTOBUF_FIELD_OFFSET(::generationmodule::ReactivePowerControl, voltagesetpoint_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::generationmodule::GenerationDiscreteControl, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::generationmodule::GenerationDiscreteControl, controlvalue_),
  PROTOBUF_FIELD_OFFSET(::generationmodule::GenerationDiscreteControl, check_),
  PROTOBUF_FIELD_OFFSET(::generationmodule::GenerationDiscreteControl, reactivepowercontrol_),
  PROTOBUF_FIELD_OFFSET(::generationmodule::GenerationDiscreteControl, realpowercontrol_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::generationmodule::GenerationDiscreteControlProfile, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::generationmodule::GenerationDiscreteControlProfile, controlmessageinfo_),
  PROTOBUF_FIELD_OFFSET(::generationmodule::GenerationDiscreteControlProfile, generatingunit_),
  PROTOBUF_FIELD_OFFSET(::generationmodule::GenerationDiscreteControlProfile, generationdiscretecontrol_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::generationmodule::GenerationReading, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::generationmodule::GenerationReading, conductingequipmentterminalreading_),
  PROTOBUF_FIELD_OFFSET(::generationmodule::GenerationReading, phasemmtn_),
  PROTOBUF_FIELD_OFFSET(::generationmodule::GenerationReading, readingmmtr_),
  PROTOBUF_FIELD_OFFSET(::generationmodule::GenerationReading, readingmmxu_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::generationmodule::GenerationReadingProfile, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::generationmodule::GenerationReadingProfile, readingmessageinfo_),
  PROTOBUF_FIELD_OFFSET(::generationmodule::GenerationReadingProfile, generatingunit_),
  PROTOBUF_FIELD_OFFSET(::generationmodule::GenerationReadingProfile, generationreading_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::generationmodule::GenerationPointStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::generationmodule::GenerationPointStatus, blackstartenabled_),
  PROTOBUF_FIELD_OFFSET(::generationmodule::GenerationPointStatus, frequencysetpointenabled_),
  PROTOBUF_FIELD_OFFSET(::generationmodule::GenerationPointStatus, pcthzdroop_),
  PROTOBUF_FIELD_OFFSET(::generationmodule::GenerationPointStatus, pctvdroop_),
  PROTOBUF_FIELD_OFFSET(::generationmodule::GenerationPointStatus, ramprates_),
  PROTOBUF_FIELD_OFFSET(::generationmodule::GenerationPointStatus, reactivepwrsetpointenabled_),
  PROTOBUF_FIELD_OFFSET(::generationmodule::GenerationPointStatus, realpwrsetpointenabled_),
  PROTOBUF_FIELD_OFFSET(::generationmodule::GenerationPointStatus, state_),
  PROTOBUF_FIELD_OFFSET(::generationmodule::GenerationPointStatus, syncbacktogrid_),
  PROTOBUF_FIELD_OFFSET(::generationmodule::GenerationPointStatus, transtoislndongridlossenabled_),
  PROTOBUF_FIELD_OFFSET(::generationmodule::GenerationPointStatus, voltagesetpointenabled_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::generationmodule::GenerationEventAndStatusZGEN, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::generationmodule::GenerationEventAndStatusZGEN, logicalnodeforeventandstatus_),
  PROTOBUF_FIELD_OFFSET(::generationmodule::GenerationEventAndStatusZGEN, auxpwrst_),
  PROTOBUF_FIELD_OFFSET(::generationmodule::GenerationEventAndStatusZGEN, dynamictest_),
  PROTOBUF_FIELD_OFFSET(::generationmodule::GenerationEventAndStatusZGEN, emgstop_),
  PROTOBUF_FIELD_OFFSET(::generationmodule::GenerationEventAndStatusZGEN, gnsynst_),
  PROTOBUF_FIELD_OFFSET(::generationmodule::GenerationEventAndStatusZGEN, pointstatus_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::generationmodule::GenerationEventZGEN, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::generationmodule::GenerationEventZGEN, generationeventandstatuszgen_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::generationmodule::GenerationEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::generationmodule::GenerationEvent, eventvalue_),
  PROTOBUF_FIELD_OFFSET(::generationmodule::GenerationEvent, generationeventzgen_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::generationmodule::GenerationEventProfile, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::generationmodule::GenerationEventProfile, eventmessageinfo_),
  PROTOBUF_FIELD_OFFSET(::generationmodule::GenerationEventProfile, generatingunit_),
  PROTOBUF_FIELD_OFFSET(::generationmodule::GenerationEventProfile, generationevent_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::generationmodule::GenerationStatusZGEN, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::generationmodule::GenerationStatusZGEN, generationeventandstatuszgen_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::generationmodule::GenerationStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::generationmodule::GenerationStatus, statusvalue_),
  PROTOBUF_FIELD_OFFSET(::generationmodule::GenerationStatus, generationstatuszgen_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::generationmodule::GenerationStatusProfile, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::generationmodule::GenerationStatusProfile, statusmessageinfo_),
  PROTOBUF_FIELD_OFFSET(::generationmodule::GenerationStatusProfile, generatingunit_),
  PROTOBUF_FIELD_OFFSET(::generationmodule::GenerationStatusProfile, generationstatus_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::generationmodule::GenerationPoint)},
  { 18, -1, sizeof(::generationmodule::GenerationCSG)},
  { 24, -1, sizeof(::generationmodule::GenerationControlScheduleFSCH)},
  { 30, -1, sizeof(::generationmodule::GenerationControlFSCC)},
  { 37, -1, sizeof(::generationmodule::GenerationControl)},
  { 45, -1, sizeof(::generationmodule::GeneratingUnit)},
  { 52, -1, sizeof(::generationmodule::GenerationControlProfile)},
  { 60, -1, sizeof(::generationmodule::DroopParameter)},
  { 67, -1, sizeof(::generationmodule::RealPowerControl)},
  { 76, -1, sizeof(::generationmodule::ReactivePowerControl)},
  { 86, -1, sizeof(::generationmodule::GenerationDiscreteControl)},
  { 95, -1, sizeof(::generationmodule::GenerationDiscreteControlProfile)},
  { 103, -1, sizeof(::generationmodule::GenerationReading)},
  { 112, -1, sizeof(::generationmodule::GenerationReadingProfile)},
  { 120, -1, sizeof(::generationmodule::GenerationPointStatus)},
  { 136, -1, sizeof(::generationmodule::GenerationEventAndStatusZGEN)},
  { 147, -1, sizeof(::generationmodule::GenerationEventZGEN)},
  { 153, -1, sizeof(::generationmodule::GenerationEvent)},
  { 160, -1, sizeof(::generationmodule::GenerationEventProfile)},
  { 168, -1, sizeof(::generationmodule::GenerationStatusZGEN)},
  { 174, -1, sizeof(::generationmodule::GenerationStatus)},
  { 181, -1, sizeof(::generationmodule::GenerationStatusProfile)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::generationmodule::_GenerationPoint_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::generationmodule::_GenerationCSG_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::generationmodule::_GenerationControlScheduleFSCH_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::generationmodule::_GenerationControlFSCC_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::generationmodule::_GenerationControl_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::generationmodule::_GeneratingUnit_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::generationmodule::_GenerationControlProfile_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::generationmodule::_DroopParameter_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::generationmodule::_RealPowerControl_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::generationmodule::_ReactivePowerControl_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::generationmodule::_GenerationDiscreteControl_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::generationmodule::_GenerationDiscreteControlProfile_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::generationmodule::_GenerationReading_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::generationmodule::_GenerationReadingProfile_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::generationmodule::_GenerationPointStatus_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::generationmodule::_GenerationEventAndStatusZGEN_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::generationmodule::_GenerationEventZGEN_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::generationmodule::_GenerationEvent_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::generationmodule::_GenerationEventProfile_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::generationmodule::_GenerationStatusZGEN_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::generationmodule::_GenerationStatus_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::generationmodule::_GenerationStatusProfile_default_instance_),
};

const char descriptor_table_protodef_generationmodule_2fgenerationmodule_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\'generationmodule/generationmodule.prot"
  "o\022\020generationmodule\032\tuml.proto\032\036google/p"
  "rotobuf/wrappers.proto\032\037commonmodule/com"
  "monmodule.proto\"\312\005\n\017GenerationPoint\0223\n\021b"
  "lackStartEnabled\030\001 \001(\0132\030.commonmodule.Co"
  "ntrolSPC\022:\n\030frequencySetPointEnabled\030\002 \001"
  "(\0132\030.commonmodule.ControlSPC\022/\n\npctHzDro"
  "op\030\003 \001(\0132\033.google.protobuf.FloatValue\022.\n"
  "\tpctVDroop\030\004 \001(\0132\033.google.protobuf.Float"
  "Value\022)\n\trampRates\030\005 \001(\0132\026.commonmodule."
  "RampRate\022<\n\032reactivePwrSetPointEnabled\030\006"
  " \001(\0132\030.commonmodule.ControlSPC\0228\n\026realPw"
  "rSetPointEnabled\030\007 \001(\0132\030.commonmodule.Co"
  "ntrolSPC\022\'\n\005reset\030\010 \001(\0132\030.commonmodule.C"
  "ontrolSPC\022/\n\005state\030\t \001(\0132 .commonmodule."
  "Optional_StateKind\0220\n\016syncBackToGrid\030\n \001"
  "(\0132\030.commonmodule.ControlSPC\022\?\n\035transToI"
  "slndOnGridLossEnabled\030\013 \001(\0132\030.commonmodu"
  "le.ControlSPC\0228\n\026voltageSetPointEnabled\030"
  "\014 \001(\0132\030.commonmodule.ControlSPC\022;\n\tstart"
  "Time\030\r \001(\0132\036.commonmodule.ControlTimesta"
  "mpB\010\210\265\030\001\220\265\030\001\"L\n\rGenerationCSG\022;\n\006crvPts\030"
  "\001 \003(\0132!.generationmodule.GenerationPoint"
  "B\010\210\265\030\001\220\265\030\001\"[\n\035GenerationControlScheduleF"
  "SCH\022:\n\007ValDCSG\030\001 \001(\0132\037.generationmodule."
  "GenerationCSGB\010\210\265\030\001\220\265\030\001\"\245\001\n\025GenerationCo"
  "ntrolFSCC\0224\n\013controlFSCC\030\001 \001(\0132\031.commonm"
  "odule.ControlFSCCB\004\200\265\030\001\022V\n\035GenerationCon"
  "trolScheduleFSCH\030\002 \001(\0132/.generationmodul"
  "e.GenerationControlScheduleFSCH\"\301\001\n\021Gene"
  "rationControl\0226\n\014controlValue\030\001 \001(\0132\032.co"
  "mmonmodule.ControlValueB\004\200\265\030\001\022,\n\005check\030\002"
  " \001(\0132\035.commonmodule.CheckConditions\022F\n\025g"
  "enerationControlFSCC\030\003 \001(\0132\'.generationm"
  "odule.GenerationControlFSCC\"\210\001\n\016Generati"
  "ngUnit\022D\n\023conductingEquipment\030\001 \001(\0132!.co"
  "mmonmodule.ConductingEquipmentB\004\200\265\030\001\0220\n\r"
  "maxOperatingP\030\002 \001(\0132\031.commonmodule.Activ"
  "ePower\"\362\001\n\030GenerationControlProfile\022B\n\022c"
  "ontrolMessageInfo\030\001 \001(\0132 .commonmodule.C"
  "ontrolMessageInfoB\004\200\265\030\001\022B\n\016generatingUni"
  "t\030\002 \001(\0132 .generationmodule.GeneratingUni"
  "tB\010\210\265\030\001\220\265\030\001\022H\n\021generationControl\030\003 \001(\0132#"
  ".generationmodule.GenerationControlB\010\210\265\030"
  "\001\220\265\030\001:\004\300\363\030\001\"q\n\016DroopParameter\022*\n\005slope\030\001"
  " \001(\0132\033.google.protobuf.FloatValue\0223\n\016unl"
  "oadedOffset\030\002 \001(\0132\033.google.protobuf.Floa"
  "tValue\"\210\002\n\020RealPowerControl\0227\n\rdroopSetp"
  "oint\030\001 \001(\0132 .generationmodule.DroopParam"
  "eter\0228\n\023isochronousSetpoint\030\002 \001(\0132\033.goog"
  "le.protobuf.FloatValue\022I\n\024realPowerContr"
  "olMode\030\003 \001(\0132+.commonmodule.Optional_Rea"
  "lPowerControlKind\0226\n\021realPowerSetpoint\030\004"
  " \001(\0132\033.google.protobuf.FloatValue\"\316\002\n\024Re"
  "activePowerControl\0227\n\rdroopSetpoint\030\001 \001("
  "\0132 .generationmodule.DroopParameter\0228\n\023p"
  "owerFactorSetpoint\030\002 \001(\0132\033.google.protob"
  "uf.FloatValue\022Q\n\030reactivePowerControlMod"
  "e\030\003 \001(\0132/.commonmodule.Optional_Reactive"
  "PowerControlKind\022:\n\025reactivePowerSetpoin"
  "t\030\004 \001(\0132\033.google.protobuf.FloatValue\0224\n\017"
  "voltageSetpoint\030\005 \001(\0132\033.google.protobuf."
  "FloatValue\"\205\002\n\031GenerationDiscreteControl"
  "\0226\n\014controlValue\030\001 \001(\0132\032.commonmodule.Co"
  "ntrolValueB\004\200\265\030\001\022,\n\005check\030\002 \001(\0132\035.common"
  "module.CheckConditions\022D\n\024ReactivePowerC"
  "ontrol\030\003 \001(\0132&.generationmodule.Reactive"
  "PowerControl\022<\n\020RealPowerControl\030\004 \001(\0132\""
  ".generationmodule.RealPowerControl\"\212\002\n G"
  "enerationDiscreteControlProfile\022B\n\022contr"
  "olMessageInfo\030\001 \001(\0132 .commonmodule.Contr"
  "olMessageInfoB\004\200\265\030\001\022B\n\016generatingUnit\030\002 "
  "\001(\0132 .generationmodule.GeneratingUnitB\010\210"
  "\265\030\001\220\265\030\001\022X\n\031generationDiscreteControl\030\003 \001"
  "(\0132+.generationmodule.GenerationDiscrete"
  "ControlB\010\210\265\030\001\220\265\030\001:\004\300\363\030\001\"\203\002\n\021GenerationRe"
  "ading\022b\n\"conductingEquipmentTerminalRead"
  "ing\030\001 \001(\01320.commonmodule.ConductingEquip"
  "mentTerminalReadingB\004\200\265\030\001\022*\n\tphaseMMTN\030\002"
  " \001(\0132\027.commonmodule.PhaseMMTN\022.\n\013reading"
  "MMTR\030\003 \001(\0132\031.commonmodule.ReadingMMTR\022.\n"
  "\013readingMMXU\030\004 \001(\0132\031.commonmodule.Readin"
  "gMMXU\"\362\001\n\030GenerationReadingProfile\022B\n\022re"
  "adingMessageInfo\030\001 \001(\0132 .commonmodule.Re"
  "adingMessageInfoB\004\200\265\030\001\022B\n\016generatingUnit"
  "\030\002 \001(\0132 .generationmodule.GeneratingUnit"
  "B\010\210\265\030\001\220\265\030\001\022H\n\021generationReading\030\003 \001(\0132#."
  "generationmodule.GenerationReadingB\010\210\265\030\001"
  "\220\265\030\001:\004\300\363\030\001\"\343\004\n\025GenerationPointStatus\0222\n\021"
  "blackStartEnabled\030\001 \001(\0132\027.commonmodule.S"
  "tatusSPS\0229\n\030frequencySetPointEnabled\030\002 \001"
  "(\0132\027.commonmodule.StatusSPS\022/\n\npctHzDroo"
  "p\030\003 \001(\0132\033.google.protobuf.FloatValue\022.\n\t"
  "pctVDroop\030\004 \001(\0132\033.google.protobuf.FloatV"
  "alue\022)\n\trampRates\030\005 \001(\0132\026.commonmodule.R"
  "ampRate\022;\n\032reactivePwrSetPointEnabled\030\006 "
  "\001(\0132\027.commonmodule.StatusSPS\0227\n\026realPwrS"
  "etPointEnabled\030\007 \001(\0132\027.commonmodule.Stat"
  "usSPS\022/\n\005state\030\010 \001(\0132 .commonmodule.Opti"
  "onal_StateKind\022/\n\016syncBackToGrid\030\t \001(\0132\027"
  ".commonmodule.StatusSPS\022>\n\035transToIslndO"
  "nGridLossEnabled\030\n \001(\0132\027.commonmodule.St"
  "atusSPS\0227\n\026voltageSetPointEnabled\030\013 \001(\0132"
  "\027.commonmodule.StatusSPS\"\353\002\n\034GenerationE"
  "ventAndStatusZGEN\022V\n\034logicalNodeForEvent"
  "AndStatus\030\001 \001(\0132*.commonmodule.LogicalNo"
  "deForEventAndStatusB\004\200\265\030\001\022)\n\010AuxPwrSt\030\002 "
  "\001(\0132\027.commonmodule.StatusSPS\0226\n\013DynamicT"
  "est\030\003 \001(\0132!.commonmodule.ENS_DynamicTest"
  "Kind\022(\n\007EmgStop\030\004 \001(\0132\027.commonmodule.Sta"
  "tusSPS\022(\n\007GnSynSt\030\005 \001(\0132\027.commonmodule.S"
  "tatusSPS\022<\n\013PointStatus\030\006 \001(\0132\'.generati"
  "onmodule.GenerationPointStatus\"q\n\023Genera"
  "tionEventZGEN\022Z\n\034generationEventAndStatu"
  "sZGEN\030\001 \001(\0132..generationmodule.Generatio"
  "nEventAndStatusZGENB\004\200\265\030\001\"\211\001\n\017Generation"
  "Event\0222\n\neventValue\030\001 \001(\0132\030.commonmodule"
  ".EventValueB\004\200\265\030\001\022B\n\023generationEventZGEN"
  "\030\002 \001(\0132%.generationmodule.GenerationEven"
  "tZGEN\"\350\001\n\026GenerationEventProfile\022>\n\020even"
  "tMessageInfo\030\001 \001(\0132\036.commonmodule.EventM"
  "essageInfoB\004\200\265\030\001\022B\n\016generatingUnit\030\002 \001(\013"
  "2 .generationmodule.GeneratingUnitB\010\210\265\030\001"
  "\220\265\030\001\022D\n\017generationEvent\030\003 \001(\0132!.generati"
  "onmodule.GenerationEventB\010\210\265\030\001\220\265\030\001:\004\300\363\030\001"
  "\"r\n\024GenerationStatusZGEN\022Z\n\034generationEv"
  "entAndStatusZGEN\030\001 \001(\0132..generationmodul"
  "e.GenerationEventAndStatusZGENB\004\200\265\030\001\"\216\001\n"
  "\020GenerationStatus\0224\n\013statusValue\030\001 \001(\0132\031"
  ".commonmodule.StatusValueB\004\200\265\030\001\022D\n\024gener"
  "ationStatusZGEN\030\002 \001(\0132&.generationmodule"
  ".GenerationStatusZGEN\"\355\001\n\027GenerationStat"
  "usProfile\022@\n\021statusMessageInfo\030\001 \001(\0132\037.c"
  "ommonmodule.StatusMessageInfoB\004\200\265\030\001\022B\n\016g"
  "eneratingUnit\030\002 \001(\0132 .generationmodule.G"
  "eneratingUnitB\010\210\265\030\001\220\265\030\001\022F\n\020generationSta"
  "tus\030\003 \001(\0132\".generationmodule.GenerationS"
  "tatusB\010\210\265\030\001\220\265\030\001:\004\300\363\030\001B\220\001\n\030openfmb.genera"
  "tionmoduleP\001ZWgitlab.com/openfmb/psm/ops"
  "/protobuf/go-openfmb-ops-protobuf/v2/ope"
  "nfmb/generationmodule\252\002\030openfmb.generati"
  "onmoduleb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_generationmodule_2fgenerationmodule_2eproto_deps[3] = {
  &::descriptor_table_commonmodule_2fcommonmodule_2eproto,
  &::descriptor_table_google_2fprotobuf_2fwrappers_2eproto,
  &::descriptor_table_uml_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_generationmodule_2fgenerationmodule_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_generationmodule_2fgenerationmodule_2eproto = {
  false, false, 5656, descriptor_table_protodef_generationmodule_2fgenerationmodule_2eproto, "generationmodule/generationmodule.proto", 
  &descriptor_table_generationmodule_2fgenerationmodule_2eproto_once, descriptor_table_generationmodule_2fgenerationmodule_2eproto_deps, 3, 22,
  schemas, file_default_instances, TableStruct_generationmodule_2fgenerationmodule_2eproto::offsets,
  file_level_metadata_generationmodule_2fgenerationmodule_2eproto, file_level_enum_descriptors_generationmodule_2fgenerationmodule_2eproto, file_level_service_descriptors_generationmodule_2fgenerationmodule_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK ::PROTOBUF_NAMESPACE_ID::Metadata
descriptor_table_generationmodule_2fgenerationmodule_2eproto_metadata_getter(int index) {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_generationmodule_2fgenerationmodule_2eproto);
  return descriptor_table_generationmodule_2fgenerationmodule_2eproto.file_level_metadata[index];
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_generationmodule_2fgenerationmodule_2eproto(&descriptor_table_generationmodule_2fgenerationmodule_2eproto);
namespace generationmodule {

// ===================================================================

class GenerationPoint::_Internal {
 public:
  static const ::commonmodule::ControlSPC& blackstartenabled(const GenerationPoint* msg);
  static const ::commonmodule::ControlSPC& frequencysetpointenabled(const GenerationPoint* msg);
  static const PROTOBUF_NAMESPACE_ID::FloatValue& pcthzdroop(const GenerationPoint* msg);
  static const PROTOBUF_NAMESPACE_ID::FloatValue& pctvdroop(const GenerationPoint* msg);
  static const ::commonmodule::RampRate& ramprates(const GenerationPoint* msg);
  static const ::commonmodule::ControlSPC& reactivepwrsetpointenabled(const GenerationPoint* msg);
  static const ::commonmodule::ControlSPC& realpwrsetpointenabled(const GenerationPoint* msg);
  static const ::commonmodule::ControlSPC& reset(const GenerationPoint* msg);
  static const ::commonmodule::Optional_StateKind& state(const GenerationPoint* msg);
  static const ::commonmodule::ControlSPC& syncbacktogrid(const GenerationPoint* msg);
  static const ::commonmodule::ControlSPC& transtoislndongridlossenabled(const GenerationPoint* msg);
  static const ::commonmodule::ControlSPC& voltagesetpointenabled(const GenerationPoint* msg);
  static const ::commonmodule::ControlTimestamp& starttime(const GenerationPoint* msg);
};

const ::commonmodule::ControlSPC&
GenerationPoint::_Internal::blackstartenabled(const GenerationPoint* msg) {
  return *msg->blackstartenabled_;
}
const ::commonmodule::ControlSPC&
GenerationPoint::_Internal::frequencysetpointenabled(const GenerationPoint* msg) {
  return *msg->frequencysetpointenabled_;
}
const PROTOBUF_NAMESPACE_ID::FloatValue&
GenerationPoint::_Internal::pcthzdroop(const GenerationPoint* msg) {
  return *msg->pcthzdroop_;
}
const PROTOBUF_NAMESPACE_ID::FloatValue&
GenerationPoint::_Internal::pctvdroop(const GenerationPoint* msg) {
  return *msg->pctvdroop_;
}
const ::commonmodule::RampRate&
GenerationPoint::_Internal::ramprates(const GenerationPoint* msg) {
  return *msg->ramprates_;
}
const ::commonmodule::ControlSPC&
GenerationPoint::_Internal::reactivepwrsetpointenabled(const GenerationPoint* msg) {
  return *msg->reactivepwrsetpointenabled_;
}
const ::commonmodule::ControlSPC&
GenerationPoint::_Internal::realpwrsetpointenabled(const GenerationPoint* msg) {
  return *msg->realpwrsetpointenabled_;
}
const ::commonmodule::ControlSPC&
GenerationPoint::_Internal::reset(const GenerationPoint* msg) {
  return *msg->reset_;
}
const ::commonmodule::Optional_StateKind&
GenerationPoint::_Internal::state(const GenerationPoint* msg) {
  return *msg->state_;
}
const ::commonmodule::ControlSPC&
GenerationPoint::_Internal::syncbacktogrid(const GenerationPoint* msg) {
  return *msg->syncbacktogrid_;
}
const ::commonmodule::ControlSPC&
GenerationPoint::_Internal::transtoislndongridlossenabled(const GenerationPoint* msg) {
  return *msg->transtoislndongridlossenabled_;
}
const ::commonmodule::ControlSPC&
GenerationPoint::_Internal::voltagesetpointenabled(const GenerationPoint* msg) {
  return *msg->voltagesetpointenabled_;
}
const ::commonmodule::ControlTimestamp&
GenerationPoint::_Internal::starttime(const GenerationPoint* msg) {
  return *msg->starttime_;
}
void GenerationPoint::clear_blackstartenabled() {
  if (GetArena() == nullptr && blackstartenabled_ != nullptr) {
    delete blackstartenabled_;
  }
  blackstartenabled_ = nullptr;
}
void GenerationPoint::clear_frequencysetpointenabled() {
  if (GetArena() == nullptr && frequencysetpointenabled_ != nullptr) {
    delete frequencysetpointenabled_;
  }
  frequencysetpointenabled_ = nullptr;
}
void GenerationPoint::clear_pcthzdroop() {
  if (GetArena() == nullptr && pcthzdroop_ != nullptr) {
    delete pcthzdroop_;
  }
  pcthzdroop_ = nullptr;
}
void GenerationPoint::clear_pctvdroop() {
  if (GetArena() == nullptr && pctvdroop_ != nullptr) {
    delete pctvdroop_;
  }
  pctvdroop_ = nullptr;
}
void GenerationPoint::clear_ramprates() {
  if (GetArena() == nullptr && ramprates_ != nullptr) {
    delete ramprates_;
  }
  ramprates_ = nullptr;
}
void GenerationPoint::clear_reactivepwrsetpointenabled() {
  if (GetArena() == nullptr && reactivepwrsetpointenabled_ != nullptr) {
    delete reactivepwrsetpointenabled_;
  }
  reactivepwrsetpointenabled_ = nullptr;
}
void GenerationPoint::clear_realpwrsetpointenabled() {
  if (GetArena() == nullptr && realpwrsetpointenabled_ != nullptr) {
    delete realpwrsetpointenabled_;
  }
  realpwrsetpointenabled_ = nullptr;
}
void GenerationPoint::clear_reset() {
  if (GetArena() == nullptr && reset_ != nullptr) {
    delete reset_;
  }
  reset_ = nullptr;
}
void GenerationPoint::clear_state() {
  if (GetArena() == nullptr && state_ != nullptr) {
    delete state_;
  }
  state_ = nullptr;
}
void GenerationPoint::clear_syncbacktogrid() {
  if (GetArena() == nullptr && syncbacktogrid_ != nullptr) {
    delete syncbacktogrid_;
  }
  syncbacktogrid_ = nullptr;
}
void GenerationPoint::clear_transtoislndongridlossenabled() {
  if (GetArena() == nullptr && transtoislndongridlossenabled_ != nullptr) {
    delete transtoislndongridlossenabled_;
  }
  transtoislndongridlossenabled_ = nullptr;
}
void GenerationPoint::clear_voltagesetpointenabled() {
  if (GetArena() == nullptr && voltagesetpointenabled_ != nullptr) {
    delete voltagesetpointenabled_;
  }
  voltagesetpointenabled_ = nullptr;
}
void GenerationPoint::clear_starttime() {
  if (GetArena() == nullptr && starttime_ != nullptr) {
    delete starttime_;
  }
  starttime_ = nullptr;
}
GenerationPoint::GenerationPoint(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:generationmodule.GenerationPoint)
}
GenerationPoint::GenerationPoint(const GenerationPoint& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_blackstartenabled()) {
    blackstartenabled_ = new ::commonmodule::ControlSPC(*from.blackstartenabled_);
  } else {
    blackstartenabled_ = nullptr;
  }
  if (from._internal_has_frequencysetpointenabled()) {
    frequencysetpointenabled_ = new ::commonmodule::ControlSPC(*from.frequencysetpointenabled_);
  } else {
    frequencysetpointenabled_ = nullptr;
  }
  if (from._internal_has_pcthzdroop()) {
    pcthzdroop_ = new PROTOBUF_NAMESPACE_ID::FloatValue(*from.pcthzdroop_);
  } else {
    pcthzdroop_ = nullptr;
  }
  if (from._internal_has_pctvdroop()) {
    pctvdroop_ = new PROTOBUF_NAMESPACE_ID::FloatValue(*from.pctvdroop_);
  } else {
    pctvdroop_ = nullptr;
  }
  if (from._internal_has_ramprates()) {
    ramprates_ = new ::commonmodule::RampRate(*from.ramprates_);
  } else {
    ramprates_ = nullptr;
  }
  if (from._internal_has_reactivepwrsetpointenabled()) {
    reactivepwrsetpointenabled_ = new ::commonmodule::ControlSPC(*from.reactivepwrsetpointenabled_);
  } else {
    reactivepwrsetpointenabled_ = nullptr;
  }
  if (from._internal_has_realpwrsetpointenabled()) {
    realpwrsetpointenabled_ = new ::commonmodule::ControlSPC(*from.realpwrsetpointenabled_);
  } else {
    realpwrsetpointenabled_ = nullptr;
  }
  if (from._internal_has_reset()) {
    reset_ = new ::commonmodule::ControlSPC(*from.reset_);
  } else {
    reset_ = nullptr;
  }
  if (from._internal_has_state()) {
    state_ = new ::commonmodule::Optional_StateKind(*from.state_);
  } else {
    state_ = nullptr;
  }
  if (from._internal_has_syncbacktogrid()) {
    syncbacktogrid_ = new ::commonmodule::ControlSPC(*from.syncbacktogrid_);
  } else {
    syncbacktogrid_ = nullptr;
  }
  if (from._internal_has_transtoislndongridlossenabled()) {
    transtoislndongridlossenabled_ = new ::commonmodule::ControlSPC(*from.transtoislndongridlossenabled_);
  } else {
    transtoislndongridlossenabled_ = nullptr;
  }
  if (from._internal_has_voltagesetpointenabled()) {
    voltagesetpointenabled_ = new ::commonmodule::ControlSPC(*from.voltagesetpointenabled_);
  } else {
    voltagesetpointenabled_ = nullptr;
  }
  if (from._internal_has_starttime()) {
    starttime_ = new ::commonmodule::ControlTimestamp(*from.starttime_);
  } else {
    starttime_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:generationmodule.GenerationPoint)
}

void GenerationPoint::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&blackstartenabled_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&starttime_) -
    reinterpret_cast<char*>(&blackstartenabled_)) + sizeof(starttime_));
}

GenerationPoint::~GenerationPoint() {
  // @@protoc_insertion_point(destructor:generationmodule.GenerationPoint)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GenerationPoint::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete blackstartenabled_;
  if (this != internal_default_instance()) delete frequencysetpointenabled_;
  if (this != internal_default_instance()) delete pcthzdroop_;
  if (this != internal_default_instance()) delete pctvdroop_;
  if (this != internal_default_instance()) delete ramprates_;
  if (this != internal_default_instance()) delete reactivepwrsetpointenabled_;
  if (this != internal_default_instance()) delete realpwrsetpointenabled_;
  if (this != internal_default_instance()) delete reset_;
  if (this != internal_default_instance()) delete state_;
  if (this != internal_default_instance()) delete syncbacktogrid_;
  if (this != internal_default_instance()) delete transtoislndongridlossenabled_;
  if (this != internal_default_instance()) delete voltagesetpointenabled_;
  if (this != internal_default_instance()) delete starttime_;
}

void GenerationPoint::ArenaDtor(void* object) {
  GenerationPoint* _this = reinterpret_cast< GenerationPoint* >(object);
  (void)_this;
}
void GenerationPoint::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GenerationPoint::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GenerationPoint::Clear() {
// @@protoc_insertion_point(message_clear_start:generationmodule.GenerationPoint)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && blackstartenabled_ != nullptr) {
    delete blackstartenabled_;
  }
  blackstartenabled_ = nullptr;
  if (GetArena() == nullptr && frequencysetpointenabled_ != nullptr) {
    delete frequencysetpointenabled_;
  }
  frequencysetpointenabled_ = nullptr;
  if (GetArena() == nullptr && pcthzdroop_ != nullptr) {
    delete pcthzdroop_;
  }
  pcthzdroop_ = nullptr;
  if (GetArena() == nullptr && pctvdroop_ != nullptr) {
    delete pctvdroop_;
  }
  pctvdroop_ = nullptr;
  if (GetArena() == nullptr && ramprates_ != nullptr) {
    delete ramprates_;
  }
  ramprates_ = nullptr;
  if (GetArena() == nullptr && reactivepwrsetpointenabled_ != nullptr) {
    delete reactivepwrsetpointenabled_;
  }
  reactivepwrsetpointenabled_ = nullptr;
  if (GetArena() == nullptr && realpwrsetpointenabled_ != nullptr) {
    delete realpwrsetpointenabled_;
  }
  realpwrsetpointenabled_ = nullptr;
  if (GetArena() == nullptr && reset_ != nullptr) {
    delete reset_;
  }
  reset_ = nullptr;
  if (GetArena() == nullptr && state_ != nullptr) {
    delete state_;
  }
  state_ = nullptr;
  if (GetArena() == nullptr && syncbacktogrid_ != nullptr) {
    delete syncbacktogrid_;
  }
  syncbacktogrid_ = nullptr;
  if (GetArena() == nullptr && transtoislndongridlossenabled_ != nullptr) {
    delete transtoislndongridlossenabled_;
  }
  transtoislndongridlossenabled_ = nullptr;
  if (GetArena() == nullptr && voltagesetpointenabled_ != nullptr) {
    delete voltagesetpointenabled_;
  }
  voltagesetpointenabled_ = nullptr;
  if (GetArena() == nullptr && starttime_ != nullptr) {
    delete starttime_;
  }
  starttime_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GenerationPoint::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .commonmodule.ControlSPC blackStartEnabled = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_blackstartenabled(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .commonmodule.ControlSPC frequencySetPointEnabled = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_frequencysetpointenabled(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.FloatValue pctHzDroop = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_pcthzdroop(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.FloatValue pctVDroop = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_pctvdroop(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .commonmodule.RampRate rampRates = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_ramprates(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .commonmodule.ControlSPC reactivePwrSetPointEnabled = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_reactivepwrsetpointenabled(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .commonmodule.ControlSPC realPwrSetPointEnabled = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_realpwrsetpointenabled(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .commonmodule.ControlSPC reset = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_reset(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .commonmodule.Optional_StateKind state = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_state(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .commonmodule.ControlSPC syncBackToGrid = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_syncbacktogrid(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .commonmodule.ControlSPC transToIslndOnGridLossEnabled = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_transtoislndongridlossenabled(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .commonmodule.ControlSPC voltageSetPointEnabled = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          ptr = ctx->ParseMessage(_internal_mutable_voltagesetpointenabled(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .commonmodule.ControlTimestamp startTime = 13 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_starttime(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GenerationPoint::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:generationmodule.GenerationPoint)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.ControlSPC blackStartEnabled = 1;
  if (this->has_blackstartenabled()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::blackstartenabled(this), target, stream);
  }

  // .commonmodule.ControlSPC frequencySetPointEnabled = 2;
  if (this->has_frequencysetpointenabled()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::frequencysetpointenabled(this), target, stream);
  }

  // .google.protobuf.FloatValue pctHzDroop = 3;
  if (this->has_pcthzdroop()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::pcthzdroop(this), target, stream);
  }

  // .google.protobuf.FloatValue pctVDroop = 4;
  if (this->has_pctvdroop()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::pctvdroop(this), target, stream);
  }

  // .commonmodule.RampRate rampRates = 5;
  if (this->has_ramprates()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::ramprates(this), target, stream);
  }

  // .commonmodule.ControlSPC reactivePwrSetPointEnabled = 6;
  if (this->has_reactivepwrsetpointenabled()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::reactivepwrsetpointenabled(this), target, stream);
  }

  // .commonmodule.ControlSPC realPwrSetPointEnabled = 7;
  if (this->has_realpwrsetpointenabled()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        7, _Internal::realpwrsetpointenabled(this), target, stream);
  }

  // .commonmodule.ControlSPC reset = 8;
  if (this->has_reset()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        8, _Internal::reset(this), target, stream);
  }

  // .commonmodule.Optional_StateKind state = 9;
  if (this->has_state()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        9, _Internal::state(this), target, stream);
  }

  // .commonmodule.ControlSPC syncBackToGrid = 10;
  if (this->has_syncbacktogrid()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        10, _Internal::syncbacktogrid(this), target, stream);
  }

  // .commonmodule.ControlSPC transToIslndOnGridLossEnabled = 11;
  if (this->has_transtoislndongridlossenabled()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        11, _Internal::transtoislndongridlossenabled(this), target, stream);
  }

  // .commonmodule.ControlSPC voltageSetPointEnabled = 12;
  if (this->has_voltagesetpointenabled()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        12, _Internal::voltagesetpointenabled(this), target, stream);
  }

  // .commonmodule.ControlTimestamp startTime = 13 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_starttime()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        13, _Internal::starttime(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:generationmodule.GenerationPoint)
  return target;
}

size_t GenerationPoint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:generationmodule.GenerationPoint)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .commonmodule.ControlSPC blackStartEnabled = 1;
  if (this->has_blackstartenabled()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *blackstartenabled_);
  }

  // .commonmodule.ControlSPC frequencySetPointEnabled = 2;
  if (this->has_frequencysetpointenabled()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *frequencysetpointenabled_);
  }

  // .google.protobuf.FloatValue pctHzDroop = 3;
  if (this->has_pcthzdroop()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *pcthzdroop_);
  }

  // .google.protobuf.FloatValue pctVDroop = 4;
  if (this->has_pctvdroop()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *pctvdroop_);
  }

  // .commonmodule.RampRate rampRates = 5;
  if (this->has_ramprates()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *ramprates_);
  }

  // .commonmodule.ControlSPC reactivePwrSetPointEnabled = 6;
  if (this->has_reactivepwrsetpointenabled()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *reactivepwrsetpointenabled_);
  }

  // .commonmodule.ControlSPC realPwrSetPointEnabled = 7;
  if (this->has_realpwrsetpointenabled()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *realpwrsetpointenabled_);
  }

  // .commonmodule.ControlSPC reset = 8;
  if (this->has_reset()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *reset_);
  }

  // .commonmodule.Optional_StateKind state = 9;
  if (this->has_state()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *state_);
  }

  // .commonmodule.ControlSPC syncBackToGrid = 10;
  if (this->has_syncbacktogrid()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *syncbacktogrid_);
  }

  // .commonmodule.ControlSPC transToIslndOnGridLossEnabled = 11;
  if (this->has_transtoislndongridlossenabled()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *transtoislndongridlossenabled_);
  }

  // .commonmodule.ControlSPC voltageSetPointEnabled = 12;
  if (this->has_voltagesetpointenabled()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *voltagesetpointenabled_);
  }

  // .commonmodule.ControlTimestamp startTime = 13 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_starttime()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *starttime_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GenerationPoint::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:generationmodule.GenerationPoint)
  GOOGLE_DCHECK_NE(&from, this);
  const GenerationPoint* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GenerationPoint>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:generationmodule.GenerationPoint)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:generationmodule.GenerationPoint)
    MergeFrom(*source);
  }
}

void GenerationPoint::MergeFrom(const GenerationPoint& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:generationmodule.GenerationPoint)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_blackstartenabled()) {
    _internal_mutable_blackstartenabled()->::commonmodule::ControlSPC::MergeFrom(from._internal_blackstartenabled());
  }
  if (from.has_frequencysetpointenabled()) {
    _internal_mutable_frequencysetpointenabled()->::commonmodule::ControlSPC::MergeFrom(from._internal_frequencysetpointenabled());
  }
  if (from.has_pcthzdroop()) {
    _internal_mutable_pcthzdroop()->PROTOBUF_NAMESPACE_ID::FloatValue::MergeFrom(from._internal_pcthzdroop());
  }
  if (from.has_pctvdroop()) {
    _internal_mutable_pctvdroop()->PROTOBUF_NAMESPACE_ID::FloatValue::MergeFrom(from._internal_pctvdroop());
  }
  if (from.has_ramprates()) {
    _internal_mutable_ramprates()->::commonmodule::RampRate::MergeFrom(from._internal_ramprates());
  }
  if (from.has_reactivepwrsetpointenabled()) {
    _internal_mutable_reactivepwrsetpointenabled()->::commonmodule::ControlSPC::MergeFrom(from._internal_reactivepwrsetpointenabled());
  }
  if (from.has_realpwrsetpointenabled()) {
    _internal_mutable_realpwrsetpointenabled()->::commonmodule::ControlSPC::MergeFrom(from._internal_realpwrsetpointenabled());
  }
  if (from.has_reset()) {
    _internal_mutable_reset()->::commonmodule::ControlSPC::MergeFrom(from._internal_reset());
  }
  if (from.has_state()) {
    _internal_mutable_state()->::commonmodule::Optional_StateKind::MergeFrom(from._internal_state());
  }
  if (from.has_syncbacktogrid()) {
    _internal_mutable_syncbacktogrid()->::commonmodule::ControlSPC::MergeFrom(from._internal_syncbacktogrid());
  }
  if (from.has_transtoislndongridlossenabled()) {
    _internal_mutable_transtoislndongridlossenabled()->::commonmodule::ControlSPC::MergeFrom(from._internal_transtoislndongridlossenabled());
  }
  if (from.has_voltagesetpointenabled()) {
    _internal_mutable_voltagesetpointenabled()->::commonmodule::ControlSPC::MergeFrom(from._internal_voltagesetpointenabled());
  }
  if (from.has_starttime()) {
    _internal_mutable_starttime()->::commonmodule::ControlTimestamp::MergeFrom(from._internal_starttime());
  }
}

void GenerationPoint::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:generationmodule.GenerationPoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GenerationPoint::CopyFrom(const GenerationPoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:generationmodule.GenerationPoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GenerationPoint::IsInitialized() const {
  return true;
}

void GenerationPoint::InternalSwap(GenerationPoint* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GenerationPoint, starttime_)
      + sizeof(GenerationPoint::starttime_)
      - PROTOBUF_FIELD_OFFSET(GenerationPoint, blackstartenabled_)>(
          reinterpret_cast<char*>(&blackstartenabled_),
          reinterpret_cast<char*>(&other->blackstartenabled_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GenerationPoint::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GenerationCSG::_Internal {
 public:
};

GenerationCSG::GenerationCSG(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  crvpts_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:generationmodule.GenerationCSG)
}
GenerationCSG::GenerationCSG(const GenerationCSG& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      crvpts_(from.crvpts_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:generationmodule.GenerationCSG)
}

void GenerationCSG::SharedCtor() {
}

GenerationCSG::~GenerationCSG() {
  // @@protoc_insertion_point(destructor:generationmodule.GenerationCSG)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GenerationCSG::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GenerationCSG::ArenaDtor(void* object) {
  GenerationCSG* _this = reinterpret_cast< GenerationCSG* >(object);
  (void)_this;
}
void GenerationCSG::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GenerationCSG::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GenerationCSG::Clear() {
// @@protoc_insertion_point(message_clear_start:generationmodule.GenerationCSG)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  crvpts_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GenerationCSG::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .generationmodule.GenerationPoint crvPts = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_crvpts(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GenerationCSG::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:generationmodule.GenerationCSG)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .generationmodule.GenerationPoint crvPts = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_crvpts_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_crvpts(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:generationmodule.GenerationCSG)
  return target;
}

size_t GenerationCSG::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:generationmodule.GenerationCSG)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .generationmodule.GenerationPoint crvPts = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  total_size += 1UL * this->_internal_crvpts_size();
  for (const auto& msg : this->crvpts_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GenerationCSG::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:generationmodule.GenerationCSG)
  GOOGLE_DCHECK_NE(&from, this);
  const GenerationCSG* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GenerationCSG>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:generationmodule.GenerationCSG)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:generationmodule.GenerationCSG)
    MergeFrom(*source);
  }
}

void GenerationCSG::MergeFrom(const GenerationCSG& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:generationmodule.GenerationCSG)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  crvpts_.MergeFrom(from.crvpts_);
}

void GenerationCSG::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:generationmodule.GenerationCSG)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GenerationCSG::CopyFrom(const GenerationCSG& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:generationmodule.GenerationCSG)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GenerationCSG::IsInitialized() const {
  return true;
}

void GenerationCSG::InternalSwap(GenerationCSG* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  crvpts_.InternalSwap(&other->crvpts_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GenerationCSG::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GenerationControlScheduleFSCH::_Internal {
 public:
  static const ::generationmodule::GenerationCSG& valdcsg(const GenerationControlScheduleFSCH* msg);
};

const ::generationmodule::GenerationCSG&
GenerationControlScheduleFSCH::_Internal::valdcsg(const GenerationControlScheduleFSCH* msg) {
  return *msg->valdcsg_;
}
GenerationControlScheduleFSCH::GenerationControlScheduleFSCH(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:generationmodule.GenerationControlScheduleFSCH)
}
GenerationControlScheduleFSCH::GenerationControlScheduleFSCH(const GenerationControlScheduleFSCH& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_valdcsg()) {
    valdcsg_ = new ::generationmodule::GenerationCSG(*from.valdcsg_);
  } else {
    valdcsg_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:generationmodule.GenerationControlScheduleFSCH)
}

void GenerationControlScheduleFSCH::SharedCtor() {
valdcsg_ = nullptr;
}

GenerationControlScheduleFSCH::~GenerationControlScheduleFSCH() {
  // @@protoc_insertion_point(destructor:generationmodule.GenerationControlScheduleFSCH)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GenerationControlScheduleFSCH::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete valdcsg_;
}

void GenerationControlScheduleFSCH::ArenaDtor(void* object) {
  GenerationControlScheduleFSCH* _this = reinterpret_cast< GenerationControlScheduleFSCH* >(object);
  (void)_this;
}
void GenerationControlScheduleFSCH::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GenerationControlScheduleFSCH::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GenerationControlScheduleFSCH::Clear() {
// @@protoc_insertion_point(message_clear_start:generationmodule.GenerationControlScheduleFSCH)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && valdcsg_ != nullptr) {
    delete valdcsg_;
  }
  valdcsg_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GenerationControlScheduleFSCH::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .generationmodule.GenerationCSG ValDCSG = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_valdcsg(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GenerationControlScheduleFSCH::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:generationmodule.GenerationControlScheduleFSCH)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .generationmodule.GenerationCSG ValDCSG = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_valdcsg()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::valdcsg(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:generationmodule.GenerationControlScheduleFSCH)
  return target;
}

size_t GenerationControlScheduleFSCH::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:generationmodule.GenerationControlScheduleFSCH)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .generationmodule.GenerationCSG ValDCSG = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_valdcsg()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *valdcsg_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GenerationControlScheduleFSCH::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:generationmodule.GenerationControlScheduleFSCH)
  GOOGLE_DCHECK_NE(&from, this);
  const GenerationControlScheduleFSCH* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GenerationControlScheduleFSCH>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:generationmodule.GenerationControlScheduleFSCH)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:generationmodule.GenerationControlScheduleFSCH)
    MergeFrom(*source);
  }
}

void GenerationControlScheduleFSCH::MergeFrom(const GenerationControlScheduleFSCH& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:generationmodule.GenerationControlScheduleFSCH)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_valdcsg()) {
    _internal_mutable_valdcsg()->::generationmodule::GenerationCSG::MergeFrom(from._internal_valdcsg());
  }
}

void GenerationControlScheduleFSCH::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:generationmodule.GenerationControlScheduleFSCH)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GenerationControlScheduleFSCH::CopyFrom(const GenerationControlScheduleFSCH& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:generationmodule.GenerationControlScheduleFSCH)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GenerationControlScheduleFSCH::IsInitialized() const {
  return true;
}

void GenerationControlScheduleFSCH::InternalSwap(GenerationControlScheduleFSCH* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(valdcsg_, other->valdcsg_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GenerationControlScheduleFSCH::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GenerationControlFSCC::_Internal {
 public:
  static const ::commonmodule::ControlFSCC& controlfscc(const GenerationControlFSCC* msg);
  static const ::generationmodule::GenerationControlScheduleFSCH& generationcontrolschedulefsch(const GenerationControlFSCC* msg);
};

const ::commonmodule::ControlFSCC&
GenerationControlFSCC::_Internal::controlfscc(const GenerationControlFSCC* msg) {
  return *msg->controlfscc_;
}
const ::generationmodule::GenerationControlScheduleFSCH&
GenerationControlFSCC::_Internal::generationcontrolschedulefsch(const GenerationControlFSCC* msg) {
  return *msg->generationcontrolschedulefsch_;
}
void GenerationControlFSCC::clear_controlfscc() {
  if (GetArena() == nullptr && controlfscc_ != nullptr) {
    delete controlfscc_;
  }
  controlfscc_ = nullptr;
}
GenerationControlFSCC::GenerationControlFSCC(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:generationmodule.GenerationControlFSCC)
}
GenerationControlFSCC::GenerationControlFSCC(const GenerationControlFSCC& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_controlfscc()) {
    controlfscc_ = new ::commonmodule::ControlFSCC(*from.controlfscc_);
  } else {
    controlfscc_ = nullptr;
  }
  if (from._internal_has_generationcontrolschedulefsch()) {
    generationcontrolschedulefsch_ = new ::generationmodule::GenerationControlScheduleFSCH(*from.generationcontrolschedulefsch_);
  } else {
    generationcontrolschedulefsch_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:generationmodule.GenerationControlFSCC)
}

void GenerationControlFSCC::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&controlfscc_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&generationcontrolschedulefsch_) -
    reinterpret_cast<char*>(&controlfscc_)) + sizeof(generationcontrolschedulefsch_));
}

GenerationControlFSCC::~GenerationControlFSCC() {
  // @@protoc_insertion_point(destructor:generationmodule.GenerationControlFSCC)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GenerationControlFSCC::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete controlfscc_;
  if (this != internal_default_instance()) delete generationcontrolschedulefsch_;
}

void GenerationControlFSCC::ArenaDtor(void* object) {
  GenerationControlFSCC* _this = reinterpret_cast< GenerationControlFSCC* >(object);
  (void)_this;
}
void GenerationControlFSCC::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GenerationControlFSCC::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GenerationControlFSCC::Clear() {
// @@protoc_insertion_point(message_clear_start:generationmodule.GenerationControlFSCC)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && controlfscc_ != nullptr) {
    delete controlfscc_;
  }
  controlfscc_ = nullptr;
  if (GetArena() == nullptr && generationcontrolschedulefsch_ != nullptr) {
    delete generationcontrolschedulefsch_;
  }
  generationcontrolschedulefsch_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GenerationControlFSCC::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .commonmodule.ControlFSCC controlFSCC = 1 [(.uml.option_parent_message) = true];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_controlfscc(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .generationmodule.GenerationControlScheduleFSCH GenerationControlScheduleFSCH = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_generationcontrolschedulefsch(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GenerationControlFSCC::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:generationmodule.GenerationControlFSCC)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.ControlFSCC controlFSCC = 1 [(.uml.option_parent_message) = true];
  if (this->has_controlfscc()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::controlfscc(this), target, stream);
  }

  // .generationmodule.GenerationControlScheduleFSCH GenerationControlScheduleFSCH = 2;
  if (this->has_generationcontrolschedulefsch()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::generationcontrolschedulefsch(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:generationmodule.GenerationControlFSCC)
  return target;
}

size_t GenerationControlFSCC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:generationmodule.GenerationControlFSCC)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .commonmodule.ControlFSCC controlFSCC = 1 [(.uml.option_parent_message) = true];
  if (this->has_controlfscc()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *controlfscc_);
  }

  // .generationmodule.GenerationControlScheduleFSCH GenerationControlScheduleFSCH = 2;
  if (this->has_generationcontrolschedulefsch()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *generationcontrolschedulefsch_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GenerationControlFSCC::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:generationmodule.GenerationControlFSCC)
  GOOGLE_DCHECK_NE(&from, this);
  const GenerationControlFSCC* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GenerationControlFSCC>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:generationmodule.GenerationControlFSCC)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:generationmodule.GenerationControlFSCC)
    MergeFrom(*source);
  }
}

void GenerationControlFSCC::MergeFrom(const GenerationControlFSCC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:generationmodule.GenerationControlFSCC)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_controlfscc()) {
    _internal_mutable_controlfscc()->::commonmodule::ControlFSCC::MergeFrom(from._internal_controlfscc());
  }
  if (from.has_generationcontrolschedulefsch()) {
    _internal_mutable_generationcontrolschedulefsch()->::generationmodule::GenerationControlScheduleFSCH::MergeFrom(from._internal_generationcontrolschedulefsch());
  }
}

void GenerationControlFSCC::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:generationmodule.GenerationControlFSCC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GenerationControlFSCC::CopyFrom(const GenerationControlFSCC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:generationmodule.GenerationControlFSCC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GenerationControlFSCC::IsInitialized() const {
  return true;
}

void GenerationControlFSCC::InternalSwap(GenerationControlFSCC* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GenerationControlFSCC, generationcontrolschedulefsch_)
      + sizeof(GenerationControlFSCC::generationcontrolschedulefsch_)
      - PROTOBUF_FIELD_OFFSET(GenerationControlFSCC, controlfscc_)>(
          reinterpret_cast<char*>(&controlfscc_),
          reinterpret_cast<char*>(&other->controlfscc_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GenerationControlFSCC::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GenerationControl::_Internal {
 public:
  static const ::commonmodule::ControlValue& controlvalue(const GenerationControl* msg);
  static const ::commonmodule::CheckConditions& check(const GenerationControl* msg);
  static const ::generationmodule::GenerationControlFSCC& generationcontrolfscc(const GenerationControl* msg);
};

const ::commonmodule::ControlValue&
GenerationControl::_Internal::controlvalue(const GenerationControl* msg) {
  return *msg->controlvalue_;
}
const ::commonmodule::CheckConditions&
GenerationControl::_Internal::check(const GenerationControl* msg) {
  return *msg->check_;
}
const ::generationmodule::GenerationControlFSCC&
GenerationControl::_Internal::generationcontrolfscc(const GenerationControl* msg) {
  return *msg->generationcontrolfscc_;
}
void GenerationControl::clear_controlvalue() {
  if (GetArena() == nullptr && controlvalue_ != nullptr) {
    delete controlvalue_;
  }
  controlvalue_ = nullptr;
}
void GenerationControl::clear_check() {
  if (GetArena() == nullptr && check_ != nullptr) {
    delete check_;
  }
  check_ = nullptr;
}
GenerationControl::GenerationControl(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:generationmodule.GenerationControl)
}
GenerationControl::GenerationControl(const GenerationControl& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_controlvalue()) {
    controlvalue_ = new ::commonmodule::ControlValue(*from.controlvalue_);
  } else {
    controlvalue_ = nullptr;
  }
  if (from._internal_has_check()) {
    check_ = new ::commonmodule::CheckConditions(*from.check_);
  } else {
    check_ = nullptr;
  }
  if (from._internal_has_generationcontrolfscc()) {
    generationcontrolfscc_ = new ::generationmodule::GenerationControlFSCC(*from.generationcontrolfscc_);
  } else {
    generationcontrolfscc_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:generationmodule.GenerationControl)
}

void GenerationControl::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&controlvalue_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&generationcontrolfscc_) -
    reinterpret_cast<char*>(&controlvalue_)) + sizeof(generationcontrolfscc_));
}

GenerationControl::~GenerationControl() {
  // @@protoc_insertion_point(destructor:generationmodule.GenerationControl)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GenerationControl::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete controlvalue_;
  if (this != internal_default_instance()) delete check_;
  if (this != internal_default_instance()) delete generationcontrolfscc_;
}

void GenerationControl::ArenaDtor(void* object) {
  GenerationControl* _this = reinterpret_cast< GenerationControl* >(object);
  (void)_this;
}
void GenerationControl::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GenerationControl::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GenerationControl::Clear() {
// @@protoc_insertion_point(message_clear_start:generationmodule.GenerationControl)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && controlvalue_ != nullptr) {
    delete controlvalue_;
  }
  controlvalue_ = nullptr;
  if (GetArena() == nullptr && check_ != nullptr) {
    delete check_;
  }
  check_ = nullptr;
  if (GetArena() == nullptr && generationcontrolfscc_ != nullptr) {
    delete generationcontrolfscc_;
  }
  generationcontrolfscc_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GenerationControl::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .commonmodule.ControlValue controlValue = 1 [(.uml.option_parent_message) = true];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_controlvalue(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .commonmodule.CheckConditions check = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_check(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .generationmodule.GenerationControlFSCC generationControlFSCC = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_generationcontrolfscc(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GenerationControl::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:generationmodule.GenerationControl)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.ControlValue controlValue = 1 [(.uml.option_parent_message) = true];
  if (this->has_controlvalue()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::controlvalue(this), target, stream);
  }

  // .commonmodule.CheckConditions check = 2;
  if (this->has_check()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::check(this), target, stream);
  }

  // .generationmodule.GenerationControlFSCC generationControlFSCC = 3;
  if (this->has_generationcontrolfscc()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::generationcontrolfscc(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:generationmodule.GenerationControl)
  return target;
}

size_t GenerationControl::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:generationmodule.GenerationControl)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .commonmodule.ControlValue controlValue = 1 [(.uml.option_parent_message) = true];
  if (this->has_controlvalue()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *controlvalue_);
  }

  // .commonmodule.CheckConditions check = 2;
  if (this->has_check()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *check_);
  }

  // .generationmodule.GenerationControlFSCC generationControlFSCC = 3;
  if (this->has_generationcontrolfscc()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *generationcontrolfscc_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GenerationControl::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:generationmodule.GenerationControl)
  GOOGLE_DCHECK_NE(&from, this);
  const GenerationControl* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GenerationControl>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:generationmodule.GenerationControl)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:generationmodule.GenerationControl)
    MergeFrom(*source);
  }
}

void GenerationControl::MergeFrom(const GenerationControl& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:generationmodule.GenerationControl)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_controlvalue()) {
    _internal_mutable_controlvalue()->::commonmodule::ControlValue::MergeFrom(from._internal_controlvalue());
  }
  if (from.has_check()) {
    _internal_mutable_check()->::commonmodule::CheckConditions::MergeFrom(from._internal_check());
  }
  if (from.has_generationcontrolfscc()) {
    _internal_mutable_generationcontrolfscc()->::generationmodule::GenerationControlFSCC::MergeFrom(from._internal_generationcontrolfscc());
  }
}

void GenerationControl::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:generationmodule.GenerationControl)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GenerationControl::CopyFrom(const GenerationControl& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:generationmodule.GenerationControl)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GenerationControl::IsInitialized() const {
  return true;
}

void GenerationControl::InternalSwap(GenerationControl* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GenerationControl, generationcontrolfscc_)
      + sizeof(GenerationControl::generationcontrolfscc_)
      - PROTOBUF_FIELD_OFFSET(GenerationControl, controlvalue_)>(
          reinterpret_cast<char*>(&controlvalue_),
          reinterpret_cast<char*>(&other->controlvalue_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GenerationControl::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GeneratingUnit::_Internal {
 public:
  static const ::commonmodule::ConductingEquipment& conductingequipment(const GeneratingUnit* msg);
  static const ::commonmodule::ActivePower& maxoperatingp(const GeneratingUnit* msg);
};

const ::commonmodule::ConductingEquipment&
GeneratingUnit::_Internal::conductingequipment(const GeneratingUnit* msg) {
  return *msg->conductingequipment_;
}
const ::commonmodule::ActivePower&
GeneratingUnit::_Internal::maxoperatingp(const GeneratingUnit* msg) {
  return *msg->maxoperatingp_;
}
void GeneratingUnit::clear_conductingequipment() {
  if (GetArena() == nullptr && conductingequipment_ != nullptr) {
    delete conductingequipment_;
  }
  conductingequipment_ = nullptr;
}
void GeneratingUnit::clear_maxoperatingp() {
  if (GetArena() == nullptr && maxoperatingp_ != nullptr) {
    delete maxoperatingp_;
  }
  maxoperatingp_ = nullptr;
}
GeneratingUnit::GeneratingUnit(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:generationmodule.GeneratingUnit)
}
GeneratingUnit::GeneratingUnit(const GeneratingUnit& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_conductingequipment()) {
    conductingequipment_ = new ::commonmodule::ConductingEquipment(*from.conductingequipment_);
  } else {
    conductingequipment_ = nullptr;
  }
  if (from._internal_has_maxoperatingp()) {
    maxoperatingp_ = new ::commonmodule::ActivePower(*from.maxoperatingp_);
  } else {
    maxoperatingp_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:generationmodule.GeneratingUnit)
}

void GeneratingUnit::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&conductingequipment_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&maxoperatingp_) -
    reinterpret_cast<char*>(&conductingequipment_)) + sizeof(maxoperatingp_));
}

GeneratingUnit::~GeneratingUnit() {
  // @@protoc_insertion_point(destructor:generationmodule.GeneratingUnit)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GeneratingUnit::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete conductingequipment_;
  if (this != internal_default_instance()) delete maxoperatingp_;
}

void GeneratingUnit::ArenaDtor(void* object) {
  GeneratingUnit* _this = reinterpret_cast< GeneratingUnit* >(object);
  (void)_this;
}
void GeneratingUnit::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GeneratingUnit::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GeneratingUnit::Clear() {
// @@protoc_insertion_point(message_clear_start:generationmodule.GeneratingUnit)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && conductingequipment_ != nullptr) {
    delete conductingequipment_;
  }
  conductingequipment_ = nullptr;
  if (GetArena() == nullptr && maxoperatingp_ != nullptr) {
    delete maxoperatingp_;
  }
  maxoperatingp_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GeneratingUnit::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .commonmodule.ConductingEquipment conductingEquipment = 1 [(.uml.option_parent_message) = true];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_conductingequipment(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .commonmodule.ActivePower maxOperatingP = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_maxoperatingp(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GeneratingUnit::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:generationmodule.GeneratingUnit)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.ConductingEquipment conductingEquipment = 1 [(.uml.option_parent_message) = true];
  if (this->has_conductingequipment()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::conductingequipment(this), target, stream);
  }

  // .commonmodule.ActivePower maxOperatingP = 2;
  if (this->has_maxoperatingp()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::maxoperatingp(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:generationmodule.GeneratingUnit)
  return target;
}

size_t GeneratingUnit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:generationmodule.GeneratingUnit)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .commonmodule.ConductingEquipment conductingEquipment = 1 [(.uml.option_parent_message) = true];
  if (this->has_conductingequipment()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *conductingequipment_);
  }

  // .commonmodule.ActivePower maxOperatingP = 2;
  if (this->has_maxoperatingp()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *maxoperatingp_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GeneratingUnit::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:generationmodule.GeneratingUnit)
  GOOGLE_DCHECK_NE(&from, this);
  const GeneratingUnit* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GeneratingUnit>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:generationmodule.GeneratingUnit)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:generationmodule.GeneratingUnit)
    MergeFrom(*source);
  }
}

void GeneratingUnit::MergeFrom(const GeneratingUnit& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:generationmodule.GeneratingUnit)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_conductingequipment()) {
    _internal_mutable_conductingequipment()->::commonmodule::ConductingEquipment::MergeFrom(from._internal_conductingequipment());
  }
  if (from.has_maxoperatingp()) {
    _internal_mutable_maxoperatingp()->::commonmodule::ActivePower::MergeFrom(from._internal_maxoperatingp());
  }
}

void GeneratingUnit::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:generationmodule.GeneratingUnit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GeneratingUnit::CopyFrom(const GeneratingUnit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:generationmodule.GeneratingUnit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GeneratingUnit::IsInitialized() const {
  return true;
}

void GeneratingUnit::InternalSwap(GeneratingUnit* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GeneratingUnit, maxoperatingp_)
      + sizeof(GeneratingUnit::maxoperatingp_)
      - PROTOBUF_FIELD_OFFSET(GeneratingUnit, conductingequipment_)>(
          reinterpret_cast<char*>(&conductingequipment_),
          reinterpret_cast<char*>(&other->conductingequipment_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GeneratingUnit::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GenerationControlProfile::_Internal {
 public:
  static const ::commonmodule::ControlMessageInfo& controlmessageinfo(const GenerationControlProfile* msg);
  static const ::generationmodule::GeneratingUnit& generatingunit(const GenerationControlProfile* msg);
  static const ::generationmodule::GenerationControl& generationcontrol(const GenerationControlProfile* msg);
};

const ::commonmodule::ControlMessageInfo&
GenerationControlProfile::_Internal::controlmessageinfo(const GenerationControlProfile* msg) {
  return *msg->controlmessageinfo_;
}
const ::generationmodule::GeneratingUnit&
GenerationControlProfile::_Internal::generatingunit(const GenerationControlProfile* msg) {
  return *msg->generatingunit_;
}
const ::generationmodule::GenerationControl&
GenerationControlProfile::_Internal::generationcontrol(const GenerationControlProfile* msg) {
  return *msg->generationcontrol_;
}
void GenerationControlProfile::clear_controlmessageinfo() {
  if (GetArena() == nullptr && controlmessageinfo_ != nullptr) {
    delete controlmessageinfo_;
  }
  controlmessageinfo_ = nullptr;
}
GenerationControlProfile::GenerationControlProfile(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:generationmodule.GenerationControlProfile)
}
GenerationControlProfile::GenerationControlProfile(const GenerationControlProfile& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_controlmessageinfo()) {
    controlmessageinfo_ = new ::commonmodule::ControlMessageInfo(*from.controlmessageinfo_);
  } else {
    controlmessageinfo_ = nullptr;
  }
  if (from._internal_has_generatingunit()) {
    generatingunit_ = new ::generationmodule::GeneratingUnit(*from.generatingunit_);
  } else {
    generatingunit_ = nullptr;
  }
  if (from._internal_has_generationcontrol()) {
    generationcontrol_ = new ::generationmodule::GenerationControl(*from.generationcontrol_);
  } else {
    generationcontrol_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:generationmodule.GenerationControlProfile)
}

void GenerationControlProfile::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&controlmessageinfo_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&generationcontrol_) -
    reinterpret_cast<char*>(&controlmessageinfo_)) + sizeof(generationcontrol_));
}

GenerationControlProfile::~GenerationControlProfile() {
  // @@protoc_insertion_point(destructor:generationmodule.GenerationControlProfile)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GenerationControlProfile::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete controlmessageinfo_;
  if (this != internal_default_instance()) delete generatingunit_;
  if (this != internal_default_instance()) delete generationcontrol_;
}

void GenerationControlProfile::ArenaDtor(void* object) {
  GenerationControlProfile* _this = reinterpret_cast< GenerationControlProfile* >(object);
  (void)_this;
}
void GenerationControlProfile::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GenerationControlProfile::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GenerationControlProfile::Clear() {
// @@protoc_insertion_point(message_clear_start:generationmodule.GenerationControlProfile)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && controlmessageinfo_ != nullptr) {
    delete controlmessageinfo_;
  }
  controlmessageinfo_ = nullptr;
  if (GetArena() == nullptr && generatingunit_ != nullptr) {
    delete generatingunit_;
  }
  generatingunit_ = nullptr;
  if (GetArena() == nullptr && generationcontrol_ != nullptr) {
    delete generationcontrol_;
  }
  generationcontrol_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GenerationControlProfile::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .commonmodule.ControlMessageInfo controlMessageInfo = 1 [(.uml.option_parent_message) = true];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_controlmessageinfo(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .generationmodule.GeneratingUnit generatingUnit = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_generatingunit(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .generationmodule.GenerationControl generationControl = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_generationcontrol(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GenerationControlProfile::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:generationmodule.GenerationControlProfile)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.ControlMessageInfo controlMessageInfo = 1 [(.uml.option_parent_message) = true];
  if (this->has_controlmessageinfo()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::controlmessageinfo(this), target, stream);
  }

  // .generationmodule.GeneratingUnit generatingUnit = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_generatingunit()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::generatingunit(this), target, stream);
  }

  // .generationmodule.GenerationControl generationControl = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_generationcontrol()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::generationcontrol(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:generationmodule.GenerationControlProfile)
  return target;
}

size_t GenerationControlProfile::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:generationmodule.GenerationControlProfile)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .commonmodule.ControlMessageInfo controlMessageInfo = 1 [(.uml.option_parent_message) = true];
  if (this->has_controlmessageinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *controlmessageinfo_);
  }

  // .generationmodule.GeneratingUnit generatingUnit = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_generatingunit()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *generatingunit_);
  }

  // .generationmodule.GenerationControl generationControl = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_generationcontrol()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *generationcontrol_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GenerationControlProfile::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:generationmodule.GenerationControlProfile)
  GOOGLE_DCHECK_NE(&from, this);
  const GenerationControlProfile* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GenerationControlProfile>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:generationmodule.GenerationControlProfile)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:generationmodule.GenerationControlProfile)
    MergeFrom(*source);
  }
}

void GenerationControlProfile::MergeFrom(const GenerationControlProfile& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:generationmodule.GenerationControlProfile)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_controlmessageinfo()) {
    _internal_mutable_controlmessageinfo()->::commonmodule::ControlMessageInfo::MergeFrom(from._internal_controlmessageinfo());
  }
  if (from.has_generatingunit()) {
    _internal_mutable_generatingunit()->::generationmodule::GeneratingUnit::MergeFrom(from._internal_generatingunit());
  }
  if (from.has_generationcontrol()) {
    _internal_mutable_generationcontrol()->::generationmodule::GenerationControl::MergeFrom(from._internal_generationcontrol());
  }
}

void GenerationControlProfile::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:generationmodule.GenerationControlProfile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GenerationControlProfile::CopyFrom(const GenerationControlProfile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:generationmodule.GenerationControlProfile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GenerationControlProfile::IsInitialized() const {
  return true;
}

void GenerationControlProfile::InternalSwap(GenerationControlProfile* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GenerationControlProfile, generationcontrol_)
      + sizeof(GenerationControlProfile::generationcontrol_)
      - PROTOBUF_FIELD_OFFSET(GenerationControlProfile, controlmessageinfo_)>(
          reinterpret_cast<char*>(&controlmessageinfo_),
          reinterpret_cast<char*>(&other->controlmessageinfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GenerationControlProfile::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class DroopParameter::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::FloatValue& slope(const DroopParameter* msg);
  static const PROTOBUF_NAMESPACE_ID::FloatValue& unloadedoffset(const DroopParameter* msg);
};

const PROTOBUF_NAMESPACE_ID::FloatValue&
DroopParameter::_Internal::slope(const DroopParameter* msg) {
  return *msg->slope_;
}
const PROTOBUF_NAMESPACE_ID::FloatValue&
DroopParameter::_Internal::unloadedoffset(const DroopParameter* msg) {
  return *msg->unloadedoffset_;
}
void DroopParameter::clear_slope() {
  if (GetArena() == nullptr && slope_ != nullptr) {
    delete slope_;
  }
  slope_ = nullptr;
}
void DroopParameter::clear_unloadedoffset() {
  if (GetArena() == nullptr && unloadedoffset_ != nullptr) {
    delete unloadedoffset_;
  }
  unloadedoffset_ = nullptr;
}
DroopParameter::DroopParameter(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:generationmodule.DroopParameter)
}
DroopParameter::DroopParameter(const DroopParameter& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_slope()) {
    slope_ = new PROTOBUF_NAMESPACE_ID::FloatValue(*from.slope_);
  } else {
    slope_ = nullptr;
  }
  if (from._internal_has_unloadedoffset()) {
    unloadedoffset_ = new PROTOBUF_NAMESPACE_ID::FloatValue(*from.unloadedoffset_);
  } else {
    unloadedoffset_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:generationmodule.DroopParameter)
}

void DroopParameter::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&slope_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&unloadedoffset_) -
    reinterpret_cast<char*>(&slope_)) + sizeof(unloadedoffset_));
}

DroopParameter::~DroopParameter() {
  // @@protoc_insertion_point(destructor:generationmodule.DroopParameter)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DroopParameter::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete slope_;
  if (this != internal_default_instance()) delete unloadedoffset_;
}

void DroopParameter::ArenaDtor(void* object) {
  DroopParameter* _this = reinterpret_cast< DroopParameter* >(object);
  (void)_this;
}
void DroopParameter::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DroopParameter::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DroopParameter::Clear() {
// @@protoc_insertion_point(message_clear_start:generationmodule.DroopParameter)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && slope_ != nullptr) {
    delete slope_;
  }
  slope_ = nullptr;
  if (GetArena() == nullptr && unloadedoffset_ != nullptr) {
    delete unloadedoffset_;
  }
  unloadedoffset_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DroopParameter::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .google.protobuf.FloatValue slope = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_slope(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.FloatValue unloadedOffset = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_unloadedoffset(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DroopParameter::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:generationmodule.DroopParameter)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.FloatValue slope = 1;
  if (this->has_slope()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::slope(this), target, stream);
  }

  // .google.protobuf.FloatValue unloadedOffset = 2;
  if (this->has_unloadedoffset()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::unloadedoffset(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:generationmodule.DroopParameter)
  return target;
}

size_t DroopParameter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:generationmodule.DroopParameter)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.FloatValue slope = 1;
  if (this->has_slope()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *slope_);
  }

  // .google.protobuf.FloatValue unloadedOffset = 2;
  if (this->has_unloadedoffset()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *unloadedoffset_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DroopParameter::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:generationmodule.DroopParameter)
  GOOGLE_DCHECK_NE(&from, this);
  const DroopParameter* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DroopParameter>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:generationmodule.DroopParameter)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:generationmodule.DroopParameter)
    MergeFrom(*source);
  }
}

void DroopParameter::MergeFrom(const DroopParameter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:generationmodule.DroopParameter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_slope()) {
    _internal_mutable_slope()->PROTOBUF_NAMESPACE_ID::FloatValue::MergeFrom(from._internal_slope());
  }
  if (from.has_unloadedoffset()) {
    _internal_mutable_unloadedoffset()->PROTOBUF_NAMESPACE_ID::FloatValue::MergeFrom(from._internal_unloadedoffset());
  }
}

void DroopParameter::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:generationmodule.DroopParameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DroopParameter::CopyFrom(const DroopParameter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:generationmodule.DroopParameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DroopParameter::IsInitialized() const {
  return true;
}

void DroopParameter::InternalSwap(DroopParameter* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DroopParameter, unloadedoffset_)
      + sizeof(DroopParameter::unloadedoffset_)
      - PROTOBUF_FIELD_OFFSET(DroopParameter, slope_)>(
          reinterpret_cast<char*>(&slope_),
          reinterpret_cast<char*>(&other->slope_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DroopParameter::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class RealPowerControl::_Internal {
 public:
  static const ::generationmodule::DroopParameter& droopsetpoint(const RealPowerControl* msg);
  static const PROTOBUF_NAMESPACE_ID::FloatValue& isochronoussetpoint(const RealPowerControl* msg);
  static const ::commonmodule::Optional_RealPowerControlKind& realpowercontrolmode(const RealPowerControl* msg);
  static const PROTOBUF_NAMESPACE_ID::FloatValue& realpowersetpoint(const RealPowerControl* msg);
};

const ::generationmodule::DroopParameter&
RealPowerControl::_Internal::droopsetpoint(const RealPowerControl* msg) {
  return *msg->droopsetpoint_;
}
const PROTOBUF_NAMESPACE_ID::FloatValue&
RealPowerControl::_Internal::isochronoussetpoint(const RealPowerControl* msg) {
  return *msg->isochronoussetpoint_;
}
const ::commonmodule::Optional_RealPowerControlKind&
RealPowerControl::_Internal::realpowercontrolmode(const RealPowerControl* msg) {
  return *msg->realpowercontrolmode_;
}
const PROTOBUF_NAMESPACE_ID::FloatValue&
RealPowerControl::_Internal::realpowersetpoint(const RealPowerControl* msg) {
  return *msg->realpowersetpoint_;
}
void RealPowerControl::clear_isochronoussetpoint() {
  if (GetArena() == nullptr && isochronoussetpoint_ != nullptr) {
    delete isochronoussetpoint_;
  }
  isochronoussetpoint_ = nullptr;
}
void RealPowerControl::clear_realpowercontrolmode() {
  if (GetArena() == nullptr && realpowercontrolmode_ != nullptr) {
    delete realpowercontrolmode_;
  }
  realpowercontrolmode_ = nullptr;
}
void RealPowerControl::clear_realpowersetpoint() {
  if (GetArena() == nullptr && realpowersetpoint_ != nullptr) {
    delete realpowersetpoint_;
  }
  realpowersetpoint_ = nullptr;
}
RealPowerControl::RealPowerControl(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:generationmodule.RealPowerControl)
}
RealPowerControl::RealPowerControl(const RealPowerControl& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_droopsetpoint()) {
    droopsetpoint_ = new ::generationmodule::DroopParameter(*from.droopsetpoint_);
  } else {
    droopsetpoint_ = nullptr;
  }
  if (from._internal_has_isochronoussetpoint()) {
    isochronoussetpoint_ = new PROTOBUF_NAMESPACE_ID::FloatValue(*from.isochronoussetpoint_);
  } else {
    isochronoussetpoint_ = nullptr;
  }
  if (from._internal_has_realpowercontrolmode()) {
    realpowercontrolmode_ = new ::commonmodule::Optional_RealPowerControlKind(*from.realpowercontrolmode_);
  } else {
    realpowercontrolmode_ = nullptr;
  }
  if (from._internal_has_realpowersetpoint()) {
    realpowersetpoint_ = new PROTOBUF_NAMESPACE_ID::FloatValue(*from.realpowersetpoint_);
  } else {
    realpowersetpoint_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:generationmodule.RealPowerControl)
}

void RealPowerControl::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&droopsetpoint_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&realpowersetpoint_) -
    reinterpret_cast<char*>(&droopsetpoint_)) + sizeof(realpowersetpoint_));
}

RealPowerControl::~RealPowerControl() {
  // @@protoc_insertion_point(destructor:generationmodule.RealPowerControl)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RealPowerControl::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete droopsetpoint_;
  if (this != internal_default_instance()) delete isochronoussetpoint_;
  if (this != internal_default_instance()) delete realpowercontrolmode_;
  if (this != internal_default_instance()) delete realpowersetpoint_;
}

void RealPowerControl::ArenaDtor(void* object) {
  RealPowerControl* _this = reinterpret_cast< RealPowerControl* >(object);
  (void)_this;
}
void RealPowerControl::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RealPowerControl::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RealPowerControl::Clear() {
// @@protoc_insertion_point(message_clear_start:generationmodule.RealPowerControl)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && droopsetpoint_ != nullptr) {
    delete droopsetpoint_;
  }
  droopsetpoint_ = nullptr;
  if (GetArena() == nullptr && isochronoussetpoint_ != nullptr) {
    delete isochronoussetpoint_;
  }
  isochronoussetpoint_ = nullptr;
  if (GetArena() == nullptr && realpowercontrolmode_ != nullptr) {
    delete realpowercontrolmode_;
  }
  realpowercontrolmode_ = nullptr;
  if (GetArena() == nullptr && realpowersetpoint_ != nullptr) {
    delete realpowersetpoint_;
  }
  realpowersetpoint_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RealPowerControl::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .generationmodule.DroopParameter droopSetpoint = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_droopsetpoint(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.FloatValue isochronousSetpoint = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_isochronoussetpoint(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .commonmodule.Optional_RealPowerControlKind realPowerControlMode = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_realpowercontrolmode(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.FloatValue realPowerSetpoint = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_realpowersetpoint(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RealPowerControl::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:generationmodule.RealPowerControl)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .generationmodule.DroopParameter droopSetpoint = 1;
  if (this->has_droopsetpoint()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::droopsetpoint(this), target, stream);
  }

  // .google.protobuf.FloatValue isochronousSetpoint = 2;
  if (this->has_isochronoussetpoint()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::isochronoussetpoint(this), target, stream);
  }

  // .commonmodule.Optional_RealPowerControlKind realPowerControlMode = 3;
  if (this->has_realpowercontrolmode()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::realpowercontrolmode(this), target, stream);
  }

  // .google.protobuf.FloatValue realPowerSetpoint = 4;
  if (this->has_realpowersetpoint()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::realpowersetpoint(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:generationmodule.RealPowerControl)
  return target;
}

size_t RealPowerControl::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:generationmodule.RealPowerControl)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .generationmodule.DroopParameter droopSetpoint = 1;
  if (this->has_droopsetpoint()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *droopsetpoint_);
  }

  // .google.protobuf.FloatValue isochronousSetpoint = 2;
  if (this->has_isochronoussetpoint()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *isochronoussetpoint_);
  }

  // .commonmodule.Optional_RealPowerControlKind realPowerControlMode = 3;
  if (this->has_realpowercontrolmode()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *realpowercontrolmode_);
  }

  // .google.protobuf.FloatValue realPowerSetpoint = 4;
  if (this->has_realpowersetpoint()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *realpowersetpoint_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RealPowerControl::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:generationmodule.RealPowerControl)
  GOOGLE_DCHECK_NE(&from, this);
  const RealPowerControl* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RealPowerControl>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:generationmodule.RealPowerControl)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:generationmodule.RealPowerControl)
    MergeFrom(*source);
  }
}

void RealPowerControl::MergeFrom(const RealPowerControl& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:generationmodule.RealPowerControl)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_droopsetpoint()) {
    _internal_mutable_droopsetpoint()->::generationmodule::DroopParameter::MergeFrom(from._internal_droopsetpoint());
  }
  if (from.has_isochronoussetpoint()) {
    _internal_mutable_isochronoussetpoint()->PROTOBUF_NAMESPACE_ID::FloatValue::MergeFrom(from._internal_isochronoussetpoint());
  }
  if (from.has_realpowercontrolmode()) {
    _internal_mutable_realpowercontrolmode()->::commonmodule::Optional_RealPowerControlKind::MergeFrom(from._internal_realpowercontrolmode());
  }
  if (from.has_realpowersetpoint()) {
    _internal_mutable_realpowersetpoint()->PROTOBUF_NAMESPACE_ID::FloatValue::MergeFrom(from._internal_realpowersetpoint());
  }
}

void RealPowerControl::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:generationmodule.RealPowerControl)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RealPowerControl::CopyFrom(const RealPowerControl& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:generationmodule.RealPowerControl)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RealPowerControl::IsInitialized() const {
  return true;
}

void RealPowerControl::InternalSwap(RealPowerControl* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RealPowerControl, realpowersetpoint_)
      + sizeof(RealPowerControl::realpowersetpoint_)
      - PROTOBUF_FIELD_OFFSET(RealPowerControl, droopsetpoint_)>(
          reinterpret_cast<char*>(&droopsetpoint_),
          reinterpret_cast<char*>(&other->droopsetpoint_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RealPowerControl::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ReactivePowerControl::_Internal {
 public:
  static const ::generationmodule::DroopParameter& droopsetpoint(const ReactivePowerControl* msg);
  static const PROTOBUF_NAMESPACE_ID::FloatValue& powerfactorsetpoint(const ReactivePowerControl* msg);
  static const ::commonmodule::Optional_ReactivePowerControlKind& reactivepowercontrolmode(const ReactivePowerControl* msg);
  static const PROTOBUF_NAMESPACE_ID::FloatValue& reactivepowersetpoint(const ReactivePowerControl* msg);
  static const PROTOBUF_NAMESPACE_ID::FloatValue& voltagesetpoint(const ReactivePowerControl* msg);
};

const ::generationmodule::DroopParameter&
ReactivePowerControl::_Internal::droopsetpoint(const ReactivePowerControl* msg) {
  return *msg->droopsetpoint_;
}
const PROTOBUF_NAMESPACE_ID::FloatValue&
ReactivePowerControl::_Internal::powerfactorsetpoint(const ReactivePowerControl* msg) {
  return *msg->powerfactorsetpoint_;
}
const ::commonmodule::Optional_ReactivePowerControlKind&
ReactivePowerControl::_Internal::reactivepowercontrolmode(const ReactivePowerControl* msg) {
  return *msg->reactivepowercontrolmode_;
}
const PROTOBUF_NAMESPACE_ID::FloatValue&
ReactivePowerControl::_Internal::reactivepowersetpoint(const ReactivePowerControl* msg) {
  return *msg->reactivepowersetpoint_;
}
const PROTOBUF_NAMESPACE_ID::FloatValue&
ReactivePowerControl::_Internal::voltagesetpoint(const ReactivePowerControl* msg) {
  return *msg->voltagesetpoint_;
}
void ReactivePowerControl::clear_powerfactorsetpoint() {
  if (GetArena() == nullptr && powerfactorsetpoint_ != nullptr) {
    delete powerfactorsetpoint_;
  }
  powerfactorsetpoint_ = nullptr;
}
void ReactivePowerControl::clear_reactivepowercontrolmode() {
  if (GetArena() == nullptr && reactivepowercontrolmode_ != nullptr) {
    delete reactivepowercontrolmode_;
  }
  reactivepowercontrolmode_ = nullptr;
}
void ReactivePowerControl::clear_reactivepowersetpoint() {
  if (GetArena() == nullptr && reactivepowersetpoint_ != nullptr) {
    delete reactivepowersetpoint_;
  }
  reactivepowersetpoint_ = nullptr;
}
void ReactivePowerControl::clear_voltagesetpoint() {
  if (GetArena() == nullptr && voltagesetpoint_ != nullptr) {
    delete voltagesetpoint_;
  }
  voltagesetpoint_ = nullptr;
}
ReactivePowerControl::ReactivePowerControl(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:generationmodule.ReactivePowerControl)
}
ReactivePowerControl::ReactivePowerControl(const ReactivePowerControl& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_droopsetpoint()) {
    droopsetpoint_ = new ::generationmodule::DroopParameter(*from.droopsetpoint_);
  } else {
    droopsetpoint_ = nullptr;
  }
  if (from._internal_has_powerfactorsetpoint()) {
    powerfactorsetpoint_ = new PROTOBUF_NAMESPACE_ID::FloatValue(*from.powerfactorsetpoint_);
  } else {
    powerfactorsetpoint_ = nullptr;
  }
  if (from._internal_has_reactivepowercontrolmode()) {
    reactivepowercontrolmode_ = new ::commonmodule::Optional_ReactivePowerControlKind(*from.reactivepowercontrolmode_);
  } else {
    reactivepowercontrolmode_ = nullptr;
  }
  if (from._internal_has_reactivepowersetpoint()) {
    reactivepowersetpoint_ = new PROTOBUF_NAMESPACE_ID::FloatValue(*from.reactivepowersetpoint_);
  } else {
    reactivepowersetpoint_ = nullptr;
  }
  if (from._internal_has_voltagesetpoint()) {
    voltagesetpoint_ = new PROTOBUF_NAMESPACE_ID::FloatValue(*from.voltagesetpoint_);
  } else {
    voltagesetpoint_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:generationmodule.ReactivePowerControl)
}

void ReactivePowerControl::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&droopsetpoint_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&voltagesetpoint_) -
    reinterpret_cast<char*>(&droopsetpoint_)) + sizeof(voltagesetpoint_));
}

ReactivePowerControl::~ReactivePowerControl() {
  // @@protoc_insertion_point(destructor:generationmodule.ReactivePowerControl)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ReactivePowerControl::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete droopsetpoint_;
  if (this != internal_default_instance()) delete powerfactorsetpoint_;
  if (this != internal_default_instance()) delete reactivepowercontrolmode_;
  if (this != internal_default_instance()) delete reactivepowersetpoint_;
  if (this != internal_default_instance()) delete voltagesetpoint_;
}

void ReactivePowerControl::ArenaDtor(void* object) {
  ReactivePowerControl* _this = reinterpret_cast< ReactivePowerControl* >(object);
  (void)_this;
}
void ReactivePowerControl::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ReactivePowerControl::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ReactivePowerControl::Clear() {
// @@protoc_insertion_point(message_clear_start:generationmodule.ReactivePowerControl)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && droopsetpoint_ != nullptr) {
    delete droopsetpoint_;
  }
  droopsetpoint_ = nullptr;
  if (GetArena() == nullptr && powerfactorsetpoint_ != nullptr) {
    delete powerfactorsetpoint_;
  }
  powerfactorsetpoint_ = nullptr;
  if (GetArena() == nullptr && reactivepowercontrolmode_ != nullptr) {
    delete reactivepowercontrolmode_;
  }
  reactivepowercontrolmode_ = nullptr;
  if (GetArena() == nullptr && reactivepowersetpoint_ != nullptr) {
    delete reactivepowersetpoint_;
  }
  reactivepowersetpoint_ = nullptr;
  if (GetArena() == nullptr && voltagesetpoint_ != nullptr) {
    delete voltagesetpoint_;
  }
  voltagesetpoint_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReactivePowerControl::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .generationmodule.DroopParameter droopSetpoint = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_droopsetpoint(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.FloatValue powerFactorSetpoint = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_powerfactorsetpoint(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .commonmodule.Optional_ReactivePowerControlKind reactivePowerControlMode = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_reactivepowercontrolmode(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.FloatValue reactivePowerSetpoint = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_reactivepowersetpoint(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.FloatValue voltageSetpoint = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_voltagesetpoint(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ReactivePowerControl::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:generationmodule.ReactivePowerControl)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .generationmodule.DroopParameter droopSetpoint = 1;
  if (this->has_droopsetpoint()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::droopsetpoint(this), target, stream);
  }

  // .google.protobuf.FloatValue powerFactorSetpoint = 2;
  if (this->has_powerfactorsetpoint()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::powerfactorsetpoint(this), target, stream);
  }

  // .commonmodule.Optional_ReactivePowerControlKind reactivePowerControlMode = 3;
  if (this->has_reactivepowercontrolmode()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::reactivepowercontrolmode(this), target, stream);
  }

  // .google.protobuf.FloatValue reactivePowerSetpoint = 4;
  if (this->has_reactivepowersetpoint()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::reactivepowersetpoint(this), target, stream);
  }

  // .google.protobuf.FloatValue voltageSetpoint = 5;
  if (this->has_voltagesetpoint()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::voltagesetpoint(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:generationmodule.ReactivePowerControl)
  return target;
}

size_t ReactivePowerControl::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:generationmodule.ReactivePowerControl)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .generationmodule.DroopParameter droopSetpoint = 1;
  if (this->has_droopsetpoint()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *droopsetpoint_);
  }

  // .google.protobuf.FloatValue powerFactorSetpoint = 2;
  if (this->has_powerfactorsetpoint()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *powerfactorsetpoint_);
  }

  // .commonmodule.Optional_ReactivePowerControlKind reactivePowerControlMode = 3;
  if (this->has_reactivepowercontrolmode()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *reactivepowercontrolmode_);
  }

  // .google.protobuf.FloatValue reactivePowerSetpoint = 4;
  if (this->has_reactivepowersetpoint()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *reactivepowersetpoint_);
  }

  // .google.protobuf.FloatValue voltageSetpoint = 5;
  if (this->has_voltagesetpoint()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *voltagesetpoint_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReactivePowerControl::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:generationmodule.ReactivePowerControl)
  GOOGLE_DCHECK_NE(&from, this);
  const ReactivePowerControl* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ReactivePowerControl>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:generationmodule.ReactivePowerControl)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:generationmodule.ReactivePowerControl)
    MergeFrom(*source);
  }
}

void ReactivePowerControl::MergeFrom(const ReactivePowerControl& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:generationmodule.ReactivePowerControl)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_droopsetpoint()) {
    _internal_mutable_droopsetpoint()->::generationmodule::DroopParameter::MergeFrom(from._internal_droopsetpoint());
  }
  if (from.has_powerfactorsetpoint()) {
    _internal_mutable_powerfactorsetpoint()->PROTOBUF_NAMESPACE_ID::FloatValue::MergeFrom(from._internal_powerfactorsetpoint());
  }
  if (from.has_reactivepowercontrolmode()) {
    _internal_mutable_reactivepowercontrolmode()->::commonmodule::Optional_ReactivePowerControlKind::MergeFrom(from._internal_reactivepowercontrolmode());
  }
  if (from.has_reactivepowersetpoint()) {
    _internal_mutable_reactivepowersetpoint()->PROTOBUF_NAMESPACE_ID::FloatValue::MergeFrom(from._internal_reactivepowersetpoint());
  }
  if (from.has_voltagesetpoint()) {
    _internal_mutable_voltagesetpoint()->PROTOBUF_NAMESPACE_ID::FloatValue::MergeFrom(from._internal_voltagesetpoint());
  }
}

void ReactivePowerControl::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:generationmodule.ReactivePowerControl)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReactivePowerControl::CopyFrom(const ReactivePowerControl& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:generationmodule.ReactivePowerControl)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReactivePowerControl::IsInitialized() const {
  return true;
}

void ReactivePowerControl::InternalSwap(ReactivePowerControl* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ReactivePowerControl, voltagesetpoint_)
      + sizeof(ReactivePowerControl::voltagesetpoint_)
      - PROTOBUF_FIELD_OFFSET(ReactivePowerControl, droopsetpoint_)>(
          reinterpret_cast<char*>(&droopsetpoint_),
          reinterpret_cast<char*>(&other->droopsetpoint_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ReactivePowerControl::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GenerationDiscreteControl::_Internal {
 public:
  static const ::commonmodule::ControlValue& controlvalue(const GenerationDiscreteControl* msg);
  static const ::commonmodule::CheckConditions& check(const GenerationDiscreteControl* msg);
  static const ::generationmodule::ReactivePowerControl& reactivepowercontrol(const GenerationDiscreteControl* msg);
  static const ::generationmodule::RealPowerControl& realpowercontrol(const GenerationDiscreteControl* msg);
};

const ::commonmodule::ControlValue&
GenerationDiscreteControl::_Internal::controlvalue(const GenerationDiscreteControl* msg) {
  return *msg->controlvalue_;
}
const ::commonmodule::CheckConditions&
GenerationDiscreteControl::_Internal::check(const GenerationDiscreteControl* msg) {
  return *msg->check_;
}
const ::generationmodule::ReactivePowerControl&
GenerationDiscreteControl::_Internal::reactivepowercontrol(const GenerationDiscreteControl* msg) {
  return *msg->reactivepowercontrol_;
}
const ::generationmodule::RealPowerControl&
GenerationDiscreteControl::_Internal::realpowercontrol(const GenerationDiscreteControl* msg) {
  return *msg->realpowercontrol_;
}
void GenerationDiscreteControl::clear_controlvalue() {
  if (GetArena() == nullptr && controlvalue_ != nullptr) {
    delete controlvalue_;
  }
  controlvalue_ = nullptr;
}
void GenerationDiscreteControl::clear_check() {
  if (GetArena() == nullptr && check_ != nullptr) {
    delete check_;
  }
  check_ = nullptr;
}
GenerationDiscreteControl::GenerationDiscreteControl(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:generationmodule.GenerationDiscreteControl)
}
GenerationDiscreteControl::GenerationDiscreteControl(const GenerationDiscreteControl& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_controlvalue()) {
    controlvalue_ = new ::commonmodule::ControlValue(*from.controlvalue_);
  } else {
    controlvalue_ = nullptr;
  }
  if (from._internal_has_check()) {
    check_ = new ::commonmodule::CheckConditions(*from.check_);
  } else {
    check_ = nullptr;
  }
  if (from._internal_has_reactivepowercontrol()) {
    reactivepowercontrol_ = new ::generationmodule::ReactivePowerControl(*from.reactivepowercontrol_);
  } else {
    reactivepowercontrol_ = nullptr;
  }
  if (from._internal_has_realpowercontrol()) {
    realpowercontrol_ = new ::generationmodule::RealPowerControl(*from.realpowercontrol_);
  } else {
    realpowercontrol_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:generationmodule.GenerationDiscreteControl)
}

void GenerationDiscreteControl::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&controlvalue_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&realpowercontrol_) -
    reinterpret_cast<char*>(&controlvalue_)) + sizeof(realpowercontrol_));
}

GenerationDiscreteControl::~GenerationDiscreteControl() {
  // @@protoc_insertion_point(destructor:generationmodule.GenerationDiscreteControl)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GenerationDiscreteControl::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete controlvalue_;
  if (this != internal_default_instance()) delete check_;
  if (this != internal_default_instance()) delete reactivepowercontrol_;
  if (this != internal_default_instance()) delete realpowercontrol_;
}

void GenerationDiscreteControl::ArenaDtor(void* object) {
  GenerationDiscreteControl* _this = reinterpret_cast< GenerationDiscreteControl* >(object);
  (void)_this;
}
void GenerationDiscreteControl::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GenerationDiscreteControl::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GenerationDiscreteControl::Clear() {
// @@protoc_insertion_point(message_clear_start:generationmodule.GenerationDiscreteControl)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && controlvalue_ != nullptr) {
    delete controlvalue_;
  }
  controlvalue_ = nullptr;
  if (GetArena() == nullptr && check_ != nullptr) {
    delete check_;
  }
  check_ = nullptr;
  if (GetArena() == nullptr && reactivepowercontrol_ != nullptr) {
    delete reactivepowercontrol_;
  }
  reactivepowercontrol_ = nullptr;
  if (GetArena() == nullptr && realpowercontrol_ != nullptr) {
    delete realpowercontrol_;
  }
  realpowercontrol_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GenerationDiscreteControl::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .commonmodule.ControlValue controlValue = 1 [(.uml.option_parent_message) = true];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_controlvalue(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .commonmodule.CheckConditions check = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_check(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .generationmodule.ReactivePowerControl ReactivePowerControl = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_reactivepowercontrol(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .generationmodule.RealPowerControl RealPowerControl = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_realpowercontrol(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GenerationDiscreteControl::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:generationmodule.GenerationDiscreteControl)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.ControlValue controlValue = 1 [(.uml.option_parent_message) = true];
  if (this->has_controlvalue()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::controlvalue(this), target, stream);
  }

  // .commonmodule.CheckConditions check = 2;
  if (this->has_check()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::check(this), target, stream);
  }

  // .generationmodule.ReactivePowerControl ReactivePowerControl = 3;
  if (this->has_reactivepowercontrol()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::reactivepowercontrol(this), target, stream);
  }

  // .generationmodule.RealPowerControl RealPowerControl = 4;
  if (this->has_realpowercontrol()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::realpowercontrol(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:generationmodule.GenerationDiscreteControl)
  return target;
}

size_t GenerationDiscreteControl::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:generationmodule.GenerationDiscreteControl)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .commonmodule.ControlValue controlValue = 1 [(.uml.option_parent_message) = true];
  if (this->has_controlvalue()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *controlvalue_);
  }

  // .commonmodule.CheckConditions check = 2;
  if (this->has_check()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *check_);
  }

  // .generationmodule.ReactivePowerControl ReactivePowerControl = 3;
  if (this->has_reactivepowercontrol()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *reactivepowercontrol_);
  }

  // .generationmodule.RealPowerControl RealPowerControl = 4;
  if (this->has_realpowercontrol()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *realpowercontrol_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GenerationDiscreteControl::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:generationmodule.GenerationDiscreteControl)
  GOOGLE_DCHECK_NE(&from, this);
  const GenerationDiscreteControl* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GenerationDiscreteControl>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:generationmodule.GenerationDiscreteControl)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:generationmodule.GenerationDiscreteControl)
    MergeFrom(*source);
  }
}

void GenerationDiscreteControl::MergeFrom(const GenerationDiscreteControl& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:generationmodule.GenerationDiscreteControl)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_controlvalue()) {
    _internal_mutable_controlvalue()->::commonmodule::ControlValue::MergeFrom(from._internal_controlvalue());
  }
  if (from.has_check()) {
    _internal_mutable_check()->::commonmodule::CheckConditions::MergeFrom(from._internal_check());
  }
  if (from.has_reactivepowercontrol()) {
    _internal_mutable_reactivepowercontrol()->::generationmodule::ReactivePowerControl::MergeFrom(from._internal_reactivepowercontrol());
  }
  if (from.has_realpowercontrol()) {
    _internal_mutable_realpowercontrol()->::generationmodule::RealPowerControl::MergeFrom(from._internal_realpowercontrol());
  }
}

void GenerationDiscreteControl::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:generationmodule.GenerationDiscreteControl)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GenerationDiscreteControl::CopyFrom(const GenerationDiscreteControl& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:generationmodule.GenerationDiscreteControl)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GenerationDiscreteControl::IsInitialized() const {
  return true;
}

void GenerationDiscreteControl::InternalSwap(GenerationDiscreteControl* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GenerationDiscreteControl, realpowercontrol_)
      + sizeof(GenerationDiscreteControl::realpowercontrol_)
      - PROTOBUF_FIELD_OFFSET(GenerationDiscreteControl, controlvalue_)>(
          reinterpret_cast<char*>(&controlvalue_),
          reinterpret_cast<char*>(&other->controlvalue_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GenerationDiscreteControl::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GenerationDiscreteControlProfile::_Internal {
 public:
  static const ::commonmodule::ControlMessageInfo& controlmessageinfo(const GenerationDiscreteControlProfile* msg);
  static const ::generationmodule::GeneratingUnit& generatingunit(const GenerationDiscreteControlProfile* msg);
  static const ::generationmodule::GenerationDiscreteControl& generationdiscretecontrol(const GenerationDiscreteControlProfile* msg);
};

const ::commonmodule::ControlMessageInfo&
GenerationDiscreteControlProfile::_Internal::controlmessageinfo(const GenerationDiscreteControlProfile* msg) {
  return *msg->controlmessageinfo_;
}
const ::generationmodule::GeneratingUnit&
GenerationDiscreteControlProfile::_Internal::generatingunit(const GenerationDiscreteControlProfile* msg) {
  return *msg->generatingunit_;
}
const ::generationmodule::GenerationDiscreteControl&
GenerationDiscreteControlProfile::_Internal::generationdiscretecontrol(const GenerationDiscreteControlProfile* msg) {
  return *msg->generationdiscretecontrol_;
}
void GenerationDiscreteControlProfile::clear_controlmessageinfo() {
  if (GetArena() == nullptr && controlmessageinfo_ != nullptr) {
    delete controlmessageinfo_;
  }
  controlmessageinfo_ = nullptr;
}
GenerationDiscreteControlProfile::GenerationDiscreteControlProfile(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:generationmodule.GenerationDiscreteControlProfile)
}
GenerationDiscreteControlProfile::GenerationDiscreteControlProfile(const GenerationDiscreteControlProfile& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_controlmessageinfo()) {
    controlmessageinfo_ = new ::commonmodule::ControlMessageInfo(*from.controlmessageinfo_);
  } else {
    controlmessageinfo_ = nullptr;
  }
  if (from._internal_has_generatingunit()) {
    generatingunit_ = new ::generationmodule::GeneratingUnit(*from.generatingunit_);
  } else {
    generatingunit_ = nullptr;
  }
  if (from._internal_has_generationdiscretecontrol()) {
    generationdiscretecontrol_ = new ::generationmodule::GenerationDiscreteControl(*from.generationdiscretecontrol_);
  } else {
    generationdiscretecontrol_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:generationmodule.GenerationDiscreteControlProfile)
}

void GenerationDiscreteControlProfile::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&controlmessageinfo_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&generationdiscretecontrol_) -
    reinterpret_cast<char*>(&controlmessageinfo_)) + sizeof(generationdiscretecontrol_));
}

GenerationDiscreteControlProfile::~GenerationDiscreteControlProfile() {
  // @@protoc_insertion_point(destructor:generationmodule.GenerationDiscreteControlProfile)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GenerationDiscreteControlProfile::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete controlmessageinfo_;
  if (this != internal_default_instance()) delete generatingunit_;
  if (this != internal_default_instance()) delete generationdiscretecontrol_;
}

void GenerationDiscreteControlProfile::ArenaDtor(void* object) {
  GenerationDiscreteControlProfile* _this = reinterpret_cast< GenerationDiscreteControlProfile* >(object);
  (void)_this;
}
void GenerationDiscreteControlProfile::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GenerationDiscreteControlProfile::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GenerationDiscreteControlProfile::Clear() {
// @@protoc_insertion_point(message_clear_start:generationmodule.GenerationDiscreteControlProfile)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && controlmessageinfo_ != nullptr) {
    delete controlmessageinfo_;
  }
  controlmessageinfo_ = nullptr;
  if (GetArena() == nullptr && generatingunit_ != nullptr) {
    delete generatingunit_;
  }
  generatingunit_ = nullptr;
  if (GetArena() == nullptr && generationdiscretecontrol_ != nullptr) {
    delete generationdiscretecontrol_;
  }
  generationdiscretecontrol_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GenerationDiscreteControlProfile::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .commonmodule.ControlMessageInfo controlMessageInfo = 1 [(.uml.option_parent_message) = true];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_controlmessageinfo(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .generationmodule.GeneratingUnit generatingUnit = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_generatingunit(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .generationmodule.GenerationDiscreteControl generationDiscreteControl = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_generationdiscretecontrol(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GenerationDiscreteControlProfile::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:generationmodule.GenerationDiscreteControlProfile)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.ControlMessageInfo controlMessageInfo = 1 [(.uml.option_parent_message) = true];
  if (this->has_controlmessageinfo()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::controlmessageinfo(this), target, stream);
  }

  // .generationmodule.GeneratingUnit generatingUnit = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_generatingunit()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::generatingunit(this), target, stream);
  }

  // .generationmodule.GenerationDiscreteControl generationDiscreteControl = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_generationdiscretecontrol()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::generationdiscretecontrol(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:generationmodule.GenerationDiscreteControlProfile)
  return target;
}

size_t GenerationDiscreteControlProfile::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:generationmodule.GenerationDiscreteControlProfile)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .commonmodule.ControlMessageInfo controlMessageInfo = 1 [(.uml.option_parent_message) = true];
  if (this->has_controlmessageinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *controlmessageinfo_);
  }

  // .generationmodule.GeneratingUnit generatingUnit = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_generatingunit()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *generatingunit_);
  }

  // .generationmodule.GenerationDiscreteControl generationDiscreteControl = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_generationdiscretecontrol()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *generationdiscretecontrol_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GenerationDiscreteControlProfile::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:generationmodule.GenerationDiscreteControlProfile)
  GOOGLE_DCHECK_NE(&from, this);
  const GenerationDiscreteControlProfile* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GenerationDiscreteControlProfile>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:generationmodule.GenerationDiscreteControlProfile)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:generationmodule.GenerationDiscreteControlProfile)
    MergeFrom(*source);
  }
}

void GenerationDiscreteControlProfile::MergeFrom(const GenerationDiscreteControlProfile& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:generationmodule.GenerationDiscreteControlProfile)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_controlmessageinfo()) {
    _internal_mutable_controlmessageinfo()->::commonmodule::ControlMessageInfo::MergeFrom(from._internal_controlmessageinfo());
  }
  if (from.has_generatingunit()) {
    _internal_mutable_generatingunit()->::generationmodule::GeneratingUnit::MergeFrom(from._internal_generatingunit());
  }
  if (from.has_generationdiscretecontrol()) {
    _internal_mutable_generationdiscretecontrol()->::generationmodule::GenerationDiscreteControl::MergeFrom(from._internal_generationdiscretecontrol());
  }
}

void GenerationDiscreteControlProfile::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:generationmodule.GenerationDiscreteControlProfile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GenerationDiscreteControlProfile::CopyFrom(const GenerationDiscreteControlProfile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:generationmodule.GenerationDiscreteControlProfile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GenerationDiscreteControlProfile::IsInitialized() const {
  return true;
}

void GenerationDiscreteControlProfile::InternalSwap(GenerationDiscreteControlProfile* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GenerationDiscreteControlProfile, generationdiscretecontrol_)
      + sizeof(GenerationDiscreteControlProfile::generationdiscretecontrol_)
      - PROTOBUF_FIELD_OFFSET(GenerationDiscreteControlProfile, controlmessageinfo_)>(
          reinterpret_cast<char*>(&controlmessageinfo_),
          reinterpret_cast<char*>(&other->controlmessageinfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GenerationDiscreteControlProfile::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GenerationReading::_Internal {
 public:
  static const ::commonmodule::ConductingEquipmentTerminalReading& conductingequipmentterminalreading(const GenerationReading* msg);
  static const ::commonmodule::PhaseMMTN& phasemmtn(const GenerationReading* msg);
  static const ::commonmodule::ReadingMMTR& readingmmtr(const GenerationReading* msg);
  static const ::commonmodule::ReadingMMXU& readingmmxu(const GenerationReading* msg);
};

const ::commonmodule::ConductingEquipmentTerminalReading&
GenerationReading::_Internal::conductingequipmentterminalreading(const GenerationReading* msg) {
  return *msg->conductingequipmentterminalreading_;
}
const ::commonmodule::PhaseMMTN&
GenerationReading::_Internal::phasemmtn(const GenerationReading* msg) {
  return *msg->phasemmtn_;
}
const ::commonmodule::ReadingMMTR&
GenerationReading::_Internal::readingmmtr(const GenerationReading* msg) {
  return *msg->readingmmtr_;
}
const ::commonmodule::ReadingMMXU&
GenerationReading::_Internal::readingmmxu(const GenerationReading* msg) {
  return *msg->readingmmxu_;
}
void GenerationReading::clear_conductingequipmentterminalreading() {
  if (GetArena() == nullptr && conductingequipmentterminalreading_ != nullptr) {
    delete conductingequipmentterminalreading_;
  }
  conductingequipmentterminalreading_ = nullptr;
}
void GenerationReading::clear_phasemmtn() {
  if (GetArena() == nullptr && phasemmtn_ != nullptr) {
    delete phasemmtn_;
  }
  phasemmtn_ = nullptr;
}
void GenerationReading::clear_readingmmtr() {
  if (GetArena() == nullptr && readingmmtr_ != nullptr) {
    delete readingmmtr_;
  }
  readingmmtr_ = nullptr;
}
void GenerationReading::clear_readingmmxu() {
  if (GetArena() == nullptr && readingmmxu_ != nullptr) {
    delete readingmmxu_;
  }
  readingmmxu_ = nullptr;
}
GenerationReading::GenerationReading(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:generationmodule.GenerationReading)
}
GenerationReading::GenerationReading(const GenerationReading& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_conductingequipmentterminalreading()) {
    conductingequipmentterminalreading_ = new ::commonmodule::ConductingEquipmentTerminalReading(*from.conductingequipmentterminalreading_);
  } else {
    conductingequipmentterminalreading_ = nullptr;
  }
  if (from._internal_has_phasemmtn()) {
    phasemmtn_ = new ::commonmodule::PhaseMMTN(*from.phasemmtn_);
  } else {
    phasemmtn_ = nullptr;
  }
  if (from._internal_has_readingmmtr()) {
    readingmmtr_ = new ::commonmodule::ReadingMMTR(*from.readingmmtr_);
  } else {
    readingmmtr_ = nullptr;
  }
  if (from._internal_has_readingmmxu()) {
    readingmmxu_ = new ::commonmodule::ReadingMMXU(*from.readingmmxu_);
  } else {
    readingmmxu_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:generationmodule.GenerationReading)
}

void GenerationReading::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&conductingequipmentterminalreading_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&readingmmxu_) -
    reinterpret_cast<char*>(&conductingequipmentterminalreading_)) + sizeof(readingmmxu_));
}

GenerationReading::~GenerationReading() {
  // @@protoc_insertion_point(destructor:generationmodule.GenerationReading)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GenerationReading::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete conductingequipmentterminalreading_;
  if (this != internal_default_instance()) delete phasemmtn_;
  if (this != internal_default_instance()) delete readingmmtr_;
  if (this != internal_default_instance()) delete readingmmxu_;
}

void GenerationReading::ArenaDtor(void* object) {
  GenerationReading* _this = reinterpret_cast< GenerationReading* >(object);
  (void)_this;
}
void GenerationReading::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GenerationReading::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GenerationReading::Clear() {
// @@protoc_insertion_point(message_clear_start:generationmodule.GenerationReading)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && conductingequipmentterminalreading_ != nullptr) {
    delete conductingequipmentterminalreading_;
  }
  conductingequipmentterminalreading_ = nullptr;
  if (GetArena() == nullptr && phasemmtn_ != nullptr) {
    delete phasemmtn_;
  }
  phasemmtn_ = nullptr;
  if (GetArena() == nullptr && readingmmtr_ != nullptr) {
    delete readingmmtr_;
  }
  readingmmtr_ = nullptr;
  if (GetArena() == nullptr && readingmmxu_ != nullptr) {
    delete readingmmxu_;
  }
  readingmmxu_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GenerationReading::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .commonmodule.ConductingEquipmentTerminalReading conductingEquipmentTerminalReading = 1 [(.uml.option_parent_message) = true];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_conductingequipmentterminalreading(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .commonmodule.PhaseMMTN phaseMMTN = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_phasemmtn(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .commonmodule.ReadingMMTR readingMMTR = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_readingmmtr(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .commonmodule.ReadingMMXU readingMMXU = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_readingmmxu(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GenerationReading::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:generationmodule.GenerationReading)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.ConductingEquipmentTerminalReading conductingEquipmentTerminalReading = 1 [(.uml.option_parent_message) = true];
  if (this->has_conductingequipmentterminalreading()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::conductingequipmentterminalreading(this), target, stream);
  }

  // .commonmodule.PhaseMMTN phaseMMTN = 2;
  if (this->has_phasemmtn()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::phasemmtn(this), target, stream);
  }

  // .commonmodule.ReadingMMTR readingMMTR = 3;
  if (this->has_readingmmtr()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::readingmmtr(this), target, stream);
  }

  // .commonmodule.ReadingMMXU readingMMXU = 4;
  if (this->has_readingmmxu()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::readingmmxu(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:generationmodule.GenerationReading)
  return target;
}

size_t GenerationReading::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:generationmodule.GenerationReading)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .commonmodule.ConductingEquipmentTerminalReading conductingEquipmentTerminalReading = 1 [(.uml.option_parent_message) = true];
  if (this->has_conductingequipmentterminalreading()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *conductingequipmentterminalreading_);
  }

  // .commonmodule.PhaseMMTN phaseMMTN = 2;
  if (this->has_phasemmtn()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *phasemmtn_);
  }

  // .commonmodule.ReadingMMTR readingMMTR = 3;
  if (this->has_readingmmtr()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *readingmmtr_);
  }

  // .commonmodule.ReadingMMXU readingMMXU = 4;
  if (this->has_readingmmxu()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *readingmmxu_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GenerationReading::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:generationmodule.GenerationReading)
  GOOGLE_DCHECK_NE(&from, this);
  const GenerationReading* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GenerationReading>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:generationmodule.GenerationReading)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:generationmodule.GenerationReading)
    MergeFrom(*source);
  }
}

void GenerationReading::MergeFrom(const GenerationReading& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:generationmodule.GenerationReading)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_conductingequipmentterminalreading()) {
    _internal_mutable_conductingequipmentterminalreading()->::commonmodule::ConductingEquipmentTerminalReading::MergeFrom(from._internal_conductingequipmentterminalreading());
  }
  if (from.has_phasemmtn()) {
    _internal_mutable_phasemmtn()->::commonmodule::PhaseMMTN::MergeFrom(from._internal_phasemmtn());
  }
  if (from.has_readingmmtr()) {
    _internal_mutable_readingmmtr()->::commonmodule::ReadingMMTR::MergeFrom(from._internal_readingmmtr());
  }
  if (from.has_readingmmxu()) {
    _internal_mutable_readingmmxu()->::commonmodule::ReadingMMXU::MergeFrom(from._internal_readingmmxu());
  }
}

void GenerationReading::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:generationmodule.GenerationReading)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GenerationReading::CopyFrom(const GenerationReading& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:generationmodule.GenerationReading)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GenerationReading::IsInitialized() const {
  return true;
}

void GenerationReading::InternalSwap(GenerationReading* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GenerationReading, readingmmxu_)
      + sizeof(GenerationReading::readingmmxu_)
      - PROTOBUF_FIELD_OFFSET(GenerationReading, conductingequipmentterminalreading_)>(
          reinterpret_cast<char*>(&conductingequipmentterminalreading_),
          reinterpret_cast<char*>(&other->conductingequipmentterminalreading_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GenerationReading::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GenerationReadingProfile::_Internal {
 public:
  static const ::commonmodule::ReadingMessageInfo& readingmessageinfo(const GenerationReadingProfile* msg);
  static const ::generationmodule::GeneratingUnit& generatingunit(const GenerationReadingProfile* msg);
  static const ::generationmodule::GenerationReading& generationreading(const GenerationReadingProfile* msg);
};

const ::commonmodule::ReadingMessageInfo&
GenerationReadingProfile::_Internal::readingmessageinfo(const GenerationReadingProfile* msg) {
  return *msg->readingmessageinfo_;
}
const ::generationmodule::GeneratingUnit&
GenerationReadingProfile::_Internal::generatingunit(const GenerationReadingProfile* msg) {
  return *msg->generatingunit_;
}
const ::generationmodule::GenerationReading&
GenerationReadingProfile::_Internal::generationreading(const GenerationReadingProfile* msg) {
  return *msg->generationreading_;
}
void GenerationReadingProfile::clear_readingmessageinfo() {
  if (GetArena() == nullptr && readingmessageinfo_ != nullptr) {
    delete readingmessageinfo_;
  }
  readingmessageinfo_ = nullptr;
}
GenerationReadingProfile::GenerationReadingProfile(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:generationmodule.GenerationReadingProfile)
}
GenerationReadingProfile::GenerationReadingProfile(const GenerationReadingProfile& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_readingmessageinfo()) {
    readingmessageinfo_ = new ::commonmodule::ReadingMessageInfo(*from.readingmessageinfo_);
  } else {
    readingmessageinfo_ = nullptr;
  }
  if (from._internal_has_generatingunit()) {
    generatingunit_ = new ::generationmodule::GeneratingUnit(*from.generatingunit_);
  } else {
    generatingunit_ = nullptr;
  }
  if (from._internal_has_generationreading()) {
    generationreading_ = new ::generationmodule::GenerationReading(*from.generationreading_);
  } else {
    generationreading_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:generationmodule.GenerationReadingProfile)
}

void GenerationReadingProfile::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&readingmessageinfo_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&generationreading_) -
    reinterpret_cast<char*>(&readingmessageinfo_)) + sizeof(generationreading_));
}

GenerationReadingProfile::~GenerationReadingProfile() {
  // @@protoc_insertion_point(destructor:generationmodule.GenerationReadingProfile)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GenerationReadingProfile::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete readingmessageinfo_;
  if (this != internal_default_instance()) delete generatingunit_;
  if (this != internal_default_instance()) delete generationreading_;
}

void GenerationReadingProfile::ArenaDtor(void* object) {
  GenerationReadingProfile* _this = reinterpret_cast< GenerationReadingProfile* >(object);
  (void)_this;
}
void GenerationReadingProfile::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GenerationReadingProfile::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GenerationReadingProfile::Clear() {
// @@protoc_insertion_point(message_clear_start:generationmodule.GenerationReadingProfile)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && readingmessageinfo_ != nullptr) {
    delete readingmessageinfo_;
  }
  readingmessageinfo_ = nullptr;
  if (GetArena() == nullptr && generatingunit_ != nullptr) {
    delete generatingunit_;
  }
  generatingunit_ = nullptr;
  if (GetArena() == nullptr && generationreading_ != nullptr) {
    delete generationreading_;
  }
  generationreading_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GenerationReadingProfile::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .commonmodule.ReadingMessageInfo readingMessageInfo = 1 [(.uml.option_parent_message) = true];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_readingmessageinfo(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .generationmodule.GeneratingUnit generatingUnit = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_generatingunit(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .generationmodule.GenerationReading generationReading = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_generationreading(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GenerationReadingProfile::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:generationmodule.GenerationReadingProfile)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.ReadingMessageInfo readingMessageInfo = 1 [(.uml.option_parent_message) = true];
  if (this->has_readingmessageinfo()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::readingmessageinfo(this), target, stream);
  }

  // .generationmodule.GeneratingUnit generatingUnit = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_generatingunit()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::generatingunit(this), target, stream);
  }

  // .generationmodule.GenerationReading generationReading = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_generationreading()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::generationreading(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:generationmodule.GenerationReadingProfile)
  return target;
}

size_t GenerationReadingProfile::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:generationmodule.GenerationReadingProfile)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .commonmodule.ReadingMessageInfo readingMessageInfo = 1 [(.uml.option_parent_message) = true];
  if (this->has_readingmessageinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *readingmessageinfo_);
  }

  // .generationmodule.GeneratingUnit generatingUnit = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_generatingunit()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *generatingunit_);
  }

  // .generationmodule.GenerationReading generationReading = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_generationreading()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *generationreading_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GenerationReadingProfile::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:generationmodule.GenerationReadingProfile)
  GOOGLE_DCHECK_NE(&from, this);
  const GenerationReadingProfile* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GenerationReadingProfile>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:generationmodule.GenerationReadingProfile)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:generationmodule.GenerationReadingProfile)
    MergeFrom(*source);
  }
}

void GenerationReadingProfile::MergeFrom(const GenerationReadingProfile& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:generationmodule.GenerationReadingProfile)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_readingmessageinfo()) {
    _internal_mutable_readingmessageinfo()->::commonmodule::ReadingMessageInfo::MergeFrom(from._internal_readingmessageinfo());
  }
  if (from.has_generatingunit()) {
    _internal_mutable_generatingunit()->::generationmodule::GeneratingUnit::MergeFrom(from._internal_generatingunit());
  }
  if (from.has_generationreading()) {
    _internal_mutable_generationreading()->::generationmodule::GenerationReading::MergeFrom(from._internal_generationreading());
  }
}

void GenerationReadingProfile::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:generationmodule.GenerationReadingProfile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GenerationReadingProfile::CopyFrom(const GenerationReadingProfile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:generationmodule.GenerationReadingProfile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GenerationReadingProfile::IsInitialized() const {
  return true;
}

void GenerationReadingProfile::InternalSwap(GenerationReadingProfile* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GenerationReadingProfile, generationreading_)
      + sizeof(GenerationReadingProfile::generationreading_)
      - PROTOBUF_FIELD_OFFSET(GenerationReadingProfile, readingmessageinfo_)>(
          reinterpret_cast<char*>(&readingmessageinfo_),
          reinterpret_cast<char*>(&other->readingmessageinfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GenerationReadingProfile::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GenerationPointStatus::_Internal {
 public:
  static const ::commonmodule::StatusSPS& blackstartenabled(const GenerationPointStatus* msg);
  static const ::commonmodule::StatusSPS& frequencysetpointenabled(const GenerationPointStatus* msg);
  static const PROTOBUF_NAMESPACE_ID::FloatValue& pcthzdroop(const GenerationPointStatus* msg);
  static const PROTOBUF_NAMESPACE_ID::FloatValue& pctvdroop(const GenerationPointStatus* msg);
  static const ::commonmodule::RampRate& ramprates(const GenerationPointStatus* msg);
  static const ::commonmodule::StatusSPS& reactivepwrsetpointenabled(const GenerationPointStatus* msg);
  static const ::commonmodule::StatusSPS& realpwrsetpointenabled(const GenerationPointStatus* msg);
  static const ::commonmodule::Optional_StateKind& state(const GenerationPointStatus* msg);
  static const ::commonmodule::StatusSPS& syncbacktogrid(const GenerationPointStatus* msg);
  static const ::commonmodule::StatusSPS& transtoislndongridlossenabled(const GenerationPointStatus* msg);
  static const ::commonmodule::StatusSPS& voltagesetpointenabled(const GenerationPointStatus* msg);
};

const ::commonmodule::StatusSPS&
GenerationPointStatus::_Internal::blackstartenabled(const GenerationPointStatus* msg) {
  return *msg->blackstartenabled_;
}
const ::commonmodule::StatusSPS&
GenerationPointStatus::_Internal::frequencysetpointenabled(const GenerationPointStatus* msg) {
  return *msg->frequencysetpointenabled_;
}
const PROTOBUF_NAMESPACE_ID::FloatValue&
GenerationPointStatus::_Internal::pcthzdroop(const GenerationPointStatus* msg) {
  return *msg->pcthzdroop_;
}
const PROTOBUF_NAMESPACE_ID::FloatValue&
GenerationPointStatus::_Internal::pctvdroop(const GenerationPointStatus* msg) {
  return *msg->pctvdroop_;
}
const ::commonmodule::RampRate&
GenerationPointStatus::_Internal::ramprates(const GenerationPointStatus* msg) {
  return *msg->ramprates_;
}
const ::commonmodule::StatusSPS&
GenerationPointStatus::_Internal::reactivepwrsetpointenabled(const GenerationPointStatus* msg) {
  return *msg->reactivepwrsetpointenabled_;
}
const ::commonmodule::StatusSPS&
GenerationPointStatus::_Internal::realpwrsetpointenabled(const GenerationPointStatus* msg) {
  return *msg->realpwrsetpointenabled_;
}
const ::commonmodule::Optional_StateKind&
GenerationPointStatus::_Internal::state(const GenerationPointStatus* msg) {
  return *msg->state_;
}
const ::commonmodule::StatusSPS&
GenerationPointStatus::_Internal::syncbacktogrid(const GenerationPointStatus* msg) {
  return *msg->syncbacktogrid_;
}
const ::commonmodule::StatusSPS&
GenerationPointStatus::_Internal::transtoislndongridlossenabled(const GenerationPointStatus* msg) {
  return *msg->transtoislndongridlossenabled_;
}
const ::commonmodule::StatusSPS&
GenerationPointStatus::_Internal::voltagesetpointenabled(const GenerationPointStatus* msg) {
  return *msg->voltagesetpointenabled_;
}
void GenerationPointStatus::clear_blackstartenabled() {
  if (GetArena() == nullptr && blackstartenabled_ != nullptr) {
    delete blackstartenabled_;
  }
  blackstartenabled_ = nullptr;
}
void GenerationPointStatus::clear_frequencysetpointenabled() {
  if (GetArena() == nullptr && frequencysetpointenabled_ != nullptr) {
    delete frequencysetpointenabled_;
  }
  frequencysetpointenabled_ = nullptr;
}
void GenerationPointStatus::clear_pcthzdroop() {
  if (GetArena() == nullptr && pcthzdroop_ != nullptr) {
    delete pcthzdroop_;
  }
  pcthzdroop_ = nullptr;
}
void GenerationPointStatus::clear_pctvdroop() {
  if (GetArena() == nullptr && pctvdroop_ != nullptr) {
    delete pctvdroop_;
  }
  pctvdroop_ = nullptr;
}
void GenerationPointStatus::clear_ramprates() {
  if (GetArena() == nullptr && ramprates_ != nullptr) {
    delete ramprates_;
  }
  ramprates_ = nullptr;
}
void GenerationPointStatus::clear_reactivepwrsetpointenabled() {
  if (GetArena() == nullptr && reactivepwrsetpointenabled_ != nullptr) {
    delete reactivepwrsetpointenabled_;
  }
  reactivepwrsetpointenabled_ = nullptr;
}
void GenerationPointStatus::clear_realpwrsetpointenabled() {
  if (GetArena() == nullptr && realpwrsetpointenabled_ != nullptr) {
    delete realpwrsetpointenabled_;
  }
  realpwrsetpointenabled_ = nullptr;
}
void GenerationPointStatus::clear_state() {
  if (GetArena() == nullptr && state_ != nullptr) {
    delete state_;
  }
  state_ = nullptr;
}
void GenerationPointStatus::clear_syncbacktogrid() {
  if (GetArena() == nullptr && syncbacktogrid_ != nullptr) {
    delete syncbacktogrid_;
  }
  syncbacktogrid_ = nullptr;
}
void GenerationPointStatus::clear_transtoislndongridlossenabled() {
  if (GetArena() == nullptr && transtoislndongridlossenabled_ != nullptr) {
    delete transtoislndongridlossenabled_;
  }
  transtoislndongridlossenabled_ = nullptr;
}
void GenerationPointStatus::clear_voltagesetpointenabled() {
  if (GetArena() == nullptr && voltagesetpointenabled_ != nullptr) {
    delete voltagesetpointenabled_;
  }
  voltagesetpointenabled_ = nullptr;
}
GenerationPointStatus::GenerationPointStatus(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:generationmodule.GenerationPointStatus)
}
GenerationPointStatus::GenerationPointStatus(const GenerationPointStatus& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_blackstartenabled()) {
    blackstartenabled_ = new ::commonmodule::StatusSPS(*from.blackstartenabled_);
  } else {
    blackstartenabled_ = nullptr;
  }
  if (from._internal_has_frequencysetpointenabled()) {
    frequencysetpointenabled_ = new ::commonmodule::StatusSPS(*from.frequencysetpointenabled_);
  } else {
    frequencysetpointenabled_ = nullptr;
  }
  if (from._internal_has_pcthzdroop()) {
    pcthzdroop_ = new PROTOBUF_NAMESPACE_ID::FloatValue(*from.pcthzdroop_);
  } else {
    pcthzdroop_ = nullptr;
  }
  if (from._internal_has_pctvdroop()) {
    pctvdroop_ = new PROTOBUF_NAMESPACE_ID::FloatValue(*from.pctvdroop_);
  } else {
    pctvdroop_ = nullptr;
  }
  if (from._internal_has_ramprates()) {
    ramprates_ = new ::commonmodule::RampRate(*from.ramprates_);
  } else {
    ramprates_ = nullptr;
  }
  if (from._internal_has_reactivepwrsetpointenabled()) {
    reactivepwrsetpointenabled_ = new ::commonmodule::StatusSPS(*from.reactivepwrsetpointenabled_);
  } else {
    reactivepwrsetpointenabled_ = nullptr;
  }
  if (from._internal_has_realpwrsetpointenabled()) {
    realpwrsetpointenabled_ = new ::commonmodule::StatusSPS(*from.realpwrsetpointenabled_);
  } else {
    realpwrsetpointenabled_ = nullptr;
  }
  if (from._internal_has_state()) {
    state_ = new ::commonmodule::Optional_StateKind(*from.state_);
  } else {
    state_ = nullptr;
  }
  if (from._internal_has_syncbacktogrid()) {
    syncbacktogrid_ = new ::commonmodule::StatusSPS(*from.syncbacktogrid_);
  } else {
    syncbacktogrid_ = nullptr;
  }
  if (from._internal_has_transtoislndongridlossenabled()) {
    transtoislndongridlossenabled_ = new ::commonmodule::StatusSPS(*from.transtoislndongridlossenabled_);
  } else {
    transtoislndongridlossenabled_ = nullptr;
  }
  if (from._internal_has_voltagesetpointenabled()) {
    voltagesetpointenabled_ = new ::commonmodule::StatusSPS(*from.voltagesetpointenabled_);
  } else {
    voltagesetpointenabled_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:generationmodule.GenerationPointStatus)
}

void GenerationPointStatus::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&blackstartenabled_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&voltagesetpointenabled_) -
    reinterpret_cast<char*>(&blackstartenabled_)) + sizeof(voltagesetpointenabled_));
}

GenerationPointStatus::~GenerationPointStatus() {
  // @@protoc_insertion_point(destructor:generationmodule.GenerationPointStatus)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GenerationPointStatus::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete blackstartenabled_;
  if (this != internal_default_instance()) delete frequencysetpointenabled_;
  if (this != internal_default_instance()) delete pcthzdroop_;
  if (this != internal_default_instance()) delete pctvdroop_;
  if (this != internal_default_instance()) delete ramprates_;
  if (this != internal_default_instance()) delete reactivepwrsetpointenabled_;
  if (this != internal_default_instance()) delete realpwrsetpointenabled_;
  if (this != internal_default_instance()) delete state_;
  if (this != internal_default_instance()) delete syncbacktogrid_;
  if (this != internal_default_instance()) delete transtoislndongridlossenabled_;
  if (this != internal_default_instance()) delete voltagesetpointenabled_;
}

void GenerationPointStatus::ArenaDtor(void* object) {
  GenerationPointStatus* _this = reinterpret_cast< GenerationPointStatus* >(object);
  (void)_this;
}
void GenerationPointStatus::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GenerationPointStatus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GenerationPointStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:generationmodule.GenerationPointStatus)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && blackstartenabled_ != nullptr) {
    delete blackstartenabled_;
  }
  blackstartenabled_ = nullptr;
  if (GetArena() == nullptr && frequencysetpointenabled_ != nullptr) {
    delete frequencysetpointenabled_;
  }
  frequencysetpointenabled_ = nullptr;
  if (GetArena() == nullptr && pcthzdroop_ != nullptr) {
    delete pcthzdroop_;
  }
  pcthzdroop_ = nullptr;
  if (GetArena() == nullptr && pctvdroop_ != nullptr) {
    delete pctvdroop_;
  }
  pctvdroop_ = nullptr;
  if (GetArena() == nullptr && ramprates_ != nullptr) {
    delete ramprates_;
  }
  ramprates_ = nullptr;
  if (GetArena() == nullptr && reactivepwrsetpointenabled_ != nullptr) {
    delete reactivepwrsetpointenabled_;
  }
  reactivepwrsetpointenabled_ = nullptr;
  if (GetArena() == nullptr && realpwrsetpointenabled_ != nullptr) {
    delete realpwrsetpointenabled_;
  }
  realpwrsetpointenabled_ = nullptr;
  if (GetArena() == nullptr && state_ != nullptr) {
    delete state_;
  }
  state_ = nullptr;
  if (GetArena() == nullptr && syncbacktogrid_ != nullptr) {
    delete syncbacktogrid_;
  }
  syncbacktogrid_ = nullptr;
  if (GetArena() == nullptr && transtoislndongridlossenabled_ != nullptr) {
    delete transtoislndongridlossenabled_;
  }
  transtoislndongridlossenabled_ = nullptr;
  if (GetArena() == nullptr && voltagesetpointenabled_ != nullptr) {
    delete voltagesetpointenabled_;
  }
  voltagesetpointenabled_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GenerationPointStatus::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .commonmodule.StatusSPS blackStartEnabled = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_blackstartenabled(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .commonmodule.StatusSPS frequencySetPointEnabled = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_frequencysetpointenabled(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.FloatValue pctHzDroop = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_pcthzdroop(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.FloatValue pctVDroop = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_pctvdroop(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .commonmodule.RampRate rampRates = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_ramprates(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .commonmodule.StatusSPS reactivePwrSetPointEnabled = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_reactivepwrsetpointenabled(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .commonmodule.StatusSPS realPwrSetPointEnabled = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_realpwrsetpointenabled(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .commonmodule.Optional_StateKind state = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_state(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .commonmodule.StatusSPS syncBackToGrid = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_syncbacktogrid(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .commonmodule.StatusSPS transToIslndOnGridLossEnabled = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_transtoislndongridlossenabled(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .commonmodule.StatusSPS voltageSetPointEnabled = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_voltagesetpointenabled(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GenerationPointStatus::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:generationmodule.GenerationPointStatus)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.StatusSPS blackStartEnabled = 1;
  if (this->has_blackstartenabled()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::blackstartenabled(this), target, stream);
  }

  // .commonmodule.StatusSPS frequencySetPointEnabled = 2;
  if (this->has_frequencysetpointenabled()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::frequencysetpointenabled(this), target, stream);
  }

  // .google.protobuf.FloatValue pctHzDroop = 3;
  if (this->has_pcthzdroop()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::pcthzdroop(this), target, stream);
  }

  // .google.protobuf.FloatValue pctVDroop = 4;
  if (this->has_pctvdroop()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::pctvdroop(this), target, stream);
  }

  // .commonmodule.RampRate rampRates = 5;
  if (this->has_ramprates()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::ramprates(this), target, stream);
  }

  // .commonmodule.StatusSPS reactivePwrSetPointEnabled = 6;
  if (this->has_reactivepwrsetpointenabled()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::reactivepwrsetpointenabled(this), target, stream);
  }

  // .commonmodule.StatusSPS realPwrSetPointEnabled = 7;
  if (this->has_realpwrsetpointenabled()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        7, _Internal::realpwrsetpointenabled(this), target, stream);
  }

  // .commonmodule.Optional_StateKind state = 8;
  if (this->has_state()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        8, _Internal::state(this), target, stream);
  }

  // .commonmodule.StatusSPS syncBackToGrid = 9;
  if (this->has_syncbacktogrid()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        9, _Internal::syncbacktogrid(this), target, stream);
  }

  // .commonmodule.StatusSPS transToIslndOnGridLossEnabled = 10;
  if (this->has_transtoislndongridlossenabled()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        10, _Internal::transtoislndongridlossenabled(this), target, stream);
  }

  // .commonmodule.StatusSPS voltageSetPointEnabled = 11;
  if (this->has_voltagesetpointenabled()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        11, _Internal::voltagesetpointenabled(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:generationmodule.GenerationPointStatus)
  return target;
}

size_t GenerationPointStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:generationmodule.GenerationPointStatus)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .commonmodule.StatusSPS blackStartEnabled = 1;
  if (this->has_blackstartenabled()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *blackstartenabled_);
  }

  // .commonmodule.StatusSPS frequencySetPointEnabled = 2;
  if (this->has_frequencysetpointenabled()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *frequencysetpointenabled_);
  }

  // .google.protobuf.FloatValue pctHzDroop = 3;
  if (this->has_pcthzdroop()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *pcthzdroop_);
  }

  // .google.protobuf.FloatValue pctVDroop = 4;
  if (this->has_pctvdroop()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *pctvdroop_);
  }

  // .commonmodule.RampRate rampRates = 5;
  if (this->has_ramprates()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *ramprates_);
  }

  // .commonmodule.StatusSPS reactivePwrSetPointEnabled = 6;
  if (this->has_reactivepwrsetpointenabled()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *reactivepwrsetpointenabled_);
  }

  // .commonmodule.StatusSPS realPwrSetPointEnabled = 7;
  if (this->has_realpwrsetpointenabled()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *realpwrsetpointenabled_);
  }

  // .commonmodule.Optional_StateKind state = 8;
  if (this->has_state()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *state_);
  }

  // .commonmodule.StatusSPS syncBackToGrid = 9;
  if (this->has_syncbacktogrid()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *syncbacktogrid_);
  }

  // .commonmodule.StatusSPS transToIslndOnGridLossEnabled = 10;
  if (this->has_transtoislndongridlossenabled()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *transtoislndongridlossenabled_);
  }

  // .commonmodule.StatusSPS voltageSetPointEnabled = 11;
  if (this->has_voltagesetpointenabled()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *voltagesetpointenabled_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GenerationPointStatus::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:generationmodule.GenerationPointStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const GenerationPointStatus* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GenerationPointStatus>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:generationmodule.GenerationPointStatus)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:generationmodule.GenerationPointStatus)
    MergeFrom(*source);
  }
}

void GenerationPointStatus::MergeFrom(const GenerationPointStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:generationmodule.GenerationPointStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_blackstartenabled()) {
    _internal_mutable_blackstartenabled()->::commonmodule::StatusSPS::MergeFrom(from._internal_blackstartenabled());
  }
  if (from.has_frequencysetpointenabled()) {
    _internal_mutable_frequencysetpointenabled()->::commonmodule::StatusSPS::MergeFrom(from._internal_frequencysetpointenabled());
  }
  if (from.has_pcthzdroop()) {
    _internal_mutable_pcthzdroop()->PROTOBUF_NAMESPACE_ID::FloatValue::MergeFrom(from._internal_pcthzdroop());
  }
  if (from.has_pctvdroop()) {
    _internal_mutable_pctvdroop()->PROTOBUF_NAMESPACE_ID::FloatValue::MergeFrom(from._internal_pctvdroop());
  }
  if (from.has_ramprates()) {
    _internal_mutable_ramprates()->::commonmodule::RampRate::MergeFrom(from._internal_ramprates());
  }
  if (from.has_reactivepwrsetpointenabled()) {
    _internal_mutable_reactivepwrsetpointenabled()->::commonmodule::StatusSPS::MergeFrom(from._internal_reactivepwrsetpointenabled());
  }
  if (from.has_realpwrsetpointenabled()) {
    _internal_mutable_realpwrsetpointenabled()->::commonmodule::StatusSPS::MergeFrom(from._internal_realpwrsetpointenabled());
  }
  if (from.has_state()) {
    _internal_mutable_state()->::commonmodule::Optional_StateKind::MergeFrom(from._internal_state());
  }
  if (from.has_syncbacktogrid()) {
    _internal_mutable_syncbacktogrid()->::commonmodule::StatusSPS::MergeFrom(from._internal_syncbacktogrid());
  }
  if (from.has_transtoislndongridlossenabled()) {
    _internal_mutable_transtoislndongridlossenabled()->::commonmodule::StatusSPS::MergeFrom(from._internal_transtoislndongridlossenabled());
  }
  if (from.has_voltagesetpointenabled()) {
    _internal_mutable_voltagesetpointenabled()->::commonmodule::StatusSPS::MergeFrom(from._internal_voltagesetpointenabled());
  }
}

void GenerationPointStatus::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:generationmodule.GenerationPointStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GenerationPointStatus::CopyFrom(const GenerationPointStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:generationmodule.GenerationPointStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GenerationPointStatus::IsInitialized() const {
  return true;
}

void GenerationPointStatus::InternalSwap(GenerationPointStatus* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GenerationPointStatus, voltagesetpointenabled_)
      + sizeof(GenerationPointStatus::voltagesetpointenabled_)
      - PROTOBUF_FIELD_OFFSET(GenerationPointStatus, blackstartenabled_)>(
          reinterpret_cast<char*>(&blackstartenabled_),
          reinterpret_cast<char*>(&other->blackstartenabled_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GenerationPointStatus::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GenerationEventAndStatusZGEN::_Internal {
 public:
  static const ::commonmodule::LogicalNodeForEventAndStatus& logicalnodeforeventandstatus(const GenerationEventAndStatusZGEN* msg);
  static const ::commonmodule::StatusSPS& auxpwrst(const GenerationEventAndStatusZGEN* msg);
  static const ::commonmodule::ENS_DynamicTestKind& dynamictest(const GenerationEventAndStatusZGEN* msg);
  static const ::commonmodule::StatusSPS& emgstop(const GenerationEventAndStatusZGEN* msg);
  static const ::commonmodule::StatusSPS& gnsynst(const GenerationEventAndStatusZGEN* msg);
  static const ::generationmodule::GenerationPointStatus& pointstatus(const GenerationEventAndStatusZGEN* msg);
};

const ::commonmodule::LogicalNodeForEventAndStatus&
GenerationEventAndStatusZGEN::_Internal::logicalnodeforeventandstatus(const GenerationEventAndStatusZGEN* msg) {
  return *msg->logicalnodeforeventandstatus_;
}
const ::commonmodule::StatusSPS&
GenerationEventAndStatusZGEN::_Internal::auxpwrst(const GenerationEventAndStatusZGEN* msg) {
  return *msg->auxpwrst_;
}
const ::commonmodule::ENS_DynamicTestKind&
GenerationEventAndStatusZGEN::_Internal::dynamictest(const GenerationEventAndStatusZGEN* msg) {
  return *msg->dynamictest_;
}
const ::commonmodule::StatusSPS&
GenerationEventAndStatusZGEN::_Internal::emgstop(const GenerationEventAndStatusZGEN* msg) {
  return *msg->emgstop_;
}
const ::commonmodule::StatusSPS&
GenerationEventAndStatusZGEN::_Internal::gnsynst(const GenerationEventAndStatusZGEN* msg) {
  return *msg->gnsynst_;
}
const ::generationmodule::GenerationPointStatus&
GenerationEventAndStatusZGEN::_Internal::pointstatus(const GenerationEventAndStatusZGEN* msg) {
  return *msg->pointstatus_;
}
void GenerationEventAndStatusZGEN::clear_logicalnodeforeventandstatus() {
  if (GetArena() == nullptr && logicalnodeforeventandstatus_ != nullptr) {
    delete logicalnodeforeventandstatus_;
  }
  logicalnodeforeventandstatus_ = nullptr;
}
void GenerationEventAndStatusZGEN::clear_auxpwrst() {
  if (GetArena() == nullptr && auxpwrst_ != nullptr) {
    delete auxpwrst_;
  }
  auxpwrst_ = nullptr;
}
void GenerationEventAndStatusZGEN::clear_dynamictest() {
  if (GetArena() == nullptr && dynamictest_ != nullptr) {
    delete dynamictest_;
  }
  dynamictest_ = nullptr;
}
void GenerationEventAndStatusZGEN::clear_emgstop() {
  if (GetArena() == nullptr && emgstop_ != nullptr) {
    delete emgstop_;
  }
  emgstop_ = nullptr;
}
void GenerationEventAndStatusZGEN::clear_gnsynst() {
  if (GetArena() == nullptr && gnsynst_ != nullptr) {
    delete gnsynst_;
  }
  gnsynst_ = nullptr;
}
GenerationEventAndStatusZGEN::GenerationEventAndStatusZGEN(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:generationmodule.GenerationEventAndStatusZGEN)
}
GenerationEventAndStatusZGEN::GenerationEventAndStatusZGEN(const GenerationEventAndStatusZGEN& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_logicalnodeforeventandstatus()) {
    logicalnodeforeventandstatus_ = new ::commonmodule::LogicalNodeForEventAndStatus(*from.logicalnodeforeventandstatus_);
  } else {
    logicalnodeforeventandstatus_ = nullptr;
  }
  if (from._internal_has_auxpwrst()) {
    auxpwrst_ = new ::commonmodule::StatusSPS(*from.auxpwrst_);
  } else {
    auxpwrst_ = nullptr;
  }
  if (from._internal_has_dynamictest()) {
    dynamictest_ = new ::commonmodule::ENS_DynamicTestKind(*from.dynamictest_);
  } else {
    dynamictest_ = nullptr;
  }
  if (from._internal_has_emgstop()) {
    emgstop_ = new ::commonmodule::StatusSPS(*from.emgstop_);
  } else {
    emgstop_ = nullptr;
  }
  if (from._internal_has_gnsynst()) {
    gnsynst_ = new ::commonmodule::StatusSPS(*from.gnsynst_);
  } else {
    gnsynst_ = nullptr;
  }
  if (from._internal_has_pointstatus()) {
    pointstatus_ = new ::generationmodule::GenerationPointStatus(*from.pointstatus_);
  } else {
    pointstatus_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:generationmodule.GenerationEventAndStatusZGEN)
}

void GenerationEventAndStatusZGEN::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&logicalnodeforeventandstatus_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&pointstatus_) -
    reinterpret_cast<char*>(&logicalnodeforeventandstatus_)) + sizeof(pointstatus_));
}

GenerationEventAndStatusZGEN::~GenerationEventAndStatusZGEN() {
  // @@protoc_insertion_point(destructor:generationmodule.GenerationEventAndStatusZGEN)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GenerationEventAndStatusZGEN::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete logicalnodeforeventandstatus_;
  if (this != internal_default_instance()) delete auxpwrst_;
  if (this != internal_default_instance()) delete dynamictest_;
  if (this != internal_default_instance()) delete emgstop_;
  if (this != internal_default_instance()) delete gnsynst_;
  if (this != internal_default_instance()) delete pointstatus_;
}

void GenerationEventAndStatusZGEN::ArenaDtor(void* object) {
  GenerationEventAndStatusZGEN* _this = reinterpret_cast< GenerationEventAndStatusZGEN* >(object);
  (void)_this;
}
void GenerationEventAndStatusZGEN::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GenerationEventAndStatusZGEN::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GenerationEventAndStatusZGEN::Clear() {
// @@protoc_insertion_point(message_clear_start:generationmodule.GenerationEventAndStatusZGEN)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && logicalnodeforeventandstatus_ != nullptr) {
    delete logicalnodeforeventandstatus_;
  }
  logicalnodeforeventandstatus_ = nullptr;
  if (GetArena() == nullptr && auxpwrst_ != nullptr) {
    delete auxpwrst_;
  }
  auxpwrst_ = nullptr;
  if (GetArena() == nullptr && dynamictest_ != nullptr) {
    delete dynamictest_;
  }
  dynamictest_ = nullptr;
  if (GetArena() == nullptr && emgstop_ != nullptr) {
    delete emgstop_;
  }
  emgstop_ = nullptr;
  if (GetArena() == nullptr && gnsynst_ != nullptr) {
    delete gnsynst_;
  }
  gnsynst_ = nullptr;
  if (GetArena() == nullptr && pointstatus_ != nullptr) {
    delete pointstatus_;
  }
  pointstatus_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GenerationEventAndStatusZGEN::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .commonmodule.LogicalNodeForEventAndStatus logicalNodeForEventAndStatus = 1 [(.uml.option_parent_message) = true];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_logicalnodeforeventandstatus(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .commonmodule.StatusSPS AuxPwrSt = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_auxpwrst(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .commonmodule.ENS_DynamicTestKind DynamicTest = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_dynamictest(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .commonmodule.StatusSPS EmgStop = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_emgstop(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .commonmodule.StatusSPS GnSynSt = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_gnsynst(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .generationmodule.GenerationPointStatus PointStatus = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_pointstatus(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GenerationEventAndStatusZGEN::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:generationmodule.GenerationEventAndStatusZGEN)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.LogicalNodeForEventAndStatus logicalNodeForEventAndStatus = 1 [(.uml.option_parent_message) = true];
  if (this->has_logicalnodeforeventandstatus()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::logicalnodeforeventandstatus(this), target, stream);
  }

  // .commonmodule.StatusSPS AuxPwrSt = 2;
  if (this->has_auxpwrst()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::auxpwrst(this), target, stream);
  }

  // .commonmodule.ENS_DynamicTestKind DynamicTest = 3;
  if (this->has_dynamictest()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::dynamictest(this), target, stream);
  }

  // .commonmodule.StatusSPS EmgStop = 4;
  if (this->has_emgstop()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::emgstop(this), target, stream);
  }

  // .commonmodule.StatusSPS GnSynSt = 5;
  if (this->has_gnsynst()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::gnsynst(this), target, stream);
  }

  // .generationmodule.GenerationPointStatus PointStatus = 6;
  if (this->has_pointstatus()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::pointstatus(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:generationmodule.GenerationEventAndStatusZGEN)
  return target;
}

size_t GenerationEventAndStatusZGEN::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:generationmodule.GenerationEventAndStatusZGEN)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .commonmodule.LogicalNodeForEventAndStatus logicalNodeForEventAndStatus = 1 [(.uml.option_parent_message) = true];
  if (this->has_logicalnodeforeventandstatus()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *logicalnodeforeventandstatus_);
  }

  // .commonmodule.StatusSPS AuxPwrSt = 2;
  if (this->has_auxpwrst()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *auxpwrst_);
  }

  // .commonmodule.ENS_DynamicTestKind DynamicTest = 3;
  if (this->has_dynamictest()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *dynamictest_);
  }

  // .commonmodule.StatusSPS EmgStop = 4;
  if (this->has_emgstop()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *emgstop_);
  }

  // .commonmodule.StatusSPS GnSynSt = 5;
  if (this->has_gnsynst()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *gnsynst_);
  }

  // .generationmodule.GenerationPointStatus PointStatus = 6;
  if (this->has_pointstatus()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *pointstatus_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GenerationEventAndStatusZGEN::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:generationmodule.GenerationEventAndStatusZGEN)
  GOOGLE_DCHECK_NE(&from, this);
  const GenerationEventAndStatusZGEN* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GenerationEventAndStatusZGEN>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:generationmodule.GenerationEventAndStatusZGEN)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:generationmodule.GenerationEventAndStatusZGEN)
    MergeFrom(*source);
  }
}

void GenerationEventAndStatusZGEN::MergeFrom(const GenerationEventAndStatusZGEN& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:generationmodule.GenerationEventAndStatusZGEN)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_logicalnodeforeventandstatus()) {
    _internal_mutable_logicalnodeforeventandstatus()->::commonmodule::LogicalNodeForEventAndStatus::MergeFrom(from._internal_logicalnodeforeventandstatus());
  }
  if (from.has_auxpwrst()) {
    _internal_mutable_auxpwrst()->::commonmodule::StatusSPS::MergeFrom(from._internal_auxpwrst());
  }
  if (from.has_dynamictest()) {
    _internal_mutable_dynamictest()->::commonmodule::ENS_DynamicTestKind::MergeFrom(from._internal_dynamictest());
  }
  if (from.has_emgstop()) {
    _internal_mutable_emgstop()->::commonmodule::StatusSPS::MergeFrom(from._internal_emgstop());
  }
  if (from.has_gnsynst()) {
    _internal_mutable_gnsynst()->::commonmodule::StatusSPS::MergeFrom(from._internal_gnsynst());
  }
  if (from.has_pointstatus()) {
    _internal_mutable_pointstatus()->::generationmodule::GenerationPointStatus::MergeFrom(from._internal_pointstatus());
  }
}

void GenerationEventAndStatusZGEN::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:generationmodule.GenerationEventAndStatusZGEN)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GenerationEventAndStatusZGEN::CopyFrom(const GenerationEventAndStatusZGEN& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:generationmodule.GenerationEventAndStatusZGEN)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GenerationEventAndStatusZGEN::IsInitialized() const {
  return true;
}

void GenerationEventAndStatusZGEN::InternalSwap(GenerationEventAndStatusZGEN* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GenerationEventAndStatusZGEN, pointstatus_)
      + sizeof(GenerationEventAndStatusZGEN::pointstatus_)
      - PROTOBUF_FIELD_OFFSET(GenerationEventAndStatusZGEN, logicalnodeforeventandstatus_)>(
          reinterpret_cast<char*>(&logicalnodeforeventandstatus_),
          reinterpret_cast<char*>(&other->logicalnodeforeventandstatus_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GenerationEventAndStatusZGEN::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GenerationEventZGEN::_Internal {
 public:
  static const ::generationmodule::GenerationEventAndStatusZGEN& generationeventandstatuszgen(const GenerationEventZGEN* msg);
};

const ::generationmodule::GenerationEventAndStatusZGEN&
GenerationEventZGEN::_Internal::generationeventandstatuszgen(const GenerationEventZGEN* msg) {
  return *msg->generationeventandstatuszgen_;
}
GenerationEventZGEN::GenerationEventZGEN(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:generationmodule.GenerationEventZGEN)
}
GenerationEventZGEN::GenerationEventZGEN(const GenerationEventZGEN& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_generationeventandstatuszgen()) {
    generationeventandstatuszgen_ = new ::generationmodule::GenerationEventAndStatusZGEN(*from.generationeventandstatuszgen_);
  } else {
    generationeventandstatuszgen_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:generationmodule.GenerationEventZGEN)
}

void GenerationEventZGEN::SharedCtor() {
generationeventandstatuszgen_ = nullptr;
}

GenerationEventZGEN::~GenerationEventZGEN() {
  // @@protoc_insertion_point(destructor:generationmodule.GenerationEventZGEN)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GenerationEventZGEN::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete generationeventandstatuszgen_;
}

void GenerationEventZGEN::ArenaDtor(void* object) {
  GenerationEventZGEN* _this = reinterpret_cast< GenerationEventZGEN* >(object);
  (void)_this;
}
void GenerationEventZGEN::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GenerationEventZGEN::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GenerationEventZGEN::Clear() {
// @@protoc_insertion_point(message_clear_start:generationmodule.GenerationEventZGEN)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && generationeventandstatuszgen_ != nullptr) {
    delete generationeventandstatuszgen_;
  }
  generationeventandstatuszgen_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GenerationEventZGEN::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .generationmodule.GenerationEventAndStatusZGEN generationEventAndStatusZGEN = 1 [(.uml.option_parent_message) = true];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_generationeventandstatuszgen(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GenerationEventZGEN::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:generationmodule.GenerationEventZGEN)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .generationmodule.GenerationEventAndStatusZGEN generationEventAndStatusZGEN = 1 [(.uml.option_parent_message) = true];
  if (this->has_generationeventandstatuszgen()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::generationeventandstatuszgen(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:generationmodule.GenerationEventZGEN)
  return target;
}

size_t GenerationEventZGEN::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:generationmodule.GenerationEventZGEN)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .generationmodule.GenerationEventAndStatusZGEN generationEventAndStatusZGEN = 1 [(.uml.option_parent_message) = true];
  if (this->has_generationeventandstatuszgen()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *generationeventandstatuszgen_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GenerationEventZGEN::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:generationmodule.GenerationEventZGEN)
  GOOGLE_DCHECK_NE(&from, this);
  const GenerationEventZGEN* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GenerationEventZGEN>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:generationmodule.GenerationEventZGEN)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:generationmodule.GenerationEventZGEN)
    MergeFrom(*source);
  }
}

void GenerationEventZGEN::MergeFrom(const GenerationEventZGEN& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:generationmodule.GenerationEventZGEN)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_generationeventandstatuszgen()) {
    _internal_mutable_generationeventandstatuszgen()->::generationmodule::GenerationEventAndStatusZGEN::MergeFrom(from._internal_generationeventandstatuszgen());
  }
}

void GenerationEventZGEN::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:generationmodule.GenerationEventZGEN)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GenerationEventZGEN::CopyFrom(const GenerationEventZGEN& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:generationmodule.GenerationEventZGEN)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GenerationEventZGEN::IsInitialized() const {
  return true;
}

void GenerationEventZGEN::InternalSwap(GenerationEventZGEN* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(generationeventandstatuszgen_, other->generationeventandstatuszgen_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GenerationEventZGEN::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GenerationEvent::_Internal {
 public:
  static const ::commonmodule::EventValue& eventvalue(const GenerationEvent* msg);
  static const ::generationmodule::GenerationEventZGEN& generationeventzgen(const GenerationEvent* msg);
};

const ::commonmodule::EventValue&
GenerationEvent::_Internal::eventvalue(const GenerationEvent* msg) {
  return *msg->eventvalue_;
}
const ::generationmodule::GenerationEventZGEN&
GenerationEvent::_Internal::generationeventzgen(const GenerationEvent* msg) {
  return *msg->generationeventzgen_;
}
void GenerationEvent::clear_eventvalue() {
  if (GetArena() == nullptr && eventvalue_ != nullptr) {
    delete eventvalue_;
  }
  eventvalue_ = nullptr;
}
GenerationEvent::GenerationEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:generationmodule.GenerationEvent)
}
GenerationEvent::GenerationEvent(const GenerationEvent& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_eventvalue()) {
    eventvalue_ = new ::commonmodule::EventValue(*from.eventvalue_);
  } else {
    eventvalue_ = nullptr;
  }
  if (from._internal_has_generationeventzgen()) {
    generationeventzgen_ = new ::generationmodule::GenerationEventZGEN(*from.generationeventzgen_);
  } else {
    generationeventzgen_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:generationmodule.GenerationEvent)
}

void GenerationEvent::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&eventvalue_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&generationeventzgen_) -
    reinterpret_cast<char*>(&eventvalue_)) + sizeof(generationeventzgen_));
}

GenerationEvent::~GenerationEvent() {
  // @@protoc_insertion_point(destructor:generationmodule.GenerationEvent)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GenerationEvent::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete eventvalue_;
  if (this != internal_default_instance()) delete generationeventzgen_;
}

void GenerationEvent::ArenaDtor(void* object) {
  GenerationEvent* _this = reinterpret_cast< GenerationEvent* >(object);
  (void)_this;
}
void GenerationEvent::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GenerationEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GenerationEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:generationmodule.GenerationEvent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && eventvalue_ != nullptr) {
    delete eventvalue_;
  }
  eventvalue_ = nullptr;
  if (GetArena() == nullptr && generationeventzgen_ != nullptr) {
    delete generationeventzgen_;
  }
  generationeventzgen_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GenerationEvent::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .commonmodule.EventValue eventValue = 1 [(.uml.option_parent_message) = true];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_eventvalue(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .generationmodule.GenerationEventZGEN generationEventZGEN = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_generationeventzgen(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GenerationEvent::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:generationmodule.GenerationEvent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.EventValue eventValue = 1 [(.uml.option_parent_message) = true];
  if (this->has_eventvalue()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::eventvalue(this), target, stream);
  }

  // .generationmodule.GenerationEventZGEN generationEventZGEN = 2;
  if (this->has_generationeventzgen()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::generationeventzgen(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:generationmodule.GenerationEvent)
  return target;
}

size_t GenerationEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:generationmodule.GenerationEvent)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .commonmodule.EventValue eventValue = 1 [(.uml.option_parent_message) = true];
  if (this->has_eventvalue()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *eventvalue_);
  }

  // .generationmodule.GenerationEventZGEN generationEventZGEN = 2;
  if (this->has_generationeventzgen()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *generationeventzgen_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GenerationEvent::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:generationmodule.GenerationEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const GenerationEvent* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GenerationEvent>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:generationmodule.GenerationEvent)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:generationmodule.GenerationEvent)
    MergeFrom(*source);
  }
}

void GenerationEvent::MergeFrom(const GenerationEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:generationmodule.GenerationEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_eventvalue()) {
    _internal_mutable_eventvalue()->::commonmodule::EventValue::MergeFrom(from._internal_eventvalue());
  }
  if (from.has_generationeventzgen()) {
    _internal_mutable_generationeventzgen()->::generationmodule::GenerationEventZGEN::MergeFrom(from._internal_generationeventzgen());
  }
}

void GenerationEvent::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:generationmodule.GenerationEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GenerationEvent::CopyFrom(const GenerationEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:generationmodule.GenerationEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GenerationEvent::IsInitialized() const {
  return true;
}

void GenerationEvent::InternalSwap(GenerationEvent* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GenerationEvent, generationeventzgen_)
      + sizeof(GenerationEvent::generationeventzgen_)
      - PROTOBUF_FIELD_OFFSET(GenerationEvent, eventvalue_)>(
          reinterpret_cast<char*>(&eventvalue_),
          reinterpret_cast<char*>(&other->eventvalue_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GenerationEvent::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GenerationEventProfile::_Internal {
 public:
  static const ::commonmodule::EventMessageInfo& eventmessageinfo(const GenerationEventProfile* msg);
  static const ::generationmodule::GeneratingUnit& generatingunit(const GenerationEventProfile* msg);
  static const ::generationmodule::GenerationEvent& generationevent(const GenerationEventProfile* msg);
};

const ::commonmodule::EventMessageInfo&
GenerationEventProfile::_Internal::eventmessageinfo(const GenerationEventProfile* msg) {
  return *msg->eventmessageinfo_;
}
const ::generationmodule::GeneratingUnit&
GenerationEventProfile::_Internal::generatingunit(const GenerationEventProfile* msg) {
  return *msg->generatingunit_;
}
const ::generationmodule::GenerationEvent&
GenerationEventProfile::_Internal::generationevent(const GenerationEventProfile* msg) {
  return *msg->generationevent_;
}
void GenerationEventProfile::clear_eventmessageinfo() {
  if (GetArena() == nullptr && eventmessageinfo_ != nullptr) {
    delete eventmessageinfo_;
  }
  eventmessageinfo_ = nullptr;
}
GenerationEventProfile::GenerationEventProfile(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:generationmodule.GenerationEventProfile)
}
GenerationEventProfile::GenerationEventProfile(const GenerationEventProfile& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_eventmessageinfo()) {
    eventmessageinfo_ = new ::commonmodule::EventMessageInfo(*from.eventmessageinfo_);
  } else {
    eventmessageinfo_ = nullptr;
  }
  if (from._internal_has_generatingunit()) {
    generatingunit_ = new ::generationmodule::GeneratingUnit(*from.generatingunit_);
  } else {
    generatingunit_ = nullptr;
  }
  if (from._internal_has_generationevent()) {
    generationevent_ = new ::generationmodule::GenerationEvent(*from.generationevent_);
  } else {
    generationevent_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:generationmodule.GenerationEventProfile)
}

void GenerationEventProfile::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&eventmessageinfo_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&generationevent_) -
    reinterpret_cast<char*>(&eventmessageinfo_)) + sizeof(generationevent_));
}

GenerationEventProfile::~GenerationEventProfile() {
  // @@protoc_insertion_point(destructor:generationmodule.GenerationEventProfile)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GenerationEventProfile::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete eventmessageinfo_;
  if (this != internal_default_instance()) delete generatingunit_;
  if (this != internal_default_instance()) delete generationevent_;
}

void GenerationEventProfile::ArenaDtor(void* object) {
  GenerationEventProfile* _this = reinterpret_cast< GenerationEventProfile* >(object);
  (void)_this;
}
void GenerationEventProfile::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GenerationEventProfile::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GenerationEventProfile::Clear() {
// @@protoc_insertion_point(message_clear_start:generationmodule.GenerationEventProfile)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && eventmessageinfo_ != nullptr) {
    delete eventmessageinfo_;
  }
  eventmessageinfo_ = nullptr;
  if (GetArena() == nullptr && generatingunit_ != nullptr) {
    delete generatingunit_;
  }
  generatingunit_ = nullptr;
  if (GetArena() == nullptr && generationevent_ != nullptr) {
    delete generationevent_;
  }
  generationevent_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GenerationEventProfile::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .commonmodule.EventMessageInfo eventMessageInfo = 1 [(.uml.option_parent_message) = true];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_eventmessageinfo(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .generationmodule.GeneratingUnit generatingUnit = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_generatingunit(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .generationmodule.GenerationEvent generationEvent = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_generationevent(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GenerationEventProfile::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:generationmodule.GenerationEventProfile)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.EventMessageInfo eventMessageInfo = 1 [(.uml.option_parent_message) = true];
  if (this->has_eventmessageinfo()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::eventmessageinfo(this), target, stream);
  }

  // .generationmodule.GeneratingUnit generatingUnit = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_generatingunit()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::generatingunit(this), target, stream);
  }

  // .generationmodule.GenerationEvent generationEvent = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_generationevent()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::generationevent(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:generationmodule.GenerationEventProfile)
  return target;
}

size_t GenerationEventProfile::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:generationmodule.GenerationEventProfile)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .commonmodule.EventMessageInfo eventMessageInfo = 1 [(.uml.option_parent_message) = true];
  if (this->has_eventmessageinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *eventmessageinfo_);
  }

  // .generationmodule.GeneratingUnit generatingUnit = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_generatingunit()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *generatingunit_);
  }

  // .generationmodule.GenerationEvent generationEvent = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_generationevent()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *generationevent_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GenerationEventProfile::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:generationmodule.GenerationEventProfile)
  GOOGLE_DCHECK_NE(&from, this);
  const GenerationEventProfile* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GenerationEventProfile>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:generationmodule.GenerationEventProfile)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:generationmodule.GenerationEventProfile)
    MergeFrom(*source);
  }
}

void GenerationEventProfile::MergeFrom(const GenerationEventProfile& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:generationmodule.GenerationEventProfile)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_eventmessageinfo()) {
    _internal_mutable_eventmessageinfo()->::commonmodule::EventMessageInfo::MergeFrom(from._internal_eventmessageinfo());
  }
  if (from.has_generatingunit()) {
    _internal_mutable_generatingunit()->::generationmodule::GeneratingUnit::MergeFrom(from._internal_generatingunit());
  }
  if (from.has_generationevent()) {
    _internal_mutable_generationevent()->::generationmodule::GenerationEvent::MergeFrom(from._internal_generationevent());
  }
}

void GenerationEventProfile::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:generationmodule.GenerationEventProfile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GenerationEventProfile::CopyFrom(const GenerationEventProfile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:generationmodule.GenerationEventProfile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GenerationEventProfile::IsInitialized() const {
  return true;
}

void GenerationEventProfile::InternalSwap(GenerationEventProfile* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GenerationEventProfile, generationevent_)
      + sizeof(GenerationEventProfile::generationevent_)
      - PROTOBUF_FIELD_OFFSET(GenerationEventProfile, eventmessageinfo_)>(
          reinterpret_cast<char*>(&eventmessageinfo_),
          reinterpret_cast<char*>(&other->eventmessageinfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GenerationEventProfile::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GenerationStatusZGEN::_Internal {
 public:
  static const ::generationmodule::GenerationEventAndStatusZGEN& generationeventandstatuszgen(const GenerationStatusZGEN* msg);
};

const ::generationmodule::GenerationEventAndStatusZGEN&
GenerationStatusZGEN::_Internal::generationeventandstatuszgen(const GenerationStatusZGEN* msg) {
  return *msg->generationeventandstatuszgen_;
}
GenerationStatusZGEN::GenerationStatusZGEN(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:generationmodule.GenerationStatusZGEN)
}
GenerationStatusZGEN::GenerationStatusZGEN(const GenerationStatusZGEN& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_generationeventandstatuszgen()) {
    generationeventandstatuszgen_ = new ::generationmodule::GenerationEventAndStatusZGEN(*from.generationeventandstatuszgen_);
  } else {
    generationeventandstatuszgen_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:generationmodule.GenerationStatusZGEN)
}

void GenerationStatusZGEN::SharedCtor() {
generationeventandstatuszgen_ = nullptr;
}

GenerationStatusZGEN::~GenerationStatusZGEN() {
  // @@protoc_insertion_point(destructor:generationmodule.GenerationStatusZGEN)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GenerationStatusZGEN::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete generationeventandstatuszgen_;
}

void GenerationStatusZGEN::ArenaDtor(void* object) {
  GenerationStatusZGEN* _this = reinterpret_cast< GenerationStatusZGEN* >(object);
  (void)_this;
}
void GenerationStatusZGEN::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GenerationStatusZGEN::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GenerationStatusZGEN::Clear() {
// @@protoc_insertion_point(message_clear_start:generationmodule.GenerationStatusZGEN)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && generationeventandstatuszgen_ != nullptr) {
    delete generationeventandstatuszgen_;
  }
  generationeventandstatuszgen_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GenerationStatusZGEN::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .generationmodule.GenerationEventAndStatusZGEN generationEventAndStatusZGEN = 1 [(.uml.option_parent_message) = true];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_generationeventandstatuszgen(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GenerationStatusZGEN::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:generationmodule.GenerationStatusZGEN)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .generationmodule.GenerationEventAndStatusZGEN generationEventAndStatusZGEN = 1 [(.uml.option_parent_message) = true];
  if (this->has_generationeventandstatuszgen()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::generationeventandstatuszgen(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:generationmodule.GenerationStatusZGEN)
  return target;
}

size_t GenerationStatusZGEN::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:generationmodule.GenerationStatusZGEN)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .generationmodule.GenerationEventAndStatusZGEN generationEventAndStatusZGEN = 1 [(.uml.option_parent_message) = true];
  if (this->has_generationeventandstatuszgen()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *generationeventandstatuszgen_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GenerationStatusZGEN::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:generationmodule.GenerationStatusZGEN)
  GOOGLE_DCHECK_NE(&from, this);
  const GenerationStatusZGEN* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GenerationStatusZGEN>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:generationmodule.GenerationStatusZGEN)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:generationmodule.GenerationStatusZGEN)
    MergeFrom(*source);
  }
}

void GenerationStatusZGEN::MergeFrom(const GenerationStatusZGEN& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:generationmodule.GenerationStatusZGEN)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_generationeventandstatuszgen()) {
    _internal_mutable_generationeventandstatuszgen()->::generationmodule::GenerationEventAndStatusZGEN::MergeFrom(from._internal_generationeventandstatuszgen());
  }
}

void GenerationStatusZGEN::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:generationmodule.GenerationStatusZGEN)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GenerationStatusZGEN::CopyFrom(const GenerationStatusZGEN& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:generationmodule.GenerationStatusZGEN)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GenerationStatusZGEN::IsInitialized() const {
  return true;
}

void GenerationStatusZGEN::InternalSwap(GenerationStatusZGEN* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(generationeventandstatuszgen_, other->generationeventandstatuszgen_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GenerationStatusZGEN::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GenerationStatus::_Internal {
 public:
  static const ::commonmodule::StatusValue& statusvalue(const GenerationStatus* msg);
  static const ::generationmodule::GenerationStatusZGEN& generationstatuszgen(const GenerationStatus* msg);
};

const ::commonmodule::StatusValue&
GenerationStatus::_Internal::statusvalue(const GenerationStatus* msg) {
  return *msg->statusvalue_;
}
const ::generationmodule::GenerationStatusZGEN&
GenerationStatus::_Internal::generationstatuszgen(const GenerationStatus* msg) {
  return *msg->generationstatuszgen_;
}
void GenerationStatus::clear_statusvalue() {
  if (GetArena() == nullptr && statusvalue_ != nullptr) {
    delete statusvalue_;
  }
  statusvalue_ = nullptr;
}
GenerationStatus::GenerationStatus(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:generationmodule.GenerationStatus)
}
GenerationStatus::GenerationStatus(const GenerationStatus& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_statusvalue()) {
    statusvalue_ = new ::commonmodule::StatusValue(*from.statusvalue_);
  } else {
    statusvalue_ = nullptr;
  }
  if (from._internal_has_generationstatuszgen()) {
    generationstatuszgen_ = new ::generationmodule::GenerationStatusZGEN(*from.generationstatuszgen_);
  } else {
    generationstatuszgen_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:generationmodule.GenerationStatus)
}

void GenerationStatus::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&statusvalue_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&generationstatuszgen_) -
    reinterpret_cast<char*>(&statusvalue_)) + sizeof(generationstatuszgen_));
}

GenerationStatus::~GenerationStatus() {
  // @@protoc_insertion_point(destructor:generationmodule.GenerationStatus)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GenerationStatus::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete statusvalue_;
  if (this != internal_default_instance()) delete generationstatuszgen_;
}

void GenerationStatus::ArenaDtor(void* object) {
  GenerationStatus* _this = reinterpret_cast< GenerationStatus* >(object);
  (void)_this;
}
void GenerationStatus::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GenerationStatus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GenerationStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:generationmodule.GenerationStatus)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && statusvalue_ != nullptr) {
    delete statusvalue_;
  }
  statusvalue_ = nullptr;
  if (GetArena() == nullptr && generationstatuszgen_ != nullptr) {
    delete generationstatuszgen_;
  }
  generationstatuszgen_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GenerationStatus::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .commonmodule.StatusValue statusValue = 1 [(.uml.option_parent_message) = true];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_statusvalue(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .generationmodule.GenerationStatusZGEN generationStatusZGEN = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_generationstatuszgen(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GenerationStatus::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:generationmodule.GenerationStatus)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.StatusValue statusValue = 1 [(.uml.option_parent_message) = true];
  if (this->has_statusvalue()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::statusvalue(this), target, stream);
  }

  // .generationmodule.GenerationStatusZGEN generationStatusZGEN = 2;
  if (this->has_generationstatuszgen()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::generationstatuszgen(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:generationmodule.GenerationStatus)
  return target;
}

size_t GenerationStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:generationmodule.GenerationStatus)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .commonmodule.StatusValue statusValue = 1 [(.uml.option_parent_message) = true];
  if (this->has_statusvalue()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *statusvalue_);
  }

  // .generationmodule.GenerationStatusZGEN generationStatusZGEN = 2;
  if (this->has_generationstatuszgen()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *generationstatuszgen_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GenerationStatus::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:generationmodule.GenerationStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const GenerationStatus* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GenerationStatus>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:generationmodule.GenerationStatus)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:generationmodule.GenerationStatus)
    MergeFrom(*source);
  }
}

void GenerationStatus::MergeFrom(const GenerationStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:generationmodule.GenerationStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_statusvalue()) {
    _internal_mutable_statusvalue()->::commonmodule::StatusValue::MergeFrom(from._internal_statusvalue());
  }
  if (from.has_generationstatuszgen()) {
    _internal_mutable_generationstatuszgen()->::generationmodule::GenerationStatusZGEN::MergeFrom(from._internal_generationstatuszgen());
  }
}

void GenerationStatus::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:generationmodule.GenerationStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GenerationStatus::CopyFrom(const GenerationStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:generationmodule.GenerationStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GenerationStatus::IsInitialized() const {
  return true;
}

void GenerationStatus::InternalSwap(GenerationStatus* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GenerationStatus, generationstatuszgen_)
      + sizeof(GenerationStatus::generationstatuszgen_)
      - PROTOBUF_FIELD_OFFSET(GenerationStatus, statusvalue_)>(
          reinterpret_cast<char*>(&statusvalue_),
          reinterpret_cast<char*>(&other->statusvalue_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GenerationStatus::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GenerationStatusProfile::_Internal {
 public:
  static const ::commonmodule::StatusMessageInfo& statusmessageinfo(const GenerationStatusProfile* msg);
  static const ::generationmodule::GeneratingUnit& generatingunit(const GenerationStatusProfile* msg);
  static const ::generationmodule::GenerationStatus& generationstatus(const GenerationStatusProfile* msg);
};

const ::commonmodule::StatusMessageInfo&
GenerationStatusProfile::_Internal::statusmessageinfo(const GenerationStatusProfile* msg) {
  return *msg->statusmessageinfo_;
}
const ::generationmodule::GeneratingUnit&
GenerationStatusProfile::_Internal::generatingunit(const GenerationStatusProfile* msg) {
  return *msg->generatingunit_;
}
const ::generationmodule::GenerationStatus&
GenerationStatusProfile::_Internal::generationstatus(const GenerationStatusProfile* msg) {
  return *msg->generationstatus_;
}
void GenerationStatusProfile::clear_statusmessageinfo() {
  if (GetArena() == nullptr && statusmessageinfo_ != nullptr) {
    delete statusmessageinfo_;
  }
  statusmessageinfo_ = nullptr;
}
GenerationStatusProfile::GenerationStatusProfile(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:generationmodule.GenerationStatusProfile)
}
GenerationStatusProfile::GenerationStatusProfile(const GenerationStatusProfile& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_statusmessageinfo()) {
    statusmessageinfo_ = new ::commonmodule::StatusMessageInfo(*from.statusmessageinfo_);
  } else {
    statusmessageinfo_ = nullptr;
  }
  if (from._internal_has_generatingunit()) {
    generatingunit_ = new ::generationmodule::GeneratingUnit(*from.generatingunit_);
  } else {
    generatingunit_ = nullptr;
  }
  if (from._internal_has_generationstatus()) {
    generationstatus_ = new ::generationmodule::GenerationStatus(*from.generationstatus_);
  } else {
    generationstatus_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:generationmodule.GenerationStatusProfile)
}

void GenerationStatusProfile::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&statusmessageinfo_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&generationstatus_) -
    reinterpret_cast<char*>(&statusmessageinfo_)) + sizeof(generationstatus_));
}

GenerationStatusProfile::~GenerationStatusProfile() {
  // @@protoc_insertion_point(destructor:generationmodule.GenerationStatusProfile)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GenerationStatusProfile::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete statusmessageinfo_;
  if (this != internal_default_instance()) delete generatingunit_;
  if (this != internal_default_instance()) delete generationstatus_;
}

void GenerationStatusProfile::ArenaDtor(void* object) {
  GenerationStatusProfile* _this = reinterpret_cast< GenerationStatusProfile* >(object);
  (void)_this;
}
void GenerationStatusProfile::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GenerationStatusProfile::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GenerationStatusProfile::Clear() {
// @@protoc_insertion_point(message_clear_start:generationmodule.GenerationStatusProfile)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && statusmessageinfo_ != nullptr) {
    delete statusmessageinfo_;
  }
  statusmessageinfo_ = nullptr;
  if (GetArena() == nullptr && generatingunit_ != nullptr) {
    delete generatingunit_;
  }
  generatingunit_ = nullptr;
  if (GetArena() == nullptr && generationstatus_ != nullptr) {
    delete generationstatus_;
  }
  generationstatus_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GenerationStatusProfile::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .commonmodule.StatusMessageInfo statusMessageInfo = 1 [(.uml.option_parent_message) = true];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_statusmessageinfo(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .generationmodule.GeneratingUnit generatingUnit = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_generatingunit(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .generationmodule.GenerationStatus generationStatus = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_generationstatus(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GenerationStatusProfile::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:generationmodule.GenerationStatusProfile)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.StatusMessageInfo statusMessageInfo = 1 [(.uml.option_parent_message) = true];
  if (this->has_statusmessageinfo()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::statusmessageinfo(this), target, stream);
  }

  // .generationmodule.GeneratingUnit generatingUnit = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_generatingunit()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::generatingunit(this), target, stream);
  }

  // .generationmodule.GenerationStatus generationStatus = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_generationstatus()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::generationstatus(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:generationmodule.GenerationStatusProfile)
  return target;
}

size_t GenerationStatusProfile::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:generationmodule.GenerationStatusProfile)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .commonmodule.StatusMessageInfo statusMessageInfo = 1 [(.uml.option_parent_message) = true];
  if (this->has_statusmessageinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *statusmessageinfo_);
  }

  // .generationmodule.GeneratingUnit generatingUnit = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_generatingunit()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *generatingunit_);
  }

  // .generationmodule.GenerationStatus generationStatus = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_generationstatus()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *generationstatus_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GenerationStatusProfile::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:generationmodule.GenerationStatusProfile)
  GOOGLE_DCHECK_NE(&from, this);
  const GenerationStatusProfile* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GenerationStatusProfile>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:generationmodule.GenerationStatusProfile)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:generationmodule.GenerationStatusProfile)
    MergeFrom(*source);
  }
}

void GenerationStatusProfile::MergeFrom(const GenerationStatusProfile& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:generationmodule.GenerationStatusProfile)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_statusmessageinfo()) {
    _internal_mutable_statusmessageinfo()->::commonmodule::StatusMessageInfo::MergeFrom(from._internal_statusmessageinfo());
  }
  if (from.has_generatingunit()) {
    _internal_mutable_generatingunit()->::generationmodule::GeneratingUnit::MergeFrom(from._internal_generatingunit());
  }
  if (from.has_generationstatus()) {
    _internal_mutable_generationstatus()->::generationmodule::GenerationStatus::MergeFrom(from._internal_generationstatus());
  }
}

void GenerationStatusProfile::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:generationmodule.GenerationStatusProfile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GenerationStatusProfile::CopyFrom(const GenerationStatusProfile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:generationmodule.GenerationStatusProfile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GenerationStatusProfile::IsInitialized() const {
  return true;
}

void GenerationStatusProfile::InternalSwap(GenerationStatusProfile* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GenerationStatusProfile, generationstatus_)
      + sizeof(GenerationStatusProfile::generationstatus_)
      - PROTOBUF_FIELD_OFFSET(GenerationStatusProfile, statusmessageinfo_)>(
          reinterpret_cast<char*>(&statusmessageinfo_),
          reinterpret_cast<char*>(&other->statusmessageinfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GenerationStatusProfile::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace generationmodule
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::generationmodule::GenerationPoint* Arena::CreateMaybeMessage< ::generationmodule::GenerationPoint >(Arena* arena) {
  return Arena::CreateMessageInternal< ::generationmodule::GenerationPoint >(arena);
}
template<> PROTOBUF_NOINLINE ::generationmodule::GenerationCSG* Arena::CreateMaybeMessage< ::generationmodule::GenerationCSG >(Arena* arena) {
  return Arena::CreateMessageInternal< ::generationmodule::GenerationCSG >(arena);
}
template<> PROTOBUF_NOINLINE ::generationmodule::GenerationControlScheduleFSCH* Arena::CreateMaybeMessage< ::generationmodule::GenerationControlScheduleFSCH >(Arena* arena) {
  return Arena::CreateMessageInternal< ::generationmodule::GenerationControlScheduleFSCH >(arena);
}
template<> PROTOBUF_NOINLINE ::generationmodule::GenerationControlFSCC* Arena::CreateMaybeMessage< ::generationmodule::GenerationControlFSCC >(Arena* arena) {
  return Arena::CreateMessageInternal< ::generationmodule::GenerationControlFSCC >(arena);
}
template<> PROTOBUF_NOINLINE ::generationmodule::GenerationControl* Arena::CreateMaybeMessage< ::generationmodule::GenerationControl >(Arena* arena) {
  return Arena::CreateMessageInternal< ::generationmodule::GenerationControl >(arena);
}
template<> PROTOBUF_NOINLINE ::generationmodule::GeneratingUnit* Arena::CreateMaybeMessage< ::generationmodule::GeneratingUnit >(Arena* arena) {
  return Arena::CreateMessageInternal< ::generationmodule::GeneratingUnit >(arena);
}
template<> PROTOBUF_NOINLINE ::generationmodule::GenerationControlProfile* Arena::CreateMaybeMessage< ::generationmodule::GenerationControlProfile >(Arena* arena) {
  return Arena::CreateMessageInternal< ::generationmodule::GenerationControlProfile >(arena);
}
template<> PROTOBUF_NOINLINE ::generationmodule::DroopParameter* Arena::CreateMaybeMessage< ::generationmodule::DroopParameter >(Arena* arena) {
  return Arena::CreateMessageInternal< ::generationmodule::DroopParameter >(arena);
}
template<> PROTOBUF_NOINLINE ::generationmodule::RealPowerControl* Arena::CreateMaybeMessage< ::generationmodule::RealPowerControl >(Arena* arena) {
  return Arena::CreateMessageInternal< ::generationmodule::RealPowerControl >(arena);
}
template<> PROTOBUF_NOINLINE ::generationmodule::ReactivePowerControl* Arena::CreateMaybeMessage< ::generationmodule::ReactivePowerControl >(Arena* arena) {
  return Arena::CreateMessageInternal< ::generationmodule::ReactivePowerControl >(arena);
}
template<> PROTOBUF_NOINLINE ::generationmodule::GenerationDiscreteControl* Arena::CreateMaybeMessage< ::generationmodule::GenerationDiscreteControl >(Arena* arena) {
  return Arena::CreateMessageInternal< ::generationmodule::GenerationDiscreteControl >(arena);
}
template<> PROTOBUF_NOINLINE ::generationmodule::GenerationDiscreteControlProfile* Arena::CreateMaybeMessage< ::generationmodule::GenerationDiscreteControlProfile >(Arena* arena) {
  return Arena::CreateMessageInternal< ::generationmodule::GenerationDiscreteControlProfile >(arena);
}
template<> PROTOBUF_NOINLINE ::generationmodule::GenerationReading* Arena::CreateMaybeMessage< ::generationmodule::GenerationReading >(Arena* arena) {
  return Arena::CreateMessageInternal< ::generationmodule::GenerationReading >(arena);
}
template<> PROTOBUF_NOINLINE ::generationmodule::GenerationReadingProfile* Arena::CreateMaybeMessage< ::generationmodule::GenerationReadingProfile >(Arena* arena) {
  return Arena::CreateMessageInternal< ::generationmodule::GenerationReadingProfile >(arena);
}
template<> PROTOBUF_NOINLINE ::generationmodule::GenerationPointStatus* Arena::CreateMaybeMessage< ::generationmodule::GenerationPointStatus >(Arena* arena) {
  return Arena::CreateMessageInternal< ::generationmodule::GenerationPointStatus >(arena);
}
template<> PROTOBUF_NOINLINE ::generationmodule::GenerationEventAndStatusZGEN* Arena::CreateMaybeMessage< ::generationmodule::GenerationEventAndStatusZGEN >(Arena* arena) {
  return Arena::CreateMessageInternal< ::generationmodule::GenerationEventAndStatusZGEN >(arena);
}
template<> PROTOBUF_NOINLINE ::generationmodule::GenerationEventZGEN* Arena::CreateMaybeMessage< ::generationmodule::GenerationEventZGEN >(Arena* arena) {
  return Arena::CreateMessageInternal< ::generationmodule::GenerationEventZGEN >(arena);
}
template<> PROTOBUF_NOINLINE ::generationmodule::GenerationEvent* Arena::CreateMaybeMessage< ::generationmodule::GenerationEvent >(Arena* arena) {
  return Arena::CreateMessageInternal< ::generationmodule::GenerationEvent >(arena);
}
template<> PROTOBUF_NOINLINE ::generationmodule::GenerationEventProfile* Arena::CreateMaybeMessage< ::generationmodule::GenerationEventProfile >(Arena* arena) {
  return Arena::CreateMessageInternal< ::generationmodule::GenerationEventProfile >(arena);
}
template<> PROTOBUF_NOINLINE ::generationmodule::GenerationStatusZGEN* Arena::CreateMaybeMessage< ::generationmodule::GenerationStatusZGEN >(Arena* arena) {
  return Arena::CreateMessageInternal< ::generationmodule::GenerationStatusZGEN >(arena);
}
template<> PROTOBUF_NOINLINE ::generationmodule::GenerationStatus* Arena::CreateMaybeMessage< ::generationmodule::GenerationStatus >(Arena* arena) {
  return Arena::CreateMessageInternal< ::generationmodule::GenerationStatus >(arena);
}
template<> PROTOBUF_NOINLINE ::generationmodule::GenerationStatusProfile* Arena::CreateMaybeMessage< ::generationmodule::GenerationStatusProfile >(Arena* arena) {
  return Arena::CreateMessageInternal< ::generationmodule::GenerationStatusProfile >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
