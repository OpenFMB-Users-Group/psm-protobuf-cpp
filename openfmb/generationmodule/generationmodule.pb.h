// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: generationmodule/generationmodule.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_generationmodule_2fgenerationmodule_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_generationmodule_2fgenerationmodule_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4022000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4022003 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "uml.pb.h"
#include "google/protobuf/wrappers.pb.h"
#include "commonmodule/commonmodule.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_generationmodule_2fgenerationmodule_2eproto

PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_generationmodule_2fgenerationmodule_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable
    descriptor_table_generationmodule_2fgenerationmodule_2eproto;
namespace generationmodule {
class DroopParameter;
struct DroopParameterDefaultTypeInternal;
extern DroopParameterDefaultTypeInternal _DroopParameter_default_instance_;
class GeneratingUnit;
struct GeneratingUnitDefaultTypeInternal;
extern GeneratingUnitDefaultTypeInternal _GeneratingUnit_default_instance_;
class GenerationCSG;
struct GenerationCSGDefaultTypeInternal;
extern GenerationCSGDefaultTypeInternal _GenerationCSG_default_instance_;
class GenerationCapability;
struct GenerationCapabilityDefaultTypeInternal;
extern GenerationCapabilityDefaultTypeInternal _GenerationCapability_default_instance_;
class GenerationCapabilityConfiguration;
struct GenerationCapabilityConfigurationDefaultTypeInternal;
extern GenerationCapabilityConfigurationDefaultTypeInternal _GenerationCapabilityConfiguration_default_instance_;
class GenerationCapabilityOverride;
struct GenerationCapabilityOverrideDefaultTypeInternal;
extern GenerationCapabilityOverrideDefaultTypeInternal _GenerationCapabilityOverride_default_instance_;
class GenerationCapabilityOverrideProfile;
struct GenerationCapabilityOverrideProfileDefaultTypeInternal;
extern GenerationCapabilityOverrideProfileDefaultTypeInternal _GenerationCapabilityOverrideProfile_default_instance_;
class GenerationCapabilityProfile;
struct GenerationCapabilityProfileDefaultTypeInternal;
extern GenerationCapabilityProfileDefaultTypeInternal _GenerationCapabilityProfile_default_instance_;
class GenerationCapabilityRatings;
struct GenerationCapabilityRatingsDefaultTypeInternal;
extern GenerationCapabilityRatingsDefaultTypeInternal _GenerationCapabilityRatings_default_instance_;
class GenerationControl;
struct GenerationControlDefaultTypeInternal;
extern GenerationControlDefaultTypeInternal _GenerationControl_default_instance_;
class GenerationControlFSCC;
struct GenerationControlFSCCDefaultTypeInternal;
extern GenerationControlFSCCDefaultTypeInternal _GenerationControlFSCC_default_instance_;
class GenerationControlProfile;
struct GenerationControlProfileDefaultTypeInternal;
extern GenerationControlProfileDefaultTypeInternal _GenerationControlProfile_default_instance_;
class GenerationControlScheduleFSCH;
struct GenerationControlScheduleFSCHDefaultTypeInternal;
extern GenerationControlScheduleFSCHDefaultTypeInternal _GenerationControlScheduleFSCH_default_instance_;
class GenerationDiscreteControl;
struct GenerationDiscreteControlDefaultTypeInternal;
extern GenerationDiscreteControlDefaultTypeInternal _GenerationDiscreteControl_default_instance_;
class GenerationDiscreteControlProfile;
struct GenerationDiscreteControlProfileDefaultTypeInternal;
extern GenerationDiscreteControlProfileDefaultTypeInternal _GenerationDiscreteControlProfile_default_instance_;
class GenerationEvent;
struct GenerationEventDefaultTypeInternal;
extern GenerationEventDefaultTypeInternal _GenerationEvent_default_instance_;
class GenerationEventAndStatusZGEN;
struct GenerationEventAndStatusZGENDefaultTypeInternal;
extern GenerationEventAndStatusZGENDefaultTypeInternal _GenerationEventAndStatusZGEN_default_instance_;
class GenerationEventProfile;
struct GenerationEventProfileDefaultTypeInternal;
extern GenerationEventProfileDefaultTypeInternal _GenerationEventProfile_default_instance_;
class GenerationEventZGEN;
struct GenerationEventZGENDefaultTypeInternal;
extern GenerationEventZGENDefaultTypeInternal _GenerationEventZGEN_default_instance_;
class GenerationPoint;
struct GenerationPointDefaultTypeInternal;
extern GenerationPointDefaultTypeInternal _GenerationPoint_default_instance_;
class GenerationPointStatus;
struct GenerationPointStatusDefaultTypeInternal;
extern GenerationPointStatusDefaultTypeInternal _GenerationPointStatus_default_instance_;
class GenerationReading;
struct GenerationReadingDefaultTypeInternal;
extern GenerationReadingDefaultTypeInternal _GenerationReading_default_instance_;
class GenerationReadingProfile;
struct GenerationReadingProfileDefaultTypeInternal;
extern GenerationReadingProfileDefaultTypeInternal _GenerationReadingProfile_default_instance_;
class GenerationStatus;
struct GenerationStatusDefaultTypeInternal;
extern GenerationStatusDefaultTypeInternal _GenerationStatus_default_instance_;
class GenerationStatusProfile;
struct GenerationStatusProfileDefaultTypeInternal;
extern GenerationStatusProfileDefaultTypeInternal _GenerationStatusProfile_default_instance_;
class GenerationStatusZGEN;
struct GenerationStatusZGENDefaultTypeInternal;
extern GenerationStatusZGENDefaultTypeInternal _GenerationStatusZGEN_default_instance_;
class ReactivePowerControl;
struct ReactivePowerControlDefaultTypeInternal;
extern ReactivePowerControlDefaultTypeInternal _ReactivePowerControl_default_instance_;
class RealPowerControl;
struct RealPowerControlDefaultTypeInternal;
extern RealPowerControlDefaultTypeInternal _RealPowerControl_default_instance_;
}  // namespace generationmodule
PROTOBUF_NAMESPACE_OPEN
template <>
::generationmodule::DroopParameter* Arena::CreateMaybeMessage<::generationmodule::DroopParameter>(Arena*);
template <>
::generationmodule::GeneratingUnit* Arena::CreateMaybeMessage<::generationmodule::GeneratingUnit>(Arena*);
template <>
::generationmodule::GenerationCSG* Arena::CreateMaybeMessage<::generationmodule::GenerationCSG>(Arena*);
template <>
::generationmodule::GenerationCapability* Arena::CreateMaybeMessage<::generationmodule::GenerationCapability>(Arena*);
template <>
::generationmodule::GenerationCapabilityConfiguration* Arena::CreateMaybeMessage<::generationmodule::GenerationCapabilityConfiguration>(Arena*);
template <>
::generationmodule::GenerationCapabilityOverride* Arena::CreateMaybeMessage<::generationmodule::GenerationCapabilityOverride>(Arena*);
template <>
::generationmodule::GenerationCapabilityOverrideProfile* Arena::CreateMaybeMessage<::generationmodule::GenerationCapabilityOverrideProfile>(Arena*);
template <>
::generationmodule::GenerationCapabilityProfile* Arena::CreateMaybeMessage<::generationmodule::GenerationCapabilityProfile>(Arena*);
template <>
::generationmodule::GenerationCapabilityRatings* Arena::CreateMaybeMessage<::generationmodule::GenerationCapabilityRatings>(Arena*);
template <>
::generationmodule::GenerationControl* Arena::CreateMaybeMessage<::generationmodule::GenerationControl>(Arena*);
template <>
::generationmodule::GenerationControlFSCC* Arena::CreateMaybeMessage<::generationmodule::GenerationControlFSCC>(Arena*);
template <>
::generationmodule::GenerationControlProfile* Arena::CreateMaybeMessage<::generationmodule::GenerationControlProfile>(Arena*);
template <>
::generationmodule::GenerationControlScheduleFSCH* Arena::CreateMaybeMessage<::generationmodule::GenerationControlScheduleFSCH>(Arena*);
template <>
::generationmodule::GenerationDiscreteControl* Arena::CreateMaybeMessage<::generationmodule::GenerationDiscreteControl>(Arena*);
template <>
::generationmodule::GenerationDiscreteControlProfile* Arena::CreateMaybeMessage<::generationmodule::GenerationDiscreteControlProfile>(Arena*);
template <>
::generationmodule::GenerationEvent* Arena::CreateMaybeMessage<::generationmodule::GenerationEvent>(Arena*);
template <>
::generationmodule::GenerationEventAndStatusZGEN* Arena::CreateMaybeMessage<::generationmodule::GenerationEventAndStatusZGEN>(Arena*);
template <>
::generationmodule::GenerationEventProfile* Arena::CreateMaybeMessage<::generationmodule::GenerationEventProfile>(Arena*);
template <>
::generationmodule::GenerationEventZGEN* Arena::CreateMaybeMessage<::generationmodule::GenerationEventZGEN>(Arena*);
template <>
::generationmodule::GenerationPoint* Arena::CreateMaybeMessage<::generationmodule::GenerationPoint>(Arena*);
template <>
::generationmodule::GenerationPointStatus* Arena::CreateMaybeMessage<::generationmodule::GenerationPointStatus>(Arena*);
template <>
::generationmodule::GenerationReading* Arena::CreateMaybeMessage<::generationmodule::GenerationReading>(Arena*);
template <>
::generationmodule::GenerationReadingProfile* Arena::CreateMaybeMessage<::generationmodule::GenerationReadingProfile>(Arena*);
template <>
::generationmodule::GenerationStatus* Arena::CreateMaybeMessage<::generationmodule::GenerationStatus>(Arena*);
template <>
::generationmodule::GenerationStatusProfile* Arena::CreateMaybeMessage<::generationmodule::GenerationStatusProfile>(Arena*);
template <>
::generationmodule::GenerationStatusZGEN* Arena::CreateMaybeMessage<::generationmodule::GenerationStatusZGEN>(Arena*);
template <>
::generationmodule::ReactivePowerControl* Arena::CreateMaybeMessage<::generationmodule::ReactivePowerControl>(Arena*);
template <>
::generationmodule::RealPowerControl* Arena::CreateMaybeMessage<::generationmodule::RealPowerControl>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

namespace generationmodule {

// ===================================================================


// -------------------------------------------------------------------

class GeneratingUnit final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:generationmodule.GeneratingUnit) */ {
 public:
  inline GeneratingUnit() : GeneratingUnit(nullptr) {}
  ~GeneratingUnit() override;
  explicit PROTOBUF_CONSTEXPR GeneratingUnit(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GeneratingUnit(const GeneratingUnit& from);
  GeneratingUnit(GeneratingUnit&& from) noexcept
    : GeneratingUnit() {
    *this = ::std::move(from);
  }

  inline GeneratingUnit& operator=(const GeneratingUnit& from) {
    CopyFrom(from);
    return *this;
  }
  inline GeneratingUnit& operator=(GeneratingUnit&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GeneratingUnit& default_instance() {
    return *internal_default_instance();
  }
  static inline const GeneratingUnit* internal_default_instance() {
    return reinterpret_cast<const GeneratingUnit*>(
               &_GeneratingUnit_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(GeneratingUnit& a, GeneratingUnit& b) {
    a.Swap(&b);
  }
  inline void Swap(GeneratingUnit* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GeneratingUnit* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GeneratingUnit* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GeneratingUnit>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GeneratingUnit& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GeneratingUnit& from) {
    GeneratingUnit::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GeneratingUnit* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "generationmodule.GeneratingUnit";
  }
  protected:
  explicit GeneratingUnit(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kConductingEquipmentFieldNumber = 1,
    kMaxOperatingPFieldNumber = 2,
  };
  // .commonmodule.ConductingEquipment conductingEquipment = 1 [(.uml.option_parent_message) = true];
  bool has_conductingequipment() const;
  private:
  bool _internal_has_conductingequipment() const;

  public:
  void clear_conductingequipment() ;
  const ::commonmodule::ConductingEquipment& conductingequipment() const;
  PROTOBUF_NODISCARD ::commonmodule::ConductingEquipment* release_conductingequipment();
  ::commonmodule::ConductingEquipment* mutable_conductingequipment();
  void set_allocated_conductingequipment(::commonmodule::ConductingEquipment* conductingequipment);
  private:
  const ::commonmodule::ConductingEquipment& _internal_conductingequipment() const;
  ::commonmodule::ConductingEquipment* _internal_mutable_conductingequipment();
  public:
  void unsafe_arena_set_allocated_conductingequipment(
      ::commonmodule::ConductingEquipment* conductingequipment);
  ::commonmodule::ConductingEquipment* unsafe_arena_release_conductingequipment();
  // .commonmodule.ActivePower maxOperatingP = 2;
  bool has_maxoperatingp() const;
  private:
  bool _internal_has_maxoperatingp() const;

  public:
  void clear_maxoperatingp() ;
  const ::commonmodule::ActivePower& maxoperatingp() const;
  PROTOBUF_NODISCARD ::commonmodule::ActivePower* release_maxoperatingp();
  ::commonmodule::ActivePower* mutable_maxoperatingp();
  void set_allocated_maxoperatingp(::commonmodule::ActivePower* maxoperatingp);
  private:
  const ::commonmodule::ActivePower& _internal_maxoperatingp() const;
  ::commonmodule::ActivePower* _internal_mutable_maxoperatingp();
  public:
  void unsafe_arena_set_allocated_maxoperatingp(
      ::commonmodule::ActivePower* maxoperatingp);
  ::commonmodule::ActivePower* unsafe_arena_release_maxoperatingp();
  // @@protoc_insertion_point(class_scope:generationmodule.GeneratingUnit)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::commonmodule::ConductingEquipment* conductingequipment_;
    ::commonmodule::ActivePower* maxoperatingp_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_generationmodule_2fgenerationmodule_2eproto;
};// -------------------------------------------------------------------

class GenerationCapabilityConfiguration final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:generationmodule.GenerationCapabilityConfiguration) */ {
 public:
  inline GenerationCapabilityConfiguration() : GenerationCapabilityConfiguration(nullptr) {}
  ~GenerationCapabilityConfiguration() override;
  explicit PROTOBUF_CONSTEXPR GenerationCapabilityConfiguration(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GenerationCapabilityConfiguration(const GenerationCapabilityConfiguration& from);
  GenerationCapabilityConfiguration(GenerationCapabilityConfiguration&& from) noexcept
    : GenerationCapabilityConfiguration() {
    *this = ::std::move(from);
  }

  inline GenerationCapabilityConfiguration& operator=(const GenerationCapabilityConfiguration& from) {
    CopyFrom(from);
    return *this;
  }
  inline GenerationCapabilityConfiguration& operator=(GenerationCapabilityConfiguration&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GenerationCapabilityConfiguration& default_instance() {
    return *internal_default_instance();
  }
  static inline const GenerationCapabilityConfiguration* internal_default_instance() {
    return reinterpret_cast<const GenerationCapabilityConfiguration*>(
               &_GenerationCapabilityConfiguration_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(GenerationCapabilityConfiguration& a, GenerationCapabilityConfiguration& b) {
    a.Swap(&b);
  }
  inline void Swap(GenerationCapabilityConfiguration* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GenerationCapabilityConfiguration* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GenerationCapabilityConfiguration* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GenerationCapabilityConfiguration>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GenerationCapabilityConfiguration& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GenerationCapabilityConfiguration& from) {
    GenerationCapabilityConfiguration::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GenerationCapabilityConfiguration* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "generationmodule.GenerationCapabilityConfiguration";
  }
  protected:
  explicit GenerationCapabilityConfiguration(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSourceCapabilityConfigurationFieldNumber = 1,
  };
  // .commonmodule.SourceCapabilityConfiguration sourceCapabilityConfiguration = 1 [(.uml.option_parent_message) = true];
  bool has_sourcecapabilityconfiguration() const;
  private:
  bool _internal_has_sourcecapabilityconfiguration() const;

  public:
  void clear_sourcecapabilityconfiguration() ;
  const ::commonmodule::SourceCapabilityConfiguration& sourcecapabilityconfiguration() const;
  PROTOBUF_NODISCARD ::commonmodule::SourceCapabilityConfiguration* release_sourcecapabilityconfiguration();
  ::commonmodule::SourceCapabilityConfiguration* mutable_sourcecapabilityconfiguration();
  void set_allocated_sourcecapabilityconfiguration(::commonmodule::SourceCapabilityConfiguration* sourcecapabilityconfiguration);
  private:
  const ::commonmodule::SourceCapabilityConfiguration& _internal_sourcecapabilityconfiguration() const;
  ::commonmodule::SourceCapabilityConfiguration* _internal_mutable_sourcecapabilityconfiguration();
  public:
  void unsafe_arena_set_allocated_sourcecapabilityconfiguration(
      ::commonmodule::SourceCapabilityConfiguration* sourcecapabilityconfiguration);
  ::commonmodule::SourceCapabilityConfiguration* unsafe_arena_release_sourcecapabilityconfiguration();
  // @@protoc_insertion_point(class_scope:generationmodule.GenerationCapabilityConfiguration)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::commonmodule::SourceCapabilityConfiguration* sourcecapabilityconfiguration_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_generationmodule_2fgenerationmodule_2eproto;
};// -------------------------------------------------------------------

class GenerationCapabilityOverride final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:generationmodule.GenerationCapabilityOverride) */ {
 public:
  inline GenerationCapabilityOverride() : GenerationCapabilityOverride(nullptr) {}
  ~GenerationCapabilityOverride() override;
  explicit PROTOBUF_CONSTEXPR GenerationCapabilityOverride(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GenerationCapabilityOverride(const GenerationCapabilityOverride& from);
  GenerationCapabilityOverride(GenerationCapabilityOverride&& from) noexcept
    : GenerationCapabilityOverride() {
    *this = ::std::move(from);
  }

  inline GenerationCapabilityOverride& operator=(const GenerationCapabilityOverride& from) {
    CopyFrom(from);
    return *this;
  }
  inline GenerationCapabilityOverride& operator=(GenerationCapabilityOverride&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GenerationCapabilityOverride& default_instance() {
    return *internal_default_instance();
  }
  static inline const GenerationCapabilityOverride* internal_default_instance() {
    return reinterpret_cast<const GenerationCapabilityOverride*>(
               &_GenerationCapabilityOverride_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(GenerationCapabilityOverride& a, GenerationCapabilityOverride& b) {
    a.Swap(&b);
  }
  inline void Swap(GenerationCapabilityOverride* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GenerationCapabilityOverride* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GenerationCapabilityOverride* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GenerationCapabilityOverride>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GenerationCapabilityOverride& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GenerationCapabilityOverride& from) {
    GenerationCapabilityOverride::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GenerationCapabilityOverride* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "generationmodule.GenerationCapabilityOverride";
  }
  protected:
  explicit GenerationCapabilityOverride(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdentifiedObjectFieldNumber = 1,
    kGenerationCapabilityConfigurationFieldNumber = 2,
  };
  // .commonmodule.IdentifiedObject identifiedObject = 1 [(.uml.option_parent_message) = true];
  bool has_identifiedobject() const;
  private:
  bool _internal_has_identifiedobject() const;

  public:
  void clear_identifiedobject() ;
  const ::commonmodule::IdentifiedObject& identifiedobject() const;
  PROTOBUF_NODISCARD ::commonmodule::IdentifiedObject* release_identifiedobject();
  ::commonmodule::IdentifiedObject* mutable_identifiedobject();
  void set_allocated_identifiedobject(::commonmodule::IdentifiedObject* identifiedobject);
  private:
  const ::commonmodule::IdentifiedObject& _internal_identifiedobject() const;
  ::commonmodule::IdentifiedObject* _internal_mutable_identifiedobject();
  public:
  void unsafe_arena_set_allocated_identifiedobject(
      ::commonmodule::IdentifiedObject* identifiedobject);
  ::commonmodule::IdentifiedObject* unsafe_arena_release_identifiedobject();
  // .generationmodule.GenerationCapabilityConfiguration generationCapabilityConfiguration = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  bool has_generationcapabilityconfiguration() const;
  private:
  bool _internal_has_generationcapabilityconfiguration() const;

  public:
  void clear_generationcapabilityconfiguration() ;
  const ::generationmodule::GenerationCapabilityConfiguration& generationcapabilityconfiguration() const;
  PROTOBUF_NODISCARD ::generationmodule::GenerationCapabilityConfiguration* release_generationcapabilityconfiguration();
  ::generationmodule::GenerationCapabilityConfiguration* mutable_generationcapabilityconfiguration();
  void set_allocated_generationcapabilityconfiguration(::generationmodule::GenerationCapabilityConfiguration* generationcapabilityconfiguration);
  private:
  const ::generationmodule::GenerationCapabilityConfiguration& _internal_generationcapabilityconfiguration() const;
  ::generationmodule::GenerationCapabilityConfiguration* _internal_mutable_generationcapabilityconfiguration();
  public:
  void unsafe_arena_set_allocated_generationcapabilityconfiguration(
      ::generationmodule::GenerationCapabilityConfiguration* generationcapabilityconfiguration);
  ::generationmodule::GenerationCapabilityConfiguration* unsafe_arena_release_generationcapabilityconfiguration();
  // @@protoc_insertion_point(class_scope:generationmodule.GenerationCapabilityOverride)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::commonmodule::IdentifiedObject* identifiedobject_;
    ::generationmodule::GenerationCapabilityConfiguration* generationcapabilityconfiguration_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_generationmodule_2fgenerationmodule_2eproto;
};// -------------------------------------------------------------------

class GenerationCapabilityOverrideProfile final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:generationmodule.GenerationCapabilityOverrideProfile) */ {
 public:
  inline GenerationCapabilityOverrideProfile() : GenerationCapabilityOverrideProfile(nullptr) {}
  ~GenerationCapabilityOverrideProfile() override;
  explicit PROTOBUF_CONSTEXPR GenerationCapabilityOverrideProfile(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GenerationCapabilityOverrideProfile(const GenerationCapabilityOverrideProfile& from);
  GenerationCapabilityOverrideProfile(GenerationCapabilityOverrideProfile&& from) noexcept
    : GenerationCapabilityOverrideProfile() {
    *this = ::std::move(from);
  }

  inline GenerationCapabilityOverrideProfile& operator=(const GenerationCapabilityOverrideProfile& from) {
    CopyFrom(from);
    return *this;
  }
  inline GenerationCapabilityOverrideProfile& operator=(GenerationCapabilityOverrideProfile&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GenerationCapabilityOverrideProfile& default_instance() {
    return *internal_default_instance();
  }
  static inline const GenerationCapabilityOverrideProfile* internal_default_instance() {
    return reinterpret_cast<const GenerationCapabilityOverrideProfile*>(
               &_GenerationCapabilityOverrideProfile_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(GenerationCapabilityOverrideProfile& a, GenerationCapabilityOverrideProfile& b) {
    a.Swap(&b);
  }
  inline void Swap(GenerationCapabilityOverrideProfile* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GenerationCapabilityOverrideProfile* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GenerationCapabilityOverrideProfile* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GenerationCapabilityOverrideProfile>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GenerationCapabilityOverrideProfile& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GenerationCapabilityOverrideProfile& from) {
    GenerationCapabilityOverrideProfile::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GenerationCapabilityOverrideProfile* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "generationmodule.GenerationCapabilityOverrideProfile";
  }
  protected:
  explicit GenerationCapabilityOverrideProfile(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCapabilityMessageInfoFieldNumber = 1,
    kGenerationCapabilityOverrideFieldNumber = 2,
    kGeneratingUnitFieldNumber = 3,
  };
  // .commonmodule.CapabilityMessageInfo capabilityMessageInfo = 1 [(.uml.option_parent_message) = true];
  bool has_capabilitymessageinfo() const;
  private:
  bool _internal_has_capabilitymessageinfo() const;

  public:
  void clear_capabilitymessageinfo() ;
  const ::commonmodule::CapabilityMessageInfo& capabilitymessageinfo() const;
  PROTOBUF_NODISCARD ::commonmodule::CapabilityMessageInfo* release_capabilitymessageinfo();
  ::commonmodule::CapabilityMessageInfo* mutable_capabilitymessageinfo();
  void set_allocated_capabilitymessageinfo(::commonmodule::CapabilityMessageInfo* capabilitymessageinfo);
  private:
  const ::commonmodule::CapabilityMessageInfo& _internal_capabilitymessageinfo() const;
  ::commonmodule::CapabilityMessageInfo* _internal_mutable_capabilitymessageinfo();
  public:
  void unsafe_arena_set_allocated_capabilitymessageinfo(
      ::commonmodule::CapabilityMessageInfo* capabilitymessageinfo);
  ::commonmodule::CapabilityMessageInfo* unsafe_arena_release_capabilitymessageinfo();
  // .generationmodule.GenerationCapabilityOverride generationCapabilityOverride = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  bool has_generationcapabilityoverride() const;
  private:
  bool _internal_has_generationcapabilityoverride() const;

  public:
  void clear_generationcapabilityoverride() ;
  const ::generationmodule::GenerationCapabilityOverride& generationcapabilityoverride() const;
  PROTOBUF_NODISCARD ::generationmodule::GenerationCapabilityOverride* release_generationcapabilityoverride();
  ::generationmodule::GenerationCapabilityOverride* mutable_generationcapabilityoverride();
  void set_allocated_generationcapabilityoverride(::generationmodule::GenerationCapabilityOverride* generationcapabilityoverride);
  private:
  const ::generationmodule::GenerationCapabilityOverride& _internal_generationcapabilityoverride() const;
  ::generationmodule::GenerationCapabilityOverride* _internal_mutable_generationcapabilityoverride();
  public:
  void unsafe_arena_set_allocated_generationcapabilityoverride(
      ::generationmodule::GenerationCapabilityOverride* generationcapabilityoverride);
  ::generationmodule::GenerationCapabilityOverride* unsafe_arena_release_generationcapabilityoverride();
  // .generationmodule.GeneratingUnit generatingUnit = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  bool has_generatingunit() const;
  private:
  bool _internal_has_generatingunit() const;

  public:
  void clear_generatingunit() ;
  const ::generationmodule::GeneratingUnit& generatingunit() const;
  PROTOBUF_NODISCARD ::generationmodule::GeneratingUnit* release_generatingunit();
  ::generationmodule::GeneratingUnit* mutable_generatingunit();
  void set_allocated_generatingunit(::generationmodule::GeneratingUnit* generatingunit);
  private:
  const ::generationmodule::GeneratingUnit& _internal_generatingunit() const;
  ::generationmodule::GeneratingUnit* _internal_mutable_generatingunit();
  public:
  void unsafe_arena_set_allocated_generatingunit(
      ::generationmodule::GeneratingUnit* generatingunit);
  ::generationmodule::GeneratingUnit* unsafe_arena_release_generatingunit();
  // @@protoc_insertion_point(class_scope:generationmodule.GenerationCapabilityOverrideProfile)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::commonmodule::CapabilityMessageInfo* capabilitymessageinfo_;
    ::generationmodule::GenerationCapabilityOverride* generationcapabilityoverride_;
    ::generationmodule::GeneratingUnit* generatingunit_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_generationmodule_2fgenerationmodule_2eproto;
};// -------------------------------------------------------------------

class GenerationCapabilityRatings final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:generationmodule.GenerationCapabilityRatings) */ {
 public:
  inline GenerationCapabilityRatings() : GenerationCapabilityRatings(nullptr) {}
  ~GenerationCapabilityRatings() override;
  explicit PROTOBUF_CONSTEXPR GenerationCapabilityRatings(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GenerationCapabilityRatings(const GenerationCapabilityRatings& from);
  GenerationCapabilityRatings(GenerationCapabilityRatings&& from) noexcept
    : GenerationCapabilityRatings() {
    *this = ::std::move(from);
  }

  inline GenerationCapabilityRatings& operator=(const GenerationCapabilityRatings& from) {
    CopyFrom(from);
    return *this;
  }
  inline GenerationCapabilityRatings& operator=(GenerationCapabilityRatings&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GenerationCapabilityRatings& default_instance() {
    return *internal_default_instance();
  }
  static inline const GenerationCapabilityRatings* internal_default_instance() {
    return reinterpret_cast<const GenerationCapabilityRatings*>(
               &_GenerationCapabilityRatings_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(GenerationCapabilityRatings& a, GenerationCapabilityRatings& b) {
    a.Swap(&b);
  }
  inline void Swap(GenerationCapabilityRatings* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GenerationCapabilityRatings* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GenerationCapabilityRatings* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GenerationCapabilityRatings>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GenerationCapabilityRatings& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GenerationCapabilityRatings& from) {
    GenerationCapabilityRatings::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GenerationCapabilityRatings* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "generationmodule.GenerationCapabilityRatings";
  }
  protected:
  explicit GenerationCapabilityRatings(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSourceCapabilityRatingsFieldNumber = 1,
  };
  // .commonmodule.SourceCapabilityRatings sourceCapabilityRatings = 1 [(.uml.option_parent_message) = true];
  bool has_sourcecapabilityratings() const;
  private:
  bool _internal_has_sourcecapabilityratings() const;

  public:
  void clear_sourcecapabilityratings() ;
  const ::commonmodule::SourceCapabilityRatings& sourcecapabilityratings() const;
  PROTOBUF_NODISCARD ::commonmodule::SourceCapabilityRatings* release_sourcecapabilityratings();
  ::commonmodule::SourceCapabilityRatings* mutable_sourcecapabilityratings();
  void set_allocated_sourcecapabilityratings(::commonmodule::SourceCapabilityRatings* sourcecapabilityratings);
  private:
  const ::commonmodule::SourceCapabilityRatings& _internal_sourcecapabilityratings() const;
  ::commonmodule::SourceCapabilityRatings* _internal_mutable_sourcecapabilityratings();
  public:
  void unsafe_arena_set_allocated_sourcecapabilityratings(
      ::commonmodule::SourceCapabilityRatings* sourcecapabilityratings);
  ::commonmodule::SourceCapabilityRatings* unsafe_arena_release_sourcecapabilityratings();
  // @@protoc_insertion_point(class_scope:generationmodule.GenerationCapabilityRatings)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::commonmodule::SourceCapabilityRatings* sourcecapabilityratings_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_generationmodule_2fgenerationmodule_2eproto;
};// -------------------------------------------------------------------

class GenerationCapability final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:generationmodule.GenerationCapability) */ {
 public:
  inline GenerationCapability() : GenerationCapability(nullptr) {}
  ~GenerationCapability() override;
  explicit PROTOBUF_CONSTEXPR GenerationCapability(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GenerationCapability(const GenerationCapability& from);
  GenerationCapability(GenerationCapability&& from) noexcept
    : GenerationCapability() {
    *this = ::std::move(from);
  }

  inline GenerationCapability& operator=(const GenerationCapability& from) {
    CopyFrom(from);
    return *this;
  }
  inline GenerationCapability& operator=(GenerationCapability&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GenerationCapability& default_instance() {
    return *internal_default_instance();
  }
  static inline const GenerationCapability* internal_default_instance() {
    return reinterpret_cast<const GenerationCapability*>(
               &_GenerationCapability_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(GenerationCapability& a, GenerationCapability& b) {
    a.Swap(&b);
  }
  inline void Swap(GenerationCapability* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GenerationCapability* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GenerationCapability* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GenerationCapability>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GenerationCapability& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GenerationCapability& from) {
    GenerationCapability::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GenerationCapability* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "generationmodule.GenerationCapability";
  }
  protected:
  explicit GenerationCapability(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameplateValueFieldNumber = 1,
    kGenerationCapabilityRatingsFieldNumber = 2,
    kGenerationCapabilityConfigurationFieldNumber = 3,
  };
  // .commonmodule.NameplateValue nameplateValue = 1 [(.uml.option_parent_message) = true];
  bool has_nameplatevalue() const;
  private:
  bool _internal_has_nameplatevalue() const;

  public:
  void clear_nameplatevalue() ;
  const ::commonmodule::NameplateValue& nameplatevalue() const;
  PROTOBUF_NODISCARD ::commonmodule::NameplateValue* release_nameplatevalue();
  ::commonmodule::NameplateValue* mutable_nameplatevalue();
  void set_allocated_nameplatevalue(::commonmodule::NameplateValue* nameplatevalue);
  private:
  const ::commonmodule::NameplateValue& _internal_nameplatevalue() const;
  ::commonmodule::NameplateValue* _internal_mutable_nameplatevalue();
  public:
  void unsafe_arena_set_allocated_nameplatevalue(
      ::commonmodule::NameplateValue* nameplatevalue);
  ::commonmodule::NameplateValue* unsafe_arena_release_nameplatevalue();
  // .generationmodule.GenerationCapabilityRatings generationCapabilityRatings = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  bool has_generationcapabilityratings() const;
  private:
  bool _internal_has_generationcapabilityratings() const;

  public:
  void clear_generationcapabilityratings() ;
  const ::generationmodule::GenerationCapabilityRatings& generationcapabilityratings() const;
  PROTOBUF_NODISCARD ::generationmodule::GenerationCapabilityRatings* release_generationcapabilityratings();
  ::generationmodule::GenerationCapabilityRatings* mutable_generationcapabilityratings();
  void set_allocated_generationcapabilityratings(::generationmodule::GenerationCapabilityRatings* generationcapabilityratings);
  private:
  const ::generationmodule::GenerationCapabilityRatings& _internal_generationcapabilityratings() const;
  ::generationmodule::GenerationCapabilityRatings* _internal_mutable_generationcapabilityratings();
  public:
  void unsafe_arena_set_allocated_generationcapabilityratings(
      ::generationmodule::GenerationCapabilityRatings* generationcapabilityratings);
  ::generationmodule::GenerationCapabilityRatings* unsafe_arena_release_generationcapabilityratings();
  // .generationmodule.GenerationCapabilityConfiguration generationCapabilityConfiguration = 3;
  bool has_generationcapabilityconfiguration() const;
  private:
  bool _internal_has_generationcapabilityconfiguration() const;

  public:
  void clear_generationcapabilityconfiguration() ;
  const ::generationmodule::GenerationCapabilityConfiguration& generationcapabilityconfiguration() const;
  PROTOBUF_NODISCARD ::generationmodule::GenerationCapabilityConfiguration* release_generationcapabilityconfiguration();
  ::generationmodule::GenerationCapabilityConfiguration* mutable_generationcapabilityconfiguration();
  void set_allocated_generationcapabilityconfiguration(::generationmodule::GenerationCapabilityConfiguration* generationcapabilityconfiguration);
  private:
  const ::generationmodule::GenerationCapabilityConfiguration& _internal_generationcapabilityconfiguration() const;
  ::generationmodule::GenerationCapabilityConfiguration* _internal_mutable_generationcapabilityconfiguration();
  public:
  void unsafe_arena_set_allocated_generationcapabilityconfiguration(
      ::generationmodule::GenerationCapabilityConfiguration* generationcapabilityconfiguration);
  ::generationmodule::GenerationCapabilityConfiguration* unsafe_arena_release_generationcapabilityconfiguration();
  // @@protoc_insertion_point(class_scope:generationmodule.GenerationCapability)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::commonmodule::NameplateValue* nameplatevalue_;
    ::generationmodule::GenerationCapabilityRatings* generationcapabilityratings_;
    ::generationmodule::GenerationCapabilityConfiguration* generationcapabilityconfiguration_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_generationmodule_2fgenerationmodule_2eproto;
};// -------------------------------------------------------------------

class GenerationCapabilityProfile final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:generationmodule.GenerationCapabilityProfile) */ {
 public:
  inline GenerationCapabilityProfile() : GenerationCapabilityProfile(nullptr) {}
  ~GenerationCapabilityProfile() override;
  explicit PROTOBUF_CONSTEXPR GenerationCapabilityProfile(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GenerationCapabilityProfile(const GenerationCapabilityProfile& from);
  GenerationCapabilityProfile(GenerationCapabilityProfile&& from) noexcept
    : GenerationCapabilityProfile() {
    *this = ::std::move(from);
  }

  inline GenerationCapabilityProfile& operator=(const GenerationCapabilityProfile& from) {
    CopyFrom(from);
    return *this;
  }
  inline GenerationCapabilityProfile& operator=(GenerationCapabilityProfile&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GenerationCapabilityProfile& default_instance() {
    return *internal_default_instance();
  }
  static inline const GenerationCapabilityProfile* internal_default_instance() {
    return reinterpret_cast<const GenerationCapabilityProfile*>(
               &_GenerationCapabilityProfile_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(GenerationCapabilityProfile& a, GenerationCapabilityProfile& b) {
    a.Swap(&b);
  }
  inline void Swap(GenerationCapabilityProfile* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GenerationCapabilityProfile* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GenerationCapabilityProfile* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GenerationCapabilityProfile>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GenerationCapabilityProfile& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GenerationCapabilityProfile& from) {
    GenerationCapabilityProfile::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GenerationCapabilityProfile* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "generationmodule.GenerationCapabilityProfile";
  }
  protected:
  explicit GenerationCapabilityProfile(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCapabilityMessageInfoFieldNumber = 1,
    kGenerationCapabilityFieldNumber = 2,
    kGeneratingUnitFieldNumber = 3,
  };
  // .commonmodule.CapabilityMessageInfo capabilityMessageInfo = 1 [(.uml.option_parent_message) = true];
  bool has_capabilitymessageinfo() const;
  private:
  bool _internal_has_capabilitymessageinfo() const;

  public:
  void clear_capabilitymessageinfo() ;
  const ::commonmodule::CapabilityMessageInfo& capabilitymessageinfo() const;
  PROTOBUF_NODISCARD ::commonmodule::CapabilityMessageInfo* release_capabilitymessageinfo();
  ::commonmodule::CapabilityMessageInfo* mutable_capabilitymessageinfo();
  void set_allocated_capabilitymessageinfo(::commonmodule::CapabilityMessageInfo* capabilitymessageinfo);
  private:
  const ::commonmodule::CapabilityMessageInfo& _internal_capabilitymessageinfo() const;
  ::commonmodule::CapabilityMessageInfo* _internal_mutable_capabilitymessageinfo();
  public:
  void unsafe_arena_set_allocated_capabilitymessageinfo(
      ::commonmodule::CapabilityMessageInfo* capabilitymessageinfo);
  ::commonmodule::CapabilityMessageInfo* unsafe_arena_release_capabilitymessageinfo();
  // .generationmodule.GenerationCapability generationCapability = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  bool has_generationcapability() const;
  private:
  bool _internal_has_generationcapability() const;

  public:
  void clear_generationcapability() ;
  const ::generationmodule::GenerationCapability& generationcapability() const;
  PROTOBUF_NODISCARD ::generationmodule::GenerationCapability* release_generationcapability();
  ::generationmodule::GenerationCapability* mutable_generationcapability();
  void set_allocated_generationcapability(::generationmodule::GenerationCapability* generationcapability);
  private:
  const ::generationmodule::GenerationCapability& _internal_generationcapability() const;
  ::generationmodule::GenerationCapability* _internal_mutable_generationcapability();
  public:
  void unsafe_arena_set_allocated_generationcapability(
      ::generationmodule::GenerationCapability* generationcapability);
  ::generationmodule::GenerationCapability* unsafe_arena_release_generationcapability();
  // .generationmodule.GeneratingUnit generatingUnit = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  bool has_generatingunit() const;
  private:
  bool _internal_has_generatingunit() const;

  public:
  void clear_generatingunit() ;
  const ::generationmodule::GeneratingUnit& generatingunit() const;
  PROTOBUF_NODISCARD ::generationmodule::GeneratingUnit* release_generatingunit();
  ::generationmodule::GeneratingUnit* mutable_generatingunit();
  void set_allocated_generatingunit(::generationmodule::GeneratingUnit* generatingunit);
  private:
  const ::generationmodule::GeneratingUnit& _internal_generatingunit() const;
  ::generationmodule::GeneratingUnit* _internal_mutable_generatingunit();
  public:
  void unsafe_arena_set_allocated_generatingunit(
      ::generationmodule::GeneratingUnit* generatingunit);
  ::generationmodule::GeneratingUnit* unsafe_arena_release_generatingunit();
  // @@protoc_insertion_point(class_scope:generationmodule.GenerationCapabilityProfile)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::commonmodule::CapabilityMessageInfo* capabilitymessageinfo_;
    ::generationmodule::GenerationCapability* generationcapability_;
    ::generationmodule::GeneratingUnit* generatingunit_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_generationmodule_2fgenerationmodule_2eproto;
};// -------------------------------------------------------------------

class GenerationPoint final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:generationmodule.GenerationPoint) */ {
 public:
  inline GenerationPoint() : GenerationPoint(nullptr) {}
  ~GenerationPoint() override;
  explicit PROTOBUF_CONSTEXPR GenerationPoint(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GenerationPoint(const GenerationPoint& from);
  GenerationPoint(GenerationPoint&& from) noexcept
    : GenerationPoint() {
    *this = ::std::move(from);
  }

  inline GenerationPoint& operator=(const GenerationPoint& from) {
    CopyFrom(from);
    return *this;
  }
  inline GenerationPoint& operator=(GenerationPoint&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GenerationPoint& default_instance() {
    return *internal_default_instance();
  }
  static inline const GenerationPoint* internal_default_instance() {
    return reinterpret_cast<const GenerationPoint*>(
               &_GenerationPoint_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(GenerationPoint& a, GenerationPoint& b) {
    a.Swap(&b);
  }
  inline void Swap(GenerationPoint* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GenerationPoint* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GenerationPoint* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GenerationPoint>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GenerationPoint& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GenerationPoint& from) {
    GenerationPoint::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GenerationPoint* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "generationmodule.GenerationPoint";
  }
  protected:
  explicit GenerationPoint(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBlackStartEnabledFieldNumber = 1,
    kFrequencySetPointEnabledFieldNumber = 2,
    kPctHzDroopFieldNumber = 3,
    kPctVDroopFieldNumber = 4,
    kRampRatesFieldNumber = 5,
    kReactivePwrSetPointEnabledFieldNumber = 6,
    kRealPwrSetPointEnabledFieldNumber = 7,
    kResetFieldNumber = 8,
    kStateFieldNumber = 9,
    kSyncBackToGridFieldNumber = 10,
    kTransToIslndOnGridLossEnabledFieldNumber = 11,
    kVoltageSetPointEnabledFieldNumber = 12,
    kStartTimeFieldNumber = 13,
    kEnterServiceOperationFieldNumber = 14,
    kHzWOperationFieldNumber = 15,
    kLimitWOperationFieldNumber = 16,
    kPFOperationFieldNumber = 17,
    kTmHzTripOperationFieldNumber = 18,
    kTmVoltTripOperationFieldNumber = 19,
    kVArOperationFieldNumber = 20,
    kVoltVarOperationFieldNumber = 21,
    kVoltWOperationFieldNumber = 22,
    kWVarOperationFieldNumber = 23,
  };
  // .commonmodule.ControlSPC blackStartEnabled = 1;
  bool has_blackstartenabled() const;
  private:
  bool _internal_has_blackstartenabled() const;

  public:
  void clear_blackstartenabled() ;
  const ::commonmodule::ControlSPC& blackstartenabled() const;
  PROTOBUF_NODISCARD ::commonmodule::ControlSPC* release_blackstartenabled();
  ::commonmodule::ControlSPC* mutable_blackstartenabled();
  void set_allocated_blackstartenabled(::commonmodule::ControlSPC* blackstartenabled);
  private:
  const ::commonmodule::ControlSPC& _internal_blackstartenabled() const;
  ::commonmodule::ControlSPC* _internal_mutable_blackstartenabled();
  public:
  void unsafe_arena_set_allocated_blackstartenabled(
      ::commonmodule::ControlSPC* blackstartenabled);
  ::commonmodule::ControlSPC* unsafe_arena_release_blackstartenabled();
  // .commonmodule.ControlSPC frequencySetPointEnabled = 2;
  bool has_frequencysetpointenabled() const;
  private:
  bool _internal_has_frequencysetpointenabled() const;

  public:
  void clear_frequencysetpointenabled() ;
  const ::commonmodule::ControlSPC& frequencysetpointenabled() const;
  PROTOBUF_NODISCARD ::commonmodule::ControlSPC* release_frequencysetpointenabled();
  ::commonmodule::ControlSPC* mutable_frequencysetpointenabled();
  void set_allocated_frequencysetpointenabled(::commonmodule::ControlSPC* frequencysetpointenabled);
  private:
  const ::commonmodule::ControlSPC& _internal_frequencysetpointenabled() const;
  ::commonmodule::ControlSPC* _internal_mutable_frequencysetpointenabled();
  public:
  void unsafe_arena_set_allocated_frequencysetpointenabled(
      ::commonmodule::ControlSPC* frequencysetpointenabled);
  ::commonmodule::ControlSPC* unsafe_arena_release_frequencysetpointenabled();
  // .google.protobuf.FloatValue pctHzDroop = 3;
  bool has_pcthzdroop() const;
  private:
  bool _internal_has_pcthzdroop() const;

  public:
  void clear_pcthzdroop() ;
  const ::PROTOBUF_NAMESPACE_ID::FloatValue& pcthzdroop() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::FloatValue* release_pcthzdroop();
  ::PROTOBUF_NAMESPACE_ID::FloatValue* mutable_pcthzdroop();
  void set_allocated_pcthzdroop(::PROTOBUF_NAMESPACE_ID::FloatValue* pcthzdroop);
  private:
  const ::PROTOBUF_NAMESPACE_ID::FloatValue& _internal_pcthzdroop() const;
  ::PROTOBUF_NAMESPACE_ID::FloatValue* _internal_mutable_pcthzdroop();
  public:
  void unsafe_arena_set_allocated_pcthzdroop(
      ::PROTOBUF_NAMESPACE_ID::FloatValue* pcthzdroop);
  ::PROTOBUF_NAMESPACE_ID::FloatValue* unsafe_arena_release_pcthzdroop();
  // .google.protobuf.FloatValue pctVDroop = 4;
  bool has_pctvdroop() const;
  private:
  bool _internal_has_pctvdroop() const;

  public:
  void clear_pctvdroop() ;
  const ::PROTOBUF_NAMESPACE_ID::FloatValue& pctvdroop() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::FloatValue* release_pctvdroop();
  ::PROTOBUF_NAMESPACE_ID::FloatValue* mutable_pctvdroop();
  void set_allocated_pctvdroop(::PROTOBUF_NAMESPACE_ID::FloatValue* pctvdroop);
  private:
  const ::PROTOBUF_NAMESPACE_ID::FloatValue& _internal_pctvdroop() const;
  ::PROTOBUF_NAMESPACE_ID::FloatValue* _internal_mutable_pctvdroop();
  public:
  void unsafe_arena_set_allocated_pctvdroop(
      ::PROTOBUF_NAMESPACE_ID::FloatValue* pctvdroop);
  ::PROTOBUF_NAMESPACE_ID::FloatValue* unsafe_arena_release_pctvdroop();
  // .commonmodule.RampRate rampRates = 5;
  bool has_ramprates() const;
  private:
  bool _internal_has_ramprates() const;

  public:
  void clear_ramprates() ;
  const ::commonmodule::RampRate& ramprates() const;
  PROTOBUF_NODISCARD ::commonmodule::RampRate* release_ramprates();
  ::commonmodule::RampRate* mutable_ramprates();
  void set_allocated_ramprates(::commonmodule::RampRate* ramprates);
  private:
  const ::commonmodule::RampRate& _internal_ramprates() const;
  ::commonmodule::RampRate* _internal_mutable_ramprates();
  public:
  void unsafe_arena_set_allocated_ramprates(
      ::commonmodule::RampRate* ramprates);
  ::commonmodule::RampRate* unsafe_arena_release_ramprates();
  // .commonmodule.ControlSPC reactivePwrSetPointEnabled = 6;
  bool has_reactivepwrsetpointenabled() const;
  private:
  bool _internal_has_reactivepwrsetpointenabled() const;

  public:
  void clear_reactivepwrsetpointenabled() ;
  const ::commonmodule::ControlSPC& reactivepwrsetpointenabled() const;
  PROTOBUF_NODISCARD ::commonmodule::ControlSPC* release_reactivepwrsetpointenabled();
  ::commonmodule::ControlSPC* mutable_reactivepwrsetpointenabled();
  void set_allocated_reactivepwrsetpointenabled(::commonmodule::ControlSPC* reactivepwrsetpointenabled);
  private:
  const ::commonmodule::ControlSPC& _internal_reactivepwrsetpointenabled() const;
  ::commonmodule::ControlSPC* _internal_mutable_reactivepwrsetpointenabled();
  public:
  void unsafe_arena_set_allocated_reactivepwrsetpointenabled(
      ::commonmodule::ControlSPC* reactivepwrsetpointenabled);
  ::commonmodule::ControlSPC* unsafe_arena_release_reactivepwrsetpointenabled();
  // .commonmodule.ControlSPC realPwrSetPointEnabled = 7;
  bool has_realpwrsetpointenabled() const;
  private:
  bool _internal_has_realpwrsetpointenabled() const;

  public:
  void clear_realpwrsetpointenabled() ;
  const ::commonmodule::ControlSPC& realpwrsetpointenabled() const;
  PROTOBUF_NODISCARD ::commonmodule::ControlSPC* release_realpwrsetpointenabled();
  ::commonmodule::ControlSPC* mutable_realpwrsetpointenabled();
  void set_allocated_realpwrsetpointenabled(::commonmodule::ControlSPC* realpwrsetpointenabled);
  private:
  const ::commonmodule::ControlSPC& _internal_realpwrsetpointenabled() const;
  ::commonmodule::ControlSPC* _internal_mutable_realpwrsetpointenabled();
  public:
  void unsafe_arena_set_allocated_realpwrsetpointenabled(
      ::commonmodule::ControlSPC* realpwrsetpointenabled);
  ::commonmodule::ControlSPC* unsafe_arena_release_realpwrsetpointenabled();
  // .commonmodule.ControlSPC reset = 8;
  bool has_reset() const;
  private:
  bool _internal_has_reset() const;

  public:
  void clear_reset() ;
  const ::commonmodule::ControlSPC& reset() const;
  PROTOBUF_NODISCARD ::commonmodule::ControlSPC* release_reset();
  ::commonmodule::ControlSPC* mutable_reset();
  void set_allocated_reset(::commonmodule::ControlSPC* reset);
  private:
  const ::commonmodule::ControlSPC& _internal_reset() const;
  ::commonmodule::ControlSPC* _internal_mutable_reset();
  public:
  void unsafe_arena_set_allocated_reset(
      ::commonmodule::ControlSPC* reset);
  ::commonmodule::ControlSPC* unsafe_arena_release_reset();
  // .commonmodule.Optional_StateKind state = 9;
  bool has_state() const;
  private:
  bool _internal_has_state() const;

  public:
  void clear_state() ;
  const ::commonmodule::Optional_StateKind& state() const;
  PROTOBUF_NODISCARD ::commonmodule::Optional_StateKind* release_state();
  ::commonmodule::Optional_StateKind* mutable_state();
  void set_allocated_state(::commonmodule::Optional_StateKind* state);
  private:
  const ::commonmodule::Optional_StateKind& _internal_state() const;
  ::commonmodule::Optional_StateKind* _internal_mutable_state();
  public:
  void unsafe_arena_set_allocated_state(
      ::commonmodule::Optional_StateKind* state);
  ::commonmodule::Optional_StateKind* unsafe_arena_release_state();
  // .commonmodule.ControlSPC syncBackToGrid = 10;
  bool has_syncbacktogrid() const;
  private:
  bool _internal_has_syncbacktogrid() const;

  public:
  void clear_syncbacktogrid() ;
  const ::commonmodule::ControlSPC& syncbacktogrid() const;
  PROTOBUF_NODISCARD ::commonmodule::ControlSPC* release_syncbacktogrid();
  ::commonmodule::ControlSPC* mutable_syncbacktogrid();
  void set_allocated_syncbacktogrid(::commonmodule::ControlSPC* syncbacktogrid);
  private:
  const ::commonmodule::ControlSPC& _internal_syncbacktogrid() const;
  ::commonmodule::ControlSPC* _internal_mutable_syncbacktogrid();
  public:
  void unsafe_arena_set_allocated_syncbacktogrid(
      ::commonmodule::ControlSPC* syncbacktogrid);
  ::commonmodule::ControlSPC* unsafe_arena_release_syncbacktogrid();
  // .commonmodule.ControlSPC transToIslndOnGridLossEnabled = 11;
  bool has_transtoislndongridlossenabled() const;
  private:
  bool _internal_has_transtoislndongridlossenabled() const;

  public:
  void clear_transtoislndongridlossenabled() ;
  const ::commonmodule::ControlSPC& transtoislndongridlossenabled() const;
  PROTOBUF_NODISCARD ::commonmodule::ControlSPC* release_transtoislndongridlossenabled();
  ::commonmodule::ControlSPC* mutable_transtoislndongridlossenabled();
  void set_allocated_transtoislndongridlossenabled(::commonmodule::ControlSPC* transtoislndongridlossenabled);
  private:
  const ::commonmodule::ControlSPC& _internal_transtoislndongridlossenabled() const;
  ::commonmodule::ControlSPC* _internal_mutable_transtoislndongridlossenabled();
  public:
  void unsafe_arena_set_allocated_transtoislndongridlossenabled(
      ::commonmodule::ControlSPC* transtoislndongridlossenabled);
  ::commonmodule::ControlSPC* unsafe_arena_release_transtoislndongridlossenabled();
  // .commonmodule.ControlSPC voltageSetPointEnabled = 12;
  bool has_voltagesetpointenabled() const;
  private:
  bool _internal_has_voltagesetpointenabled() const;

  public:
  void clear_voltagesetpointenabled() ;
  const ::commonmodule::ControlSPC& voltagesetpointenabled() const;
  PROTOBUF_NODISCARD ::commonmodule::ControlSPC* release_voltagesetpointenabled();
  ::commonmodule::ControlSPC* mutable_voltagesetpointenabled();
  void set_allocated_voltagesetpointenabled(::commonmodule::ControlSPC* voltagesetpointenabled);
  private:
  const ::commonmodule::ControlSPC& _internal_voltagesetpointenabled() const;
  ::commonmodule::ControlSPC* _internal_mutable_voltagesetpointenabled();
  public:
  void unsafe_arena_set_allocated_voltagesetpointenabled(
      ::commonmodule::ControlSPC* voltagesetpointenabled);
  ::commonmodule::ControlSPC* unsafe_arena_release_voltagesetpointenabled();
  // .commonmodule.ControlTimestamp startTime = 13 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  bool has_starttime() const;
  private:
  bool _internal_has_starttime() const;

  public:
  void clear_starttime() ;
  const ::commonmodule::ControlTimestamp& starttime() const;
  PROTOBUF_NODISCARD ::commonmodule::ControlTimestamp* release_starttime();
  ::commonmodule::ControlTimestamp* mutable_starttime();
  void set_allocated_starttime(::commonmodule::ControlTimestamp* starttime);
  private:
  const ::commonmodule::ControlTimestamp& _internal_starttime() const;
  ::commonmodule::ControlTimestamp* _internal_mutable_starttime();
  public:
  void unsafe_arena_set_allocated_starttime(
      ::commonmodule::ControlTimestamp* starttime);
  ::commonmodule::ControlTimestamp* unsafe_arena_release_starttime();
  // .commonmodule.EnterServiceAPC enterServiceOperation = 14;
  bool has_enterserviceoperation() const;
  private:
  bool _internal_has_enterserviceoperation() const;

  public:
  void clear_enterserviceoperation() ;
  const ::commonmodule::EnterServiceAPC& enterserviceoperation() const;
  PROTOBUF_NODISCARD ::commonmodule::EnterServiceAPC* release_enterserviceoperation();
  ::commonmodule::EnterServiceAPC* mutable_enterserviceoperation();
  void set_allocated_enterserviceoperation(::commonmodule::EnterServiceAPC* enterserviceoperation);
  private:
  const ::commonmodule::EnterServiceAPC& _internal_enterserviceoperation() const;
  ::commonmodule::EnterServiceAPC* _internal_mutable_enterserviceoperation();
  public:
  void unsafe_arena_set_allocated_enterserviceoperation(
      ::commonmodule::EnterServiceAPC* enterserviceoperation);
  ::commonmodule::EnterServiceAPC* unsafe_arena_release_enterserviceoperation();
  // .commonmodule.HzWAPC hzWOperation = 15;
  bool has_hzwoperation() const;
  private:
  bool _internal_has_hzwoperation() const;

  public:
  void clear_hzwoperation() ;
  const ::commonmodule::HzWAPC& hzwoperation() const;
  PROTOBUF_NODISCARD ::commonmodule::HzWAPC* release_hzwoperation();
  ::commonmodule::HzWAPC* mutable_hzwoperation();
  void set_allocated_hzwoperation(::commonmodule::HzWAPC* hzwoperation);
  private:
  const ::commonmodule::HzWAPC& _internal_hzwoperation() const;
  ::commonmodule::HzWAPC* _internal_mutable_hzwoperation();
  public:
  void unsafe_arena_set_allocated_hzwoperation(
      ::commonmodule::HzWAPC* hzwoperation);
  ::commonmodule::HzWAPC* unsafe_arena_release_hzwoperation();
  // .commonmodule.LimitWAPC limitWOperation = 16;
  bool has_limitwoperation() const;
  private:
  bool _internal_has_limitwoperation() const;

  public:
  void clear_limitwoperation() ;
  const ::commonmodule::LimitWAPC& limitwoperation() const;
  PROTOBUF_NODISCARD ::commonmodule::LimitWAPC* release_limitwoperation();
  ::commonmodule::LimitWAPC* mutable_limitwoperation();
  void set_allocated_limitwoperation(::commonmodule::LimitWAPC* limitwoperation);
  private:
  const ::commonmodule::LimitWAPC& _internal_limitwoperation() const;
  ::commonmodule::LimitWAPC* _internal_mutable_limitwoperation();
  public:
  void unsafe_arena_set_allocated_limitwoperation(
      ::commonmodule::LimitWAPC* limitwoperation);
  ::commonmodule::LimitWAPC* unsafe_arena_release_limitwoperation();
  // .commonmodule.PFSPC pFOperation = 17;
  bool has_pfoperation() const;
  private:
  bool _internal_has_pfoperation() const;

  public:
  void clear_pfoperation() ;
  const ::commonmodule::PFSPC& pfoperation() const;
  PROTOBUF_NODISCARD ::commonmodule::PFSPC* release_pfoperation();
  ::commonmodule::PFSPC* mutable_pfoperation();
  void set_allocated_pfoperation(::commonmodule::PFSPC* pfoperation);
  private:
  const ::commonmodule::PFSPC& _internal_pfoperation() const;
  ::commonmodule::PFSPC* _internal_mutable_pfoperation();
  public:
  void unsafe_arena_set_allocated_pfoperation(
      ::commonmodule::PFSPC* pfoperation);
  ::commonmodule::PFSPC* unsafe_arena_release_pfoperation();
  // .commonmodule.TmHzCSG tmHzTripOperation = 18;
  bool has_tmhztripoperation() const;
  private:
  bool _internal_has_tmhztripoperation() const;

  public:
  void clear_tmhztripoperation() ;
  const ::commonmodule::TmHzCSG& tmhztripoperation() const;
  PROTOBUF_NODISCARD ::commonmodule::TmHzCSG* release_tmhztripoperation();
  ::commonmodule::TmHzCSG* mutable_tmhztripoperation();
  void set_allocated_tmhztripoperation(::commonmodule::TmHzCSG* tmhztripoperation);
  private:
  const ::commonmodule::TmHzCSG& _internal_tmhztripoperation() const;
  ::commonmodule::TmHzCSG* _internal_mutable_tmhztripoperation();
  public:
  void unsafe_arena_set_allocated_tmhztripoperation(
      ::commonmodule::TmHzCSG* tmhztripoperation);
  ::commonmodule::TmHzCSG* unsafe_arena_release_tmhztripoperation();
  // .commonmodule.TmVoltCSG tmVoltTripOperation = 19;
  bool has_tmvolttripoperation() const;
  private:
  bool _internal_has_tmvolttripoperation() const;

  public:
  void clear_tmvolttripoperation() ;
  const ::commonmodule::TmVoltCSG& tmvolttripoperation() const;
  PROTOBUF_NODISCARD ::commonmodule::TmVoltCSG* release_tmvolttripoperation();
  ::commonmodule::TmVoltCSG* mutable_tmvolttripoperation();
  void set_allocated_tmvolttripoperation(::commonmodule::TmVoltCSG* tmvolttripoperation);
  private:
  const ::commonmodule::TmVoltCSG& _internal_tmvolttripoperation() const;
  ::commonmodule::TmVoltCSG* _internal_mutable_tmvolttripoperation();
  public:
  void unsafe_arena_set_allocated_tmvolttripoperation(
      ::commonmodule::TmVoltCSG* tmvolttripoperation);
  ::commonmodule::TmVoltCSG* unsafe_arena_release_tmvolttripoperation();
  // .commonmodule.VarSPC vArOperation = 20;
  bool has_varoperation() const;
  private:
  bool _internal_has_varoperation() const;

  public:
  void clear_varoperation() ;
  const ::commonmodule::VarSPC& varoperation() const;
  PROTOBUF_NODISCARD ::commonmodule::VarSPC* release_varoperation();
  ::commonmodule::VarSPC* mutable_varoperation();
  void set_allocated_varoperation(::commonmodule::VarSPC* varoperation);
  private:
  const ::commonmodule::VarSPC& _internal_varoperation() const;
  ::commonmodule::VarSPC* _internal_mutable_varoperation();
  public:
  void unsafe_arena_set_allocated_varoperation(
      ::commonmodule::VarSPC* varoperation);
  ::commonmodule::VarSPC* unsafe_arena_release_varoperation();
  // .commonmodule.VoltVarCSG voltVarOperation = 21;
  bool has_voltvaroperation() const;
  private:
  bool _internal_has_voltvaroperation() const;

  public:
  void clear_voltvaroperation() ;
  const ::commonmodule::VoltVarCSG& voltvaroperation() const;
  PROTOBUF_NODISCARD ::commonmodule::VoltVarCSG* release_voltvaroperation();
  ::commonmodule::VoltVarCSG* mutable_voltvaroperation();
  void set_allocated_voltvaroperation(::commonmodule::VoltVarCSG* voltvaroperation);
  private:
  const ::commonmodule::VoltVarCSG& _internal_voltvaroperation() const;
  ::commonmodule::VoltVarCSG* _internal_mutable_voltvaroperation();
  public:
  void unsafe_arena_set_allocated_voltvaroperation(
      ::commonmodule::VoltVarCSG* voltvaroperation);
  ::commonmodule::VoltVarCSG* unsafe_arena_release_voltvaroperation();
  // .commonmodule.VoltWCSG voltWOperation = 22;
  bool has_voltwoperation() const;
  private:
  bool _internal_has_voltwoperation() const;

  public:
  void clear_voltwoperation() ;
  const ::commonmodule::VoltWCSG& voltwoperation() const;
  PROTOBUF_NODISCARD ::commonmodule::VoltWCSG* release_voltwoperation();
  ::commonmodule::VoltWCSG* mutable_voltwoperation();
  void set_allocated_voltwoperation(::commonmodule::VoltWCSG* voltwoperation);
  private:
  const ::commonmodule::VoltWCSG& _internal_voltwoperation() const;
  ::commonmodule::VoltWCSG* _internal_mutable_voltwoperation();
  public:
  void unsafe_arena_set_allocated_voltwoperation(
      ::commonmodule::VoltWCSG* voltwoperation);
  ::commonmodule::VoltWCSG* unsafe_arena_release_voltwoperation();
  // .commonmodule.WVarCSG wVarOperation = 23;
  bool has_wvaroperation() const;
  private:
  bool _internal_has_wvaroperation() const;

  public:
  void clear_wvaroperation() ;
  const ::commonmodule::WVarCSG& wvaroperation() const;
  PROTOBUF_NODISCARD ::commonmodule::WVarCSG* release_wvaroperation();
  ::commonmodule::WVarCSG* mutable_wvaroperation();
  void set_allocated_wvaroperation(::commonmodule::WVarCSG* wvaroperation);
  private:
  const ::commonmodule::WVarCSG& _internal_wvaroperation() const;
  ::commonmodule::WVarCSG* _internal_mutable_wvaroperation();
  public:
  void unsafe_arena_set_allocated_wvaroperation(
      ::commonmodule::WVarCSG* wvaroperation);
  ::commonmodule::WVarCSG* unsafe_arena_release_wvaroperation();
  // @@protoc_insertion_point(class_scope:generationmodule.GenerationPoint)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::commonmodule::ControlSPC* blackstartenabled_;
    ::commonmodule::ControlSPC* frequencysetpointenabled_;
    ::PROTOBUF_NAMESPACE_ID::FloatValue* pcthzdroop_;
    ::PROTOBUF_NAMESPACE_ID::FloatValue* pctvdroop_;
    ::commonmodule::RampRate* ramprates_;
    ::commonmodule::ControlSPC* reactivepwrsetpointenabled_;
    ::commonmodule::ControlSPC* realpwrsetpointenabled_;
    ::commonmodule::ControlSPC* reset_;
    ::commonmodule::Optional_StateKind* state_;
    ::commonmodule::ControlSPC* syncbacktogrid_;
    ::commonmodule::ControlSPC* transtoislndongridlossenabled_;
    ::commonmodule::ControlSPC* voltagesetpointenabled_;
    ::commonmodule::ControlTimestamp* starttime_;
    ::commonmodule::EnterServiceAPC* enterserviceoperation_;
    ::commonmodule::HzWAPC* hzwoperation_;
    ::commonmodule::LimitWAPC* limitwoperation_;
    ::commonmodule::PFSPC* pfoperation_;
    ::commonmodule::TmHzCSG* tmhztripoperation_;
    ::commonmodule::TmVoltCSG* tmvolttripoperation_;
    ::commonmodule::VarSPC* varoperation_;
    ::commonmodule::VoltVarCSG* voltvaroperation_;
    ::commonmodule::VoltWCSG* voltwoperation_;
    ::commonmodule::WVarCSG* wvaroperation_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_generationmodule_2fgenerationmodule_2eproto;
};// -------------------------------------------------------------------

class GenerationCSG final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:generationmodule.GenerationCSG) */ {
 public:
  inline GenerationCSG() : GenerationCSG(nullptr) {}
  ~GenerationCSG() override;
  explicit PROTOBUF_CONSTEXPR GenerationCSG(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GenerationCSG(const GenerationCSG& from);
  GenerationCSG(GenerationCSG&& from) noexcept
    : GenerationCSG() {
    *this = ::std::move(from);
  }

  inline GenerationCSG& operator=(const GenerationCSG& from) {
    CopyFrom(from);
    return *this;
  }
  inline GenerationCSG& operator=(GenerationCSG&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GenerationCSG& default_instance() {
    return *internal_default_instance();
  }
  static inline const GenerationCSG* internal_default_instance() {
    return reinterpret_cast<const GenerationCSG*>(
               &_GenerationCSG_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(GenerationCSG& a, GenerationCSG& b) {
    a.Swap(&b);
  }
  inline void Swap(GenerationCSG* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GenerationCSG* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GenerationCSG* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GenerationCSG>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GenerationCSG& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GenerationCSG& from) {
    GenerationCSG::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GenerationCSG* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "generationmodule.GenerationCSG";
  }
  protected:
  explicit GenerationCSG(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCrvPtsFieldNumber = 1,
  };
  // repeated .generationmodule.GenerationPoint crvPts = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  int crvpts_size() const;
  private:
  int _internal_crvpts_size() const;

  public:
  void clear_crvpts() ;
  ::generationmodule::GenerationPoint* mutable_crvpts(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::generationmodule::GenerationPoint >*
      mutable_crvpts();
  private:
  const ::generationmodule::GenerationPoint& _internal_crvpts(int index) const;
  ::generationmodule::GenerationPoint* _internal_add_crvpts();
  public:
  const ::generationmodule::GenerationPoint& crvpts(int index) const;
  ::generationmodule::GenerationPoint* add_crvpts();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::generationmodule::GenerationPoint >&
      crvpts() const;
  // @@protoc_insertion_point(class_scope:generationmodule.GenerationCSG)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::generationmodule::GenerationPoint > crvpts_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_generationmodule_2fgenerationmodule_2eproto;
};// -------------------------------------------------------------------

class GenerationControlScheduleFSCH final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:generationmodule.GenerationControlScheduleFSCH) */ {
 public:
  inline GenerationControlScheduleFSCH() : GenerationControlScheduleFSCH(nullptr) {}
  ~GenerationControlScheduleFSCH() override;
  explicit PROTOBUF_CONSTEXPR GenerationControlScheduleFSCH(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GenerationControlScheduleFSCH(const GenerationControlScheduleFSCH& from);
  GenerationControlScheduleFSCH(GenerationControlScheduleFSCH&& from) noexcept
    : GenerationControlScheduleFSCH() {
    *this = ::std::move(from);
  }

  inline GenerationControlScheduleFSCH& operator=(const GenerationControlScheduleFSCH& from) {
    CopyFrom(from);
    return *this;
  }
  inline GenerationControlScheduleFSCH& operator=(GenerationControlScheduleFSCH&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GenerationControlScheduleFSCH& default_instance() {
    return *internal_default_instance();
  }
  static inline const GenerationControlScheduleFSCH* internal_default_instance() {
    return reinterpret_cast<const GenerationControlScheduleFSCH*>(
               &_GenerationControlScheduleFSCH_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(GenerationControlScheduleFSCH& a, GenerationControlScheduleFSCH& b) {
    a.Swap(&b);
  }
  inline void Swap(GenerationControlScheduleFSCH* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GenerationControlScheduleFSCH* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GenerationControlScheduleFSCH* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GenerationControlScheduleFSCH>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GenerationControlScheduleFSCH& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GenerationControlScheduleFSCH& from) {
    GenerationControlScheduleFSCH::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GenerationControlScheduleFSCH* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "generationmodule.GenerationControlScheduleFSCH";
  }
  protected:
  explicit GenerationControlScheduleFSCH(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValDCSGFieldNumber = 1,
  };
  // .generationmodule.GenerationCSG ValDCSG = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  bool has_valdcsg() const;
  private:
  bool _internal_has_valdcsg() const;

  public:
  void clear_valdcsg() ;
  const ::generationmodule::GenerationCSG& valdcsg() const;
  PROTOBUF_NODISCARD ::generationmodule::GenerationCSG* release_valdcsg();
  ::generationmodule::GenerationCSG* mutable_valdcsg();
  void set_allocated_valdcsg(::generationmodule::GenerationCSG* valdcsg);
  private:
  const ::generationmodule::GenerationCSG& _internal_valdcsg() const;
  ::generationmodule::GenerationCSG* _internal_mutable_valdcsg();
  public:
  void unsafe_arena_set_allocated_valdcsg(
      ::generationmodule::GenerationCSG* valdcsg);
  ::generationmodule::GenerationCSG* unsafe_arena_release_valdcsg();
  // @@protoc_insertion_point(class_scope:generationmodule.GenerationControlScheduleFSCH)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::generationmodule::GenerationCSG* valdcsg_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_generationmodule_2fgenerationmodule_2eproto;
};// -------------------------------------------------------------------

class GenerationControlFSCC final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:generationmodule.GenerationControlFSCC) */ {
 public:
  inline GenerationControlFSCC() : GenerationControlFSCC(nullptr) {}
  ~GenerationControlFSCC() override;
  explicit PROTOBUF_CONSTEXPR GenerationControlFSCC(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GenerationControlFSCC(const GenerationControlFSCC& from);
  GenerationControlFSCC(GenerationControlFSCC&& from) noexcept
    : GenerationControlFSCC() {
    *this = ::std::move(from);
  }

  inline GenerationControlFSCC& operator=(const GenerationControlFSCC& from) {
    CopyFrom(from);
    return *this;
  }
  inline GenerationControlFSCC& operator=(GenerationControlFSCC&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GenerationControlFSCC& default_instance() {
    return *internal_default_instance();
  }
  static inline const GenerationControlFSCC* internal_default_instance() {
    return reinterpret_cast<const GenerationControlFSCC*>(
               &_GenerationControlFSCC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(GenerationControlFSCC& a, GenerationControlFSCC& b) {
    a.Swap(&b);
  }
  inline void Swap(GenerationControlFSCC* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GenerationControlFSCC* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GenerationControlFSCC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GenerationControlFSCC>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GenerationControlFSCC& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GenerationControlFSCC& from) {
    GenerationControlFSCC::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GenerationControlFSCC* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "generationmodule.GenerationControlFSCC";
  }
  protected:
  explicit GenerationControlFSCC(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kControlFSCCFieldNumber = 1,
    kGenerationControlScheduleFSCHFieldNumber = 2,
  };
  // .commonmodule.ControlFSCC controlFSCC = 1 [(.uml.option_parent_message) = true];
  bool has_controlfscc() const;
  private:
  bool _internal_has_controlfscc() const;

  public:
  void clear_controlfscc() ;
  const ::commonmodule::ControlFSCC& controlfscc() const;
  PROTOBUF_NODISCARD ::commonmodule::ControlFSCC* release_controlfscc();
  ::commonmodule::ControlFSCC* mutable_controlfscc();
  void set_allocated_controlfscc(::commonmodule::ControlFSCC* controlfscc);
  private:
  const ::commonmodule::ControlFSCC& _internal_controlfscc() const;
  ::commonmodule::ControlFSCC* _internal_mutable_controlfscc();
  public:
  void unsafe_arena_set_allocated_controlfscc(
      ::commonmodule::ControlFSCC* controlfscc);
  ::commonmodule::ControlFSCC* unsafe_arena_release_controlfscc();
  // .generationmodule.GenerationControlScheduleFSCH GenerationControlScheduleFSCH = 2;
  bool has_generationcontrolschedulefsch() const;
  private:
  bool _internal_has_generationcontrolschedulefsch() const;

  public:
  void clear_generationcontrolschedulefsch() ;
  const ::generationmodule::GenerationControlScheduleFSCH& generationcontrolschedulefsch() const;
  PROTOBUF_NODISCARD ::generationmodule::GenerationControlScheduleFSCH* release_generationcontrolschedulefsch();
  ::generationmodule::GenerationControlScheduleFSCH* mutable_generationcontrolschedulefsch();
  void set_allocated_generationcontrolschedulefsch(::generationmodule::GenerationControlScheduleFSCH* generationcontrolschedulefsch);
  private:
  const ::generationmodule::GenerationControlScheduleFSCH& _internal_generationcontrolschedulefsch() const;
  ::generationmodule::GenerationControlScheduleFSCH* _internal_mutable_generationcontrolschedulefsch();
  public:
  void unsafe_arena_set_allocated_generationcontrolschedulefsch(
      ::generationmodule::GenerationControlScheduleFSCH* generationcontrolschedulefsch);
  ::generationmodule::GenerationControlScheduleFSCH* unsafe_arena_release_generationcontrolschedulefsch();
  // @@protoc_insertion_point(class_scope:generationmodule.GenerationControlFSCC)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::commonmodule::ControlFSCC* controlfscc_;
    ::generationmodule::GenerationControlScheduleFSCH* generationcontrolschedulefsch_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_generationmodule_2fgenerationmodule_2eproto;
};// -------------------------------------------------------------------

class GenerationControl final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:generationmodule.GenerationControl) */ {
 public:
  inline GenerationControl() : GenerationControl(nullptr) {}
  ~GenerationControl() override;
  explicit PROTOBUF_CONSTEXPR GenerationControl(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GenerationControl(const GenerationControl& from);
  GenerationControl(GenerationControl&& from) noexcept
    : GenerationControl() {
    *this = ::std::move(from);
  }

  inline GenerationControl& operator=(const GenerationControl& from) {
    CopyFrom(from);
    return *this;
  }
  inline GenerationControl& operator=(GenerationControl&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GenerationControl& default_instance() {
    return *internal_default_instance();
  }
  static inline const GenerationControl* internal_default_instance() {
    return reinterpret_cast<const GenerationControl*>(
               &_GenerationControl_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(GenerationControl& a, GenerationControl& b) {
    a.Swap(&b);
  }
  inline void Swap(GenerationControl* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GenerationControl* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GenerationControl* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GenerationControl>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GenerationControl& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GenerationControl& from) {
    GenerationControl::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GenerationControl* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "generationmodule.GenerationControl";
  }
  protected:
  explicit GenerationControl(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kControlValueFieldNumber = 1,
    kCheckFieldNumber = 2,
    kGenerationControlFSCCFieldNumber = 3,
  };
  // .commonmodule.ControlValue controlValue = 1 [(.uml.option_parent_message) = true];
  bool has_controlvalue() const;
  private:
  bool _internal_has_controlvalue() const;

  public:
  void clear_controlvalue() ;
  const ::commonmodule::ControlValue& controlvalue() const;
  PROTOBUF_NODISCARD ::commonmodule::ControlValue* release_controlvalue();
  ::commonmodule::ControlValue* mutable_controlvalue();
  void set_allocated_controlvalue(::commonmodule::ControlValue* controlvalue);
  private:
  const ::commonmodule::ControlValue& _internal_controlvalue() const;
  ::commonmodule::ControlValue* _internal_mutable_controlvalue();
  public:
  void unsafe_arena_set_allocated_controlvalue(
      ::commonmodule::ControlValue* controlvalue);
  ::commonmodule::ControlValue* unsafe_arena_release_controlvalue();
  // .commonmodule.CheckConditions check = 2;
  bool has_check() const;
  private:
  bool _internal_has_check() const;

  public:
  void clear_check() ;
  const ::commonmodule::CheckConditions& check() const;
  PROTOBUF_NODISCARD ::commonmodule::CheckConditions* release_check();
  ::commonmodule::CheckConditions* mutable_check();
  void set_allocated_check(::commonmodule::CheckConditions* check);
  private:
  const ::commonmodule::CheckConditions& _internal_check() const;
  ::commonmodule::CheckConditions* _internal_mutable_check();
  public:
  void unsafe_arena_set_allocated_check(
      ::commonmodule::CheckConditions* check);
  ::commonmodule::CheckConditions* unsafe_arena_release_check();
  // .generationmodule.GenerationControlFSCC generationControlFSCC = 3;
  bool has_generationcontrolfscc() const;
  private:
  bool _internal_has_generationcontrolfscc() const;

  public:
  void clear_generationcontrolfscc() ;
  const ::generationmodule::GenerationControlFSCC& generationcontrolfscc() const;
  PROTOBUF_NODISCARD ::generationmodule::GenerationControlFSCC* release_generationcontrolfscc();
  ::generationmodule::GenerationControlFSCC* mutable_generationcontrolfscc();
  void set_allocated_generationcontrolfscc(::generationmodule::GenerationControlFSCC* generationcontrolfscc);
  private:
  const ::generationmodule::GenerationControlFSCC& _internal_generationcontrolfscc() const;
  ::generationmodule::GenerationControlFSCC* _internal_mutable_generationcontrolfscc();
  public:
  void unsafe_arena_set_allocated_generationcontrolfscc(
      ::generationmodule::GenerationControlFSCC* generationcontrolfscc);
  ::generationmodule::GenerationControlFSCC* unsafe_arena_release_generationcontrolfscc();
  // @@protoc_insertion_point(class_scope:generationmodule.GenerationControl)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::commonmodule::ControlValue* controlvalue_;
    ::commonmodule::CheckConditions* check_;
    ::generationmodule::GenerationControlFSCC* generationcontrolfscc_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_generationmodule_2fgenerationmodule_2eproto;
};// -------------------------------------------------------------------

class GenerationControlProfile final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:generationmodule.GenerationControlProfile) */ {
 public:
  inline GenerationControlProfile() : GenerationControlProfile(nullptr) {}
  ~GenerationControlProfile() override;
  explicit PROTOBUF_CONSTEXPR GenerationControlProfile(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GenerationControlProfile(const GenerationControlProfile& from);
  GenerationControlProfile(GenerationControlProfile&& from) noexcept
    : GenerationControlProfile() {
    *this = ::std::move(from);
  }

  inline GenerationControlProfile& operator=(const GenerationControlProfile& from) {
    CopyFrom(from);
    return *this;
  }
  inline GenerationControlProfile& operator=(GenerationControlProfile&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GenerationControlProfile& default_instance() {
    return *internal_default_instance();
  }
  static inline const GenerationControlProfile* internal_default_instance() {
    return reinterpret_cast<const GenerationControlProfile*>(
               &_GenerationControlProfile_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(GenerationControlProfile& a, GenerationControlProfile& b) {
    a.Swap(&b);
  }
  inline void Swap(GenerationControlProfile* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GenerationControlProfile* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GenerationControlProfile* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GenerationControlProfile>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GenerationControlProfile& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GenerationControlProfile& from) {
    GenerationControlProfile::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GenerationControlProfile* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "generationmodule.GenerationControlProfile";
  }
  protected:
  explicit GenerationControlProfile(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kControlMessageInfoFieldNumber = 1,
    kGeneratingUnitFieldNumber = 2,
    kGenerationControlFieldNumber = 3,
  };
  // .commonmodule.ControlMessageInfo controlMessageInfo = 1 [(.uml.option_parent_message) = true];
  bool has_controlmessageinfo() const;
  private:
  bool _internal_has_controlmessageinfo() const;

  public:
  void clear_controlmessageinfo() ;
  const ::commonmodule::ControlMessageInfo& controlmessageinfo() const;
  PROTOBUF_NODISCARD ::commonmodule::ControlMessageInfo* release_controlmessageinfo();
  ::commonmodule::ControlMessageInfo* mutable_controlmessageinfo();
  void set_allocated_controlmessageinfo(::commonmodule::ControlMessageInfo* controlmessageinfo);
  private:
  const ::commonmodule::ControlMessageInfo& _internal_controlmessageinfo() const;
  ::commonmodule::ControlMessageInfo* _internal_mutable_controlmessageinfo();
  public:
  void unsafe_arena_set_allocated_controlmessageinfo(
      ::commonmodule::ControlMessageInfo* controlmessageinfo);
  ::commonmodule::ControlMessageInfo* unsafe_arena_release_controlmessageinfo();
  // .generationmodule.GeneratingUnit generatingUnit = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  bool has_generatingunit() const;
  private:
  bool _internal_has_generatingunit() const;

  public:
  void clear_generatingunit() ;
  const ::generationmodule::GeneratingUnit& generatingunit() const;
  PROTOBUF_NODISCARD ::generationmodule::GeneratingUnit* release_generatingunit();
  ::generationmodule::GeneratingUnit* mutable_generatingunit();
  void set_allocated_generatingunit(::generationmodule::GeneratingUnit* generatingunit);
  private:
  const ::generationmodule::GeneratingUnit& _internal_generatingunit() const;
  ::generationmodule::GeneratingUnit* _internal_mutable_generatingunit();
  public:
  void unsafe_arena_set_allocated_generatingunit(
      ::generationmodule::GeneratingUnit* generatingunit);
  ::generationmodule::GeneratingUnit* unsafe_arena_release_generatingunit();
  // .generationmodule.GenerationControl generationControl = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  bool has_generationcontrol() const;
  private:
  bool _internal_has_generationcontrol() const;

  public:
  void clear_generationcontrol() ;
  const ::generationmodule::GenerationControl& generationcontrol() const;
  PROTOBUF_NODISCARD ::generationmodule::GenerationControl* release_generationcontrol();
  ::generationmodule::GenerationControl* mutable_generationcontrol();
  void set_allocated_generationcontrol(::generationmodule::GenerationControl* generationcontrol);
  private:
  const ::generationmodule::GenerationControl& _internal_generationcontrol() const;
  ::generationmodule::GenerationControl* _internal_mutable_generationcontrol();
  public:
  void unsafe_arena_set_allocated_generationcontrol(
      ::generationmodule::GenerationControl* generationcontrol);
  ::generationmodule::GenerationControl* unsafe_arena_release_generationcontrol();
  // @@protoc_insertion_point(class_scope:generationmodule.GenerationControlProfile)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::commonmodule::ControlMessageInfo* controlmessageinfo_;
    ::generationmodule::GeneratingUnit* generatingunit_;
    ::generationmodule::GenerationControl* generationcontrol_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_generationmodule_2fgenerationmodule_2eproto;
};// -------------------------------------------------------------------

class DroopParameter final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:generationmodule.DroopParameter) */ {
 public:
  inline DroopParameter() : DroopParameter(nullptr) {}
  ~DroopParameter() override;
  explicit PROTOBUF_CONSTEXPR DroopParameter(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  DroopParameter(const DroopParameter& from);
  DroopParameter(DroopParameter&& from) noexcept
    : DroopParameter() {
    *this = ::std::move(from);
  }

  inline DroopParameter& operator=(const DroopParameter& from) {
    CopyFrom(from);
    return *this;
  }
  inline DroopParameter& operator=(DroopParameter&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DroopParameter& default_instance() {
    return *internal_default_instance();
  }
  static inline const DroopParameter* internal_default_instance() {
    return reinterpret_cast<const DroopParameter*>(
               &_DroopParameter_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(DroopParameter& a, DroopParameter& b) {
    a.Swap(&b);
  }
  inline void Swap(DroopParameter* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DroopParameter* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DroopParameter* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DroopParameter>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const DroopParameter& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const DroopParameter& from) {
    DroopParameter::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DroopParameter* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "generationmodule.DroopParameter";
  }
  protected:
  explicit DroopParameter(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSlopeFieldNumber = 1,
    kUnloadedOffsetFieldNumber = 2,
  };
  // .google.protobuf.FloatValue slope = 1;
  bool has_slope() const;
  private:
  bool _internal_has_slope() const;

  public:
  void clear_slope() ;
  const ::PROTOBUF_NAMESPACE_ID::FloatValue& slope() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::FloatValue* release_slope();
  ::PROTOBUF_NAMESPACE_ID::FloatValue* mutable_slope();
  void set_allocated_slope(::PROTOBUF_NAMESPACE_ID::FloatValue* slope);
  private:
  const ::PROTOBUF_NAMESPACE_ID::FloatValue& _internal_slope() const;
  ::PROTOBUF_NAMESPACE_ID::FloatValue* _internal_mutable_slope();
  public:
  void unsafe_arena_set_allocated_slope(
      ::PROTOBUF_NAMESPACE_ID::FloatValue* slope);
  ::PROTOBUF_NAMESPACE_ID::FloatValue* unsafe_arena_release_slope();
  // .google.protobuf.FloatValue unloadedOffset = 2;
  bool has_unloadedoffset() const;
  private:
  bool _internal_has_unloadedoffset() const;

  public:
  void clear_unloadedoffset() ;
  const ::PROTOBUF_NAMESPACE_ID::FloatValue& unloadedoffset() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::FloatValue* release_unloadedoffset();
  ::PROTOBUF_NAMESPACE_ID::FloatValue* mutable_unloadedoffset();
  void set_allocated_unloadedoffset(::PROTOBUF_NAMESPACE_ID::FloatValue* unloadedoffset);
  private:
  const ::PROTOBUF_NAMESPACE_ID::FloatValue& _internal_unloadedoffset() const;
  ::PROTOBUF_NAMESPACE_ID::FloatValue* _internal_mutable_unloadedoffset();
  public:
  void unsafe_arena_set_allocated_unloadedoffset(
      ::PROTOBUF_NAMESPACE_ID::FloatValue* unloadedoffset);
  ::PROTOBUF_NAMESPACE_ID::FloatValue* unsafe_arena_release_unloadedoffset();
  // @@protoc_insertion_point(class_scope:generationmodule.DroopParameter)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::FloatValue* slope_;
    ::PROTOBUF_NAMESPACE_ID::FloatValue* unloadedoffset_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_generationmodule_2fgenerationmodule_2eproto;
};// -------------------------------------------------------------------

class RealPowerControl final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:generationmodule.RealPowerControl) */ {
 public:
  inline RealPowerControl() : RealPowerControl(nullptr) {}
  ~RealPowerControl() override;
  explicit PROTOBUF_CONSTEXPR RealPowerControl(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  RealPowerControl(const RealPowerControl& from);
  RealPowerControl(RealPowerControl&& from) noexcept
    : RealPowerControl() {
    *this = ::std::move(from);
  }

  inline RealPowerControl& operator=(const RealPowerControl& from) {
    CopyFrom(from);
    return *this;
  }
  inline RealPowerControl& operator=(RealPowerControl&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RealPowerControl& default_instance() {
    return *internal_default_instance();
  }
  static inline const RealPowerControl* internal_default_instance() {
    return reinterpret_cast<const RealPowerControl*>(
               &_RealPowerControl_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(RealPowerControl& a, RealPowerControl& b) {
    a.Swap(&b);
  }
  inline void Swap(RealPowerControl* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RealPowerControl* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RealPowerControl* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RealPowerControl>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const RealPowerControl& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const RealPowerControl& from) {
    RealPowerControl::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RealPowerControl* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "generationmodule.RealPowerControl";
  }
  protected:
  explicit RealPowerControl(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDroopSetpointFieldNumber = 1,
    kIsochronousSetpointFieldNumber = 2,
    kRealPowerControlModeFieldNumber = 3,
    kRealPowerSetpointFieldNumber = 4,
  };
  // .generationmodule.DroopParameter droopSetpoint = 1;
  bool has_droopsetpoint() const;
  private:
  bool _internal_has_droopsetpoint() const;

  public:
  void clear_droopsetpoint() ;
  const ::generationmodule::DroopParameter& droopsetpoint() const;
  PROTOBUF_NODISCARD ::generationmodule::DroopParameter* release_droopsetpoint();
  ::generationmodule::DroopParameter* mutable_droopsetpoint();
  void set_allocated_droopsetpoint(::generationmodule::DroopParameter* droopsetpoint);
  private:
  const ::generationmodule::DroopParameter& _internal_droopsetpoint() const;
  ::generationmodule::DroopParameter* _internal_mutable_droopsetpoint();
  public:
  void unsafe_arena_set_allocated_droopsetpoint(
      ::generationmodule::DroopParameter* droopsetpoint);
  ::generationmodule::DroopParameter* unsafe_arena_release_droopsetpoint();
  // .google.protobuf.FloatValue isochronousSetpoint = 2;
  bool has_isochronoussetpoint() const;
  private:
  bool _internal_has_isochronoussetpoint() const;

  public:
  void clear_isochronoussetpoint() ;
  const ::PROTOBUF_NAMESPACE_ID::FloatValue& isochronoussetpoint() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::FloatValue* release_isochronoussetpoint();
  ::PROTOBUF_NAMESPACE_ID::FloatValue* mutable_isochronoussetpoint();
  void set_allocated_isochronoussetpoint(::PROTOBUF_NAMESPACE_ID::FloatValue* isochronoussetpoint);
  private:
  const ::PROTOBUF_NAMESPACE_ID::FloatValue& _internal_isochronoussetpoint() const;
  ::PROTOBUF_NAMESPACE_ID::FloatValue* _internal_mutable_isochronoussetpoint();
  public:
  void unsafe_arena_set_allocated_isochronoussetpoint(
      ::PROTOBUF_NAMESPACE_ID::FloatValue* isochronoussetpoint);
  ::PROTOBUF_NAMESPACE_ID::FloatValue* unsafe_arena_release_isochronoussetpoint();
  // .commonmodule.Optional_RealPowerControlKind realPowerControlMode = 3;
  bool has_realpowercontrolmode() const;
  private:
  bool _internal_has_realpowercontrolmode() const;

  public:
  void clear_realpowercontrolmode() ;
  const ::commonmodule::Optional_RealPowerControlKind& realpowercontrolmode() const;
  PROTOBUF_NODISCARD ::commonmodule::Optional_RealPowerControlKind* release_realpowercontrolmode();
  ::commonmodule::Optional_RealPowerControlKind* mutable_realpowercontrolmode();
  void set_allocated_realpowercontrolmode(::commonmodule::Optional_RealPowerControlKind* realpowercontrolmode);
  private:
  const ::commonmodule::Optional_RealPowerControlKind& _internal_realpowercontrolmode() const;
  ::commonmodule::Optional_RealPowerControlKind* _internal_mutable_realpowercontrolmode();
  public:
  void unsafe_arena_set_allocated_realpowercontrolmode(
      ::commonmodule::Optional_RealPowerControlKind* realpowercontrolmode);
  ::commonmodule::Optional_RealPowerControlKind* unsafe_arena_release_realpowercontrolmode();
  // .google.protobuf.FloatValue realPowerSetpoint = 4;
  bool has_realpowersetpoint() const;
  private:
  bool _internal_has_realpowersetpoint() const;

  public:
  void clear_realpowersetpoint() ;
  const ::PROTOBUF_NAMESPACE_ID::FloatValue& realpowersetpoint() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::FloatValue* release_realpowersetpoint();
  ::PROTOBUF_NAMESPACE_ID::FloatValue* mutable_realpowersetpoint();
  void set_allocated_realpowersetpoint(::PROTOBUF_NAMESPACE_ID::FloatValue* realpowersetpoint);
  private:
  const ::PROTOBUF_NAMESPACE_ID::FloatValue& _internal_realpowersetpoint() const;
  ::PROTOBUF_NAMESPACE_ID::FloatValue* _internal_mutable_realpowersetpoint();
  public:
  void unsafe_arena_set_allocated_realpowersetpoint(
      ::PROTOBUF_NAMESPACE_ID::FloatValue* realpowersetpoint);
  ::PROTOBUF_NAMESPACE_ID::FloatValue* unsafe_arena_release_realpowersetpoint();
  // @@protoc_insertion_point(class_scope:generationmodule.RealPowerControl)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::generationmodule::DroopParameter* droopsetpoint_;
    ::PROTOBUF_NAMESPACE_ID::FloatValue* isochronoussetpoint_;
    ::commonmodule::Optional_RealPowerControlKind* realpowercontrolmode_;
    ::PROTOBUF_NAMESPACE_ID::FloatValue* realpowersetpoint_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_generationmodule_2fgenerationmodule_2eproto;
};// -------------------------------------------------------------------

class ReactivePowerControl final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:generationmodule.ReactivePowerControl) */ {
 public:
  inline ReactivePowerControl() : ReactivePowerControl(nullptr) {}
  ~ReactivePowerControl() override;
  explicit PROTOBUF_CONSTEXPR ReactivePowerControl(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ReactivePowerControl(const ReactivePowerControl& from);
  ReactivePowerControl(ReactivePowerControl&& from) noexcept
    : ReactivePowerControl() {
    *this = ::std::move(from);
  }

  inline ReactivePowerControl& operator=(const ReactivePowerControl& from) {
    CopyFrom(from);
    return *this;
  }
  inline ReactivePowerControl& operator=(ReactivePowerControl&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ReactivePowerControl& default_instance() {
    return *internal_default_instance();
  }
  static inline const ReactivePowerControl* internal_default_instance() {
    return reinterpret_cast<const ReactivePowerControl*>(
               &_ReactivePowerControl_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(ReactivePowerControl& a, ReactivePowerControl& b) {
    a.Swap(&b);
  }
  inline void Swap(ReactivePowerControl* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ReactivePowerControl* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ReactivePowerControl* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ReactivePowerControl>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ReactivePowerControl& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ReactivePowerControl& from) {
    ReactivePowerControl::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ReactivePowerControl* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "generationmodule.ReactivePowerControl";
  }
  protected:
  explicit ReactivePowerControl(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDroopSetpointFieldNumber = 1,
    kPowerFactorSetpointFieldNumber = 2,
    kReactivePowerControlModeFieldNumber = 3,
    kReactivePowerSetpointFieldNumber = 4,
    kVoltageSetpointFieldNumber = 5,
  };
  // .generationmodule.DroopParameter droopSetpoint = 1;
  bool has_droopsetpoint() const;
  private:
  bool _internal_has_droopsetpoint() const;

  public:
  void clear_droopsetpoint() ;
  const ::generationmodule::DroopParameter& droopsetpoint() const;
  PROTOBUF_NODISCARD ::generationmodule::DroopParameter* release_droopsetpoint();
  ::generationmodule::DroopParameter* mutable_droopsetpoint();
  void set_allocated_droopsetpoint(::generationmodule::DroopParameter* droopsetpoint);
  private:
  const ::generationmodule::DroopParameter& _internal_droopsetpoint() const;
  ::generationmodule::DroopParameter* _internal_mutable_droopsetpoint();
  public:
  void unsafe_arena_set_allocated_droopsetpoint(
      ::generationmodule::DroopParameter* droopsetpoint);
  ::generationmodule::DroopParameter* unsafe_arena_release_droopsetpoint();
  // .google.protobuf.FloatValue powerFactorSetpoint = 2;
  bool has_powerfactorsetpoint() const;
  private:
  bool _internal_has_powerfactorsetpoint() const;

  public:
  void clear_powerfactorsetpoint() ;
  const ::PROTOBUF_NAMESPACE_ID::FloatValue& powerfactorsetpoint() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::FloatValue* release_powerfactorsetpoint();
  ::PROTOBUF_NAMESPACE_ID::FloatValue* mutable_powerfactorsetpoint();
  void set_allocated_powerfactorsetpoint(::PROTOBUF_NAMESPACE_ID::FloatValue* powerfactorsetpoint);
  private:
  const ::PROTOBUF_NAMESPACE_ID::FloatValue& _internal_powerfactorsetpoint() const;
  ::PROTOBUF_NAMESPACE_ID::FloatValue* _internal_mutable_powerfactorsetpoint();
  public:
  void unsafe_arena_set_allocated_powerfactorsetpoint(
      ::PROTOBUF_NAMESPACE_ID::FloatValue* powerfactorsetpoint);
  ::PROTOBUF_NAMESPACE_ID::FloatValue* unsafe_arena_release_powerfactorsetpoint();
  // .commonmodule.Optional_ReactivePowerControlKind reactivePowerControlMode = 3;
  bool has_reactivepowercontrolmode() const;
  private:
  bool _internal_has_reactivepowercontrolmode() const;

  public:
  void clear_reactivepowercontrolmode() ;
  const ::commonmodule::Optional_ReactivePowerControlKind& reactivepowercontrolmode() const;
  PROTOBUF_NODISCARD ::commonmodule::Optional_ReactivePowerControlKind* release_reactivepowercontrolmode();
  ::commonmodule::Optional_ReactivePowerControlKind* mutable_reactivepowercontrolmode();
  void set_allocated_reactivepowercontrolmode(::commonmodule::Optional_ReactivePowerControlKind* reactivepowercontrolmode);
  private:
  const ::commonmodule::Optional_ReactivePowerControlKind& _internal_reactivepowercontrolmode() const;
  ::commonmodule::Optional_ReactivePowerControlKind* _internal_mutable_reactivepowercontrolmode();
  public:
  void unsafe_arena_set_allocated_reactivepowercontrolmode(
      ::commonmodule::Optional_ReactivePowerControlKind* reactivepowercontrolmode);
  ::commonmodule::Optional_ReactivePowerControlKind* unsafe_arena_release_reactivepowercontrolmode();
  // .google.protobuf.FloatValue reactivePowerSetpoint = 4;
  bool has_reactivepowersetpoint() const;
  private:
  bool _internal_has_reactivepowersetpoint() const;

  public:
  void clear_reactivepowersetpoint() ;
  const ::PROTOBUF_NAMESPACE_ID::FloatValue& reactivepowersetpoint() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::FloatValue* release_reactivepowersetpoint();
  ::PROTOBUF_NAMESPACE_ID::FloatValue* mutable_reactivepowersetpoint();
  void set_allocated_reactivepowersetpoint(::PROTOBUF_NAMESPACE_ID::FloatValue* reactivepowersetpoint);
  private:
  const ::PROTOBUF_NAMESPACE_ID::FloatValue& _internal_reactivepowersetpoint() const;
  ::PROTOBUF_NAMESPACE_ID::FloatValue* _internal_mutable_reactivepowersetpoint();
  public:
  void unsafe_arena_set_allocated_reactivepowersetpoint(
      ::PROTOBUF_NAMESPACE_ID::FloatValue* reactivepowersetpoint);
  ::PROTOBUF_NAMESPACE_ID::FloatValue* unsafe_arena_release_reactivepowersetpoint();
  // .google.protobuf.FloatValue voltageSetpoint = 5;
  bool has_voltagesetpoint() const;
  private:
  bool _internal_has_voltagesetpoint() const;

  public:
  void clear_voltagesetpoint() ;
  const ::PROTOBUF_NAMESPACE_ID::FloatValue& voltagesetpoint() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::FloatValue* release_voltagesetpoint();
  ::PROTOBUF_NAMESPACE_ID::FloatValue* mutable_voltagesetpoint();
  void set_allocated_voltagesetpoint(::PROTOBUF_NAMESPACE_ID::FloatValue* voltagesetpoint);
  private:
  const ::PROTOBUF_NAMESPACE_ID::FloatValue& _internal_voltagesetpoint() const;
  ::PROTOBUF_NAMESPACE_ID::FloatValue* _internal_mutable_voltagesetpoint();
  public:
  void unsafe_arena_set_allocated_voltagesetpoint(
      ::PROTOBUF_NAMESPACE_ID::FloatValue* voltagesetpoint);
  ::PROTOBUF_NAMESPACE_ID::FloatValue* unsafe_arena_release_voltagesetpoint();
  // @@protoc_insertion_point(class_scope:generationmodule.ReactivePowerControl)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::generationmodule::DroopParameter* droopsetpoint_;
    ::PROTOBUF_NAMESPACE_ID::FloatValue* powerfactorsetpoint_;
    ::commonmodule::Optional_ReactivePowerControlKind* reactivepowercontrolmode_;
    ::PROTOBUF_NAMESPACE_ID::FloatValue* reactivepowersetpoint_;
    ::PROTOBUF_NAMESPACE_ID::FloatValue* voltagesetpoint_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_generationmodule_2fgenerationmodule_2eproto;
};// -------------------------------------------------------------------

class GenerationDiscreteControl final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:generationmodule.GenerationDiscreteControl) */ {
 public:
  inline GenerationDiscreteControl() : GenerationDiscreteControl(nullptr) {}
  ~GenerationDiscreteControl() override;
  explicit PROTOBUF_CONSTEXPR GenerationDiscreteControl(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GenerationDiscreteControl(const GenerationDiscreteControl& from);
  GenerationDiscreteControl(GenerationDiscreteControl&& from) noexcept
    : GenerationDiscreteControl() {
    *this = ::std::move(from);
  }

  inline GenerationDiscreteControl& operator=(const GenerationDiscreteControl& from) {
    CopyFrom(from);
    return *this;
  }
  inline GenerationDiscreteControl& operator=(GenerationDiscreteControl&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GenerationDiscreteControl& default_instance() {
    return *internal_default_instance();
  }
  static inline const GenerationDiscreteControl* internal_default_instance() {
    return reinterpret_cast<const GenerationDiscreteControl*>(
               &_GenerationDiscreteControl_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(GenerationDiscreteControl& a, GenerationDiscreteControl& b) {
    a.Swap(&b);
  }
  inline void Swap(GenerationDiscreteControl* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GenerationDiscreteControl* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GenerationDiscreteControl* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GenerationDiscreteControl>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GenerationDiscreteControl& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GenerationDiscreteControl& from) {
    GenerationDiscreteControl::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GenerationDiscreteControl* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "generationmodule.GenerationDiscreteControl";
  }
  protected:
  explicit GenerationDiscreteControl(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kControlValueFieldNumber = 1,
    kCheckFieldNumber = 2,
    kReactivePowerControlFieldNumber = 3,
    kRealPowerControlFieldNumber = 4,
  };
  // .commonmodule.ControlValue controlValue = 1 [(.uml.option_parent_message) = true];
  bool has_controlvalue() const;
  private:
  bool _internal_has_controlvalue() const;

  public:
  void clear_controlvalue() ;
  const ::commonmodule::ControlValue& controlvalue() const;
  PROTOBUF_NODISCARD ::commonmodule::ControlValue* release_controlvalue();
  ::commonmodule::ControlValue* mutable_controlvalue();
  void set_allocated_controlvalue(::commonmodule::ControlValue* controlvalue);
  private:
  const ::commonmodule::ControlValue& _internal_controlvalue() const;
  ::commonmodule::ControlValue* _internal_mutable_controlvalue();
  public:
  void unsafe_arena_set_allocated_controlvalue(
      ::commonmodule::ControlValue* controlvalue);
  ::commonmodule::ControlValue* unsafe_arena_release_controlvalue();
  // .commonmodule.CheckConditions check = 2;
  bool has_check() const;
  private:
  bool _internal_has_check() const;

  public:
  void clear_check() ;
  const ::commonmodule::CheckConditions& check() const;
  PROTOBUF_NODISCARD ::commonmodule::CheckConditions* release_check();
  ::commonmodule::CheckConditions* mutable_check();
  void set_allocated_check(::commonmodule::CheckConditions* check);
  private:
  const ::commonmodule::CheckConditions& _internal_check() const;
  ::commonmodule::CheckConditions* _internal_mutable_check();
  public:
  void unsafe_arena_set_allocated_check(
      ::commonmodule::CheckConditions* check);
  ::commonmodule::CheckConditions* unsafe_arena_release_check();
  // .generationmodule.ReactivePowerControl ReactivePowerControl = 3;
  bool has_reactivepowercontrol() const;
  private:
  bool _internal_has_reactivepowercontrol() const;

  public:
  void clear_reactivepowercontrol() ;
  const ::generationmodule::ReactivePowerControl& reactivepowercontrol() const;
  PROTOBUF_NODISCARD ::generationmodule::ReactivePowerControl* release_reactivepowercontrol();
  ::generationmodule::ReactivePowerControl* mutable_reactivepowercontrol();
  void set_allocated_reactivepowercontrol(::generationmodule::ReactivePowerControl* reactivepowercontrol);
  private:
  const ::generationmodule::ReactivePowerControl& _internal_reactivepowercontrol() const;
  ::generationmodule::ReactivePowerControl* _internal_mutable_reactivepowercontrol();
  public:
  void unsafe_arena_set_allocated_reactivepowercontrol(
      ::generationmodule::ReactivePowerControl* reactivepowercontrol);
  ::generationmodule::ReactivePowerControl* unsafe_arena_release_reactivepowercontrol();
  // .generationmodule.RealPowerControl RealPowerControl = 4;
  bool has_realpowercontrol() const;
  private:
  bool _internal_has_realpowercontrol() const;

  public:
  void clear_realpowercontrol() ;
  const ::generationmodule::RealPowerControl& realpowercontrol() const;
  PROTOBUF_NODISCARD ::generationmodule::RealPowerControl* release_realpowercontrol();
  ::generationmodule::RealPowerControl* mutable_realpowercontrol();
  void set_allocated_realpowercontrol(::generationmodule::RealPowerControl* realpowercontrol);
  private:
  const ::generationmodule::RealPowerControl& _internal_realpowercontrol() const;
  ::generationmodule::RealPowerControl* _internal_mutable_realpowercontrol();
  public:
  void unsafe_arena_set_allocated_realpowercontrol(
      ::generationmodule::RealPowerControl* realpowercontrol);
  ::generationmodule::RealPowerControl* unsafe_arena_release_realpowercontrol();
  // @@protoc_insertion_point(class_scope:generationmodule.GenerationDiscreteControl)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::commonmodule::ControlValue* controlvalue_;
    ::commonmodule::CheckConditions* check_;
    ::generationmodule::ReactivePowerControl* reactivepowercontrol_;
    ::generationmodule::RealPowerControl* realpowercontrol_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_generationmodule_2fgenerationmodule_2eproto;
};// -------------------------------------------------------------------

class GenerationDiscreteControlProfile final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:generationmodule.GenerationDiscreteControlProfile) */ {
 public:
  inline GenerationDiscreteControlProfile() : GenerationDiscreteControlProfile(nullptr) {}
  ~GenerationDiscreteControlProfile() override;
  explicit PROTOBUF_CONSTEXPR GenerationDiscreteControlProfile(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GenerationDiscreteControlProfile(const GenerationDiscreteControlProfile& from);
  GenerationDiscreteControlProfile(GenerationDiscreteControlProfile&& from) noexcept
    : GenerationDiscreteControlProfile() {
    *this = ::std::move(from);
  }

  inline GenerationDiscreteControlProfile& operator=(const GenerationDiscreteControlProfile& from) {
    CopyFrom(from);
    return *this;
  }
  inline GenerationDiscreteControlProfile& operator=(GenerationDiscreteControlProfile&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GenerationDiscreteControlProfile& default_instance() {
    return *internal_default_instance();
  }
  static inline const GenerationDiscreteControlProfile* internal_default_instance() {
    return reinterpret_cast<const GenerationDiscreteControlProfile*>(
               &_GenerationDiscreteControlProfile_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(GenerationDiscreteControlProfile& a, GenerationDiscreteControlProfile& b) {
    a.Swap(&b);
  }
  inline void Swap(GenerationDiscreteControlProfile* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GenerationDiscreteControlProfile* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GenerationDiscreteControlProfile* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GenerationDiscreteControlProfile>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GenerationDiscreteControlProfile& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GenerationDiscreteControlProfile& from) {
    GenerationDiscreteControlProfile::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GenerationDiscreteControlProfile* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "generationmodule.GenerationDiscreteControlProfile";
  }
  protected:
  explicit GenerationDiscreteControlProfile(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kControlMessageInfoFieldNumber = 1,
    kGeneratingUnitFieldNumber = 2,
    kGenerationDiscreteControlFieldNumber = 3,
  };
  // .commonmodule.ControlMessageInfo controlMessageInfo = 1 [(.uml.option_parent_message) = true];
  bool has_controlmessageinfo() const;
  private:
  bool _internal_has_controlmessageinfo() const;

  public:
  void clear_controlmessageinfo() ;
  const ::commonmodule::ControlMessageInfo& controlmessageinfo() const;
  PROTOBUF_NODISCARD ::commonmodule::ControlMessageInfo* release_controlmessageinfo();
  ::commonmodule::ControlMessageInfo* mutable_controlmessageinfo();
  void set_allocated_controlmessageinfo(::commonmodule::ControlMessageInfo* controlmessageinfo);
  private:
  const ::commonmodule::ControlMessageInfo& _internal_controlmessageinfo() const;
  ::commonmodule::ControlMessageInfo* _internal_mutable_controlmessageinfo();
  public:
  void unsafe_arena_set_allocated_controlmessageinfo(
      ::commonmodule::ControlMessageInfo* controlmessageinfo);
  ::commonmodule::ControlMessageInfo* unsafe_arena_release_controlmessageinfo();
  // .generationmodule.GeneratingUnit generatingUnit = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  bool has_generatingunit() const;
  private:
  bool _internal_has_generatingunit() const;

  public:
  void clear_generatingunit() ;
  const ::generationmodule::GeneratingUnit& generatingunit() const;
  PROTOBUF_NODISCARD ::generationmodule::GeneratingUnit* release_generatingunit();
  ::generationmodule::GeneratingUnit* mutable_generatingunit();
  void set_allocated_generatingunit(::generationmodule::GeneratingUnit* generatingunit);
  private:
  const ::generationmodule::GeneratingUnit& _internal_generatingunit() const;
  ::generationmodule::GeneratingUnit* _internal_mutable_generatingunit();
  public:
  void unsafe_arena_set_allocated_generatingunit(
      ::generationmodule::GeneratingUnit* generatingunit);
  ::generationmodule::GeneratingUnit* unsafe_arena_release_generatingunit();
  // .generationmodule.GenerationDiscreteControl generationDiscreteControl = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  bool has_generationdiscretecontrol() const;
  private:
  bool _internal_has_generationdiscretecontrol() const;

  public:
  void clear_generationdiscretecontrol() ;
  const ::generationmodule::GenerationDiscreteControl& generationdiscretecontrol() const;
  PROTOBUF_NODISCARD ::generationmodule::GenerationDiscreteControl* release_generationdiscretecontrol();
  ::generationmodule::GenerationDiscreteControl* mutable_generationdiscretecontrol();
  void set_allocated_generationdiscretecontrol(::generationmodule::GenerationDiscreteControl* generationdiscretecontrol);
  private:
  const ::generationmodule::GenerationDiscreteControl& _internal_generationdiscretecontrol() const;
  ::generationmodule::GenerationDiscreteControl* _internal_mutable_generationdiscretecontrol();
  public:
  void unsafe_arena_set_allocated_generationdiscretecontrol(
      ::generationmodule::GenerationDiscreteControl* generationdiscretecontrol);
  ::generationmodule::GenerationDiscreteControl* unsafe_arena_release_generationdiscretecontrol();
  // @@protoc_insertion_point(class_scope:generationmodule.GenerationDiscreteControlProfile)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::commonmodule::ControlMessageInfo* controlmessageinfo_;
    ::generationmodule::GeneratingUnit* generatingunit_;
    ::generationmodule::GenerationDiscreteControl* generationdiscretecontrol_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_generationmodule_2fgenerationmodule_2eproto;
};// -------------------------------------------------------------------

class GenerationReading final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:generationmodule.GenerationReading) */ {
 public:
  inline GenerationReading() : GenerationReading(nullptr) {}
  ~GenerationReading() override;
  explicit PROTOBUF_CONSTEXPR GenerationReading(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GenerationReading(const GenerationReading& from);
  GenerationReading(GenerationReading&& from) noexcept
    : GenerationReading() {
    *this = ::std::move(from);
  }

  inline GenerationReading& operator=(const GenerationReading& from) {
    CopyFrom(from);
    return *this;
  }
  inline GenerationReading& operator=(GenerationReading&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GenerationReading& default_instance() {
    return *internal_default_instance();
  }
  static inline const GenerationReading* internal_default_instance() {
    return reinterpret_cast<const GenerationReading*>(
               &_GenerationReading_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(GenerationReading& a, GenerationReading& b) {
    a.Swap(&b);
  }
  inline void Swap(GenerationReading* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GenerationReading* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GenerationReading* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GenerationReading>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GenerationReading& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GenerationReading& from) {
    GenerationReading::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GenerationReading* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "generationmodule.GenerationReading";
  }
  protected:
  explicit GenerationReading(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kConductingEquipmentTerminalReadingFieldNumber = 1,
    kPhaseMMTNFieldNumber = 2,
    kReadingMMTRFieldNumber = 3,
    kReadingMMXUFieldNumber = 4,
  };
  // .commonmodule.ConductingEquipmentTerminalReading conductingEquipmentTerminalReading = 1 [(.uml.option_parent_message) = true];
  bool has_conductingequipmentterminalreading() const;
  private:
  bool _internal_has_conductingequipmentterminalreading() const;

  public:
  void clear_conductingequipmentterminalreading() ;
  const ::commonmodule::ConductingEquipmentTerminalReading& conductingequipmentterminalreading() const;
  PROTOBUF_NODISCARD ::commonmodule::ConductingEquipmentTerminalReading* release_conductingequipmentterminalreading();
  ::commonmodule::ConductingEquipmentTerminalReading* mutable_conductingequipmentterminalreading();
  void set_allocated_conductingequipmentterminalreading(::commonmodule::ConductingEquipmentTerminalReading* conductingequipmentterminalreading);
  private:
  const ::commonmodule::ConductingEquipmentTerminalReading& _internal_conductingequipmentterminalreading() const;
  ::commonmodule::ConductingEquipmentTerminalReading* _internal_mutable_conductingequipmentterminalreading();
  public:
  void unsafe_arena_set_allocated_conductingequipmentterminalreading(
      ::commonmodule::ConductingEquipmentTerminalReading* conductingequipmentterminalreading);
  ::commonmodule::ConductingEquipmentTerminalReading* unsafe_arena_release_conductingequipmentterminalreading();
  // .commonmodule.PhaseMMTN phaseMMTN = 2;
  bool has_phasemmtn() const;
  private:
  bool _internal_has_phasemmtn() const;

  public:
  void clear_phasemmtn() ;
  const ::commonmodule::PhaseMMTN& phasemmtn() const;
  PROTOBUF_NODISCARD ::commonmodule::PhaseMMTN* release_phasemmtn();
  ::commonmodule::PhaseMMTN* mutable_phasemmtn();
  void set_allocated_phasemmtn(::commonmodule::PhaseMMTN* phasemmtn);
  private:
  const ::commonmodule::PhaseMMTN& _internal_phasemmtn() const;
  ::commonmodule::PhaseMMTN* _internal_mutable_phasemmtn();
  public:
  void unsafe_arena_set_allocated_phasemmtn(
      ::commonmodule::PhaseMMTN* phasemmtn);
  ::commonmodule::PhaseMMTN* unsafe_arena_release_phasemmtn();
  // .commonmodule.ReadingMMTR readingMMTR = 3;
  bool has_readingmmtr() const;
  private:
  bool _internal_has_readingmmtr() const;

  public:
  void clear_readingmmtr() ;
  const ::commonmodule::ReadingMMTR& readingmmtr() const;
  PROTOBUF_NODISCARD ::commonmodule::ReadingMMTR* release_readingmmtr();
  ::commonmodule::ReadingMMTR* mutable_readingmmtr();
  void set_allocated_readingmmtr(::commonmodule::ReadingMMTR* readingmmtr);
  private:
  const ::commonmodule::ReadingMMTR& _internal_readingmmtr() const;
  ::commonmodule::ReadingMMTR* _internal_mutable_readingmmtr();
  public:
  void unsafe_arena_set_allocated_readingmmtr(
      ::commonmodule::ReadingMMTR* readingmmtr);
  ::commonmodule::ReadingMMTR* unsafe_arena_release_readingmmtr();
  // .commonmodule.ReadingMMXU readingMMXU = 4;
  bool has_readingmmxu() const;
  private:
  bool _internal_has_readingmmxu() const;

  public:
  void clear_readingmmxu() ;
  const ::commonmodule::ReadingMMXU& readingmmxu() const;
  PROTOBUF_NODISCARD ::commonmodule::ReadingMMXU* release_readingmmxu();
  ::commonmodule::ReadingMMXU* mutable_readingmmxu();
  void set_allocated_readingmmxu(::commonmodule::ReadingMMXU* readingmmxu);
  private:
  const ::commonmodule::ReadingMMXU& _internal_readingmmxu() const;
  ::commonmodule::ReadingMMXU* _internal_mutable_readingmmxu();
  public:
  void unsafe_arena_set_allocated_readingmmxu(
      ::commonmodule::ReadingMMXU* readingmmxu);
  ::commonmodule::ReadingMMXU* unsafe_arena_release_readingmmxu();
  // @@protoc_insertion_point(class_scope:generationmodule.GenerationReading)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::commonmodule::ConductingEquipmentTerminalReading* conductingequipmentterminalreading_;
    ::commonmodule::PhaseMMTN* phasemmtn_;
    ::commonmodule::ReadingMMTR* readingmmtr_;
    ::commonmodule::ReadingMMXU* readingmmxu_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_generationmodule_2fgenerationmodule_2eproto;
};// -------------------------------------------------------------------

class GenerationReadingProfile final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:generationmodule.GenerationReadingProfile) */ {
 public:
  inline GenerationReadingProfile() : GenerationReadingProfile(nullptr) {}
  ~GenerationReadingProfile() override;
  explicit PROTOBUF_CONSTEXPR GenerationReadingProfile(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GenerationReadingProfile(const GenerationReadingProfile& from);
  GenerationReadingProfile(GenerationReadingProfile&& from) noexcept
    : GenerationReadingProfile() {
    *this = ::std::move(from);
  }

  inline GenerationReadingProfile& operator=(const GenerationReadingProfile& from) {
    CopyFrom(from);
    return *this;
  }
  inline GenerationReadingProfile& operator=(GenerationReadingProfile&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GenerationReadingProfile& default_instance() {
    return *internal_default_instance();
  }
  static inline const GenerationReadingProfile* internal_default_instance() {
    return reinterpret_cast<const GenerationReadingProfile*>(
               &_GenerationReadingProfile_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  friend void swap(GenerationReadingProfile& a, GenerationReadingProfile& b) {
    a.Swap(&b);
  }
  inline void Swap(GenerationReadingProfile* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GenerationReadingProfile* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GenerationReadingProfile* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GenerationReadingProfile>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GenerationReadingProfile& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GenerationReadingProfile& from) {
    GenerationReadingProfile::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GenerationReadingProfile* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "generationmodule.GenerationReadingProfile";
  }
  protected:
  explicit GenerationReadingProfile(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kReadingMessageInfoFieldNumber = 1,
    kGeneratingUnitFieldNumber = 2,
    kGenerationReadingFieldNumber = 3,
  };
  // .commonmodule.ReadingMessageInfo readingMessageInfo = 1 [(.uml.option_parent_message) = true];
  bool has_readingmessageinfo() const;
  private:
  bool _internal_has_readingmessageinfo() const;

  public:
  void clear_readingmessageinfo() ;
  const ::commonmodule::ReadingMessageInfo& readingmessageinfo() const;
  PROTOBUF_NODISCARD ::commonmodule::ReadingMessageInfo* release_readingmessageinfo();
  ::commonmodule::ReadingMessageInfo* mutable_readingmessageinfo();
  void set_allocated_readingmessageinfo(::commonmodule::ReadingMessageInfo* readingmessageinfo);
  private:
  const ::commonmodule::ReadingMessageInfo& _internal_readingmessageinfo() const;
  ::commonmodule::ReadingMessageInfo* _internal_mutable_readingmessageinfo();
  public:
  void unsafe_arena_set_allocated_readingmessageinfo(
      ::commonmodule::ReadingMessageInfo* readingmessageinfo);
  ::commonmodule::ReadingMessageInfo* unsafe_arena_release_readingmessageinfo();
  // .generationmodule.GeneratingUnit generatingUnit = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  bool has_generatingunit() const;
  private:
  bool _internal_has_generatingunit() const;

  public:
  void clear_generatingunit() ;
  const ::generationmodule::GeneratingUnit& generatingunit() const;
  PROTOBUF_NODISCARD ::generationmodule::GeneratingUnit* release_generatingunit();
  ::generationmodule::GeneratingUnit* mutable_generatingunit();
  void set_allocated_generatingunit(::generationmodule::GeneratingUnit* generatingunit);
  private:
  const ::generationmodule::GeneratingUnit& _internal_generatingunit() const;
  ::generationmodule::GeneratingUnit* _internal_mutable_generatingunit();
  public:
  void unsafe_arena_set_allocated_generatingunit(
      ::generationmodule::GeneratingUnit* generatingunit);
  ::generationmodule::GeneratingUnit* unsafe_arena_release_generatingunit();
  // .generationmodule.GenerationReading generationReading = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  bool has_generationreading() const;
  private:
  bool _internal_has_generationreading() const;

  public:
  void clear_generationreading() ;
  const ::generationmodule::GenerationReading& generationreading() const;
  PROTOBUF_NODISCARD ::generationmodule::GenerationReading* release_generationreading();
  ::generationmodule::GenerationReading* mutable_generationreading();
  void set_allocated_generationreading(::generationmodule::GenerationReading* generationreading);
  private:
  const ::generationmodule::GenerationReading& _internal_generationreading() const;
  ::generationmodule::GenerationReading* _internal_mutable_generationreading();
  public:
  void unsafe_arena_set_allocated_generationreading(
      ::generationmodule::GenerationReading* generationreading);
  ::generationmodule::GenerationReading* unsafe_arena_release_generationreading();
  // @@protoc_insertion_point(class_scope:generationmodule.GenerationReadingProfile)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::commonmodule::ReadingMessageInfo* readingmessageinfo_;
    ::generationmodule::GeneratingUnit* generatingunit_;
    ::generationmodule::GenerationReading* generationreading_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_generationmodule_2fgenerationmodule_2eproto;
};// -------------------------------------------------------------------

class GenerationPointStatus final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:generationmodule.GenerationPointStatus) */ {
 public:
  inline GenerationPointStatus() : GenerationPointStatus(nullptr) {}
  ~GenerationPointStatus() override;
  explicit PROTOBUF_CONSTEXPR GenerationPointStatus(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GenerationPointStatus(const GenerationPointStatus& from);
  GenerationPointStatus(GenerationPointStatus&& from) noexcept
    : GenerationPointStatus() {
    *this = ::std::move(from);
  }

  inline GenerationPointStatus& operator=(const GenerationPointStatus& from) {
    CopyFrom(from);
    return *this;
  }
  inline GenerationPointStatus& operator=(GenerationPointStatus&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GenerationPointStatus& default_instance() {
    return *internal_default_instance();
  }
  static inline const GenerationPointStatus* internal_default_instance() {
    return reinterpret_cast<const GenerationPointStatus*>(
               &_GenerationPointStatus_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  friend void swap(GenerationPointStatus& a, GenerationPointStatus& b) {
    a.Swap(&b);
  }
  inline void Swap(GenerationPointStatus* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GenerationPointStatus* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GenerationPointStatus* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GenerationPointStatus>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GenerationPointStatus& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GenerationPointStatus& from) {
    GenerationPointStatus::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GenerationPointStatus* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "generationmodule.GenerationPointStatus";
  }
  protected:
  explicit GenerationPointStatus(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBlackStartEnabledFieldNumber = 1,
    kFrequencySetPointEnabledFieldNumber = 2,
    kPctHzDroopFieldNumber = 3,
    kPctVDroopFieldNumber = 4,
    kRampRatesFieldNumber = 5,
    kReactivePwrSetPointEnabledFieldNumber = 6,
    kRealPwrSetPointEnabledFieldNumber = 7,
    kStateFieldNumber = 8,
    kSyncBackToGridFieldNumber = 9,
    kTransToIslndOnGridLossEnabledFieldNumber = 10,
    kVoltageSetPointEnabledFieldNumber = 11,
    kEnterServiceOperationFieldNumber = 12,
    kHzWOperationFieldNumber = 13,
    kLimitWOperationFieldNumber = 14,
    kPFOperationFieldNumber = 15,
    kTmHzTripOperationFieldNumber = 16,
    kTmVoltTripOperationFieldNumber = 17,
    kVArOperationFieldNumber = 18,
    kVoltVarOperationFieldNumber = 19,
    kVoltWOperationFieldNumber = 20,
    kWVarOperationFieldNumber = 21,
  };
  // .commonmodule.StatusSPS blackStartEnabled = 1;
  bool has_blackstartenabled() const;
  private:
  bool _internal_has_blackstartenabled() const;

  public:
  void clear_blackstartenabled() ;
  const ::commonmodule::StatusSPS& blackstartenabled() const;
  PROTOBUF_NODISCARD ::commonmodule::StatusSPS* release_blackstartenabled();
  ::commonmodule::StatusSPS* mutable_blackstartenabled();
  void set_allocated_blackstartenabled(::commonmodule::StatusSPS* blackstartenabled);
  private:
  const ::commonmodule::StatusSPS& _internal_blackstartenabled() const;
  ::commonmodule::StatusSPS* _internal_mutable_blackstartenabled();
  public:
  void unsafe_arena_set_allocated_blackstartenabled(
      ::commonmodule::StatusSPS* blackstartenabled);
  ::commonmodule::StatusSPS* unsafe_arena_release_blackstartenabled();
  // .commonmodule.StatusSPS frequencySetPointEnabled = 2;
  bool has_frequencysetpointenabled() const;
  private:
  bool _internal_has_frequencysetpointenabled() const;

  public:
  void clear_frequencysetpointenabled() ;
  const ::commonmodule::StatusSPS& frequencysetpointenabled() const;
  PROTOBUF_NODISCARD ::commonmodule::StatusSPS* release_frequencysetpointenabled();
  ::commonmodule::StatusSPS* mutable_frequencysetpointenabled();
  void set_allocated_frequencysetpointenabled(::commonmodule::StatusSPS* frequencysetpointenabled);
  private:
  const ::commonmodule::StatusSPS& _internal_frequencysetpointenabled() const;
  ::commonmodule::StatusSPS* _internal_mutable_frequencysetpointenabled();
  public:
  void unsafe_arena_set_allocated_frequencysetpointenabled(
      ::commonmodule::StatusSPS* frequencysetpointenabled);
  ::commonmodule::StatusSPS* unsafe_arena_release_frequencysetpointenabled();
  // .google.protobuf.FloatValue pctHzDroop = 3;
  bool has_pcthzdroop() const;
  private:
  bool _internal_has_pcthzdroop() const;

  public:
  void clear_pcthzdroop() ;
  const ::PROTOBUF_NAMESPACE_ID::FloatValue& pcthzdroop() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::FloatValue* release_pcthzdroop();
  ::PROTOBUF_NAMESPACE_ID::FloatValue* mutable_pcthzdroop();
  void set_allocated_pcthzdroop(::PROTOBUF_NAMESPACE_ID::FloatValue* pcthzdroop);
  private:
  const ::PROTOBUF_NAMESPACE_ID::FloatValue& _internal_pcthzdroop() const;
  ::PROTOBUF_NAMESPACE_ID::FloatValue* _internal_mutable_pcthzdroop();
  public:
  void unsafe_arena_set_allocated_pcthzdroop(
      ::PROTOBUF_NAMESPACE_ID::FloatValue* pcthzdroop);
  ::PROTOBUF_NAMESPACE_ID::FloatValue* unsafe_arena_release_pcthzdroop();
  // .google.protobuf.FloatValue pctVDroop = 4;
  bool has_pctvdroop() const;
  private:
  bool _internal_has_pctvdroop() const;

  public:
  void clear_pctvdroop() ;
  const ::PROTOBUF_NAMESPACE_ID::FloatValue& pctvdroop() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::FloatValue* release_pctvdroop();
  ::PROTOBUF_NAMESPACE_ID::FloatValue* mutable_pctvdroop();
  void set_allocated_pctvdroop(::PROTOBUF_NAMESPACE_ID::FloatValue* pctvdroop);
  private:
  const ::PROTOBUF_NAMESPACE_ID::FloatValue& _internal_pctvdroop() const;
  ::PROTOBUF_NAMESPACE_ID::FloatValue* _internal_mutable_pctvdroop();
  public:
  void unsafe_arena_set_allocated_pctvdroop(
      ::PROTOBUF_NAMESPACE_ID::FloatValue* pctvdroop);
  ::PROTOBUF_NAMESPACE_ID::FloatValue* unsafe_arena_release_pctvdroop();
  // .commonmodule.RampRate rampRates = 5;
  bool has_ramprates() const;
  private:
  bool _internal_has_ramprates() const;

  public:
  void clear_ramprates() ;
  const ::commonmodule::RampRate& ramprates() const;
  PROTOBUF_NODISCARD ::commonmodule::RampRate* release_ramprates();
  ::commonmodule::RampRate* mutable_ramprates();
  void set_allocated_ramprates(::commonmodule::RampRate* ramprates);
  private:
  const ::commonmodule::RampRate& _internal_ramprates() const;
  ::commonmodule::RampRate* _internal_mutable_ramprates();
  public:
  void unsafe_arena_set_allocated_ramprates(
      ::commonmodule::RampRate* ramprates);
  ::commonmodule::RampRate* unsafe_arena_release_ramprates();
  // .commonmodule.StatusSPS reactivePwrSetPointEnabled = 6;
  bool has_reactivepwrsetpointenabled() const;
  private:
  bool _internal_has_reactivepwrsetpointenabled() const;

  public:
  void clear_reactivepwrsetpointenabled() ;
  const ::commonmodule::StatusSPS& reactivepwrsetpointenabled() const;
  PROTOBUF_NODISCARD ::commonmodule::StatusSPS* release_reactivepwrsetpointenabled();
  ::commonmodule::StatusSPS* mutable_reactivepwrsetpointenabled();
  void set_allocated_reactivepwrsetpointenabled(::commonmodule::StatusSPS* reactivepwrsetpointenabled);
  private:
  const ::commonmodule::StatusSPS& _internal_reactivepwrsetpointenabled() const;
  ::commonmodule::StatusSPS* _internal_mutable_reactivepwrsetpointenabled();
  public:
  void unsafe_arena_set_allocated_reactivepwrsetpointenabled(
      ::commonmodule::StatusSPS* reactivepwrsetpointenabled);
  ::commonmodule::StatusSPS* unsafe_arena_release_reactivepwrsetpointenabled();
  // .commonmodule.StatusSPS realPwrSetPointEnabled = 7;
  bool has_realpwrsetpointenabled() const;
  private:
  bool _internal_has_realpwrsetpointenabled() const;

  public:
  void clear_realpwrsetpointenabled() ;
  const ::commonmodule::StatusSPS& realpwrsetpointenabled() const;
  PROTOBUF_NODISCARD ::commonmodule::StatusSPS* release_realpwrsetpointenabled();
  ::commonmodule::StatusSPS* mutable_realpwrsetpointenabled();
  void set_allocated_realpwrsetpointenabled(::commonmodule::StatusSPS* realpwrsetpointenabled);
  private:
  const ::commonmodule::StatusSPS& _internal_realpwrsetpointenabled() const;
  ::commonmodule::StatusSPS* _internal_mutable_realpwrsetpointenabled();
  public:
  void unsafe_arena_set_allocated_realpwrsetpointenabled(
      ::commonmodule::StatusSPS* realpwrsetpointenabled);
  ::commonmodule::StatusSPS* unsafe_arena_release_realpwrsetpointenabled();
  // .commonmodule.Optional_StateKind state = 8;
  bool has_state() const;
  private:
  bool _internal_has_state() const;

  public:
  void clear_state() ;
  const ::commonmodule::Optional_StateKind& state() const;
  PROTOBUF_NODISCARD ::commonmodule::Optional_StateKind* release_state();
  ::commonmodule::Optional_StateKind* mutable_state();
  void set_allocated_state(::commonmodule::Optional_StateKind* state);
  private:
  const ::commonmodule::Optional_StateKind& _internal_state() const;
  ::commonmodule::Optional_StateKind* _internal_mutable_state();
  public:
  void unsafe_arena_set_allocated_state(
      ::commonmodule::Optional_StateKind* state);
  ::commonmodule::Optional_StateKind* unsafe_arena_release_state();
  // .commonmodule.StatusSPS syncBackToGrid = 9;
  bool has_syncbacktogrid() const;
  private:
  bool _internal_has_syncbacktogrid() const;

  public:
  void clear_syncbacktogrid() ;
  const ::commonmodule::StatusSPS& syncbacktogrid() const;
  PROTOBUF_NODISCARD ::commonmodule::StatusSPS* release_syncbacktogrid();
  ::commonmodule::StatusSPS* mutable_syncbacktogrid();
  void set_allocated_syncbacktogrid(::commonmodule::StatusSPS* syncbacktogrid);
  private:
  const ::commonmodule::StatusSPS& _internal_syncbacktogrid() const;
  ::commonmodule::StatusSPS* _internal_mutable_syncbacktogrid();
  public:
  void unsafe_arena_set_allocated_syncbacktogrid(
      ::commonmodule::StatusSPS* syncbacktogrid);
  ::commonmodule::StatusSPS* unsafe_arena_release_syncbacktogrid();
  // .commonmodule.StatusSPS transToIslndOnGridLossEnabled = 10;
  bool has_transtoislndongridlossenabled() const;
  private:
  bool _internal_has_transtoislndongridlossenabled() const;

  public:
  void clear_transtoislndongridlossenabled() ;
  const ::commonmodule::StatusSPS& transtoislndongridlossenabled() const;
  PROTOBUF_NODISCARD ::commonmodule::StatusSPS* release_transtoislndongridlossenabled();
  ::commonmodule::StatusSPS* mutable_transtoislndongridlossenabled();
  void set_allocated_transtoislndongridlossenabled(::commonmodule::StatusSPS* transtoislndongridlossenabled);
  private:
  const ::commonmodule::StatusSPS& _internal_transtoislndongridlossenabled() const;
  ::commonmodule::StatusSPS* _internal_mutable_transtoislndongridlossenabled();
  public:
  void unsafe_arena_set_allocated_transtoislndongridlossenabled(
      ::commonmodule::StatusSPS* transtoislndongridlossenabled);
  ::commonmodule::StatusSPS* unsafe_arena_release_transtoislndongridlossenabled();
  // .commonmodule.StatusSPS voltageSetPointEnabled = 11;
  bool has_voltagesetpointenabled() const;
  private:
  bool _internal_has_voltagesetpointenabled() const;

  public:
  void clear_voltagesetpointenabled() ;
  const ::commonmodule::StatusSPS& voltagesetpointenabled() const;
  PROTOBUF_NODISCARD ::commonmodule::StatusSPS* release_voltagesetpointenabled();
  ::commonmodule::StatusSPS* mutable_voltagesetpointenabled();
  void set_allocated_voltagesetpointenabled(::commonmodule::StatusSPS* voltagesetpointenabled);
  private:
  const ::commonmodule::StatusSPS& _internal_voltagesetpointenabled() const;
  ::commonmodule::StatusSPS* _internal_mutable_voltagesetpointenabled();
  public:
  void unsafe_arena_set_allocated_voltagesetpointenabled(
      ::commonmodule::StatusSPS* voltagesetpointenabled);
  ::commonmodule::StatusSPS* unsafe_arena_release_voltagesetpointenabled();
  // .commonmodule.EnterServiceAPC enterServiceOperation = 12;
  bool has_enterserviceoperation() const;
  private:
  bool _internal_has_enterserviceoperation() const;

  public:
  void clear_enterserviceoperation() ;
  const ::commonmodule::EnterServiceAPC& enterserviceoperation() const;
  PROTOBUF_NODISCARD ::commonmodule::EnterServiceAPC* release_enterserviceoperation();
  ::commonmodule::EnterServiceAPC* mutable_enterserviceoperation();
  void set_allocated_enterserviceoperation(::commonmodule::EnterServiceAPC* enterserviceoperation);
  private:
  const ::commonmodule::EnterServiceAPC& _internal_enterserviceoperation() const;
  ::commonmodule::EnterServiceAPC* _internal_mutable_enterserviceoperation();
  public:
  void unsafe_arena_set_allocated_enterserviceoperation(
      ::commonmodule::EnterServiceAPC* enterserviceoperation);
  ::commonmodule::EnterServiceAPC* unsafe_arena_release_enterserviceoperation();
  // .commonmodule.HzWAPC hzWOperation = 13;
  bool has_hzwoperation() const;
  private:
  bool _internal_has_hzwoperation() const;

  public:
  void clear_hzwoperation() ;
  const ::commonmodule::HzWAPC& hzwoperation() const;
  PROTOBUF_NODISCARD ::commonmodule::HzWAPC* release_hzwoperation();
  ::commonmodule::HzWAPC* mutable_hzwoperation();
  void set_allocated_hzwoperation(::commonmodule::HzWAPC* hzwoperation);
  private:
  const ::commonmodule::HzWAPC& _internal_hzwoperation() const;
  ::commonmodule::HzWAPC* _internal_mutable_hzwoperation();
  public:
  void unsafe_arena_set_allocated_hzwoperation(
      ::commonmodule::HzWAPC* hzwoperation);
  ::commonmodule::HzWAPC* unsafe_arena_release_hzwoperation();
  // .commonmodule.LimitWAPC limitWOperation = 14;
  bool has_limitwoperation() const;
  private:
  bool _internal_has_limitwoperation() const;

  public:
  void clear_limitwoperation() ;
  const ::commonmodule::LimitWAPC& limitwoperation() const;
  PROTOBUF_NODISCARD ::commonmodule::LimitWAPC* release_limitwoperation();
  ::commonmodule::LimitWAPC* mutable_limitwoperation();
  void set_allocated_limitwoperation(::commonmodule::LimitWAPC* limitwoperation);
  private:
  const ::commonmodule::LimitWAPC& _internal_limitwoperation() const;
  ::commonmodule::LimitWAPC* _internal_mutable_limitwoperation();
  public:
  void unsafe_arena_set_allocated_limitwoperation(
      ::commonmodule::LimitWAPC* limitwoperation);
  ::commonmodule::LimitWAPC* unsafe_arena_release_limitwoperation();
  // .commonmodule.PFSPC pFOperation = 15;
  bool has_pfoperation() const;
  private:
  bool _internal_has_pfoperation() const;

  public:
  void clear_pfoperation() ;
  const ::commonmodule::PFSPC& pfoperation() const;
  PROTOBUF_NODISCARD ::commonmodule::PFSPC* release_pfoperation();
  ::commonmodule::PFSPC* mutable_pfoperation();
  void set_allocated_pfoperation(::commonmodule::PFSPC* pfoperation);
  private:
  const ::commonmodule::PFSPC& _internal_pfoperation() const;
  ::commonmodule::PFSPC* _internal_mutable_pfoperation();
  public:
  void unsafe_arena_set_allocated_pfoperation(
      ::commonmodule::PFSPC* pfoperation);
  ::commonmodule::PFSPC* unsafe_arena_release_pfoperation();
  // .commonmodule.TmHzCSG tmHzTripOperation = 16;
  bool has_tmhztripoperation() const;
  private:
  bool _internal_has_tmhztripoperation() const;

  public:
  void clear_tmhztripoperation() ;
  const ::commonmodule::TmHzCSG& tmhztripoperation() const;
  PROTOBUF_NODISCARD ::commonmodule::TmHzCSG* release_tmhztripoperation();
  ::commonmodule::TmHzCSG* mutable_tmhztripoperation();
  void set_allocated_tmhztripoperation(::commonmodule::TmHzCSG* tmhztripoperation);
  private:
  const ::commonmodule::TmHzCSG& _internal_tmhztripoperation() const;
  ::commonmodule::TmHzCSG* _internal_mutable_tmhztripoperation();
  public:
  void unsafe_arena_set_allocated_tmhztripoperation(
      ::commonmodule::TmHzCSG* tmhztripoperation);
  ::commonmodule::TmHzCSG* unsafe_arena_release_tmhztripoperation();
  // .commonmodule.TmVoltCSG tmVoltTripOperation = 17;
  bool has_tmvolttripoperation() const;
  private:
  bool _internal_has_tmvolttripoperation() const;

  public:
  void clear_tmvolttripoperation() ;
  const ::commonmodule::TmVoltCSG& tmvolttripoperation() const;
  PROTOBUF_NODISCARD ::commonmodule::TmVoltCSG* release_tmvolttripoperation();
  ::commonmodule::TmVoltCSG* mutable_tmvolttripoperation();
  void set_allocated_tmvolttripoperation(::commonmodule::TmVoltCSG* tmvolttripoperation);
  private:
  const ::commonmodule::TmVoltCSG& _internal_tmvolttripoperation() const;
  ::commonmodule::TmVoltCSG* _internal_mutable_tmvolttripoperation();
  public:
  void unsafe_arena_set_allocated_tmvolttripoperation(
      ::commonmodule::TmVoltCSG* tmvolttripoperation);
  ::commonmodule::TmVoltCSG* unsafe_arena_release_tmvolttripoperation();
  // .commonmodule.VarSPC vArOperation = 18;
  bool has_varoperation() const;
  private:
  bool _internal_has_varoperation() const;

  public:
  void clear_varoperation() ;
  const ::commonmodule::VarSPC& varoperation() const;
  PROTOBUF_NODISCARD ::commonmodule::VarSPC* release_varoperation();
  ::commonmodule::VarSPC* mutable_varoperation();
  void set_allocated_varoperation(::commonmodule::VarSPC* varoperation);
  private:
  const ::commonmodule::VarSPC& _internal_varoperation() const;
  ::commonmodule::VarSPC* _internal_mutable_varoperation();
  public:
  void unsafe_arena_set_allocated_varoperation(
      ::commonmodule::VarSPC* varoperation);
  ::commonmodule::VarSPC* unsafe_arena_release_varoperation();
  // .commonmodule.VoltVarCSG voltVarOperation = 19;
  bool has_voltvaroperation() const;
  private:
  bool _internal_has_voltvaroperation() const;

  public:
  void clear_voltvaroperation() ;
  const ::commonmodule::VoltVarCSG& voltvaroperation() const;
  PROTOBUF_NODISCARD ::commonmodule::VoltVarCSG* release_voltvaroperation();
  ::commonmodule::VoltVarCSG* mutable_voltvaroperation();
  void set_allocated_voltvaroperation(::commonmodule::VoltVarCSG* voltvaroperation);
  private:
  const ::commonmodule::VoltVarCSG& _internal_voltvaroperation() const;
  ::commonmodule::VoltVarCSG* _internal_mutable_voltvaroperation();
  public:
  void unsafe_arena_set_allocated_voltvaroperation(
      ::commonmodule::VoltVarCSG* voltvaroperation);
  ::commonmodule::VoltVarCSG* unsafe_arena_release_voltvaroperation();
  // .commonmodule.VoltWCSG voltWOperation = 20;
  bool has_voltwoperation() const;
  private:
  bool _internal_has_voltwoperation() const;

  public:
  void clear_voltwoperation() ;
  const ::commonmodule::VoltWCSG& voltwoperation() const;
  PROTOBUF_NODISCARD ::commonmodule::VoltWCSG* release_voltwoperation();
  ::commonmodule::VoltWCSG* mutable_voltwoperation();
  void set_allocated_voltwoperation(::commonmodule::VoltWCSG* voltwoperation);
  private:
  const ::commonmodule::VoltWCSG& _internal_voltwoperation() const;
  ::commonmodule::VoltWCSG* _internal_mutable_voltwoperation();
  public:
  void unsafe_arena_set_allocated_voltwoperation(
      ::commonmodule::VoltWCSG* voltwoperation);
  ::commonmodule::VoltWCSG* unsafe_arena_release_voltwoperation();
  // .commonmodule.WVarCSG wVarOperation = 21;
  bool has_wvaroperation() const;
  private:
  bool _internal_has_wvaroperation() const;

  public:
  void clear_wvaroperation() ;
  const ::commonmodule::WVarCSG& wvaroperation() const;
  PROTOBUF_NODISCARD ::commonmodule::WVarCSG* release_wvaroperation();
  ::commonmodule::WVarCSG* mutable_wvaroperation();
  void set_allocated_wvaroperation(::commonmodule::WVarCSG* wvaroperation);
  private:
  const ::commonmodule::WVarCSG& _internal_wvaroperation() const;
  ::commonmodule::WVarCSG* _internal_mutable_wvaroperation();
  public:
  void unsafe_arena_set_allocated_wvaroperation(
      ::commonmodule::WVarCSG* wvaroperation);
  ::commonmodule::WVarCSG* unsafe_arena_release_wvaroperation();
  // @@protoc_insertion_point(class_scope:generationmodule.GenerationPointStatus)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::commonmodule::StatusSPS* blackstartenabled_;
    ::commonmodule::StatusSPS* frequencysetpointenabled_;
    ::PROTOBUF_NAMESPACE_ID::FloatValue* pcthzdroop_;
    ::PROTOBUF_NAMESPACE_ID::FloatValue* pctvdroop_;
    ::commonmodule::RampRate* ramprates_;
    ::commonmodule::StatusSPS* reactivepwrsetpointenabled_;
    ::commonmodule::StatusSPS* realpwrsetpointenabled_;
    ::commonmodule::Optional_StateKind* state_;
    ::commonmodule::StatusSPS* syncbacktogrid_;
    ::commonmodule::StatusSPS* transtoislndongridlossenabled_;
    ::commonmodule::StatusSPS* voltagesetpointenabled_;
    ::commonmodule::EnterServiceAPC* enterserviceoperation_;
    ::commonmodule::HzWAPC* hzwoperation_;
    ::commonmodule::LimitWAPC* limitwoperation_;
    ::commonmodule::PFSPC* pfoperation_;
    ::commonmodule::TmHzCSG* tmhztripoperation_;
    ::commonmodule::TmVoltCSG* tmvolttripoperation_;
    ::commonmodule::VarSPC* varoperation_;
    ::commonmodule::VoltVarCSG* voltvaroperation_;
    ::commonmodule::VoltWCSG* voltwoperation_;
    ::commonmodule::WVarCSG* wvaroperation_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_generationmodule_2fgenerationmodule_2eproto;
};// -------------------------------------------------------------------

class GenerationEventAndStatusZGEN final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:generationmodule.GenerationEventAndStatusZGEN) */ {
 public:
  inline GenerationEventAndStatusZGEN() : GenerationEventAndStatusZGEN(nullptr) {}
  ~GenerationEventAndStatusZGEN() override;
  explicit PROTOBUF_CONSTEXPR GenerationEventAndStatusZGEN(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GenerationEventAndStatusZGEN(const GenerationEventAndStatusZGEN& from);
  GenerationEventAndStatusZGEN(GenerationEventAndStatusZGEN&& from) noexcept
    : GenerationEventAndStatusZGEN() {
    *this = ::std::move(from);
  }

  inline GenerationEventAndStatusZGEN& operator=(const GenerationEventAndStatusZGEN& from) {
    CopyFrom(from);
    return *this;
  }
  inline GenerationEventAndStatusZGEN& operator=(GenerationEventAndStatusZGEN&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GenerationEventAndStatusZGEN& default_instance() {
    return *internal_default_instance();
  }
  static inline const GenerationEventAndStatusZGEN* internal_default_instance() {
    return reinterpret_cast<const GenerationEventAndStatusZGEN*>(
               &_GenerationEventAndStatusZGEN_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  friend void swap(GenerationEventAndStatusZGEN& a, GenerationEventAndStatusZGEN& b) {
    a.Swap(&b);
  }
  inline void Swap(GenerationEventAndStatusZGEN* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GenerationEventAndStatusZGEN* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GenerationEventAndStatusZGEN* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GenerationEventAndStatusZGEN>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GenerationEventAndStatusZGEN& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GenerationEventAndStatusZGEN& from) {
    GenerationEventAndStatusZGEN::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GenerationEventAndStatusZGEN* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "generationmodule.GenerationEventAndStatusZGEN";
  }
  protected:
  explicit GenerationEventAndStatusZGEN(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLogicalNodeForEventAndStatusFieldNumber = 1,
    kAuxPwrStFieldNumber = 2,
    kDynamicTestFieldNumber = 3,
    kEmgStopFieldNumber = 4,
    kGnSynStFieldNumber = 5,
    kPointStatusFieldNumber = 6,
    kAlrmFieldNumber = 7,
    kGridConnectionStateFieldNumber = 8,
    kManAlrmInfoFieldNumber = 9,
    kOperatingStateFieldNumber = 10,
  };
  // .commonmodule.LogicalNodeForEventAndStatus logicalNodeForEventAndStatus = 1 [(.uml.option_parent_message) = true];
  bool has_logicalnodeforeventandstatus() const;
  private:
  bool _internal_has_logicalnodeforeventandstatus() const;

  public:
  void clear_logicalnodeforeventandstatus() ;
  const ::commonmodule::LogicalNodeForEventAndStatus& logicalnodeforeventandstatus() const;
  PROTOBUF_NODISCARD ::commonmodule::LogicalNodeForEventAndStatus* release_logicalnodeforeventandstatus();
  ::commonmodule::LogicalNodeForEventAndStatus* mutable_logicalnodeforeventandstatus();
  void set_allocated_logicalnodeforeventandstatus(::commonmodule::LogicalNodeForEventAndStatus* logicalnodeforeventandstatus);
  private:
  const ::commonmodule::LogicalNodeForEventAndStatus& _internal_logicalnodeforeventandstatus() const;
  ::commonmodule::LogicalNodeForEventAndStatus* _internal_mutable_logicalnodeforeventandstatus();
  public:
  void unsafe_arena_set_allocated_logicalnodeforeventandstatus(
      ::commonmodule::LogicalNodeForEventAndStatus* logicalnodeforeventandstatus);
  ::commonmodule::LogicalNodeForEventAndStatus* unsafe_arena_release_logicalnodeforeventandstatus();
  // .commonmodule.StatusSPS AuxPwrSt = 2;
  bool has_auxpwrst() const;
  private:
  bool _internal_has_auxpwrst() const;

  public:
  void clear_auxpwrst() ;
  const ::commonmodule::StatusSPS& auxpwrst() const;
  PROTOBUF_NODISCARD ::commonmodule::StatusSPS* release_auxpwrst();
  ::commonmodule::StatusSPS* mutable_auxpwrst();
  void set_allocated_auxpwrst(::commonmodule::StatusSPS* auxpwrst);
  private:
  const ::commonmodule::StatusSPS& _internal_auxpwrst() const;
  ::commonmodule::StatusSPS* _internal_mutable_auxpwrst();
  public:
  void unsafe_arena_set_allocated_auxpwrst(
      ::commonmodule::StatusSPS* auxpwrst);
  ::commonmodule::StatusSPS* unsafe_arena_release_auxpwrst();
  // .commonmodule.ENS_DynamicTestKind DynamicTest = 3;
  bool has_dynamictest() const;
  private:
  bool _internal_has_dynamictest() const;

  public:
  void clear_dynamictest() ;
  const ::commonmodule::ENS_DynamicTestKind& dynamictest() const;
  PROTOBUF_NODISCARD ::commonmodule::ENS_DynamicTestKind* release_dynamictest();
  ::commonmodule::ENS_DynamicTestKind* mutable_dynamictest();
  void set_allocated_dynamictest(::commonmodule::ENS_DynamicTestKind* dynamictest);
  private:
  const ::commonmodule::ENS_DynamicTestKind& _internal_dynamictest() const;
  ::commonmodule::ENS_DynamicTestKind* _internal_mutable_dynamictest();
  public:
  void unsafe_arena_set_allocated_dynamictest(
      ::commonmodule::ENS_DynamicTestKind* dynamictest);
  ::commonmodule::ENS_DynamicTestKind* unsafe_arena_release_dynamictest();
  // .commonmodule.StatusSPS EmgStop = 4;
  bool has_emgstop() const;
  private:
  bool _internal_has_emgstop() const;

  public:
  void clear_emgstop() ;
  const ::commonmodule::StatusSPS& emgstop() const;
  PROTOBUF_NODISCARD ::commonmodule::StatusSPS* release_emgstop();
  ::commonmodule::StatusSPS* mutable_emgstop();
  void set_allocated_emgstop(::commonmodule::StatusSPS* emgstop);
  private:
  const ::commonmodule::StatusSPS& _internal_emgstop() const;
  ::commonmodule::StatusSPS* _internal_mutable_emgstop();
  public:
  void unsafe_arena_set_allocated_emgstop(
      ::commonmodule::StatusSPS* emgstop);
  ::commonmodule::StatusSPS* unsafe_arena_release_emgstop();
  // .commonmodule.StatusSPS GnSynSt = 5;
  bool has_gnsynst() const;
  private:
  bool _internal_has_gnsynst() const;

  public:
  void clear_gnsynst() ;
  const ::commonmodule::StatusSPS& gnsynst() const;
  PROTOBUF_NODISCARD ::commonmodule::StatusSPS* release_gnsynst();
  ::commonmodule::StatusSPS* mutable_gnsynst();
  void set_allocated_gnsynst(::commonmodule::StatusSPS* gnsynst);
  private:
  const ::commonmodule::StatusSPS& _internal_gnsynst() const;
  ::commonmodule::StatusSPS* _internal_mutable_gnsynst();
  public:
  void unsafe_arena_set_allocated_gnsynst(
      ::commonmodule::StatusSPS* gnsynst);
  ::commonmodule::StatusSPS* unsafe_arena_release_gnsynst();
  // .generationmodule.GenerationPointStatus PointStatus = 6;
  bool has_pointstatus() const;
  private:
  bool _internal_has_pointstatus() const;

  public:
  void clear_pointstatus() ;
  const ::generationmodule::GenerationPointStatus& pointstatus() const;
  PROTOBUF_NODISCARD ::generationmodule::GenerationPointStatus* release_pointstatus();
  ::generationmodule::GenerationPointStatus* mutable_pointstatus();
  void set_allocated_pointstatus(::generationmodule::GenerationPointStatus* pointstatus);
  private:
  const ::generationmodule::GenerationPointStatus& _internal_pointstatus() const;
  ::generationmodule::GenerationPointStatus* _internal_mutable_pointstatus();
  public:
  void unsafe_arena_set_allocated_pointstatus(
      ::generationmodule::GenerationPointStatus* pointstatus);
  ::generationmodule::GenerationPointStatus* unsafe_arena_release_pointstatus();
  // .commonmodule.Optional_AlrmKind Alrm = 7;
  bool has_alrm() const;
  private:
  bool _internal_has_alrm() const;

  public:
  void clear_alrm() ;
  const ::commonmodule::Optional_AlrmKind& alrm() const;
  PROTOBUF_NODISCARD ::commonmodule::Optional_AlrmKind* release_alrm();
  ::commonmodule::Optional_AlrmKind* mutable_alrm();
  void set_allocated_alrm(::commonmodule::Optional_AlrmKind* alrm);
  private:
  const ::commonmodule::Optional_AlrmKind& _internal_alrm() const;
  ::commonmodule::Optional_AlrmKind* _internal_mutable_alrm();
  public:
  void unsafe_arena_set_allocated_alrm(
      ::commonmodule::Optional_AlrmKind* alrm);
  ::commonmodule::Optional_AlrmKind* unsafe_arena_release_alrm();
  // .commonmodule.Optional_GridConnectionStateKind GridConnectionState = 8;
  bool has_gridconnectionstate() const;
  private:
  bool _internal_has_gridconnectionstate() const;

  public:
  void clear_gridconnectionstate() ;
  const ::commonmodule::Optional_GridConnectionStateKind& gridconnectionstate() const;
  PROTOBUF_NODISCARD ::commonmodule::Optional_GridConnectionStateKind* release_gridconnectionstate();
  ::commonmodule::Optional_GridConnectionStateKind* mutable_gridconnectionstate();
  void set_allocated_gridconnectionstate(::commonmodule::Optional_GridConnectionStateKind* gridconnectionstate);
  private:
  const ::commonmodule::Optional_GridConnectionStateKind& _internal_gridconnectionstate() const;
  ::commonmodule::Optional_GridConnectionStateKind* _internal_mutable_gridconnectionstate();
  public:
  void unsafe_arena_set_allocated_gridconnectionstate(
      ::commonmodule::Optional_GridConnectionStateKind* gridconnectionstate);
  ::commonmodule::Optional_GridConnectionStateKind* unsafe_arena_release_gridconnectionstate();
  // .google.protobuf.StringValue ManAlrmInfo = 9;
  bool has_manalrminfo() const;
  private:
  bool _internal_has_manalrminfo() const;

  public:
  void clear_manalrminfo() ;
  const ::PROTOBUF_NAMESPACE_ID::StringValue& manalrminfo() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::StringValue* release_manalrminfo();
  ::PROTOBUF_NAMESPACE_ID::StringValue* mutable_manalrminfo();
  void set_allocated_manalrminfo(::PROTOBUF_NAMESPACE_ID::StringValue* manalrminfo);
  private:
  const ::PROTOBUF_NAMESPACE_ID::StringValue& _internal_manalrminfo() const;
  ::PROTOBUF_NAMESPACE_ID::StringValue* _internal_mutable_manalrminfo();
  public:
  void unsafe_arena_set_allocated_manalrminfo(
      ::PROTOBUF_NAMESPACE_ID::StringValue* manalrminfo);
  ::PROTOBUF_NAMESPACE_ID::StringValue* unsafe_arena_release_manalrminfo();
  // .commonmodule.Optional_OperatingStateKind OperatingState = 10;
  bool has_operatingstate() const;
  private:
  bool _internal_has_operatingstate() const;

  public:
  void clear_operatingstate() ;
  const ::commonmodule::Optional_OperatingStateKind& operatingstate() const;
  PROTOBUF_NODISCARD ::commonmodule::Optional_OperatingStateKind* release_operatingstate();
  ::commonmodule::Optional_OperatingStateKind* mutable_operatingstate();
  void set_allocated_operatingstate(::commonmodule::Optional_OperatingStateKind* operatingstate);
  private:
  const ::commonmodule::Optional_OperatingStateKind& _internal_operatingstate() const;
  ::commonmodule::Optional_OperatingStateKind* _internal_mutable_operatingstate();
  public:
  void unsafe_arena_set_allocated_operatingstate(
      ::commonmodule::Optional_OperatingStateKind* operatingstate);
  ::commonmodule::Optional_OperatingStateKind* unsafe_arena_release_operatingstate();
  // @@protoc_insertion_point(class_scope:generationmodule.GenerationEventAndStatusZGEN)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::commonmodule::LogicalNodeForEventAndStatus* logicalnodeforeventandstatus_;
    ::commonmodule::StatusSPS* auxpwrst_;
    ::commonmodule::ENS_DynamicTestKind* dynamictest_;
    ::commonmodule::StatusSPS* emgstop_;
    ::commonmodule::StatusSPS* gnsynst_;
    ::generationmodule::GenerationPointStatus* pointstatus_;
    ::commonmodule::Optional_AlrmKind* alrm_;
    ::commonmodule::Optional_GridConnectionStateKind* gridconnectionstate_;
    ::PROTOBUF_NAMESPACE_ID::StringValue* manalrminfo_;
    ::commonmodule::Optional_OperatingStateKind* operatingstate_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_generationmodule_2fgenerationmodule_2eproto;
};// -------------------------------------------------------------------

class GenerationEventZGEN final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:generationmodule.GenerationEventZGEN) */ {
 public:
  inline GenerationEventZGEN() : GenerationEventZGEN(nullptr) {}
  ~GenerationEventZGEN() override;
  explicit PROTOBUF_CONSTEXPR GenerationEventZGEN(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GenerationEventZGEN(const GenerationEventZGEN& from);
  GenerationEventZGEN(GenerationEventZGEN&& from) noexcept
    : GenerationEventZGEN() {
    *this = ::std::move(from);
  }

  inline GenerationEventZGEN& operator=(const GenerationEventZGEN& from) {
    CopyFrom(from);
    return *this;
  }
  inline GenerationEventZGEN& operator=(GenerationEventZGEN&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GenerationEventZGEN& default_instance() {
    return *internal_default_instance();
  }
  static inline const GenerationEventZGEN* internal_default_instance() {
    return reinterpret_cast<const GenerationEventZGEN*>(
               &_GenerationEventZGEN_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  friend void swap(GenerationEventZGEN& a, GenerationEventZGEN& b) {
    a.Swap(&b);
  }
  inline void Swap(GenerationEventZGEN* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GenerationEventZGEN* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GenerationEventZGEN* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GenerationEventZGEN>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GenerationEventZGEN& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GenerationEventZGEN& from) {
    GenerationEventZGEN::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GenerationEventZGEN* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "generationmodule.GenerationEventZGEN";
  }
  protected:
  explicit GenerationEventZGEN(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGenerationEventAndStatusZGENFieldNumber = 1,
  };
  // .generationmodule.GenerationEventAndStatusZGEN generationEventAndStatusZGEN = 1 [(.uml.option_parent_message) = true];
  bool has_generationeventandstatuszgen() const;
  private:
  bool _internal_has_generationeventandstatuszgen() const;

  public:
  void clear_generationeventandstatuszgen() ;
  const ::generationmodule::GenerationEventAndStatusZGEN& generationeventandstatuszgen() const;
  PROTOBUF_NODISCARD ::generationmodule::GenerationEventAndStatusZGEN* release_generationeventandstatuszgen();
  ::generationmodule::GenerationEventAndStatusZGEN* mutable_generationeventandstatuszgen();
  void set_allocated_generationeventandstatuszgen(::generationmodule::GenerationEventAndStatusZGEN* generationeventandstatuszgen);
  private:
  const ::generationmodule::GenerationEventAndStatusZGEN& _internal_generationeventandstatuszgen() const;
  ::generationmodule::GenerationEventAndStatusZGEN* _internal_mutable_generationeventandstatuszgen();
  public:
  void unsafe_arena_set_allocated_generationeventandstatuszgen(
      ::generationmodule::GenerationEventAndStatusZGEN* generationeventandstatuszgen);
  ::generationmodule::GenerationEventAndStatusZGEN* unsafe_arena_release_generationeventandstatuszgen();
  // @@protoc_insertion_point(class_scope:generationmodule.GenerationEventZGEN)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::generationmodule::GenerationEventAndStatusZGEN* generationeventandstatuszgen_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_generationmodule_2fgenerationmodule_2eproto;
};// -------------------------------------------------------------------

class GenerationEvent final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:generationmodule.GenerationEvent) */ {
 public:
  inline GenerationEvent() : GenerationEvent(nullptr) {}
  ~GenerationEvent() override;
  explicit PROTOBUF_CONSTEXPR GenerationEvent(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GenerationEvent(const GenerationEvent& from);
  GenerationEvent(GenerationEvent&& from) noexcept
    : GenerationEvent() {
    *this = ::std::move(from);
  }

  inline GenerationEvent& operator=(const GenerationEvent& from) {
    CopyFrom(from);
    return *this;
  }
  inline GenerationEvent& operator=(GenerationEvent&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GenerationEvent& default_instance() {
    return *internal_default_instance();
  }
  static inline const GenerationEvent* internal_default_instance() {
    return reinterpret_cast<const GenerationEvent*>(
               &_GenerationEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  friend void swap(GenerationEvent& a, GenerationEvent& b) {
    a.Swap(&b);
  }
  inline void Swap(GenerationEvent* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GenerationEvent* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GenerationEvent* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GenerationEvent>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GenerationEvent& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GenerationEvent& from) {
    GenerationEvent::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GenerationEvent* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "generationmodule.GenerationEvent";
  }
  protected:
  explicit GenerationEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEventValueFieldNumber = 1,
    kGenerationEventZGENFieldNumber = 2,
  };
  // .commonmodule.EventValue eventValue = 1 [(.uml.option_parent_message) = true];
  bool has_eventvalue() const;
  private:
  bool _internal_has_eventvalue() const;

  public:
  void clear_eventvalue() ;
  const ::commonmodule::EventValue& eventvalue() const;
  PROTOBUF_NODISCARD ::commonmodule::EventValue* release_eventvalue();
  ::commonmodule::EventValue* mutable_eventvalue();
  void set_allocated_eventvalue(::commonmodule::EventValue* eventvalue);
  private:
  const ::commonmodule::EventValue& _internal_eventvalue() const;
  ::commonmodule::EventValue* _internal_mutable_eventvalue();
  public:
  void unsafe_arena_set_allocated_eventvalue(
      ::commonmodule::EventValue* eventvalue);
  ::commonmodule::EventValue* unsafe_arena_release_eventvalue();
  // .generationmodule.GenerationEventZGEN generationEventZGEN = 2;
  bool has_generationeventzgen() const;
  private:
  bool _internal_has_generationeventzgen() const;

  public:
  void clear_generationeventzgen() ;
  const ::generationmodule::GenerationEventZGEN& generationeventzgen() const;
  PROTOBUF_NODISCARD ::generationmodule::GenerationEventZGEN* release_generationeventzgen();
  ::generationmodule::GenerationEventZGEN* mutable_generationeventzgen();
  void set_allocated_generationeventzgen(::generationmodule::GenerationEventZGEN* generationeventzgen);
  private:
  const ::generationmodule::GenerationEventZGEN& _internal_generationeventzgen() const;
  ::generationmodule::GenerationEventZGEN* _internal_mutable_generationeventzgen();
  public:
  void unsafe_arena_set_allocated_generationeventzgen(
      ::generationmodule::GenerationEventZGEN* generationeventzgen);
  ::generationmodule::GenerationEventZGEN* unsafe_arena_release_generationeventzgen();
  // @@protoc_insertion_point(class_scope:generationmodule.GenerationEvent)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::commonmodule::EventValue* eventvalue_;
    ::generationmodule::GenerationEventZGEN* generationeventzgen_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_generationmodule_2fgenerationmodule_2eproto;
};// -------------------------------------------------------------------

class GenerationEventProfile final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:generationmodule.GenerationEventProfile) */ {
 public:
  inline GenerationEventProfile() : GenerationEventProfile(nullptr) {}
  ~GenerationEventProfile() override;
  explicit PROTOBUF_CONSTEXPR GenerationEventProfile(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GenerationEventProfile(const GenerationEventProfile& from);
  GenerationEventProfile(GenerationEventProfile&& from) noexcept
    : GenerationEventProfile() {
    *this = ::std::move(from);
  }

  inline GenerationEventProfile& operator=(const GenerationEventProfile& from) {
    CopyFrom(from);
    return *this;
  }
  inline GenerationEventProfile& operator=(GenerationEventProfile&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GenerationEventProfile& default_instance() {
    return *internal_default_instance();
  }
  static inline const GenerationEventProfile* internal_default_instance() {
    return reinterpret_cast<const GenerationEventProfile*>(
               &_GenerationEventProfile_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  friend void swap(GenerationEventProfile& a, GenerationEventProfile& b) {
    a.Swap(&b);
  }
  inline void Swap(GenerationEventProfile* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GenerationEventProfile* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GenerationEventProfile* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GenerationEventProfile>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GenerationEventProfile& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GenerationEventProfile& from) {
    GenerationEventProfile::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GenerationEventProfile* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "generationmodule.GenerationEventProfile";
  }
  protected:
  explicit GenerationEventProfile(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEventMessageInfoFieldNumber = 1,
    kGeneratingUnitFieldNumber = 2,
    kGenerationEventFieldNumber = 3,
  };
  // .commonmodule.EventMessageInfo eventMessageInfo = 1 [(.uml.option_parent_message) = true];
  bool has_eventmessageinfo() const;
  private:
  bool _internal_has_eventmessageinfo() const;

  public:
  void clear_eventmessageinfo() ;
  const ::commonmodule::EventMessageInfo& eventmessageinfo() const;
  PROTOBUF_NODISCARD ::commonmodule::EventMessageInfo* release_eventmessageinfo();
  ::commonmodule::EventMessageInfo* mutable_eventmessageinfo();
  void set_allocated_eventmessageinfo(::commonmodule::EventMessageInfo* eventmessageinfo);
  private:
  const ::commonmodule::EventMessageInfo& _internal_eventmessageinfo() const;
  ::commonmodule::EventMessageInfo* _internal_mutable_eventmessageinfo();
  public:
  void unsafe_arena_set_allocated_eventmessageinfo(
      ::commonmodule::EventMessageInfo* eventmessageinfo);
  ::commonmodule::EventMessageInfo* unsafe_arena_release_eventmessageinfo();
  // .generationmodule.GeneratingUnit generatingUnit = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  bool has_generatingunit() const;
  private:
  bool _internal_has_generatingunit() const;

  public:
  void clear_generatingunit() ;
  const ::generationmodule::GeneratingUnit& generatingunit() const;
  PROTOBUF_NODISCARD ::generationmodule::GeneratingUnit* release_generatingunit();
  ::generationmodule::GeneratingUnit* mutable_generatingunit();
  void set_allocated_generatingunit(::generationmodule::GeneratingUnit* generatingunit);
  private:
  const ::generationmodule::GeneratingUnit& _internal_generatingunit() const;
  ::generationmodule::GeneratingUnit* _internal_mutable_generatingunit();
  public:
  void unsafe_arena_set_allocated_generatingunit(
      ::generationmodule::GeneratingUnit* generatingunit);
  ::generationmodule::GeneratingUnit* unsafe_arena_release_generatingunit();
  // .generationmodule.GenerationEvent generationEvent = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  bool has_generationevent() const;
  private:
  bool _internal_has_generationevent() const;

  public:
  void clear_generationevent() ;
  const ::generationmodule::GenerationEvent& generationevent() const;
  PROTOBUF_NODISCARD ::generationmodule::GenerationEvent* release_generationevent();
  ::generationmodule::GenerationEvent* mutable_generationevent();
  void set_allocated_generationevent(::generationmodule::GenerationEvent* generationevent);
  private:
  const ::generationmodule::GenerationEvent& _internal_generationevent() const;
  ::generationmodule::GenerationEvent* _internal_mutable_generationevent();
  public:
  void unsafe_arena_set_allocated_generationevent(
      ::generationmodule::GenerationEvent* generationevent);
  ::generationmodule::GenerationEvent* unsafe_arena_release_generationevent();
  // @@protoc_insertion_point(class_scope:generationmodule.GenerationEventProfile)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::commonmodule::EventMessageInfo* eventmessageinfo_;
    ::generationmodule::GeneratingUnit* generatingunit_;
    ::generationmodule::GenerationEvent* generationevent_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_generationmodule_2fgenerationmodule_2eproto;
};// -------------------------------------------------------------------

class GenerationStatusZGEN final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:generationmodule.GenerationStatusZGEN) */ {
 public:
  inline GenerationStatusZGEN() : GenerationStatusZGEN(nullptr) {}
  ~GenerationStatusZGEN() override;
  explicit PROTOBUF_CONSTEXPR GenerationStatusZGEN(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GenerationStatusZGEN(const GenerationStatusZGEN& from);
  GenerationStatusZGEN(GenerationStatusZGEN&& from) noexcept
    : GenerationStatusZGEN() {
    *this = ::std::move(from);
  }

  inline GenerationStatusZGEN& operator=(const GenerationStatusZGEN& from) {
    CopyFrom(from);
    return *this;
  }
  inline GenerationStatusZGEN& operator=(GenerationStatusZGEN&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GenerationStatusZGEN& default_instance() {
    return *internal_default_instance();
  }
  static inline const GenerationStatusZGEN* internal_default_instance() {
    return reinterpret_cast<const GenerationStatusZGEN*>(
               &_GenerationStatusZGEN_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  friend void swap(GenerationStatusZGEN& a, GenerationStatusZGEN& b) {
    a.Swap(&b);
  }
  inline void Swap(GenerationStatusZGEN* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GenerationStatusZGEN* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GenerationStatusZGEN* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GenerationStatusZGEN>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GenerationStatusZGEN& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GenerationStatusZGEN& from) {
    GenerationStatusZGEN::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GenerationStatusZGEN* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "generationmodule.GenerationStatusZGEN";
  }
  protected:
  explicit GenerationStatusZGEN(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGenerationEventAndStatusZGENFieldNumber = 1,
  };
  // .generationmodule.GenerationEventAndStatusZGEN generationEventAndStatusZGEN = 1 [(.uml.option_parent_message) = true];
  bool has_generationeventandstatuszgen() const;
  private:
  bool _internal_has_generationeventandstatuszgen() const;

  public:
  void clear_generationeventandstatuszgen() ;
  const ::generationmodule::GenerationEventAndStatusZGEN& generationeventandstatuszgen() const;
  PROTOBUF_NODISCARD ::generationmodule::GenerationEventAndStatusZGEN* release_generationeventandstatuszgen();
  ::generationmodule::GenerationEventAndStatusZGEN* mutable_generationeventandstatuszgen();
  void set_allocated_generationeventandstatuszgen(::generationmodule::GenerationEventAndStatusZGEN* generationeventandstatuszgen);
  private:
  const ::generationmodule::GenerationEventAndStatusZGEN& _internal_generationeventandstatuszgen() const;
  ::generationmodule::GenerationEventAndStatusZGEN* _internal_mutable_generationeventandstatuszgen();
  public:
  void unsafe_arena_set_allocated_generationeventandstatuszgen(
      ::generationmodule::GenerationEventAndStatusZGEN* generationeventandstatuszgen);
  ::generationmodule::GenerationEventAndStatusZGEN* unsafe_arena_release_generationeventandstatuszgen();
  // @@protoc_insertion_point(class_scope:generationmodule.GenerationStatusZGEN)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::generationmodule::GenerationEventAndStatusZGEN* generationeventandstatuszgen_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_generationmodule_2fgenerationmodule_2eproto;
};// -------------------------------------------------------------------

class GenerationStatus final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:generationmodule.GenerationStatus) */ {
 public:
  inline GenerationStatus() : GenerationStatus(nullptr) {}
  ~GenerationStatus() override;
  explicit PROTOBUF_CONSTEXPR GenerationStatus(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GenerationStatus(const GenerationStatus& from);
  GenerationStatus(GenerationStatus&& from) noexcept
    : GenerationStatus() {
    *this = ::std::move(from);
  }

  inline GenerationStatus& operator=(const GenerationStatus& from) {
    CopyFrom(from);
    return *this;
  }
  inline GenerationStatus& operator=(GenerationStatus&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GenerationStatus& default_instance() {
    return *internal_default_instance();
  }
  static inline const GenerationStatus* internal_default_instance() {
    return reinterpret_cast<const GenerationStatus*>(
               &_GenerationStatus_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  friend void swap(GenerationStatus& a, GenerationStatus& b) {
    a.Swap(&b);
  }
  inline void Swap(GenerationStatus* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GenerationStatus* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GenerationStatus* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GenerationStatus>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GenerationStatus& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GenerationStatus& from) {
    GenerationStatus::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GenerationStatus* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "generationmodule.GenerationStatus";
  }
  protected:
  explicit GenerationStatus(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStatusValueFieldNumber = 1,
    kGenerationStatusZGENFieldNumber = 2,
  };
  // .commonmodule.StatusValue statusValue = 1 [(.uml.option_parent_message) = true];
  bool has_statusvalue() const;
  private:
  bool _internal_has_statusvalue() const;

  public:
  void clear_statusvalue() ;
  const ::commonmodule::StatusValue& statusvalue() const;
  PROTOBUF_NODISCARD ::commonmodule::StatusValue* release_statusvalue();
  ::commonmodule::StatusValue* mutable_statusvalue();
  void set_allocated_statusvalue(::commonmodule::StatusValue* statusvalue);
  private:
  const ::commonmodule::StatusValue& _internal_statusvalue() const;
  ::commonmodule::StatusValue* _internal_mutable_statusvalue();
  public:
  void unsafe_arena_set_allocated_statusvalue(
      ::commonmodule::StatusValue* statusvalue);
  ::commonmodule::StatusValue* unsafe_arena_release_statusvalue();
  // .generationmodule.GenerationStatusZGEN generationStatusZGEN = 2;
  bool has_generationstatuszgen() const;
  private:
  bool _internal_has_generationstatuszgen() const;

  public:
  void clear_generationstatuszgen() ;
  const ::generationmodule::GenerationStatusZGEN& generationstatuszgen() const;
  PROTOBUF_NODISCARD ::generationmodule::GenerationStatusZGEN* release_generationstatuszgen();
  ::generationmodule::GenerationStatusZGEN* mutable_generationstatuszgen();
  void set_allocated_generationstatuszgen(::generationmodule::GenerationStatusZGEN* generationstatuszgen);
  private:
  const ::generationmodule::GenerationStatusZGEN& _internal_generationstatuszgen() const;
  ::generationmodule::GenerationStatusZGEN* _internal_mutable_generationstatuszgen();
  public:
  void unsafe_arena_set_allocated_generationstatuszgen(
      ::generationmodule::GenerationStatusZGEN* generationstatuszgen);
  ::generationmodule::GenerationStatusZGEN* unsafe_arena_release_generationstatuszgen();
  // @@protoc_insertion_point(class_scope:generationmodule.GenerationStatus)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::commonmodule::StatusValue* statusvalue_;
    ::generationmodule::GenerationStatusZGEN* generationstatuszgen_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_generationmodule_2fgenerationmodule_2eproto;
};// -------------------------------------------------------------------

class GenerationStatusProfile final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:generationmodule.GenerationStatusProfile) */ {
 public:
  inline GenerationStatusProfile() : GenerationStatusProfile(nullptr) {}
  ~GenerationStatusProfile() override;
  explicit PROTOBUF_CONSTEXPR GenerationStatusProfile(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GenerationStatusProfile(const GenerationStatusProfile& from);
  GenerationStatusProfile(GenerationStatusProfile&& from) noexcept
    : GenerationStatusProfile() {
    *this = ::std::move(from);
  }

  inline GenerationStatusProfile& operator=(const GenerationStatusProfile& from) {
    CopyFrom(from);
    return *this;
  }
  inline GenerationStatusProfile& operator=(GenerationStatusProfile&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GenerationStatusProfile& default_instance() {
    return *internal_default_instance();
  }
  static inline const GenerationStatusProfile* internal_default_instance() {
    return reinterpret_cast<const GenerationStatusProfile*>(
               &_GenerationStatusProfile_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  friend void swap(GenerationStatusProfile& a, GenerationStatusProfile& b) {
    a.Swap(&b);
  }
  inline void Swap(GenerationStatusProfile* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GenerationStatusProfile* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GenerationStatusProfile* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GenerationStatusProfile>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GenerationStatusProfile& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GenerationStatusProfile& from) {
    GenerationStatusProfile::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GenerationStatusProfile* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "generationmodule.GenerationStatusProfile";
  }
  protected:
  explicit GenerationStatusProfile(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStatusMessageInfoFieldNumber = 1,
    kGeneratingUnitFieldNumber = 2,
    kGenerationStatusFieldNumber = 3,
  };
  // .commonmodule.StatusMessageInfo statusMessageInfo = 1 [(.uml.option_parent_message) = true];
  bool has_statusmessageinfo() const;
  private:
  bool _internal_has_statusmessageinfo() const;

  public:
  void clear_statusmessageinfo() ;
  const ::commonmodule::StatusMessageInfo& statusmessageinfo() const;
  PROTOBUF_NODISCARD ::commonmodule::StatusMessageInfo* release_statusmessageinfo();
  ::commonmodule::StatusMessageInfo* mutable_statusmessageinfo();
  void set_allocated_statusmessageinfo(::commonmodule::StatusMessageInfo* statusmessageinfo);
  private:
  const ::commonmodule::StatusMessageInfo& _internal_statusmessageinfo() const;
  ::commonmodule::StatusMessageInfo* _internal_mutable_statusmessageinfo();
  public:
  void unsafe_arena_set_allocated_statusmessageinfo(
      ::commonmodule::StatusMessageInfo* statusmessageinfo);
  ::commonmodule::StatusMessageInfo* unsafe_arena_release_statusmessageinfo();
  // .generationmodule.GeneratingUnit generatingUnit = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  bool has_generatingunit() const;
  private:
  bool _internal_has_generatingunit() const;

  public:
  void clear_generatingunit() ;
  const ::generationmodule::GeneratingUnit& generatingunit() const;
  PROTOBUF_NODISCARD ::generationmodule::GeneratingUnit* release_generatingunit();
  ::generationmodule::GeneratingUnit* mutable_generatingunit();
  void set_allocated_generatingunit(::generationmodule::GeneratingUnit* generatingunit);
  private:
  const ::generationmodule::GeneratingUnit& _internal_generatingunit() const;
  ::generationmodule::GeneratingUnit* _internal_mutable_generatingunit();
  public:
  void unsafe_arena_set_allocated_generatingunit(
      ::generationmodule::GeneratingUnit* generatingunit);
  ::generationmodule::GeneratingUnit* unsafe_arena_release_generatingunit();
  // .generationmodule.GenerationStatus generationStatus = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  bool has_generationstatus() const;
  private:
  bool _internal_has_generationstatus() const;

  public:
  void clear_generationstatus() ;
  const ::generationmodule::GenerationStatus& generationstatus() const;
  PROTOBUF_NODISCARD ::generationmodule::GenerationStatus* release_generationstatus();
  ::generationmodule::GenerationStatus* mutable_generationstatus();
  void set_allocated_generationstatus(::generationmodule::GenerationStatus* generationstatus);
  private:
  const ::generationmodule::GenerationStatus& _internal_generationstatus() const;
  ::generationmodule::GenerationStatus* _internal_mutable_generationstatus();
  public:
  void unsafe_arena_set_allocated_generationstatus(
      ::generationmodule::GenerationStatus* generationstatus);
  ::generationmodule::GenerationStatus* unsafe_arena_release_generationstatus();
  // @@protoc_insertion_point(class_scope:generationmodule.GenerationStatusProfile)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::commonmodule::StatusMessageInfo* statusmessageinfo_;
    ::generationmodule::GeneratingUnit* generatingunit_;
    ::generationmodule::GenerationStatus* generationstatus_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_generationmodule_2fgenerationmodule_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// GeneratingUnit

// .commonmodule.ConductingEquipment conductingEquipment = 1 [(.uml.option_parent_message) = true];
inline bool GeneratingUnit::_internal_has_conductingequipment() const {
  return this != internal_default_instance() && _impl_.conductingequipment_ != nullptr;
}
inline bool GeneratingUnit::has_conductingequipment() const {
  return _internal_has_conductingequipment();
}
inline const ::commonmodule::ConductingEquipment& GeneratingUnit::_internal_conductingequipment() const {
  const ::commonmodule::ConductingEquipment* p = _impl_.conductingequipment_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::ConductingEquipment&>(
      ::commonmodule::_ConductingEquipment_default_instance_);
}
inline const ::commonmodule::ConductingEquipment& GeneratingUnit::conductingequipment() const {
  // @@protoc_insertion_point(field_get:generationmodule.GeneratingUnit.conductingEquipment)
  return _internal_conductingequipment();
}
inline void GeneratingUnit::unsafe_arena_set_allocated_conductingequipment(
    ::commonmodule::ConductingEquipment* conductingequipment) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.conductingequipment_);
  }
  _impl_.conductingequipment_ = conductingequipment;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GeneratingUnit.conductingEquipment)
}
inline ::commonmodule::ConductingEquipment* GeneratingUnit::release_conductingequipment() {
  
  ::commonmodule::ConductingEquipment* temp = _impl_.conductingequipment_;
  _impl_.conductingequipment_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::commonmodule::ConductingEquipment* GeneratingUnit::unsafe_arena_release_conductingequipment() {
  // @@protoc_insertion_point(field_release:generationmodule.GeneratingUnit.conductingEquipment)
  
  ::commonmodule::ConductingEquipment* temp = _impl_.conductingequipment_;
  _impl_.conductingequipment_ = nullptr;
  return temp;
}
inline ::commonmodule::ConductingEquipment* GeneratingUnit::_internal_mutable_conductingequipment() {
  
  if (_impl_.conductingequipment_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::ConductingEquipment>(GetArenaForAllocation());
    _impl_.conductingequipment_ = p;
  }
  return _impl_.conductingequipment_;
}
inline ::commonmodule::ConductingEquipment* GeneratingUnit::mutable_conductingequipment() {
  ::commonmodule::ConductingEquipment* _msg = _internal_mutable_conductingequipment();
  // @@protoc_insertion_point(field_mutable:generationmodule.GeneratingUnit.conductingEquipment)
  return _msg;
}
inline void GeneratingUnit::set_allocated_conductingequipment(::commonmodule::ConductingEquipment* conductingequipment) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.conductingequipment_);
  }
  if (conductingequipment) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(conductingequipment));
    if (message_arena != submessage_arena) {
      conductingequipment = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, conductingequipment, submessage_arena);
    }

  } else {

  }
  _impl_.conductingequipment_ = conductingequipment;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GeneratingUnit.conductingEquipment)
}

// .commonmodule.ActivePower maxOperatingP = 2;
inline bool GeneratingUnit::_internal_has_maxoperatingp() const {
  return this != internal_default_instance() && _impl_.maxoperatingp_ != nullptr;
}
inline bool GeneratingUnit::has_maxoperatingp() const {
  return _internal_has_maxoperatingp();
}
inline const ::commonmodule::ActivePower& GeneratingUnit::_internal_maxoperatingp() const {
  const ::commonmodule::ActivePower* p = _impl_.maxoperatingp_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::ActivePower&>(
      ::commonmodule::_ActivePower_default_instance_);
}
inline const ::commonmodule::ActivePower& GeneratingUnit::maxoperatingp() const {
  // @@protoc_insertion_point(field_get:generationmodule.GeneratingUnit.maxOperatingP)
  return _internal_maxoperatingp();
}
inline void GeneratingUnit::unsafe_arena_set_allocated_maxoperatingp(
    ::commonmodule::ActivePower* maxoperatingp) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.maxoperatingp_);
  }
  _impl_.maxoperatingp_ = maxoperatingp;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GeneratingUnit.maxOperatingP)
}
inline ::commonmodule::ActivePower* GeneratingUnit::release_maxoperatingp() {
  
  ::commonmodule::ActivePower* temp = _impl_.maxoperatingp_;
  _impl_.maxoperatingp_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::commonmodule::ActivePower* GeneratingUnit::unsafe_arena_release_maxoperatingp() {
  // @@protoc_insertion_point(field_release:generationmodule.GeneratingUnit.maxOperatingP)
  
  ::commonmodule::ActivePower* temp = _impl_.maxoperatingp_;
  _impl_.maxoperatingp_ = nullptr;
  return temp;
}
inline ::commonmodule::ActivePower* GeneratingUnit::_internal_mutable_maxoperatingp() {
  
  if (_impl_.maxoperatingp_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::ActivePower>(GetArenaForAllocation());
    _impl_.maxoperatingp_ = p;
  }
  return _impl_.maxoperatingp_;
}
inline ::commonmodule::ActivePower* GeneratingUnit::mutable_maxoperatingp() {
  ::commonmodule::ActivePower* _msg = _internal_mutable_maxoperatingp();
  // @@protoc_insertion_point(field_mutable:generationmodule.GeneratingUnit.maxOperatingP)
  return _msg;
}
inline void GeneratingUnit::set_allocated_maxoperatingp(::commonmodule::ActivePower* maxoperatingp) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.maxoperatingp_);
  }
  if (maxoperatingp) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(maxoperatingp));
    if (message_arena != submessage_arena) {
      maxoperatingp = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, maxoperatingp, submessage_arena);
    }

  } else {

  }
  _impl_.maxoperatingp_ = maxoperatingp;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GeneratingUnit.maxOperatingP)
}

// -------------------------------------------------------------------

// GenerationCapabilityConfiguration

// .commonmodule.SourceCapabilityConfiguration sourceCapabilityConfiguration = 1 [(.uml.option_parent_message) = true];
inline bool GenerationCapabilityConfiguration::_internal_has_sourcecapabilityconfiguration() const {
  return this != internal_default_instance() && _impl_.sourcecapabilityconfiguration_ != nullptr;
}
inline bool GenerationCapabilityConfiguration::has_sourcecapabilityconfiguration() const {
  return _internal_has_sourcecapabilityconfiguration();
}
inline const ::commonmodule::SourceCapabilityConfiguration& GenerationCapabilityConfiguration::_internal_sourcecapabilityconfiguration() const {
  const ::commonmodule::SourceCapabilityConfiguration* p = _impl_.sourcecapabilityconfiguration_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::SourceCapabilityConfiguration&>(
      ::commonmodule::_SourceCapabilityConfiguration_default_instance_);
}
inline const ::commonmodule::SourceCapabilityConfiguration& GenerationCapabilityConfiguration::sourcecapabilityconfiguration() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationCapabilityConfiguration.sourceCapabilityConfiguration)
  return _internal_sourcecapabilityconfiguration();
}
inline void GenerationCapabilityConfiguration::unsafe_arena_set_allocated_sourcecapabilityconfiguration(
    ::commonmodule::SourceCapabilityConfiguration* sourcecapabilityconfiguration) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.sourcecapabilityconfiguration_);
  }
  _impl_.sourcecapabilityconfiguration_ = sourcecapabilityconfiguration;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationCapabilityConfiguration.sourceCapabilityConfiguration)
}
inline ::commonmodule::SourceCapabilityConfiguration* GenerationCapabilityConfiguration::release_sourcecapabilityconfiguration() {
  
  ::commonmodule::SourceCapabilityConfiguration* temp = _impl_.sourcecapabilityconfiguration_;
  _impl_.sourcecapabilityconfiguration_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::commonmodule::SourceCapabilityConfiguration* GenerationCapabilityConfiguration::unsafe_arena_release_sourcecapabilityconfiguration() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationCapabilityConfiguration.sourceCapabilityConfiguration)
  
  ::commonmodule::SourceCapabilityConfiguration* temp = _impl_.sourcecapabilityconfiguration_;
  _impl_.sourcecapabilityconfiguration_ = nullptr;
  return temp;
}
inline ::commonmodule::SourceCapabilityConfiguration* GenerationCapabilityConfiguration::_internal_mutable_sourcecapabilityconfiguration() {
  
  if (_impl_.sourcecapabilityconfiguration_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::SourceCapabilityConfiguration>(GetArenaForAllocation());
    _impl_.sourcecapabilityconfiguration_ = p;
  }
  return _impl_.sourcecapabilityconfiguration_;
}
inline ::commonmodule::SourceCapabilityConfiguration* GenerationCapabilityConfiguration::mutable_sourcecapabilityconfiguration() {
  ::commonmodule::SourceCapabilityConfiguration* _msg = _internal_mutable_sourcecapabilityconfiguration();
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationCapabilityConfiguration.sourceCapabilityConfiguration)
  return _msg;
}
inline void GenerationCapabilityConfiguration::set_allocated_sourcecapabilityconfiguration(::commonmodule::SourceCapabilityConfiguration* sourcecapabilityconfiguration) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.sourcecapabilityconfiguration_);
  }
  if (sourcecapabilityconfiguration) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(sourcecapabilityconfiguration));
    if (message_arena != submessage_arena) {
      sourcecapabilityconfiguration = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, sourcecapabilityconfiguration, submessage_arena);
    }

  } else {

  }
  _impl_.sourcecapabilityconfiguration_ = sourcecapabilityconfiguration;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationCapabilityConfiguration.sourceCapabilityConfiguration)
}

// -------------------------------------------------------------------

// GenerationCapabilityOverride

// .commonmodule.IdentifiedObject identifiedObject = 1 [(.uml.option_parent_message) = true];
inline bool GenerationCapabilityOverride::_internal_has_identifiedobject() const {
  return this != internal_default_instance() && _impl_.identifiedobject_ != nullptr;
}
inline bool GenerationCapabilityOverride::has_identifiedobject() const {
  return _internal_has_identifiedobject();
}
inline const ::commonmodule::IdentifiedObject& GenerationCapabilityOverride::_internal_identifiedobject() const {
  const ::commonmodule::IdentifiedObject* p = _impl_.identifiedobject_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::IdentifiedObject&>(
      ::commonmodule::_IdentifiedObject_default_instance_);
}
inline const ::commonmodule::IdentifiedObject& GenerationCapabilityOverride::identifiedobject() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationCapabilityOverride.identifiedObject)
  return _internal_identifiedobject();
}
inline void GenerationCapabilityOverride::unsafe_arena_set_allocated_identifiedobject(
    ::commonmodule::IdentifiedObject* identifiedobject) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.identifiedobject_);
  }
  _impl_.identifiedobject_ = identifiedobject;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationCapabilityOverride.identifiedObject)
}
inline ::commonmodule::IdentifiedObject* GenerationCapabilityOverride::release_identifiedobject() {
  
  ::commonmodule::IdentifiedObject* temp = _impl_.identifiedobject_;
  _impl_.identifiedobject_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::commonmodule::IdentifiedObject* GenerationCapabilityOverride::unsafe_arena_release_identifiedobject() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationCapabilityOverride.identifiedObject)
  
  ::commonmodule::IdentifiedObject* temp = _impl_.identifiedobject_;
  _impl_.identifiedobject_ = nullptr;
  return temp;
}
inline ::commonmodule::IdentifiedObject* GenerationCapabilityOverride::_internal_mutable_identifiedobject() {
  
  if (_impl_.identifiedobject_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::IdentifiedObject>(GetArenaForAllocation());
    _impl_.identifiedobject_ = p;
  }
  return _impl_.identifiedobject_;
}
inline ::commonmodule::IdentifiedObject* GenerationCapabilityOverride::mutable_identifiedobject() {
  ::commonmodule::IdentifiedObject* _msg = _internal_mutable_identifiedobject();
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationCapabilityOverride.identifiedObject)
  return _msg;
}
inline void GenerationCapabilityOverride::set_allocated_identifiedobject(::commonmodule::IdentifiedObject* identifiedobject) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.identifiedobject_);
  }
  if (identifiedobject) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(identifiedobject));
    if (message_arena != submessage_arena) {
      identifiedobject = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, identifiedobject, submessage_arena);
    }

  } else {

  }
  _impl_.identifiedobject_ = identifiedobject;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationCapabilityOverride.identifiedObject)
}

// .generationmodule.GenerationCapabilityConfiguration generationCapabilityConfiguration = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
inline bool GenerationCapabilityOverride::_internal_has_generationcapabilityconfiguration() const {
  return this != internal_default_instance() && _impl_.generationcapabilityconfiguration_ != nullptr;
}
inline bool GenerationCapabilityOverride::has_generationcapabilityconfiguration() const {
  return _internal_has_generationcapabilityconfiguration();
}
inline void GenerationCapabilityOverride::clear_generationcapabilityconfiguration() {
  if (GetArenaForAllocation() == nullptr && _impl_.generationcapabilityconfiguration_ != nullptr) {
    delete _impl_.generationcapabilityconfiguration_;
  }
  _impl_.generationcapabilityconfiguration_ = nullptr;
}
inline const ::generationmodule::GenerationCapabilityConfiguration& GenerationCapabilityOverride::_internal_generationcapabilityconfiguration() const {
  const ::generationmodule::GenerationCapabilityConfiguration* p = _impl_.generationcapabilityconfiguration_;
  return p != nullptr ? *p : reinterpret_cast<const ::generationmodule::GenerationCapabilityConfiguration&>(
      ::generationmodule::_GenerationCapabilityConfiguration_default_instance_);
}
inline const ::generationmodule::GenerationCapabilityConfiguration& GenerationCapabilityOverride::generationcapabilityconfiguration() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationCapabilityOverride.generationCapabilityConfiguration)
  return _internal_generationcapabilityconfiguration();
}
inline void GenerationCapabilityOverride::unsafe_arena_set_allocated_generationcapabilityconfiguration(
    ::generationmodule::GenerationCapabilityConfiguration* generationcapabilityconfiguration) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.generationcapabilityconfiguration_);
  }
  _impl_.generationcapabilityconfiguration_ = generationcapabilityconfiguration;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationCapabilityOverride.generationCapabilityConfiguration)
}
inline ::generationmodule::GenerationCapabilityConfiguration* GenerationCapabilityOverride::release_generationcapabilityconfiguration() {
  
  ::generationmodule::GenerationCapabilityConfiguration* temp = _impl_.generationcapabilityconfiguration_;
  _impl_.generationcapabilityconfiguration_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::generationmodule::GenerationCapabilityConfiguration* GenerationCapabilityOverride::unsafe_arena_release_generationcapabilityconfiguration() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationCapabilityOverride.generationCapabilityConfiguration)
  
  ::generationmodule::GenerationCapabilityConfiguration* temp = _impl_.generationcapabilityconfiguration_;
  _impl_.generationcapabilityconfiguration_ = nullptr;
  return temp;
}
inline ::generationmodule::GenerationCapabilityConfiguration* GenerationCapabilityOverride::_internal_mutable_generationcapabilityconfiguration() {
  
  if (_impl_.generationcapabilityconfiguration_ == nullptr) {
    auto* p = CreateMaybeMessage<::generationmodule::GenerationCapabilityConfiguration>(GetArenaForAllocation());
    _impl_.generationcapabilityconfiguration_ = p;
  }
  return _impl_.generationcapabilityconfiguration_;
}
inline ::generationmodule::GenerationCapabilityConfiguration* GenerationCapabilityOverride::mutable_generationcapabilityconfiguration() {
  ::generationmodule::GenerationCapabilityConfiguration* _msg = _internal_mutable_generationcapabilityconfiguration();
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationCapabilityOverride.generationCapabilityConfiguration)
  return _msg;
}
inline void GenerationCapabilityOverride::set_allocated_generationcapabilityconfiguration(::generationmodule::GenerationCapabilityConfiguration* generationcapabilityconfiguration) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.generationcapabilityconfiguration_;
  }
  if (generationcapabilityconfiguration) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(generationcapabilityconfiguration);
    if (message_arena != submessage_arena) {
      generationcapabilityconfiguration = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, generationcapabilityconfiguration, submessage_arena);
    }

  } else {

  }
  _impl_.generationcapabilityconfiguration_ = generationcapabilityconfiguration;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationCapabilityOverride.generationCapabilityConfiguration)
}

// -------------------------------------------------------------------

// GenerationCapabilityOverrideProfile

// .commonmodule.CapabilityMessageInfo capabilityMessageInfo = 1 [(.uml.option_parent_message) = true];
inline bool GenerationCapabilityOverrideProfile::_internal_has_capabilitymessageinfo() const {
  return this != internal_default_instance() && _impl_.capabilitymessageinfo_ != nullptr;
}
inline bool GenerationCapabilityOverrideProfile::has_capabilitymessageinfo() const {
  return _internal_has_capabilitymessageinfo();
}
inline const ::commonmodule::CapabilityMessageInfo& GenerationCapabilityOverrideProfile::_internal_capabilitymessageinfo() const {
  const ::commonmodule::CapabilityMessageInfo* p = _impl_.capabilitymessageinfo_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::CapabilityMessageInfo&>(
      ::commonmodule::_CapabilityMessageInfo_default_instance_);
}
inline const ::commonmodule::CapabilityMessageInfo& GenerationCapabilityOverrideProfile::capabilitymessageinfo() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationCapabilityOverrideProfile.capabilityMessageInfo)
  return _internal_capabilitymessageinfo();
}
inline void GenerationCapabilityOverrideProfile::unsafe_arena_set_allocated_capabilitymessageinfo(
    ::commonmodule::CapabilityMessageInfo* capabilitymessageinfo) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.capabilitymessageinfo_);
  }
  _impl_.capabilitymessageinfo_ = capabilitymessageinfo;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationCapabilityOverrideProfile.capabilityMessageInfo)
}
inline ::commonmodule::CapabilityMessageInfo* GenerationCapabilityOverrideProfile::release_capabilitymessageinfo() {
  
  ::commonmodule::CapabilityMessageInfo* temp = _impl_.capabilitymessageinfo_;
  _impl_.capabilitymessageinfo_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::commonmodule::CapabilityMessageInfo* GenerationCapabilityOverrideProfile::unsafe_arena_release_capabilitymessageinfo() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationCapabilityOverrideProfile.capabilityMessageInfo)
  
  ::commonmodule::CapabilityMessageInfo* temp = _impl_.capabilitymessageinfo_;
  _impl_.capabilitymessageinfo_ = nullptr;
  return temp;
}
inline ::commonmodule::CapabilityMessageInfo* GenerationCapabilityOverrideProfile::_internal_mutable_capabilitymessageinfo() {
  
  if (_impl_.capabilitymessageinfo_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::CapabilityMessageInfo>(GetArenaForAllocation());
    _impl_.capabilitymessageinfo_ = p;
  }
  return _impl_.capabilitymessageinfo_;
}
inline ::commonmodule::CapabilityMessageInfo* GenerationCapabilityOverrideProfile::mutable_capabilitymessageinfo() {
  ::commonmodule::CapabilityMessageInfo* _msg = _internal_mutable_capabilitymessageinfo();
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationCapabilityOverrideProfile.capabilityMessageInfo)
  return _msg;
}
inline void GenerationCapabilityOverrideProfile::set_allocated_capabilitymessageinfo(::commonmodule::CapabilityMessageInfo* capabilitymessageinfo) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.capabilitymessageinfo_);
  }
  if (capabilitymessageinfo) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(capabilitymessageinfo));
    if (message_arena != submessage_arena) {
      capabilitymessageinfo = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, capabilitymessageinfo, submessage_arena);
    }

  } else {

  }
  _impl_.capabilitymessageinfo_ = capabilitymessageinfo;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationCapabilityOverrideProfile.capabilityMessageInfo)
}

// .generationmodule.GenerationCapabilityOverride generationCapabilityOverride = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
inline bool GenerationCapabilityOverrideProfile::_internal_has_generationcapabilityoverride() const {
  return this != internal_default_instance() && _impl_.generationcapabilityoverride_ != nullptr;
}
inline bool GenerationCapabilityOverrideProfile::has_generationcapabilityoverride() const {
  return _internal_has_generationcapabilityoverride();
}
inline void GenerationCapabilityOverrideProfile::clear_generationcapabilityoverride() {
  if (GetArenaForAllocation() == nullptr && _impl_.generationcapabilityoverride_ != nullptr) {
    delete _impl_.generationcapabilityoverride_;
  }
  _impl_.generationcapabilityoverride_ = nullptr;
}
inline const ::generationmodule::GenerationCapabilityOverride& GenerationCapabilityOverrideProfile::_internal_generationcapabilityoverride() const {
  const ::generationmodule::GenerationCapabilityOverride* p = _impl_.generationcapabilityoverride_;
  return p != nullptr ? *p : reinterpret_cast<const ::generationmodule::GenerationCapabilityOverride&>(
      ::generationmodule::_GenerationCapabilityOverride_default_instance_);
}
inline const ::generationmodule::GenerationCapabilityOverride& GenerationCapabilityOverrideProfile::generationcapabilityoverride() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationCapabilityOverrideProfile.generationCapabilityOverride)
  return _internal_generationcapabilityoverride();
}
inline void GenerationCapabilityOverrideProfile::unsafe_arena_set_allocated_generationcapabilityoverride(
    ::generationmodule::GenerationCapabilityOverride* generationcapabilityoverride) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.generationcapabilityoverride_);
  }
  _impl_.generationcapabilityoverride_ = generationcapabilityoverride;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationCapabilityOverrideProfile.generationCapabilityOverride)
}
inline ::generationmodule::GenerationCapabilityOverride* GenerationCapabilityOverrideProfile::release_generationcapabilityoverride() {
  
  ::generationmodule::GenerationCapabilityOverride* temp = _impl_.generationcapabilityoverride_;
  _impl_.generationcapabilityoverride_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::generationmodule::GenerationCapabilityOverride* GenerationCapabilityOverrideProfile::unsafe_arena_release_generationcapabilityoverride() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationCapabilityOverrideProfile.generationCapabilityOverride)
  
  ::generationmodule::GenerationCapabilityOverride* temp = _impl_.generationcapabilityoverride_;
  _impl_.generationcapabilityoverride_ = nullptr;
  return temp;
}
inline ::generationmodule::GenerationCapabilityOverride* GenerationCapabilityOverrideProfile::_internal_mutable_generationcapabilityoverride() {
  
  if (_impl_.generationcapabilityoverride_ == nullptr) {
    auto* p = CreateMaybeMessage<::generationmodule::GenerationCapabilityOverride>(GetArenaForAllocation());
    _impl_.generationcapabilityoverride_ = p;
  }
  return _impl_.generationcapabilityoverride_;
}
inline ::generationmodule::GenerationCapabilityOverride* GenerationCapabilityOverrideProfile::mutable_generationcapabilityoverride() {
  ::generationmodule::GenerationCapabilityOverride* _msg = _internal_mutable_generationcapabilityoverride();
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationCapabilityOverrideProfile.generationCapabilityOverride)
  return _msg;
}
inline void GenerationCapabilityOverrideProfile::set_allocated_generationcapabilityoverride(::generationmodule::GenerationCapabilityOverride* generationcapabilityoverride) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.generationcapabilityoverride_;
  }
  if (generationcapabilityoverride) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(generationcapabilityoverride);
    if (message_arena != submessage_arena) {
      generationcapabilityoverride = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, generationcapabilityoverride, submessage_arena);
    }

  } else {

  }
  _impl_.generationcapabilityoverride_ = generationcapabilityoverride;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationCapabilityOverrideProfile.generationCapabilityOverride)
}

// .generationmodule.GeneratingUnit generatingUnit = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
inline bool GenerationCapabilityOverrideProfile::_internal_has_generatingunit() const {
  return this != internal_default_instance() && _impl_.generatingunit_ != nullptr;
}
inline bool GenerationCapabilityOverrideProfile::has_generatingunit() const {
  return _internal_has_generatingunit();
}
inline void GenerationCapabilityOverrideProfile::clear_generatingunit() {
  if (GetArenaForAllocation() == nullptr && _impl_.generatingunit_ != nullptr) {
    delete _impl_.generatingunit_;
  }
  _impl_.generatingunit_ = nullptr;
}
inline const ::generationmodule::GeneratingUnit& GenerationCapabilityOverrideProfile::_internal_generatingunit() const {
  const ::generationmodule::GeneratingUnit* p = _impl_.generatingunit_;
  return p != nullptr ? *p : reinterpret_cast<const ::generationmodule::GeneratingUnit&>(
      ::generationmodule::_GeneratingUnit_default_instance_);
}
inline const ::generationmodule::GeneratingUnit& GenerationCapabilityOverrideProfile::generatingunit() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationCapabilityOverrideProfile.generatingUnit)
  return _internal_generatingunit();
}
inline void GenerationCapabilityOverrideProfile::unsafe_arena_set_allocated_generatingunit(
    ::generationmodule::GeneratingUnit* generatingunit) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.generatingunit_);
  }
  _impl_.generatingunit_ = generatingunit;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationCapabilityOverrideProfile.generatingUnit)
}
inline ::generationmodule::GeneratingUnit* GenerationCapabilityOverrideProfile::release_generatingunit() {
  
  ::generationmodule::GeneratingUnit* temp = _impl_.generatingunit_;
  _impl_.generatingunit_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::generationmodule::GeneratingUnit* GenerationCapabilityOverrideProfile::unsafe_arena_release_generatingunit() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationCapabilityOverrideProfile.generatingUnit)
  
  ::generationmodule::GeneratingUnit* temp = _impl_.generatingunit_;
  _impl_.generatingunit_ = nullptr;
  return temp;
}
inline ::generationmodule::GeneratingUnit* GenerationCapabilityOverrideProfile::_internal_mutable_generatingunit() {
  
  if (_impl_.generatingunit_ == nullptr) {
    auto* p = CreateMaybeMessage<::generationmodule::GeneratingUnit>(GetArenaForAllocation());
    _impl_.generatingunit_ = p;
  }
  return _impl_.generatingunit_;
}
inline ::generationmodule::GeneratingUnit* GenerationCapabilityOverrideProfile::mutable_generatingunit() {
  ::generationmodule::GeneratingUnit* _msg = _internal_mutable_generatingunit();
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationCapabilityOverrideProfile.generatingUnit)
  return _msg;
}
inline void GenerationCapabilityOverrideProfile::set_allocated_generatingunit(::generationmodule::GeneratingUnit* generatingunit) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.generatingunit_;
  }
  if (generatingunit) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(generatingunit);
    if (message_arena != submessage_arena) {
      generatingunit = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, generatingunit, submessage_arena);
    }

  } else {

  }
  _impl_.generatingunit_ = generatingunit;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationCapabilityOverrideProfile.generatingUnit)
}

// -------------------------------------------------------------------

// GenerationCapabilityRatings

// .commonmodule.SourceCapabilityRatings sourceCapabilityRatings = 1 [(.uml.option_parent_message) = true];
inline bool GenerationCapabilityRatings::_internal_has_sourcecapabilityratings() const {
  return this != internal_default_instance() && _impl_.sourcecapabilityratings_ != nullptr;
}
inline bool GenerationCapabilityRatings::has_sourcecapabilityratings() const {
  return _internal_has_sourcecapabilityratings();
}
inline const ::commonmodule::SourceCapabilityRatings& GenerationCapabilityRatings::_internal_sourcecapabilityratings() const {
  const ::commonmodule::SourceCapabilityRatings* p = _impl_.sourcecapabilityratings_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::SourceCapabilityRatings&>(
      ::commonmodule::_SourceCapabilityRatings_default_instance_);
}
inline const ::commonmodule::SourceCapabilityRatings& GenerationCapabilityRatings::sourcecapabilityratings() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationCapabilityRatings.sourceCapabilityRatings)
  return _internal_sourcecapabilityratings();
}
inline void GenerationCapabilityRatings::unsafe_arena_set_allocated_sourcecapabilityratings(
    ::commonmodule::SourceCapabilityRatings* sourcecapabilityratings) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.sourcecapabilityratings_);
  }
  _impl_.sourcecapabilityratings_ = sourcecapabilityratings;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationCapabilityRatings.sourceCapabilityRatings)
}
inline ::commonmodule::SourceCapabilityRatings* GenerationCapabilityRatings::release_sourcecapabilityratings() {
  
  ::commonmodule::SourceCapabilityRatings* temp = _impl_.sourcecapabilityratings_;
  _impl_.sourcecapabilityratings_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::commonmodule::SourceCapabilityRatings* GenerationCapabilityRatings::unsafe_arena_release_sourcecapabilityratings() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationCapabilityRatings.sourceCapabilityRatings)
  
  ::commonmodule::SourceCapabilityRatings* temp = _impl_.sourcecapabilityratings_;
  _impl_.sourcecapabilityratings_ = nullptr;
  return temp;
}
inline ::commonmodule::SourceCapabilityRatings* GenerationCapabilityRatings::_internal_mutable_sourcecapabilityratings() {
  
  if (_impl_.sourcecapabilityratings_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::SourceCapabilityRatings>(GetArenaForAllocation());
    _impl_.sourcecapabilityratings_ = p;
  }
  return _impl_.sourcecapabilityratings_;
}
inline ::commonmodule::SourceCapabilityRatings* GenerationCapabilityRatings::mutable_sourcecapabilityratings() {
  ::commonmodule::SourceCapabilityRatings* _msg = _internal_mutable_sourcecapabilityratings();
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationCapabilityRatings.sourceCapabilityRatings)
  return _msg;
}
inline void GenerationCapabilityRatings::set_allocated_sourcecapabilityratings(::commonmodule::SourceCapabilityRatings* sourcecapabilityratings) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.sourcecapabilityratings_);
  }
  if (sourcecapabilityratings) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(sourcecapabilityratings));
    if (message_arena != submessage_arena) {
      sourcecapabilityratings = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, sourcecapabilityratings, submessage_arena);
    }

  } else {

  }
  _impl_.sourcecapabilityratings_ = sourcecapabilityratings;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationCapabilityRatings.sourceCapabilityRatings)
}

// -------------------------------------------------------------------

// GenerationCapability

// .commonmodule.NameplateValue nameplateValue = 1 [(.uml.option_parent_message) = true];
inline bool GenerationCapability::_internal_has_nameplatevalue() const {
  return this != internal_default_instance() && _impl_.nameplatevalue_ != nullptr;
}
inline bool GenerationCapability::has_nameplatevalue() const {
  return _internal_has_nameplatevalue();
}
inline const ::commonmodule::NameplateValue& GenerationCapability::_internal_nameplatevalue() const {
  const ::commonmodule::NameplateValue* p = _impl_.nameplatevalue_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::NameplateValue&>(
      ::commonmodule::_NameplateValue_default_instance_);
}
inline const ::commonmodule::NameplateValue& GenerationCapability::nameplatevalue() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationCapability.nameplateValue)
  return _internal_nameplatevalue();
}
inline void GenerationCapability::unsafe_arena_set_allocated_nameplatevalue(
    ::commonmodule::NameplateValue* nameplatevalue) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.nameplatevalue_);
  }
  _impl_.nameplatevalue_ = nameplatevalue;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationCapability.nameplateValue)
}
inline ::commonmodule::NameplateValue* GenerationCapability::release_nameplatevalue() {
  
  ::commonmodule::NameplateValue* temp = _impl_.nameplatevalue_;
  _impl_.nameplatevalue_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::commonmodule::NameplateValue* GenerationCapability::unsafe_arena_release_nameplatevalue() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationCapability.nameplateValue)
  
  ::commonmodule::NameplateValue* temp = _impl_.nameplatevalue_;
  _impl_.nameplatevalue_ = nullptr;
  return temp;
}
inline ::commonmodule::NameplateValue* GenerationCapability::_internal_mutable_nameplatevalue() {
  
  if (_impl_.nameplatevalue_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::NameplateValue>(GetArenaForAllocation());
    _impl_.nameplatevalue_ = p;
  }
  return _impl_.nameplatevalue_;
}
inline ::commonmodule::NameplateValue* GenerationCapability::mutable_nameplatevalue() {
  ::commonmodule::NameplateValue* _msg = _internal_mutable_nameplatevalue();
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationCapability.nameplateValue)
  return _msg;
}
inline void GenerationCapability::set_allocated_nameplatevalue(::commonmodule::NameplateValue* nameplatevalue) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.nameplatevalue_);
  }
  if (nameplatevalue) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(nameplatevalue));
    if (message_arena != submessage_arena) {
      nameplatevalue = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, nameplatevalue, submessage_arena);
    }

  } else {

  }
  _impl_.nameplatevalue_ = nameplatevalue;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationCapability.nameplateValue)
}

// .generationmodule.GenerationCapabilityRatings generationCapabilityRatings = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
inline bool GenerationCapability::_internal_has_generationcapabilityratings() const {
  return this != internal_default_instance() && _impl_.generationcapabilityratings_ != nullptr;
}
inline bool GenerationCapability::has_generationcapabilityratings() const {
  return _internal_has_generationcapabilityratings();
}
inline void GenerationCapability::clear_generationcapabilityratings() {
  if (GetArenaForAllocation() == nullptr && _impl_.generationcapabilityratings_ != nullptr) {
    delete _impl_.generationcapabilityratings_;
  }
  _impl_.generationcapabilityratings_ = nullptr;
}
inline const ::generationmodule::GenerationCapabilityRatings& GenerationCapability::_internal_generationcapabilityratings() const {
  const ::generationmodule::GenerationCapabilityRatings* p = _impl_.generationcapabilityratings_;
  return p != nullptr ? *p : reinterpret_cast<const ::generationmodule::GenerationCapabilityRatings&>(
      ::generationmodule::_GenerationCapabilityRatings_default_instance_);
}
inline const ::generationmodule::GenerationCapabilityRatings& GenerationCapability::generationcapabilityratings() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationCapability.generationCapabilityRatings)
  return _internal_generationcapabilityratings();
}
inline void GenerationCapability::unsafe_arena_set_allocated_generationcapabilityratings(
    ::generationmodule::GenerationCapabilityRatings* generationcapabilityratings) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.generationcapabilityratings_);
  }
  _impl_.generationcapabilityratings_ = generationcapabilityratings;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationCapability.generationCapabilityRatings)
}
inline ::generationmodule::GenerationCapabilityRatings* GenerationCapability::release_generationcapabilityratings() {
  
  ::generationmodule::GenerationCapabilityRatings* temp = _impl_.generationcapabilityratings_;
  _impl_.generationcapabilityratings_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::generationmodule::GenerationCapabilityRatings* GenerationCapability::unsafe_arena_release_generationcapabilityratings() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationCapability.generationCapabilityRatings)
  
  ::generationmodule::GenerationCapabilityRatings* temp = _impl_.generationcapabilityratings_;
  _impl_.generationcapabilityratings_ = nullptr;
  return temp;
}
inline ::generationmodule::GenerationCapabilityRatings* GenerationCapability::_internal_mutable_generationcapabilityratings() {
  
  if (_impl_.generationcapabilityratings_ == nullptr) {
    auto* p = CreateMaybeMessage<::generationmodule::GenerationCapabilityRatings>(GetArenaForAllocation());
    _impl_.generationcapabilityratings_ = p;
  }
  return _impl_.generationcapabilityratings_;
}
inline ::generationmodule::GenerationCapabilityRatings* GenerationCapability::mutable_generationcapabilityratings() {
  ::generationmodule::GenerationCapabilityRatings* _msg = _internal_mutable_generationcapabilityratings();
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationCapability.generationCapabilityRatings)
  return _msg;
}
inline void GenerationCapability::set_allocated_generationcapabilityratings(::generationmodule::GenerationCapabilityRatings* generationcapabilityratings) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.generationcapabilityratings_;
  }
  if (generationcapabilityratings) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(generationcapabilityratings);
    if (message_arena != submessage_arena) {
      generationcapabilityratings = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, generationcapabilityratings, submessage_arena);
    }

  } else {

  }
  _impl_.generationcapabilityratings_ = generationcapabilityratings;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationCapability.generationCapabilityRatings)
}

// .generationmodule.GenerationCapabilityConfiguration generationCapabilityConfiguration = 3;
inline bool GenerationCapability::_internal_has_generationcapabilityconfiguration() const {
  return this != internal_default_instance() && _impl_.generationcapabilityconfiguration_ != nullptr;
}
inline bool GenerationCapability::has_generationcapabilityconfiguration() const {
  return _internal_has_generationcapabilityconfiguration();
}
inline void GenerationCapability::clear_generationcapabilityconfiguration() {
  if (GetArenaForAllocation() == nullptr && _impl_.generationcapabilityconfiguration_ != nullptr) {
    delete _impl_.generationcapabilityconfiguration_;
  }
  _impl_.generationcapabilityconfiguration_ = nullptr;
}
inline const ::generationmodule::GenerationCapabilityConfiguration& GenerationCapability::_internal_generationcapabilityconfiguration() const {
  const ::generationmodule::GenerationCapabilityConfiguration* p = _impl_.generationcapabilityconfiguration_;
  return p != nullptr ? *p : reinterpret_cast<const ::generationmodule::GenerationCapabilityConfiguration&>(
      ::generationmodule::_GenerationCapabilityConfiguration_default_instance_);
}
inline const ::generationmodule::GenerationCapabilityConfiguration& GenerationCapability::generationcapabilityconfiguration() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationCapability.generationCapabilityConfiguration)
  return _internal_generationcapabilityconfiguration();
}
inline void GenerationCapability::unsafe_arena_set_allocated_generationcapabilityconfiguration(
    ::generationmodule::GenerationCapabilityConfiguration* generationcapabilityconfiguration) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.generationcapabilityconfiguration_);
  }
  _impl_.generationcapabilityconfiguration_ = generationcapabilityconfiguration;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationCapability.generationCapabilityConfiguration)
}
inline ::generationmodule::GenerationCapabilityConfiguration* GenerationCapability::release_generationcapabilityconfiguration() {
  
  ::generationmodule::GenerationCapabilityConfiguration* temp = _impl_.generationcapabilityconfiguration_;
  _impl_.generationcapabilityconfiguration_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::generationmodule::GenerationCapabilityConfiguration* GenerationCapability::unsafe_arena_release_generationcapabilityconfiguration() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationCapability.generationCapabilityConfiguration)
  
  ::generationmodule::GenerationCapabilityConfiguration* temp = _impl_.generationcapabilityconfiguration_;
  _impl_.generationcapabilityconfiguration_ = nullptr;
  return temp;
}
inline ::generationmodule::GenerationCapabilityConfiguration* GenerationCapability::_internal_mutable_generationcapabilityconfiguration() {
  
  if (_impl_.generationcapabilityconfiguration_ == nullptr) {
    auto* p = CreateMaybeMessage<::generationmodule::GenerationCapabilityConfiguration>(GetArenaForAllocation());
    _impl_.generationcapabilityconfiguration_ = p;
  }
  return _impl_.generationcapabilityconfiguration_;
}
inline ::generationmodule::GenerationCapabilityConfiguration* GenerationCapability::mutable_generationcapabilityconfiguration() {
  ::generationmodule::GenerationCapabilityConfiguration* _msg = _internal_mutable_generationcapabilityconfiguration();
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationCapability.generationCapabilityConfiguration)
  return _msg;
}
inline void GenerationCapability::set_allocated_generationcapabilityconfiguration(::generationmodule::GenerationCapabilityConfiguration* generationcapabilityconfiguration) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.generationcapabilityconfiguration_;
  }
  if (generationcapabilityconfiguration) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(generationcapabilityconfiguration);
    if (message_arena != submessage_arena) {
      generationcapabilityconfiguration = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, generationcapabilityconfiguration, submessage_arena);
    }

  } else {

  }
  _impl_.generationcapabilityconfiguration_ = generationcapabilityconfiguration;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationCapability.generationCapabilityConfiguration)
}

// -------------------------------------------------------------------

// GenerationCapabilityProfile

// .commonmodule.CapabilityMessageInfo capabilityMessageInfo = 1 [(.uml.option_parent_message) = true];
inline bool GenerationCapabilityProfile::_internal_has_capabilitymessageinfo() const {
  return this != internal_default_instance() && _impl_.capabilitymessageinfo_ != nullptr;
}
inline bool GenerationCapabilityProfile::has_capabilitymessageinfo() const {
  return _internal_has_capabilitymessageinfo();
}
inline const ::commonmodule::CapabilityMessageInfo& GenerationCapabilityProfile::_internal_capabilitymessageinfo() const {
  const ::commonmodule::CapabilityMessageInfo* p = _impl_.capabilitymessageinfo_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::CapabilityMessageInfo&>(
      ::commonmodule::_CapabilityMessageInfo_default_instance_);
}
inline const ::commonmodule::CapabilityMessageInfo& GenerationCapabilityProfile::capabilitymessageinfo() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationCapabilityProfile.capabilityMessageInfo)
  return _internal_capabilitymessageinfo();
}
inline void GenerationCapabilityProfile::unsafe_arena_set_allocated_capabilitymessageinfo(
    ::commonmodule::CapabilityMessageInfo* capabilitymessageinfo) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.capabilitymessageinfo_);
  }
  _impl_.capabilitymessageinfo_ = capabilitymessageinfo;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationCapabilityProfile.capabilityMessageInfo)
}
inline ::commonmodule::CapabilityMessageInfo* GenerationCapabilityProfile::release_capabilitymessageinfo() {
  
  ::commonmodule::CapabilityMessageInfo* temp = _impl_.capabilitymessageinfo_;
  _impl_.capabilitymessageinfo_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::commonmodule::CapabilityMessageInfo* GenerationCapabilityProfile::unsafe_arena_release_capabilitymessageinfo() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationCapabilityProfile.capabilityMessageInfo)
  
  ::commonmodule::CapabilityMessageInfo* temp = _impl_.capabilitymessageinfo_;
  _impl_.capabilitymessageinfo_ = nullptr;
  return temp;
}
inline ::commonmodule::CapabilityMessageInfo* GenerationCapabilityProfile::_internal_mutable_capabilitymessageinfo() {
  
  if (_impl_.capabilitymessageinfo_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::CapabilityMessageInfo>(GetArenaForAllocation());
    _impl_.capabilitymessageinfo_ = p;
  }
  return _impl_.capabilitymessageinfo_;
}
inline ::commonmodule::CapabilityMessageInfo* GenerationCapabilityProfile::mutable_capabilitymessageinfo() {
  ::commonmodule::CapabilityMessageInfo* _msg = _internal_mutable_capabilitymessageinfo();
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationCapabilityProfile.capabilityMessageInfo)
  return _msg;
}
inline void GenerationCapabilityProfile::set_allocated_capabilitymessageinfo(::commonmodule::CapabilityMessageInfo* capabilitymessageinfo) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.capabilitymessageinfo_);
  }
  if (capabilitymessageinfo) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(capabilitymessageinfo));
    if (message_arena != submessage_arena) {
      capabilitymessageinfo = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, capabilitymessageinfo, submessage_arena);
    }

  } else {

  }
  _impl_.capabilitymessageinfo_ = capabilitymessageinfo;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationCapabilityProfile.capabilityMessageInfo)
}

// .generationmodule.GenerationCapability generationCapability = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
inline bool GenerationCapabilityProfile::_internal_has_generationcapability() const {
  return this != internal_default_instance() && _impl_.generationcapability_ != nullptr;
}
inline bool GenerationCapabilityProfile::has_generationcapability() const {
  return _internal_has_generationcapability();
}
inline void GenerationCapabilityProfile::clear_generationcapability() {
  if (GetArenaForAllocation() == nullptr && _impl_.generationcapability_ != nullptr) {
    delete _impl_.generationcapability_;
  }
  _impl_.generationcapability_ = nullptr;
}
inline const ::generationmodule::GenerationCapability& GenerationCapabilityProfile::_internal_generationcapability() const {
  const ::generationmodule::GenerationCapability* p = _impl_.generationcapability_;
  return p != nullptr ? *p : reinterpret_cast<const ::generationmodule::GenerationCapability&>(
      ::generationmodule::_GenerationCapability_default_instance_);
}
inline const ::generationmodule::GenerationCapability& GenerationCapabilityProfile::generationcapability() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationCapabilityProfile.generationCapability)
  return _internal_generationcapability();
}
inline void GenerationCapabilityProfile::unsafe_arena_set_allocated_generationcapability(
    ::generationmodule::GenerationCapability* generationcapability) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.generationcapability_);
  }
  _impl_.generationcapability_ = generationcapability;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationCapabilityProfile.generationCapability)
}
inline ::generationmodule::GenerationCapability* GenerationCapabilityProfile::release_generationcapability() {
  
  ::generationmodule::GenerationCapability* temp = _impl_.generationcapability_;
  _impl_.generationcapability_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::generationmodule::GenerationCapability* GenerationCapabilityProfile::unsafe_arena_release_generationcapability() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationCapabilityProfile.generationCapability)
  
  ::generationmodule::GenerationCapability* temp = _impl_.generationcapability_;
  _impl_.generationcapability_ = nullptr;
  return temp;
}
inline ::generationmodule::GenerationCapability* GenerationCapabilityProfile::_internal_mutable_generationcapability() {
  
  if (_impl_.generationcapability_ == nullptr) {
    auto* p = CreateMaybeMessage<::generationmodule::GenerationCapability>(GetArenaForAllocation());
    _impl_.generationcapability_ = p;
  }
  return _impl_.generationcapability_;
}
inline ::generationmodule::GenerationCapability* GenerationCapabilityProfile::mutable_generationcapability() {
  ::generationmodule::GenerationCapability* _msg = _internal_mutable_generationcapability();
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationCapabilityProfile.generationCapability)
  return _msg;
}
inline void GenerationCapabilityProfile::set_allocated_generationcapability(::generationmodule::GenerationCapability* generationcapability) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.generationcapability_;
  }
  if (generationcapability) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(generationcapability);
    if (message_arena != submessage_arena) {
      generationcapability = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, generationcapability, submessage_arena);
    }

  } else {

  }
  _impl_.generationcapability_ = generationcapability;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationCapabilityProfile.generationCapability)
}

// .generationmodule.GeneratingUnit generatingUnit = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
inline bool GenerationCapabilityProfile::_internal_has_generatingunit() const {
  return this != internal_default_instance() && _impl_.generatingunit_ != nullptr;
}
inline bool GenerationCapabilityProfile::has_generatingunit() const {
  return _internal_has_generatingunit();
}
inline void GenerationCapabilityProfile::clear_generatingunit() {
  if (GetArenaForAllocation() == nullptr && _impl_.generatingunit_ != nullptr) {
    delete _impl_.generatingunit_;
  }
  _impl_.generatingunit_ = nullptr;
}
inline const ::generationmodule::GeneratingUnit& GenerationCapabilityProfile::_internal_generatingunit() const {
  const ::generationmodule::GeneratingUnit* p = _impl_.generatingunit_;
  return p != nullptr ? *p : reinterpret_cast<const ::generationmodule::GeneratingUnit&>(
      ::generationmodule::_GeneratingUnit_default_instance_);
}
inline const ::generationmodule::GeneratingUnit& GenerationCapabilityProfile::generatingunit() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationCapabilityProfile.generatingUnit)
  return _internal_generatingunit();
}
inline void GenerationCapabilityProfile::unsafe_arena_set_allocated_generatingunit(
    ::generationmodule::GeneratingUnit* generatingunit) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.generatingunit_);
  }
  _impl_.generatingunit_ = generatingunit;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationCapabilityProfile.generatingUnit)
}
inline ::generationmodule::GeneratingUnit* GenerationCapabilityProfile::release_generatingunit() {
  
  ::generationmodule::GeneratingUnit* temp = _impl_.generatingunit_;
  _impl_.generatingunit_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::generationmodule::GeneratingUnit* GenerationCapabilityProfile::unsafe_arena_release_generatingunit() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationCapabilityProfile.generatingUnit)
  
  ::generationmodule::GeneratingUnit* temp = _impl_.generatingunit_;
  _impl_.generatingunit_ = nullptr;
  return temp;
}
inline ::generationmodule::GeneratingUnit* GenerationCapabilityProfile::_internal_mutable_generatingunit() {
  
  if (_impl_.generatingunit_ == nullptr) {
    auto* p = CreateMaybeMessage<::generationmodule::GeneratingUnit>(GetArenaForAllocation());
    _impl_.generatingunit_ = p;
  }
  return _impl_.generatingunit_;
}
inline ::generationmodule::GeneratingUnit* GenerationCapabilityProfile::mutable_generatingunit() {
  ::generationmodule::GeneratingUnit* _msg = _internal_mutable_generatingunit();
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationCapabilityProfile.generatingUnit)
  return _msg;
}
inline void GenerationCapabilityProfile::set_allocated_generatingunit(::generationmodule::GeneratingUnit* generatingunit) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.generatingunit_;
  }
  if (generatingunit) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(generatingunit);
    if (message_arena != submessage_arena) {
      generatingunit = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, generatingunit, submessage_arena);
    }

  } else {

  }
  _impl_.generatingunit_ = generatingunit;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationCapabilityProfile.generatingUnit)
}

// -------------------------------------------------------------------

// GenerationPoint

// .commonmodule.ControlSPC blackStartEnabled = 1;
inline bool GenerationPoint::_internal_has_blackstartenabled() const {
  return this != internal_default_instance() && _impl_.blackstartenabled_ != nullptr;
}
inline bool GenerationPoint::has_blackstartenabled() const {
  return _internal_has_blackstartenabled();
}
inline const ::commonmodule::ControlSPC& GenerationPoint::_internal_blackstartenabled() const {
  const ::commonmodule::ControlSPC* p = _impl_.blackstartenabled_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::ControlSPC&>(
      ::commonmodule::_ControlSPC_default_instance_);
}
inline const ::commonmodule::ControlSPC& GenerationPoint::blackstartenabled() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationPoint.blackStartEnabled)
  return _internal_blackstartenabled();
}
inline void GenerationPoint::unsafe_arena_set_allocated_blackstartenabled(
    ::commonmodule::ControlSPC* blackstartenabled) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.blackstartenabled_);
  }
  _impl_.blackstartenabled_ = blackstartenabled;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationPoint.blackStartEnabled)
}
inline ::commonmodule::ControlSPC* GenerationPoint::release_blackstartenabled() {
  
  ::commonmodule::ControlSPC* temp = _impl_.blackstartenabled_;
  _impl_.blackstartenabled_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::commonmodule::ControlSPC* GenerationPoint::unsafe_arena_release_blackstartenabled() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationPoint.blackStartEnabled)
  
  ::commonmodule::ControlSPC* temp = _impl_.blackstartenabled_;
  _impl_.blackstartenabled_ = nullptr;
  return temp;
}
inline ::commonmodule::ControlSPC* GenerationPoint::_internal_mutable_blackstartenabled() {
  
  if (_impl_.blackstartenabled_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::ControlSPC>(GetArenaForAllocation());
    _impl_.blackstartenabled_ = p;
  }
  return _impl_.blackstartenabled_;
}
inline ::commonmodule::ControlSPC* GenerationPoint::mutable_blackstartenabled() {
  ::commonmodule::ControlSPC* _msg = _internal_mutable_blackstartenabled();
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationPoint.blackStartEnabled)
  return _msg;
}
inline void GenerationPoint::set_allocated_blackstartenabled(::commonmodule::ControlSPC* blackstartenabled) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.blackstartenabled_);
  }
  if (blackstartenabled) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(blackstartenabled));
    if (message_arena != submessage_arena) {
      blackstartenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, blackstartenabled, submessage_arena);
    }

  } else {

  }
  _impl_.blackstartenabled_ = blackstartenabled;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationPoint.blackStartEnabled)
}

// .commonmodule.ControlSPC frequencySetPointEnabled = 2;
inline bool GenerationPoint::_internal_has_frequencysetpointenabled() const {
  return this != internal_default_instance() && _impl_.frequencysetpointenabled_ != nullptr;
}
inline bool GenerationPoint::has_frequencysetpointenabled() const {
  return _internal_has_frequencysetpointenabled();
}
inline const ::commonmodule::ControlSPC& GenerationPoint::_internal_frequencysetpointenabled() const {
  const ::commonmodule::ControlSPC* p = _impl_.frequencysetpointenabled_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::ControlSPC&>(
      ::commonmodule::_ControlSPC_default_instance_);
}
inline const ::commonmodule::ControlSPC& GenerationPoint::frequencysetpointenabled() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationPoint.frequencySetPointEnabled)
  return _internal_frequencysetpointenabled();
}
inline void GenerationPoint::unsafe_arena_set_allocated_frequencysetpointenabled(
    ::commonmodule::ControlSPC* frequencysetpointenabled) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.frequencysetpointenabled_);
  }
  _impl_.frequencysetpointenabled_ = frequencysetpointenabled;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationPoint.frequencySetPointEnabled)
}
inline ::commonmodule::ControlSPC* GenerationPoint::release_frequencysetpointenabled() {
  
  ::commonmodule::ControlSPC* temp = _impl_.frequencysetpointenabled_;
  _impl_.frequencysetpointenabled_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::commonmodule::ControlSPC* GenerationPoint::unsafe_arena_release_frequencysetpointenabled() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationPoint.frequencySetPointEnabled)
  
  ::commonmodule::ControlSPC* temp = _impl_.frequencysetpointenabled_;
  _impl_.frequencysetpointenabled_ = nullptr;
  return temp;
}
inline ::commonmodule::ControlSPC* GenerationPoint::_internal_mutable_frequencysetpointenabled() {
  
  if (_impl_.frequencysetpointenabled_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::ControlSPC>(GetArenaForAllocation());
    _impl_.frequencysetpointenabled_ = p;
  }
  return _impl_.frequencysetpointenabled_;
}
inline ::commonmodule::ControlSPC* GenerationPoint::mutable_frequencysetpointenabled() {
  ::commonmodule::ControlSPC* _msg = _internal_mutable_frequencysetpointenabled();
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationPoint.frequencySetPointEnabled)
  return _msg;
}
inline void GenerationPoint::set_allocated_frequencysetpointenabled(::commonmodule::ControlSPC* frequencysetpointenabled) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.frequencysetpointenabled_);
  }
  if (frequencysetpointenabled) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(frequencysetpointenabled));
    if (message_arena != submessage_arena) {
      frequencysetpointenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, frequencysetpointenabled, submessage_arena);
    }

  } else {

  }
  _impl_.frequencysetpointenabled_ = frequencysetpointenabled;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationPoint.frequencySetPointEnabled)
}

// .google.protobuf.FloatValue pctHzDroop = 3;
inline bool GenerationPoint::_internal_has_pcthzdroop() const {
  return this != internal_default_instance() && _impl_.pcthzdroop_ != nullptr;
}
inline bool GenerationPoint::has_pcthzdroop() const {
  return _internal_has_pcthzdroop();
}
inline const ::PROTOBUF_NAMESPACE_ID::FloatValue& GenerationPoint::_internal_pcthzdroop() const {
  const ::PROTOBUF_NAMESPACE_ID::FloatValue* p = _impl_.pcthzdroop_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::FloatValue&>(
      ::PROTOBUF_NAMESPACE_ID::_FloatValue_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::FloatValue& GenerationPoint::pcthzdroop() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationPoint.pctHzDroop)
  return _internal_pcthzdroop();
}
inline void GenerationPoint::unsafe_arena_set_allocated_pcthzdroop(
    ::PROTOBUF_NAMESPACE_ID::FloatValue* pcthzdroop) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.pcthzdroop_);
  }
  _impl_.pcthzdroop_ = pcthzdroop;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationPoint.pctHzDroop)
}
inline ::PROTOBUF_NAMESPACE_ID::FloatValue* GenerationPoint::release_pcthzdroop() {
  
  ::PROTOBUF_NAMESPACE_ID::FloatValue* temp = _impl_.pcthzdroop_;
  _impl_.pcthzdroop_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::FloatValue* GenerationPoint::unsafe_arena_release_pcthzdroop() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationPoint.pctHzDroop)
  
  ::PROTOBUF_NAMESPACE_ID::FloatValue* temp = _impl_.pcthzdroop_;
  _impl_.pcthzdroop_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::FloatValue* GenerationPoint::_internal_mutable_pcthzdroop() {
  
  if (_impl_.pcthzdroop_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::FloatValue>(GetArenaForAllocation());
    _impl_.pcthzdroop_ = p;
  }
  return _impl_.pcthzdroop_;
}
inline ::PROTOBUF_NAMESPACE_ID::FloatValue* GenerationPoint::mutable_pcthzdroop() {
  ::PROTOBUF_NAMESPACE_ID::FloatValue* _msg = _internal_mutable_pcthzdroop();
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationPoint.pctHzDroop)
  return _msg;
}
inline void GenerationPoint::set_allocated_pcthzdroop(::PROTOBUF_NAMESPACE_ID::FloatValue* pcthzdroop) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.pcthzdroop_);
  }
  if (pcthzdroop) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(pcthzdroop));
    if (message_arena != submessage_arena) {
      pcthzdroop = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, pcthzdroop, submessage_arena);
    }

  } else {

  }
  _impl_.pcthzdroop_ = pcthzdroop;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationPoint.pctHzDroop)
}

// .google.protobuf.FloatValue pctVDroop = 4;
inline bool GenerationPoint::_internal_has_pctvdroop() const {
  return this != internal_default_instance() && _impl_.pctvdroop_ != nullptr;
}
inline bool GenerationPoint::has_pctvdroop() const {
  return _internal_has_pctvdroop();
}
inline const ::PROTOBUF_NAMESPACE_ID::FloatValue& GenerationPoint::_internal_pctvdroop() const {
  const ::PROTOBUF_NAMESPACE_ID::FloatValue* p = _impl_.pctvdroop_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::FloatValue&>(
      ::PROTOBUF_NAMESPACE_ID::_FloatValue_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::FloatValue& GenerationPoint::pctvdroop() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationPoint.pctVDroop)
  return _internal_pctvdroop();
}
inline void GenerationPoint::unsafe_arena_set_allocated_pctvdroop(
    ::PROTOBUF_NAMESPACE_ID::FloatValue* pctvdroop) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.pctvdroop_);
  }
  _impl_.pctvdroop_ = pctvdroop;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationPoint.pctVDroop)
}
inline ::PROTOBUF_NAMESPACE_ID::FloatValue* GenerationPoint::release_pctvdroop() {
  
  ::PROTOBUF_NAMESPACE_ID::FloatValue* temp = _impl_.pctvdroop_;
  _impl_.pctvdroop_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::FloatValue* GenerationPoint::unsafe_arena_release_pctvdroop() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationPoint.pctVDroop)
  
  ::PROTOBUF_NAMESPACE_ID::FloatValue* temp = _impl_.pctvdroop_;
  _impl_.pctvdroop_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::FloatValue* GenerationPoint::_internal_mutable_pctvdroop() {
  
  if (_impl_.pctvdroop_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::FloatValue>(GetArenaForAllocation());
    _impl_.pctvdroop_ = p;
  }
  return _impl_.pctvdroop_;
}
inline ::PROTOBUF_NAMESPACE_ID::FloatValue* GenerationPoint::mutable_pctvdroop() {
  ::PROTOBUF_NAMESPACE_ID::FloatValue* _msg = _internal_mutable_pctvdroop();
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationPoint.pctVDroop)
  return _msg;
}
inline void GenerationPoint::set_allocated_pctvdroop(::PROTOBUF_NAMESPACE_ID::FloatValue* pctvdroop) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.pctvdroop_);
  }
  if (pctvdroop) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(pctvdroop));
    if (message_arena != submessage_arena) {
      pctvdroop = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, pctvdroop, submessage_arena);
    }

  } else {

  }
  _impl_.pctvdroop_ = pctvdroop;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationPoint.pctVDroop)
}

// .commonmodule.RampRate rampRates = 5;
inline bool GenerationPoint::_internal_has_ramprates() const {
  return this != internal_default_instance() && _impl_.ramprates_ != nullptr;
}
inline bool GenerationPoint::has_ramprates() const {
  return _internal_has_ramprates();
}
inline const ::commonmodule::RampRate& GenerationPoint::_internal_ramprates() const {
  const ::commonmodule::RampRate* p = _impl_.ramprates_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::RampRate&>(
      ::commonmodule::_RampRate_default_instance_);
}
inline const ::commonmodule::RampRate& GenerationPoint::ramprates() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationPoint.rampRates)
  return _internal_ramprates();
}
inline void GenerationPoint::unsafe_arena_set_allocated_ramprates(
    ::commonmodule::RampRate* ramprates) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.ramprates_);
  }
  _impl_.ramprates_ = ramprates;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationPoint.rampRates)
}
inline ::commonmodule::RampRate* GenerationPoint::release_ramprates() {
  
  ::commonmodule::RampRate* temp = _impl_.ramprates_;
  _impl_.ramprates_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::commonmodule::RampRate* GenerationPoint::unsafe_arena_release_ramprates() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationPoint.rampRates)
  
  ::commonmodule::RampRate* temp = _impl_.ramprates_;
  _impl_.ramprates_ = nullptr;
  return temp;
}
inline ::commonmodule::RampRate* GenerationPoint::_internal_mutable_ramprates() {
  
  if (_impl_.ramprates_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::RampRate>(GetArenaForAllocation());
    _impl_.ramprates_ = p;
  }
  return _impl_.ramprates_;
}
inline ::commonmodule::RampRate* GenerationPoint::mutable_ramprates() {
  ::commonmodule::RampRate* _msg = _internal_mutable_ramprates();
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationPoint.rampRates)
  return _msg;
}
inline void GenerationPoint::set_allocated_ramprates(::commonmodule::RampRate* ramprates) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.ramprates_);
  }
  if (ramprates) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(ramprates));
    if (message_arena != submessage_arena) {
      ramprates = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, ramprates, submessage_arena);
    }

  } else {

  }
  _impl_.ramprates_ = ramprates;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationPoint.rampRates)
}

// .commonmodule.ControlSPC reactivePwrSetPointEnabled = 6;
inline bool GenerationPoint::_internal_has_reactivepwrsetpointenabled() const {
  return this != internal_default_instance() && _impl_.reactivepwrsetpointenabled_ != nullptr;
}
inline bool GenerationPoint::has_reactivepwrsetpointenabled() const {
  return _internal_has_reactivepwrsetpointenabled();
}
inline const ::commonmodule::ControlSPC& GenerationPoint::_internal_reactivepwrsetpointenabled() const {
  const ::commonmodule::ControlSPC* p = _impl_.reactivepwrsetpointenabled_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::ControlSPC&>(
      ::commonmodule::_ControlSPC_default_instance_);
}
inline const ::commonmodule::ControlSPC& GenerationPoint::reactivepwrsetpointenabled() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationPoint.reactivePwrSetPointEnabled)
  return _internal_reactivepwrsetpointenabled();
}
inline void GenerationPoint::unsafe_arena_set_allocated_reactivepwrsetpointenabled(
    ::commonmodule::ControlSPC* reactivepwrsetpointenabled) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.reactivepwrsetpointenabled_);
  }
  _impl_.reactivepwrsetpointenabled_ = reactivepwrsetpointenabled;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationPoint.reactivePwrSetPointEnabled)
}
inline ::commonmodule::ControlSPC* GenerationPoint::release_reactivepwrsetpointenabled() {
  
  ::commonmodule::ControlSPC* temp = _impl_.reactivepwrsetpointenabled_;
  _impl_.reactivepwrsetpointenabled_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::commonmodule::ControlSPC* GenerationPoint::unsafe_arena_release_reactivepwrsetpointenabled() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationPoint.reactivePwrSetPointEnabled)
  
  ::commonmodule::ControlSPC* temp = _impl_.reactivepwrsetpointenabled_;
  _impl_.reactivepwrsetpointenabled_ = nullptr;
  return temp;
}
inline ::commonmodule::ControlSPC* GenerationPoint::_internal_mutable_reactivepwrsetpointenabled() {
  
  if (_impl_.reactivepwrsetpointenabled_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::ControlSPC>(GetArenaForAllocation());
    _impl_.reactivepwrsetpointenabled_ = p;
  }
  return _impl_.reactivepwrsetpointenabled_;
}
inline ::commonmodule::ControlSPC* GenerationPoint::mutable_reactivepwrsetpointenabled() {
  ::commonmodule::ControlSPC* _msg = _internal_mutable_reactivepwrsetpointenabled();
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationPoint.reactivePwrSetPointEnabled)
  return _msg;
}
inline void GenerationPoint::set_allocated_reactivepwrsetpointenabled(::commonmodule::ControlSPC* reactivepwrsetpointenabled) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.reactivepwrsetpointenabled_);
  }
  if (reactivepwrsetpointenabled) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(reactivepwrsetpointenabled));
    if (message_arena != submessage_arena) {
      reactivepwrsetpointenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, reactivepwrsetpointenabled, submessage_arena);
    }

  } else {

  }
  _impl_.reactivepwrsetpointenabled_ = reactivepwrsetpointenabled;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationPoint.reactivePwrSetPointEnabled)
}

// .commonmodule.ControlSPC realPwrSetPointEnabled = 7;
inline bool GenerationPoint::_internal_has_realpwrsetpointenabled() const {
  return this != internal_default_instance() && _impl_.realpwrsetpointenabled_ != nullptr;
}
inline bool GenerationPoint::has_realpwrsetpointenabled() const {
  return _internal_has_realpwrsetpointenabled();
}
inline const ::commonmodule::ControlSPC& GenerationPoint::_internal_realpwrsetpointenabled() const {
  const ::commonmodule::ControlSPC* p = _impl_.realpwrsetpointenabled_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::ControlSPC&>(
      ::commonmodule::_ControlSPC_default_instance_);
}
inline const ::commonmodule::ControlSPC& GenerationPoint::realpwrsetpointenabled() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationPoint.realPwrSetPointEnabled)
  return _internal_realpwrsetpointenabled();
}
inline void GenerationPoint::unsafe_arena_set_allocated_realpwrsetpointenabled(
    ::commonmodule::ControlSPC* realpwrsetpointenabled) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.realpwrsetpointenabled_);
  }
  _impl_.realpwrsetpointenabled_ = realpwrsetpointenabled;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationPoint.realPwrSetPointEnabled)
}
inline ::commonmodule::ControlSPC* GenerationPoint::release_realpwrsetpointenabled() {
  
  ::commonmodule::ControlSPC* temp = _impl_.realpwrsetpointenabled_;
  _impl_.realpwrsetpointenabled_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::commonmodule::ControlSPC* GenerationPoint::unsafe_arena_release_realpwrsetpointenabled() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationPoint.realPwrSetPointEnabled)
  
  ::commonmodule::ControlSPC* temp = _impl_.realpwrsetpointenabled_;
  _impl_.realpwrsetpointenabled_ = nullptr;
  return temp;
}
inline ::commonmodule::ControlSPC* GenerationPoint::_internal_mutable_realpwrsetpointenabled() {
  
  if (_impl_.realpwrsetpointenabled_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::ControlSPC>(GetArenaForAllocation());
    _impl_.realpwrsetpointenabled_ = p;
  }
  return _impl_.realpwrsetpointenabled_;
}
inline ::commonmodule::ControlSPC* GenerationPoint::mutable_realpwrsetpointenabled() {
  ::commonmodule::ControlSPC* _msg = _internal_mutable_realpwrsetpointenabled();
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationPoint.realPwrSetPointEnabled)
  return _msg;
}
inline void GenerationPoint::set_allocated_realpwrsetpointenabled(::commonmodule::ControlSPC* realpwrsetpointenabled) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.realpwrsetpointenabled_);
  }
  if (realpwrsetpointenabled) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(realpwrsetpointenabled));
    if (message_arena != submessage_arena) {
      realpwrsetpointenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, realpwrsetpointenabled, submessage_arena);
    }

  } else {

  }
  _impl_.realpwrsetpointenabled_ = realpwrsetpointenabled;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationPoint.realPwrSetPointEnabled)
}

// .commonmodule.ControlSPC reset = 8;
inline bool GenerationPoint::_internal_has_reset() const {
  return this != internal_default_instance() && _impl_.reset_ != nullptr;
}
inline bool GenerationPoint::has_reset() const {
  return _internal_has_reset();
}
inline const ::commonmodule::ControlSPC& GenerationPoint::_internal_reset() const {
  const ::commonmodule::ControlSPC* p = _impl_.reset_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::ControlSPC&>(
      ::commonmodule::_ControlSPC_default_instance_);
}
inline const ::commonmodule::ControlSPC& GenerationPoint::reset() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationPoint.reset)
  return _internal_reset();
}
inline void GenerationPoint::unsafe_arena_set_allocated_reset(
    ::commonmodule::ControlSPC* reset) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.reset_);
  }
  _impl_.reset_ = reset;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationPoint.reset)
}
inline ::commonmodule::ControlSPC* GenerationPoint::release_reset() {
  
  ::commonmodule::ControlSPC* temp = _impl_.reset_;
  _impl_.reset_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::commonmodule::ControlSPC* GenerationPoint::unsafe_arena_release_reset() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationPoint.reset)
  
  ::commonmodule::ControlSPC* temp = _impl_.reset_;
  _impl_.reset_ = nullptr;
  return temp;
}
inline ::commonmodule::ControlSPC* GenerationPoint::_internal_mutable_reset() {
  
  if (_impl_.reset_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::ControlSPC>(GetArenaForAllocation());
    _impl_.reset_ = p;
  }
  return _impl_.reset_;
}
inline ::commonmodule::ControlSPC* GenerationPoint::mutable_reset() {
  ::commonmodule::ControlSPC* _msg = _internal_mutable_reset();
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationPoint.reset)
  return _msg;
}
inline void GenerationPoint::set_allocated_reset(::commonmodule::ControlSPC* reset) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.reset_);
  }
  if (reset) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(reset));
    if (message_arena != submessage_arena) {
      reset = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, reset, submessage_arena);
    }

  } else {

  }
  _impl_.reset_ = reset;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationPoint.reset)
}

// .commonmodule.Optional_StateKind state = 9;
inline bool GenerationPoint::_internal_has_state() const {
  return this != internal_default_instance() && _impl_.state_ != nullptr;
}
inline bool GenerationPoint::has_state() const {
  return _internal_has_state();
}
inline const ::commonmodule::Optional_StateKind& GenerationPoint::_internal_state() const {
  const ::commonmodule::Optional_StateKind* p = _impl_.state_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::Optional_StateKind&>(
      ::commonmodule::_Optional_StateKind_default_instance_);
}
inline const ::commonmodule::Optional_StateKind& GenerationPoint::state() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationPoint.state)
  return _internal_state();
}
inline void GenerationPoint::unsafe_arena_set_allocated_state(
    ::commonmodule::Optional_StateKind* state) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.state_);
  }
  _impl_.state_ = state;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationPoint.state)
}
inline ::commonmodule::Optional_StateKind* GenerationPoint::release_state() {
  
  ::commonmodule::Optional_StateKind* temp = _impl_.state_;
  _impl_.state_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::commonmodule::Optional_StateKind* GenerationPoint::unsafe_arena_release_state() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationPoint.state)
  
  ::commonmodule::Optional_StateKind* temp = _impl_.state_;
  _impl_.state_ = nullptr;
  return temp;
}
inline ::commonmodule::Optional_StateKind* GenerationPoint::_internal_mutable_state() {
  
  if (_impl_.state_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::Optional_StateKind>(GetArenaForAllocation());
    _impl_.state_ = p;
  }
  return _impl_.state_;
}
inline ::commonmodule::Optional_StateKind* GenerationPoint::mutable_state() {
  ::commonmodule::Optional_StateKind* _msg = _internal_mutable_state();
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationPoint.state)
  return _msg;
}
inline void GenerationPoint::set_allocated_state(::commonmodule::Optional_StateKind* state) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.state_);
  }
  if (state) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(state));
    if (message_arena != submessage_arena) {
      state = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }

  } else {

  }
  _impl_.state_ = state;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationPoint.state)
}

// .commonmodule.ControlSPC syncBackToGrid = 10;
inline bool GenerationPoint::_internal_has_syncbacktogrid() const {
  return this != internal_default_instance() && _impl_.syncbacktogrid_ != nullptr;
}
inline bool GenerationPoint::has_syncbacktogrid() const {
  return _internal_has_syncbacktogrid();
}
inline const ::commonmodule::ControlSPC& GenerationPoint::_internal_syncbacktogrid() const {
  const ::commonmodule::ControlSPC* p = _impl_.syncbacktogrid_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::ControlSPC&>(
      ::commonmodule::_ControlSPC_default_instance_);
}
inline const ::commonmodule::ControlSPC& GenerationPoint::syncbacktogrid() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationPoint.syncBackToGrid)
  return _internal_syncbacktogrid();
}
inline void GenerationPoint::unsafe_arena_set_allocated_syncbacktogrid(
    ::commonmodule::ControlSPC* syncbacktogrid) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.syncbacktogrid_);
  }
  _impl_.syncbacktogrid_ = syncbacktogrid;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationPoint.syncBackToGrid)
}
inline ::commonmodule::ControlSPC* GenerationPoint::release_syncbacktogrid() {
  
  ::commonmodule::ControlSPC* temp = _impl_.syncbacktogrid_;
  _impl_.syncbacktogrid_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::commonmodule::ControlSPC* GenerationPoint::unsafe_arena_release_syncbacktogrid() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationPoint.syncBackToGrid)
  
  ::commonmodule::ControlSPC* temp = _impl_.syncbacktogrid_;
  _impl_.syncbacktogrid_ = nullptr;
  return temp;
}
inline ::commonmodule::ControlSPC* GenerationPoint::_internal_mutable_syncbacktogrid() {
  
  if (_impl_.syncbacktogrid_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::ControlSPC>(GetArenaForAllocation());
    _impl_.syncbacktogrid_ = p;
  }
  return _impl_.syncbacktogrid_;
}
inline ::commonmodule::ControlSPC* GenerationPoint::mutable_syncbacktogrid() {
  ::commonmodule::ControlSPC* _msg = _internal_mutable_syncbacktogrid();
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationPoint.syncBackToGrid)
  return _msg;
}
inline void GenerationPoint::set_allocated_syncbacktogrid(::commonmodule::ControlSPC* syncbacktogrid) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.syncbacktogrid_);
  }
  if (syncbacktogrid) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(syncbacktogrid));
    if (message_arena != submessage_arena) {
      syncbacktogrid = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, syncbacktogrid, submessage_arena);
    }

  } else {

  }
  _impl_.syncbacktogrid_ = syncbacktogrid;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationPoint.syncBackToGrid)
}

// .commonmodule.ControlSPC transToIslndOnGridLossEnabled = 11;
inline bool GenerationPoint::_internal_has_transtoislndongridlossenabled() const {
  return this != internal_default_instance() && _impl_.transtoislndongridlossenabled_ != nullptr;
}
inline bool GenerationPoint::has_transtoislndongridlossenabled() const {
  return _internal_has_transtoislndongridlossenabled();
}
inline const ::commonmodule::ControlSPC& GenerationPoint::_internal_transtoislndongridlossenabled() const {
  const ::commonmodule::ControlSPC* p = _impl_.transtoislndongridlossenabled_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::ControlSPC&>(
      ::commonmodule::_ControlSPC_default_instance_);
}
inline const ::commonmodule::ControlSPC& GenerationPoint::transtoislndongridlossenabled() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationPoint.transToIslndOnGridLossEnabled)
  return _internal_transtoislndongridlossenabled();
}
inline void GenerationPoint::unsafe_arena_set_allocated_transtoislndongridlossenabled(
    ::commonmodule::ControlSPC* transtoislndongridlossenabled) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transtoislndongridlossenabled_);
  }
  _impl_.transtoislndongridlossenabled_ = transtoislndongridlossenabled;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationPoint.transToIslndOnGridLossEnabled)
}
inline ::commonmodule::ControlSPC* GenerationPoint::release_transtoislndongridlossenabled() {
  
  ::commonmodule::ControlSPC* temp = _impl_.transtoislndongridlossenabled_;
  _impl_.transtoislndongridlossenabled_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::commonmodule::ControlSPC* GenerationPoint::unsafe_arena_release_transtoislndongridlossenabled() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationPoint.transToIslndOnGridLossEnabled)
  
  ::commonmodule::ControlSPC* temp = _impl_.transtoislndongridlossenabled_;
  _impl_.transtoislndongridlossenabled_ = nullptr;
  return temp;
}
inline ::commonmodule::ControlSPC* GenerationPoint::_internal_mutable_transtoislndongridlossenabled() {
  
  if (_impl_.transtoislndongridlossenabled_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::ControlSPC>(GetArenaForAllocation());
    _impl_.transtoislndongridlossenabled_ = p;
  }
  return _impl_.transtoislndongridlossenabled_;
}
inline ::commonmodule::ControlSPC* GenerationPoint::mutable_transtoislndongridlossenabled() {
  ::commonmodule::ControlSPC* _msg = _internal_mutable_transtoislndongridlossenabled();
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationPoint.transToIslndOnGridLossEnabled)
  return _msg;
}
inline void GenerationPoint::set_allocated_transtoislndongridlossenabled(::commonmodule::ControlSPC* transtoislndongridlossenabled) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transtoislndongridlossenabled_);
  }
  if (transtoislndongridlossenabled) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(transtoislndongridlossenabled));
    if (message_arena != submessage_arena) {
      transtoislndongridlossenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, transtoislndongridlossenabled, submessage_arena);
    }

  } else {

  }
  _impl_.transtoislndongridlossenabled_ = transtoislndongridlossenabled;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationPoint.transToIslndOnGridLossEnabled)
}

// .commonmodule.ControlSPC voltageSetPointEnabled = 12;
inline bool GenerationPoint::_internal_has_voltagesetpointenabled() const {
  return this != internal_default_instance() && _impl_.voltagesetpointenabled_ != nullptr;
}
inline bool GenerationPoint::has_voltagesetpointenabled() const {
  return _internal_has_voltagesetpointenabled();
}
inline const ::commonmodule::ControlSPC& GenerationPoint::_internal_voltagesetpointenabled() const {
  const ::commonmodule::ControlSPC* p = _impl_.voltagesetpointenabled_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::ControlSPC&>(
      ::commonmodule::_ControlSPC_default_instance_);
}
inline const ::commonmodule::ControlSPC& GenerationPoint::voltagesetpointenabled() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationPoint.voltageSetPointEnabled)
  return _internal_voltagesetpointenabled();
}
inline void GenerationPoint::unsafe_arena_set_allocated_voltagesetpointenabled(
    ::commonmodule::ControlSPC* voltagesetpointenabled) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.voltagesetpointenabled_);
  }
  _impl_.voltagesetpointenabled_ = voltagesetpointenabled;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationPoint.voltageSetPointEnabled)
}
inline ::commonmodule::ControlSPC* GenerationPoint::release_voltagesetpointenabled() {
  
  ::commonmodule::ControlSPC* temp = _impl_.voltagesetpointenabled_;
  _impl_.voltagesetpointenabled_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::commonmodule::ControlSPC* GenerationPoint::unsafe_arena_release_voltagesetpointenabled() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationPoint.voltageSetPointEnabled)
  
  ::commonmodule::ControlSPC* temp = _impl_.voltagesetpointenabled_;
  _impl_.voltagesetpointenabled_ = nullptr;
  return temp;
}
inline ::commonmodule::ControlSPC* GenerationPoint::_internal_mutable_voltagesetpointenabled() {
  
  if (_impl_.voltagesetpointenabled_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::ControlSPC>(GetArenaForAllocation());
    _impl_.voltagesetpointenabled_ = p;
  }
  return _impl_.voltagesetpointenabled_;
}
inline ::commonmodule::ControlSPC* GenerationPoint::mutable_voltagesetpointenabled() {
  ::commonmodule::ControlSPC* _msg = _internal_mutable_voltagesetpointenabled();
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationPoint.voltageSetPointEnabled)
  return _msg;
}
inline void GenerationPoint::set_allocated_voltagesetpointenabled(::commonmodule::ControlSPC* voltagesetpointenabled) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.voltagesetpointenabled_);
  }
  if (voltagesetpointenabled) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(voltagesetpointenabled));
    if (message_arena != submessage_arena) {
      voltagesetpointenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, voltagesetpointenabled, submessage_arena);
    }

  } else {

  }
  _impl_.voltagesetpointenabled_ = voltagesetpointenabled;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationPoint.voltageSetPointEnabled)
}

// .commonmodule.ControlTimestamp startTime = 13 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
inline bool GenerationPoint::_internal_has_starttime() const {
  return this != internal_default_instance() && _impl_.starttime_ != nullptr;
}
inline bool GenerationPoint::has_starttime() const {
  return _internal_has_starttime();
}
inline const ::commonmodule::ControlTimestamp& GenerationPoint::_internal_starttime() const {
  const ::commonmodule::ControlTimestamp* p = _impl_.starttime_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::ControlTimestamp&>(
      ::commonmodule::_ControlTimestamp_default_instance_);
}
inline const ::commonmodule::ControlTimestamp& GenerationPoint::starttime() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationPoint.startTime)
  return _internal_starttime();
}
inline void GenerationPoint::unsafe_arena_set_allocated_starttime(
    ::commonmodule::ControlTimestamp* starttime) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.starttime_);
  }
  _impl_.starttime_ = starttime;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationPoint.startTime)
}
inline ::commonmodule::ControlTimestamp* GenerationPoint::release_starttime() {
  
  ::commonmodule::ControlTimestamp* temp = _impl_.starttime_;
  _impl_.starttime_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::commonmodule::ControlTimestamp* GenerationPoint::unsafe_arena_release_starttime() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationPoint.startTime)
  
  ::commonmodule::ControlTimestamp* temp = _impl_.starttime_;
  _impl_.starttime_ = nullptr;
  return temp;
}
inline ::commonmodule::ControlTimestamp* GenerationPoint::_internal_mutable_starttime() {
  
  if (_impl_.starttime_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::ControlTimestamp>(GetArenaForAllocation());
    _impl_.starttime_ = p;
  }
  return _impl_.starttime_;
}
inline ::commonmodule::ControlTimestamp* GenerationPoint::mutable_starttime() {
  ::commonmodule::ControlTimestamp* _msg = _internal_mutable_starttime();
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationPoint.startTime)
  return _msg;
}
inline void GenerationPoint::set_allocated_starttime(::commonmodule::ControlTimestamp* starttime) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.starttime_);
  }
  if (starttime) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(starttime));
    if (message_arena != submessage_arena) {
      starttime = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, starttime, submessage_arena);
    }

  } else {

  }
  _impl_.starttime_ = starttime;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationPoint.startTime)
}

// .commonmodule.EnterServiceAPC enterServiceOperation = 14;
inline bool GenerationPoint::_internal_has_enterserviceoperation() const {
  return this != internal_default_instance() && _impl_.enterserviceoperation_ != nullptr;
}
inline bool GenerationPoint::has_enterserviceoperation() const {
  return _internal_has_enterserviceoperation();
}
inline const ::commonmodule::EnterServiceAPC& GenerationPoint::_internal_enterserviceoperation() const {
  const ::commonmodule::EnterServiceAPC* p = _impl_.enterserviceoperation_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::EnterServiceAPC&>(
      ::commonmodule::_EnterServiceAPC_default_instance_);
}
inline const ::commonmodule::EnterServiceAPC& GenerationPoint::enterserviceoperation() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationPoint.enterServiceOperation)
  return _internal_enterserviceoperation();
}
inline void GenerationPoint::unsafe_arena_set_allocated_enterserviceoperation(
    ::commonmodule::EnterServiceAPC* enterserviceoperation) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.enterserviceoperation_);
  }
  _impl_.enterserviceoperation_ = enterserviceoperation;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationPoint.enterServiceOperation)
}
inline ::commonmodule::EnterServiceAPC* GenerationPoint::release_enterserviceoperation() {
  
  ::commonmodule::EnterServiceAPC* temp = _impl_.enterserviceoperation_;
  _impl_.enterserviceoperation_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::commonmodule::EnterServiceAPC* GenerationPoint::unsafe_arena_release_enterserviceoperation() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationPoint.enterServiceOperation)
  
  ::commonmodule::EnterServiceAPC* temp = _impl_.enterserviceoperation_;
  _impl_.enterserviceoperation_ = nullptr;
  return temp;
}
inline ::commonmodule::EnterServiceAPC* GenerationPoint::_internal_mutable_enterserviceoperation() {
  
  if (_impl_.enterserviceoperation_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::EnterServiceAPC>(GetArenaForAllocation());
    _impl_.enterserviceoperation_ = p;
  }
  return _impl_.enterserviceoperation_;
}
inline ::commonmodule::EnterServiceAPC* GenerationPoint::mutable_enterserviceoperation() {
  ::commonmodule::EnterServiceAPC* _msg = _internal_mutable_enterserviceoperation();
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationPoint.enterServiceOperation)
  return _msg;
}
inline void GenerationPoint::set_allocated_enterserviceoperation(::commonmodule::EnterServiceAPC* enterserviceoperation) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.enterserviceoperation_);
  }
  if (enterserviceoperation) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(enterserviceoperation));
    if (message_arena != submessage_arena) {
      enterserviceoperation = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, enterserviceoperation, submessage_arena);
    }

  } else {

  }
  _impl_.enterserviceoperation_ = enterserviceoperation;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationPoint.enterServiceOperation)
}

// .commonmodule.HzWAPC hzWOperation = 15;
inline bool GenerationPoint::_internal_has_hzwoperation() const {
  return this != internal_default_instance() && _impl_.hzwoperation_ != nullptr;
}
inline bool GenerationPoint::has_hzwoperation() const {
  return _internal_has_hzwoperation();
}
inline const ::commonmodule::HzWAPC& GenerationPoint::_internal_hzwoperation() const {
  const ::commonmodule::HzWAPC* p = _impl_.hzwoperation_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::HzWAPC&>(
      ::commonmodule::_HzWAPC_default_instance_);
}
inline const ::commonmodule::HzWAPC& GenerationPoint::hzwoperation() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationPoint.hzWOperation)
  return _internal_hzwoperation();
}
inline void GenerationPoint::unsafe_arena_set_allocated_hzwoperation(
    ::commonmodule::HzWAPC* hzwoperation) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.hzwoperation_);
  }
  _impl_.hzwoperation_ = hzwoperation;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationPoint.hzWOperation)
}
inline ::commonmodule::HzWAPC* GenerationPoint::release_hzwoperation() {
  
  ::commonmodule::HzWAPC* temp = _impl_.hzwoperation_;
  _impl_.hzwoperation_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::commonmodule::HzWAPC* GenerationPoint::unsafe_arena_release_hzwoperation() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationPoint.hzWOperation)
  
  ::commonmodule::HzWAPC* temp = _impl_.hzwoperation_;
  _impl_.hzwoperation_ = nullptr;
  return temp;
}
inline ::commonmodule::HzWAPC* GenerationPoint::_internal_mutable_hzwoperation() {
  
  if (_impl_.hzwoperation_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::HzWAPC>(GetArenaForAllocation());
    _impl_.hzwoperation_ = p;
  }
  return _impl_.hzwoperation_;
}
inline ::commonmodule::HzWAPC* GenerationPoint::mutable_hzwoperation() {
  ::commonmodule::HzWAPC* _msg = _internal_mutable_hzwoperation();
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationPoint.hzWOperation)
  return _msg;
}
inline void GenerationPoint::set_allocated_hzwoperation(::commonmodule::HzWAPC* hzwoperation) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.hzwoperation_);
  }
  if (hzwoperation) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(hzwoperation));
    if (message_arena != submessage_arena) {
      hzwoperation = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, hzwoperation, submessage_arena);
    }

  } else {

  }
  _impl_.hzwoperation_ = hzwoperation;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationPoint.hzWOperation)
}

// .commonmodule.LimitWAPC limitWOperation = 16;
inline bool GenerationPoint::_internal_has_limitwoperation() const {
  return this != internal_default_instance() && _impl_.limitwoperation_ != nullptr;
}
inline bool GenerationPoint::has_limitwoperation() const {
  return _internal_has_limitwoperation();
}
inline const ::commonmodule::LimitWAPC& GenerationPoint::_internal_limitwoperation() const {
  const ::commonmodule::LimitWAPC* p = _impl_.limitwoperation_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::LimitWAPC&>(
      ::commonmodule::_LimitWAPC_default_instance_);
}
inline const ::commonmodule::LimitWAPC& GenerationPoint::limitwoperation() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationPoint.limitWOperation)
  return _internal_limitwoperation();
}
inline void GenerationPoint::unsafe_arena_set_allocated_limitwoperation(
    ::commonmodule::LimitWAPC* limitwoperation) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.limitwoperation_);
  }
  _impl_.limitwoperation_ = limitwoperation;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationPoint.limitWOperation)
}
inline ::commonmodule::LimitWAPC* GenerationPoint::release_limitwoperation() {
  
  ::commonmodule::LimitWAPC* temp = _impl_.limitwoperation_;
  _impl_.limitwoperation_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::commonmodule::LimitWAPC* GenerationPoint::unsafe_arena_release_limitwoperation() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationPoint.limitWOperation)
  
  ::commonmodule::LimitWAPC* temp = _impl_.limitwoperation_;
  _impl_.limitwoperation_ = nullptr;
  return temp;
}
inline ::commonmodule::LimitWAPC* GenerationPoint::_internal_mutable_limitwoperation() {
  
  if (_impl_.limitwoperation_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::LimitWAPC>(GetArenaForAllocation());
    _impl_.limitwoperation_ = p;
  }
  return _impl_.limitwoperation_;
}
inline ::commonmodule::LimitWAPC* GenerationPoint::mutable_limitwoperation() {
  ::commonmodule::LimitWAPC* _msg = _internal_mutable_limitwoperation();
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationPoint.limitWOperation)
  return _msg;
}
inline void GenerationPoint::set_allocated_limitwoperation(::commonmodule::LimitWAPC* limitwoperation) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.limitwoperation_);
  }
  if (limitwoperation) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(limitwoperation));
    if (message_arena != submessage_arena) {
      limitwoperation = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, limitwoperation, submessage_arena);
    }

  } else {

  }
  _impl_.limitwoperation_ = limitwoperation;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationPoint.limitWOperation)
}

// .commonmodule.PFSPC pFOperation = 17;
inline bool GenerationPoint::_internal_has_pfoperation() const {
  return this != internal_default_instance() && _impl_.pfoperation_ != nullptr;
}
inline bool GenerationPoint::has_pfoperation() const {
  return _internal_has_pfoperation();
}
inline const ::commonmodule::PFSPC& GenerationPoint::_internal_pfoperation() const {
  const ::commonmodule::PFSPC* p = _impl_.pfoperation_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::PFSPC&>(
      ::commonmodule::_PFSPC_default_instance_);
}
inline const ::commonmodule::PFSPC& GenerationPoint::pfoperation() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationPoint.pFOperation)
  return _internal_pfoperation();
}
inline void GenerationPoint::unsafe_arena_set_allocated_pfoperation(
    ::commonmodule::PFSPC* pfoperation) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.pfoperation_);
  }
  _impl_.pfoperation_ = pfoperation;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationPoint.pFOperation)
}
inline ::commonmodule::PFSPC* GenerationPoint::release_pfoperation() {
  
  ::commonmodule::PFSPC* temp = _impl_.pfoperation_;
  _impl_.pfoperation_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::commonmodule::PFSPC* GenerationPoint::unsafe_arena_release_pfoperation() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationPoint.pFOperation)
  
  ::commonmodule::PFSPC* temp = _impl_.pfoperation_;
  _impl_.pfoperation_ = nullptr;
  return temp;
}
inline ::commonmodule::PFSPC* GenerationPoint::_internal_mutable_pfoperation() {
  
  if (_impl_.pfoperation_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::PFSPC>(GetArenaForAllocation());
    _impl_.pfoperation_ = p;
  }
  return _impl_.pfoperation_;
}
inline ::commonmodule::PFSPC* GenerationPoint::mutable_pfoperation() {
  ::commonmodule::PFSPC* _msg = _internal_mutable_pfoperation();
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationPoint.pFOperation)
  return _msg;
}
inline void GenerationPoint::set_allocated_pfoperation(::commonmodule::PFSPC* pfoperation) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.pfoperation_);
  }
  if (pfoperation) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(pfoperation));
    if (message_arena != submessage_arena) {
      pfoperation = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, pfoperation, submessage_arena);
    }

  } else {

  }
  _impl_.pfoperation_ = pfoperation;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationPoint.pFOperation)
}

// .commonmodule.TmHzCSG tmHzTripOperation = 18;
inline bool GenerationPoint::_internal_has_tmhztripoperation() const {
  return this != internal_default_instance() && _impl_.tmhztripoperation_ != nullptr;
}
inline bool GenerationPoint::has_tmhztripoperation() const {
  return _internal_has_tmhztripoperation();
}
inline const ::commonmodule::TmHzCSG& GenerationPoint::_internal_tmhztripoperation() const {
  const ::commonmodule::TmHzCSG* p = _impl_.tmhztripoperation_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::TmHzCSG&>(
      ::commonmodule::_TmHzCSG_default_instance_);
}
inline const ::commonmodule::TmHzCSG& GenerationPoint::tmhztripoperation() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationPoint.tmHzTripOperation)
  return _internal_tmhztripoperation();
}
inline void GenerationPoint::unsafe_arena_set_allocated_tmhztripoperation(
    ::commonmodule::TmHzCSG* tmhztripoperation) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.tmhztripoperation_);
  }
  _impl_.tmhztripoperation_ = tmhztripoperation;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationPoint.tmHzTripOperation)
}
inline ::commonmodule::TmHzCSG* GenerationPoint::release_tmhztripoperation() {
  
  ::commonmodule::TmHzCSG* temp = _impl_.tmhztripoperation_;
  _impl_.tmhztripoperation_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::commonmodule::TmHzCSG* GenerationPoint::unsafe_arena_release_tmhztripoperation() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationPoint.tmHzTripOperation)
  
  ::commonmodule::TmHzCSG* temp = _impl_.tmhztripoperation_;
  _impl_.tmhztripoperation_ = nullptr;
  return temp;
}
inline ::commonmodule::TmHzCSG* GenerationPoint::_internal_mutable_tmhztripoperation() {
  
  if (_impl_.tmhztripoperation_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::TmHzCSG>(GetArenaForAllocation());
    _impl_.tmhztripoperation_ = p;
  }
  return _impl_.tmhztripoperation_;
}
inline ::commonmodule::TmHzCSG* GenerationPoint::mutable_tmhztripoperation() {
  ::commonmodule::TmHzCSG* _msg = _internal_mutable_tmhztripoperation();
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationPoint.tmHzTripOperation)
  return _msg;
}
inline void GenerationPoint::set_allocated_tmhztripoperation(::commonmodule::TmHzCSG* tmhztripoperation) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.tmhztripoperation_);
  }
  if (tmhztripoperation) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(tmhztripoperation));
    if (message_arena != submessage_arena) {
      tmhztripoperation = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, tmhztripoperation, submessage_arena);
    }

  } else {

  }
  _impl_.tmhztripoperation_ = tmhztripoperation;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationPoint.tmHzTripOperation)
}

// .commonmodule.TmVoltCSG tmVoltTripOperation = 19;
inline bool GenerationPoint::_internal_has_tmvolttripoperation() const {
  return this != internal_default_instance() && _impl_.tmvolttripoperation_ != nullptr;
}
inline bool GenerationPoint::has_tmvolttripoperation() const {
  return _internal_has_tmvolttripoperation();
}
inline const ::commonmodule::TmVoltCSG& GenerationPoint::_internal_tmvolttripoperation() const {
  const ::commonmodule::TmVoltCSG* p = _impl_.tmvolttripoperation_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::TmVoltCSG&>(
      ::commonmodule::_TmVoltCSG_default_instance_);
}
inline const ::commonmodule::TmVoltCSG& GenerationPoint::tmvolttripoperation() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationPoint.tmVoltTripOperation)
  return _internal_tmvolttripoperation();
}
inline void GenerationPoint::unsafe_arena_set_allocated_tmvolttripoperation(
    ::commonmodule::TmVoltCSG* tmvolttripoperation) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.tmvolttripoperation_);
  }
  _impl_.tmvolttripoperation_ = tmvolttripoperation;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationPoint.tmVoltTripOperation)
}
inline ::commonmodule::TmVoltCSG* GenerationPoint::release_tmvolttripoperation() {
  
  ::commonmodule::TmVoltCSG* temp = _impl_.tmvolttripoperation_;
  _impl_.tmvolttripoperation_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::commonmodule::TmVoltCSG* GenerationPoint::unsafe_arena_release_tmvolttripoperation() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationPoint.tmVoltTripOperation)
  
  ::commonmodule::TmVoltCSG* temp = _impl_.tmvolttripoperation_;
  _impl_.tmvolttripoperation_ = nullptr;
  return temp;
}
inline ::commonmodule::TmVoltCSG* GenerationPoint::_internal_mutable_tmvolttripoperation() {
  
  if (_impl_.tmvolttripoperation_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::TmVoltCSG>(GetArenaForAllocation());
    _impl_.tmvolttripoperation_ = p;
  }
  return _impl_.tmvolttripoperation_;
}
inline ::commonmodule::TmVoltCSG* GenerationPoint::mutable_tmvolttripoperation() {
  ::commonmodule::TmVoltCSG* _msg = _internal_mutable_tmvolttripoperation();
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationPoint.tmVoltTripOperation)
  return _msg;
}
inline void GenerationPoint::set_allocated_tmvolttripoperation(::commonmodule::TmVoltCSG* tmvolttripoperation) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.tmvolttripoperation_);
  }
  if (tmvolttripoperation) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(tmvolttripoperation));
    if (message_arena != submessage_arena) {
      tmvolttripoperation = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, tmvolttripoperation, submessage_arena);
    }

  } else {

  }
  _impl_.tmvolttripoperation_ = tmvolttripoperation;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationPoint.tmVoltTripOperation)
}

// .commonmodule.VarSPC vArOperation = 20;
inline bool GenerationPoint::_internal_has_varoperation() const {
  return this != internal_default_instance() && _impl_.varoperation_ != nullptr;
}
inline bool GenerationPoint::has_varoperation() const {
  return _internal_has_varoperation();
}
inline const ::commonmodule::VarSPC& GenerationPoint::_internal_varoperation() const {
  const ::commonmodule::VarSPC* p = _impl_.varoperation_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::VarSPC&>(
      ::commonmodule::_VarSPC_default_instance_);
}
inline const ::commonmodule::VarSPC& GenerationPoint::varoperation() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationPoint.vArOperation)
  return _internal_varoperation();
}
inline void GenerationPoint::unsafe_arena_set_allocated_varoperation(
    ::commonmodule::VarSPC* varoperation) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.varoperation_);
  }
  _impl_.varoperation_ = varoperation;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationPoint.vArOperation)
}
inline ::commonmodule::VarSPC* GenerationPoint::release_varoperation() {
  
  ::commonmodule::VarSPC* temp = _impl_.varoperation_;
  _impl_.varoperation_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::commonmodule::VarSPC* GenerationPoint::unsafe_arena_release_varoperation() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationPoint.vArOperation)
  
  ::commonmodule::VarSPC* temp = _impl_.varoperation_;
  _impl_.varoperation_ = nullptr;
  return temp;
}
inline ::commonmodule::VarSPC* GenerationPoint::_internal_mutable_varoperation() {
  
  if (_impl_.varoperation_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::VarSPC>(GetArenaForAllocation());
    _impl_.varoperation_ = p;
  }
  return _impl_.varoperation_;
}
inline ::commonmodule::VarSPC* GenerationPoint::mutable_varoperation() {
  ::commonmodule::VarSPC* _msg = _internal_mutable_varoperation();
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationPoint.vArOperation)
  return _msg;
}
inline void GenerationPoint::set_allocated_varoperation(::commonmodule::VarSPC* varoperation) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.varoperation_);
  }
  if (varoperation) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(varoperation));
    if (message_arena != submessage_arena) {
      varoperation = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, varoperation, submessage_arena);
    }

  } else {

  }
  _impl_.varoperation_ = varoperation;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationPoint.vArOperation)
}

// .commonmodule.VoltVarCSG voltVarOperation = 21;
inline bool GenerationPoint::_internal_has_voltvaroperation() const {
  return this != internal_default_instance() && _impl_.voltvaroperation_ != nullptr;
}
inline bool GenerationPoint::has_voltvaroperation() const {
  return _internal_has_voltvaroperation();
}
inline const ::commonmodule::VoltVarCSG& GenerationPoint::_internal_voltvaroperation() const {
  const ::commonmodule::VoltVarCSG* p = _impl_.voltvaroperation_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::VoltVarCSG&>(
      ::commonmodule::_VoltVarCSG_default_instance_);
}
inline const ::commonmodule::VoltVarCSG& GenerationPoint::voltvaroperation() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationPoint.voltVarOperation)
  return _internal_voltvaroperation();
}
inline void GenerationPoint::unsafe_arena_set_allocated_voltvaroperation(
    ::commonmodule::VoltVarCSG* voltvaroperation) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.voltvaroperation_);
  }
  _impl_.voltvaroperation_ = voltvaroperation;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationPoint.voltVarOperation)
}
inline ::commonmodule::VoltVarCSG* GenerationPoint::release_voltvaroperation() {
  
  ::commonmodule::VoltVarCSG* temp = _impl_.voltvaroperation_;
  _impl_.voltvaroperation_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::commonmodule::VoltVarCSG* GenerationPoint::unsafe_arena_release_voltvaroperation() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationPoint.voltVarOperation)
  
  ::commonmodule::VoltVarCSG* temp = _impl_.voltvaroperation_;
  _impl_.voltvaroperation_ = nullptr;
  return temp;
}
inline ::commonmodule::VoltVarCSG* GenerationPoint::_internal_mutable_voltvaroperation() {
  
  if (_impl_.voltvaroperation_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::VoltVarCSG>(GetArenaForAllocation());
    _impl_.voltvaroperation_ = p;
  }
  return _impl_.voltvaroperation_;
}
inline ::commonmodule::VoltVarCSG* GenerationPoint::mutable_voltvaroperation() {
  ::commonmodule::VoltVarCSG* _msg = _internal_mutable_voltvaroperation();
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationPoint.voltVarOperation)
  return _msg;
}
inline void GenerationPoint::set_allocated_voltvaroperation(::commonmodule::VoltVarCSG* voltvaroperation) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.voltvaroperation_);
  }
  if (voltvaroperation) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(voltvaroperation));
    if (message_arena != submessage_arena) {
      voltvaroperation = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, voltvaroperation, submessage_arena);
    }

  } else {

  }
  _impl_.voltvaroperation_ = voltvaroperation;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationPoint.voltVarOperation)
}

// .commonmodule.VoltWCSG voltWOperation = 22;
inline bool GenerationPoint::_internal_has_voltwoperation() const {
  return this != internal_default_instance() && _impl_.voltwoperation_ != nullptr;
}
inline bool GenerationPoint::has_voltwoperation() const {
  return _internal_has_voltwoperation();
}
inline const ::commonmodule::VoltWCSG& GenerationPoint::_internal_voltwoperation() const {
  const ::commonmodule::VoltWCSG* p = _impl_.voltwoperation_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::VoltWCSG&>(
      ::commonmodule::_VoltWCSG_default_instance_);
}
inline const ::commonmodule::VoltWCSG& GenerationPoint::voltwoperation() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationPoint.voltWOperation)
  return _internal_voltwoperation();
}
inline void GenerationPoint::unsafe_arena_set_allocated_voltwoperation(
    ::commonmodule::VoltWCSG* voltwoperation) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.voltwoperation_);
  }
  _impl_.voltwoperation_ = voltwoperation;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationPoint.voltWOperation)
}
inline ::commonmodule::VoltWCSG* GenerationPoint::release_voltwoperation() {
  
  ::commonmodule::VoltWCSG* temp = _impl_.voltwoperation_;
  _impl_.voltwoperation_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::commonmodule::VoltWCSG* GenerationPoint::unsafe_arena_release_voltwoperation() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationPoint.voltWOperation)
  
  ::commonmodule::VoltWCSG* temp = _impl_.voltwoperation_;
  _impl_.voltwoperation_ = nullptr;
  return temp;
}
inline ::commonmodule::VoltWCSG* GenerationPoint::_internal_mutable_voltwoperation() {
  
  if (_impl_.voltwoperation_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::VoltWCSG>(GetArenaForAllocation());
    _impl_.voltwoperation_ = p;
  }
  return _impl_.voltwoperation_;
}
inline ::commonmodule::VoltWCSG* GenerationPoint::mutable_voltwoperation() {
  ::commonmodule::VoltWCSG* _msg = _internal_mutable_voltwoperation();
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationPoint.voltWOperation)
  return _msg;
}
inline void GenerationPoint::set_allocated_voltwoperation(::commonmodule::VoltWCSG* voltwoperation) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.voltwoperation_);
  }
  if (voltwoperation) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(voltwoperation));
    if (message_arena != submessage_arena) {
      voltwoperation = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, voltwoperation, submessage_arena);
    }

  } else {

  }
  _impl_.voltwoperation_ = voltwoperation;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationPoint.voltWOperation)
}

// .commonmodule.WVarCSG wVarOperation = 23;
inline bool GenerationPoint::_internal_has_wvaroperation() const {
  return this != internal_default_instance() && _impl_.wvaroperation_ != nullptr;
}
inline bool GenerationPoint::has_wvaroperation() const {
  return _internal_has_wvaroperation();
}
inline const ::commonmodule::WVarCSG& GenerationPoint::_internal_wvaroperation() const {
  const ::commonmodule::WVarCSG* p = _impl_.wvaroperation_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::WVarCSG&>(
      ::commonmodule::_WVarCSG_default_instance_);
}
inline const ::commonmodule::WVarCSG& GenerationPoint::wvaroperation() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationPoint.wVarOperation)
  return _internal_wvaroperation();
}
inline void GenerationPoint::unsafe_arena_set_allocated_wvaroperation(
    ::commonmodule::WVarCSG* wvaroperation) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.wvaroperation_);
  }
  _impl_.wvaroperation_ = wvaroperation;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationPoint.wVarOperation)
}
inline ::commonmodule::WVarCSG* GenerationPoint::release_wvaroperation() {
  
  ::commonmodule::WVarCSG* temp = _impl_.wvaroperation_;
  _impl_.wvaroperation_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::commonmodule::WVarCSG* GenerationPoint::unsafe_arena_release_wvaroperation() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationPoint.wVarOperation)
  
  ::commonmodule::WVarCSG* temp = _impl_.wvaroperation_;
  _impl_.wvaroperation_ = nullptr;
  return temp;
}
inline ::commonmodule::WVarCSG* GenerationPoint::_internal_mutable_wvaroperation() {
  
  if (_impl_.wvaroperation_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::WVarCSG>(GetArenaForAllocation());
    _impl_.wvaroperation_ = p;
  }
  return _impl_.wvaroperation_;
}
inline ::commonmodule::WVarCSG* GenerationPoint::mutable_wvaroperation() {
  ::commonmodule::WVarCSG* _msg = _internal_mutable_wvaroperation();
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationPoint.wVarOperation)
  return _msg;
}
inline void GenerationPoint::set_allocated_wvaroperation(::commonmodule::WVarCSG* wvaroperation) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.wvaroperation_);
  }
  if (wvaroperation) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(wvaroperation));
    if (message_arena != submessage_arena) {
      wvaroperation = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, wvaroperation, submessage_arena);
    }

  } else {

  }
  _impl_.wvaroperation_ = wvaroperation;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationPoint.wVarOperation)
}

// -------------------------------------------------------------------

// GenerationCSG

// repeated .generationmodule.GenerationPoint crvPts = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
inline int GenerationCSG::_internal_crvpts_size() const {
  return _impl_.crvpts_.size();
}
inline int GenerationCSG::crvpts_size() const {
  return _internal_crvpts_size();
}
inline void GenerationCSG::clear_crvpts() {
  _impl_.crvpts_.Clear();
}
inline ::generationmodule::GenerationPoint* GenerationCSG::mutable_crvpts(int index) {
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationCSG.crvPts)
  return _impl_.crvpts_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::generationmodule::GenerationPoint >*
GenerationCSG::mutable_crvpts() {
  // @@protoc_insertion_point(field_mutable_list:generationmodule.GenerationCSG.crvPts)
  return &_impl_.crvpts_;
}
inline const ::generationmodule::GenerationPoint& GenerationCSG::_internal_crvpts(int index) const {
  return _impl_.crvpts_.Get(index);
}
inline const ::generationmodule::GenerationPoint& GenerationCSG::crvpts(int index) const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationCSG.crvPts)
  return _internal_crvpts(index);
}
inline ::generationmodule::GenerationPoint* GenerationCSG::_internal_add_crvpts() {
  return _impl_.crvpts_.Add();
}
inline ::generationmodule::GenerationPoint* GenerationCSG::add_crvpts() {
  ::generationmodule::GenerationPoint* _add = _internal_add_crvpts();
  // @@protoc_insertion_point(field_add:generationmodule.GenerationCSG.crvPts)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::generationmodule::GenerationPoint >&
GenerationCSG::crvpts() const {
  // @@protoc_insertion_point(field_list:generationmodule.GenerationCSG.crvPts)
  return _impl_.crvpts_;
}

// -------------------------------------------------------------------

// GenerationControlScheduleFSCH

// .generationmodule.GenerationCSG ValDCSG = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
inline bool GenerationControlScheduleFSCH::_internal_has_valdcsg() const {
  return this != internal_default_instance() && _impl_.valdcsg_ != nullptr;
}
inline bool GenerationControlScheduleFSCH::has_valdcsg() const {
  return _internal_has_valdcsg();
}
inline void GenerationControlScheduleFSCH::clear_valdcsg() {
  if (GetArenaForAllocation() == nullptr && _impl_.valdcsg_ != nullptr) {
    delete _impl_.valdcsg_;
  }
  _impl_.valdcsg_ = nullptr;
}
inline const ::generationmodule::GenerationCSG& GenerationControlScheduleFSCH::_internal_valdcsg() const {
  const ::generationmodule::GenerationCSG* p = _impl_.valdcsg_;
  return p != nullptr ? *p : reinterpret_cast<const ::generationmodule::GenerationCSG&>(
      ::generationmodule::_GenerationCSG_default_instance_);
}
inline const ::generationmodule::GenerationCSG& GenerationControlScheduleFSCH::valdcsg() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationControlScheduleFSCH.ValDCSG)
  return _internal_valdcsg();
}
inline void GenerationControlScheduleFSCH::unsafe_arena_set_allocated_valdcsg(
    ::generationmodule::GenerationCSG* valdcsg) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.valdcsg_);
  }
  _impl_.valdcsg_ = valdcsg;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationControlScheduleFSCH.ValDCSG)
}
inline ::generationmodule::GenerationCSG* GenerationControlScheduleFSCH::release_valdcsg() {
  
  ::generationmodule::GenerationCSG* temp = _impl_.valdcsg_;
  _impl_.valdcsg_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::generationmodule::GenerationCSG* GenerationControlScheduleFSCH::unsafe_arena_release_valdcsg() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationControlScheduleFSCH.ValDCSG)
  
  ::generationmodule::GenerationCSG* temp = _impl_.valdcsg_;
  _impl_.valdcsg_ = nullptr;
  return temp;
}
inline ::generationmodule::GenerationCSG* GenerationControlScheduleFSCH::_internal_mutable_valdcsg() {
  
  if (_impl_.valdcsg_ == nullptr) {
    auto* p = CreateMaybeMessage<::generationmodule::GenerationCSG>(GetArenaForAllocation());
    _impl_.valdcsg_ = p;
  }
  return _impl_.valdcsg_;
}
inline ::generationmodule::GenerationCSG* GenerationControlScheduleFSCH::mutable_valdcsg() {
  ::generationmodule::GenerationCSG* _msg = _internal_mutable_valdcsg();
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationControlScheduleFSCH.ValDCSG)
  return _msg;
}
inline void GenerationControlScheduleFSCH::set_allocated_valdcsg(::generationmodule::GenerationCSG* valdcsg) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.valdcsg_;
  }
  if (valdcsg) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(valdcsg);
    if (message_arena != submessage_arena) {
      valdcsg = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, valdcsg, submessage_arena);
    }

  } else {

  }
  _impl_.valdcsg_ = valdcsg;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationControlScheduleFSCH.ValDCSG)
}

// -------------------------------------------------------------------

// GenerationControlFSCC

// .commonmodule.ControlFSCC controlFSCC = 1 [(.uml.option_parent_message) = true];
inline bool GenerationControlFSCC::_internal_has_controlfscc() const {
  return this != internal_default_instance() && _impl_.controlfscc_ != nullptr;
}
inline bool GenerationControlFSCC::has_controlfscc() const {
  return _internal_has_controlfscc();
}
inline const ::commonmodule::ControlFSCC& GenerationControlFSCC::_internal_controlfscc() const {
  const ::commonmodule::ControlFSCC* p = _impl_.controlfscc_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::ControlFSCC&>(
      ::commonmodule::_ControlFSCC_default_instance_);
}
inline const ::commonmodule::ControlFSCC& GenerationControlFSCC::controlfscc() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationControlFSCC.controlFSCC)
  return _internal_controlfscc();
}
inline void GenerationControlFSCC::unsafe_arena_set_allocated_controlfscc(
    ::commonmodule::ControlFSCC* controlfscc) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.controlfscc_);
  }
  _impl_.controlfscc_ = controlfscc;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationControlFSCC.controlFSCC)
}
inline ::commonmodule::ControlFSCC* GenerationControlFSCC::release_controlfscc() {
  
  ::commonmodule::ControlFSCC* temp = _impl_.controlfscc_;
  _impl_.controlfscc_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::commonmodule::ControlFSCC* GenerationControlFSCC::unsafe_arena_release_controlfscc() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationControlFSCC.controlFSCC)
  
  ::commonmodule::ControlFSCC* temp = _impl_.controlfscc_;
  _impl_.controlfscc_ = nullptr;
  return temp;
}
inline ::commonmodule::ControlFSCC* GenerationControlFSCC::_internal_mutable_controlfscc() {
  
  if (_impl_.controlfscc_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::ControlFSCC>(GetArenaForAllocation());
    _impl_.controlfscc_ = p;
  }
  return _impl_.controlfscc_;
}
inline ::commonmodule::ControlFSCC* GenerationControlFSCC::mutable_controlfscc() {
  ::commonmodule::ControlFSCC* _msg = _internal_mutable_controlfscc();
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationControlFSCC.controlFSCC)
  return _msg;
}
inline void GenerationControlFSCC::set_allocated_controlfscc(::commonmodule::ControlFSCC* controlfscc) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.controlfscc_);
  }
  if (controlfscc) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(controlfscc));
    if (message_arena != submessage_arena) {
      controlfscc = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, controlfscc, submessage_arena);
    }

  } else {

  }
  _impl_.controlfscc_ = controlfscc;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationControlFSCC.controlFSCC)
}

// .generationmodule.GenerationControlScheduleFSCH GenerationControlScheduleFSCH = 2;
inline bool GenerationControlFSCC::_internal_has_generationcontrolschedulefsch() const {
  return this != internal_default_instance() && _impl_.generationcontrolschedulefsch_ != nullptr;
}
inline bool GenerationControlFSCC::has_generationcontrolschedulefsch() const {
  return _internal_has_generationcontrolschedulefsch();
}
inline void GenerationControlFSCC::clear_generationcontrolschedulefsch() {
  if (GetArenaForAllocation() == nullptr && _impl_.generationcontrolschedulefsch_ != nullptr) {
    delete _impl_.generationcontrolschedulefsch_;
  }
  _impl_.generationcontrolschedulefsch_ = nullptr;
}
inline const ::generationmodule::GenerationControlScheduleFSCH& GenerationControlFSCC::_internal_generationcontrolschedulefsch() const {
  const ::generationmodule::GenerationControlScheduleFSCH* p = _impl_.generationcontrolschedulefsch_;
  return p != nullptr ? *p : reinterpret_cast<const ::generationmodule::GenerationControlScheduleFSCH&>(
      ::generationmodule::_GenerationControlScheduleFSCH_default_instance_);
}
inline const ::generationmodule::GenerationControlScheduleFSCH& GenerationControlFSCC::generationcontrolschedulefsch() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationControlFSCC.GenerationControlScheduleFSCH)
  return _internal_generationcontrolschedulefsch();
}
inline void GenerationControlFSCC::unsafe_arena_set_allocated_generationcontrolschedulefsch(
    ::generationmodule::GenerationControlScheduleFSCH* generationcontrolschedulefsch) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.generationcontrolschedulefsch_);
  }
  _impl_.generationcontrolschedulefsch_ = generationcontrolschedulefsch;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationControlFSCC.GenerationControlScheduleFSCH)
}
inline ::generationmodule::GenerationControlScheduleFSCH* GenerationControlFSCC::release_generationcontrolschedulefsch() {
  
  ::generationmodule::GenerationControlScheduleFSCH* temp = _impl_.generationcontrolschedulefsch_;
  _impl_.generationcontrolschedulefsch_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::generationmodule::GenerationControlScheduleFSCH* GenerationControlFSCC::unsafe_arena_release_generationcontrolschedulefsch() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationControlFSCC.GenerationControlScheduleFSCH)
  
  ::generationmodule::GenerationControlScheduleFSCH* temp = _impl_.generationcontrolschedulefsch_;
  _impl_.generationcontrolschedulefsch_ = nullptr;
  return temp;
}
inline ::generationmodule::GenerationControlScheduleFSCH* GenerationControlFSCC::_internal_mutable_generationcontrolschedulefsch() {
  
  if (_impl_.generationcontrolschedulefsch_ == nullptr) {
    auto* p = CreateMaybeMessage<::generationmodule::GenerationControlScheduleFSCH>(GetArenaForAllocation());
    _impl_.generationcontrolschedulefsch_ = p;
  }
  return _impl_.generationcontrolschedulefsch_;
}
inline ::generationmodule::GenerationControlScheduleFSCH* GenerationControlFSCC::mutable_generationcontrolschedulefsch() {
  ::generationmodule::GenerationControlScheduleFSCH* _msg = _internal_mutable_generationcontrolschedulefsch();
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationControlFSCC.GenerationControlScheduleFSCH)
  return _msg;
}
inline void GenerationControlFSCC::set_allocated_generationcontrolschedulefsch(::generationmodule::GenerationControlScheduleFSCH* generationcontrolschedulefsch) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.generationcontrolschedulefsch_;
  }
  if (generationcontrolschedulefsch) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(generationcontrolschedulefsch);
    if (message_arena != submessage_arena) {
      generationcontrolschedulefsch = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, generationcontrolschedulefsch, submessage_arena);
    }

  } else {

  }
  _impl_.generationcontrolschedulefsch_ = generationcontrolschedulefsch;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationControlFSCC.GenerationControlScheduleFSCH)
}

// -------------------------------------------------------------------

// GenerationControl

// .commonmodule.ControlValue controlValue = 1 [(.uml.option_parent_message) = true];
inline bool GenerationControl::_internal_has_controlvalue() const {
  return this != internal_default_instance() && _impl_.controlvalue_ != nullptr;
}
inline bool GenerationControl::has_controlvalue() const {
  return _internal_has_controlvalue();
}
inline const ::commonmodule::ControlValue& GenerationControl::_internal_controlvalue() const {
  const ::commonmodule::ControlValue* p = _impl_.controlvalue_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::ControlValue&>(
      ::commonmodule::_ControlValue_default_instance_);
}
inline const ::commonmodule::ControlValue& GenerationControl::controlvalue() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationControl.controlValue)
  return _internal_controlvalue();
}
inline void GenerationControl::unsafe_arena_set_allocated_controlvalue(
    ::commonmodule::ControlValue* controlvalue) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.controlvalue_);
  }
  _impl_.controlvalue_ = controlvalue;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationControl.controlValue)
}
inline ::commonmodule::ControlValue* GenerationControl::release_controlvalue() {
  
  ::commonmodule::ControlValue* temp = _impl_.controlvalue_;
  _impl_.controlvalue_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::commonmodule::ControlValue* GenerationControl::unsafe_arena_release_controlvalue() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationControl.controlValue)
  
  ::commonmodule::ControlValue* temp = _impl_.controlvalue_;
  _impl_.controlvalue_ = nullptr;
  return temp;
}
inline ::commonmodule::ControlValue* GenerationControl::_internal_mutable_controlvalue() {
  
  if (_impl_.controlvalue_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::ControlValue>(GetArenaForAllocation());
    _impl_.controlvalue_ = p;
  }
  return _impl_.controlvalue_;
}
inline ::commonmodule::ControlValue* GenerationControl::mutable_controlvalue() {
  ::commonmodule::ControlValue* _msg = _internal_mutable_controlvalue();
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationControl.controlValue)
  return _msg;
}
inline void GenerationControl::set_allocated_controlvalue(::commonmodule::ControlValue* controlvalue) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.controlvalue_);
  }
  if (controlvalue) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(controlvalue));
    if (message_arena != submessage_arena) {
      controlvalue = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, controlvalue, submessage_arena);
    }

  } else {

  }
  _impl_.controlvalue_ = controlvalue;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationControl.controlValue)
}

// .commonmodule.CheckConditions check = 2;
inline bool GenerationControl::_internal_has_check() const {
  return this != internal_default_instance() && _impl_.check_ != nullptr;
}
inline bool GenerationControl::has_check() const {
  return _internal_has_check();
}
inline const ::commonmodule::CheckConditions& GenerationControl::_internal_check() const {
  const ::commonmodule::CheckConditions* p = _impl_.check_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::CheckConditions&>(
      ::commonmodule::_CheckConditions_default_instance_);
}
inline const ::commonmodule::CheckConditions& GenerationControl::check() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationControl.check)
  return _internal_check();
}
inline void GenerationControl::unsafe_arena_set_allocated_check(
    ::commonmodule::CheckConditions* check) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.check_);
  }
  _impl_.check_ = check;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationControl.check)
}
inline ::commonmodule::CheckConditions* GenerationControl::release_check() {
  
  ::commonmodule::CheckConditions* temp = _impl_.check_;
  _impl_.check_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::commonmodule::CheckConditions* GenerationControl::unsafe_arena_release_check() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationControl.check)
  
  ::commonmodule::CheckConditions* temp = _impl_.check_;
  _impl_.check_ = nullptr;
  return temp;
}
inline ::commonmodule::CheckConditions* GenerationControl::_internal_mutable_check() {
  
  if (_impl_.check_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::CheckConditions>(GetArenaForAllocation());
    _impl_.check_ = p;
  }
  return _impl_.check_;
}
inline ::commonmodule::CheckConditions* GenerationControl::mutable_check() {
  ::commonmodule::CheckConditions* _msg = _internal_mutable_check();
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationControl.check)
  return _msg;
}
inline void GenerationControl::set_allocated_check(::commonmodule::CheckConditions* check) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.check_);
  }
  if (check) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(check));
    if (message_arena != submessage_arena) {
      check = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, check, submessage_arena);
    }

  } else {

  }
  _impl_.check_ = check;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationControl.check)
}

// .generationmodule.GenerationControlFSCC generationControlFSCC = 3;
inline bool GenerationControl::_internal_has_generationcontrolfscc() const {
  return this != internal_default_instance() && _impl_.generationcontrolfscc_ != nullptr;
}
inline bool GenerationControl::has_generationcontrolfscc() const {
  return _internal_has_generationcontrolfscc();
}
inline void GenerationControl::clear_generationcontrolfscc() {
  if (GetArenaForAllocation() == nullptr && _impl_.generationcontrolfscc_ != nullptr) {
    delete _impl_.generationcontrolfscc_;
  }
  _impl_.generationcontrolfscc_ = nullptr;
}
inline const ::generationmodule::GenerationControlFSCC& GenerationControl::_internal_generationcontrolfscc() const {
  const ::generationmodule::GenerationControlFSCC* p = _impl_.generationcontrolfscc_;
  return p != nullptr ? *p : reinterpret_cast<const ::generationmodule::GenerationControlFSCC&>(
      ::generationmodule::_GenerationControlFSCC_default_instance_);
}
inline const ::generationmodule::GenerationControlFSCC& GenerationControl::generationcontrolfscc() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationControl.generationControlFSCC)
  return _internal_generationcontrolfscc();
}
inline void GenerationControl::unsafe_arena_set_allocated_generationcontrolfscc(
    ::generationmodule::GenerationControlFSCC* generationcontrolfscc) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.generationcontrolfscc_);
  }
  _impl_.generationcontrolfscc_ = generationcontrolfscc;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationControl.generationControlFSCC)
}
inline ::generationmodule::GenerationControlFSCC* GenerationControl::release_generationcontrolfscc() {
  
  ::generationmodule::GenerationControlFSCC* temp = _impl_.generationcontrolfscc_;
  _impl_.generationcontrolfscc_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::generationmodule::GenerationControlFSCC* GenerationControl::unsafe_arena_release_generationcontrolfscc() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationControl.generationControlFSCC)
  
  ::generationmodule::GenerationControlFSCC* temp = _impl_.generationcontrolfscc_;
  _impl_.generationcontrolfscc_ = nullptr;
  return temp;
}
inline ::generationmodule::GenerationControlFSCC* GenerationControl::_internal_mutable_generationcontrolfscc() {
  
  if (_impl_.generationcontrolfscc_ == nullptr) {
    auto* p = CreateMaybeMessage<::generationmodule::GenerationControlFSCC>(GetArenaForAllocation());
    _impl_.generationcontrolfscc_ = p;
  }
  return _impl_.generationcontrolfscc_;
}
inline ::generationmodule::GenerationControlFSCC* GenerationControl::mutable_generationcontrolfscc() {
  ::generationmodule::GenerationControlFSCC* _msg = _internal_mutable_generationcontrolfscc();
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationControl.generationControlFSCC)
  return _msg;
}
inline void GenerationControl::set_allocated_generationcontrolfscc(::generationmodule::GenerationControlFSCC* generationcontrolfscc) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.generationcontrolfscc_;
  }
  if (generationcontrolfscc) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(generationcontrolfscc);
    if (message_arena != submessage_arena) {
      generationcontrolfscc = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, generationcontrolfscc, submessage_arena);
    }

  } else {

  }
  _impl_.generationcontrolfscc_ = generationcontrolfscc;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationControl.generationControlFSCC)
}

// -------------------------------------------------------------------

// GenerationControlProfile

// .commonmodule.ControlMessageInfo controlMessageInfo = 1 [(.uml.option_parent_message) = true];
inline bool GenerationControlProfile::_internal_has_controlmessageinfo() const {
  return this != internal_default_instance() && _impl_.controlmessageinfo_ != nullptr;
}
inline bool GenerationControlProfile::has_controlmessageinfo() const {
  return _internal_has_controlmessageinfo();
}
inline const ::commonmodule::ControlMessageInfo& GenerationControlProfile::_internal_controlmessageinfo() const {
  const ::commonmodule::ControlMessageInfo* p = _impl_.controlmessageinfo_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::ControlMessageInfo&>(
      ::commonmodule::_ControlMessageInfo_default_instance_);
}
inline const ::commonmodule::ControlMessageInfo& GenerationControlProfile::controlmessageinfo() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationControlProfile.controlMessageInfo)
  return _internal_controlmessageinfo();
}
inline void GenerationControlProfile::unsafe_arena_set_allocated_controlmessageinfo(
    ::commonmodule::ControlMessageInfo* controlmessageinfo) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.controlmessageinfo_);
  }
  _impl_.controlmessageinfo_ = controlmessageinfo;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationControlProfile.controlMessageInfo)
}
inline ::commonmodule::ControlMessageInfo* GenerationControlProfile::release_controlmessageinfo() {
  
  ::commonmodule::ControlMessageInfo* temp = _impl_.controlmessageinfo_;
  _impl_.controlmessageinfo_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::commonmodule::ControlMessageInfo* GenerationControlProfile::unsafe_arena_release_controlmessageinfo() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationControlProfile.controlMessageInfo)
  
  ::commonmodule::ControlMessageInfo* temp = _impl_.controlmessageinfo_;
  _impl_.controlmessageinfo_ = nullptr;
  return temp;
}
inline ::commonmodule::ControlMessageInfo* GenerationControlProfile::_internal_mutable_controlmessageinfo() {
  
  if (_impl_.controlmessageinfo_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::ControlMessageInfo>(GetArenaForAllocation());
    _impl_.controlmessageinfo_ = p;
  }
  return _impl_.controlmessageinfo_;
}
inline ::commonmodule::ControlMessageInfo* GenerationControlProfile::mutable_controlmessageinfo() {
  ::commonmodule::ControlMessageInfo* _msg = _internal_mutable_controlmessageinfo();
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationControlProfile.controlMessageInfo)
  return _msg;
}
inline void GenerationControlProfile::set_allocated_controlmessageinfo(::commonmodule::ControlMessageInfo* controlmessageinfo) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.controlmessageinfo_);
  }
  if (controlmessageinfo) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(controlmessageinfo));
    if (message_arena != submessage_arena) {
      controlmessageinfo = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, controlmessageinfo, submessage_arena);
    }

  } else {

  }
  _impl_.controlmessageinfo_ = controlmessageinfo;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationControlProfile.controlMessageInfo)
}

// .generationmodule.GeneratingUnit generatingUnit = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
inline bool GenerationControlProfile::_internal_has_generatingunit() const {
  return this != internal_default_instance() && _impl_.generatingunit_ != nullptr;
}
inline bool GenerationControlProfile::has_generatingunit() const {
  return _internal_has_generatingunit();
}
inline void GenerationControlProfile::clear_generatingunit() {
  if (GetArenaForAllocation() == nullptr && _impl_.generatingunit_ != nullptr) {
    delete _impl_.generatingunit_;
  }
  _impl_.generatingunit_ = nullptr;
}
inline const ::generationmodule::GeneratingUnit& GenerationControlProfile::_internal_generatingunit() const {
  const ::generationmodule::GeneratingUnit* p = _impl_.generatingunit_;
  return p != nullptr ? *p : reinterpret_cast<const ::generationmodule::GeneratingUnit&>(
      ::generationmodule::_GeneratingUnit_default_instance_);
}
inline const ::generationmodule::GeneratingUnit& GenerationControlProfile::generatingunit() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationControlProfile.generatingUnit)
  return _internal_generatingunit();
}
inline void GenerationControlProfile::unsafe_arena_set_allocated_generatingunit(
    ::generationmodule::GeneratingUnit* generatingunit) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.generatingunit_);
  }
  _impl_.generatingunit_ = generatingunit;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationControlProfile.generatingUnit)
}
inline ::generationmodule::GeneratingUnit* GenerationControlProfile::release_generatingunit() {
  
  ::generationmodule::GeneratingUnit* temp = _impl_.generatingunit_;
  _impl_.generatingunit_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::generationmodule::GeneratingUnit* GenerationControlProfile::unsafe_arena_release_generatingunit() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationControlProfile.generatingUnit)
  
  ::generationmodule::GeneratingUnit* temp = _impl_.generatingunit_;
  _impl_.generatingunit_ = nullptr;
  return temp;
}
inline ::generationmodule::GeneratingUnit* GenerationControlProfile::_internal_mutable_generatingunit() {
  
  if (_impl_.generatingunit_ == nullptr) {
    auto* p = CreateMaybeMessage<::generationmodule::GeneratingUnit>(GetArenaForAllocation());
    _impl_.generatingunit_ = p;
  }
  return _impl_.generatingunit_;
}
inline ::generationmodule::GeneratingUnit* GenerationControlProfile::mutable_generatingunit() {
  ::generationmodule::GeneratingUnit* _msg = _internal_mutable_generatingunit();
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationControlProfile.generatingUnit)
  return _msg;
}
inline void GenerationControlProfile::set_allocated_generatingunit(::generationmodule::GeneratingUnit* generatingunit) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.generatingunit_;
  }
  if (generatingunit) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(generatingunit);
    if (message_arena != submessage_arena) {
      generatingunit = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, generatingunit, submessage_arena);
    }

  } else {

  }
  _impl_.generatingunit_ = generatingunit;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationControlProfile.generatingUnit)
}

// .generationmodule.GenerationControl generationControl = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
inline bool GenerationControlProfile::_internal_has_generationcontrol() const {
  return this != internal_default_instance() && _impl_.generationcontrol_ != nullptr;
}
inline bool GenerationControlProfile::has_generationcontrol() const {
  return _internal_has_generationcontrol();
}
inline void GenerationControlProfile::clear_generationcontrol() {
  if (GetArenaForAllocation() == nullptr && _impl_.generationcontrol_ != nullptr) {
    delete _impl_.generationcontrol_;
  }
  _impl_.generationcontrol_ = nullptr;
}
inline const ::generationmodule::GenerationControl& GenerationControlProfile::_internal_generationcontrol() const {
  const ::generationmodule::GenerationControl* p = _impl_.generationcontrol_;
  return p != nullptr ? *p : reinterpret_cast<const ::generationmodule::GenerationControl&>(
      ::generationmodule::_GenerationControl_default_instance_);
}
inline const ::generationmodule::GenerationControl& GenerationControlProfile::generationcontrol() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationControlProfile.generationControl)
  return _internal_generationcontrol();
}
inline void GenerationControlProfile::unsafe_arena_set_allocated_generationcontrol(
    ::generationmodule::GenerationControl* generationcontrol) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.generationcontrol_);
  }
  _impl_.generationcontrol_ = generationcontrol;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationControlProfile.generationControl)
}
inline ::generationmodule::GenerationControl* GenerationControlProfile::release_generationcontrol() {
  
  ::generationmodule::GenerationControl* temp = _impl_.generationcontrol_;
  _impl_.generationcontrol_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::generationmodule::GenerationControl* GenerationControlProfile::unsafe_arena_release_generationcontrol() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationControlProfile.generationControl)
  
  ::generationmodule::GenerationControl* temp = _impl_.generationcontrol_;
  _impl_.generationcontrol_ = nullptr;
  return temp;
}
inline ::generationmodule::GenerationControl* GenerationControlProfile::_internal_mutable_generationcontrol() {
  
  if (_impl_.generationcontrol_ == nullptr) {
    auto* p = CreateMaybeMessage<::generationmodule::GenerationControl>(GetArenaForAllocation());
    _impl_.generationcontrol_ = p;
  }
  return _impl_.generationcontrol_;
}
inline ::generationmodule::GenerationControl* GenerationControlProfile::mutable_generationcontrol() {
  ::generationmodule::GenerationControl* _msg = _internal_mutable_generationcontrol();
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationControlProfile.generationControl)
  return _msg;
}
inline void GenerationControlProfile::set_allocated_generationcontrol(::generationmodule::GenerationControl* generationcontrol) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.generationcontrol_;
  }
  if (generationcontrol) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(generationcontrol);
    if (message_arena != submessage_arena) {
      generationcontrol = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, generationcontrol, submessage_arena);
    }

  } else {

  }
  _impl_.generationcontrol_ = generationcontrol;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationControlProfile.generationControl)
}

// -------------------------------------------------------------------

// DroopParameter

// .google.protobuf.FloatValue slope = 1;
inline bool DroopParameter::_internal_has_slope() const {
  return this != internal_default_instance() && _impl_.slope_ != nullptr;
}
inline bool DroopParameter::has_slope() const {
  return _internal_has_slope();
}
inline const ::PROTOBUF_NAMESPACE_ID::FloatValue& DroopParameter::_internal_slope() const {
  const ::PROTOBUF_NAMESPACE_ID::FloatValue* p = _impl_.slope_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::FloatValue&>(
      ::PROTOBUF_NAMESPACE_ID::_FloatValue_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::FloatValue& DroopParameter::slope() const {
  // @@protoc_insertion_point(field_get:generationmodule.DroopParameter.slope)
  return _internal_slope();
}
inline void DroopParameter::unsafe_arena_set_allocated_slope(
    ::PROTOBUF_NAMESPACE_ID::FloatValue* slope) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.slope_);
  }
  _impl_.slope_ = slope;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.DroopParameter.slope)
}
inline ::PROTOBUF_NAMESPACE_ID::FloatValue* DroopParameter::release_slope() {
  
  ::PROTOBUF_NAMESPACE_ID::FloatValue* temp = _impl_.slope_;
  _impl_.slope_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::FloatValue* DroopParameter::unsafe_arena_release_slope() {
  // @@protoc_insertion_point(field_release:generationmodule.DroopParameter.slope)
  
  ::PROTOBUF_NAMESPACE_ID::FloatValue* temp = _impl_.slope_;
  _impl_.slope_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::FloatValue* DroopParameter::_internal_mutable_slope() {
  
  if (_impl_.slope_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::FloatValue>(GetArenaForAllocation());
    _impl_.slope_ = p;
  }
  return _impl_.slope_;
}
inline ::PROTOBUF_NAMESPACE_ID::FloatValue* DroopParameter::mutable_slope() {
  ::PROTOBUF_NAMESPACE_ID::FloatValue* _msg = _internal_mutable_slope();
  // @@protoc_insertion_point(field_mutable:generationmodule.DroopParameter.slope)
  return _msg;
}
inline void DroopParameter::set_allocated_slope(::PROTOBUF_NAMESPACE_ID::FloatValue* slope) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.slope_);
  }
  if (slope) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(slope));
    if (message_arena != submessage_arena) {
      slope = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, slope, submessage_arena);
    }

  } else {

  }
  _impl_.slope_ = slope;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.DroopParameter.slope)
}

// .google.protobuf.FloatValue unloadedOffset = 2;
inline bool DroopParameter::_internal_has_unloadedoffset() const {
  return this != internal_default_instance() && _impl_.unloadedoffset_ != nullptr;
}
inline bool DroopParameter::has_unloadedoffset() const {
  return _internal_has_unloadedoffset();
}
inline const ::PROTOBUF_NAMESPACE_ID::FloatValue& DroopParameter::_internal_unloadedoffset() const {
  const ::PROTOBUF_NAMESPACE_ID::FloatValue* p = _impl_.unloadedoffset_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::FloatValue&>(
      ::PROTOBUF_NAMESPACE_ID::_FloatValue_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::FloatValue& DroopParameter::unloadedoffset() const {
  // @@protoc_insertion_point(field_get:generationmodule.DroopParameter.unloadedOffset)
  return _internal_unloadedoffset();
}
inline void DroopParameter::unsafe_arena_set_allocated_unloadedoffset(
    ::PROTOBUF_NAMESPACE_ID::FloatValue* unloadedoffset) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.unloadedoffset_);
  }
  _impl_.unloadedoffset_ = unloadedoffset;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.DroopParameter.unloadedOffset)
}
inline ::PROTOBUF_NAMESPACE_ID::FloatValue* DroopParameter::release_unloadedoffset() {
  
  ::PROTOBUF_NAMESPACE_ID::FloatValue* temp = _impl_.unloadedoffset_;
  _impl_.unloadedoffset_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::FloatValue* DroopParameter::unsafe_arena_release_unloadedoffset() {
  // @@protoc_insertion_point(field_release:generationmodule.DroopParameter.unloadedOffset)
  
  ::PROTOBUF_NAMESPACE_ID::FloatValue* temp = _impl_.unloadedoffset_;
  _impl_.unloadedoffset_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::FloatValue* DroopParameter::_internal_mutable_unloadedoffset() {
  
  if (_impl_.unloadedoffset_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::FloatValue>(GetArenaForAllocation());
    _impl_.unloadedoffset_ = p;
  }
  return _impl_.unloadedoffset_;
}
inline ::PROTOBUF_NAMESPACE_ID::FloatValue* DroopParameter::mutable_unloadedoffset() {
  ::PROTOBUF_NAMESPACE_ID::FloatValue* _msg = _internal_mutable_unloadedoffset();
  // @@protoc_insertion_point(field_mutable:generationmodule.DroopParameter.unloadedOffset)
  return _msg;
}
inline void DroopParameter::set_allocated_unloadedoffset(::PROTOBUF_NAMESPACE_ID::FloatValue* unloadedoffset) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.unloadedoffset_);
  }
  if (unloadedoffset) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(unloadedoffset));
    if (message_arena != submessage_arena) {
      unloadedoffset = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, unloadedoffset, submessage_arena);
    }

  } else {

  }
  _impl_.unloadedoffset_ = unloadedoffset;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.DroopParameter.unloadedOffset)
}

// -------------------------------------------------------------------

// RealPowerControl

// .generationmodule.DroopParameter droopSetpoint = 1;
inline bool RealPowerControl::_internal_has_droopsetpoint() const {
  return this != internal_default_instance() && _impl_.droopsetpoint_ != nullptr;
}
inline bool RealPowerControl::has_droopsetpoint() const {
  return _internal_has_droopsetpoint();
}
inline void RealPowerControl::clear_droopsetpoint() {
  if (GetArenaForAllocation() == nullptr && _impl_.droopsetpoint_ != nullptr) {
    delete _impl_.droopsetpoint_;
  }
  _impl_.droopsetpoint_ = nullptr;
}
inline const ::generationmodule::DroopParameter& RealPowerControl::_internal_droopsetpoint() const {
  const ::generationmodule::DroopParameter* p = _impl_.droopsetpoint_;
  return p != nullptr ? *p : reinterpret_cast<const ::generationmodule::DroopParameter&>(
      ::generationmodule::_DroopParameter_default_instance_);
}
inline const ::generationmodule::DroopParameter& RealPowerControl::droopsetpoint() const {
  // @@protoc_insertion_point(field_get:generationmodule.RealPowerControl.droopSetpoint)
  return _internal_droopsetpoint();
}
inline void RealPowerControl::unsafe_arena_set_allocated_droopsetpoint(
    ::generationmodule::DroopParameter* droopsetpoint) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.droopsetpoint_);
  }
  _impl_.droopsetpoint_ = droopsetpoint;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.RealPowerControl.droopSetpoint)
}
inline ::generationmodule::DroopParameter* RealPowerControl::release_droopsetpoint() {
  
  ::generationmodule::DroopParameter* temp = _impl_.droopsetpoint_;
  _impl_.droopsetpoint_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::generationmodule::DroopParameter* RealPowerControl::unsafe_arena_release_droopsetpoint() {
  // @@protoc_insertion_point(field_release:generationmodule.RealPowerControl.droopSetpoint)
  
  ::generationmodule::DroopParameter* temp = _impl_.droopsetpoint_;
  _impl_.droopsetpoint_ = nullptr;
  return temp;
}
inline ::generationmodule::DroopParameter* RealPowerControl::_internal_mutable_droopsetpoint() {
  
  if (_impl_.droopsetpoint_ == nullptr) {
    auto* p = CreateMaybeMessage<::generationmodule::DroopParameter>(GetArenaForAllocation());
    _impl_.droopsetpoint_ = p;
  }
  return _impl_.droopsetpoint_;
}
inline ::generationmodule::DroopParameter* RealPowerControl::mutable_droopsetpoint() {
  ::generationmodule::DroopParameter* _msg = _internal_mutable_droopsetpoint();
  // @@protoc_insertion_point(field_mutable:generationmodule.RealPowerControl.droopSetpoint)
  return _msg;
}
inline void RealPowerControl::set_allocated_droopsetpoint(::generationmodule::DroopParameter* droopsetpoint) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.droopsetpoint_;
  }
  if (droopsetpoint) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(droopsetpoint);
    if (message_arena != submessage_arena) {
      droopsetpoint = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, droopsetpoint, submessage_arena);
    }

  } else {

  }
  _impl_.droopsetpoint_ = droopsetpoint;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.RealPowerControl.droopSetpoint)
}

// .google.protobuf.FloatValue isochronousSetpoint = 2;
inline bool RealPowerControl::_internal_has_isochronoussetpoint() const {
  return this != internal_default_instance() && _impl_.isochronoussetpoint_ != nullptr;
}
inline bool RealPowerControl::has_isochronoussetpoint() const {
  return _internal_has_isochronoussetpoint();
}
inline const ::PROTOBUF_NAMESPACE_ID::FloatValue& RealPowerControl::_internal_isochronoussetpoint() const {
  const ::PROTOBUF_NAMESPACE_ID::FloatValue* p = _impl_.isochronoussetpoint_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::FloatValue&>(
      ::PROTOBUF_NAMESPACE_ID::_FloatValue_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::FloatValue& RealPowerControl::isochronoussetpoint() const {
  // @@protoc_insertion_point(field_get:generationmodule.RealPowerControl.isochronousSetpoint)
  return _internal_isochronoussetpoint();
}
inline void RealPowerControl::unsafe_arena_set_allocated_isochronoussetpoint(
    ::PROTOBUF_NAMESPACE_ID::FloatValue* isochronoussetpoint) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.isochronoussetpoint_);
  }
  _impl_.isochronoussetpoint_ = isochronoussetpoint;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.RealPowerControl.isochronousSetpoint)
}
inline ::PROTOBUF_NAMESPACE_ID::FloatValue* RealPowerControl::release_isochronoussetpoint() {
  
  ::PROTOBUF_NAMESPACE_ID::FloatValue* temp = _impl_.isochronoussetpoint_;
  _impl_.isochronoussetpoint_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::FloatValue* RealPowerControl::unsafe_arena_release_isochronoussetpoint() {
  // @@protoc_insertion_point(field_release:generationmodule.RealPowerControl.isochronousSetpoint)
  
  ::PROTOBUF_NAMESPACE_ID::FloatValue* temp = _impl_.isochronoussetpoint_;
  _impl_.isochronoussetpoint_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::FloatValue* RealPowerControl::_internal_mutable_isochronoussetpoint() {
  
  if (_impl_.isochronoussetpoint_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::FloatValue>(GetArenaForAllocation());
    _impl_.isochronoussetpoint_ = p;
  }
  return _impl_.isochronoussetpoint_;
}
inline ::PROTOBUF_NAMESPACE_ID::FloatValue* RealPowerControl::mutable_isochronoussetpoint() {
  ::PROTOBUF_NAMESPACE_ID::FloatValue* _msg = _internal_mutable_isochronoussetpoint();
  // @@protoc_insertion_point(field_mutable:generationmodule.RealPowerControl.isochronousSetpoint)
  return _msg;
}
inline void RealPowerControl::set_allocated_isochronoussetpoint(::PROTOBUF_NAMESPACE_ID::FloatValue* isochronoussetpoint) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.isochronoussetpoint_);
  }
  if (isochronoussetpoint) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(isochronoussetpoint));
    if (message_arena != submessage_arena) {
      isochronoussetpoint = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, isochronoussetpoint, submessage_arena);
    }

  } else {

  }
  _impl_.isochronoussetpoint_ = isochronoussetpoint;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.RealPowerControl.isochronousSetpoint)
}

// .commonmodule.Optional_RealPowerControlKind realPowerControlMode = 3;
inline bool RealPowerControl::_internal_has_realpowercontrolmode() const {
  return this != internal_default_instance() && _impl_.realpowercontrolmode_ != nullptr;
}
inline bool RealPowerControl::has_realpowercontrolmode() const {
  return _internal_has_realpowercontrolmode();
}
inline const ::commonmodule::Optional_RealPowerControlKind& RealPowerControl::_internal_realpowercontrolmode() const {
  const ::commonmodule::Optional_RealPowerControlKind* p = _impl_.realpowercontrolmode_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::Optional_RealPowerControlKind&>(
      ::commonmodule::_Optional_RealPowerControlKind_default_instance_);
}
inline const ::commonmodule::Optional_RealPowerControlKind& RealPowerControl::realpowercontrolmode() const {
  // @@protoc_insertion_point(field_get:generationmodule.RealPowerControl.realPowerControlMode)
  return _internal_realpowercontrolmode();
}
inline void RealPowerControl::unsafe_arena_set_allocated_realpowercontrolmode(
    ::commonmodule::Optional_RealPowerControlKind* realpowercontrolmode) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.realpowercontrolmode_);
  }
  _impl_.realpowercontrolmode_ = realpowercontrolmode;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.RealPowerControl.realPowerControlMode)
}
inline ::commonmodule::Optional_RealPowerControlKind* RealPowerControl::release_realpowercontrolmode() {
  
  ::commonmodule::Optional_RealPowerControlKind* temp = _impl_.realpowercontrolmode_;
  _impl_.realpowercontrolmode_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::commonmodule::Optional_RealPowerControlKind* RealPowerControl::unsafe_arena_release_realpowercontrolmode() {
  // @@protoc_insertion_point(field_release:generationmodule.RealPowerControl.realPowerControlMode)
  
  ::commonmodule::Optional_RealPowerControlKind* temp = _impl_.realpowercontrolmode_;
  _impl_.realpowercontrolmode_ = nullptr;
  return temp;
}
inline ::commonmodule::Optional_RealPowerControlKind* RealPowerControl::_internal_mutable_realpowercontrolmode() {
  
  if (_impl_.realpowercontrolmode_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::Optional_RealPowerControlKind>(GetArenaForAllocation());
    _impl_.realpowercontrolmode_ = p;
  }
  return _impl_.realpowercontrolmode_;
}
inline ::commonmodule::Optional_RealPowerControlKind* RealPowerControl::mutable_realpowercontrolmode() {
  ::commonmodule::Optional_RealPowerControlKind* _msg = _internal_mutable_realpowercontrolmode();
  // @@protoc_insertion_point(field_mutable:generationmodule.RealPowerControl.realPowerControlMode)
  return _msg;
}
inline void RealPowerControl::set_allocated_realpowercontrolmode(::commonmodule::Optional_RealPowerControlKind* realpowercontrolmode) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.realpowercontrolmode_);
  }
  if (realpowercontrolmode) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(realpowercontrolmode));
    if (message_arena != submessage_arena) {
      realpowercontrolmode = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, realpowercontrolmode, submessage_arena);
    }

  } else {

  }
  _impl_.realpowercontrolmode_ = realpowercontrolmode;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.RealPowerControl.realPowerControlMode)
}

// .google.protobuf.FloatValue realPowerSetpoint = 4;
inline bool RealPowerControl::_internal_has_realpowersetpoint() const {
  return this != internal_default_instance() && _impl_.realpowersetpoint_ != nullptr;
}
inline bool RealPowerControl::has_realpowersetpoint() const {
  return _internal_has_realpowersetpoint();
}
inline const ::PROTOBUF_NAMESPACE_ID::FloatValue& RealPowerControl::_internal_realpowersetpoint() const {
  const ::PROTOBUF_NAMESPACE_ID::FloatValue* p = _impl_.realpowersetpoint_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::FloatValue&>(
      ::PROTOBUF_NAMESPACE_ID::_FloatValue_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::FloatValue& RealPowerControl::realpowersetpoint() const {
  // @@protoc_insertion_point(field_get:generationmodule.RealPowerControl.realPowerSetpoint)
  return _internal_realpowersetpoint();
}
inline void RealPowerControl::unsafe_arena_set_allocated_realpowersetpoint(
    ::PROTOBUF_NAMESPACE_ID::FloatValue* realpowersetpoint) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.realpowersetpoint_);
  }
  _impl_.realpowersetpoint_ = realpowersetpoint;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.RealPowerControl.realPowerSetpoint)
}
inline ::PROTOBUF_NAMESPACE_ID::FloatValue* RealPowerControl::release_realpowersetpoint() {
  
  ::PROTOBUF_NAMESPACE_ID::FloatValue* temp = _impl_.realpowersetpoint_;
  _impl_.realpowersetpoint_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::FloatValue* RealPowerControl::unsafe_arena_release_realpowersetpoint() {
  // @@protoc_insertion_point(field_release:generationmodule.RealPowerControl.realPowerSetpoint)
  
  ::PROTOBUF_NAMESPACE_ID::FloatValue* temp = _impl_.realpowersetpoint_;
  _impl_.realpowersetpoint_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::FloatValue* RealPowerControl::_internal_mutable_realpowersetpoint() {
  
  if (_impl_.realpowersetpoint_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::FloatValue>(GetArenaForAllocation());
    _impl_.realpowersetpoint_ = p;
  }
  return _impl_.realpowersetpoint_;
}
inline ::PROTOBUF_NAMESPACE_ID::FloatValue* RealPowerControl::mutable_realpowersetpoint() {
  ::PROTOBUF_NAMESPACE_ID::FloatValue* _msg = _internal_mutable_realpowersetpoint();
  // @@protoc_insertion_point(field_mutable:generationmodule.RealPowerControl.realPowerSetpoint)
  return _msg;
}
inline void RealPowerControl::set_allocated_realpowersetpoint(::PROTOBUF_NAMESPACE_ID::FloatValue* realpowersetpoint) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.realpowersetpoint_);
  }
  if (realpowersetpoint) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(realpowersetpoint));
    if (message_arena != submessage_arena) {
      realpowersetpoint = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, realpowersetpoint, submessage_arena);
    }

  } else {

  }
  _impl_.realpowersetpoint_ = realpowersetpoint;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.RealPowerControl.realPowerSetpoint)
}

// -------------------------------------------------------------------

// ReactivePowerControl

// .generationmodule.DroopParameter droopSetpoint = 1;
inline bool ReactivePowerControl::_internal_has_droopsetpoint() const {
  return this != internal_default_instance() && _impl_.droopsetpoint_ != nullptr;
}
inline bool ReactivePowerControl::has_droopsetpoint() const {
  return _internal_has_droopsetpoint();
}
inline void ReactivePowerControl::clear_droopsetpoint() {
  if (GetArenaForAllocation() == nullptr && _impl_.droopsetpoint_ != nullptr) {
    delete _impl_.droopsetpoint_;
  }
  _impl_.droopsetpoint_ = nullptr;
}
inline const ::generationmodule::DroopParameter& ReactivePowerControl::_internal_droopsetpoint() const {
  const ::generationmodule::DroopParameter* p = _impl_.droopsetpoint_;
  return p != nullptr ? *p : reinterpret_cast<const ::generationmodule::DroopParameter&>(
      ::generationmodule::_DroopParameter_default_instance_);
}
inline const ::generationmodule::DroopParameter& ReactivePowerControl::droopsetpoint() const {
  // @@protoc_insertion_point(field_get:generationmodule.ReactivePowerControl.droopSetpoint)
  return _internal_droopsetpoint();
}
inline void ReactivePowerControl::unsafe_arena_set_allocated_droopsetpoint(
    ::generationmodule::DroopParameter* droopsetpoint) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.droopsetpoint_);
  }
  _impl_.droopsetpoint_ = droopsetpoint;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.ReactivePowerControl.droopSetpoint)
}
inline ::generationmodule::DroopParameter* ReactivePowerControl::release_droopsetpoint() {
  
  ::generationmodule::DroopParameter* temp = _impl_.droopsetpoint_;
  _impl_.droopsetpoint_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::generationmodule::DroopParameter* ReactivePowerControl::unsafe_arena_release_droopsetpoint() {
  // @@protoc_insertion_point(field_release:generationmodule.ReactivePowerControl.droopSetpoint)
  
  ::generationmodule::DroopParameter* temp = _impl_.droopsetpoint_;
  _impl_.droopsetpoint_ = nullptr;
  return temp;
}
inline ::generationmodule::DroopParameter* ReactivePowerControl::_internal_mutable_droopsetpoint() {
  
  if (_impl_.droopsetpoint_ == nullptr) {
    auto* p = CreateMaybeMessage<::generationmodule::DroopParameter>(GetArenaForAllocation());
    _impl_.droopsetpoint_ = p;
  }
  return _impl_.droopsetpoint_;
}
inline ::generationmodule::DroopParameter* ReactivePowerControl::mutable_droopsetpoint() {
  ::generationmodule::DroopParameter* _msg = _internal_mutable_droopsetpoint();
  // @@protoc_insertion_point(field_mutable:generationmodule.ReactivePowerControl.droopSetpoint)
  return _msg;
}
inline void ReactivePowerControl::set_allocated_droopsetpoint(::generationmodule::DroopParameter* droopsetpoint) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.droopsetpoint_;
  }
  if (droopsetpoint) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(droopsetpoint);
    if (message_arena != submessage_arena) {
      droopsetpoint = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, droopsetpoint, submessage_arena);
    }

  } else {

  }
  _impl_.droopsetpoint_ = droopsetpoint;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.ReactivePowerControl.droopSetpoint)
}

// .google.protobuf.FloatValue powerFactorSetpoint = 2;
inline bool ReactivePowerControl::_internal_has_powerfactorsetpoint() const {
  return this != internal_default_instance() && _impl_.powerfactorsetpoint_ != nullptr;
}
inline bool ReactivePowerControl::has_powerfactorsetpoint() const {
  return _internal_has_powerfactorsetpoint();
}
inline const ::PROTOBUF_NAMESPACE_ID::FloatValue& ReactivePowerControl::_internal_powerfactorsetpoint() const {
  const ::PROTOBUF_NAMESPACE_ID::FloatValue* p = _impl_.powerfactorsetpoint_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::FloatValue&>(
      ::PROTOBUF_NAMESPACE_ID::_FloatValue_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::FloatValue& ReactivePowerControl::powerfactorsetpoint() const {
  // @@protoc_insertion_point(field_get:generationmodule.ReactivePowerControl.powerFactorSetpoint)
  return _internal_powerfactorsetpoint();
}
inline void ReactivePowerControl::unsafe_arena_set_allocated_powerfactorsetpoint(
    ::PROTOBUF_NAMESPACE_ID::FloatValue* powerfactorsetpoint) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.powerfactorsetpoint_);
  }
  _impl_.powerfactorsetpoint_ = powerfactorsetpoint;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.ReactivePowerControl.powerFactorSetpoint)
}
inline ::PROTOBUF_NAMESPACE_ID::FloatValue* ReactivePowerControl::release_powerfactorsetpoint() {
  
  ::PROTOBUF_NAMESPACE_ID::FloatValue* temp = _impl_.powerfactorsetpoint_;
  _impl_.powerfactorsetpoint_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::FloatValue* ReactivePowerControl::unsafe_arena_release_powerfactorsetpoint() {
  // @@protoc_insertion_point(field_release:generationmodule.ReactivePowerControl.powerFactorSetpoint)
  
  ::PROTOBUF_NAMESPACE_ID::FloatValue* temp = _impl_.powerfactorsetpoint_;
  _impl_.powerfactorsetpoint_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::FloatValue* ReactivePowerControl::_internal_mutable_powerfactorsetpoint() {
  
  if (_impl_.powerfactorsetpoint_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::FloatValue>(GetArenaForAllocation());
    _impl_.powerfactorsetpoint_ = p;
  }
  return _impl_.powerfactorsetpoint_;
}
inline ::PROTOBUF_NAMESPACE_ID::FloatValue* ReactivePowerControl::mutable_powerfactorsetpoint() {
  ::PROTOBUF_NAMESPACE_ID::FloatValue* _msg = _internal_mutable_powerfactorsetpoint();
  // @@protoc_insertion_point(field_mutable:generationmodule.ReactivePowerControl.powerFactorSetpoint)
  return _msg;
}
inline void ReactivePowerControl::set_allocated_powerfactorsetpoint(::PROTOBUF_NAMESPACE_ID::FloatValue* powerfactorsetpoint) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.powerfactorsetpoint_);
  }
  if (powerfactorsetpoint) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(powerfactorsetpoint));
    if (message_arena != submessage_arena) {
      powerfactorsetpoint = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, powerfactorsetpoint, submessage_arena);
    }

  } else {

  }
  _impl_.powerfactorsetpoint_ = powerfactorsetpoint;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.ReactivePowerControl.powerFactorSetpoint)
}

// .commonmodule.Optional_ReactivePowerControlKind reactivePowerControlMode = 3;
inline bool ReactivePowerControl::_internal_has_reactivepowercontrolmode() const {
  return this != internal_default_instance() && _impl_.reactivepowercontrolmode_ != nullptr;
}
inline bool ReactivePowerControl::has_reactivepowercontrolmode() const {
  return _internal_has_reactivepowercontrolmode();
}
inline const ::commonmodule::Optional_ReactivePowerControlKind& ReactivePowerControl::_internal_reactivepowercontrolmode() const {
  const ::commonmodule::Optional_ReactivePowerControlKind* p = _impl_.reactivepowercontrolmode_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::Optional_ReactivePowerControlKind&>(
      ::commonmodule::_Optional_ReactivePowerControlKind_default_instance_);
}
inline const ::commonmodule::Optional_ReactivePowerControlKind& ReactivePowerControl::reactivepowercontrolmode() const {
  // @@protoc_insertion_point(field_get:generationmodule.ReactivePowerControl.reactivePowerControlMode)
  return _internal_reactivepowercontrolmode();
}
inline void ReactivePowerControl::unsafe_arena_set_allocated_reactivepowercontrolmode(
    ::commonmodule::Optional_ReactivePowerControlKind* reactivepowercontrolmode) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.reactivepowercontrolmode_);
  }
  _impl_.reactivepowercontrolmode_ = reactivepowercontrolmode;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.ReactivePowerControl.reactivePowerControlMode)
}
inline ::commonmodule::Optional_ReactivePowerControlKind* ReactivePowerControl::release_reactivepowercontrolmode() {
  
  ::commonmodule::Optional_ReactivePowerControlKind* temp = _impl_.reactivepowercontrolmode_;
  _impl_.reactivepowercontrolmode_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::commonmodule::Optional_ReactivePowerControlKind* ReactivePowerControl::unsafe_arena_release_reactivepowercontrolmode() {
  // @@protoc_insertion_point(field_release:generationmodule.ReactivePowerControl.reactivePowerControlMode)
  
  ::commonmodule::Optional_ReactivePowerControlKind* temp = _impl_.reactivepowercontrolmode_;
  _impl_.reactivepowercontrolmode_ = nullptr;
  return temp;
}
inline ::commonmodule::Optional_ReactivePowerControlKind* ReactivePowerControl::_internal_mutable_reactivepowercontrolmode() {
  
  if (_impl_.reactivepowercontrolmode_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::Optional_ReactivePowerControlKind>(GetArenaForAllocation());
    _impl_.reactivepowercontrolmode_ = p;
  }
  return _impl_.reactivepowercontrolmode_;
}
inline ::commonmodule::Optional_ReactivePowerControlKind* ReactivePowerControl::mutable_reactivepowercontrolmode() {
  ::commonmodule::Optional_ReactivePowerControlKind* _msg = _internal_mutable_reactivepowercontrolmode();
  // @@protoc_insertion_point(field_mutable:generationmodule.ReactivePowerControl.reactivePowerControlMode)
  return _msg;
}
inline void ReactivePowerControl::set_allocated_reactivepowercontrolmode(::commonmodule::Optional_ReactivePowerControlKind* reactivepowercontrolmode) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.reactivepowercontrolmode_);
  }
  if (reactivepowercontrolmode) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(reactivepowercontrolmode));
    if (message_arena != submessage_arena) {
      reactivepowercontrolmode = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, reactivepowercontrolmode, submessage_arena);
    }

  } else {

  }
  _impl_.reactivepowercontrolmode_ = reactivepowercontrolmode;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.ReactivePowerControl.reactivePowerControlMode)
}

// .google.protobuf.FloatValue reactivePowerSetpoint = 4;
inline bool ReactivePowerControl::_internal_has_reactivepowersetpoint() const {
  return this != internal_default_instance() && _impl_.reactivepowersetpoint_ != nullptr;
}
inline bool ReactivePowerControl::has_reactivepowersetpoint() const {
  return _internal_has_reactivepowersetpoint();
}
inline const ::PROTOBUF_NAMESPACE_ID::FloatValue& ReactivePowerControl::_internal_reactivepowersetpoint() const {
  const ::PROTOBUF_NAMESPACE_ID::FloatValue* p = _impl_.reactivepowersetpoint_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::FloatValue&>(
      ::PROTOBUF_NAMESPACE_ID::_FloatValue_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::FloatValue& ReactivePowerControl::reactivepowersetpoint() const {
  // @@protoc_insertion_point(field_get:generationmodule.ReactivePowerControl.reactivePowerSetpoint)
  return _internal_reactivepowersetpoint();
}
inline void ReactivePowerControl::unsafe_arena_set_allocated_reactivepowersetpoint(
    ::PROTOBUF_NAMESPACE_ID::FloatValue* reactivepowersetpoint) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.reactivepowersetpoint_);
  }
  _impl_.reactivepowersetpoint_ = reactivepowersetpoint;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.ReactivePowerControl.reactivePowerSetpoint)
}
inline ::PROTOBUF_NAMESPACE_ID::FloatValue* ReactivePowerControl::release_reactivepowersetpoint() {
  
  ::PROTOBUF_NAMESPACE_ID::FloatValue* temp = _impl_.reactivepowersetpoint_;
  _impl_.reactivepowersetpoint_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::FloatValue* ReactivePowerControl::unsafe_arena_release_reactivepowersetpoint() {
  // @@protoc_insertion_point(field_release:generationmodule.ReactivePowerControl.reactivePowerSetpoint)
  
  ::PROTOBUF_NAMESPACE_ID::FloatValue* temp = _impl_.reactivepowersetpoint_;
  _impl_.reactivepowersetpoint_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::FloatValue* ReactivePowerControl::_internal_mutable_reactivepowersetpoint() {
  
  if (_impl_.reactivepowersetpoint_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::FloatValue>(GetArenaForAllocation());
    _impl_.reactivepowersetpoint_ = p;
  }
  return _impl_.reactivepowersetpoint_;
}
inline ::PROTOBUF_NAMESPACE_ID::FloatValue* ReactivePowerControl::mutable_reactivepowersetpoint() {
  ::PROTOBUF_NAMESPACE_ID::FloatValue* _msg = _internal_mutable_reactivepowersetpoint();
  // @@protoc_insertion_point(field_mutable:generationmodule.ReactivePowerControl.reactivePowerSetpoint)
  return _msg;
}
inline void ReactivePowerControl::set_allocated_reactivepowersetpoint(::PROTOBUF_NAMESPACE_ID::FloatValue* reactivepowersetpoint) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.reactivepowersetpoint_);
  }
  if (reactivepowersetpoint) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(reactivepowersetpoint));
    if (message_arena != submessage_arena) {
      reactivepowersetpoint = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, reactivepowersetpoint, submessage_arena);
    }

  } else {

  }
  _impl_.reactivepowersetpoint_ = reactivepowersetpoint;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.ReactivePowerControl.reactivePowerSetpoint)
}

// .google.protobuf.FloatValue voltageSetpoint = 5;
inline bool ReactivePowerControl::_internal_has_voltagesetpoint() const {
  return this != internal_default_instance() && _impl_.voltagesetpoint_ != nullptr;
}
inline bool ReactivePowerControl::has_voltagesetpoint() const {
  return _internal_has_voltagesetpoint();
}
inline const ::PROTOBUF_NAMESPACE_ID::FloatValue& ReactivePowerControl::_internal_voltagesetpoint() const {
  const ::PROTOBUF_NAMESPACE_ID::FloatValue* p = _impl_.voltagesetpoint_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::FloatValue&>(
      ::PROTOBUF_NAMESPACE_ID::_FloatValue_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::FloatValue& ReactivePowerControl::voltagesetpoint() const {
  // @@protoc_insertion_point(field_get:generationmodule.ReactivePowerControl.voltageSetpoint)
  return _internal_voltagesetpoint();
}
inline void ReactivePowerControl::unsafe_arena_set_allocated_voltagesetpoint(
    ::PROTOBUF_NAMESPACE_ID::FloatValue* voltagesetpoint) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.voltagesetpoint_);
  }
  _impl_.voltagesetpoint_ = voltagesetpoint;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.ReactivePowerControl.voltageSetpoint)
}
inline ::PROTOBUF_NAMESPACE_ID::FloatValue* ReactivePowerControl::release_voltagesetpoint() {
  
  ::PROTOBUF_NAMESPACE_ID::FloatValue* temp = _impl_.voltagesetpoint_;
  _impl_.voltagesetpoint_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::FloatValue* ReactivePowerControl::unsafe_arena_release_voltagesetpoint() {
  // @@protoc_insertion_point(field_release:generationmodule.ReactivePowerControl.voltageSetpoint)
  
  ::PROTOBUF_NAMESPACE_ID::FloatValue* temp = _impl_.voltagesetpoint_;
  _impl_.voltagesetpoint_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::FloatValue* ReactivePowerControl::_internal_mutable_voltagesetpoint() {
  
  if (_impl_.voltagesetpoint_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::FloatValue>(GetArenaForAllocation());
    _impl_.voltagesetpoint_ = p;
  }
  return _impl_.voltagesetpoint_;
}
inline ::PROTOBUF_NAMESPACE_ID::FloatValue* ReactivePowerControl::mutable_voltagesetpoint() {
  ::PROTOBUF_NAMESPACE_ID::FloatValue* _msg = _internal_mutable_voltagesetpoint();
  // @@protoc_insertion_point(field_mutable:generationmodule.ReactivePowerControl.voltageSetpoint)
  return _msg;
}
inline void ReactivePowerControl::set_allocated_voltagesetpoint(::PROTOBUF_NAMESPACE_ID::FloatValue* voltagesetpoint) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.voltagesetpoint_);
  }
  if (voltagesetpoint) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(voltagesetpoint));
    if (message_arena != submessage_arena) {
      voltagesetpoint = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, voltagesetpoint, submessage_arena);
    }

  } else {

  }
  _impl_.voltagesetpoint_ = voltagesetpoint;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.ReactivePowerControl.voltageSetpoint)
}

// -------------------------------------------------------------------

// GenerationDiscreteControl

// .commonmodule.ControlValue controlValue = 1 [(.uml.option_parent_message) = true];
inline bool GenerationDiscreteControl::_internal_has_controlvalue() const {
  return this != internal_default_instance() && _impl_.controlvalue_ != nullptr;
}
inline bool GenerationDiscreteControl::has_controlvalue() const {
  return _internal_has_controlvalue();
}
inline const ::commonmodule::ControlValue& GenerationDiscreteControl::_internal_controlvalue() const {
  const ::commonmodule::ControlValue* p = _impl_.controlvalue_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::ControlValue&>(
      ::commonmodule::_ControlValue_default_instance_);
}
inline const ::commonmodule::ControlValue& GenerationDiscreteControl::controlvalue() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationDiscreteControl.controlValue)
  return _internal_controlvalue();
}
inline void GenerationDiscreteControl::unsafe_arena_set_allocated_controlvalue(
    ::commonmodule::ControlValue* controlvalue) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.controlvalue_);
  }
  _impl_.controlvalue_ = controlvalue;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationDiscreteControl.controlValue)
}
inline ::commonmodule::ControlValue* GenerationDiscreteControl::release_controlvalue() {
  
  ::commonmodule::ControlValue* temp = _impl_.controlvalue_;
  _impl_.controlvalue_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::commonmodule::ControlValue* GenerationDiscreteControl::unsafe_arena_release_controlvalue() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationDiscreteControl.controlValue)
  
  ::commonmodule::ControlValue* temp = _impl_.controlvalue_;
  _impl_.controlvalue_ = nullptr;
  return temp;
}
inline ::commonmodule::ControlValue* GenerationDiscreteControl::_internal_mutable_controlvalue() {
  
  if (_impl_.controlvalue_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::ControlValue>(GetArenaForAllocation());
    _impl_.controlvalue_ = p;
  }
  return _impl_.controlvalue_;
}
inline ::commonmodule::ControlValue* GenerationDiscreteControl::mutable_controlvalue() {
  ::commonmodule::ControlValue* _msg = _internal_mutable_controlvalue();
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationDiscreteControl.controlValue)
  return _msg;
}
inline void GenerationDiscreteControl::set_allocated_controlvalue(::commonmodule::ControlValue* controlvalue) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.controlvalue_);
  }
  if (controlvalue) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(controlvalue));
    if (message_arena != submessage_arena) {
      controlvalue = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, controlvalue, submessage_arena);
    }

  } else {

  }
  _impl_.controlvalue_ = controlvalue;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationDiscreteControl.controlValue)
}

// .commonmodule.CheckConditions check = 2;
inline bool GenerationDiscreteControl::_internal_has_check() const {
  return this != internal_default_instance() && _impl_.check_ != nullptr;
}
inline bool GenerationDiscreteControl::has_check() const {
  return _internal_has_check();
}
inline const ::commonmodule::CheckConditions& GenerationDiscreteControl::_internal_check() const {
  const ::commonmodule::CheckConditions* p = _impl_.check_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::CheckConditions&>(
      ::commonmodule::_CheckConditions_default_instance_);
}
inline const ::commonmodule::CheckConditions& GenerationDiscreteControl::check() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationDiscreteControl.check)
  return _internal_check();
}
inline void GenerationDiscreteControl::unsafe_arena_set_allocated_check(
    ::commonmodule::CheckConditions* check) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.check_);
  }
  _impl_.check_ = check;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationDiscreteControl.check)
}
inline ::commonmodule::CheckConditions* GenerationDiscreteControl::release_check() {
  
  ::commonmodule::CheckConditions* temp = _impl_.check_;
  _impl_.check_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::commonmodule::CheckConditions* GenerationDiscreteControl::unsafe_arena_release_check() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationDiscreteControl.check)
  
  ::commonmodule::CheckConditions* temp = _impl_.check_;
  _impl_.check_ = nullptr;
  return temp;
}
inline ::commonmodule::CheckConditions* GenerationDiscreteControl::_internal_mutable_check() {
  
  if (_impl_.check_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::CheckConditions>(GetArenaForAllocation());
    _impl_.check_ = p;
  }
  return _impl_.check_;
}
inline ::commonmodule::CheckConditions* GenerationDiscreteControl::mutable_check() {
  ::commonmodule::CheckConditions* _msg = _internal_mutable_check();
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationDiscreteControl.check)
  return _msg;
}
inline void GenerationDiscreteControl::set_allocated_check(::commonmodule::CheckConditions* check) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.check_);
  }
  if (check) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(check));
    if (message_arena != submessage_arena) {
      check = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, check, submessage_arena);
    }

  } else {

  }
  _impl_.check_ = check;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationDiscreteControl.check)
}

// .generationmodule.ReactivePowerControl ReactivePowerControl = 3;
inline bool GenerationDiscreteControl::_internal_has_reactivepowercontrol() const {
  return this != internal_default_instance() && _impl_.reactivepowercontrol_ != nullptr;
}
inline bool GenerationDiscreteControl::has_reactivepowercontrol() const {
  return _internal_has_reactivepowercontrol();
}
inline void GenerationDiscreteControl::clear_reactivepowercontrol() {
  if (GetArenaForAllocation() == nullptr && _impl_.reactivepowercontrol_ != nullptr) {
    delete _impl_.reactivepowercontrol_;
  }
  _impl_.reactivepowercontrol_ = nullptr;
}
inline const ::generationmodule::ReactivePowerControl& GenerationDiscreteControl::_internal_reactivepowercontrol() const {
  const ::generationmodule::ReactivePowerControl* p = _impl_.reactivepowercontrol_;
  return p != nullptr ? *p : reinterpret_cast<const ::generationmodule::ReactivePowerControl&>(
      ::generationmodule::_ReactivePowerControl_default_instance_);
}
inline const ::generationmodule::ReactivePowerControl& GenerationDiscreteControl::reactivepowercontrol() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationDiscreteControl.ReactivePowerControl)
  return _internal_reactivepowercontrol();
}
inline void GenerationDiscreteControl::unsafe_arena_set_allocated_reactivepowercontrol(
    ::generationmodule::ReactivePowerControl* reactivepowercontrol) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.reactivepowercontrol_);
  }
  _impl_.reactivepowercontrol_ = reactivepowercontrol;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationDiscreteControl.ReactivePowerControl)
}
inline ::generationmodule::ReactivePowerControl* GenerationDiscreteControl::release_reactivepowercontrol() {
  
  ::generationmodule::ReactivePowerControl* temp = _impl_.reactivepowercontrol_;
  _impl_.reactivepowercontrol_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::generationmodule::ReactivePowerControl* GenerationDiscreteControl::unsafe_arena_release_reactivepowercontrol() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationDiscreteControl.ReactivePowerControl)
  
  ::generationmodule::ReactivePowerControl* temp = _impl_.reactivepowercontrol_;
  _impl_.reactivepowercontrol_ = nullptr;
  return temp;
}
inline ::generationmodule::ReactivePowerControl* GenerationDiscreteControl::_internal_mutable_reactivepowercontrol() {
  
  if (_impl_.reactivepowercontrol_ == nullptr) {
    auto* p = CreateMaybeMessage<::generationmodule::ReactivePowerControl>(GetArenaForAllocation());
    _impl_.reactivepowercontrol_ = p;
  }
  return _impl_.reactivepowercontrol_;
}
inline ::generationmodule::ReactivePowerControl* GenerationDiscreteControl::mutable_reactivepowercontrol() {
  ::generationmodule::ReactivePowerControl* _msg = _internal_mutable_reactivepowercontrol();
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationDiscreteControl.ReactivePowerControl)
  return _msg;
}
inline void GenerationDiscreteControl::set_allocated_reactivepowercontrol(::generationmodule::ReactivePowerControl* reactivepowercontrol) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.reactivepowercontrol_;
  }
  if (reactivepowercontrol) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(reactivepowercontrol);
    if (message_arena != submessage_arena) {
      reactivepowercontrol = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, reactivepowercontrol, submessage_arena);
    }

  } else {

  }
  _impl_.reactivepowercontrol_ = reactivepowercontrol;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationDiscreteControl.ReactivePowerControl)
}

// .generationmodule.RealPowerControl RealPowerControl = 4;
inline bool GenerationDiscreteControl::_internal_has_realpowercontrol() const {
  return this != internal_default_instance() && _impl_.realpowercontrol_ != nullptr;
}
inline bool GenerationDiscreteControl::has_realpowercontrol() const {
  return _internal_has_realpowercontrol();
}
inline void GenerationDiscreteControl::clear_realpowercontrol() {
  if (GetArenaForAllocation() == nullptr && _impl_.realpowercontrol_ != nullptr) {
    delete _impl_.realpowercontrol_;
  }
  _impl_.realpowercontrol_ = nullptr;
}
inline const ::generationmodule::RealPowerControl& GenerationDiscreteControl::_internal_realpowercontrol() const {
  const ::generationmodule::RealPowerControl* p = _impl_.realpowercontrol_;
  return p != nullptr ? *p : reinterpret_cast<const ::generationmodule::RealPowerControl&>(
      ::generationmodule::_RealPowerControl_default_instance_);
}
inline const ::generationmodule::RealPowerControl& GenerationDiscreteControl::realpowercontrol() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationDiscreteControl.RealPowerControl)
  return _internal_realpowercontrol();
}
inline void GenerationDiscreteControl::unsafe_arena_set_allocated_realpowercontrol(
    ::generationmodule::RealPowerControl* realpowercontrol) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.realpowercontrol_);
  }
  _impl_.realpowercontrol_ = realpowercontrol;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationDiscreteControl.RealPowerControl)
}
inline ::generationmodule::RealPowerControl* GenerationDiscreteControl::release_realpowercontrol() {
  
  ::generationmodule::RealPowerControl* temp = _impl_.realpowercontrol_;
  _impl_.realpowercontrol_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::generationmodule::RealPowerControl* GenerationDiscreteControl::unsafe_arena_release_realpowercontrol() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationDiscreteControl.RealPowerControl)
  
  ::generationmodule::RealPowerControl* temp = _impl_.realpowercontrol_;
  _impl_.realpowercontrol_ = nullptr;
  return temp;
}
inline ::generationmodule::RealPowerControl* GenerationDiscreteControl::_internal_mutable_realpowercontrol() {
  
  if (_impl_.realpowercontrol_ == nullptr) {
    auto* p = CreateMaybeMessage<::generationmodule::RealPowerControl>(GetArenaForAllocation());
    _impl_.realpowercontrol_ = p;
  }
  return _impl_.realpowercontrol_;
}
inline ::generationmodule::RealPowerControl* GenerationDiscreteControl::mutable_realpowercontrol() {
  ::generationmodule::RealPowerControl* _msg = _internal_mutable_realpowercontrol();
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationDiscreteControl.RealPowerControl)
  return _msg;
}
inline void GenerationDiscreteControl::set_allocated_realpowercontrol(::generationmodule::RealPowerControl* realpowercontrol) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.realpowercontrol_;
  }
  if (realpowercontrol) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(realpowercontrol);
    if (message_arena != submessage_arena) {
      realpowercontrol = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, realpowercontrol, submessage_arena);
    }

  } else {

  }
  _impl_.realpowercontrol_ = realpowercontrol;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationDiscreteControl.RealPowerControl)
}

// -------------------------------------------------------------------

// GenerationDiscreteControlProfile

// .commonmodule.ControlMessageInfo controlMessageInfo = 1 [(.uml.option_parent_message) = true];
inline bool GenerationDiscreteControlProfile::_internal_has_controlmessageinfo() const {
  return this != internal_default_instance() && _impl_.controlmessageinfo_ != nullptr;
}
inline bool GenerationDiscreteControlProfile::has_controlmessageinfo() const {
  return _internal_has_controlmessageinfo();
}
inline const ::commonmodule::ControlMessageInfo& GenerationDiscreteControlProfile::_internal_controlmessageinfo() const {
  const ::commonmodule::ControlMessageInfo* p = _impl_.controlmessageinfo_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::ControlMessageInfo&>(
      ::commonmodule::_ControlMessageInfo_default_instance_);
}
inline const ::commonmodule::ControlMessageInfo& GenerationDiscreteControlProfile::controlmessageinfo() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationDiscreteControlProfile.controlMessageInfo)
  return _internal_controlmessageinfo();
}
inline void GenerationDiscreteControlProfile::unsafe_arena_set_allocated_controlmessageinfo(
    ::commonmodule::ControlMessageInfo* controlmessageinfo) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.controlmessageinfo_);
  }
  _impl_.controlmessageinfo_ = controlmessageinfo;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationDiscreteControlProfile.controlMessageInfo)
}
inline ::commonmodule::ControlMessageInfo* GenerationDiscreteControlProfile::release_controlmessageinfo() {
  
  ::commonmodule::ControlMessageInfo* temp = _impl_.controlmessageinfo_;
  _impl_.controlmessageinfo_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::commonmodule::ControlMessageInfo* GenerationDiscreteControlProfile::unsafe_arena_release_controlmessageinfo() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationDiscreteControlProfile.controlMessageInfo)
  
  ::commonmodule::ControlMessageInfo* temp = _impl_.controlmessageinfo_;
  _impl_.controlmessageinfo_ = nullptr;
  return temp;
}
inline ::commonmodule::ControlMessageInfo* GenerationDiscreteControlProfile::_internal_mutable_controlmessageinfo() {
  
  if (_impl_.controlmessageinfo_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::ControlMessageInfo>(GetArenaForAllocation());
    _impl_.controlmessageinfo_ = p;
  }
  return _impl_.controlmessageinfo_;
}
inline ::commonmodule::ControlMessageInfo* GenerationDiscreteControlProfile::mutable_controlmessageinfo() {
  ::commonmodule::ControlMessageInfo* _msg = _internal_mutable_controlmessageinfo();
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationDiscreteControlProfile.controlMessageInfo)
  return _msg;
}
inline void GenerationDiscreteControlProfile::set_allocated_controlmessageinfo(::commonmodule::ControlMessageInfo* controlmessageinfo) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.controlmessageinfo_);
  }
  if (controlmessageinfo) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(controlmessageinfo));
    if (message_arena != submessage_arena) {
      controlmessageinfo = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, controlmessageinfo, submessage_arena);
    }

  } else {

  }
  _impl_.controlmessageinfo_ = controlmessageinfo;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationDiscreteControlProfile.controlMessageInfo)
}

// .generationmodule.GeneratingUnit generatingUnit = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
inline bool GenerationDiscreteControlProfile::_internal_has_generatingunit() const {
  return this != internal_default_instance() && _impl_.generatingunit_ != nullptr;
}
inline bool GenerationDiscreteControlProfile::has_generatingunit() const {
  return _internal_has_generatingunit();
}
inline void GenerationDiscreteControlProfile::clear_generatingunit() {
  if (GetArenaForAllocation() == nullptr && _impl_.generatingunit_ != nullptr) {
    delete _impl_.generatingunit_;
  }
  _impl_.generatingunit_ = nullptr;
}
inline const ::generationmodule::GeneratingUnit& GenerationDiscreteControlProfile::_internal_generatingunit() const {
  const ::generationmodule::GeneratingUnit* p = _impl_.generatingunit_;
  return p != nullptr ? *p : reinterpret_cast<const ::generationmodule::GeneratingUnit&>(
      ::generationmodule::_GeneratingUnit_default_instance_);
}
inline const ::generationmodule::GeneratingUnit& GenerationDiscreteControlProfile::generatingunit() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationDiscreteControlProfile.generatingUnit)
  return _internal_generatingunit();
}
inline void GenerationDiscreteControlProfile::unsafe_arena_set_allocated_generatingunit(
    ::generationmodule::GeneratingUnit* generatingunit) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.generatingunit_);
  }
  _impl_.generatingunit_ = generatingunit;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationDiscreteControlProfile.generatingUnit)
}
inline ::generationmodule::GeneratingUnit* GenerationDiscreteControlProfile::release_generatingunit() {
  
  ::generationmodule::GeneratingUnit* temp = _impl_.generatingunit_;
  _impl_.generatingunit_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::generationmodule::GeneratingUnit* GenerationDiscreteControlProfile::unsafe_arena_release_generatingunit() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationDiscreteControlProfile.generatingUnit)
  
  ::generationmodule::GeneratingUnit* temp = _impl_.generatingunit_;
  _impl_.generatingunit_ = nullptr;
  return temp;
}
inline ::generationmodule::GeneratingUnit* GenerationDiscreteControlProfile::_internal_mutable_generatingunit() {
  
  if (_impl_.generatingunit_ == nullptr) {
    auto* p = CreateMaybeMessage<::generationmodule::GeneratingUnit>(GetArenaForAllocation());
    _impl_.generatingunit_ = p;
  }
  return _impl_.generatingunit_;
}
inline ::generationmodule::GeneratingUnit* GenerationDiscreteControlProfile::mutable_generatingunit() {
  ::generationmodule::GeneratingUnit* _msg = _internal_mutable_generatingunit();
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationDiscreteControlProfile.generatingUnit)
  return _msg;
}
inline void GenerationDiscreteControlProfile::set_allocated_generatingunit(::generationmodule::GeneratingUnit* generatingunit) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.generatingunit_;
  }
  if (generatingunit) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(generatingunit);
    if (message_arena != submessage_arena) {
      generatingunit = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, generatingunit, submessage_arena);
    }

  } else {

  }
  _impl_.generatingunit_ = generatingunit;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationDiscreteControlProfile.generatingUnit)
}

// .generationmodule.GenerationDiscreteControl generationDiscreteControl = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
inline bool GenerationDiscreteControlProfile::_internal_has_generationdiscretecontrol() const {
  return this != internal_default_instance() && _impl_.generationdiscretecontrol_ != nullptr;
}
inline bool GenerationDiscreteControlProfile::has_generationdiscretecontrol() const {
  return _internal_has_generationdiscretecontrol();
}
inline void GenerationDiscreteControlProfile::clear_generationdiscretecontrol() {
  if (GetArenaForAllocation() == nullptr && _impl_.generationdiscretecontrol_ != nullptr) {
    delete _impl_.generationdiscretecontrol_;
  }
  _impl_.generationdiscretecontrol_ = nullptr;
}
inline const ::generationmodule::GenerationDiscreteControl& GenerationDiscreteControlProfile::_internal_generationdiscretecontrol() const {
  const ::generationmodule::GenerationDiscreteControl* p = _impl_.generationdiscretecontrol_;
  return p != nullptr ? *p : reinterpret_cast<const ::generationmodule::GenerationDiscreteControl&>(
      ::generationmodule::_GenerationDiscreteControl_default_instance_);
}
inline const ::generationmodule::GenerationDiscreteControl& GenerationDiscreteControlProfile::generationdiscretecontrol() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationDiscreteControlProfile.generationDiscreteControl)
  return _internal_generationdiscretecontrol();
}
inline void GenerationDiscreteControlProfile::unsafe_arena_set_allocated_generationdiscretecontrol(
    ::generationmodule::GenerationDiscreteControl* generationdiscretecontrol) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.generationdiscretecontrol_);
  }
  _impl_.generationdiscretecontrol_ = generationdiscretecontrol;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationDiscreteControlProfile.generationDiscreteControl)
}
inline ::generationmodule::GenerationDiscreteControl* GenerationDiscreteControlProfile::release_generationdiscretecontrol() {
  
  ::generationmodule::GenerationDiscreteControl* temp = _impl_.generationdiscretecontrol_;
  _impl_.generationdiscretecontrol_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::generationmodule::GenerationDiscreteControl* GenerationDiscreteControlProfile::unsafe_arena_release_generationdiscretecontrol() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationDiscreteControlProfile.generationDiscreteControl)
  
  ::generationmodule::GenerationDiscreteControl* temp = _impl_.generationdiscretecontrol_;
  _impl_.generationdiscretecontrol_ = nullptr;
  return temp;
}
inline ::generationmodule::GenerationDiscreteControl* GenerationDiscreteControlProfile::_internal_mutable_generationdiscretecontrol() {
  
  if (_impl_.generationdiscretecontrol_ == nullptr) {
    auto* p = CreateMaybeMessage<::generationmodule::GenerationDiscreteControl>(GetArenaForAllocation());
    _impl_.generationdiscretecontrol_ = p;
  }
  return _impl_.generationdiscretecontrol_;
}
inline ::generationmodule::GenerationDiscreteControl* GenerationDiscreteControlProfile::mutable_generationdiscretecontrol() {
  ::generationmodule::GenerationDiscreteControl* _msg = _internal_mutable_generationdiscretecontrol();
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationDiscreteControlProfile.generationDiscreteControl)
  return _msg;
}
inline void GenerationDiscreteControlProfile::set_allocated_generationdiscretecontrol(::generationmodule::GenerationDiscreteControl* generationdiscretecontrol) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.generationdiscretecontrol_;
  }
  if (generationdiscretecontrol) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(generationdiscretecontrol);
    if (message_arena != submessage_arena) {
      generationdiscretecontrol = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, generationdiscretecontrol, submessage_arena);
    }

  } else {

  }
  _impl_.generationdiscretecontrol_ = generationdiscretecontrol;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationDiscreteControlProfile.generationDiscreteControl)
}

// -------------------------------------------------------------------

// GenerationReading

// .commonmodule.ConductingEquipmentTerminalReading conductingEquipmentTerminalReading = 1 [(.uml.option_parent_message) = true];
inline bool GenerationReading::_internal_has_conductingequipmentterminalreading() const {
  return this != internal_default_instance() && _impl_.conductingequipmentterminalreading_ != nullptr;
}
inline bool GenerationReading::has_conductingequipmentterminalreading() const {
  return _internal_has_conductingequipmentterminalreading();
}
inline const ::commonmodule::ConductingEquipmentTerminalReading& GenerationReading::_internal_conductingequipmentterminalreading() const {
  const ::commonmodule::ConductingEquipmentTerminalReading* p = _impl_.conductingequipmentterminalreading_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::ConductingEquipmentTerminalReading&>(
      ::commonmodule::_ConductingEquipmentTerminalReading_default_instance_);
}
inline const ::commonmodule::ConductingEquipmentTerminalReading& GenerationReading::conductingequipmentterminalreading() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationReading.conductingEquipmentTerminalReading)
  return _internal_conductingequipmentterminalreading();
}
inline void GenerationReading::unsafe_arena_set_allocated_conductingequipmentterminalreading(
    ::commonmodule::ConductingEquipmentTerminalReading* conductingequipmentterminalreading) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.conductingequipmentterminalreading_);
  }
  _impl_.conductingequipmentterminalreading_ = conductingequipmentterminalreading;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationReading.conductingEquipmentTerminalReading)
}
inline ::commonmodule::ConductingEquipmentTerminalReading* GenerationReading::release_conductingequipmentterminalreading() {
  
  ::commonmodule::ConductingEquipmentTerminalReading* temp = _impl_.conductingequipmentterminalreading_;
  _impl_.conductingequipmentterminalreading_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::commonmodule::ConductingEquipmentTerminalReading* GenerationReading::unsafe_arena_release_conductingequipmentterminalreading() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationReading.conductingEquipmentTerminalReading)
  
  ::commonmodule::ConductingEquipmentTerminalReading* temp = _impl_.conductingequipmentterminalreading_;
  _impl_.conductingequipmentterminalreading_ = nullptr;
  return temp;
}
inline ::commonmodule::ConductingEquipmentTerminalReading* GenerationReading::_internal_mutable_conductingequipmentterminalreading() {
  
  if (_impl_.conductingequipmentterminalreading_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::ConductingEquipmentTerminalReading>(GetArenaForAllocation());
    _impl_.conductingequipmentterminalreading_ = p;
  }
  return _impl_.conductingequipmentterminalreading_;
}
inline ::commonmodule::ConductingEquipmentTerminalReading* GenerationReading::mutable_conductingequipmentterminalreading() {
  ::commonmodule::ConductingEquipmentTerminalReading* _msg = _internal_mutable_conductingequipmentterminalreading();
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationReading.conductingEquipmentTerminalReading)
  return _msg;
}
inline void GenerationReading::set_allocated_conductingequipmentterminalreading(::commonmodule::ConductingEquipmentTerminalReading* conductingequipmentterminalreading) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.conductingequipmentterminalreading_);
  }
  if (conductingequipmentterminalreading) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(conductingequipmentterminalreading));
    if (message_arena != submessage_arena) {
      conductingequipmentterminalreading = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, conductingequipmentterminalreading, submessage_arena);
    }

  } else {

  }
  _impl_.conductingequipmentterminalreading_ = conductingequipmentterminalreading;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationReading.conductingEquipmentTerminalReading)
}

// .commonmodule.PhaseMMTN phaseMMTN = 2;
inline bool GenerationReading::_internal_has_phasemmtn() const {
  return this != internal_default_instance() && _impl_.phasemmtn_ != nullptr;
}
inline bool GenerationReading::has_phasemmtn() const {
  return _internal_has_phasemmtn();
}
inline const ::commonmodule::PhaseMMTN& GenerationReading::_internal_phasemmtn() const {
  const ::commonmodule::PhaseMMTN* p = _impl_.phasemmtn_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::PhaseMMTN&>(
      ::commonmodule::_PhaseMMTN_default_instance_);
}
inline const ::commonmodule::PhaseMMTN& GenerationReading::phasemmtn() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationReading.phaseMMTN)
  return _internal_phasemmtn();
}
inline void GenerationReading::unsafe_arena_set_allocated_phasemmtn(
    ::commonmodule::PhaseMMTN* phasemmtn) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.phasemmtn_);
  }
  _impl_.phasemmtn_ = phasemmtn;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationReading.phaseMMTN)
}
inline ::commonmodule::PhaseMMTN* GenerationReading::release_phasemmtn() {
  
  ::commonmodule::PhaseMMTN* temp = _impl_.phasemmtn_;
  _impl_.phasemmtn_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::commonmodule::PhaseMMTN* GenerationReading::unsafe_arena_release_phasemmtn() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationReading.phaseMMTN)
  
  ::commonmodule::PhaseMMTN* temp = _impl_.phasemmtn_;
  _impl_.phasemmtn_ = nullptr;
  return temp;
}
inline ::commonmodule::PhaseMMTN* GenerationReading::_internal_mutable_phasemmtn() {
  
  if (_impl_.phasemmtn_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::PhaseMMTN>(GetArenaForAllocation());
    _impl_.phasemmtn_ = p;
  }
  return _impl_.phasemmtn_;
}
inline ::commonmodule::PhaseMMTN* GenerationReading::mutable_phasemmtn() {
  ::commonmodule::PhaseMMTN* _msg = _internal_mutable_phasemmtn();
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationReading.phaseMMTN)
  return _msg;
}
inline void GenerationReading::set_allocated_phasemmtn(::commonmodule::PhaseMMTN* phasemmtn) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.phasemmtn_);
  }
  if (phasemmtn) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(phasemmtn));
    if (message_arena != submessage_arena) {
      phasemmtn = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, phasemmtn, submessage_arena);
    }

  } else {

  }
  _impl_.phasemmtn_ = phasemmtn;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationReading.phaseMMTN)
}

// .commonmodule.ReadingMMTR readingMMTR = 3;
inline bool GenerationReading::_internal_has_readingmmtr() const {
  return this != internal_default_instance() && _impl_.readingmmtr_ != nullptr;
}
inline bool GenerationReading::has_readingmmtr() const {
  return _internal_has_readingmmtr();
}
inline const ::commonmodule::ReadingMMTR& GenerationReading::_internal_readingmmtr() const {
  const ::commonmodule::ReadingMMTR* p = _impl_.readingmmtr_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::ReadingMMTR&>(
      ::commonmodule::_ReadingMMTR_default_instance_);
}
inline const ::commonmodule::ReadingMMTR& GenerationReading::readingmmtr() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationReading.readingMMTR)
  return _internal_readingmmtr();
}
inline void GenerationReading::unsafe_arena_set_allocated_readingmmtr(
    ::commonmodule::ReadingMMTR* readingmmtr) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.readingmmtr_);
  }
  _impl_.readingmmtr_ = readingmmtr;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationReading.readingMMTR)
}
inline ::commonmodule::ReadingMMTR* GenerationReading::release_readingmmtr() {
  
  ::commonmodule::ReadingMMTR* temp = _impl_.readingmmtr_;
  _impl_.readingmmtr_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::commonmodule::ReadingMMTR* GenerationReading::unsafe_arena_release_readingmmtr() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationReading.readingMMTR)
  
  ::commonmodule::ReadingMMTR* temp = _impl_.readingmmtr_;
  _impl_.readingmmtr_ = nullptr;
  return temp;
}
inline ::commonmodule::ReadingMMTR* GenerationReading::_internal_mutable_readingmmtr() {
  
  if (_impl_.readingmmtr_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::ReadingMMTR>(GetArenaForAllocation());
    _impl_.readingmmtr_ = p;
  }
  return _impl_.readingmmtr_;
}
inline ::commonmodule::ReadingMMTR* GenerationReading::mutable_readingmmtr() {
  ::commonmodule::ReadingMMTR* _msg = _internal_mutable_readingmmtr();
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationReading.readingMMTR)
  return _msg;
}
inline void GenerationReading::set_allocated_readingmmtr(::commonmodule::ReadingMMTR* readingmmtr) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.readingmmtr_);
  }
  if (readingmmtr) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(readingmmtr));
    if (message_arena != submessage_arena) {
      readingmmtr = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, readingmmtr, submessage_arena);
    }

  } else {

  }
  _impl_.readingmmtr_ = readingmmtr;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationReading.readingMMTR)
}

// .commonmodule.ReadingMMXU readingMMXU = 4;
inline bool GenerationReading::_internal_has_readingmmxu() const {
  return this != internal_default_instance() && _impl_.readingmmxu_ != nullptr;
}
inline bool GenerationReading::has_readingmmxu() const {
  return _internal_has_readingmmxu();
}
inline const ::commonmodule::ReadingMMXU& GenerationReading::_internal_readingmmxu() const {
  const ::commonmodule::ReadingMMXU* p = _impl_.readingmmxu_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::ReadingMMXU&>(
      ::commonmodule::_ReadingMMXU_default_instance_);
}
inline const ::commonmodule::ReadingMMXU& GenerationReading::readingmmxu() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationReading.readingMMXU)
  return _internal_readingmmxu();
}
inline void GenerationReading::unsafe_arena_set_allocated_readingmmxu(
    ::commonmodule::ReadingMMXU* readingmmxu) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.readingmmxu_);
  }
  _impl_.readingmmxu_ = readingmmxu;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationReading.readingMMXU)
}
inline ::commonmodule::ReadingMMXU* GenerationReading::release_readingmmxu() {
  
  ::commonmodule::ReadingMMXU* temp = _impl_.readingmmxu_;
  _impl_.readingmmxu_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::commonmodule::ReadingMMXU* GenerationReading::unsafe_arena_release_readingmmxu() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationReading.readingMMXU)
  
  ::commonmodule::ReadingMMXU* temp = _impl_.readingmmxu_;
  _impl_.readingmmxu_ = nullptr;
  return temp;
}
inline ::commonmodule::ReadingMMXU* GenerationReading::_internal_mutable_readingmmxu() {
  
  if (_impl_.readingmmxu_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::ReadingMMXU>(GetArenaForAllocation());
    _impl_.readingmmxu_ = p;
  }
  return _impl_.readingmmxu_;
}
inline ::commonmodule::ReadingMMXU* GenerationReading::mutable_readingmmxu() {
  ::commonmodule::ReadingMMXU* _msg = _internal_mutable_readingmmxu();
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationReading.readingMMXU)
  return _msg;
}
inline void GenerationReading::set_allocated_readingmmxu(::commonmodule::ReadingMMXU* readingmmxu) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.readingmmxu_);
  }
  if (readingmmxu) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(readingmmxu));
    if (message_arena != submessage_arena) {
      readingmmxu = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, readingmmxu, submessage_arena);
    }

  } else {

  }
  _impl_.readingmmxu_ = readingmmxu;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationReading.readingMMXU)
}

// -------------------------------------------------------------------

// GenerationReadingProfile

// .commonmodule.ReadingMessageInfo readingMessageInfo = 1 [(.uml.option_parent_message) = true];
inline bool GenerationReadingProfile::_internal_has_readingmessageinfo() const {
  return this != internal_default_instance() && _impl_.readingmessageinfo_ != nullptr;
}
inline bool GenerationReadingProfile::has_readingmessageinfo() const {
  return _internal_has_readingmessageinfo();
}
inline const ::commonmodule::ReadingMessageInfo& GenerationReadingProfile::_internal_readingmessageinfo() const {
  const ::commonmodule::ReadingMessageInfo* p = _impl_.readingmessageinfo_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::ReadingMessageInfo&>(
      ::commonmodule::_ReadingMessageInfo_default_instance_);
}
inline const ::commonmodule::ReadingMessageInfo& GenerationReadingProfile::readingmessageinfo() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationReadingProfile.readingMessageInfo)
  return _internal_readingmessageinfo();
}
inline void GenerationReadingProfile::unsafe_arena_set_allocated_readingmessageinfo(
    ::commonmodule::ReadingMessageInfo* readingmessageinfo) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.readingmessageinfo_);
  }
  _impl_.readingmessageinfo_ = readingmessageinfo;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationReadingProfile.readingMessageInfo)
}
inline ::commonmodule::ReadingMessageInfo* GenerationReadingProfile::release_readingmessageinfo() {
  
  ::commonmodule::ReadingMessageInfo* temp = _impl_.readingmessageinfo_;
  _impl_.readingmessageinfo_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::commonmodule::ReadingMessageInfo* GenerationReadingProfile::unsafe_arena_release_readingmessageinfo() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationReadingProfile.readingMessageInfo)
  
  ::commonmodule::ReadingMessageInfo* temp = _impl_.readingmessageinfo_;
  _impl_.readingmessageinfo_ = nullptr;
  return temp;
}
inline ::commonmodule::ReadingMessageInfo* GenerationReadingProfile::_internal_mutable_readingmessageinfo() {
  
  if (_impl_.readingmessageinfo_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::ReadingMessageInfo>(GetArenaForAllocation());
    _impl_.readingmessageinfo_ = p;
  }
  return _impl_.readingmessageinfo_;
}
inline ::commonmodule::ReadingMessageInfo* GenerationReadingProfile::mutable_readingmessageinfo() {
  ::commonmodule::ReadingMessageInfo* _msg = _internal_mutable_readingmessageinfo();
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationReadingProfile.readingMessageInfo)
  return _msg;
}
inline void GenerationReadingProfile::set_allocated_readingmessageinfo(::commonmodule::ReadingMessageInfo* readingmessageinfo) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.readingmessageinfo_);
  }
  if (readingmessageinfo) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(readingmessageinfo));
    if (message_arena != submessage_arena) {
      readingmessageinfo = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, readingmessageinfo, submessage_arena);
    }

  } else {

  }
  _impl_.readingmessageinfo_ = readingmessageinfo;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationReadingProfile.readingMessageInfo)
}

// .generationmodule.GeneratingUnit generatingUnit = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
inline bool GenerationReadingProfile::_internal_has_generatingunit() const {
  return this != internal_default_instance() && _impl_.generatingunit_ != nullptr;
}
inline bool GenerationReadingProfile::has_generatingunit() const {
  return _internal_has_generatingunit();
}
inline void GenerationReadingProfile::clear_generatingunit() {
  if (GetArenaForAllocation() == nullptr && _impl_.generatingunit_ != nullptr) {
    delete _impl_.generatingunit_;
  }
  _impl_.generatingunit_ = nullptr;
}
inline const ::generationmodule::GeneratingUnit& GenerationReadingProfile::_internal_generatingunit() const {
  const ::generationmodule::GeneratingUnit* p = _impl_.generatingunit_;
  return p != nullptr ? *p : reinterpret_cast<const ::generationmodule::GeneratingUnit&>(
      ::generationmodule::_GeneratingUnit_default_instance_);
}
inline const ::generationmodule::GeneratingUnit& GenerationReadingProfile::generatingunit() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationReadingProfile.generatingUnit)
  return _internal_generatingunit();
}
inline void GenerationReadingProfile::unsafe_arena_set_allocated_generatingunit(
    ::generationmodule::GeneratingUnit* generatingunit) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.generatingunit_);
  }
  _impl_.generatingunit_ = generatingunit;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationReadingProfile.generatingUnit)
}
inline ::generationmodule::GeneratingUnit* GenerationReadingProfile::release_generatingunit() {
  
  ::generationmodule::GeneratingUnit* temp = _impl_.generatingunit_;
  _impl_.generatingunit_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::generationmodule::GeneratingUnit* GenerationReadingProfile::unsafe_arena_release_generatingunit() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationReadingProfile.generatingUnit)
  
  ::generationmodule::GeneratingUnit* temp = _impl_.generatingunit_;
  _impl_.generatingunit_ = nullptr;
  return temp;
}
inline ::generationmodule::GeneratingUnit* GenerationReadingProfile::_internal_mutable_generatingunit() {
  
  if (_impl_.generatingunit_ == nullptr) {
    auto* p = CreateMaybeMessage<::generationmodule::GeneratingUnit>(GetArenaForAllocation());
    _impl_.generatingunit_ = p;
  }
  return _impl_.generatingunit_;
}
inline ::generationmodule::GeneratingUnit* GenerationReadingProfile::mutable_generatingunit() {
  ::generationmodule::GeneratingUnit* _msg = _internal_mutable_generatingunit();
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationReadingProfile.generatingUnit)
  return _msg;
}
inline void GenerationReadingProfile::set_allocated_generatingunit(::generationmodule::GeneratingUnit* generatingunit) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.generatingunit_;
  }
  if (generatingunit) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(generatingunit);
    if (message_arena != submessage_arena) {
      generatingunit = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, generatingunit, submessage_arena);
    }

  } else {

  }
  _impl_.generatingunit_ = generatingunit;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationReadingProfile.generatingUnit)
}

// .generationmodule.GenerationReading generationReading = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
inline bool GenerationReadingProfile::_internal_has_generationreading() const {
  return this != internal_default_instance() && _impl_.generationreading_ != nullptr;
}
inline bool GenerationReadingProfile::has_generationreading() const {
  return _internal_has_generationreading();
}
inline void GenerationReadingProfile::clear_generationreading() {
  if (GetArenaForAllocation() == nullptr && _impl_.generationreading_ != nullptr) {
    delete _impl_.generationreading_;
  }
  _impl_.generationreading_ = nullptr;
}
inline const ::generationmodule::GenerationReading& GenerationReadingProfile::_internal_generationreading() const {
  const ::generationmodule::GenerationReading* p = _impl_.generationreading_;
  return p != nullptr ? *p : reinterpret_cast<const ::generationmodule::GenerationReading&>(
      ::generationmodule::_GenerationReading_default_instance_);
}
inline const ::generationmodule::GenerationReading& GenerationReadingProfile::generationreading() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationReadingProfile.generationReading)
  return _internal_generationreading();
}
inline void GenerationReadingProfile::unsafe_arena_set_allocated_generationreading(
    ::generationmodule::GenerationReading* generationreading) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.generationreading_);
  }
  _impl_.generationreading_ = generationreading;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationReadingProfile.generationReading)
}
inline ::generationmodule::GenerationReading* GenerationReadingProfile::release_generationreading() {
  
  ::generationmodule::GenerationReading* temp = _impl_.generationreading_;
  _impl_.generationreading_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::generationmodule::GenerationReading* GenerationReadingProfile::unsafe_arena_release_generationreading() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationReadingProfile.generationReading)
  
  ::generationmodule::GenerationReading* temp = _impl_.generationreading_;
  _impl_.generationreading_ = nullptr;
  return temp;
}
inline ::generationmodule::GenerationReading* GenerationReadingProfile::_internal_mutable_generationreading() {
  
  if (_impl_.generationreading_ == nullptr) {
    auto* p = CreateMaybeMessage<::generationmodule::GenerationReading>(GetArenaForAllocation());
    _impl_.generationreading_ = p;
  }
  return _impl_.generationreading_;
}
inline ::generationmodule::GenerationReading* GenerationReadingProfile::mutable_generationreading() {
  ::generationmodule::GenerationReading* _msg = _internal_mutable_generationreading();
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationReadingProfile.generationReading)
  return _msg;
}
inline void GenerationReadingProfile::set_allocated_generationreading(::generationmodule::GenerationReading* generationreading) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.generationreading_;
  }
  if (generationreading) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(generationreading);
    if (message_arena != submessage_arena) {
      generationreading = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, generationreading, submessage_arena);
    }

  } else {

  }
  _impl_.generationreading_ = generationreading;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationReadingProfile.generationReading)
}

// -------------------------------------------------------------------

// GenerationPointStatus

// .commonmodule.StatusSPS blackStartEnabled = 1;
inline bool GenerationPointStatus::_internal_has_blackstartenabled() const {
  return this != internal_default_instance() && _impl_.blackstartenabled_ != nullptr;
}
inline bool GenerationPointStatus::has_blackstartenabled() const {
  return _internal_has_blackstartenabled();
}
inline const ::commonmodule::StatusSPS& GenerationPointStatus::_internal_blackstartenabled() const {
  const ::commonmodule::StatusSPS* p = _impl_.blackstartenabled_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::StatusSPS&>(
      ::commonmodule::_StatusSPS_default_instance_);
}
inline const ::commonmodule::StatusSPS& GenerationPointStatus::blackstartenabled() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationPointStatus.blackStartEnabled)
  return _internal_blackstartenabled();
}
inline void GenerationPointStatus::unsafe_arena_set_allocated_blackstartenabled(
    ::commonmodule::StatusSPS* blackstartenabled) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.blackstartenabled_);
  }
  _impl_.blackstartenabled_ = blackstartenabled;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationPointStatus.blackStartEnabled)
}
inline ::commonmodule::StatusSPS* GenerationPointStatus::release_blackstartenabled() {
  
  ::commonmodule::StatusSPS* temp = _impl_.blackstartenabled_;
  _impl_.blackstartenabled_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::commonmodule::StatusSPS* GenerationPointStatus::unsafe_arena_release_blackstartenabled() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationPointStatus.blackStartEnabled)
  
  ::commonmodule::StatusSPS* temp = _impl_.blackstartenabled_;
  _impl_.blackstartenabled_ = nullptr;
  return temp;
}
inline ::commonmodule::StatusSPS* GenerationPointStatus::_internal_mutable_blackstartenabled() {
  
  if (_impl_.blackstartenabled_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::StatusSPS>(GetArenaForAllocation());
    _impl_.blackstartenabled_ = p;
  }
  return _impl_.blackstartenabled_;
}
inline ::commonmodule::StatusSPS* GenerationPointStatus::mutable_blackstartenabled() {
  ::commonmodule::StatusSPS* _msg = _internal_mutable_blackstartenabled();
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationPointStatus.blackStartEnabled)
  return _msg;
}
inline void GenerationPointStatus::set_allocated_blackstartenabled(::commonmodule::StatusSPS* blackstartenabled) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.blackstartenabled_);
  }
  if (blackstartenabled) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(blackstartenabled));
    if (message_arena != submessage_arena) {
      blackstartenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, blackstartenabled, submessage_arena);
    }

  } else {

  }
  _impl_.blackstartenabled_ = blackstartenabled;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationPointStatus.blackStartEnabled)
}

// .commonmodule.StatusSPS frequencySetPointEnabled = 2;
inline bool GenerationPointStatus::_internal_has_frequencysetpointenabled() const {
  return this != internal_default_instance() && _impl_.frequencysetpointenabled_ != nullptr;
}
inline bool GenerationPointStatus::has_frequencysetpointenabled() const {
  return _internal_has_frequencysetpointenabled();
}
inline const ::commonmodule::StatusSPS& GenerationPointStatus::_internal_frequencysetpointenabled() const {
  const ::commonmodule::StatusSPS* p = _impl_.frequencysetpointenabled_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::StatusSPS&>(
      ::commonmodule::_StatusSPS_default_instance_);
}
inline const ::commonmodule::StatusSPS& GenerationPointStatus::frequencysetpointenabled() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationPointStatus.frequencySetPointEnabled)
  return _internal_frequencysetpointenabled();
}
inline void GenerationPointStatus::unsafe_arena_set_allocated_frequencysetpointenabled(
    ::commonmodule::StatusSPS* frequencysetpointenabled) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.frequencysetpointenabled_);
  }
  _impl_.frequencysetpointenabled_ = frequencysetpointenabled;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationPointStatus.frequencySetPointEnabled)
}
inline ::commonmodule::StatusSPS* GenerationPointStatus::release_frequencysetpointenabled() {
  
  ::commonmodule::StatusSPS* temp = _impl_.frequencysetpointenabled_;
  _impl_.frequencysetpointenabled_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::commonmodule::StatusSPS* GenerationPointStatus::unsafe_arena_release_frequencysetpointenabled() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationPointStatus.frequencySetPointEnabled)
  
  ::commonmodule::StatusSPS* temp = _impl_.frequencysetpointenabled_;
  _impl_.frequencysetpointenabled_ = nullptr;
  return temp;
}
inline ::commonmodule::StatusSPS* GenerationPointStatus::_internal_mutable_frequencysetpointenabled() {
  
  if (_impl_.frequencysetpointenabled_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::StatusSPS>(GetArenaForAllocation());
    _impl_.frequencysetpointenabled_ = p;
  }
  return _impl_.frequencysetpointenabled_;
}
inline ::commonmodule::StatusSPS* GenerationPointStatus::mutable_frequencysetpointenabled() {
  ::commonmodule::StatusSPS* _msg = _internal_mutable_frequencysetpointenabled();
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationPointStatus.frequencySetPointEnabled)
  return _msg;
}
inline void GenerationPointStatus::set_allocated_frequencysetpointenabled(::commonmodule::StatusSPS* frequencysetpointenabled) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.frequencysetpointenabled_);
  }
  if (frequencysetpointenabled) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(frequencysetpointenabled));
    if (message_arena != submessage_arena) {
      frequencysetpointenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, frequencysetpointenabled, submessage_arena);
    }

  } else {

  }
  _impl_.frequencysetpointenabled_ = frequencysetpointenabled;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationPointStatus.frequencySetPointEnabled)
}

// .google.protobuf.FloatValue pctHzDroop = 3;
inline bool GenerationPointStatus::_internal_has_pcthzdroop() const {
  return this != internal_default_instance() && _impl_.pcthzdroop_ != nullptr;
}
inline bool GenerationPointStatus::has_pcthzdroop() const {
  return _internal_has_pcthzdroop();
}
inline const ::PROTOBUF_NAMESPACE_ID::FloatValue& GenerationPointStatus::_internal_pcthzdroop() const {
  const ::PROTOBUF_NAMESPACE_ID::FloatValue* p = _impl_.pcthzdroop_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::FloatValue&>(
      ::PROTOBUF_NAMESPACE_ID::_FloatValue_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::FloatValue& GenerationPointStatus::pcthzdroop() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationPointStatus.pctHzDroop)
  return _internal_pcthzdroop();
}
inline void GenerationPointStatus::unsafe_arena_set_allocated_pcthzdroop(
    ::PROTOBUF_NAMESPACE_ID::FloatValue* pcthzdroop) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.pcthzdroop_);
  }
  _impl_.pcthzdroop_ = pcthzdroop;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationPointStatus.pctHzDroop)
}
inline ::PROTOBUF_NAMESPACE_ID::FloatValue* GenerationPointStatus::release_pcthzdroop() {
  
  ::PROTOBUF_NAMESPACE_ID::FloatValue* temp = _impl_.pcthzdroop_;
  _impl_.pcthzdroop_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::FloatValue* GenerationPointStatus::unsafe_arena_release_pcthzdroop() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationPointStatus.pctHzDroop)
  
  ::PROTOBUF_NAMESPACE_ID::FloatValue* temp = _impl_.pcthzdroop_;
  _impl_.pcthzdroop_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::FloatValue* GenerationPointStatus::_internal_mutable_pcthzdroop() {
  
  if (_impl_.pcthzdroop_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::FloatValue>(GetArenaForAllocation());
    _impl_.pcthzdroop_ = p;
  }
  return _impl_.pcthzdroop_;
}
inline ::PROTOBUF_NAMESPACE_ID::FloatValue* GenerationPointStatus::mutable_pcthzdroop() {
  ::PROTOBUF_NAMESPACE_ID::FloatValue* _msg = _internal_mutable_pcthzdroop();
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationPointStatus.pctHzDroop)
  return _msg;
}
inline void GenerationPointStatus::set_allocated_pcthzdroop(::PROTOBUF_NAMESPACE_ID::FloatValue* pcthzdroop) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.pcthzdroop_);
  }
  if (pcthzdroop) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(pcthzdroop));
    if (message_arena != submessage_arena) {
      pcthzdroop = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, pcthzdroop, submessage_arena);
    }

  } else {

  }
  _impl_.pcthzdroop_ = pcthzdroop;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationPointStatus.pctHzDroop)
}

// .google.protobuf.FloatValue pctVDroop = 4;
inline bool GenerationPointStatus::_internal_has_pctvdroop() const {
  return this != internal_default_instance() && _impl_.pctvdroop_ != nullptr;
}
inline bool GenerationPointStatus::has_pctvdroop() const {
  return _internal_has_pctvdroop();
}
inline const ::PROTOBUF_NAMESPACE_ID::FloatValue& GenerationPointStatus::_internal_pctvdroop() const {
  const ::PROTOBUF_NAMESPACE_ID::FloatValue* p = _impl_.pctvdroop_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::FloatValue&>(
      ::PROTOBUF_NAMESPACE_ID::_FloatValue_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::FloatValue& GenerationPointStatus::pctvdroop() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationPointStatus.pctVDroop)
  return _internal_pctvdroop();
}
inline void GenerationPointStatus::unsafe_arena_set_allocated_pctvdroop(
    ::PROTOBUF_NAMESPACE_ID::FloatValue* pctvdroop) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.pctvdroop_);
  }
  _impl_.pctvdroop_ = pctvdroop;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationPointStatus.pctVDroop)
}
inline ::PROTOBUF_NAMESPACE_ID::FloatValue* GenerationPointStatus::release_pctvdroop() {
  
  ::PROTOBUF_NAMESPACE_ID::FloatValue* temp = _impl_.pctvdroop_;
  _impl_.pctvdroop_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::FloatValue* GenerationPointStatus::unsafe_arena_release_pctvdroop() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationPointStatus.pctVDroop)
  
  ::PROTOBUF_NAMESPACE_ID::FloatValue* temp = _impl_.pctvdroop_;
  _impl_.pctvdroop_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::FloatValue* GenerationPointStatus::_internal_mutable_pctvdroop() {
  
  if (_impl_.pctvdroop_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::FloatValue>(GetArenaForAllocation());
    _impl_.pctvdroop_ = p;
  }
  return _impl_.pctvdroop_;
}
inline ::PROTOBUF_NAMESPACE_ID::FloatValue* GenerationPointStatus::mutable_pctvdroop() {
  ::PROTOBUF_NAMESPACE_ID::FloatValue* _msg = _internal_mutable_pctvdroop();
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationPointStatus.pctVDroop)
  return _msg;
}
inline void GenerationPointStatus::set_allocated_pctvdroop(::PROTOBUF_NAMESPACE_ID::FloatValue* pctvdroop) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.pctvdroop_);
  }
  if (pctvdroop) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(pctvdroop));
    if (message_arena != submessage_arena) {
      pctvdroop = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, pctvdroop, submessage_arena);
    }

  } else {

  }
  _impl_.pctvdroop_ = pctvdroop;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationPointStatus.pctVDroop)
}

// .commonmodule.RampRate rampRates = 5;
inline bool GenerationPointStatus::_internal_has_ramprates() const {
  return this != internal_default_instance() && _impl_.ramprates_ != nullptr;
}
inline bool GenerationPointStatus::has_ramprates() const {
  return _internal_has_ramprates();
}
inline const ::commonmodule::RampRate& GenerationPointStatus::_internal_ramprates() const {
  const ::commonmodule::RampRate* p = _impl_.ramprates_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::RampRate&>(
      ::commonmodule::_RampRate_default_instance_);
}
inline const ::commonmodule::RampRate& GenerationPointStatus::ramprates() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationPointStatus.rampRates)
  return _internal_ramprates();
}
inline void GenerationPointStatus::unsafe_arena_set_allocated_ramprates(
    ::commonmodule::RampRate* ramprates) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.ramprates_);
  }
  _impl_.ramprates_ = ramprates;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationPointStatus.rampRates)
}
inline ::commonmodule::RampRate* GenerationPointStatus::release_ramprates() {
  
  ::commonmodule::RampRate* temp = _impl_.ramprates_;
  _impl_.ramprates_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::commonmodule::RampRate* GenerationPointStatus::unsafe_arena_release_ramprates() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationPointStatus.rampRates)
  
  ::commonmodule::RampRate* temp = _impl_.ramprates_;
  _impl_.ramprates_ = nullptr;
  return temp;
}
inline ::commonmodule::RampRate* GenerationPointStatus::_internal_mutable_ramprates() {
  
  if (_impl_.ramprates_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::RampRate>(GetArenaForAllocation());
    _impl_.ramprates_ = p;
  }
  return _impl_.ramprates_;
}
inline ::commonmodule::RampRate* GenerationPointStatus::mutable_ramprates() {
  ::commonmodule::RampRate* _msg = _internal_mutable_ramprates();
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationPointStatus.rampRates)
  return _msg;
}
inline void GenerationPointStatus::set_allocated_ramprates(::commonmodule::RampRate* ramprates) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.ramprates_);
  }
  if (ramprates) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(ramprates));
    if (message_arena != submessage_arena) {
      ramprates = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, ramprates, submessage_arena);
    }

  } else {

  }
  _impl_.ramprates_ = ramprates;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationPointStatus.rampRates)
}

// .commonmodule.StatusSPS reactivePwrSetPointEnabled = 6;
inline bool GenerationPointStatus::_internal_has_reactivepwrsetpointenabled() const {
  return this != internal_default_instance() && _impl_.reactivepwrsetpointenabled_ != nullptr;
}
inline bool GenerationPointStatus::has_reactivepwrsetpointenabled() const {
  return _internal_has_reactivepwrsetpointenabled();
}
inline const ::commonmodule::StatusSPS& GenerationPointStatus::_internal_reactivepwrsetpointenabled() const {
  const ::commonmodule::StatusSPS* p = _impl_.reactivepwrsetpointenabled_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::StatusSPS&>(
      ::commonmodule::_StatusSPS_default_instance_);
}
inline const ::commonmodule::StatusSPS& GenerationPointStatus::reactivepwrsetpointenabled() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationPointStatus.reactivePwrSetPointEnabled)
  return _internal_reactivepwrsetpointenabled();
}
inline void GenerationPointStatus::unsafe_arena_set_allocated_reactivepwrsetpointenabled(
    ::commonmodule::StatusSPS* reactivepwrsetpointenabled) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.reactivepwrsetpointenabled_);
  }
  _impl_.reactivepwrsetpointenabled_ = reactivepwrsetpointenabled;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationPointStatus.reactivePwrSetPointEnabled)
}
inline ::commonmodule::StatusSPS* GenerationPointStatus::release_reactivepwrsetpointenabled() {
  
  ::commonmodule::StatusSPS* temp = _impl_.reactivepwrsetpointenabled_;
  _impl_.reactivepwrsetpointenabled_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::commonmodule::StatusSPS* GenerationPointStatus::unsafe_arena_release_reactivepwrsetpointenabled() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationPointStatus.reactivePwrSetPointEnabled)
  
  ::commonmodule::StatusSPS* temp = _impl_.reactivepwrsetpointenabled_;
  _impl_.reactivepwrsetpointenabled_ = nullptr;
  return temp;
}
inline ::commonmodule::StatusSPS* GenerationPointStatus::_internal_mutable_reactivepwrsetpointenabled() {
  
  if (_impl_.reactivepwrsetpointenabled_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::StatusSPS>(GetArenaForAllocation());
    _impl_.reactivepwrsetpointenabled_ = p;
  }
  return _impl_.reactivepwrsetpointenabled_;
}
inline ::commonmodule::StatusSPS* GenerationPointStatus::mutable_reactivepwrsetpointenabled() {
  ::commonmodule::StatusSPS* _msg = _internal_mutable_reactivepwrsetpointenabled();
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationPointStatus.reactivePwrSetPointEnabled)
  return _msg;
}
inline void GenerationPointStatus::set_allocated_reactivepwrsetpointenabled(::commonmodule::StatusSPS* reactivepwrsetpointenabled) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.reactivepwrsetpointenabled_);
  }
  if (reactivepwrsetpointenabled) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(reactivepwrsetpointenabled));
    if (message_arena != submessage_arena) {
      reactivepwrsetpointenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, reactivepwrsetpointenabled, submessage_arena);
    }

  } else {

  }
  _impl_.reactivepwrsetpointenabled_ = reactivepwrsetpointenabled;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationPointStatus.reactivePwrSetPointEnabled)
}

// .commonmodule.StatusSPS realPwrSetPointEnabled = 7;
inline bool GenerationPointStatus::_internal_has_realpwrsetpointenabled() const {
  return this != internal_default_instance() && _impl_.realpwrsetpointenabled_ != nullptr;
}
inline bool GenerationPointStatus::has_realpwrsetpointenabled() const {
  return _internal_has_realpwrsetpointenabled();
}
inline const ::commonmodule::StatusSPS& GenerationPointStatus::_internal_realpwrsetpointenabled() const {
  const ::commonmodule::StatusSPS* p = _impl_.realpwrsetpointenabled_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::StatusSPS&>(
      ::commonmodule::_StatusSPS_default_instance_);
}
inline const ::commonmodule::StatusSPS& GenerationPointStatus::realpwrsetpointenabled() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationPointStatus.realPwrSetPointEnabled)
  return _internal_realpwrsetpointenabled();
}
inline void GenerationPointStatus::unsafe_arena_set_allocated_realpwrsetpointenabled(
    ::commonmodule::StatusSPS* realpwrsetpointenabled) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.realpwrsetpointenabled_);
  }
  _impl_.realpwrsetpointenabled_ = realpwrsetpointenabled;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationPointStatus.realPwrSetPointEnabled)
}
inline ::commonmodule::StatusSPS* GenerationPointStatus::release_realpwrsetpointenabled() {
  
  ::commonmodule::StatusSPS* temp = _impl_.realpwrsetpointenabled_;
  _impl_.realpwrsetpointenabled_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::commonmodule::StatusSPS* GenerationPointStatus::unsafe_arena_release_realpwrsetpointenabled() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationPointStatus.realPwrSetPointEnabled)
  
  ::commonmodule::StatusSPS* temp = _impl_.realpwrsetpointenabled_;
  _impl_.realpwrsetpointenabled_ = nullptr;
  return temp;
}
inline ::commonmodule::StatusSPS* GenerationPointStatus::_internal_mutable_realpwrsetpointenabled() {
  
  if (_impl_.realpwrsetpointenabled_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::StatusSPS>(GetArenaForAllocation());
    _impl_.realpwrsetpointenabled_ = p;
  }
  return _impl_.realpwrsetpointenabled_;
}
inline ::commonmodule::StatusSPS* GenerationPointStatus::mutable_realpwrsetpointenabled() {
  ::commonmodule::StatusSPS* _msg = _internal_mutable_realpwrsetpointenabled();
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationPointStatus.realPwrSetPointEnabled)
  return _msg;
}
inline void GenerationPointStatus::set_allocated_realpwrsetpointenabled(::commonmodule::StatusSPS* realpwrsetpointenabled) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.realpwrsetpointenabled_);
  }
  if (realpwrsetpointenabled) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(realpwrsetpointenabled));
    if (message_arena != submessage_arena) {
      realpwrsetpointenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, realpwrsetpointenabled, submessage_arena);
    }

  } else {

  }
  _impl_.realpwrsetpointenabled_ = realpwrsetpointenabled;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationPointStatus.realPwrSetPointEnabled)
}

// .commonmodule.Optional_StateKind state = 8;
inline bool GenerationPointStatus::_internal_has_state() const {
  return this != internal_default_instance() && _impl_.state_ != nullptr;
}
inline bool GenerationPointStatus::has_state() const {
  return _internal_has_state();
}
inline const ::commonmodule::Optional_StateKind& GenerationPointStatus::_internal_state() const {
  const ::commonmodule::Optional_StateKind* p = _impl_.state_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::Optional_StateKind&>(
      ::commonmodule::_Optional_StateKind_default_instance_);
}
inline const ::commonmodule::Optional_StateKind& GenerationPointStatus::state() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationPointStatus.state)
  return _internal_state();
}
inline void GenerationPointStatus::unsafe_arena_set_allocated_state(
    ::commonmodule::Optional_StateKind* state) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.state_);
  }
  _impl_.state_ = state;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationPointStatus.state)
}
inline ::commonmodule::Optional_StateKind* GenerationPointStatus::release_state() {
  
  ::commonmodule::Optional_StateKind* temp = _impl_.state_;
  _impl_.state_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::commonmodule::Optional_StateKind* GenerationPointStatus::unsafe_arena_release_state() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationPointStatus.state)
  
  ::commonmodule::Optional_StateKind* temp = _impl_.state_;
  _impl_.state_ = nullptr;
  return temp;
}
inline ::commonmodule::Optional_StateKind* GenerationPointStatus::_internal_mutable_state() {
  
  if (_impl_.state_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::Optional_StateKind>(GetArenaForAllocation());
    _impl_.state_ = p;
  }
  return _impl_.state_;
}
inline ::commonmodule::Optional_StateKind* GenerationPointStatus::mutable_state() {
  ::commonmodule::Optional_StateKind* _msg = _internal_mutable_state();
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationPointStatus.state)
  return _msg;
}
inline void GenerationPointStatus::set_allocated_state(::commonmodule::Optional_StateKind* state) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.state_);
  }
  if (state) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(state));
    if (message_arena != submessage_arena) {
      state = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }

  } else {

  }
  _impl_.state_ = state;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationPointStatus.state)
}

// .commonmodule.StatusSPS syncBackToGrid = 9;
inline bool GenerationPointStatus::_internal_has_syncbacktogrid() const {
  return this != internal_default_instance() && _impl_.syncbacktogrid_ != nullptr;
}
inline bool GenerationPointStatus::has_syncbacktogrid() const {
  return _internal_has_syncbacktogrid();
}
inline const ::commonmodule::StatusSPS& GenerationPointStatus::_internal_syncbacktogrid() const {
  const ::commonmodule::StatusSPS* p = _impl_.syncbacktogrid_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::StatusSPS&>(
      ::commonmodule::_StatusSPS_default_instance_);
}
inline const ::commonmodule::StatusSPS& GenerationPointStatus::syncbacktogrid() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationPointStatus.syncBackToGrid)
  return _internal_syncbacktogrid();
}
inline void GenerationPointStatus::unsafe_arena_set_allocated_syncbacktogrid(
    ::commonmodule::StatusSPS* syncbacktogrid) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.syncbacktogrid_);
  }
  _impl_.syncbacktogrid_ = syncbacktogrid;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationPointStatus.syncBackToGrid)
}
inline ::commonmodule::StatusSPS* GenerationPointStatus::release_syncbacktogrid() {
  
  ::commonmodule::StatusSPS* temp = _impl_.syncbacktogrid_;
  _impl_.syncbacktogrid_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::commonmodule::StatusSPS* GenerationPointStatus::unsafe_arena_release_syncbacktogrid() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationPointStatus.syncBackToGrid)
  
  ::commonmodule::StatusSPS* temp = _impl_.syncbacktogrid_;
  _impl_.syncbacktogrid_ = nullptr;
  return temp;
}
inline ::commonmodule::StatusSPS* GenerationPointStatus::_internal_mutable_syncbacktogrid() {
  
  if (_impl_.syncbacktogrid_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::StatusSPS>(GetArenaForAllocation());
    _impl_.syncbacktogrid_ = p;
  }
  return _impl_.syncbacktogrid_;
}
inline ::commonmodule::StatusSPS* GenerationPointStatus::mutable_syncbacktogrid() {
  ::commonmodule::StatusSPS* _msg = _internal_mutable_syncbacktogrid();
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationPointStatus.syncBackToGrid)
  return _msg;
}
inline void GenerationPointStatus::set_allocated_syncbacktogrid(::commonmodule::StatusSPS* syncbacktogrid) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.syncbacktogrid_);
  }
  if (syncbacktogrid) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(syncbacktogrid));
    if (message_arena != submessage_arena) {
      syncbacktogrid = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, syncbacktogrid, submessage_arena);
    }

  } else {

  }
  _impl_.syncbacktogrid_ = syncbacktogrid;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationPointStatus.syncBackToGrid)
}

// .commonmodule.StatusSPS transToIslndOnGridLossEnabled = 10;
inline bool GenerationPointStatus::_internal_has_transtoislndongridlossenabled() const {
  return this != internal_default_instance() && _impl_.transtoislndongridlossenabled_ != nullptr;
}
inline bool GenerationPointStatus::has_transtoislndongridlossenabled() const {
  return _internal_has_transtoislndongridlossenabled();
}
inline const ::commonmodule::StatusSPS& GenerationPointStatus::_internal_transtoislndongridlossenabled() const {
  const ::commonmodule::StatusSPS* p = _impl_.transtoislndongridlossenabled_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::StatusSPS&>(
      ::commonmodule::_StatusSPS_default_instance_);
}
inline const ::commonmodule::StatusSPS& GenerationPointStatus::transtoislndongridlossenabled() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationPointStatus.transToIslndOnGridLossEnabled)
  return _internal_transtoislndongridlossenabled();
}
inline void GenerationPointStatus::unsafe_arena_set_allocated_transtoislndongridlossenabled(
    ::commonmodule::StatusSPS* transtoislndongridlossenabled) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transtoislndongridlossenabled_);
  }
  _impl_.transtoislndongridlossenabled_ = transtoislndongridlossenabled;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationPointStatus.transToIslndOnGridLossEnabled)
}
inline ::commonmodule::StatusSPS* GenerationPointStatus::release_transtoislndongridlossenabled() {
  
  ::commonmodule::StatusSPS* temp = _impl_.transtoislndongridlossenabled_;
  _impl_.transtoislndongridlossenabled_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::commonmodule::StatusSPS* GenerationPointStatus::unsafe_arena_release_transtoislndongridlossenabled() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationPointStatus.transToIslndOnGridLossEnabled)
  
  ::commonmodule::StatusSPS* temp = _impl_.transtoislndongridlossenabled_;
  _impl_.transtoislndongridlossenabled_ = nullptr;
  return temp;
}
inline ::commonmodule::StatusSPS* GenerationPointStatus::_internal_mutable_transtoislndongridlossenabled() {
  
  if (_impl_.transtoislndongridlossenabled_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::StatusSPS>(GetArenaForAllocation());
    _impl_.transtoislndongridlossenabled_ = p;
  }
  return _impl_.transtoislndongridlossenabled_;
}
inline ::commonmodule::StatusSPS* GenerationPointStatus::mutable_transtoislndongridlossenabled() {
  ::commonmodule::StatusSPS* _msg = _internal_mutable_transtoislndongridlossenabled();
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationPointStatus.transToIslndOnGridLossEnabled)
  return _msg;
}
inline void GenerationPointStatus::set_allocated_transtoislndongridlossenabled(::commonmodule::StatusSPS* transtoislndongridlossenabled) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transtoislndongridlossenabled_);
  }
  if (transtoislndongridlossenabled) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(transtoislndongridlossenabled));
    if (message_arena != submessage_arena) {
      transtoislndongridlossenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, transtoislndongridlossenabled, submessage_arena);
    }

  } else {

  }
  _impl_.transtoislndongridlossenabled_ = transtoislndongridlossenabled;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationPointStatus.transToIslndOnGridLossEnabled)
}

// .commonmodule.StatusSPS voltageSetPointEnabled = 11;
inline bool GenerationPointStatus::_internal_has_voltagesetpointenabled() const {
  return this != internal_default_instance() && _impl_.voltagesetpointenabled_ != nullptr;
}
inline bool GenerationPointStatus::has_voltagesetpointenabled() const {
  return _internal_has_voltagesetpointenabled();
}
inline const ::commonmodule::StatusSPS& GenerationPointStatus::_internal_voltagesetpointenabled() const {
  const ::commonmodule::StatusSPS* p = _impl_.voltagesetpointenabled_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::StatusSPS&>(
      ::commonmodule::_StatusSPS_default_instance_);
}
inline const ::commonmodule::StatusSPS& GenerationPointStatus::voltagesetpointenabled() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationPointStatus.voltageSetPointEnabled)
  return _internal_voltagesetpointenabled();
}
inline void GenerationPointStatus::unsafe_arena_set_allocated_voltagesetpointenabled(
    ::commonmodule::StatusSPS* voltagesetpointenabled) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.voltagesetpointenabled_);
  }
  _impl_.voltagesetpointenabled_ = voltagesetpointenabled;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationPointStatus.voltageSetPointEnabled)
}
inline ::commonmodule::StatusSPS* GenerationPointStatus::release_voltagesetpointenabled() {
  
  ::commonmodule::StatusSPS* temp = _impl_.voltagesetpointenabled_;
  _impl_.voltagesetpointenabled_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::commonmodule::StatusSPS* GenerationPointStatus::unsafe_arena_release_voltagesetpointenabled() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationPointStatus.voltageSetPointEnabled)
  
  ::commonmodule::StatusSPS* temp = _impl_.voltagesetpointenabled_;
  _impl_.voltagesetpointenabled_ = nullptr;
  return temp;
}
inline ::commonmodule::StatusSPS* GenerationPointStatus::_internal_mutable_voltagesetpointenabled() {
  
  if (_impl_.voltagesetpointenabled_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::StatusSPS>(GetArenaForAllocation());
    _impl_.voltagesetpointenabled_ = p;
  }
  return _impl_.voltagesetpointenabled_;
}
inline ::commonmodule::StatusSPS* GenerationPointStatus::mutable_voltagesetpointenabled() {
  ::commonmodule::StatusSPS* _msg = _internal_mutable_voltagesetpointenabled();
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationPointStatus.voltageSetPointEnabled)
  return _msg;
}
inline void GenerationPointStatus::set_allocated_voltagesetpointenabled(::commonmodule::StatusSPS* voltagesetpointenabled) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.voltagesetpointenabled_);
  }
  if (voltagesetpointenabled) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(voltagesetpointenabled));
    if (message_arena != submessage_arena) {
      voltagesetpointenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, voltagesetpointenabled, submessage_arena);
    }

  } else {

  }
  _impl_.voltagesetpointenabled_ = voltagesetpointenabled;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationPointStatus.voltageSetPointEnabled)
}

// .commonmodule.EnterServiceAPC enterServiceOperation = 12;
inline bool GenerationPointStatus::_internal_has_enterserviceoperation() const {
  return this != internal_default_instance() && _impl_.enterserviceoperation_ != nullptr;
}
inline bool GenerationPointStatus::has_enterserviceoperation() const {
  return _internal_has_enterserviceoperation();
}
inline const ::commonmodule::EnterServiceAPC& GenerationPointStatus::_internal_enterserviceoperation() const {
  const ::commonmodule::EnterServiceAPC* p = _impl_.enterserviceoperation_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::EnterServiceAPC&>(
      ::commonmodule::_EnterServiceAPC_default_instance_);
}
inline const ::commonmodule::EnterServiceAPC& GenerationPointStatus::enterserviceoperation() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationPointStatus.enterServiceOperation)
  return _internal_enterserviceoperation();
}
inline void GenerationPointStatus::unsafe_arena_set_allocated_enterserviceoperation(
    ::commonmodule::EnterServiceAPC* enterserviceoperation) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.enterserviceoperation_);
  }
  _impl_.enterserviceoperation_ = enterserviceoperation;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationPointStatus.enterServiceOperation)
}
inline ::commonmodule::EnterServiceAPC* GenerationPointStatus::release_enterserviceoperation() {
  
  ::commonmodule::EnterServiceAPC* temp = _impl_.enterserviceoperation_;
  _impl_.enterserviceoperation_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::commonmodule::EnterServiceAPC* GenerationPointStatus::unsafe_arena_release_enterserviceoperation() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationPointStatus.enterServiceOperation)
  
  ::commonmodule::EnterServiceAPC* temp = _impl_.enterserviceoperation_;
  _impl_.enterserviceoperation_ = nullptr;
  return temp;
}
inline ::commonmodule::EnterServiceAPC* GenerationPointStatus::_internal_mutable_enterserviceoperation() {
  
  if (_impl_.enterserviceoperation_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::EnterServiceAPC>(GetArenaForAllocation());
    _impl_.enterserviceoperation_ = p;
  }
  return _impl_.enterserviceoperation_;
}
inline ::commonmodule::EnterServiceAPC* GenerationPointStatus::mutable_enterserviceoperation() {
  ::commonmodule::EnterServiceAPC* _msg = _internal_mutable_enterserviceoperation();
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationPointStatus.enterServiceOperation)
  return _msg;
}
inline void GenerationPointStatus::set_allocated_enterserviceoperation(::commonmodule::EnterServiceAPC* enterserviceoperation) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.enterserviceoperation_);
  }
  if (enterserviceoperation) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(enterserviceoperation));
    if (message_arena != submessage_arena) {
      enterserviceoperation = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, enterserviceoperation, submessage_arena);
    }

  } else {

  }
  _impl_.enterserviceoperation_ = enterserviceoperation;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationPointStatus.enterServiceOperation)
}

// .commonmodule.HzWAPC hzWOperation = 13;
inline bool GenerationPointStatus::_internal_has_hzwoperation() const {
  return this != internal_default_instance() && _impl_.hzwoperation_ != nullptr;
}
inline bool GenerationPointStatus::has_hzwoperation() const {
  return _internal_has_hzwoperation();
}
inline const ::commonmodule::HzWAPC& GenerationPointStatus::_internal_hzwoperation() const {
  const ::commonmodule::HzWAPC* p = _impl_.hzwoperation_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::HzWAPC&>(
      ::commonmodule::_HzWAPC_default_instance_);
}
inline const ::commonmodule::HzWAPC& GenerationPointStatus::hzwoperation() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationPointStatus.hzWOperation)
  return _internal_hzwoperation();
}
inline void GenerationPointStatus::unsafe_arena_set_allocated_hzwoperation(
    ::commonmodule::HzWAPC* hzwoperation) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.hzwoperation_);
  }
  _impl_.hzwoperation_ = hzwoperation;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationPointStatus.hzWOperation)
}
inline ::commonmodule::HzWAPC* GenerationPointStatus::release_hzwoperation() {
  
  ::commonmodule::HzWAPC* temp = _impl_.hzwoperation_;
  _impl_.hzwoperation_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::commonmodule::HzWAPC* GenerationPointStatus::unsafe_arena_release_hzwoperation() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationPointStatus.hzWOperation)
  
  ::commonmodule::HzWAPC* temp = _impl_.hzwoperation_;
  _impl_.hzwoperation_ = nullptr;
  return temp;
}
inline ::commonmodule::HzWAPC* GenerationPointStatus::_internal_mutable_hzwoperation() {
  
  if (_impl_.hzwoperation_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::HzWAPC>(GetArenaForAllocation());
    _impl_.hzwoperation_ = p;
  }
  return _impl_.hzwoperation_;
}
inline ::commonmodule::HzWAPC* GenerationPointStatus::mutable_hzwoperation() {
  ::commonmodule::HzWAPC* _msg = _internal_mutable_hzwoperation();
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationPointStatus.hzWOperation)
  return _msg;
}
inline void GenerationPointStatus::set_allocated_hzwoperation(::commonmodule::HzWAPC* hzwoperation) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.hzwoperation_);
  }
  if (hzwoperation) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(hzwoperation));
    if (message_arena != submessage_arena) {
      hzwoperation = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, hzwoperation, submessage_arena);
    }

  } else {

  }
  _impl_.hzwoperation_ = hzwoperation;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationPointStatus.hzWOperation)
}

// .commonmodule.LimitWAPC limitWOperation = 14;
inline bool GenerationPointStatus::_internal_has_limitwoperation() const {
  return this != internal_default_instance() && _impl_.limitwoperation_ != nullptr;
}
inline bool GenerationPointStatus::has_limitwoperation() const {
  return _internal_has_limitwoperation();
}
inline const ::commonmodule::LimitWAPC& GenerationPointStatus::_internal_limitwoperation() const {
  const ::commonmodule::LimitWAPC* p = _impl_.limitwoperation_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::LimitWAPC&>(
      ::commonmodule::_LimitWAPC_default_instance_);
}
inline const ::commonmodule::LimitWAPC& GenerationPointStatus::limitwoperation() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationPointStatus.limitWOperation)
  return _internal_limitwoperation();
}
inline void GenerationPointStatus::unsafe_arena_set_allocated_limitwoperation(
    ::commonmodule::LimitWAPC* limitwoperation) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.limitwoperation_);
  }
  _impl_.limitwoperation_ = limitwoperation;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationPointStatus.limitWOperation)
}
inline ::commonmodule::LimitWAPC* GenerationPointStatus::release_limitwoperation() {
  
  ::commonmodule::LimitWAPC* temp = _impl_.limitwoperation_;
  _impl_.limitwoperation_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::commonmodule::LimitWAPC* GenerationPointStatus::unsafe_arena_release_limitwoperation() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationPointStatus.limitWOperation)
  
  ::commonmodule::LimitWAPC* temp = _impl_.limitwoperation_;
  _impl_.limitwoperation_ = nullptr;
  return temp;
}
inline ::commonmodule::LimitWAPC* GenerationPointStatus::_internal_mutable_limitwoperation() {
  
  if (_impl_.limitwoperation_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::LimitWAPC>(GetArenaForAllocation());
    _impl_.limitwoperation_ = p;
  }
  return _impl_.limitwoperation_;
}
inline ::commonmodule::LimitWAPC* GenerationPointStatus::mutable_limitwoperation() {
  ::commonmodule::LimitWAPC* _msg = _internal_mutable_limitwoperation();
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationPointStatus.limitWOperation)
  return _msg;
}
inline void GenerationPointStatus::set_allocated_limitwoperation(::commonmodule::LimitWAPC* limitwoperation) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.limitwoperation_);
  }
  if (limitwoperation) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(limitwoperation));
    if (message_arena != submessage_arena) {
      limitwoperation = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, limitwoperation, submessage_arena);
    }

  } else {

  }
  _impl_.limitwoperation_ = limitwoperation;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationPointStatus.limitWOperation)
}

// .commonmodule.PFSPC pFOperation = 15;
inline bool GenerationPointStatus::_internal_has_pfoperation() const {
  return this != internal_default_instance() && _impl_.pfoperation_ != nullptr;
}
inline bool GenerationPointStatus::has_pfoperation() const {
  return _internal_has_pfoperation();
}
inline const ::commonmodule::PFSPC& GenerationPointStatus::_internal_pfoperation() const {
  const ::commonmodule::PFSPC* p = _impl_.pfoperation_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::PFSPC&>(
      ::commonmodule::_PFSPC_default_instance_);
}
inline const ::commonmodule::PFSPC& GenerationPointStatus::pfoperation() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationPointStatus.pFOperation)
  return _internal_pfoperation();
}
inline void GenerationPointStatus::unsafe_arena_set_allocated_pfoperation(
    ::commonmodule::PFSPC* pfoperation) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.pfoperation_);
  }
  _impl_.pfoperation_ = pfoperation;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationPointStatus.pFOperation)
}
inline ::commonmodule::PFSPC* GenerationPointStatus::release_pfoperation() {
  
  ::commonmodule::PFSPC* temp = _impl_.pfoperation_;
  _impl_.pfoperation_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::commonmodule::PFSPC* GenerationPointStatus::unsafe_arena_release_pfoperation() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationPointStatus.pFOperation)
  
  ::commonmodule::PFSPC* temp = _impl_.pfoperation_;
  _impl_.pfoperation_ = nullptr;
  return temp;
}
inline ::commonmodule::PFSPC* GenerationPointStatus::_internal_mutable_pfoperation() {
  
  if (_impl_.pfoperation_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::PFSPC>(GetArenaForAllocation());
    _impl_.pfoperation_ = p;
  }
  return _impl_.pfoperation_;
}
inline ::commonmodule::PFSPC* GenerationPointStatus::mutable_pfoperation() {
  ::commonmodule::PFSPC* _msg = _internal_mutable_pfoperation();
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationPointStatus.pFOperation)
  return _msg;
}
inline void GenerationPointStatus::set_allocated_pfoperation(::commonmodule::PFSPC* pfoperation) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.pfoperation_);
  }
  if (pfoperation) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(pfoperation));
    if (message_arena != submessage_arena) {
      pfoperation = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, pfoperation, submessage_arena);
    }

  } else {

  }
  _impl_.pfoperation_ = pfoperation;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationPointStatus.pFOperation)
}

// .commonmodule.TmHzCSG tmHzTripOperation = 16;
inline bool GenerationPointStatus::_internal_has_tmhztripoperation() const {
  return this != internal_default_instance() && _impl_.tmhztripoperation_ != nullptr;
}
inline bool GenerationPointStatus::has_tmhztripoperation() const {
  return _internal_has_tmhztripoperation();
}
inline const ::commonmodule::TmHzCSG& GenerationPointStatus::_internal_tmhztripoperation() const {
  const ::commonmodule::TmHzCSG* p = _impl_.tmhztripoperation_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::TmHzCSG&>(
      ::commonmodule::_TmHzCSG_default_instance_);
}
inline const ::commonmodule::TmHzCSG& GenerationPointStatus::tmhztripoperation() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationPointStatus.tmHzTripOperation)
  return _internal_tmhztripoperation();
}
inline void GenerationPointStatus::unsafe_arena_set_allocated_tmhztripoperation(
    ::commonmodule::TmHzCSG* tmhztripoperation) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.tmhztripoperation_);
  }
  _impl_.tmhztripoperation_ = tmhztripoperation;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationPointStatus.tmHzTripOperation)
}
inline ::commonmodule::TmHzCSG* GenerationPointStatus::release_tmhztripoperation() {
  
  ::commonmodule::TmHzCSG* temp = _impl_.tmhztripoperation_;
  _impl_.tmhztripoperation_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::commonmodule::TmHzCSG* GenerationPointStatus::unsafe_arena_release_tmhztripoperation() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationPointStatus.tmHzTripOperation)
  
  ::commonmodule::TmHzCSG* temp = _impl_.tmhztripoperation_;
  _impl_.tmhztripoperation_ = nullptr;
  return temp;
}
inline ::commonmodule::TmHzCSG* GenerationPointStatus::_internal_mutable_tmhztripoperation() {
  
  if (_impl_.tmhztripoperation_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::TmHzCSG>(GetArenaForAllocation());
    _impl_.tmhztripoperation_ = p;
  }
  return _impl_.tmhztripoperation_;
}
inline ::commonmodule::TmHzCSG* GenerationPointStatus::mutable_tmhztripoperation() {
  ::commonmodule::TmHzCSG* _msg = _internal_mutable_tmhztripoperation();
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationPointStatus.tmHzTripOperation)
  return _msg;
}
inline void GenerationPointStatus::set_allocated_tmhztripoperation(::commonmodule::TmHzCSG* tmhztripoperation) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.tmhztripoperation_);
  }
  if (tmhztripoperation) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(tmhztripoperation));
    if (message_arena != submessage_arena) {
      tmhztripoperation = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, tmhztripoperation, submessage_arena);
    }

  } else {

  }
  _impl_.tmhztripoperation_ = tmhztripoperation;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationPointStatus.tmHzTripOperation)
}

// .commonmodule.TmVoltCSG tmVoltTripOperation = 17;
inline bool GenerationPointStatus::_internal_has_tmvolttripoperation() const {
  return this != internal_default_instance() && _impl_.tmvolttripoperation_ != nullptr;
}
inline bool GenerationPointStatus::has_tmvolttripoperation() const {
  return _internal_has_tmvolttripoperation();
}
inline const ::commonmodule::TmVoltCSG& GenerationPointStatus::_internal_tmvolttripoperation() const {
  const ::commonmodule::TmVoltCSG* p = _impl_.tmvolttripoperation_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::TmVoltCSG&>(
      ::commonmodule::_TmVoltCSG_default_instance_);
}
inline const ::commonmodule::TmVoltCSG& GenerationPointStatus::tmvolttripoperation() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationPointStatus.tmVoltTripOperation)
  return _internal_tmvolttripoperation();
}
inline void GenerationPointStatus::unsafe_arena_set_allocated_tmvolttripoperation(
    ::commonmodule::TmVoltCSG* tmvolttripoperation) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.tmvolttripoperation_);
  }
  _impl_.tmvolttripoperation_ = tmvolttripoperation;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationPointStatus.tmVoltTripOperation)
}
inline ::commonmodule::TmVoltCSG* GenerationPointStatus::release_tmvolttripoperation() {
  
  ::commonmodule::TmVoltCSG* temp = _impl_.tmvolttripoperation_;
  _impl_.tmvolttripoperation_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::commonmodule::TmVoltCSG* GenerationPointStatus::unsafe_arena_release_tmvolttripoperation() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationPointStatus.tmVoltTripOperation)
  
  ::commonmodule::TmVoltCSG* temp = _impl_.tmvolttripoperation_;
  _impl_.tmvolttripoperation_ = nullptr;
  return temp;
}
inline ::commonmodule::TmVoltCSG* GenerationPointStatus::_internal_mutable_tmvolttripoperation() {
  
  if (_impl_.tmvolttripoperation_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::TmVoltCSG>(GetArenaForAllocation());
    _impl_.tmvolttripoperation_ = p;
  }
  return _impl_.tmvolttripoperation_;
}
inline ::commonmodule::TmVoltCSG* GenerationPointStatus::mutable_tmvolttripoperation() {
  ::commonmodule::TmVoltCSG* _msg = _internal_mutable_tmvolttripoperation();
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationPointStatus.tmVoltTripOperation)
  return _msg;
}
inline void GenerationPointStatus::set_allocated_tmvolttripoperation(::commonmodule::TmVoltCSG* tmvolttripoperation) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.tmvolttripoperation_);
  }
  if (tmvolttripoperation) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(tmvolttripoperation));
    if (message_arena != submessage_arena) {
      tmvolttripoperation = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, tmvolttripoperation, submessage_arena);
    }

  } else {

  }
  _impl_.tmvolttripoperation_ = tmvolttripoperation;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationPointStatus.tmVoltTripOperation)
}

// .commonmodule.VarSPC vArOperation = 18;
inline bool GenerationPointStatus::_internal_has_varoperation() const {
  return this != internal_default_instance() && _impl_.varoperation_ != nullptr;
}
inline bool GenerationPointStatus::has_varoperation() const {
  return _internal_has_varoperation();
}
inline const ::commonmodule::VarSPC& GenerationPointStatus::_internal_varoperation() const {
  const ::commonmodule::VarSPC* p = _impl_.varoperation_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::VarSPC&>(
      ::commonmodule::_VarSPC_default_instance_);
}
inline const ::commonmodule::VarSPC& GenerationPointStatus::varoperation() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationPointStatus.vArOperation)
  return _internal_varoperation();
}
inline void GenerationPointStatus::unsafe_arena_set_allocated_varoperation(
    ::commonmodule::VarSPC* varoperation) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.varoperation_);
  }
  _impl_.varoperation_ = varoperation;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationPointStatus.vArOperation)
}
inline ::commonmodule::VarSPC* GenerationPointStatus::release_varoperation() {
  
  ::commonmodule::VarSPC* temp = _impl_.varoperation_;
  _impl_.varoperation_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::commonmodule::VarSPC* GenerationPointStatus::unsafe_arena_release_varoperation() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationPointStatus.vArOperation)
  
  ::commonmodule::VarSPC* temp = _impl_.varoperation_;
  _impl_.varoperation_ = nullptr;
  return temp;
}
inline ::commonmodule::VarSPC* GenerationPointStatus::_internal_mutable_varoperation() {
  
  if (_impl_.varoperation_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::VarSPC>(GetArenaForAllocation());
    _impl_.varoperation_ = p;
  }
  return _impl_.varoperation_;
}
inline ::commonmodule::VarSPC* GenerationPointStatus::mutable_varoperation() {
  ::commonmodule::VarSPC* _msg = _internal_mutable_varoperation();
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationPointStatus.vArOperation)
  return _msg;
}
inline void GenerationPointStatus::set_allocated_varoperation(::commonmodule::VarSPC* varoperation) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.varoperation_);
  }
  if (varoperation) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(varoperation));
    if (message_arena != submessage_arena) {
      varoperation = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, varoperation, submessage_arena);
    }

  } else {

  }
  _impl_.varoperation_ = varoperation;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationPointStatus.vArOperation)
}

// .commonmodule.VoltVarCSG voltVarOperation = 19;
inline bool GenerationPointStatus::_internal_has_voltvaroperation() const {
  return this != internal_default_instance() && _impl_.voltvaroperation_ != nullptr;
}
inline bool GenerationPointStatus::has_voltvaroperation() const {
  return _internal_has_voltvaroperation();
}
inline const ::commonmodule::VoltVarCSG& GenerationPointStatus::_internal_voltvaroperation() const {
  const ::commonmodule::VoltVarCSG* p = _impl_.voltvaroperation_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::VoltVarCSG&>(
      ::commonmodule::_VoltVarCSG_default_instance_);
}
inline const ::commonmodule::VoltVarCSG& GenerationPointStatus::voltvaroperation() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationPointStatus.voltVarOperation)
  return _internal_voltvaroperation();
}
inline void GenerationPointStatus::unsafe_arena_set_allocated_voltvaroperation(
    ::commonmodule::VoltVarCSG* voltvaroperation) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.voltvaroperation_);
  }
  _impl_.voltvaroperation_ = voltvaroperation;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationPointStatus.voltVarOperation)
}
inline ::commonmodule::VoltVarCSG* GenerationPointStatus::release_voltvaroperation() {
  
  ::commonmodule::VoltVarCSG* temp = _impl_.voltvaroperation_;
  _impl_.voltvaroperation_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::commonmodule::VoltVarCSG* GenerationPointStatus::unsafe_arena_release_voltvaroperation() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationPointStatus.voltVarOperation)
  
  ::commonmodule::VoltVarCSG* temp = _impl_.voltvaroperation_;
  _impl_.voltvaroperation_ = nullptr;
  return temp;
}
inline ::commonmodule::VoltVarCSG* GenerationPointStatus::_internal_mutable_voltvaroperation() {
  
  if (_impl_.voltvaroperation_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::VoltVarCSG>(GetArenaForAllocation());
    _impl_.voltvaroperation_ = p;
  }
  return _impl_.voltvaroperation_;
}
inline ::commonmodule::VoltVarCSG* GenerationPointStatus::mutable_voltvaroperation() {
  ::commonmodule::VoltVarCSG* _msg = _internal_mutable_voltvaroperation();
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationPointStatus.voltVarOperation)
  return _msg;
}
inline void GenerationPointStatus::set_allocated_voltvaroperation(::commonmodule::VoltVarCSG* voltvaroperation) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.voltvaroperation_);
  }
  if (voltvaroperation) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(voltvaroperation));
    if (message_arena != submessage_arena) {
      voltvaroperation = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, voltvaroperation, submessage_arena);
    }

  } else {

  }
  _impl_.voltvaroperation_ = voltvaroperation;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationPointStatus.voltVarOperation)
}

// .commonmodule.VoltWCSG voltWOperation = 20;
inline bool GenerationPointStatus::_internal_has_voltwoperation() const {
  return this != internal_default_instance() && _impl_.voltwoperation_ != nullptr;
}
inline bool GenerationPointStatus::has_voltwoperation() const {
  return _internal_has_voltwoperation();
}
inline const ::commonmodule::VoltWCSG& GenerationPointStatus::_internal_voltwoperation() const {
  const ::commonmodule::VoltWCSG* p = _impl_.voltwoperation_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::VoltWCSG&>(
      ::commonmodule::_VoltWCSG_default_instance_);
}
inline const ::commonmodule::VoltWCSG& GenerationPointStatus::voltwoperation() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationPointStatus.voltWOperation)
  return _internal_voltwoperation();
}
inline void GenerationPointStatus::unsafe_arena_set_allocated_voltwoperation(
    ::commonmodule::VoltWCSG* voltwoperation) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.voltwoperation_);
  }
  _impl_.voltwoperation_ = voltwoperation;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationPointStatus.voltWOperation)
}
inline ::commonmodule::VoltWCSG* GenerationPointStatus::release_voltwoperation() {
  
  ::commonmodule::VoltWCSG* temp = _impl_.voltwoperation_;
  _impl_.voltwoperation_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::commonmodule::VoltWCSG* GenerationPointStatus::unsafe_arena_release_voltwoperation() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationPointStatus.voltWOperation)
  
  ::commonmodule::VoltWCSG* temp = _impl_.voltwoperation_;
  _impl_.voltwoperation_ = nullptr;
  return temp;
}
inline ::commonmodule::VoltWCSG* GenerationPointStatus::_internal_mutable_voltwoperation() {
  
  if (_impl_.voltwoperation_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::VoltWCSG>(GetArenaForAllocation());
    _impl_.voltwoperation_ = p;
  }
  return _impl_.voltwoperation_;
}
inline ::commonmodule::VoltWCSG* GenerationPointStatus::mutable_voltwoperation() {
  ::commonmodule::VoltWCSG* _msg = _internal_mutable_voltwoperation();
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationPointStatus.voltWOperation)
  return _msg;
}
inline void GenerationPointStatus::set_allocated_voltwoperation(::commonmodule::VoltWCSG* voltwoperation) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.voltwoperation_);
  }
  if (voltwoperation) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(voltwoperation));
    if (message_arena != submessage_arena) {
      voltwoperation = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, voltwoperation, submessage_arena);
    }

  } else {

  }
  _impl_.voltwoperation_ = voltwoperation;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationPointStatus.voltWOperation)
}

// .commonmodule.WVarCSG wVarOperation = 21;
inline bool GenerationPointStatus::_internal_has_wvaroperation() const {
  return this != internal_default_instance() && _impl_.wvaroperation_ != nullptr;
}
inline bool GenerationPointStatus::has_wvaroperation() const {
  return _internal_has_wvaroperation();
}
inline const ::commonmodule::WVarCSG& GenerationPointStatus::_internal_wvaroperation() const {
  const ::commonmodule::WVarCSG* p = _impl_.wvaroperation_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::WVarCSG&>(
      ::commonmodule::_WVarCSG_default_instance_);
}
inline const ::commonmodule::WVarCSG& GenerationPointStatus::wvaroperation() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationPointStatus.wVarOperation)
  return _internal_wvaroperation();
}
inline void GenerationPointStatus::unsafe_arena_set_allocated_wvaroperation(
    ::commonmodule::WVarCSG* wvaroperation) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.wvaroperation_);
  }
  _impl_.wvaroperation_ = wvaroperation;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationPointStatus.wVarOperation)
}
inline ::commonmodule::WVarCSG* GenerationPointStatus::release_wvaroperation() {
  
  ::commonmodule::WVarCSG* temp = _impl_.wvaroperation_;
  _impl_.wvaroperation_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::commonmodule::WVarCSG* GenerationPointStatus::unsafe_arena_release_wvaroperation() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationPointStatus.wVarOperation)
  
  ::commonmodule::WVarCSG* temp = _impl_.wvaroperation_;
  _impl_.wvaroperation_ = nullptr;
  return temp;
}
inline ::commonmodule::WVarCSG* GenerationPointStatus::_internal_mutable_wvaroperation() {
  
  if (_impl_.wvaroperation_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::WVarCSG>(GetArenaForAllocation());
    _impl_.wvaroperation_ = p;
  }
  return _impl_.wvaroperation_;
}
inline ::commonmodule::WVarCSG* GenerationPointStatus::mutable_wvaroperation() {
  ::commonmodule::WVarCSG* _msg = _internal_mutable_wvaroperation();
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationPointStatus.wVarOperation)
  return _msg;
}
inline void GenerationPointStatus::set_allocated_wvaroperation(::commonmodule::WVarCSG* wvaroperation) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.wvaroperation_);
  }
  if (wvaroperation) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(wvaroperation));
    if (message_arena != submessage_arena) {
      wvaroperation = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, wvaroperation, submessage_arena);
    }

  } else {

  }
  _impl_.wvaroperation_ = wvaroperation;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationPointStatus.wVarOperation)
}

// -------------------------------------------------------------------

// GenerationEventAndStatusZGEN

// .commonmodule.LogicalNodeForEventAndStatus logicalNodeForEventAndStatus = 1 [(.uml.option_parent_message) = true];
inline bool GenerationEventAndStatusZGEN::_internal_has_logicalnodeforeventandstatus() const {
  return this != internal_default_instance() && _impl_.logicalnodeforeventandstatus_ != nullptr;
}
inline bool GenerationEventAndStatusZGEN::has_logicalnodeforeventandstatus() const {
  return _internal_has_logicalnodeforeventandstatus();
}
inline const ::commonmodule::LogicalNodeForEventAndStatus& GenerationEventAndStatusZGEN::_internal_logicalnodeforeventandstatus() const {
  const ::commonmodule::LogicalNodeForEventAndStatus* p = _impl_.logicalnodeforeventandstatus_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::LogicalNodeForEventAndStatus&>(
      ::commonmodule::_LogicalNodeForEventAndStatus_default_instance_);
}
inline const ::commonmodule::LogicalNodeForEventAndStatus& GenerationEventAndStatusZGEN::logicalnodeforeventandstatus() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationEventAndStatusZGEN.logicalNodeForEventAndStatus)
  return _internal_logicalnodeforeventandstatus();
}
inline void GenerationEventAndStatusZGEN::unsafe_arena_set_allocated_logicalnodeforeventandstatus(
    ::commonmodule::LogicalNodeForEventAndStatus* logicalnodeforeventandstatus) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.logicalnodeforeventandstatus_);
  }
  _impl_.logicalnodeforeventandstatus_ = logicalnodeforeventandstatus;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationEventAndStatusZGEN.logicalNodeForEventAndStatus)
}
inline ::commonmodule::LogicalNodeForEventAndStatus* GenerationEventAndStatusZGEN::release_logicalnodeforeventandstatus() {
  
  ::commonmodule::LogicalNodeForEventAndStatus* temp = _impl_.logicalnodeforeventandstatus_;
  _impl_.logicalnodeforeventandstatus_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::commonmodule::LogicalNodeForEventAndStatus* GenerationEventAndStatusZGEN::unsafe_arena_release_logicalnodeforeventandstatus() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationEventAndStatusZGEN.logicalNodeForEventAndStatus)
  
  ::commonmodule::LogicalNodeForEventAndStatus* temp = _impl_.logicalnodeforeventandstatus_;
  _impl_.logicalnodeforeventandstatus_ = nullptr;
  return temp;
}
inline ::commonmodule::LogicalNodeForEventAndStatus* GenerationEventAndStatusZGEN::_internal_mutable_logicalnodeforeventandstatus() {
  
  if (_impl_.logicalnodeforeventandstatus_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::LogicalNodeForEventAndStatus>(GetArenaForAllocation());
    _impl_.logicalnodeforeventandstatus_ = p;
  }
  return _impl_.logicalnodeforeventandstatus_;
}
inline ::commonmodule::LogicalNodeForEventAndStatus* GenerationEventAndStatusZGEN::mutable_logicalnodeforeventandstatus() {
  ::commonmodule::LogicalNodeForEventAndStatus* _msg = _internal_mutable_logicalnodeforeventandstatus();
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationEventAndStatusZGEN.logicalNodeForEventAndStatus)
  return _msg;
}
inline void GenerationEventAndStatusZGEN::set_allocated_logicalnodeforeventandstatus(::commonmodule::LogicalNodeForEventAndStatus* logicalnodeforeventandstatus) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.logicalnodeforeventandstatus_);
  }
  if (logicalnodeforeventandstatus) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(logicalnodeforeventandstatus));
    if (message_arena != submessage_arena) {
      logicalnodeforeventandstatus = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, logicalnodeforeventandstatus, submessage_arena);
    }

  } else {

  }
  _impl_.logicalnodeforeventandstatus_ = logicalnodeforeventandstatus;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationEventAndStatusZGEN.logicalNodeForEventAndStatus)
}

// .commonmodule.StatusSPS AuxPwrSt = 2;
inline bool GenerationEventAndStatusZGEN::_internal_has_auxpwrst() const {
  return this != internal_default_instance() && _impl_.auxpwrst_ != nullptr;
}
inline bool GenerationEventAndStatusZGEN::has_auxpwrst() const {
  return _internal_has_auxpwrst();
}
inline const ::commonmodule::StatusSPS& GenerationEventAndStatusZGEN::_internal_auxpwrst() const {
  const ::commonmodule::StatusSPS* p = _impl_.auxpwrst_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::StatusSPS&>(
      ::commonmodule::_StatusSPS_default_instance_);
}
inline const ::commonmodule::StatusSPS& GenerationEventAndStatusZGEN::auxpwrst() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationEventAndStatusZGEN.AuxPwrSt)
  return _internal_auxpwrst();
}
inline void GenerationEventAndStatusZGEN::unsafe_arena_set_allocated_auxpwrst(
    ::commonmodule::StatusSPS* auxpwrst) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.auxpwrst_);
  }
  _impl_.auxpwrst_ = auxpwrst;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationEventAndStatusZGEN.AuxPwrSt)
}
inline ::commonmodule::StatusSPS* GenerationEventAndStatusZGEN::release_auxpwrst() {
  
  ::commonmodule::StatusSPS* temp = _impl_.auxpwrst_;
  _impl_.auxpwrst_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::commonmodule::StatusSPS* GenerationEventAndStatusZGEN::unsafe_arena_release_auxpwrst() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationEventAndStatusZGEN.AuxPwrSt)
  
  ::commonmodule::StatusSPS* temp = _impl_.auxpwrst_;
  _impl_.auxpwrst_ = nullptr;
  return temp;
}
inline ::commonmodule::StatusSPS* GenerationEventAndStatusZGEN::_internal_mutable_auxpwrst() {
  
  if (_impl_.auxpwrst_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::StatusSPS>(GetArenaForAllocation());
    _impl_.auxpwrst_ = p;
  }
  return _impl_.auxpwrst_;
}
inline ::commonmodule::StatusSPS* GenerationEventAndStatusZGEN::mutable_auxpwrst() {
  ::commonmodule::StatusSPS* _msg = _internal_mutable_auxpwrst();
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationEventAndStatusZGEN.AuxPwrSt)
  return _msg;
}
inline void GenerationEventAndStatusZGEN::set_allocated_auxpwrst(::commonmodule::StatusSPS* auxpwrst) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.auxpwrst_);
  }
  if (auxpwrst) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(auxpwrst));
    if (message_arena != submessage_arena) {
      auxpwrst = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, auxpwrst, submessage_arena);
    }

  } else {

  }
  _impl_.auxpwrst_ = auxpwrst;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationEventAndStatusZGEN.AuxPwrSt)
}

// .commonmodule.ENS_DynamicTestKind DynamicTest = 3;
inline bool GenerationEventAndStatusZGEN::_internal_has_dynamictest() const {
  return this != internal_default_instance() && _impl_.dynamictest_ != nullptr;
}
inline bool GenerationEventAndStatusZGEN::has_dynamictest() const {
  return _internal_has_dynamictest();
}
inline const ::commonmodule::ENS_DynamicTestKind& GenerationEventAndStatusZGEN::_internal_dynamictest() const {
  const ::commonmodule::ENS_DynamicTestKind* p = _impl_.dynamictest_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::ENS_DynamicTestKind&>(
      ::commonmodule::_ENS_DynamicTestKind_default_instance_);
}
inline const ::commonmodule::ENS_DynamicTestKind& GenerationEventAndStatusZGEN::dynamictest() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationEventAndStatusZGEN.DynamicTest)
  return _internal_dynamictest();
}
inline void GenerationEventAndStatusZGEN::unsafe_arena_set_allocated_dynamictest(
    ::commonmodule::ENS_DynamicTestKind* dynamictest) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.dynamictest_);
  }
  _impl_.dynamictest_ = dynamictest;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationEventAndStatusZGEN.DynamicTest)
}
inline ::commonmodule::ENS_DynamicTestKind* GenerationEventAndStatusZGEN::release_dynamictest() {
  
  ::commonmodule::ENS_DynamicTestKind* temp = _impl_.dynamictest_;
  _impl_.dynamictest_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::commonmodule::ENS_DynamicTestKind* GenerationEventAndStatusZGEN::unsafe_arena_release_dynamictest() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationEventAndStatusZGEN.DynamicTest)
  
  ::commonmodule::ENS_DynamicTestKind* temp = _impl_.dynamictest_;
  _impl_.dynamictest_ = nullptr;
  return temp;
}
inline ::commonmodule::ENS_DynamicTestKind* GenerationEventAndStatusZGEN::_internal_mutable_dynamictest() {
  
  if (_impl_.dynamictest_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::ENS_DynamicTestKind>(GetArenaForAllocation());
    _impl_.dynamictest_ = p;
  }
  return _impl_.dynamictest_;
}
inline ::commonmodule::ENS_DynamicTestKind* GenerationEventAndStatusZGEN::mutable_dynamictest() {
  ::commonmodule::ENS_DynamicTestKind* _msg = _internal_mutable_dynamictest();
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationEventAndStatusZGEN.DynamicTest)
  return _msg;
}
inline void GenerationEventAndStatusZGEN::set_allocated_dynamictest(::commonmodule::ENS_DynamicTestKind* dynamictest) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.dynamictest_);
  }
  if (dynamictest) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(dynamictest));
    if (message_arena != submessage_arena) {
      dynamictest = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, dynamictest, submessage_arena);
    }

  } else {

  }
  _impl_.dynamictest_ = dynamictest;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationEventAndStatusZGEN.DynamicTest)
}

// .commonmodule.StatusSPS EmgStop = 4;
inline bool GenerationEventAndStatusZGEN::_internal_has_emgstop() const {
  return this != internal_default_instance() && _impl_.emgstop_ != nullptr;
}
inline bool GenerationEventAndStatusZGEN::has_emgstop() const {
  return _internal_has_emgstop();
}
inline const ::commonmodule::StatusSPS& GenerationEventAndStatusZGEN::_internal_emgstop() const {
  const ::commonmodule::StatusSPS* p = _impl_.emgstop_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::StatusSPS&>(
      ::commonmodule::_StatusSPS_default_instance_);
}
inline const ::commonmodule::StatusSPS& GenerationEventAndStatusZGEN::emgstop() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationEventAndStatusZGEN.EmgStop)
  return _internal_emgstop();
}
inline void GenerationEventAndStatusZGEN::unsafe_arena_set_allocated_emgstop(
    ::commonmodule::StatusSPS* emgstop) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.emgstop_);
  }
  _impl_.emgstop_ = emgstop;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationEventAndStatusZGEN.EmgStop)
}
inline ::commonmodule::StatusSPS* GenerationEventAndStatusZGEN::release_emgstop() {
  
  ::commonmodule::StatusSPS* temp = _impl_.emgstop_;
  _impl_.emgstop_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::commonmodule::StatusSPS* GenerationEventAndStatusZGEN::unsafe_arena_release_emgstop() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationEventAndStatusZGEN.EmgStop)
  
  ::commonmodule::StatusSPS* temp = _impl_.emgstop_;
  _impl_.emgstop_ = nullptr;
  return temp;
}
inline ::commonmodule::StatusSPS* GenerationEventAndStatusZGEN::_internal_mutable_emgstop() {
  
  if (_impl_.emgstop_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::StatusSPS>(GetArenaForAllocation());
    _impl_.emgstop_ = p;
  }
  return _impl_.emgstop_;
}
inline ::commonmodule::StatusSPS* GenerationEventAndStatusZGEN::mutable_emgstop() {
  ::commonmodule::StatusSPS* _msg = _internal_mutable_emgstop();
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationEventAndStatusZGEN.EmgStop)
  return _msg;
}
inline void GenerationEventAndStatusZGEN::set_allocated_emgstop(::commonmodule::StatusSPS* emgstop) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.emgstop_);
  }
  if (emgstop) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(emgstop));
    if (message_arena != submessage_arena) {
      emgstop = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, emgstop, submessage_arena);
    }

  } else {

  }
  _impl_.emgstop_ = emgstop;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationEventAndStatusZGEN.EmgStop)
}

// .commonmodule.StatusSPS GnSynSt = 5;
inline bool GenerationEventAndStatusZGEN::_internal_has_gnsynst() const {
  return this != internal_default_instance() && _impl_.gnsynst_ != nullptr;
}
inline bool GenerationEventAndStatusZGEN::has_gnsynst() const {
  return _internal_has_gnsynst();
}
inline const ::commonmodule::StatusSPS& GenerationEventAndStatusZGEN::_internal_gnsynst() const {
  const ::commonmodule::StatusSPS* p = _impl_.gnsynst_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::StatusSPS&>(
      ::commonmodule::_StatusSPS_default_instance_);
}
inline const ::commonmodule::StatusSPS& GenerationEventAndStatusZGEN::gnsynst() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationEventAndStatusZGEN.GnSynSt)
  return _internal_gnsynst();
}
inline void GenerationEventAndStatusZGEN::unsafe_arena_set_allocated_gnsynst(
    ::commonmodule::StatusSPS* gnsynst) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.gnsynst_);
  }
  _impl_.gnsynst_ = gnsynst;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationEventAndStatusZGEN.GnSynSt)
}
inline ::commonmodule::StatusSPS* GenerationEventAndStatusZGEN::release_gnsynst() {
  
  ::commonmodule::StatusSPS* temp = _impl_.gnsynst_;
  _impl_.gnsynst_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::commonmodule::StatusSPS* GenerationEventAndStatusZGEN::unsafe_arena_release_gnsynst() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationEventAndStatusZGEN.GnSynSt)
  
  ::commonmodule::StatusSPS* temp = _impl_.gnsynst_;
  _impl_.gnsynst_ = nullptr;
  return temp;
}
inline ::commonmodule::StatusSPS* GenerationEventAndStatusZGEN::_internal_mutable_gnsynst() {
  
  if (_impl_.gnsynst_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::StatusSPS>(GetArenaForAllocation());
    _impl_.gnsynst_ = p;
  }
  return _impl_.gnsynst_;
}
inline ::commonmodule::StatusSPS* GenerationEventAndStatusZGEN::mutable_gnsynst() {
  ::commonmodule::StatusSPS* _msg = _internal_mutable_gnsynst();
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationEventAndStatusZGEN.GnSynSt)
  return _msg;
}
inline void GenerationEventAndStatusZGEN::set_allocated_gnsynst(::commonmodule::StatusSPS* gnsynst) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.gnsynst_);
  }
  if (gnsynst) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(gnsynst));
    if (message_arena != submessage_arena) {
      gnsynst = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, gnsynst, submessage_arena);
    }

  } else {

  }
  _impl_.gnsynst_ = gnsynst;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationEventAndStatusZGEN.GnSynSt)
}

// .generationmodule.GenerationPointStatus PointStatus = 6;
inline bool GenerationEventAndStatusZGEN::_internal_has_pointstatus() const {
  return this != internal_default_instance() && _impl_.pointstatus_ != nullptr;
}
inline bool GenerationEventAndStatusZGEN::has_pointstatus() const {
  return _internal_has_pointstatus();
}
inline void GenerationEventAndStatusZGEN::clear_pointstatus() {
  if (GetArenaForAllocation() == nullptr && _impl_.pointstatus_ != nullptr) {
    delete _impl_.pointstatus_;
  }
  _impl_.pointstatus_ = nullptr;
}
inline const ::generationmodule::GenerationPointStatus& GenerationEventAndStatusZGEN::_internal_pointstatus() const {
  const ::generationmodule::GenerationPointStatus* p = _impl_.pointstatus_;
  return p != nullptr ? *p : reinterpret_cast<const ::generationmodule::GenerationPointStatus&>(
      ::generationmodule::_GenerationPointStatus_default_instance_);
}
inline const ::generationmodule::GenerationPointStatus& GenerationEventAndStatusZGEN::pointstatus() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationEventAndStatusZGEN.PointStatus)
  return _internal_pointstatus();
}
inline void GenerationEventAndStatusZGEN::unsafe_arena_set_allocated_pointstatus(
    ::generationmodule::GenerationPointStatus* pointstatus) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.pointstatus_);
  }
  _impl_.pointstatus_ = pointstatus;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationEventAndStatusZGEN.PointStatus)
}
inline ::generationmodule::GenerationPointStatus* GenerationEventAndStatusZGEN::release_pointstatus() {
  
  ::generationmodule::GenerationPointStatus* temp = _impl_.pointstatus_;
  _impl_.pointstatus_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::generationmodule::GenerationPointStatus* GenerationEventAndStatusZGEN::unsafe_arena_release_pointstatus() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationEventAndStatusZGEN.PointStatus)
  
  ::generationmodule::GenerationPointStatus* temp = _impl_.pointstatus_;
  _impl_.pointstatus_ = nullptr;
  return temp;
}
inline ::generationmodule::GenerationPointStatus* GenerationEventAndStatusZGEN::_internal_mutable_pointstatus() {
  
  if (_impl_.pointstatus_ == nullptr) {
    auto* p = CreateMaybeMessage<::generationmodule::GenerationPointStatus>(GetArenaForAllocation());
    _impl_.pointstatus_ = p;
  }
  return _impl_.pointstatus_;
}
inline ::generationmodule::GenerationPointStatus* GenerationEventAndStatusZGEN::mutable_pointstatus() {
  ::generationmodule::GenerationPointStatus* _msg = _internal_mutable_pointstatus();
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationEventAndStatusZGEN.PointStatus)
  return _msg;
}
inline void GenerationEventAndStatusZGEN::set_allocated_pointstatus(::generationmodule::GenerationPointStatus* pointstatus) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.pointstatus_;
  }
  if (pointstatus) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(pointstatus);
    if (message_arena != submessage_arena) {
      pointstatus = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, pointstatus, submessage_arena);
    }

  } else {

  }
  _impl_.pointstatus_ = pointstatus;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationEventAndStatusZGEN.PointStatus)
}

// .commonmodule.Optional_AlrmKind Alrm = 7;
inline bool GenerationEventAndStatusZGEN::_internal_has_alrm() const {
  return this != internal_default_instance() && _impl_.alrm_ != nullptr;
}
inline bool GenerationEventAndStatusZGEN::has_alrm() const {
  return _internal_has_alrm();
}
inline const ::commonmodule::Optional_AlrmKind& GenerationEventAndStatusZGEN::_internal_alrm() const {
  const ::commonmodule::Optional_AlrmKind* p = _impl_.alrm_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::Optional_AlrmKind&>(
      ::commonmodule::_Optional_AlrmKind_default_instance_);
}
inline const ::commonmodule::Optional_AlrmKind& GenerationEventAndStatusZGEN::alrm() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationEventAndStatusZGEN.Alrm)
  return _internal_alrm();
}
inline void GenerationEventAndStatusZGEN::unsafe_arena_set_allocated_alrm(
    ::commonmodule::Optional_AlrmKind* alrm) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.alrm_);
  }
  _impl_.alrm_ = alrm;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationEventAndStatusZGEN.Alrm)
}
inline ::commonmodule::Optional_AlrmKind* GenerationEventAndStatusZGEN::release_alrm() {
  
  ::commonmodule::Optional_AlrmKind* temp = _impl_.alrm_;
  _impl_.alrm_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::commonmodule::Optional_AlrmKind* GenerationEventAndStatusZGEN::unsafe_arena_release_alrm() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationEventAndStatusZGEN.Alrm)
  
  ::commonmodule::Optional_AlrmKind* temp = _impl_.alrm_;
  _impl_.alrm_ = nullptr;
  return temp;
}
inline ::commonmodule::Optional_AlrmKind* GenerationEventAndStatusZGEN::_internal_mutable_alrm() {
  
  if (_impl_.alrm_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::Optional_AlrmKind>(GetArenaForAllocation());
    _impl_.alrm_ = p;
  }
  return _impl_.alrm_;
}
inline ::commonmodule::Optional_AlrmKind* GenerationEventAndStatusZGEN::mutable_alrm() {
  ::commonmodule::Optional_AlrmKind* _msg = _internal_mutable_alrm();
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationEventAndStatusZGEN.Alrm)
  return _msg;
}
inline void GenerationEventAndStatusZGEN::set_allocated_alrm(::commonmodule::Optional_AlrmKind* alrm) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.alrm_);
  }
  if (alrm) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(alrm));
    if (message_arena != submessage_arena) {
      alrm = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, alrm, submessage_arena);
    }

  } else {

  }
  _impl_.alrm_ = alrm;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationEventAndStatusZGEN.Alrm)
}

// .commonmodule.Optional_GridConnectionStateKind GridConnectionState = 8;
inline bool GenerationEventAndStatusZGEN::_internal_has_gridconnectionstate() const {
  return this != internal_default_instance() && _impl_.gridconnectionstate_ != nullptr;
}
inline bool GenerationEventAndStatusZGEN::has_gridconnectionstate() const {
  return _internal_has_gridconnectionstate();
}
inline const ::commonmodule::Optional_GridConnectionStateKind& GenerationEventAndStatusZGEN::_internal_gridconnectionstate() const {
  const ::commonmodule::Optional_GridConnectionStateKind* p = _impl_.gridconnectionstate_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::Optional_GridConnectionStateKind&>(
      ::commonmodule::_Optional_GridConnectionStateKind_default_instance_);
}
inline const ::commonmodule::Optional_GridConnectionStateKind& GenerationEventAndStatusZGEN::gridconnectionstate() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationEventAndStatusZGEN.GridConnectionState)
  return _internal_gridconnectionstate();
}
inline void GenerationEventAndStatusZGEN::unsafe_arena_set_allocated_gridconnectionstate(
    ::commonmodule::Optional_GridConnectionStateKind* gridconnectionstate) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.gridconnectionstate_);
  }
  _impl_.gridconnectionstate_ = gridconnectionstate;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationEventAndStatusZGEN.GridConnectionState)
}
inline ::commonmodule::Optional_GridConnectionStateKind* GenerationEventAndStatusZGEN::release_gridconnectionstate() {
  
  ::commonmodule::Optional_GridConnectionStateKind* temp = _impl_.gridconnectionstate_;
  _impl_.gridconnectionstate_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::commonmodule::Optional_GridConnectionStateKind* GenerationEventAndStatusZGEN::unsafe_arena_release_gridconnectionstate() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationEventAndStatusZGEN.GridConnectionState)
  
  ::commonmodule::Optional_GridConnectionStateKind* temp = _impl_.gridconnectionstate_;
  _impl_.gridconnectionstate_ = nullptr;
  return temp;
}
inline ::commonmodule::Optional_GridConnectionStateKind* GenerationEventAndStatusZGEN::_internal_mutable_gridconnectionstate() {
  
  if (_impl_.gridconnectionstate_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::Optional_GridConnectionStateKind>(GetArenaForAllocation());
    _impl_.gridconnectionstate_ = p;
  }
  return _impl_.gridconnectionstate_;
}
inline ::commonmodule::Optional_GridConnectionStateKind* GenerationEventAndStatusZGEN::mutable_gridconnectionstate() {
  ::commonmodule::Optional_GridConnectionStateKind* _msg = _internal_mutable_gridconnectionstate();
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationEventAndStatusZGEN.GridConnectionState)
  return _msg;
}
inline void GenerationEventAndStatusZGEN::set_allocated_gridconnectionstate(::commonmodule::Optional_GridConnectionStateKind* gridconnectionstate) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.gridconnectionstate_);
  }
  if (gridconnectionstate) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(gridconnectionstate));
    if (message_arena != submessage_arena) {
      gridconnectionstate = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, gridconnectionstate, submessage_arena);
    }

  } else {

  }
  _impl_.gridconnectionstate_ = gridconnectionstate;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationEventAndStatusZGEN.GridConnectionState)
}

// .google.protobuf.StringValue ManAlrmInfo = 9;
inline bool GenerationEventAndStatusZGEN::_internal_has_manalrminfo() const {
  return this != internal_default_instance() && _impl_.manalrminfo_ != nullptr;
}
inline bool GenerationEventAndStatusZGEN::has_manalrminfo() const {
  return _internal_has_manalrminfo();
}
inline const ::PROTOBUF_NAMESPACE_ID::StringValue& GenerationEventAndStatusZGEN::_internal_manalrminfo() const {
  const ::PROTOBUF_NAMESPACE_ID::StringValue* p = _impl_.manalrminfo_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::StringValue&>(
      ::PROTOBUF_NAMESPACE_ID::_StringValue_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::StringValue& GenerationEventAndStatusZGEN::manalrminfo() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationEventAndStatusZGEN.ManAlrmInfo)
  return _internal_manalrminfo();
}
inline void GenerationEventAndStatusZGEN::unsafe_arena_set_allocated_manalrminfo(
    ::PROTOBUF_NAMESPACE_ID::StringValue* manalrminfo) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.manalrminfo_);
  }
  _impl_.manalrminfo_ = manalrminfo;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationEventAndStatusZGEN.ManAlrmInfo)
}
inline ::PROTOBUF_NAMESPACE_ID::StringValue* GenerationEventAndStatusZGEN::release_manalrminfo() {
  
  ::PROTOBUF_NAMESPACE_ID::StringValue* temp = _impl_.manalrminfo_;
  _impl_.manalrminfo_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::StringValue* GenerationEventAndStatusZGEN::unsafe_arena_release_manalrminfo() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationEventAndStatusZGEN.ManAlrmInfo)
  
  ::PROTOBUF_NAMESPACE_ID::StringValue* temp = _impl_.manalrminfo_;
  _impl_.manalrminfo_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::StringValue* GenerationEventAndStatusZGEN::_internal_mutable_manalrminfo() {
  
  if (_impl_.manalrminfo_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::StringValue>(GetArenaForAllocation());
    _impl_.manalrminfo_ = p;
  }
  return _impl_.manalrminfo_;
}
inline ::PROTOBUF_NAMESPACE_ID::StringValue* GenerationEventAndStatusZGEN::mutable_manalrminfo() {
  ::PROTOBUF_NAMESPACE_ID::StringValue* _msg = _internal_mutable_manalrminfo();
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationEventAndStatusZGEN.ManAlrmInfo)
  return _msg;
}
inline void GenerationEventAndStatusZGEN::set_allocated_manalrminfo(::PROTOBUF_NAMESPACE_ID::StringValue* manalrminfo) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.manalrminfo_);
  }
  if (manalrminfo) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(manalrminfo));
    if (message_arena != submessage_arena) {
      manalrminfo = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, manalrminfo, submessage_arena);
    }

  } else {

  }
  _impl_.manalrminfo_ = manalrminfo;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationEventAndStatusZGEN.ManAlrmInfo)
}

// .commonmodule.Optional_OperatingStateKind OperatingState = 10;
inline bool GenerationEventAndStatusZGEN::_internal_has_operatingstate() const {
  return this != internal_default_instance() && _impl_.operatingstate_ != nullptr;
}
inline bool GenerationEventAndStatusZGEN::has_operatingstate() const {
  return _internal_has_operatingstate();
}
inline const ::commonmodule::Optional_OperatingStateKind& GenerationEventAndStatusZGEN::_internal_operatingstate() const {
  const ::commonmodule::Optional_OperatingStateKind* p = _impl_.operatingstate_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::Optional_OperatingStateKind&>(
      ::commonmodule::_Optional_OperatingStateKind_default_instance_);
}
inline const ::commonmodule::Optional_OperatingStateKind& GenerationEventAndStatusZGEN::operatingstate() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationEventAndStatusZGEN.OperatingState)
  return _internal_operatingstate();
}
inline void GenerationEventAndStatusZGEN::unsafe_arena_set_allocated_operatingstate(
    ::commonmodule::Optional_OperatingStateKind* operatingstate) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.operatingstate_);
  }
  _impl_.operatingstate_ = operatingstate;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationEventAndStatusZGEN.OperatingState)
}
inline ::commonmodule::Optional_OperatingStateKind* GenerationEventAndStatusZGEN::release_operatingstate() {
  
  ::commonmodule::Optional_OperatingStateKind* temp = _impl_.operatingstate_;
  _impl_.operatingstate_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::commonmodule::Optional_OperatingStateKind* GenerationEventAndStatusZGEN::unsafe_arena_release_operatingstate() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationEventAndStatusZGEN.OperatingState)
  
  ::commonmodule::Optional_OperatingStateKind* temp = _impl_.operatingstate_;
  _impl_.operatingstate_ = nullptr;
  return temp;
}
inline ::commonmodule::Optional_OperatingStateKind* GenerationEventAndStatusZGEN::_internal_mutable_operatingstate() {
  
  if (_impl_.operatingstate_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::Optional_OperatingStateKind>(GetArenaForAllocation());
    _impl_.operatingstate_ = p;
  }
  return _impl_.operatingstate_;
}
inline ::commonmodule::Optional_OperatingStateKind* GenerationEventAndStatusZGEN::mutable_operatingstate() {
  ::commonmodule::Optional_OperatingStateKind* _msg = _internal_mutable_operatingstate();
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationEventAndStatusZGEN.OperatingState)
  return _msg;
}
inline void GenerationEventAndStatusZGEN::set_allocated_operatingstate(::commonmodule::Optional_OperatingStateKind* operatingstate) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.operatingstate_);
  }
  if (operatingstate) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(operatingstate));
    if (message_arena != submessage_arena) {
      operatingstate = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, operatingstate, submessage_arena);
    }

  } else {

  }
  _impl_.operatingstate_ = operatingstate;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationEventAndStatusZGEN.OperatingState)
}

// -------------------------------------------------------------------

// GenerationEventZGEN

// .generationmodule.GenerationEventAndStatusZGEN generationEventAndStatusZGEN = 1 [(.uml.option_parent_message) = true];
inline bool GenerationEventZGEN::_internal_has_generationeventandstatuszgen() const {
  return this != internal_default_instance() && _impl_.generationeventandstatuszgen_ != nullptr;
}
inline bool GenerationEventZGEN::has_generationeventandstatuszgen() const {
  return _internal_has_generationeventandstatuszgen();
}
inline void GenerationEventZGEN::clear_generationeventandstatuszgen() {
  if (GetArenaForAllocation() == nullptr && _impl_.generationeventandstatuszgen_ != nullptr) {
    delete _impl_.generationeventandstatuszgen_;
  }
  _impl_.generationeventandstatuszgen_ = nullptr;
}
inline const ::generationmodule::GenerationEventAndStatusZGEN& GenerationEventZGEN::_internal_generationeventandstatuszgen() const {
  const ::generationmodule::GenerationEventAndStatusZGEN* p = _impl_.generationeventandstatuszgen_;
  return p != nullptr ? *p : reinterpret_cast<const ::generationmodule::GenerationEventAndStatusZGEN&>(
      ::generationmodule::_GenerationEventAndStatusZGEN_default_instance_);
}
inline const ::generationmodule::GenerationEventAndStatusZGEN& GenerationEventZGEN::generationeventandstatuszgen() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationEventZGEN.generationEventAndStatusZGEN)
  return _internal_generationeventandstatuszgen();
}
inline void GenerationEventZGEN::unsafe_arena_set_allocated_generationeventandstatuszgen(
    ::generationmodule::GenerationEventAndStatusZGEN* generationeventandstatuszgen) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.generationeventandstatuszgen_);
  }
  _impl_.generationeventandstatuszgen_ = generationeventandstatuszgen;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationEventZGEN.generationEventAndStatusZGEN)
}
inline ::generationmodule::GenerationEventAndStatusZGEN* GenerationEventZGEN::release_generationeventandstatuszgen() {
  
  ::generationmodule::GenerationEventAndStatusZGEN* temp = _impl_.generationeventandstatuszgen_;
  _impl_.generationeventandstatuszgen_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::generationmodule::GenerationEventAndStatusZGEN* GenerationEventZGEN::unsafe_arena_release_generationeventandstatuszgen() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationEventZGEN.generationEventAndStatusZGEN)
  
  ::generationmodule::GenerationEventAndStatusZGEN* temp = _impl_.generationeventandstatuszgen_;
  _impl_.generationeventandstatuszgen_ = nullptr;
  return temp;
}
inline ::generationmodule::GenerationEventAndStatusZGEN* GenerationEventZGEN::_internal_mutable_generationeventandstatuszgen() {
  
  if (_impl_.generationeventandstatuszgen_ == nullptr) {
    auto* p = CreateMaybeMessage<::generationmodule::GenerationEventAndStatusZGEN>(GetArenaForAllocation());
    _impl_.generationeventandstatuszgen_ = p;
  }
  return _impl_.generationeventandstatuszgen_;
}
inline ::generationmodule::GenerationEventAndStatusZGEN* GenerationEventZGEN::mutable_generationeventandstatuszgen() {
  ::generationmodule::GenerationEventAndStatusZGEN* _msg = _internal_mutable_generationeventandstatuszgen();
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationEventZGEN.generationEventAndStatusZGEN)
  return _msg;
}
inline void GenerationEventZGEN::set_allocated_generationeventandstatuszgen(::generationmodule::GenerationEventAndStatusZGEN* generationeventandstatuszgen) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.generationeventandstatuszgen_;
  }
  if (generationeventandstatuszgen) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(generationeventandstatuszgen);
    if (message_arena != submessage_arena) {
      generationeventandstatuszgen = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, generationeventandstatuszgen, submessage_arena);
    }

  } else {

  }
  _impl_.generationeventandstatuszgen_ = generationeventandstatuszgen;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationEventZGEN.generationEventAndStatusZGEN)
}

// -------------------------------------------------------------------

// GenerationEvent

// .commonmodule.EventValue eventValue = 1 [(.uml.option_parent_message) = true];
inline bool GenerationEvent::_internal_has_eventvalue() const {
  return this != internal_default_instance() && _impl_.eventvalue_ != nullptr;
}
inline bool GenerationEvent::has_eventvalue() const {
  return _internal_has_eventvalue();
}
inline const ::commonmodule::EventValue& GenerationEvent::_internal_eventvalue() const {
  const ::commonmodule::EventValue* p = _impl_.eventvalue_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::EventValue&>(
      ::commonmodule::_EventValue_default_instance_);
}
inline const ::commonmodule::EventValue& GenerationEvent::eventvalue() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationEvent.eventValue)
  return _internal_eventvalue();
}
inline void GenerationEvent::unsafe_arena_set_allocated_eventvalue(
    ::commonmodule::EventValue* eventvalue) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.eventvalue_);
  }
  _impl_.eventvalue_ = eventvalue;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationEvent.eventValue)
}
inline ::commonmodule::EventValue* GenerationEvent::release_eventvalue() {
  
  ::commonmodule::EventValue* temp = _impl_.eventvalue_;
  _impl_.eventvalue_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::commonmodule::EventValue* GenerationEvent::unsafe_arena_release_eventvalue() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationEvent.eventValue)
  
  ::commonmodule::EventValue* temp = _impl_.eventvalue_;
  _impl_.eventvalue_ = nullptr;
  return temp;
}
inline ::commonmodule::EventValue* GenerationEvent::_internal_mutable_eventvalue() {
  
  if (_impl_.eventvalue_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::EventValue>(GetArenaForAllocation());
    _impl_.eventvalue_ = p;
  }
  return _impl_.eventvalue_;
}
inline ::commonmodule::EventValue* GenerationEvent::mutable_eventvalue() {
  ::commonmodule::EventValue* _msg = _internal_mutable_eventvalue();
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationEvent.eventValue)
  return _msg;
}
inline void GenerationEvent::set_allocated_eventvalue(::commonmodule::EventValue* eventvalue) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.eventvalue_);
  }
  if (eventvalue) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(eventvalue));
    if (message_arena != submessage_arena) {
      eventvalue = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, eventvalue, submessage_arena);
    }

  } else {

  }
  _impl_.eventvalue_ = eventvalue;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationEvent.eventValue)
}

// .generationmodule.GenerationEventZGEN generationEventZGEN = 2;
inline bool GenerationEvent::_internal_has_generationeventzgen() const {
  return this != internal_default_instance() && _impl_.generationeventzgen_ != nullptr;
}
inline bool GenerationEvent::has_generationeventzgen() const {
  return _internal_has_generationeventzgen();
}
inline void GenerationEvent::clear_generationeventzgen() {
  if (GetArenaForAllocation() == nullptr && _impl_.generationeventzgen_ != nullptr) {
    delete _impl_.generationeventzgen_;
  }
  _impl_.generationeventzgen_ = nullptr;
}
inline const ::generationmodule::GenerationEventZGEN& GenerationEvent::_internal_generationeventzgen() const {
  const ::generationmodule::GenerationEventZGEN* p = _impl_.generationeventzgen_;
  return p != nullptr ? *p : reinterpret_cast<const ::generationmodule::GenerationEventZGEN&>(
      ::generationmodule::_GenerationEventZGEN_default_instance_);
}
inline const ::generationmodule::GenerationEventZGEN& GenerationEvent::generationeventzgen() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationEvent.generationEventZGEN)
  return _internal_generationeventzgen();
}
inline void GenerationEvent::unsafe_arena_set_allocated_generationeventzgen(
    ::generationmodule::GenerationEventZGEN* generationeventzgen) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.generationeventzgen_);
  }
  _impl_.generationeventzgen_ = generationeventzgen;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationEvent.generationEventZGEN)
}
inline ::generationmodule::GenerationEventZGEN* GenerationEvent::release_generationeventzgen() {
  
  ::generationmodule::GenerationEventZGEN* temp = _impl_.generationeventzgen_;
  _impl_.generationeventzgen_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::generationmodule::GenerationEventZGEN* GenerationEvent::unsafe_arena_release_generationeventzgen() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationEvent.generationEventZGEN)
  
  ::generationmodule::GenerationEventZGEN* temp = _impl_.generationeventzgen_;
  _impl_.generationeventzgen_ = nullptr;
  return temp;
}
inline ::generationmodule::GenerationEventZGEN* GenerationEvent::_internal_mutable_generationeventzgen() {
  
  if (_impl_.generationeventzgen_ == nullptr) {
    auto* p = CreateMaybeMessage<::generationmodule::GenerationEventZGEN>(GetArenaForAllocation());
    _impl_.generationeventzgen_ = p;
  }
  return _impl_.generationeventzgen_;
}
inline ::generationmodule::GenerationEventZGEN* GenerationEvent::mutable_generationeventzgen() {
  ::generationmodule::GenerationEventZGEN* _msg = _internal_mutable_generationeventzgen();
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationEvent.generationEventZGEN)
  return _msg;
}
inline void GenerationEvent::set_allocated_generationeventzgen(::generationmodule::GenerationEventZGEN* generationeventzgen) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.generationeventzgen_;
  }
  if (generationeventzgen) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(generationeventzgen);
    if (message_arena != submessage_arena) {
      generationeventzgen = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, generationeventzgen, submessage_arena);
    }

  } else {

  }
  _impl_.generationeventzgen_ = generationeventzgen;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationEvent.generationEventZGEN)
}

// -------------------------------------------------------------------

// GenerationEventProfile

// .commonmodule.EventMessageInfo eventMessageInfo = 1 [(.uml.option_parent_message) = true];
inline bool GenerationEventProfile::_internal_has_eventmessageinfo() const {
  return this != internal_default_instance() && _impl_.eventmessageinfo_ != nullptr;
}
inline bool GenerationEventProfile::has_eventmessageinfo() const {
  return _internal_has_eventmessageinfo();
}
inline const ::commonmodule::EventMessageInfo& GenerationEventProfile::_internal_eventmessageinfo() const {
  const ::commonmodule::EventMessageInfo* p = _impl_.eventmessageinfo_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::EventMessageInfo&>(
      ::commonmodule::_EventMessageInfo_default_instance_);
}
inline const ::commonmodule::EventMessageInfo& GenerationEventProfile::eventmessageinfo() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationEventProfile.eventMessageInfo)
  return _internal_eventmessageinfo();
}
inline void GenerationEventProfile::unsafe_arena_set_allocated_eventmessageinfo(
    ::commonmodule::EventMessageInfo* eventmessageinfo) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.eventmessageinfo_);
  }
  _impl_.eventmessageinfo_ = eventmessageinfo;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationEventProfile.eventMessageInfo)
}
inline ::commonmodule::EventMessageInfo* GenerationEventProfile::release_eventmessageinfo() {
  
  ::commonmodule::EventMessageInfo* temp = _impl_.eventmessageinfo_;
  _impl_.eventmessageinfo_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::commonmodule::EventMessageInfo* GenerationEventProfile::unsafe_arena_release_eventmessageinfo() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationEventProfile.eventMessageInfo)
  
  ::commonmodule::EventMessageInfo* temp = _impl_.eventmessageinfo_;
  _impl_.eventmessageinfo_ = nullptr;
  return temp;
}
inline ::commonmodule::EventMessageInfo* GenerationEventProfile::_internal_mutable_eventmessageinfo() {
  
  if (_impl_.eventmessageinfo_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::EventMessageInfo>(GetArenaForAllocation());
    _impl_.eventmessageinfo_ = p;
  }
  return _impl_.eventmessageinfo_;
}
inline ::commonmodule::EventMessageInfo* GenerationEventProfile::mutable_eventmessageinfo() {
  ::commonmodule::EventMessageInfo* _msg = _internal_mutable_eventmessageinfo();
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationEventProfile.eventMessageInfo)
  return _msg;
}
inline void GenerationEventProfile::set_allocated_eventmessageinfo(::commonmodule::EventMessageInfo* eventmessageinfo) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.eventmessageinfo_);
  }
  if (eventmessageinfo) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(eventmessageinfo));
    if (message_arena != submessage_arena) {
      eventmessageinfo = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, eventmessageinfo, submessage_arena);
    }

  } else {

  }
  _impl_.eventmessageinfo_ = eventmessageinfo;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationEventProfile.eventMessageInfo)
}

// .generationmodule.GeneratingUnit generatingUnit = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
inline bool GenerationEventProfile::_internal_has_generatingunit() const {
  return this != internal_default_instance() && _impl_.generatingunit_ != nullptr;
}
inline bool GenerationEventProfile::has_generatingunit() const {
  return _internal_has_generatingunit();
}
inline void GenerationEventProfile::clear_generatingunit() {
  if (GetArenaForAllocation() == nullptr && _impl_.generatingunit_ != nullptr) {
    delete _impl_.generatingunit_;
  }
  _impl_.generatingunit_ = nullptr;
}
inline const ::generationmodule::GeneratingUnit& GenerationEventProfile::_internal_generatingunit() const {
  const ::generationmodule::GeneratingUnit* p = _impl_.generatingunit_;
  return p != nullptr ? *p : reinterpret_cast<const ::generationmodule::GeneratingUnit&>(
      ::generationmodule::_GeneratingUnit_default_instance_);
}
inline const ::generationmodule::GeneratingUnit& GenerationEventProfile::generatingunit() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationEventProfile.generatingUnit)
  return _internal_generatingunit();
}
inline void GenerationEventProfile::unsafe_arena_set_allocated_generatingunit(
    ::generationmodule::GeneratingUnit* generatingunit) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.generatingunit_);
  }
  _impl_.generatingunit_ = generatingunit;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationEventProfile.generatingUnit)
}
inline ::generationmodule::GeneratingUnit* GenerationEventProfile::release_generatingunit() {
  
  ::generationmodule::GeneratingUnit* temp = _impl_.generatingunit_;
  _impl_.generatingunit_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::generationmodule::GeneratingUnit* GenerationEventProfile::unsafe_arena_release_generatingunit() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationEventProfile.generatingUnit)
  
  ::generationmodule::GeneratingUnit* temp = _impl_.generatingunit_;
  _impl_.generatingunit_ = nullptr;
  return temp;
}
inline ::generationmodule::GeneratingUnit* GenerationEventProfile::_internal_mutable_generatingunit() {
  
  if (_impl_.generatingunit_ == nullptr) {
    auto* p = CreateMaybeMessage<::generationmodule::GeneratingUnit>(GetArenaForAllocation());
    _impl_.generatingunit_ = p;
  }
  return _impl_.generatingunit_;
}
inline ::generationmodule::GeneratingUnit* GenerationEventProfile::mutable_generatingunit() {
  ::generationmodule::GeneratingUnit* _msg = _internal_mutable_generatingunit();
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationEventProfile.generatingUnit)
  return _msg;
}
inline void GenerationEventProfile::set_allocated_generatingunit(::generationmodule::GeneratingUnit* generatingunit) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.generatingunit_;
  }
  if (generatingunit) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(generatingunit);
    if (message_arena != submessage_arena) {
      generatingunit = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, generatingunit, submessage_arena);
    }

  } else {

  }
  _impl_.generatingunit_ = generatingunit;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationEventProfile.generatingUnit)
}

// .generationmodule.GenerationEvent generationEvent = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
inline bool GenerationEventProfile::_internal_has_generationevent() const {
  return this != internal_default_instance() && _impl_.generationevent_ != nullptr;
}
inline bool GenerationEventProfile::has_generationevent() const {
  return _internal_has_generationevent();
}
inline void GenerationEventProfile::clear_generationevent() {
  if (GetArenaForAllocation() == nullptr && _impl_.generationevent_ != nullptr) {
    delete _impl_.generationevent_;
  }
  _impl_.generationevent_ = nullptr;
}
inline const ::generationmodule::GenerationEvent& GenerationEventProfile::_internal_generationevent() const {
  const ::generationmodule::GenerationEvent* p = _impl_.generationevent_;
  return p != nullptr ? *p : reinterpret_cast<const ::generationmodule::GenerationEvent&>(
      ::generationmodule::_GenerationEvent_default_instance_);
}
inline const ::generationmodule::GenerationEvent& GenerationEventProfile::generationevent() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationEventProfile.generationEvent)
  return _internal_generationevent();
}
inline void GenerationEventProfile::unsafe_arena_set_allocated_generationevent(
    ::generationmodule::GenerationEvent* generationevent) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.generationevent_);
  }
  _impl_.generationevent_ = generationevent;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationEventProfile.generationEvent)
}
inline ::generationmodule::GenerationEvent* GenerationEventProfile::release_generationevent() {
  
  ::generationmodule::GenerationEvent* temp = _impl_.generationevent_;
  _impl_.generationevent_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::generationmodule::GenerationEvent* GenerationEventProfile::unsafe_arena_release_generationevent() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationEventProfile.generationEvent)
  
  ::generationmodule::GenerationEvent* temp = _impl_.generationevent_;
  _impl_.generationevent_ = nullptr;
  return temp;
}
inline ::generationmodule::GenerationEvent* GenerationEventProfile::_internal_mutable_generationevent() {
  
  if (_impl_.generationevent_ == nullptr) {
    auto* p = CreateMaybeMessage<::generationmodule::GenerationEvent>(GetArenaForAllocation());
    _impl_.generationevent_ = p;
  }
  return _impl_.generationevent_;
}
inline ::generationmodule::GenerationEvent* GenerationEventProfile::mutable_generationevent() {
  ::generationmodule::GenerationEvent* _msg = _internal_mutable_generationevent();
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationEventProfile.generationEvent)
  return _msg;
}
inline void GenerationEventProfile::set_allocated_generationevent(::generationmodule::GenerationEvent* generationevent) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.generationevent_;
  }
  if (generationevent) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(generationevent);
    if (message_arena != submessage_arena) {
      generationevent = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, generationevent, submessage_arena);
    }

  } else {

  }
  _impl_.generationevent_ = generationevent;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationEventProfile.generationEvent)
}

// -------------------------------------------------------------------

// GenerationStatusZGEN

// .generationmodule.GenerationEventAndStatusZGEN generationEventAndStatusZGEN = 1 [(.uml.option_parent_message) = true];
inline bool GenerationStatusZGEN::_internal_has_generationeventandstatuszgen() const {
  return this != internal_default_instance() && _impl_.generationeventandstatuszgen_ != nullptr;
}
inline bool GenerationStatusZGEN::has_generationeventandstatuszgen() const {
  return _internal_has_generationeventandstatuszgen();
}
inline void GenerationStatusZGEN::clear_generationeventandstatuszgen() {
  if (GetArenaForAllocation() == nullptr && _impl_.generationeventandstatuszgen_ != nullptr) {
    delete _impl_.generationeventandstatuszgen_;
  }
  _impl_.generationeventandstatuszgen_ = nullptr;
}
inline const ::generationmodule::GenerationEventAndStatusZGEN& GenerationStatusZGEN::_internal_generationeventandstatuszgen() const {
  const ::generationmodule::GenerationEventAndStatusZGEN* p = _impl_.generationeventandstatuszgen_;
  return p != nullptr ? *p : reinterpret_cast<const ::generationmodule::GenerationEventAndStatusZGEN&>(
      ::generationmodule::_GenerationEventAndStatusZGEN_default_instance_);
}
inline const ::generationmodule::GenerationEventAndStatusZGEN& GenerationStatusZGEN::generationeventandstatuszgen() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationStatusZGEN.generationEventAndStatusZGEN)
  return _internal_generationeventandstatuszgen();
}
inline void GenerationStatusZGEN::unsafe_arena_set_allocated_generationeventandstatuszgen(
    ::generationmodule::GenerationEventAndStatusZGEN* generationeventandstatuszgen) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.generationeventandstatuszgen_);
  }
  _impl_.generationeventandstatuszgen_ = generationeventandstatuszgen;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationStatusZGEN.generationEventAndStatusZGEN)
}
inline ::generationmodule::GenerationEventAndStatusZGEN* GenerationStatusZGEN::release_generationeventandstatuszgen() {
  
  ::generationmodule::GenerationEventAndStatusZGEN* temp = _impl_.generationeventandstatuszgen_;
  _impl_.generationeventandstatuszgen_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::generationmodule::GenerationEventAndStatusZGEN* GenerationStatusZGEN::unsafe_arena_release_generationeventandstatuszgen() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationStatusZGEN.generationEventAndStatusZGEN)
  
  ::generationmodule::GenerationEventAndStatusZGEN* temp = _impl_.generationeventandstatuszgen_;
  _impl_.generationeventandstatuszgen_ = nullptr;
  return temp;
}
inline ::generationmodule::GenerationEventAndStatusZGEN* GenerationStatusZGEN::_internal_mutable_generationeventandstatuszgen() {
  
  if (_impl_.generationeventandstatuszgen_ == nullptr) {
    auto* p = CreateMaybeMessage<::generationmodule::GenerationEventAndStatusZGEN>(GetArenaForAllocation());
    _impl_.generationeventandstatuszgen_ = p;
  }
  return _impl_.generationeventandstatuszgen_;
}
inline ::generationmodule::GenerationEventAndStatusZGEN* GenerationStatusZGEN::mutable_generationeventandstatuszgen() {
  ::generationmodule::GenerationEventAndStatusZGEN* _msg = _internal_mutable_generationeventandstatuszgen();
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationStatusZGEN.generationEventAndStatusZGEN)
  return _msg;
}
inline void GenerationStatusZGEN::set_allocated_generationeventandstatuszgen(::generationmodule::GenerationEventAndStatusZGEN* generationeventandstatuszgen) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.generationeventandstatuszgen_;
  }
  if (generationeventandstatuszgen) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(generationeventandstatuszgen);
    if (message_arena != submessage_arena) {
      generationeventandstatuszgen = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, generationeventandstatuszgen, submessage_arena);
    }

  } else {

  }
  _impl_.generationeventandstatuszgen_ = generationeventandstatuszgen;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationStatusZGEN.generationEventAndStatusZGEN)
}

// -------------------------------------------------------------------

// GenerationStatus

// .commonmodule.StatusValue statusValue = 1 [(.uml.option_parent_message) = true];
inline bool GenerationStatus::_internal_has_statusvalue() const {
  return this != internal_default_instance() && _impl_.statusvalue_ != nullptr;
}
inline bool GenerationStatus::has_statusvalue() const {
  return _internal_has_statusvalue();
}
inline const ::commonmodule::StatusValue& GenerationStatus::_internal_statusvalue() const {
  const ::commonmodule::StatusValue* p = _impl_.statusvalue_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::StatusValue&>(
      ::commonmodule::_StatusValue_default_instance_);
}
inline const ::commonmodule::StatusValue& GenerationStatus::statusvalue() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationStatus.statusValue)
  return _internal_statusvalue();
}
inline void GenerationStatus::unsafe_arena_set_allocated_statusvalue(
    ::commonmodule::StatusValue* statusvalue) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.statusvalue_);
  }
  _impl_.statusvalue_ = statusvalue;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationStatus.statusValue)
}
inline ::commonmodule::StatusValue* GenerationStatus::release_statusvalue() {
  
  ::commonmodule::StatusValue* temp = _impl_.statusvalue_;
  _impl_.statusvalue_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::commonmodule::StatusValue* GenerationStatus::unsafe_arena_release_statusvalue() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationStatus.statusValue)
  
  ::commonmodule::StatusValue* temp = _impl_.statusvalue_;
  _impl_.statusvalue_ = nullptr;
  return temp;
}
inline ::commonmodule::StatusValue* GenerationStatus::_internal_mutable_statusvalue() {
  
  if (_impl_.statusvalue_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::StatusValue>(GetArenaForAllocation());
    _impl_.statusvalue_ = p;
  }
  return _impl_.statusvalue_;
}
inline ::commonmodule::StatusValue* GenerationStatus::mutable_statusvalue() {
  ::commonmodule::StatusValue* _msg = _internal_mutable_statusvalue();
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationStatus.statusValue)
  return _msg;
}
inline void GenerationStatus::set_allocated_statusvalue(::commonmodule::StatusValue* statusvalue) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.statusvalue_);
  }
  if (statusvalue) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(statusvalue));
    if (message_arena != submessage_arena) {
      statusvalue = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, statusvalue, submessage_arena);
    }

  } else {

  }
  _impl_.statusvalue_ = statusvalue;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationStatus.statusValue)
}

// .generationmodule.GenerationStatusZGEN generationStatusZGEN = 2;
inline bool GenerationStatus::_internal_has_generationstatuszgen() const {
  return this != internal_default_instance() && _impl_.generationstatuszgen_ != nullptr;
}
inline bool GenerationStatus::has_generationstatuszgen() const {
  return _internal_has_generationstatuszgen();
}
inline void GenerationStatus::clear_generationstatuszgen() {
  if (GetArenaForAllocation() == nullptr && _impl_.generationstatuszgen_ != nullptr) {
    delete _impl_.generationstatuszgen_;
  }
  _impl_.generationstatuszgen_ = nullptr;
}
inline const ::generationmodule::GenerationStatusZGEN& GenerationStatus::_internal_generationstatuszgen() const {
  const ::generationmodule::GenerationStatusZGEN* p = _impl_.generationstatuszgen_;
  return p != nullptr ? *p : reinterpret_cast<const ::generationmodule::GenerationStatusZGEN&>(
      ::generationmodule::_GenerationStatusZGEN_default_instance_);
}
inline const ::generationmodule::GenerationStatusZGEN& GenerationStatus::generationstatuszgen() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationStatus.generationStatusZGEN)
  return _internal_generationstatuszgen();
}
inline void GenerationStatus::unsafe_arena_set_allocated_generationstatuszgen(
    ::generationmodule::GenerationStatusZGEN* generationstatuszgen) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.generationstatuszgen_);
  }
  _impl_.generationstatuszgen_ = generationstatuszgen;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationStatus.generationStatusZGEN)
}
inline ::generationmodule::GenerationStatusZGEN* GenerationStatus::release_generationstatuszgen() {
  
  ::generationmodule::GenerationStatusZGEN* temp = _impl_.generationstatuszgen_;
  _impl_.generationstatuszgen_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::generationmodule::GenerationStatusZGEN* GenerationStatus::unsafe_arena_release_generationstatuszgen() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationStatus.generationStatusZGEN)
  
  ::generationmodule::GenerationStatusZGEN* temp = _impl_.generationstatuszgen_;
  _impl_.generationstatuszgen_ = nullptr;
  return temp;
}
inline ::generationmodule::GenerationStatusZGEN* GenerationStatus::_internal_mutable_generationstatuszgen() {
  
  if (_impl_.generationstatuszgen_ == nullptr) {
    auto* p = CreateMaybeMessage<::generationmodule::GenerationStatusZGEN>(GetArenaForAllocation());
    _impl_.generationstatuszgen_ = p;
  }
  return _impl_.generationstatuszgen_;
}
inline ::generationmodule::GenerationStatusZGEN* GenerationStatus::mutable_generationstatuszgen() {
  ::generationmodule::GenerationStatusZGEN* _msg = _internal_mutable_generationstatuszgen();
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationStatus.generationStatusZGEN)
  return _msg;
}
inline void GenerationStatus::set_allocated_generationstatuszgen(::generationmodule::GenerationStatusZGEN* generationstatuszgen) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.generationstatuszgen_;
  }
  if (generationstatuszgen) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(generationstatuszgen);
    if (message_arena != submessage_arena) {
      generationstatuszgen = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, generationstatuszgen, submessage_arena);
    }

  } else {

  }
  _impl_.generationstatuszgen_ = generationstatuszgen;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationStatus.generationStatusZGEN)
}

// -------------------------------------------------------------------

// GenerationStatusProfile

// .commonmodule.StatusMessageInfo statusMessageInfo = 1 [(.uml.option_parent_message) = true];
inline bool GenerationStatusProfile::_internal_has_statusmessageinfo() const {
  return this != internal_default_instance() && _impl_.statusmessageinfo_ != nullptr;
}
inline bool GenerationStatusProfile::has_statusmessageinfo() const {
  return _internal_has_statusmessageinfo();
}
inline const ::commonmodule::StatusMessageInfo& GenerationStatusProfile::_internal_statusmessageinfo() const {
  const ::commonmodule::StatusMessageInfo* p = _impl_.statusmessageinfo_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::StatusMessageInfo&>(
      ::commonmodule::_StatusMessageInfo_default_instance_);
}
inline const ::commonmodule::StatusMessageInfo& GenerationStatusProfile::statusmessageinfo() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationStatusProfile.statusMessageInfo)
  return _internal_statusmessageinfo();
}
inline void GenerationStatusProfile::unsafe_arena_set_allocated_statusmessageinfo(
    ::commonmodule::StatusMessageInfo* statusmessageinfo) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.statusmessageinfo_);
  }
  _impl_.statusmessageinfo_ = statusmessageinfo;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationStatusProfile.statusMessageInfo)
}
inline ::commonmodule::StatusMessageInfo* GenerationStatusProfile::release_statusmessageinfo() {
  
  ::commonmodule::StatusMessageInfo* temp = _impl_.statusmessageinfo_;
  _impl_.statusmessageinfo_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::commonmodule::StatusMessageInfo* GenerationStatusProfile::unsafe_arena_release_statusmessageinfo() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationStatusProfile.statusMessageInfo)
  
  ::commonmodule::StatusMessageInfo* temp = _impl_.statusmessageinfo_;
  _impl_.statusmessageinfo_ = nullptr;
  return temp;
}
inline ::commonmodule::StatusMessageInfo* GenerationStatusProfile::_internal_mutable_statusmessageinfo() {
  
  if (_impl_.statusmessageinfo_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::StatusMessageInfo>(GetArenaForAllocation());
    _impl_.statusmessageinfo_ = p;
  }
  return _impl_.statusmessageinfo_;
}
inline ::commonmodule::StatusMessageInfo* GenerationStatusProfile::mutable_statusmessageinfo() {
  ::commonmodule::StatusMessageInfo* _msg = _internal_mutable_statusmessageinfo();
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationStatusProfile.statusMessageInfo)
  return _msg;
}
inline void GenerationStatusProfile::set_allocated_statusmessageinfo(::commonmodule::StatusMessageInfo* statusmessageinfo) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.statusmessageinfo_);
  }
  if (statusmessageinfo) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(statusmessageinfo));
    if (message_arena != submessage_arena) {
      statusmessageinfo = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, statusmessageinfo, submessage_arena);
    }

  } else {

  }
  _impl_.statusmessageinfo_ = statusmessageinfo;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationStatusProfile.statusMessageInfo)
}

// .generationmodule.GeneratingUnit generatingUnit = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
inline bool GenerationStatusProfile::_internal_has_generatingunit() const {
  return this != internal_default_instance() && _impl_.generatingunit_ != nullptr;
}
inline bool GenerationStatusProfile::has_generatingunit() const {
  return _internal_has_generatingunit();
}
inline void GenerationStatusProfile::clear_generatingunit() {
  if (GetArenaForAllocation() == nullptr && _impl_.generatingunit_ != nullptr) {
    delete _impl_.generatingunit_;
  }
  _impl_.generatingunit_ = nullptr;
}
inline const ::generationmodule::GeneratingUnit& GenerationStatusProfile::_internal_generatingunit() const {
  const ::generationmodule::GeneratingUnit* p = _impl_.generatingunit_;
  return p != nullptr ? *p : reinterpret_cast<const ::generationmodule::GeneratingUnit&>(
      ::generationmodule::_GeneratingUnit_default_instance_);
}
inline const ::generationmodule::GeneratingUnit& GenerationStatusProfile::generatingunit() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationStatusProfile.generatingUnit)
  return _internal_generatingunit();
}
inline void GenerationStatusProfile::unsafe_arena_set_allocated_generatingunit(
    ::generationmodule::GeneratingUnit* generatingunit) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.generatingunit_);
  }
  _impl_.generatingunit_ = generatingunit;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationStatusProfile.generatingUnit)
}
inline ::generationmodule::GeneratingUnit* GenerationStatusProfile::release_generatingunit() {
  
  ::generationmodule::GeneratingUnit* temp = _impl_.generatingunit_;
  _impl_.generatingunit_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::generationmodule::GeneratingUnit* GenerationStatusProfile::unsafe_arena_release_generatingunit() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationStatusProfile.generatingUnit)
  
  ::generationmodule::GeneratingUnit* temp = _impl_.generatingunit_;
  _impl_.generatingunit_ = nullptr;
  return temp;
}
inline ::generationmodule::GeneratingUnit* GenerationStatusProfile::_internal_mutable_generatingunit() {
  
  if (_impl_.generatingunit_ == nullptr) {
    auto* p = CreateMaybeMessage<::generationmodule::GeneratingUnit>(GetArenaForAllocation());
    _impl_.generatingunit_ = p;
  }
  return _impl_.generatingunit_;
}
inline ::generationmodule::GeneratingUnit* GenerationStatusProfile::mutable_generatingunit() {
  ::generationmodule::GeneratingUnit* _msg = _internal_mutable_generatingunit();
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationStatusProfile.generatingUnit)
  return _msg;
}
inline void GenerationStatusProfile::set_allocated_generatingunit(::generationmodule::GeneratingUnit* generatingunit) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.generatingunit_;
  }
  if (generatingunit) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(generatingunit);
    if (message_arena != submessage_arena) {
      generatingunit = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, generatingunit, submessage_arena);
    }

  } else {

  }
  _impl_.generatingunit_ = generatingunit;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationStatusProfile.generatingUnit)
}

// .generationmodule.GenerationStatus generationStatus = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
inline bool GenerationStatusProfile::_internal_has_generationstatus() const {
  return this != internal_default_instance() && _impl_.generationstatus_ != nullptr;
}
inline bool GenerationStatusProfile::has_generationstatus() const {
  return _internal_has_generationstatus();
}
inline void GenerationStatusProfile::clear_generationstatus() {
  if (GetArenaForAllocation() == nullptr && _impl_.generationstatus_ != nullptr) {
    delete _impl_.generationstatus_;
  }
  _impl_.generationstatus_ = nullptr;
}
inline const ::generationmodule::GenerationStatus& GenerationStatusProfile::_internal_generationstatus() const {
  const ::generationmodule::GenerationStatus* p = _impl_.generationstatus_;
  return p != nullptr ? *p : reinterpret_cast<const ::generationmodule::GenerationStatus&>(
      ::generationmodule::_GenerationStatus_default_instance_);
}
inline const ::generationmodule::GenerationStatus& GenerationStatusProfile::generationstatus() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationStatusProfile.generationStatus)
  return _internal_generationstatus();
}
inline void GenerationStatusProfile::unsafe_arena_set_allocated_generationstatus(
    ::generationmodule::GenerationStatus* generationstatus) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.generationstatus_);
  }
  _impl_.generationstatus_ = generationstatus;
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationStatusProfile.generationStatus)
}
inline ::generationmodule::GenerationStatus* GenerationStatusProfile::release_generationstatus() {
  
  ::generationmodule::GenerationStatus* temp = _impl_.generationstatus_;
  _impl_.generationstatus_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::generationmodule::GenerationStatus* GenerationStatusProfile::unsafe_arena_release_generationstatus() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationStatusProfile.generationStatus)
  
  ::generationmodule::GenerationStatus* temp = _impl_.generationstatus_;
  _impl_.generationstatus_ = nullptr;
  return temp;
}
inline ::generationmodule::GenerationStatus* GenerationStatusProfile::_internal_mutable_generationstatus() {
  
  if (_impl_.generationstatus_ == nullptr) {
    auto* p = CreateMaybeMessage<::generationmodule::GenerationStatus>(GetArenaForAllocation());
    _impl_.generationstatus_ = p;
  }
  return _impl_.generationstatus_;
}
inline ::generationmodule::GenerationStatus* GenerationStatusProfile::mutable_generationstatus() {
  ::generationmodule::GenerationStatus* _msg = _internal_mutable_generationstatus();
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationStatusProfile.generationStatus)
  return _msg;
}
inline void GenerationStatusProfile::set_allocated_generationstatus(::generationmodule::GenerationStatus* generationstatus) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.generationstatus_;
  }
  if (generationstatus) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(generationstatus);
    if (message_arena != submessage_arena) {
      generationstatus = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, generationstatus, submessage_arena);
    }

  } else {

  }
  _impl_.generationstatus_ = generationstatus;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationStatusProfile.generationStatus)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace generationmodule


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_generationmodule_2fgenerationmodule_2eproto_2epb_2eh
