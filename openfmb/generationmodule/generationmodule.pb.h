// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: generationmodule/generationmodule.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_generationmodule_2fgenerationmodule_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_generationmodule_2fgenerationmodule_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3015000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3015006 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "uml.pb.h"
#include <google/protobuf/wrappers.pb.h>
#include "commonmodule/commonmodule.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_generationmodule_2fgenerationmodule_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_generationmodule_2fgenerationmodule_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[22]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_generationmodule_2fgenerationmodule_2eproto;
::PROTOBUF_NAMESPACE_ID::Metadata descriptor_table_generationmodule_2fgenerationmodule_2eproto_metadata_getter(int index);
namespace generationmodule {
class DroopParameter;
struct DroopParameterDefaultTypeInternal;
extern DroopParameterDefaultTypeInternal _DroopParameter_default_instance_;
class GeneratingUnit;
struct GeneratingUnitDefaultTypeInternal;
extern GeneratingUnitDefaultTypeInternal _GeneratingUnit_default_instance_;
class GenerationCSG;
struct GenerationCSGDefaultTypeInternal;
extern GenerationCSGDefaultTypeInternal _GenerationCSG_default_instance_;
class GenerationControl;
struct GenerationControlDefaultTypeInternal;
extern GenerationControlDefaultTypeInternal _GenerationControl_default_instance_;
class GenerationControlFSCC;
struct GenerationControlFSCCDefaultTypeInternal;
extern GenerationControlFSCCDefaultTypeInternal _GenerationControlFSCC_default_instance_;
class GenerationControlProfile;
struct GenerationControlProfileDefaultTypeInternal;
extern GenerationControlProfileDefaultTypeInternal _GenerationControlProfile_default_instance_;
class GenerationControlScheduleFSCH;
struct GenerationControlScheduleFSCHDefaultTypeInternal;
extern GenerationControlScheduleFSCHDefaultTypeInternal _GenerationControlScheduleFSCH_default_instance_;
class GenerationDiscreteControl;
struct GenerationDiscreteControlDefaultTypeInternal;
extern GenerationDiscreteControlDefaultTypeInternal _GenerationDiscreteControl_default_instance_;
class GenerationDiscreteControlProfile;
struct GenerationDiscreteControlProfileDefaultTypeInternal;
extern GenerationDiscreteControlProfileDefaultTypeInternal _GenerationDiscreteControlProfile_default_instance_;
class GenerationEvent;
struct GenerationEventDefaultTypeInternal;
extern GenerationEventDefaultTypeInternal _GenerationEvent_default_instance_;
class GenerationEventAndStatusZGEN;
struct GenerationEventAndStatusZGENDefaultTypeInternal;
extern GenerationEventAndStatusZGENDefaultTypeInternal _GenerationEventAndStatusZGEN_default_instance_;
class GenerationEventProfile;
struct GenerationEventProfileDefaultTypeInternal;
extern GenerationEventProfileDefaultTypeInternal _GenerationEventProfile_default_instance_;
class GenerationEventZGEN;
struct GenerationEventZGENDefaultTypeInternal;
extern GenerationEventZGENDefaultTypeInternal _GenerationEventZGEN_default_instance_;
class GenerationPoint;
struct GenerationPointDefaultTypeInternal;
extern GenerationPointDefaultTypeInternal _GenerationPoint_default_instance_;
class GenerationPointStatus;
struct GenerationPointStatusDefaultTypeInternal;
extern GenerationPointStatusDefaultTypeInternal _GenerationPointStatus_default_instance_;
class GenerationReading;
struct GenerationReadingDefaultTypeInternal;
extern GenerationReadingDefaultTypeInternal _GenerationReading_default_instance_;
class GenerationReadingProfile;
struct GenerationReadingProfileDefaultTypeInternal;
extern GenerationReadingProfileDefaultTypeInternal _GenerationReadingProfile_default_instance_;
class GenerationStatus;
struct GenerationStatusDefaultTypeInternal;
extern GenerationStatusDefaultTypeInternal _GenerationStatus_default_instance_;
class GenerationStatusProfile;
struct GenerationStatusProfileDefaultTypeInternal;
extern GenerationStatusProfileDefaultTypeInternal _GenerationStatusProfile_default_instance_;
class GenerationStatusZGEN;
struct GenerationStatusZGENDefaultTypeInternal;
extern GenerationStatusZGENDefaultTypeInternal _GenerationStatusZGEN_default_instance_;
class ReactivePowerControl;
struct ReactivePowerControlDefaultTypeInternal;
extern ReactivePowerControlDefaultTypeInternal _ReactivePowerControl_default_instance_;
class RealPowerControl;
struct RealPowerControlDefaultTypeInternal;
extern RealPowerControlDefaultTypeInternal _RealPowerControl_default_instance_;
}  // namespace generationmodule
PROTOBUF_NAMESPACE_OPEN
template<> ::generationmodule::DroopParameter* Arena::CreateMaybeMessage<::generationmodule::DroopParameter>(Arena*);
template<> ::generationmodule::GeneratingUnit* Arena::CreateMaybeMessage<::generationmodule::GeneratingUnit>(Arena*);
template<> ::generationmodule::GenerationCSG* Arena::CreateMaybeMessage<::generationmodule::GenerationCSG>(Arena*);
template<> ::generationmodule::GenerationControl* Arena::CreateMaybeMessage<::generationmodule::GenerationControl>(Arena*);
template<> ::generationmodule::GenerationControlFSCC* Arena::CreateMaybeMessage<::generationmodule::GenerationControlFSCC>(Arena*);
template<> ::generationmodule::GenerationControlProfile* Arena::CreateMaybeMessage<::generationmodule::GenerationControlProfile>(Arena*);
template<> ::generationmodule::GenerationControlScheduleFSCH* Arena::CreateMaybeMessage<::generationmodule::GenerationControlScheduleFSCH>(Arena*);
template<> ::generationmodule::GenerationDiscreteControl* Arena::CreateMaybeMessage<::generationmodule::GenerationDiscreteControl>(Arena*);
template<> ::generationmodule::GenerationDiscreteControlProfile* Arena::CreateMaybeMessage<::generationmodule::GenerationDiscreteControlProfile>(Arena*);
template<> ::generationmodule::GenerationEvent* Arena::CreateMaybeMessage<::generationmodule::GenerationEvent>(Arena*);
template<> ::generationmodule::GenerationEventAndStatusZGEN* Arena::CreateMaybeMessage<::generationmodule::GenerationEventAndStatusZGEN>(Arena*);
template<> ::generationmodule::GenerationEventProfile* Arena::CreateMaybeMessage<::generationmodule::GenerationEventProfile>(Arena*);
template<> ::generationmodule::GenerationEventZGEN* Arena::CreateMaybeMessage<::generationmodule::GenerationEventZGEN>(Arena*);
template<> ::generationmodule::GenerationPoint* Arena::CreateMaybeMessage<::generationmodule::GenerationPoint>(Arena*);
template<> ::generationmodule::GenerationPointStatus* Arena::CreateMaybeMessage<::generationmodule::GenerationPointStatus>(Arena*);
template<> ::generationmodule::GenerationReading* Arena::CreateMaybeMessage<::generationmodule::GenerationReading>(Arena*);
template<> ::generationmodule::GenerationReadingProfile* Arena::CreateMaybeMessage<::generationmodule::GenerationReadingProfile>(Arena*);
template<> ::generationmodule::GenerationStatus* Arena::CreateMaybeMessage<::generationmodule::GenerationStatus>(Arena*);
template<> ::generationmodule::GenerationStatusProfile* Arena::CreateMaybeMessage<::generationmodule::GenerationStatusProfile>(Arena*);
template<> ::generationmodule::GenerationStatusZGEN* Arena::CreateMaybeMessage<::generationmodule::GenerationStatusZGEN>(Arena*);
template<> ::generationmodule::ReactivePowerControl* Arena::CreateMaybeMessage<::generationmodule::ReactivePowerControl>(Arena*);
template<> ::generationmodule::RealPowerControl* Arena::CreateMaybeMessage<::generationmodule::RealPowerControl>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace generationmodule {

// ===================================================================

class GenerationPoint PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:generationmodule.GenerationPoint) */ {
 public:
  inline GenerationPoint() : GenerationPoint(nullptr) {}
  virtual ~GenerationPoint();
  explicit constexpr GenerationPoint(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GenerationPoint(const GenerationPoint& from);
  GenerationPoint(GenerationPoint&& from) noexcept
    : GenerationPoint() {
    *this = ::std::move(from);
  }

  inline GenerationPoint& operator=(const GenerationPoint& from) {
    CopyFrom(from);
    return *this;
  }
  inline GenerationPoint& operator=(GenerationPoint&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GenerationPoint& default_instance() {
    return *internal_default_instance();
  }
  static inline const GenerationPoint* internal_default_instance() {
    return reinterpret_cast<const GenerationPoint*>(
               &_GenerationPoint_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(GenerationPoint& a, GenerationPoint& b) {
    a.Swap(&b);
  }
  inline void Swap(GenerationPoint* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GenerationPoint* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GenerationPoint* New() const final {
    return CreateMaybeMessage<GenerationPoint>(nullptr);
  }

  GenerationPoint* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GenerationPoint>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GenerationPoint& from);
  void MergeFrom(const GenerationPoint& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GenerationPoint* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "generationmodule.GenerationPoint";
  }
  protected:
  explicit GenerationPoint(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_generationmodule_2fgenerationmodule_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBlackStartEnabledFieldNumber = 1,
    kFrequencySetPointEnabledFieldNumber = 2,
    kPctHzDroopFieldNumber = 3,
    kPctVDroopFieldNumber = 4,
    kRampRatesFieldNumber = 5,
    kReactivePwrSetPointEnabledFieldNumber = 6,
    kRealPwrSetPointEnabledFieldNumber = 7,
    kResetFieldNumber = 8,
    kStateFieldNumber = 9,
    kSyncBackToGridFieldNumber = 10,
    kTransToIslndOnGridLossEnabledFieldNumber = 11,
    kVoltageSetPointEnabledFieldNumber = 12,
    kStartTimeFieldNumber = 13,
  };
  // .commonmodule.ControlSPC blackStartEnabled = 1;
  bool has_blackstartenabled() const;
  private:
  bool _internal_has_blackstartenabled() const;
  public:
  void clear_blackstartenabled();
  const ::commonmodule::ControlSPC& blackstartenabled() const;
  ::commonmodule::ControlSPC* release_blackstartenabled();
  ::commonmodule::ControlSPC* mutable_blackstartenabled();
  void set_allocated_blackstartenabled(::commonmodule::ControlSPC* blackstartenabled);
  private:
  const ::commonmodule::ControlSPC& _internal_blackstartenabled() const;
  ::commonmodule::ControlSPC* _internal_mutable_blackstartenabled();
  public:
  void unsafe_arena_set_allocated_blackstartenabled(
      ::commonmodule::ControlSPC* blackstartenabled);
  ::commonmodule::ControlSPC* unsafe_arena_release_blackstartenabled();

  // .commonmodule.ControlSPC frequencySetPointEnabled = 2;
  bool has_frequencysetpointenabled() const;
  private:
  bool _internal_has_frequencysetpointenabled() const;
  public:
  void clear_frequencysetpointenabled();
  const ::commonmodule::ControlSPC& frequencysetpointenabled() const;
  ::commonmodule::ControlSPC* release_frequencysetpointenabled();
  ::commonmodule::ControlSPC* mutable_frequencysetpointenabled();
  void set_allocated_frequencysetpointenabled(::commonmodule::ControlSPC* frequencysetpointenabled);
  private:
  const ::commonmodule::ControlSPC& _internal_frequencysetpointenabled() const;
  ::commonmodule::ControlSPC* _internal_mutable_frequencysetpointenabled();
  public:
  void unsafe_arena_set_allocated_frequencysetpointenabled(
      ::commonmodule::ControlSPC* frequencysetpointenabled);
  ::commonmodule::ControlSPC* unsafe_arena_release_frequencysetpointenabled();

  // .google.protobuf.FloatValue pctHzDroop = 3;
  bool has_pcthzdroop() const;
  private:
  bool _internal_has_pcthzdroop() const;
  public:
  void clear_pcthzdroop();
  const PROTOBUF_NAMESPACE_ID::FloatValue& pcthzdroop() const;
  PROTOBUF_NAMESPACE_ID::FloatValue* release_pcthzdroop();
  PROTOBUF_NAMESPACE_ID::FloatValue* mutable_pcthzdroop();
  void set_allocated_pcthzdroop(PROTOBUF_NAMESPACE_ID::FloatValue* pcthzdroop);
  private:
  const PROTOBUF_NAMESPACE_ID::FloatValue& _internal_pcthzdroop() const;
  PROTOBUF_NAMESPACE_ID::FloatValue* _internal_mutable_pcthzdroop();
  public:
  void unsafe_arena_set_allocated_pcthzdroop(
      PROTOBUF_NAMESPACE_ID::FloatValue* pcthzdroop);
  PROTOBUF_NAMESPACE_ID::FloatValue* unsafe_arena_release_pcthzdroop();

  // .google.protobuf.FloatValue pctVDroop = 4;
  bool has_pctvdroop() const;
  private:
  bool _internal_has_pctvdroop() const;
  public:
  void clear_pctvdroop();
  const PROTOBUF_NAMESPACE_ID::FloatValue& pctvdroop() const;
  PROTOBUF_NAMESPACE_ID::FloatValue* release_pctvdroop();
  PROTOBUF_NAMESPACE_ID::FloatValue* mutable_pctvdroop();
  void set_allocated_pctvdroop(PROTOBUF_NAMESPACE_ID::FloatValue* pctvdroop);
  private:
  const PROTOBUF_NAMESPACE_ID::FloatValue& _internal_pctvdroop() const;
  PROTOBUF_NAMESPACE_ID::FloatValue* _internal_mutable_pctvdroop();
  public:
  void unsafe_arena_set_allocated_pctvdroop(
      PROTOBUF_NAMESPACE_ID::FloatValue* pctvdroop);
  PROTOBUF_NAMESPACE_ID::FloatValue* unsafe_arena_release_pctvdroop();

  // .commonmodule.RampRate rampRates = 5;
  bool has_ramprates() const;
  private:
  bool _internal_has_ramprates() const;
  public:
  void clear_ramprates();
  const ::commonmodule::RampRate& ramprates() const;
  ::commonmodule::RampRate* release_ramprates();
  ::commonmodule::RampRate* mutable_ramprates();
  void set_allocated_ramprates(::commonmodule::RampRate* ramprates);
  private:
  const ::commonmodule::RampRate& _internal_ramprates() const;
  ::commonmodule::RampRate* _internal_mutable_ramprates();
  public:
  void unsafe_arena_set_allocated_ramprates(
      ::commonmodule::RampRate* ramprates);
  ::commonmodule::RampRate* unsafe_arena_release_ramprates();

  // .commonmodule.ControlSPC reactivePwrSetPointEnabled = 6;
  bool has_reactivepwrsetpointenabled() const;
  private:
  bool _internal_has_reactivepwrsetpointenabled() const;
  public:
  void clear_reactivepwrsetpointenabled();
  const ::commonmodule::ControlSPC& reactivepwrsetpointenabled() const;
  ::commonmodule::ControlSPC* release_reactivepwrsetpointenabled();
  ::commonmodule::ControlSPC* mutable_reactivepwrsetpointenabled();
  void set_allocated_reactivepwrsetpointenabled(::commonmodule::ControlSPC* reactivepwrsetpointenabled);
  private:
  const ::commonmodule::ControlSPC& _internal_reactivepwrsetpointenabled() const;
  ::commonmodule::ControlSPC* _internal_mutable_reactivepwrsetpointenabled();
  public:
  void unsafe_arena_set_allocated_reactivepwrsetpointenabled(
      ::commonmodule::ControlSPC* reactivepwrsetpointenabled);
  ::commonmodule::ControlSPC* unsafe_arena_release_reactivepwrsetpointenabled();

  // .commonmodule.ControlSPC realPwrSetPointEnabled = 7;
  bool has_realpwrsetpointenabled() const;
  private:
  bool _internal_has_realpwrsetpointenabled() const;
  public:
  void clear_realpwrsetpointenabled();
  const ::commonmodule::ControlSPC& realpwrsetpointenabled() const;
  ::commonmodule::ControlSPC* release_realpwrsetpointenabled();
  ::commonmodule::ControlSPC* mutable_realpwrsetpointenabled();
  void set_allocated_realpwrsetpointenabled(::commonmodule::ControlSPC* realpwrsetpointenabled);
  private:
  const ::commonmodule::ControlSPC& _internal_realpwrsetpointenabled() const;
  ::commonmodule::ControlSPC* _internal_mutable_realpwrsetpointenabled();
  public:
  void unsafe_arena_set_allocated_realpwrsetpointenabled(
      ::commonmodule::ControlSPC* realpwrsetpointenabled);
  ::commonmodule::ControlSPC* unsafe_arena_release_realpwrsetpointenabled();

  // .commonmodule.ControlSPC reset = 8;
  bool has_reset() const;
  private:
  bool _internal_has_reset() const;
  public:
  void clear_reset();
  const ::commonmodule::ControlSPC& reset() const;
  ::commonmodule::ControlSPC* release_reset();
  ::commonmodule::ControlSPC* mutable_reset();
  void set_allocated_reset(::commonmodule::ControlSPC* reset);
  private:
  const ::commonmodule::ControlSPC& _internal_reset() const;
  ::commonmodule::ControlSPC* _internal_mutable_reset();
  public:
  void unsafe_arena_set_allocated_reset(
      ::commonmodule::ControlSPC* reset);
  ::commonmodule::ControlSPC* unsafe_arena_release_reset();

  // .commonmodule.Optional_StateKind state = 9;
  bool has_state() const;
  private:
  bool _internal_has_state() const;
  public:
  void clear_state();
  const ::commonmodule::Optional_StateKind& state() const;
  ::commonmodule::Optional_StateKind* release_state();
  ::commonmodule::Optional_StateKind* mutable_state();
  void set_allocated_state(::commonmodule::Optional_StateKind* state);
  private:
  const ::commonmodule::Optional_StateKind& _internal_state() const;
  ::commonmodule::Optional_StateKind* _internal_mutable_state();
  public:
  void unsafe_arena_set_allocated_state(
      ::commonmodule::Optional_StateKind* state);
  ::commonmodule::Optional_StateKind* unsafe_arena_release_state();

  // .commonmodule.ControlSPC syncBackToGrid = 10;
  bool has_syncbacktogrid() const;
  private:
  bool _internal_has_syncbacktogrid() const;
  public:
  void clear_syncbacktogrid();
  const ::commonmodule::ControlSPC& syncbacktogrid() const;
  ::commonmodule::ControlSPC* release_syncbacktogrid();
  ::commonmodule::ControlSPC* mutable_syncbacktogrid();
  void set_allocated_syncbacktogrid(::commonmodule::ControlSPC* syncbacktogrid);
  private:
  const ::commonmodule::ControlSPC& _internal_syncbacktogrid() const;
  ::commonmodule::ControlSPC* _internal_mutable_syncbacktogrid();
  public:
  void unsafe_arena_set_allocated_syncbacktogrid(
      ::commonmodule::ControlSPC* syncbacktogrid);
  ::commonmodule::ControlSPC* unsafe_arena_release_syncbacktogrid();

  // .commonmodule.ControlSPC transToIslndOnGridLossEnabled = 11;
  bool has_transtoislndongridlossenabled() const;
  private:
  bool _internal_has_transtoislndongridlossenabled() const;
  public:
  void clear_transtoislndongridlossenabled();
  const ::commonmodule::ControlSPC& transtoislndongridlossenabled() const;
  ::commonmodule::ControlSPC* release_transtoislndongridlossenabled();
  ::commonmodule::ControlSPC* mutable_transtoislndongridlossenabled();
  void set_allocated_transtoislndongridlossenabled(::commonmodule::ControlSPC* transtoislndongridlossenabled);
  private:
  const ::commonmodule::ControlSPC& _internal_transtoislndongridlossenabled() const;
  ::commonmodule::ControlSPC* _internal_mutable_transtoislndongridlossenabled();
  public:
  void unsafe_arena_set_allocated_transtoislndongridlossenabled(
      ::commonmodule::ControlSPC* transtoislndongridlossenabled);
  ::commonmodule::ControlSPC* unsafe_arena_release_transtoislndongridlossenabled();

  // .commonmodule.ControlSPC voltageSetPointEnabled = 12;
  bool has_voltagesetpointenabled() const;
  private:
  bool _internal_has_voltagesetpointenabled() const;
  public:
  void clear_voltagesetpointenabled();
  const ::commonmodule::ControlSPC& voltagesetpointenabled() const;
  ::commonmodule::ControlSPC* release_voltagesetpointenabled();
  ::commonmodule::ControlSPC* mutable_voltagesetpointenabled();
  void set_allocated_voltagesetpointenabled(::commonmodule::ControlSPC* voltagesetpointenabled);
  private:
  const ::commonmodule::ControlSPC& _internal_voltagesetpointenabled() const;
  ::commonmodule::ControlSPC* _internal_mutable_voltagesetpointenabled();
  public:
  void unsafe_arena_set_allocated_voltagesetpointenabled(
      ::commonmodule::ControlSPC* voltagesetpointenabled);
  ::commonmodule::ControlSPC* unsafe_arena_release_voltagesetpointenabled();

  // .commonmodule.ControlTimestamp startTime = 13 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  bool has_starttime() const;
  private:
  bool _internal_has_starttime() const;
  public:
  void clear_starttime();
  const ::commonmodule::ControlTimestamp& starttime() const;
  ::commonmodule::ControlTimestamp* release_starttime();
  ::commonmodule::ControlTimestamp* mutable_starttime();
  void set_allocated_starttime(::commonmodule::ControlTimestamp* starttime);
  private:
  const ::commonmodule::ControlTimestamp& _internal_starttime() const;
  ::commonmodule::ControlTimestamp* _internal_mutable_starttime();
  public:
  void unsafe_arena_set_allocated_starttime(
      ::commonmodule::ControlTimestamp* starttime);
  ::commonmodule::ControlTimestamp* unsafe_arena_release_starttime();

  // @@protoc_insertion_point(class_scope:generationmodule.GenerationPoint)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::commonmodule::ControlSPC* blackstartenabled_;
  ::commonmodule::ControlSPC* frequencysetpointenabled_;
  PROTOBUF_NAMESPACE_ID::FloatValue* pcthzdroop_;
  PROTOBUF_NAMESPACE_ID::FloatValue* pctvdroop_;
  ::commonmodule::RampRate* ramprates_;
  ::commonmodule::ControlSPC* reactivepwrsetpointenabled_;
  ::commonmodule::ControlSPC* realpwrsetpointenabled_;
  ::commonmodule::ControlSPC* reset_;
  ::commonmodule::Optional_StateKind* state_;
  ::commonmodule::ControlSPC* syncbacktogrid_;
  ::commonmodule::ControlSPC* transtoislndongridlossenabled_;
  ::commonmodule::ControlSPC* voltagesetpointenabled_;
  ::commonmodule::ControlTimestamp* starttime_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_generationmodule_2fgenerationmodule_2eproto;
};
// -------------------------------------------------------------------

class GenerationCSG PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:generationmodule.GenerationCSG) */ {
 public:
  inline GenerationCSG() : GenerationCSG(nullptr) {}
  virtual ~GenerationCSG();
  explicit constexpr GenerationCSG(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GenerationCSG(const GenerationCSG& from);
  GenerationCSG(GenerationCSG&& from) noexcept
    : GenerationCSG() {
    *this = ::std::move(from);
  }

  inline GenerationCSG& operator=(const GenerationCSG& from) {
    CopyFrom(from);
    return *this;
  }
  inline GenerationCSG& operator=(GenerationCSG&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GenerationCSG& default_instance() {
    return *internal_default_instance();
  }
  static inline const GenerationCSG* internal_default_instance() {
    return reinterpret_cast<const GenerationCSG*>(
               &_GenerationCSG_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(GenerationCSG& a, GenerationCSG& b) {
    a.Swap(&b);
  }
  inline void Swap(GenerationCSG* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GenerationCSG* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GenerationCSG* New() const final {
    return CreateMaybeMessage<GenerationCSG>(nullptr);
  }

  GenerationCSG* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GenerationCSG>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GenerationCSG& from);
  void MergeFrom(const GenerationCSG& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GenerationCSG* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "generationmodule.GenerationCSG";
  }
  protected:
  explicit GenerationCSG(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_generationmodule_2fgenerationmodule_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCrvPtsFieldNumber = 1,
  };
  // repeated .generationmodule.GenerationPoint crvPts = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  int crvpts_size() const;
  private:
  int _internal_crvpts_size() const;
  public:
  void clear_crvpts();
  ::generationmodule::GenerationPoint* mutable_crvpts(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::generationmodule::GenerationPoint >*
      mutable_crvpts();
  private:
  const ::generationmodule::GenerationPoint& _internal_crvpts(int index) const;
  ::generationmodule::GenerationPoint* _internal_add_crvpts();
  public:
  const ::generationmodule::GenerationPoint& crvpts(int index) const;
  ::generationmodule::GenerationPoint* add_crvpts();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::generationmodule::GenerationPoint >&
      crvpts() const;

  // @@protoc_insertion_point(class_scope:generationmodule.GenerationCSG)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::generationmodule::GenerationPoint > crvpts_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_generationmodule_2fgenerationmodule_2eproto;
};
// -------------------------------------------------------------------

class GenerationControlScheduleFSCH PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:generationmodule.GenerationControlScheduleFSCH) */ {
 public:
  inline GenerationControlScheduleFSCH() : GenerationControlScheduleFSCH(nullptr) {}
  virtual ~GenerationControlScheduleFSCH();
  explicit constexpr GenerationControlScheduleFSCH(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GenerationControlScheduleFSCH(const GenerationControlScheduleFSCH& from);
  GenerationControlScheduleFSCH(GenerationControlScheduleFSCH&& from) noexcept
    : GenerationControlScheduleFSCH() {
    *this = ::std::move(from);
  }

  inline GenerationControlScheduleFSCH& operator=(const GenerationControlScheduleFSCH& from) {
    CopyFrom(from);
    return *this;
  }
  inline GenerationControlScheduleFSCH& operator=(GenerationControlScheduleFSCH&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GenerationControlScheduleFSCH& default_instance() {
    return *internal_default_instance();
  }
  static inline const GenerationControlScheduleFSCH* internal_default_instance() {
    return reinterpret_cast<const GenerationControlScheduleFSCH*>(
               &_GenerationControlScheduleFSCH_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(GenerationControlScheduleFSCH& a, GenerationControlScheduleFSCH& b) {
    a.Swap(&b);
  }
  inline void Swap(GenerationControlScheduleFSCH* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GenerationControlScheduleFSCH* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GenerationControlScheduleFSCH* New() const final {
    return CreateMaybeMessage<GenerationControlScheduleFSCH>(nullptr);
  }

  GenerationControlScheduleFSCH* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GenerationControlScheduleFSCH>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GenerationControlScheduleFSCH& from);
  void MergeFrom(const GenerationControlScheduleFSCH& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GenerationControlScheduleFSCH* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "generationmodule.GenerationControlScheduleFSCH";
  }
  protected:
  explicit GenerationControlScheduleFSCH(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_generationmodule_2fgenerationmodule_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValDCSGFieldNumber = 1,
  };
  // .generationmodule.GenerationCSG ValDCSG = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  bool has_valdcsg() const;
  private:
  bool _internal_has_valdcsg() const;
  public:
  void clear_valdcsg();
  const ::generationmodule::GenerationCSG& valdcsg() const;
  ::generationmodule::GenerationCSG* release_valdcsg();
  ::generationmodule::GenerationCSG* mutable_valdcsg();
  void set_allocated_valdcsg(::generationmodule::GenerationCSG* valdcsg);
  private:
  const ::generationmodule::GenerationCSG& _internal_valdcsg() const;
  ::generationmodule::GenerationCSG* _internal_mutable_valdcsg();
  public:
  void unsafe_arena_set_allocated_valdcsg(
      ::generationmodule::GenerationCSG* valdcsg);
  ::generationmodule::GenerationCSG* unsafe_arena_release_valdcsg();

  // @@protoc_insertion_point(class_scope:generationmodule.GenerationControlScheduleFSCH)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::generationmodule::GenerationCSG* valdcsg_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_generationmodule_2fgenerationmodule_2eproto;
};
// -------------------------------------------------------------------

class GenerationControlFSCC PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:generationmodule.GenerationControlFSCC) */ {
 public:
  inline GenerationControlFSCC() : GenerationControlFSCC(nullptr) {}
  virtual ~GenerationControlFSCC();
  explicit constexpr GenerationControlFSCC(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GenerationControlFSCC(const GenerationControlFSCC& from);
  GenerationControlFSCC(GenerationControlFSCC&& from) noexcept
    : GenerationControlFSCC() {
    *this = ::std::move(from);
  }

  inline GenerationControlFSCC& operator=(const GenerationControlFSCC& from) {
    CopyFrom(from);
    return *this;
  }
  inline GenerationControlFSCC& operator=(GenerationControlFSCC&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GenerationControlFSCC& default_instance() {
    return *internal_default_instance();
  }
  static inline const GenerationControlFSCC* internal_default_instance() {
    return reinterpret_cast<const GenerationControlFSCC*>(
               &_GenerationControlFSCC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(GenerationControlFSCC& a, GenerationControlFSCC& b) {
    a.Swap(&b);
  }
  inline void Swap(GenerationControlFSCC* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GenerationControlFSCC* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GenerationControlFSCC* New() const final {
    return CreateMaybeMessage<GenerationControlFSCC>(nullptr);
  }

  GenerationControlFSCC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GenerationControlFSCC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GenerationControlFSCC& from);
  void MergeFrom(const GenerationControlFSCC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GenerationControlFSCC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "generationmodule.GenerationControlFSCC";
  }
  protected:
  explicit GenerationControlFSCC(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_generationmodule_2fgenerationmodule_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kControlFSCCFieldNumber = 1,
    kGenerationControlScheduleFSCHFieldNumber = 2,
  };
  // .commonmodule.ControlFSCC controlFSCC = 1 [(.uml.option_parent_message) = true];
  bool has_controlfscc() const;
  private:
  bool _internal_has_controlfscc() const;
  public:
  void clear_controlfscc();
  const ::commonmodule::ControlFSCC& controlfscc() const;
  ::commonmodule::ControlFSCC* release_controlfscc();
  ::commonmodule::ControlFSCC* mutable_controlfscc();
  void set_allocated_controlfscc(::commonmodule::ControlFSCC* controlfscc);
  private:
  const ::commonmodule::ControlFSCC& _internal_controlfscc() const;
  ::commonmodule::ControlFSCC* _internal_mutable_controlfscc();
  public:
  void unsafe_arena_set_allocated_controlfscc(
      ::commonmodule::ControlFSCC* controlfscc);
  ::commonmodule::ControlFSCC* unsafe_arena_release_controlfscc();

  // .generationmodule.GenerationControlScheduleFSCH GenerationControlScheduleFSCH = 2;
  bool has_generationcontrolschedulefsch() const;
  private:
  bool _internal_has_generationcontrolschedulefsch() const;
  public:
  void clear_generationcontrolschedulefsch();
  const ::generationmodule::GenerationControlScheduleFSCH& generationcontrolschedulefsch() const;
  ::generationmodule::GenerationControlScheduleFSCH* release_generationcontrolschedulefsch();
  ::generationmodule::GenerationControlScheduleFSCH* mutable_generationcontrolschedulefsch();
  void set_allocated_generationcontrolschedulefsch(::generationmodule::GenerationControlScheduleFSCH* generationcontrolschedulefsch);
  private:
  const ::generationmodule::GenerationControlScheduleFSCH& _internal_generationcontrolschedulefsch() const;
  ::generationmodule::GenerationControlScheduleFSCH* _internal_mutable_generationcontrolschedulefsch();
  public:
  void unsafe_arena_set_allocated_generationcontrolschedulefsch(
      ::generationmodule::GenerationControlScheduleFSCH* generationcontrolschedulefsch);
  ::generationmodule::GenerationControlScheduleFSCH* unsafe_arena_release_generationcontrolschedulefsch();

  // @@protoc_insertion_point(class_scope:generationmodule.GenerationControlFSCC)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::commonmodule::ControlFSCC* controlfscc_;
  ::generationmodule::GenerationControlScheduleFSCH* generationcontrolschedulefsch_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_generationmodule_2fgenerationmodule_2eproto;
};
// -------------------------------------------------------------------

class GenerationControl PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:generationmodule.GenerationControl) */ {
 public:
  inline GenerationControl() : GenerationControl(nullptr) {}
  virtual ~GenerationControl();
  explicit constexpr GenerationControl(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GenerationControl(const GenerationControl& from);
  GenerationControl(GenerationControl&& from) noexcept
    : GenerationControl() {
    *this = ::std::move(from);
  }

  inline GenerationControl& operator=(const GenerationControl& from) {
    CopyFrom(from);
    return *this;
  }
  inline GenerationControl& operator=(GenerationControl&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GenerationControl& default_instance() {
    return *internal_default_instance();
  }
  static inline const GenerationControl* internal_default_instance() {
    return reinterpret_cast<const GenerationControl*>(
               &_GenerationControl_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(GenerationControl& a, GenerationControl& b) {
    a.Swap(&b);
  }
  inline void Swap(GenerationControl* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GenerationControl* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GenerationControl* New() const final {
    return CreateMaybeMessage<GenerationControl>(nullptr);
  }

  GenerationControl* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GenerationControl>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GenerationControl& from);
  void MergeFrom(const GenerationControl& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GenerationControl* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "generationmodule.GenerationControl";
  }
  protected:
  explicit GenerationControl(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_generationmodule_2fgenerationmodule_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kControlValueFieldNumber = 1,
    kCheckFieldNumber = 2,
    kGenerationControlFSCCFieldNumber = 3,
  };
  // .commonmodule.ControlValue controlValue = 1 [(.uml.option_parent_message) = true];
  bool has_controlvalue() const;
  private:
  bool _internal_has_controlvalue() const;
  public:
  void clear_controlvalue();
  const ::commonmodule::ControlValue& controlvalue() const;
  ::commonmodule::ControlValue* release_controlvalue();
  ::commonmodule::ControlValue* mutable_controlvalue();
  void set_allocated_controlvalue(::commonmodule::ControlValue* controlvalue);
  private:
  const ::commonmodule::ControlValue& _internal_controlvalue() const;
  ::commonmodule::ControlValue* _internal_mutable_controlvalue();
  public:
  void unsafe_arena_set_allocated_controlvalue(
      ::commonmodule::ControlValue* controlvalue);
  ::commonmodule::ControlValue* unsafe_arena_release_controlvalue();

  // .commonmodule.CheckConditions check = 2;
  bool has_check() const;
  private:
  bool _internal_has_check() const;
  public:
  void clear_check();
  const ::commonmodule::CheckConditions& check() const;
  ::commonmodule::CheckConditions* release_check();
  ::commonmodule::CheckConditions* mutable_check();
  void set_allocated_check(::commonmodule::CheckConditions* check);
  private:
  const ::commonmodule::CheckConditions& _internal_check() const;
  ::commonmodule::CheckConditions* _internal_mutable_check();
  public:
  void unsafe_arena_set_allocated_check(
      ::commonmodule::CheckConditions* check);
  ::commonmodule::CheckConditions* unsafe_arena_release_check();

  // .generationmodule.GenerationControlFSCC generationControlFSCC = 3;
  bool has_generationcontrolfscc() const;
  private:
  bool _internal_has_generationcontrolfscc() const;
  public:
  void clear_generationcontrolfscc();
  const ::generationmodule::GenerationControlFSCC& generationcontrolfscc() const;
  ::generationmodule::GenerationControlFSCC* release_generationcontrolfscc();
  ::generationmodule::GenerationControlFSCC* mutable_generationcontrolfscc();
  void set_allocated_generationcontrolfscc(::generationmodule::GenerationControlFSCC* generationcontrolfscc);
  private:
  const ::generationmodule::GenerationControlFSCC& _internal_generationcontrolfscc() const;
  ::generationmodule::GenerationControlFSCC* _internal_mutable_generationcontrolfscc();
  public:
  void unsafe_arena_set_allocated_generationcontrolfscc(
      ::generationmodule::GenerationControlFSCC* generationcontrolfscc);
  ::generationmodule::GenerationControlFSCC* unsafe_arena_release_generationcontrolfscc();

  // @@protoc_insertion_point(class_scope:generationmodule.GenerationControl)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::commonmodule::ControlValue* controlvalue_;
  ::commonmodule::CheckConditions* check_;
  ::generationmodule::GenerationControlFSCC* generationcontrolfscc_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_generationmodule_2fgenerationmodule_2eproto;
};
// -------------------------------------------------------------------

class GeneratingUnit PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:generationmodule.GeneratingUnit) */ {
 public:
  inline GeneratingUnit() : GeneratingUnit(nullptr) {}
  virtual ~GeneratingUnit();
  explicit constexpr GeneratingUnit(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GeneratingUnit(const GeneratingUnit& from);
  GeneratingUnit(GeneratingUnit&& from) noexcept
    : GeneratingUnit() {
    *this = ::std::move(from);
  }

  inline GeneratingUnit& operator=(const GeneratingUnit& from) {
    CopyFrom(from);
    return *this;
  }
  inline GeneratingUnit& operator=(GeneratingUnit&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GeneratingUnit& default_instance() {
    return *internal_default_instance();
  }
  static inline const GeneratingUnit* internal_default_instance() {
    return reinterpret_cast<const GeneratingUnit*>(
               &_GeneratingUnit_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(GeneratingUnit& a, GeneratingUnit& b) {
    a.Swap(&b);
  }
  inline void Swap(GeneratingUnit* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GeneratingUnit* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GeneratingUnit* New() const final {
    return CreateMaybeMessage<GeneratingUnit>(nullptr);
  }

  GeneratingUnit* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GeneratingUnit>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GeneratingUnit& from);
  void MergeFrom(const GeneratingUnit& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GeneratingUnit* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "generationmodule.GeneratingUnit";
  }
  protected:
  explicit GeneratingUnit(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_generationmodule_2fgenerationmodule_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kConductingEquipmentFieldNumber = 1,
    kMaxOperatingPFieldNumber = 2,
  };
  // .commonmodule.ConductingEquipment conductingEquipment = 1 [(.uml.option_parent_message) = true];
  bool has_conductingequipment() const;
  private:
  bool _internal_has_conductingequipment() const;
  public:
  void clear_conductingequipment();
  const ::commonmodule::ConductingEquipment& conductingequipment() const;
  ::commonmodule::ConductingEquipment* release_conductingequipment();
  ::commonmodule::ConductingEquipment* mutable_conductingequipment();
  void set_allocated_conductingequipment(::commonmodule::ConductingEquipment* conductingequipment);
  private:
  const ::commonmodule::ConductingEquipment& _internal_conductingequipment() const;
  ::commonmodule::ConductingEquipment* _internal_mutable_conductingequipment();
  public:
  void unsafe_arena_set_allocated_conductingequipment(
      ::commonmodule::ConductingEquipment* conductingequipment);
  ::commonmodule::ConductingEquipment* unsafe_arena_release_conductingequipment();

  // .commonmodule.ActivePower maxOperatingP = 2;
  bool has_maxoperatingp() const;
  private:
  bool _internal_has_maxoperatingp() const;
  public:
  void clear_maxoperatingp();
  const ::commonmodule::ActivePower& maxoperatingp() const;
  ::commonmodule::ActivePower* release_maxoperatingp();
  ::commonmodule::ActivePower* mutable_maxoperatingp();
  void set_allocated_maxoperatingp(::commonmodule::ActivePower* maxoperatingp);
  private:
  const ::commonmodule::ActivePower& _internal_maxoperatingp() const;
  ::commonmodule::ActivePower* _internal_mutable_maxoperatingp();
  public:
  void unsafe_arena_set_allocated_maxoperatingp(
      ::commonmodule::ActivePower* maxoperatingp);
  ::commonmodule::ActivePower* unsafe_arena_release_maxoperatingp();

  // @@protoc_insertion_point(class_scope:generationmodule.GeneratingUnit)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::commonmodule::ConductingEquipment* conductingequipment_;
  ::commonmodule::ActivePower* maxoperatingp_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_generationmodule_2fgenerationmodule_2eproto;
};
// -------------------------------------------------------------------

class GenerationControlProfile PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:generationmodule.GenerationControlProfile) */ {
 public:
  inline GenerationControlProfile() : GenerationControlProfile(nullptr) {}
  virtual ~GenerationControlProfile();
  explicit constexpr GenerationControlProfile(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GenerationControlProfile(const GenerationControlProfile& from);
  GenerationControlProfile(GenerationControlProfile&& from) noexcept
    : GenerationControlProfile() {
    *this = ::std::move(from);
  }

  inline GenerationControlProfile& operator=(const GenerationControlProfile& from) {
    CopyFrom(from);
    return *this;
  }
  inline GenerationControlProfile& operator=(GenerationControlProfile&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GenerationControlProfile& default_instance() {
    return *internal_default_instance();
  }
  static inline const GenerationControlProfile* internal_default_instance() {
    return reinterpret_cast<const GenerationControlProfile*>(
               &_GenerationControlProfile_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(GenerationControlProfile& a, GenerationControlProfile& b) {
    a.Swap(&b);
  }
  inline void Swap(GenerationControlProfile* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GenerationControlProfile* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GenerationControlProfile* New() const final {
    return CreateMaybeMessage<GenerationControlProfile>(nullptr);
  }

  GenerationControlProfile* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GenerationControlProfile>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GenerationControlProfile& from);
  void MergeFrom(const GenerationControlProfile& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GenerationControlProfile* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "generationmodule.GenerationControlProfile";
  }
  protected:
  explicit GenerationControlProfile(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_generationmodule_2fgenerationmodule_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kControlMessageInfoFieldNumber = 1,
    kGeneratingUnitFieldNumber = 2,
    kGenerationControlFieldNumber = 3,
  };
  // .commonmodule.ControlMessageInfo controlMessageInfo = 1 [(.uml.option_parent_message) = true];
  bool has_controlmessageinfo() const;
  private:
  bool _internal_has_controlmessageinfo() const;
  public:
  void clear_controlmessageinfo();
  const ::commonmodule::ControlMessageInfo& controlmessageinfo() const;
  ::commonmodule::ControlMessageInfo* release_controlmessageinfo();
  ::commonmodule::ControlMessageInfo* mutable_controlmessageinfo();
  void set_allocated_controlmessageinfo(::commonmodule::ControlMessageInfo* controlmessageinfo);
  private:
  const ::commonmodule::ControlMessageInfo& _internal_controlmessageinfo() const;
  ::commonmodule::ControlMessageInfo* _internal_mutable_controlmessageinfo();
  public:
  void unsafe_arena_set_allocated_controlmessageinfo(
      ::commonmodule::ControlMessageInfo* controlmessageinfo);
  ::commonmodule::ControlMessageInfo* unsafe_arena_release_controlmessageinfo();

  // .generationmodule.GeneratingUnit generatingUnit = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  bool has_generatingunit() const;
  private:
  bool _internal_has_generatingunit() const;
  public:
  void clear_generatingunit();
  const ::generationmodule::GeneratingUnit& generatingunit() const;
  ::generationmodule::GeneratingUnit* release_generatingunit();
  ::generationmodule::GeneratingUnit* mutable_generatingunit();
  void set_allocated_generatingunit(::generationmodule::GeneratingUnit* generatingunit);
  private:
  const ::generationmodule::GeneratingUnit& _internal_generatingunit() const;
  ::generationmodule::GeneratingUnit* _internal_mutable_generatingunit();
  public:
  void unsafe_arena_set_allocated_generatingunit(
      ::generationmodule::GeneratingUnit* generatingunit);
  ::generationmodule::GeneratingUnit* unsafe_arena_release_generatingunit();

  // .generationmodule.GenerationControl generationControl = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  bool has_generationcontrol() const;
  private:
  bool _internal_has_generationcontrol() const;
  public:
  void clear_generationcontrol();
  const ::generationmodule::GenerationControl& generationcontrol() const;
  ::generationmodule::GenerationControl* release_generationcontrol();
  ::generationmodule::GenerationControl* mutable_generationcontrol();
  void set_allocated_generationcontrol(::generationmodule::GenerationControl* generationcontrol);
  private:
  const ::generationmodule::GenerationControl& _internal_generationcontrol() const;
  ::generationmodule::GenerationControl* _internal_mutable_generationcontrol();
  public:
  void unsafe_arena_set_allocated_generationcontrol(
      ::generationmodule::GenerationControl* generationcontrol);
  ::generationmodule::GenerationControl* unsafe_arena_release_generationcontrol();

  // @@protoc_insertion_point(class_scope:generationmodule.GenerationControlProfile)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::commonmodule::ControlMessageInfo* controlmessageinfo_;
  ::generationmodule::GeneratingUnit* generatingunit_;
  ::generationmodule::GenerationControl* generationcontrol_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_generationmodule_2fgenerationmodule_2eproto;
};
// -------------------------------------------------------------------

class DroopParameter PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:generationmodule.DroopParameter) */ {
 public:
  inline DroopParameter() : DroopParameter(nullptr) {}
  virtual ~DroopParameter();
  explicit constexpr DroopParameter(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  DroopParameter(const DroopParameter& from);
  DroopParameter(DroopParameter&& from) noexcept
    : DroopParameter() {
    *this = ::std::move(from);
  }

  inline DroopParameter& operator=(const DroopParameter& from) {
    CopyFrom(from);
    return *this;
  }
  inline DroopParameter& operator=(DroopParameter&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DroopParameter& default_instance() {
    return *internal_default_instance();
  }
  static inline const DroopParameter* internal_default_instance() {
    return reinterpret_cast<const DroopParameter*>(
               &_DroopParameter_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(DroopParameter& a, DroopParameter& b) {
    a.Swap(&b);
  }
  inline void Swap(DroopParameter* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DroopParameter* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DroopParameter* New() const final {
    return CreateMaybeMessage<DroopParameter>(nullptr);
  }

  DroopParameter* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DroopParameter>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DroopParameter& from);
  void MergeFrom(const DroopParameter& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DroopParameter* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "generationmodule.DroopParameter";
  }
  protected:
  explicit DroopParameter(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_generationmodule_2fgenerationmodule_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSlopeFieldNumber = 1,
    kUnloadedOffsetFieldNumber = 2,
  };
  // .google.protobuf.FloatValue slope = 1;
  bool has_slope() const;
  private:
  bool _internal_has_slope() const;
  public:
  void clear_slope();
  const PROTOBUF_NAMESPACE_ID::FloatValue& slope() const;
  PROTOBUF_NAMESPACE_ID::FloatValue* release_slope();
  PROTOBUF_NAMESPACE_ID::FloatValue* mutable_slope();
  void set_allocated_slope(PROTOBUF_NAMESPACE_ID::FloatValue* slope);
  private:
  const PROTOBUF_NAMESPACE_ID::FloatValue& _internal_slope() const;
  PROTOBUF_NAMESPACE_ID::FloatValue* _internal_mutable_slope();
  public:
  void unsafe_arena_set_allocated_slope(
      PROTOBUF_NAMESPACE_ID::FloatValue* slope);
  PROTOBUF_NAMESPACE_ID::FloatValue* unsafe_arena_release_slope();

  // .google.protobuf.FloatValue unloadedOffset = 2;
  bool has_unloadedoffset() const;
  private:
  bool _internal_has_unloadedoffset() const;
  public:
  void clear_unloadedoffset();
  const PROTOBUF_NAMESPACE_ID::FloatValue& unloadedoffset() const;
  PROTOBUF_NAMESPACE_ID::FloatValue* release_unloadedoffset();
  PROTOBUF_NAMESPACE_ID::FloatValue* mutable_unloadedoffset();
  void set_allocated_unloadedoffset(PROTOBUF_NAMESPACE_ID::FloatValue* unloadedoffset);
  private:
  const PROTOBUF_NAMESPACE_ID::FloatValue& _internal_unloadedoffset() const;
  PROTOBUF_NAMESPACE_ID::FloatValue* _internal_mutable_unloadedoffset();
  public:
  void unsafe_arena_set_allocated_unloadedoffset(
      PROTOBUF_NAMESPACE_ID::FloatValue* unloadedoffset);
  PROTOBUF_NAMESPACE_ID::FloatValue* unsafe_arena_release_unloadedoffset();

  // @@protoc_insertion_point(class_scope:generationmodule.DroopParameter)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  PROTOBUF_NAMESPACE_ID::FloatValue* slope_;
  PROTOBUF_NAMESPACE_ID::FloatValue* unloadedoffset_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_generationmodule_2fgenerationmodule_2eproto;
};
// -------------------------------------------------------------------

class RealPowerControl PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:generationmodule.RealPowerControl) */ {
 public:
  inline RealPowerControl() : RealPowerControl(nullptr) {}
  virtual ~RealPowerControl();
  explicit constexpr RealPowerControl(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  RealPowerControl(const RealPowerControl& from);
  RealPowerControl(RealPowerControl&& from) noexcept
    : RealPowerControl() {
    *this = ::std::move(from);
  }

  inline RealPowerControl& operator=(const RealPowerControl& from) {
    CopyFrom(from);
    return *this;
  }
  inline RealPowerControl& operator=(RealPowerControl&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const RealPowerControl& default_instance() {
    return *internal_default_instance();
  }
  static inline const RealPowerControl* internal_default_instance() {
    return reinterpret_cast<const RealPowerControl*>(
               &_RealPowerControl_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(RealPowerControl& a, RealPowerControl& b) {
    a.Swap(&b);
  }
  inline void Swap(RealPowerControl* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RealPowerControl* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline RealPowerControl* New() const final {
    return CreateMaybeMessage<RealPowerControl>(nullptr);
  }

  RealPowerControl* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RealPowerControl>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RealPowerControl& from);
  void MergeFrom(const RealPowerControl& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RealPowerControl* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "generationmodule.RealPowerControl";
  }
  protected:
  explicit RealPowerControl(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_generationmodule_2fgenerationmodule_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDroopSetpointFieldNumber = 1,
    kIsochronousSetpointFieldNumber = 2,
    kRealPowerControlModeFieldNumber = 3,
    kRealPowerSetpointFieldNumber = 4,
  };
  // .generationmodule.DroopParameter droopSetpoint = 1;
  bool has_droopsetpoint() const;
  private:
  bool _internal_has_droopsetpoint() const;
  public:
  void clear_droopsetpoint();
  const ::generationmodule::DroopParameter& droopsetpoint() const;
  ::generationmodule::DroopParameter* release_droopsetpoint();
  ::generationmodule::DroopParameter* mutable_droopsetpoint();
  void set_allocated_droopsetpoint(::generationmodule::DroopParameter* droopsetpoint);
  private:
  const ::generationmodule::DroopParameter& _internal_droopsetpoint() const;
  ::generationmodule::DroopParameter* _internal_mutable_droopsetpoint();
  public:
  void unsafe_arena_set_allocated_droopsetpoint(
      ::generationmodule::DroopParameter* droopsetpoint);
  ::generationmodule::DroopParameter* unsafe_arena_release_droopsetpoint();

  // .google.protobuf.FloatValue isochronousSetpoint = 2;
  bool has_isochronoussetpoint() const;
  private:
  bool _internal_has_isochronoussetpoint() const;
  public:
  void clear_isochronoussetpoint();
  const PROTOBUF_NAMESPACE_ID::FloatValue& isochronoussetpoint() const;
  PROTOBUF_NAMESPACE_ID::FloatValue* release_isochronoussetpoint();
  PROTOBUF_NAMESPACE_ID::FloatValue* mutable_isochronoussetpoint();
  void set_allocated_isochronoussetpoint(PROTOBUF_NAMESPACE_ID::FloatValue* isochronoussetpoint);
  private:
  const PROTOBUF_NAMESPACE_ID::FloatValue& _internal_isochronoussetpoint() const;
  PROTOBUF_NAMESPACE_ID::FloatValue* _internal_mutable_isochronoussetpoint();
  public:
  void unsafe_arena_set_allocated_isochronoussetpoint(
      PROTOBUF_NAMESPACE_ID::FloatValue* isochronoussetpoint);
  PROTOBUF_NAMESPACE_ID::FloatValue* unsafe_arena_release_isochronoussetpoint();

  // .commonmodule.Optional_RealPowerControlKind realPowerControlMode = 3;
  bool has_realpowercontrolmode() const;
  private:
  bool _internal_has_realpowercontrolmode() const;
  public:
  void clear_realpowercontrolmode();
  const ::commonmodule::Optional_RealPowerControlKind& realpowercontrolmode() const;
  ::commonmodule::Optional_RealPowerControlKind* release_realpowercontrolmode();
  ::commonmodule::Optional_RealPowerControlKind* mutable_realpowercontrolmode();
  void set_allocated_realpowercontrolmode(::commonmodule::Optional_RealPowerControlKind* realpowercontrolmode);
  private:
  const ::commonmodule::Optional_RealPowerControlKind& _internal_realpowercontrolmode() const;
  ::commonmodule::Optional_RealPowerControlKind* _internal_mutable_realpowercontrolmode();
  public:
  void unsafe_arena_set_allocated_realpowercontrolmode(
      ::commonmodule::Optional_RealPowerControlKind* realpowercontrolmode);
  ::commonmodule::Optional_RealPowerControlKind* unsafe_arena_release_realpowercontrolmode();

  // .google.protobuf.FloatValue realPowerSetpoint = 4;
  bool has_realpowersetpoint() const;
  private:
  bool _internal_has_realpowersetpoint() const;
  public:
  void clear_realpowersetpoint();
  const PROTOBUF_NAMESPACE_ID::FloatValue& realpowersetpoint() const;
  PROTOBUF_NAMESPACE_ID::FloatValue* release_realpowersetpoint();
  PROTOBUF_NAMESPACE_ID::FloatValue* mutable_realpowersetpoint();
  void set_allocated_realpowersetpoint(PROTOBUF_NAMESPACE_ID::FloatValue* realpowersetpoint);
  private:
  const PROTOBUF_NAMESPACE_ID::FloatValue& _internal_realpowersetpoint() const;
  PROTOBUF_NAMESPACE_ID::FloatValue* _internal_mutable_realpowersetpoint();
  public:
  void unsafe_arena_set_allocated_realpowersetpoint(
      PROTOBUF_NAMESPACE_ID::FloatValue* realpowersetpoint);
  PROTOBUF_NAMESPACE_ID::FloatValue* unsafe_arena_release_realpowersetpoint();

  // @@protoc_insertion_point(class_scope:generationmodule.RealPowerControl)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::generationmodule::DroopParameter* droopsetpoint_;
  PROTOBUF_NAMESPACE_ID::FloatValue* isochronoussetpoint_;
  ::commonmodule::Optional_RealPowerControlKind* realpowercontrolmode_;
  PROTOBUF_NAMESPACE_ID::FloatValue* realpowersetpoint_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_generationmodule_2fgenerationmodule_2eproto;
};
// -------------------------------------------------------------------

class ReactivePowerControl PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:generationmodule.ReactivePowerControl) */ {
 public:
  inline ReactivePowerControl() : ReactivePowerControl(nullptr) {}
  virtual ~ReactivePowerControl();
  explicit constexpr ReactivePowerControl(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ReactivePowerControl(const ReactivePowerControl& from);
  ReactivePowerControl(ReactivePowerControl&& from) noexcept
    : ReactivePowerControl() {
    *this = ::std::move(from);
  }

  inline ReactivePowerControl& operator=(const ReactivePowerControl& from) {
    CopyFrom(from);
    return *this;
  }
  inline ReactivePowerControl& operator=(ReactivePowerControl&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ReactivePowerControl& default_instance() {
    return *internal_default_instance();
  }
  static inline const ReactivePowerControl* internal_default_instance() {
    return reinterpret_cast<const ReactivePowerControl*>(
               &_ReactivePowerControl_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(ReactivePowerControl& a, ReactivePowerControl& b) {
    a.Swap(&b);
  }
  inline void Swap(ReactivePowerControl* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ReactivePowerControl* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ReactivePowerControl* New() const final {
    return CreateMaybeMessage<ReactivePowerControl>(nullptr);
  }

  ReactivePowerControl* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ReactivePowerControl>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ReactivePowerControl& from);
  void MergeFrom(const ReactivePowerControl& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ReactivePowerControl* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "generationmodule.ReactivePowerControl";
  }
  protected:
  explicit ReactivePowerControl(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_generationmodule_2fgenerationmodule_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDroopSetpointFieldNumber = 1,
    kPowerFactorSetpointFieldNumber = 2,
    kReactivePowerControlModeFieldNumber = 3,
    kReactivePowerSetpointFieldNumber = 4,
    kVoltageSetpointFieldNumber = 5,
  };
  // .generationmodule.DroopParameter droopSetpoint = 1;
  bool has_droopsetpoint() const;
  private:
  bool _internal_has_droopsetpoint() const;
  public:
  void clear_droopsetpoint();
  const ::generationmodule::DroopParameter& droopsetpoint() const;
  ::generationmodule::DroopParameter* release_droopsetpoint();
  ::generationmodule::DroopParameter* mutable_droopsetpoint();
  void set_allocated_droopsetpoint(::generationmodule::DroopParameter* droopsetpoint);
  private:
  const ::generationmodule::DroopParameter& _internal_droopsetpoint() const;
  ::generationmodule::DroopParameter* _internal_mutable_droopsetpoint();
  public:
  void unsafe_arena_set_allocated_droopsetpoint(
      ::generationmodule::DroopParameter* droopsetpoint);
  ::generationmodule::DroopParameter* unsafe_arena_release_droopsetpoint();

  // .google.protobuf.FloatValue powerFactorSetpoint = 2;
  bool has_powerfactorsetpoint() const;
  private:
  bool _internal_has_powerfactorsetpoint() const;
  public:
  void clear_powerfactorsetpoint();
  const PROTOBUF_NAMESPACE_ID::FloatValue& powerfactorsetpoint() const;
  PROTOBUF_NAMESPACE_ID::FloatValue* release_powerfactorsetpoint();
  PROTOBUF_NAMESPACE_ID::FloatValue* mutable_powerfactorsetpoint();
  void set_allocated_powerfactorsetpoint(PROTOBUF_NAMESPACE_ID::FloatValue* powerfactorsetpoint);
  private:
  const PROTOBUF_NAMESPACE_ID::FloatValue& _internal_powerfactorsetpoint() const;
  PROTOBUF_NAMESPACE_ID::FloatValue* _internal_mutable_powerfactorsetpoint();
  public:
  void unsafe_arena_set_allocated_powerfactorsetpoint(
      PROTOBUF_NAMESPACE_ID::FloatValue* powerfactorsetpoint);
  PROTOBUF_NAMESPACE_ID::FloatValue* unsafe_arena_release_powerfactorsetpoint();

  // .commonmodule.Optional_ReactivePowerControlKind reactivePowerControlMode = 3;
  bool has_reactivepowercontrolmode() const;
  private:
  bool _internal_has_reactivepowercontrolmode() const;
  public:
  void clear_reactivepowercontrolmode();
  const ::commonmodule::Optional_ReactivePowerControlKind& reactivepowercontrolmode() const;
  ::commonmodule::Optional_ReactivePowerControlKind* release_reactivepowercontrolmode();
  ::commonmodule::Optional_ReactivePowerControlKind* mutable_reactivepowercontrolmode();
  void set_allocated_reactivepowercontrolmode(::commonmodule::Optional_ReactivePowerControlKind* reactivepowercontrolmode);
  private:
  const ::commonmodule::Optional_ReactivePowerControlKind& _internal_reactivepowercontrolmode() const;
  ::commonmodule::Optional_ReactivePowerControlKind* _internal_mutable_reactivepowercontrolmode();
  public:
  void unsafe_arena_set_allocated_reactivepowercontrolmode(
      ::commonmodule::Optional_ReactivePowerControlKind* reactivepowercontrolmode);
  ::commonmodule::Optional_ReactivePowerControlKind* unsafe_arena_release_reactivepowercontrolmode();

  // .google.protobuf.FloatValue reactivePowerSetpoint = 4;
  bool has_reactivepowersetpoint() const;
  private:
  bool _internal_has_reactivepowersetpoint() const;
  public:
  void clear_reactivepowersetpoint();
  const PROTOBUF_NAMESPACE_ID::FloatValue& reactivepowersetpoint() const;
  PROTOBUF_NAMESPACE_ID::FloatValue* release_reactivepowersetpoint();
  PROTOBUF_NAMESPACE_ID::FloatValue* mutable_reactivepowersetpoint();
  void set_allocated_reactivepowersetpoint(PROTOBUF_NAMESPACE_ID::FloatValue* reactivepowersetpoint);
  private:
  const PROTOBUF_NAMESPACE_ID::FloatValue& _internal_reactivepowersetpoint() const;
  PROTOBUF_NAMESPACE_ID::FloatValue* _internal_mutable_reactivepowersetpoint();
  public:
  void unsafe_arena_set_allocated_reactivepowersetpoint(
      PROTOBUF_NAMESPACE_ID::FloatValue* reactivepowersetpoint);
  PROTOBUF_NAMESPACE_ID::FloatValue* unsafe_arena_release_reactivepowersetpoint();

  // .google.protobuf.FloatValue voltageSetpoint = 5;
  bool has_voltagesetpoint() const;
  private:
  bool _internal_has_voltagesetpoint() const;
  public:
  void clear_voltagesetpoint();
  const PROTOBUF_NAMESPACE_ID::FloatValue& voltagesetpoint() const;
  PROTOBUF_NAMESPACE_ID::FloatValue* release_voltagesetpoint();
  PROTOBUF_NAMESPACE_ID::FloatValue* mutable_voltagesetpoint();
  void set_allocated_voltagesetpoint(PROTOBUF_NAMESPACE_ID::FloatValue* voltagesetpoint);
  private:
  const PROTOBUF_NAMESPACE_ID::FloatValue& _internal_voltagesetpoint() const;
  PROTOBUF_NAMESPACE_ID::FloatValue* _internal_mutable_voltagesetpoint();
  public:
  void unsafe_arena_set_allocated_voltagesetpoint(
      PROTOBUF_NAMESPACE_ID::FloatValue* voltagesetpoint);
  PROTOBUF_NAMESPACE_ID::FloatValue* unsafe_arena_release_voltagesetpoint();

  // @@protoc_insertion_point(class_scope:generationmodule.ReactivePowerControl)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::generationmodule::DroopParameter* droopsetpoint_;
  PROTOBUF_NAMESPACE_ID::FloatValue* powerfactorsetpoint_;
  ::commonmodule::Optional_ReactivePowerControlKind* reactivepowercontrolmode_;
  PROTOBUF_NAMESPACE_ID::FloatValue* reactivepowersetpoint_;
  PROTOBUF_NAMESPACE_ID::FloatValue* voltagesetpoint_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_generationmodule_2fgenerationmodule_2eproto;
};
// -------------------------------------------------------------------

class GenerationDiscreteControl PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:generationmodule.GenerationDiscreteControl) */ {
 public:
  inline GenerationDiscreteControl() : GenerationDiscreteControl(nullptr) {}
  virtual ~GenerationDiscreteControl();
  explicit constexpr GenerationDiscreteControl(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GenerationDiscreteControl(const GenerationDiscreteControl& from);
  GenerationDiscreteControl(GenerationDiscreteControl&& from) noexcept
    : GenerationDiscreteControl() {
    *this = ::std::move(from);
  }

  inline GenerationDiscreteControl& operator=(const GenerationDiscreteControl& from) {
    CopyFrom(from);
    return *this;
  }
  inline GenerationDiscreteControl& operator=(GenerationDiscreteControl&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GenerationDiscreteControl& default_instance() {
    return *internal_default_instance();
  }
  static inline const GenerationDiscreteControl* internal_default_instance() {
    return reinterpret_cast<const GenerationDiscreteControl*>(
               &_GenerationDiscreteControl_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(GenerationDiscreteControl& a, GenerationDiscreteControl& b) {
    a.Swap(&b);
  }
  inline void Swap(GenerationDiscreteControl* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GenerationDiscreteControl* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GenerationDiscreteControl* New() const final {
    return CreateMaybeMessage<GenerationDiscreteControl>(nullptr);
  }

  GenerationDiscreteControl* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GenerationDiscreteControl>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GenerationDiscreteControl& from);
  void MergeFrom(const GenerationDiscreteControl& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GenerationDiscreteControl* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "generationmodule.GenerationDiscreteControl";
  }
  protected:
  explicit GenerationDiscreteControl(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_generationmodule_2fgenerationmodule_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kControlValueFieldNumber = 1,
    kCheckFieldNumber = 2,
    kReactivePowerControlFieldNumber = 3,
    kRealPowerControlFieldNumber = 4,
  };
  // .commonmodule.ControlValue controlValue = 1 [(.uml.option_parent_message) = true];
  bool has_controlvalue() const;
  private:
  bool _internal_has_controlvalue() const;
  public:
  void clear_controlvalue();
  const ::commonmodule::ControlValue& controlvalue() const;
  ::commonmodule::ControlValue* release_controlvalue();
  ::commonmodule::ControlValue* mutable_controlvalue();
  void set_allocated_controlvalue(::commonmodule::ControlValue* controlvalue);
  private:
  const ::commonmodule::ControlValue& _internal_controlvalue() const;
  ::commonmodule::ControlValue* _internal_mutable_controlvalue();
  public:
  void unsafe_arena_set_allocated_controlvalue(
      ::commonmodule::ControlValue* controlvalue);
  ::commonmodule::ControlValue* unsafe_arena_release_controlvalue();

  // .commonmodule.CheckConditions check = 2;
  bool has_check() const;
  private:
  bool _internal_has_check() const;
  public:
  void clear_check();
  const ::commonmodule::CheckConditions& check() const;
  ::commonmodule::CheckConditions* release_check();
  ::commonmodule::CheckConditions* mutable_check();
  void set_allocated_check(::commonmodule::CheckConditions* check);
  private:
  const ::commonmodule::CheckConditions& _internal_check() const;
  ::commonmodule::CheckConditions* _internal_mutable_check();
  public:
  void unsafe_arena_set_allocated_check(
      ::commonmodule::CheckConditions* check);
  ::commonmodule::CheckConditions* unsafe_arena_release_check();

  // .generationmodule.ReactivePowerControl ReactivePowerControl = 3;
  bool has_reactivepowercontrol() const;
  private:
  bool _internal_has_reactivepowercontrol() const;
  public:
  void clear_reactivepowercontrol();
  const ::generationmodule::ReactivePowerControl& reactivepowercontrol() const;
  ::generationmodule::ReactivePowerControl* release_reactivepowercontrol();
  ::generationmodule::ReactivePowerControl* mutable_reactivepowercontrol();
  void set_allocated_reactivepowercontrol(::generationmodule::ReactivePowerControl* reactivepowercontrol);
  private:
  const ::generationmodule::ReactivePowerControl& _internal_reactivepowercontrol() const;
  ::generationmodule::ReactivePowerControl* _internal_mutable_reactivepowercontrol();
  public:
  void unsafe_arena_set_allocated_reactivepowercontrol(
      ::generationmodule::ReactivePowerControl* reactivepowercontrol);
  ::generationmodule::ReactivePowerControl* unsafe_arena_release_reactivepowercontrol();

  // .generationmodule.RealPowerControl RealPowerControl = 4;
  bool has_realpowercontrol() const;
  private:
  bool _internal_has_realpowercontrol() const;
  public:
  void clear_realpowercontrol();
  const ::generationmodule::RealPowerControl& realpowercontrol() const;
  ::generationmodule::RealPowerControl* release_realpowercontrol();
  ::generationmodule::RealPowerControl* mutable_realpowercontrol();
  void set_allocated_realpowercontrol(::generationmodule::RealPowerControl* realpowercontrol);
  private:
  const ::generationmodule::RealPowerControl& _internal_realpowercontrol() const;
  ::generationmodule::RealPowerControl* _internal_mutable_realpowercontrol();
  public:
  void unsafe_arena_set_allocated_realpowercontrol(
      ::generationmodule::RealPowerControl* realpowercontrol);
  ::generationmodule::RealPowerControl* unsafe_arena_release_realpowercontrol();

  // @@protoc_insertion_point(class_scope:generationmodule.GenerationDiscreteControl)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::commonmodule::ControlValue* controlvalue_;
  ::commonmodule::CheckConditions* check_;
  ::generationmodule::ReactivePowerControl* reactivepowercontrol_;
  ::generationmodule::RealPowerControl* realpowercontrol_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_generationmodule_2fgenerationmodule_2eproto;
};
// -------------------------------------------------------------------

class GenerationDiscreteControlProfile PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:generationmodule.GenerationDiscreteControlProfile) */ {
 public:
  inline GenerationDiscreteControlProfile() : GenerationDiscreteControlProfile(nullptr) {}
  virtual ~GenerationDiscreteControlProfile();
  explicit constexpr GenerationDiscreteControlProfile(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GenerationDiscreteControlProfile(const GenerationDiscreteControlProfile& from);
  GenerationDiscreteControlProfile(GenerationDiscreteControlProfile&& from) noexcept
    : GenerationDiscreteControlProfile() {
    *this = ::std::move(from);
  }

  inline GenerationDiscreteControlProfile& operator=(const GenerationDiscreteControlProfile& from) {
    CopyFrom(from);
    return *this;
  }
  inline GenerationDiscreteControlProfile& operator=(GenerationDiscreteControlProfile&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GenerationDiscreteControlProfile& default_instance() {
    return *internal_default_instance();
  }
  static inline const GenerationDiscreteControlProfile* internal_default_instance() {
    return reinterpret_cast<const GenerationDiscreteControlProfile*>(
               &_GenerationDiscreteControlProfile_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(GenerationDiscreteControlProfile& a, GenerationDiscreteControlProfile& b) {
    a.Swap(&b);
  }
  inline void Swap(GenerationDiscreteControlProfile* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GenerationDiscreteControlProfile* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GenerationDiscreteControlProfile* New() const final {
    return CreateMaybeMessage<GenerationDiscreteControlProfile>(nullptr);
  }

  GenerationDiscreteControlProfile* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GenerationDiscreteControlProfile>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GenerationDiscreteControlProfile& from);
  void MergeFrom(const GenerationDiscreteControlProfile& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GenerationDiscreteControlProfile* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "generationmodule.GenerationDiscreteControlProfile";
  }
  protected:
  explicit GenerationDiscreteControlProfile(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_generationmodule_2fgenerationmodule_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kControlMessageInfoFieldNumber = 1,
    kGeneratingUnitFieldNumber = 2,
    kGenerationDiscreteControlFieldNumber = 3,
  };
  // .commonmodule.ControlMessageInfo controlMessageInfo = 1 [(.uml.option_parent_message) = true];
  bool has_controlmessageinfo() const;
  private:
  bool _internal_has_controlmessageinfo() const;
  public:
  void clear_controlmessageinfo();
  const ::commonmodule::ControlMessageInfo& controlmessageinfo() const;
  ::commonmodule::ControlMessageInfo* release_controlmessageinfo();
  ::commonmodule::ControlMessageInfo* mutable_controlmessageinfo();
  void set_allocated_controlmessageinfo(::commonmodule::ControlMessageInfo* controlmessageinfo);
  private:
  const ::commonmodule::ControlMessageInfo& _internal_controlmessageinfo() const;
  ::commonmodule::ControlMessageInfo* _internal_mutable_controlmessageinfo();
  public:
  void unsafe_arena_set_allocated_controlmessageinfo(
      ::commonmodule::ControlMessageInfo* controlmessageinfo);
  ::commonmodule::ControlMessageInfo* unsafe_arena_release_controlmessageinfo();

  // .generationmodule.GeneratingUnit generatingUnit = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  bool has_generatingunit() const;
  private:
  bool _internal_has_generatingunit() const;
  public:
  void clear_generatingunit();
  const ::generationmodule::GeneratingUnit& generatingunit() const;
  ::generationmodule::GeneratingUnit* release_generatingunit();
  ::generationmodule::GeneratingUnit* mutable_generatingunit();
  void set_allocated_generatingunit(::generationmodule::GeneratingUnit* generatingunit);
  private:
  const ::generationmodule::GeneratingUnit& _internal_generatingunit() const;
  ::generationmodule::GeneratingUnit* _internal_mutable_generatingunit();
  public:
  void unsafe_arena_set_allocated_generatingunit(
      ::generationmodule::GeneratingUnit* generatingunit);
  ::generationmodule::GeneratingUnit* unsafe_arena_release_generatingunit();

  // .generationmodule.GenerationDiscreteControl generationDiscreteControl = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  bool has_generationdiscretecontrol() const;
  private:
  bool _internal_has_generationdiscretecontrol() const;
  public:
  void clear_generationdiscretecontrol();
  const ::generationmodule::GenerationDiscreteControl& generationdiscretecontrol() const;
  ::generationmodule::GenerationDiscreteControl* release_generationdiscretecontrol();
  ::generationmodule::GenerationDiscreteControl* mutable_generationdiscretecontrol();
  void set_allocated_generationdiscretecontrol(::generationmodule::GenerationDiscreteControl* generationdiscretecontrol);
  private:
  const ::generationmodule::GenerationDiscreteControl& _internal_generationdiscretecontrol() const;
  ::generationmodule::GenerationDiscreteControl* _internal_mutable_generationdiscretecontrol();
  public:
  void unsafe_arena_set_allocated_generationdiscretecontrol(
      ::generationmodule::GenerationDiscreteControl* generationdiscretecontrol);
  ::generationmodule::GenerationDiscreteControl* unsafe_arena_release_generationdiscretecontrol();

  // @@protoc_insertion_point(class_scope:generationmodule.GenerationDiscreteControlProfile)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::commonmodule::ControlMessageInfo* controlmessageinfo_;
  ::generationmodule::GeneratingUnit* generatingunit_;
  ::generationmodule::GenerationDiscreteControl* generationdiscretecontrol_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_generationmodule_2fgenerationmodule_2eproto;
};
// -------------------------------------------------------------------

class GenerationReading PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:generationmodule.GenerationReading) */ {
 public:
  inline GenerationReading() : GenerationReading(nullptr) {}
  virtual ~GenerationReading();
  explicit constexpr GenerationReading(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GenerationReading(const GenerationReading& from);
  GenerationReading(GenerationReading&& from) noexcept
    : GenerationReading() {
    *this = ::std::move(from);
  }

  inline GenerationReading& operator=(const GenerationReading& from) {
    CopyFrom(from);
    return *this;
  }
  inline GenerationReading& operator=(GenerationReading&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GenerationReading& default_instance() {
    return *internal_default_instance();
  }
  static inline const GenerationReading* internal_default_instance() {
    return reinterpret_cast<const GenerationReading*>(
               &_GenerationReading_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(GenerationReading& a, GenerationReading& b) {
    a.Swap(&b);
  }
  inline void Swap(GenerationReading* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GenerationReading* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GenerationReading* New() const final {
    return CreateMaybeMessage<GenerationReading>(nullptr);
  }

  GenerationReading* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GenerationReading>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GenerationReading& from);
  void MergeFrom(const GenerationReading& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GenerationReading* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "generationmodule.GenerationReading";
  }
  protected:
  explicit GenerationReading(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_generationmodule_2fgenerationmodule_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kConductingEquipmentTerminalReadingFieldNumber = 1,
    kPhaseMMTNFieldNumber = 2,
    kReadingMMTRFieldNumber = 3,
    kReadingMMXUFieldNumber = 4,
  };
  // .commonmodule.ConductingEquipmentTerminalReading conductingEquipmentTerminalReading = 1 [(.uml.option_parent_message) = true];
  bool has_conductingequipmentterminalreading() const;
  private:
  bool _internal_has_conductingequipmentterminalreading() const;
  public:
  void clear_conductingequipmentterminalreading();
  const ::commonmodule::ConductingEquipmentTerminalReading& conductingequipmentterminalreading() const;
  ::commonmodule::ConductingEquipmentTerminalReading* release_conductingequipmentterminalreading();
  ::commonmodule::ConductingEquipmentTerminalReading* mutable_conductingequipmentterminalreading();
  void set_allocated_conductingequipmentterminalreading(::commonmodule::ConductingEquipmentTerminalReading* conductingequipmentterminalreading);
  private:
  const ::commonmodule::ConductingEquipmentTerminalReading& _internal_conductingequipmentterminalreading() const;
  ::commonmodule::ConductingEquipmentTerminalReading* _internal_mutable_conductingequipmentterminalreading();
  public:
  void unsafe_arena_set_allocated_conductingequipmentterminalreading(
      ::commonmodule::ConductingEquipmentTerminalReading* conductingequipmentterminalreading);
  ::commonmodule::ConductingEquipmentTerminalReading* unsafe_arena_release_conductingequipmentterminalreading();

  // .commonmodule.PhaseMMTN phaseMMTN = 2;
  bool has_phasemmtn() const;
  private:
  bool _internal_has_phasemmtn() const;
  public:
  void clear_phasemmtn();
  const ::commonmodule::PhaseMMTN& phasemmtn() const;
  ::commonmodule::PhaseMMTN* release_phasemmtn();
  ::commonmodule::PhaseMMTN* mutable_phasemmtn();
  void set_allocated_phasemmtn(::commonmodule::PhaseMMTN* phasemmtn);
  private:
  const ::commonmodule::PhaseMMTN& _internal_phasemmtn() const;
  ::commonmodule::PhaseMMTN* _internal_mutable_phasemmtn();
  public:
  void unsafe_arena_set_allocated_phasemmtn(
      ::commonmodule::PhaseMMTN* phasemmtn);
  ::commonmodule::PhaseMMTN* unsafe_arena_release_phasemmtn();

  // .commonmodule.ReadingMMTR readingMMTR = 3;
  bool has_readingmmtr() const;
  private:
  bool _internal_has_readingmmtr() const;
  public:
  void clear_readingmmtr();
  const ::commonmodule::ReadingMMTR& readingmmtr() const;
  ::commonmodule::ReadingMMTR* release_readingmmtr();
  ::commonmodule::ReadingMMTR* mutable_readingmmtr();
  void set_allocated_readingmmtr(::commonmodule::ReadingMMTR* readingmmtr);
  private:
  const ::commonmodule::ReadingMMTR& _internal_readingmmtr() const;
  ::commonmodule::ReadingMMTR* _internal_mutable_readingmmtr();
  public:
  void unsafe_arena_set_allocated_readingmmtr(
      ::commonmodule::ReadingMMTR* readingmmtr);
  ::commonmodule::ReadingMMTR* unsafe_arena_release_readingmmtr();

  // .commonmodule.ReadingMMXU readingMMXU = 4;
  bool has_readingmmxu() const;
  private:
  bool _internal_has_readingmmxu() const;
  public:
  void clear_readingmmxu();
  const ::commonmodule::ReadingMMXU& readingmmxu() const;
  ::commonmodule::ReadingMMXU* release_readingmmxu();
  ::commonmodule::ReadingMMXU* mutable_readingmmxu();
  void set_allocated_readingmmxu(::commonmodule::ReadingMMXU* readingmmxu);
  private:
  const ::commonmodule::ReadingMMXU& _internal_readingmmxu() const;
  ::commonmodule::ReadingMMXU* _internal_mutable_readingmmxu();
  public:
  void unsafe_arena_set_allocated_readingmmxu(
      ::commonmodule::ReadingMMXU* readingmmxu);
  ::commonmodule::ReadingMMXU* unsafe_arena_release_readingmmxu();

  // @@protoc_insertion_point(class_scope:generationmodule.GenerationReading)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::commonmodule::ConductingEquipmentTerminalReading* conductingequipmentterminalreading_;
  ::commonmodule::PhaseMMTN* phasemmtn_;
  ::commonmodule::ReadingMMTR* readingmmtr_;
  ::commonmodule::ReadingMMXU* readingmmxu_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_generationmodule_2fgenerationmodule_2eproto;
};
// -------------------------------------------------------------------

class GenerationReadingProfile PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:generationmodule.GenerationReadingProfile) */ {
 public:
  inline GenerationReadingProfile() : GenerationReadingProfile(nullptr) {}
  virtual ~GenerationReadingProfile();
  explicit constexpr GenerationReadingProfile(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GenerationReadingProfile(const GenerationReadingProfile& from);
  GenerationReadingProfile(GenerationReadingProfile&& from) noexcept
    : GenerationReadingProfile() {
    *this = ::std::move(from);
  }

  inline GenerationReadingProfile& operator=(const GenerationReadingProfile& from) {
    CopyFrom(from);
    return *this;
  }
  inline GenerationReadingProfile& operator=(GenerationReadingProfile&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GenerationReadingProfile& default_instance() {
    return *internal_default_instance();
  }
  static inline const GenerationReadingProfile* internal_default_instance() {
    return reinterpret_cast<const GenerationReadingProfile*>(
               &_GenerationReadingProfile_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(GenerationReadingProfile& a, GenerationReadingProfile& b) {
    a.Swap(&b);
  }
  inline void Swap(GenerationReadingProfile* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GenerationReadingProfile* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GenerationReadingProfile* New() const final {
    return CreateMaybeMessage<GenerationReadingProfile>(nullptr);
  }

  GenerationReadingProfile* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GenerationReadingProfile>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GenerationReadingProfile& from);
  void MergeFrom(const GenerationReadingProfile& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GenerationReadingProfile* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "generationmodule.GenerationReadingProfile";
  }
  protected:
  explicit GenerationReadingProfile(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_generationmodule_2fgenerationmodule_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kReadingMessageInfoFieldNumber = 1,
    kGeneratingUnitFieldNumber = 2,
    kGenerationReadingFieldNumber = 3,
  };
  // .commonmodule.ReadingMessageInfo readingMessageInfo = 1 [(.uml.option_parent_message) = true];
  bool has_readingmessageinfo() const;
  private:
  bool _internal_has_readingmessageinfo() const;
  public:
  void clear_readingmessageinfo();
  const ::commonmodule::ReadingMessageInfo& readingmessageinfo() const;
  ::commonmodule::ReadingMessageInfo* release_readingmessageinfo();
  ::commonmodule::ReadingMessageInfo* mutable_readingmessageinfo();
  void set_allocated_readingmessageinfo(::commonmodule::ReadingMessageInfo* readingmessageinfo);
  private:
  const ::commonmodule::ReadingMessageInfo& _internal_readingmessageinfo() const;
  ::commonmodule::ReadingMessageInfo* _internal_mutable_readingmessageinfo();
  public:
  void unsafe_arena_set_allocated_readingmessageinfo(
      ::commonmodule::ReadingMessageInfo* readingmessageinfo);
  ::commonmodule::ReadingMessageInfo* unsafe_arena_release_readingmessageinfo();

  // .generationmodule.GeneratingUnit generatingUnit = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  bool has_generatingunit() const;
  private:
  bool _internal_has_generatingunit() const;
  public:
  void clear_generatingunit();
  const ::generationmodule::GeneratingUnit& generatingunit() const;
  ::generationmodule::GeneratingUnit* release_generatingunit();
  ::generationmodule::GeneratingUnit* mutable_generatingunit();
  void set_allocated_generatingunit(::generationmodule::GeneratingUnit* generatingunit);
  private:
  const ::generationmodule::GeneratingUnit& _internal_generatingunit() const;
  ::generationmodule::GeneratingUnit* _internal_mutable_generatingunit();
  public:
  void unsafe_arena_set_allocated_generatingunit(
      ::generationmodule::GeneratingUnit* generatingunit);
  ::generationmodule::GeneratingUnit* unsafe_arena_release_generatingunit();

  // .generationmodule.GenerationReading generationReading = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  bool has_generationreading() const;
  private:
  bool _internal_has_generationreading() const;
  public:
  void clear_generationreading();
  const ::generationmodule::GenerationReading& generationreading() const;
  ::generationmodule::GenerationReading* release_generationreading();
  ::generationmodule::GenerationReading* mutable_generationreading();
  void set_allocated_generationreading(::generationmodule::GenerationReading* generationreading);
  private:
  const ::generationmodule::GenerationReading& _internal_generationreading() const;
  ::generationmodule::GenerationReading* _internal_mutable_generationreading();
  public:
  void unsafe_arena_set_allocated_generationreading(
      ::generationmodule::GenerationReading* generationreading);
  ::generationmodule::GenerationReading* unsafe_arena_release_generationreading();

  // @@protoc_insertion_point(class_scope:generationmodule.GenerationReadingProfile)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::commonmodule::ReadingMessageInfo* readingmessageinfo_;
  ::generationmodule::GeneratingUnit* generatingunit_;
  ::generationmodule::GenerationReading* generationreading_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_generationmodule_2fgenerationmodule_2eproto;
};
// -------------------------------------------------------------------

class GenerationPointStatus PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:generationmodule.GenerationPointStatus) */ {
 public:
  inline GenerationPointStatus() : GenerationPointStatus(nullptr) {}
  virtual ~GenerationPointStatus();
  explicit constexpr GenerationPointStatus(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GenerationPointStatus(const GenerationPointStatus& from);
  GenerationPointStatus(GenerationPointStatus&& from) noexcept
    : GenerationPointStatus() {
    *this = ::std::move(from);
  }

  inline GenerationPointStatus& operator=(const GenerationPointStatus& from) {
    CopyFrom(from);
    return *this;
  }
  inline GenerationPointStatus& operator=(GenerationPointStatus&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GenerationPointStatus& default_instance() {
    return *internal_default_instance();
  }
  static inline const GenerationPointStatus* internal_default_instance() {
    return reinterpret_cast<const GenerationPointStatus*>(
               &_GenerationPointStatus_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(GenerationPointStatus& a, GenerationPointStatus& b) {
    a.Swap(&b);
  }
  inline void Swap(GenerationPointStatus* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GenerationPointStatus* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GenerationPointStatus* New() const final {
    return CreateMaybeMessage<GenerationPointStatus>(nullptr);
  }

  GenerationPointStatus* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GenerationPointStatus>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GenerationPointStatus& from);
  void MergeFrom(const GenerationPointStatus& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GenerationPointStatus* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "generationmodule.GenerationPointStatus";
  }
  protected:
  explicit GenerationPointStatus(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_generationmodule_2fgenerationmodule_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBlackStartEnabledFieldNumber = 1,
    kFrequencySetPointEnabledFieldNumber = 2,
    kPctHzDroopFieldNumber = 3,
    kPctVDroopFieldNumber = 4,
    kRampRatesFieldNumber = 5,
    kReactivePwrSetPointEnabledFieldNumber = 6,
    kRealPwrSetPointEnabledFieldNumber = 7,
    kStateFieldNumber = 8,
    kSyncBackToGridFieldNumber = 9,
    kTransToIslndOnGridLossEnabledFieldNumber = 10,
    kVoltageSetPointEnabledFieldNumber = 11,
  };
  // .commonmodule.StatusSPS blackStartEnabled = 1;
  bool has_blackstartenabled() const;
  private:
  bool _internal_has_blackstartenabled() const;
  public:
  void clear_blackstartenabled();
  const ::commonmodule::StatusSPS& blackstartenabled() const;
  ::commonmodule::StatusSPS* release_blackstartenabled();
  ::commonmodule::StatusSPS* mutable_blackstartenabled();
  void set_allocated_blackstartenabled(::commonmodule::StatusSPS* blackstartenabled);
  private:
  const ::commonmodule::StatusSPS& _internal_blackstartenabled() const;
  ::commonmodule::StatusSPS* _internal_mutable_blackstartenabled();
  public:
  void unsafe_arena_set_allocated_blackstartenabled(
      ::commonmodule::StatusSPS* blackstartenabled);
  ::commonmodule::StatusSPS* unsafe_arena_release_blackstartenabled();

  // .commonmodule.StatusSPS frequencySetPointEnabled = 2;
  bool has_frequencysetpointenabled() const;
  private:
  bool _internal_has_frequencysetpointenabled() const;
  public:
  void clear_frequencysetpointenabled();
  const ::commonmodule::StatusSPS& frequencysetpointenabled() const;
  ::commonmodule::StatusSPS* release_frequencysetpointenabled();
  ::commonmodule::StatusSPS* mutable_frequencysetpointenabled();
  void set_allocated_frequencysetpointenabled(::commonmodule::StatusSPS* frequencysetpointenabled);
  private:
  const ::commonmodule::StatusSPS& _internal_frequencysetpointenabled() const;
  ::commonmodule::StatusSPS* _internal_mutable_frequencysetpointenabled();
  public:
  void unsafe_arena_set_allocated_frequencysetpointenabled(
      ::commonmodule::StatusSPS* frequencysetpointenabled);
  ::commonmodule::StatusSPS* unsafe_arena_release_frequencysetpointenabled();

  // .google.protobuf.FloatValue pctHzDroop = 3;
  bool has_pcthzdroop() const;
  private:
  bool _internal_has_pcthzdroop() const;
  public:
  void clear_pcthzdroop();
  const PROTOBUF_NAMESPACE_ID::FloatValue& pcthzdroop() const;
  PROTOBUF_NAMESPACE_ID::FloatValue* release_pcthzdroop();
  PROTOBUF_NAMESPACE_ID::FloatValue* mutable_pcthzdroop();
  void set_allocated_pcthzdroop(PROTOBUF_NAMESPACE_ID::FloatValue* pcthzdroop);
  private:
  const PROTOBUF_NAMESPACE_ID::FloatValue& _internal_pcthzdroop() const;
  PROTOBUF_NAMESPACE_ID::FloatValue* _internal_mutable_pcthzdroop();
  public:
  void unsafe_arena_set_allocated_pcthzdroop(
      PROTOBUF_NAMESPACE_ID::FloatValue* pcthzdroop);
  PROTOBUF_NAMESPACE_ID::FloatValue* unsafe_arena_release_pcthzdroop();

  // .google.protobuf.FloatValue pctVDroop = 4;
  bool has_pctvdroop() const;
  private:
  bool _internal_has_pctvdroop() const;
  public:
  void clear_pctvdroop();
  const PROTOBUF_NAMESPACE_ID::FloatValue& pctvdroop() const;
  PROTOBUF_NAMESPACE_ID::FloatValue* release_pctvdroop();
  PROTOBUF_NAMESPACE_ID::FloatValue* mutable_pctvdroop();
  void set_allocated_pctvdroop(PROTOBUF_NAMESPACE_ID::FloatValue* pctvdroop);
  private:
  const PROTOBUF_NAMESPACE_ID::FloatValue& _internal_pctvdroop() const;
  PROTOBUF_NAMESPACE_ID::FloatValue* _internal_mutable_pctvdroop();
  public:
  void unsafe_arena_set_allocated_pctvdroop(
      PROTOBUF_NAMESPACE_ID::FloatValue* pctvdroop);
  PROTOBUF_NAMESPACE_ID::FloatValue* unsafe_arena_release_pctvdroop();

  // .commonmodule.RampRate rampRates = 5;
  bool has_ramprates() const;
  private:
  bool _internal_has_ramprates() const;
  public:
  void clear_ramprates();
  const ::commonmodule::RampRate& ramprates() const;
  ::commonmodule::RampRate* release_ramprates();
  ::commonmodule::RampRate* mutable_ramprates();
  void set_allocated_ramprates(::commonmodule::RampRate* ramprates);
  private:
  const ::commonmodule::RampRate& _internal_ramprates() const;
  ::commonmodule::RampRate* _internal_mutable_ramprates();
  public:
  void unsafe_arena_set_allocated_ramprates(
      ::commonmodule::RampRate* ramprates);
  ::commonmodule::RampRate* unsafe_arena_release_ramprates();

  // .commonmodule.StatusSPS reactivePwrSetPointEnabled = 6;
  bool has_reactivepwrsetpointenabled() const;
  private:
  bool _internal_has_reactivepwrsetpointenabled() const;
  public:
  void clear_reactivepwrsetpointenabled();
  const ::commonmodule::StatusSPS& reactivepwrsetpointenabled() const;
  ::commonmodule::StatusSPS* release_reactivepwrsetpointenabled();
  ::commonmodule::StatusSPS* mutable_reactivepwrsetpointenabled();
  void set_allocated_reactivepwrsetpointenabled(::commonmodule::StatusSPS* reactivepwrsetpointenabled);
  private:
  const ::commonmodule::StatusSPS& _internal_reactivepwrsetpointenabled() const;
  ::commonmodule::StatusSPS* _internal_mutable_reactivepwrsetpointenabled();
  public:
  void unsafe_arena_set_allocated_reactivepwrsetpointenabled(
      ::commonmodule::StatusSPS* reactivepwrsetpointenabled);
  ::commonmodule::StatusSPS* unsafe_arena_release_reactivepwrsetpointenabled();

  // .commonmodule.StatusSPS realPwrSetPointEnabled = 7;
  bool has_realpwrsetpointenabled() const;
  private:
  bool _internal_has_realpwrsetpointenabled() const;
  public:
  void clear_realpwrsetpointenabled();
  const ::commonmodule::StatusSPS& realpwrsetpointenabled() const;
  ::commonmodule::StatusSPS* release_realpwrsetpointenabled();
  ::commonmodule::StatusSPS* mutable_realpwrsetpointenabled();
  void set_allocated_realpwrsetpointenabled(::commonmodule::StatusSPS* realpwrsetpointenabled);
  private:
  const ::commonmodule::StatusSPS& _internal_realpwrsetpointenabled() const;
  ::commonmodule::StatusSPS* _internal_mutable_realpwrsetpointenabled();
  public:
  void unsafe_arena_set_allocated_realpwrsetpointenabled(
      ::commonmodule::StatusSPS* realpwrsetpointenabled);
  ::commonmodule::StatusSPS* unsafe_arena_release_realpwrsetpointenabled();

  // .commonmodule.Optional_StateKind state = 8;
  bool has_state() const;
  private:
  bool _internal_has_state() const;
  public:
  void clear_state();
  const ::commonmodule::Optional_StateKind& state() const;
  ::commonmodule::Optional_StateKind* release_state();
  ::commonmodule::Optional_StateKind* mutable_state();
  void set_allocated_state(::commonmodule::Optional_StateKind* state);
  private:
  const ::commonmodule::Optional_StateKind& _internal_state() const;
  ::commonmodule::Optional_StateKind* _internal_mutable_state();
  public:
  void unsafe_arena_set_allocated_state(
      ::commonmodule::Optional_StateKind* state);
  ::commonmodule::Optional_StateKind* unsafe_arena_release_state();

  // .commonmodule.StatusSPS syncBackToGrid = 9;
  bool has_syncbacktogrid() const;
  private:
  bool _internal_has_syncbacktogrid() const;
  public:
  void clear_syncbacktogrid();
  const ::commonmodule::StatusSPS& syncbacktogrid() const;
  ::commonmodule::StatusSPS* release_syncbacktogrid();
  ::commonmodule::StatusSPS* mutable_syncbacktogrid();
  void set_allocated_syncbacktogrid(::commonmodule::StatusSPS* syncbacktogrid);
  private:
  const ::commonmodule::StatusSPS& _internal_syncbacktogrid() const;
  ::commonmodule::StatusSPS* _internal_mutable_syncbacktogrid();
  public:
  void unsafe_arena_set_allocated_syncbacktogrid(
      ::commonmodule::StatusSPS* syncbacktogrid);
  ::commonmodule::StatusSPS* unsafe_arena_release_syncbacktogrid();

  // .commonmodule.StatusSPS transToIslndOnGridLossEnabled = 10;
  bool has_transtoislndongridlossenabled() const;
  private:
  bool _internal_has_transtoislndongridlossenabled() const;
  public:
  void clear_transtoislndongridlossenabled();
  const ::commonmodule::StatusSPS& transtoislndongridlossenabled() const;
  ::commonmodule::StatusSPS* release_transtoislndongridlossenabled();
  ::commonmodule::StatusSPS* mutable_transtoislndongridlossenabled();
  void set_allocated_transtoislndongridlossenabled(::commonmodule::StatusSPS* transtoislndongridlossenabled);
  private:
  const ::commonmodule::StatusSPS& _internal_transtoislndongridlossenabled() const;
  ::commonmodule::StatusSPS* _internal_mutable_transtoislndongridlossenabled();
  public:
  void unsafe_arena_set_allocated_transtoislndongridlossenabled(
      ::commonmodule::StatusSPS* transtoislndongridlossenabled);
  ::commonmodule::StatusSPS* unsafe_arena_release_transtoislndongridlossenabled();

  // .commonmodule.StatusSPS voltageSetPointEnabled = 11;
  bool has_voltagesetpointenabled() const;
  private:
  bool _internal_has_voltagesetpointenabled() const;
  public:
  void clear_voltagesetpointenabled();
  const ::commonmodule::StatusSPS& voltagesetpointenabled() const;
  ::commonmodule::StatusSPS* release_voltagesetpointenabled();
  ::commonmodule::StatusSPS* mutable_voltagesetpointenabled();
  void set_allocated_voltagesetpointenabled(::commonmodule::StatusSPS* voltagesetpointenabled);
  private:
  const ::commonmodule::StatusSPS& _internal_voltagesetpointenabled() const;
  ::commonmodule::StatusSPS* _internal_mutable_voltagesetpointenabled();
  public:
  void unsafe_arena_set_allocated_voltagesetpointenabled(
      ::commonmodule::StatusSPS* voltagesetpointenabled);
  ::commonmodule::StatusSPS* unsafe_arena_release_voltagesetpointenabled();

  // @@protoc_insertion_point(class_scope:generationmodule.GenerationPointStatus)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::commonmodule::StatusSPS* blackstartenabled_;
  ::commonmodule::StatusSPS* frequencysetpointenabled_;
  PROTOBUF_NAMESPACE_ID::FloatValue* pcthzdroop_;
  PROTOBUF_NAMESPACE_ID::FloatValue* pctvdroop_;
  ::commonmodule::RampRate* ramprates_;
  ::commonmodule::StatusSPS* reactivepwrsetpointenabled_;
  ::commonmodule::StatusSPS* realpwrsetpointenabled_;
  ::commonmodule::Optional_StateKind* state_;
  ::commonmodule::StatusSPS* syncbacktogrid_;
  ::commonmodule::StatusSPS* transtoislndongridlossenabled_;
  ::commonmodule::StatusSPS* voltagesetpointenabled_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_generationmodule_2fgenerationmodule_2eproto;
};
// -------------------------------------------------------------------

class GenerationEventAndStatusZGEN PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:generationmodule.GenerationEventAndStatusZGEN) */ {
 public:
  inline GenerationEventAndStatusZGEN() : GenerationEventAndStatusZGEN(nullptr) {}
  virtual ~GenerationEventAndStatusZGEN();
  explicit constexpr GenerationEventAndStatusZGEN(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GenerationEventAndStatusZGEN(const GenerationEventAndStatusZGEN& from);
  GenerationEventAndStatusZGEN(GenerationEventAndStatusZGEN&& from) noexcept
    : GenerationEventAndStatusZGEN() {
    *this = ::std::move(from);
  }

  inline GenerationEventAndStatusZGEN& operator=(const GenerationEventAndStatusZGEN& from) {
    CopyFrom(from);
    return *this;
  }
  inline GenerationEventAndStatusZGEN& operator=(GenerationEventAndStatusZGEN&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GenerationEventAndStatusZGEN& default_instance() {
    return *internal_default_instance();
  }
  static inline const GenerationEventAndStatusZGEN* internal_default_instance() {
    return reinterpret_cast<const GenerationEventAndStatusZGEN*>(
               &_GenerationEventAndStatusZGEN_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(GenerationEventAndStatusZGEN& a, GenerationEventAndStatusZGEN& b) {
    a.Swap(&b);
  }
  inline void Swap(GenerationEventAndStatusZGEN* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GenerationEventAndStatusZGEN* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GenerationEventAndStatusZGEN* New() const final {
    return CreateMaybeMessage<GenerationEventAndStatusZGEN>(nullptr);
  }

  GenerationEventAndStatusZGEN* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GenerationEventAndStatusZGEN>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GenerationEventAndStatusZGEN& from);
  void MergeFrom(const GenerationEventAndStatusZGEN& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GenerationEventAndStatusZGEN* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "generationmodule.GenerationEventAndStatusZGEN";
  }
  protected:
  explicit GenerationEventAndStatusZGEN(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_generationmodule_2fgenerationmodule_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLogicalNodeForEventAndStatusFieldNumber = 1,
    kAuxPwrStFieldNumber = 2,
    kDynamicTestFieldNumber = 3,
    kEmgStopFieldNumber = 4,
    kGnSynStFieldNumber = 5,
    kPointStatusFieldNumber = 6,
  };
  // .commonmodule.LogicalNodeForEventAndStatus logicalNodeForEventAndStatus = 1 [(.uml.option_parent_message) = true];
  bool has_logicalnodeforeventandstatus() const;
  private:
  bool _internal_has_logicalnodeforeventandstatus() const;
  public:
  void clear_logicalnodeforeventandstatus();
  const ::commonmodule::LogicalNodeForEventAndStatus& logicalnodeforeventandstatus() const;
  ::commonmodule::LogicalNodeForEventAndStatus* release_logicalnodeforeventandstatus();
  ::commonmodule::LogicalNodeForEventAndStatus* mutable_logicalnodeforeventandstatus();
  void set_allocated_logicalnodeforeventandstatus(::commonmodule::LogicalNodeForEventAndStatus* logicalnodeforeventandstatus);
  private:
  const ::commonmodule::LogicalNodeForEventAndStatus& _internal_logicalnodeforeventandstatus() const;
  ::commonmodule::LogicalNodeForEventAndStatus* _internal_mutable_logicalnodeforeventandstatus();
  public:
  void unsafe_arena_set_allocated_logicalnodeforeventandstatus(
      ::commonmodule::LogicalNodeForEventAndStatus* logicalnodeforeventandstatus);
  ::commonmodule::LogicalNodeForEventAndStatus* unsafe_arena_release_logicalnodeforeventandstatus();

  // .commonmodule.StatusSPS AuxPwrSt = 2;
  bool has_auxpwrst() const;
  private:
  bool _internal_has_auxpwrst() const;
  public:
  void clear_auxpwrst();
  const ::commonmodule::StatusSPS& auxpwrst() const;
  ::commonmodule::StatusSPS* release_auxpwrst();
  ::commonmodule::StatusSPS* mutable_auxpwrst();
  void set_allocated_auxpwrst(::commonmodule::StatusSPS* auxpwrst);
  private:
  const ::commonmodule::StatusSPS& _internal_auxpwrst() const;
  ::commonmodule::StatusSPS* _internal_mutable_auxpwrst();
  public:
  void unsafe_arena_set_allocated_auxpwrst(
      ::commonmodule::StatusSPS* auxpwrst);
  ::commonmodule::StatusSPS* unsafe_arena_release_auxpwrst();

  // .commonmodule.ENS_DynamicTestKind DynamicTest = 3;
  bool has_dynamictest() const;
  private:
  bool _internal_has_dynamictest() const;
  public:
  void clear_dynamictest();
  const ::commonmodule::ENS_DynamicTestKind& dynamictest() const;
  ::commonmodule::ENS_DynamicTestKind* release_dynamictest();
  ::commonmodule::ENS_DynamicTestKind* mutable_dynamictest();
  void set_allocated_dynamictest(::commonmodule::ENS_DynamicTestKind* dynamictest);
  private:
  const ::commonmodule::ENS_DynamicTestKind& _internal_dynamictest() const;
  ::commonmodule::ENS_DynamicTestKind* _internal_mutable_dynamictest();
  public:
  void unsafe_arena_set_allocated_dynamictest(
      ::commonmodule::ENS_DynamicTestKind* dynamictest);
  ::commonmodule::ENS_DynamicTestKind* unsafe_arena_release_dynamictest();

  // .commonmodule.StatusSPS EmgStop = 4;
  bool has_emgstop() const;
  private:
  bool _internal_has_emgstop() const;
  public:
  void clear_emgstop();
  const ::commonmodule::StatusSPS& emgstop() const;
  ::commonmodule::StatusSPS* release_emgstop();
  ::commonmodule::StatusSPS* mutable_emgstop();
  void set_allocated_emgstop(::commonmodule::StatusSPS* emgstop);
  private:
  const ::commonmodule::StatusSPS& _internal_emgstop() const;
  ::commonmodule::StatusSPS* _internal_mutable_emgstop();
  public:
  void unsafe_arena_set_allocated_emgstop(
      ::commonmodule::StatusSPS* emgstop);
  ::commonmodule::StatusSPS* unsafe_arena_release_emgstop();

  // .commonmodule.StatusSPS GnSynSt = 5;
  bool has_gnsynst() const;
  private:
  bool _internal_has_gnsynst() const;
  public:
  void clear_gnsynst();
  const ::commonmodule::StatusSPS& gnsynst() const;
  ::commonmodule::StatusSPS* release_gnsynst();
  ::commonmodule::StatusSPS* mutable_gnsynst();
  void set_allocated_gnsynst(::commonmodule::StatusSPS* gnsynst);
  private:
  const ::commonmodule::StatusSPS& _internal_gnsynst() const;
  ::commonmodule::StatusSPS* _internal_mutable_gnsynst();
  public:
  void unsafe_arena_set_allocated_gnsynst(
      ::commonmodule::StatusSPS* gnsynst);
  ::commonmodule::StatusSPS* unsafe_arena_release_gnsynst();

  // .generationmodule.GenerationPointStatus PointStatus = 6;
  bool has_pointstatus() const;
  private:
  bool _internal_has_pointstatus() const;
  public:
  void clear_pointstatus();
  const ::generationmodule::GenerationPointStatus& pointstatus() const;
  ::generationmodule::GenerationPointStatus* release_pointstatus();
  ::generationmodule::GenerationPointStatus* mutable_pointstatus();
  void set_allocated_pointstatus(::generationmodule::GenerationPointStatus* pointstatus);
  private:
  const ::generationmodule::GenerationPointStatus& _internal_pointstatus() const;
  ::generationmodule::GenerationPointStatus* _internal_mutable_pointstatus();
  public:
  void unsafe_arena_set_allocated_pointstatus(
      ::generationmodule::GenerationPointStatus* pointstatus);
  ::generationmodule::GenerationPointStatus* unsafe_arena_release_pointstatus();

  // @@protoc_insertion_point(class_scope:generationmodule.GenerationEventAndStatusZGEN)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::commonmodule::LogicalNodeForEventAndStatus* logicalnodeforeventandstatus_;
  ::commonmodule::StatusSPS* auxpwrst_;
  ::commonmodule::ENS_DynamicTestKind* dynamictest_;
  ::commonmodule::StatusSPS* emgstop_;
  ::commonmodule::StatusSPS* gnsynst_;
  ::generationmodule::GenerationPointStatus* pointstatus_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_generationmodule_2fgenerationmodule_2eproto;
};
// -------------------------------------------------------------------

class GenerationEventZGEN PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:generationmodule.GenerationEventZGEN) */ {
 public:
  inline GenerationEventZGEN() : GenerationEventZGEN(nullptr) {}
  virtual ~GenerationEventZGEN();
  explicit constexpr GenerationEventZGEN(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GenerationEventZGEN(const GenerationEventZGEN& from);
  GenerationEventZGEN(GenerationEventZGEN&& from) noexcept
    : GenerationEventZGEN() {
    *this = ::std::move(from);
  }

  inline GenerationEventZGEN& operator=(const GenerationEventZGEN& from) {
    CopyFrom(from);
    return *this;
  }
  inline GenerationEventZGEN& operator=(GenerationEventZGEN&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GenerationEventZGEN& default_instance() {
    return *internal_default_instance();
  }
  static inline const GenerationEventZGEN* internal_default_instance() {
    return reinterpret_cast<const GenerationEventZGEN*>(
               &_GenerationEventZGEN_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(GenerationEventZGEN& a, GenerationEventZGEN& b) {
    a.Swap(&b);
  }
  inline void Swap(GenerationEventZGEN* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GenerationEventZGEN* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GenerationEventZGEN* New() const final {
    return CreateMaybeMessage<GenerationEventZGEN>(nullptr);
  }

  GenerationEventZGEN* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GenerationEventZGEN>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GenerationEventZGEN& from);
  void MergeFrom(const GenerationEventZGEN& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GenerationEventZGEN* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "generationmodule.GenerationEventZGEN";
  }
  protected:
  explicit GenerationEventZGEN(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_generationmodule_2fgenerationmodule_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGenerationEventAndStatusZGENFieldNumber = 1,
  };
  // .generationmodule.GenerationEventAndStatusZGEN generationEventAndStatusZGEN = 1 [(.uml.option_parent_message) = true];
  bool has_generationeventandstatuszgen() const;
  private:
  bool _internal_has_generationeventandstatuszgen() const;
  public:
  void clear_generationeventandstatuszgen();
  const ::generationmodule::GenerationEventAndStatusZGEN& generationeventandstatuszgen() const;
  ::generationmodule::GenerationEventAndStatusZGEN* release_generationeventandstatuszgen();
  ::generationmodule::GenerationEventAndStatusZGEN* mutable_generationeventandstatuszgen();
  void set_allocated_generationeventandstatuszgen(::generationmodule::GenerationEventAndStatusZGEN* generationeventandstatuszgen);
  private:
  const ::generationmodule::GenerationEventAndStatusZGEN& _internal_generationeventandstatuszgen() const;
  ::generationmodule::GenerationEventAndStatusZGEN* _internal_mutable_generationeventandstatuszgen();
  public:
  void unsafe_arena_set_allocated_generationeventandstatuszgen(
      ::generationmodule::GenerationEventAndStatusZGEN* generationeventandstatuszgen);
  ::generationmodule::GenerationEventAndStatusZGEN* unsafe_arena_release_generationeventandstatuszgen();

  // @@protoc_insertion_point(class_scope:generationmodule.GenerationEventZGEN)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::generationmodule::GenerationEventAndStatusZGEN* generationeventandstatuszgen_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_generationmodule_2fgenerationmodule_2eproto;
};
// -------------------------------------------------------------------

class GenerationEvent PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:generationmodule.GenerationEvent) */ {
 public:
  inline GenerationEvent() : GenerationEvent(nullptr) {}
  virtual ~GenerationEvent();
  explicit constexpr GenerationEvent(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GenerationEvent(const GenerationEvent& from);
  GenerationEvent(GenerationEvent&& from) noexcept
    : GenerationEvent() {
    *this = ::std::move(from);
  }

  inline GenerationEvent& operator=(const GenerationEvent& from) {
    CopyFrom(from);
    return *this;
  }
  inline GenerationEvent& operator=(GenerationEvent&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GenerationEvent& default_instance() {
    return *internal_default_instance();
  }
  static inline const GenerationEvent* internal_default_instance() {
    return reinterpret_cast<const GenerationEvent*>(
               &_GenerationEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(GenerationEvent& a, GenerationEvent& b) {
    a.Swap(&b);
  }
  inline void Swap(GenerationEvent* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GenerationEvent* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GenerationEvent* New() const final {
    return CreateMaybeMessage<GenerationEvent>(nullptr);
  }

  GenerationEvent* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GenerationEvent>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GenerationEvent& from);
  void MergeFrom(const GenerationEvent& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GenerationEvent* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "generationmodule.GenerationEvent";
  }
  protected:
  explicit GenerationEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_generationmodule_2fgenerationmodule_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEventValueFieldNumber = 1,
    kGenerationEventZGENFieldNumber = 2,
  };
  // .commonmodule.EventValue eventValue = 1 [(.uml.option_parent_message) = true];
  bool has_eventvalue() const;
  private:
  bool _internal_has_eventvalue() const;
  public:
  void clear_eventvalue();
  const ::commonmodule::EventValue& eventvalue() const;
  ::commonmodule::EventValue* release_eventvalue();
  ::commonmodule::EventValue* mutable_eventvalue();
  void set_allocated_eventvalue(::commonmodule::EventValue* eventvalue);
  private:
  const ::commonmodule::EventValue& _internal_eventvalue() const;
  ::commonmodule::EventValue* _internal_mutable_eventvalue();
  public:
  void unsafe_arena_set_allocated_eventvalue(
      ::commonmodule::EventValue* eventvalue);
  ::commonmodule::EventValue* unsafe_arena_release_eventvalue();

  // .generationmodule.GenerationEventZGEN generationEventZGEN = 2;
  bool has_generationeventzgen() const;
  private:
  bool _internal_has_generationeventzgen() const;
  public:
  void clear_generationeventzgen();
  const ::generationmodule::GenerationEventZGEN& generationeventzgen() const;
  ::generationmodule::GenerationEventZGEN* release_generationeventzgen();
  ::generationmodule::GenerationEventZGEN* mutable_generationeventzgen();
  void set_allocated_generationeventzgen(::generationmodule::GenerationEventZGEN* generationeventzgen);
  private:
  const ::generationmodule::GenerationEventZGEN& _internal_generationeventzgen() const;
  ::generationmodule::GenerationEventZGEN* _internal_mutable_generationeventzgen();
  public:
  void unsafe_arena_set_allocated_generationeventzgen(
      ::generationmodule::GenerationEventZGEN* generationeventzgen);
  ::generationmodule::GenerationEventZGEN* unsafe_arena_release_generationeventzgen();

  // @@protoc_insertion_point(class_scope:generationmodule.GenerationEvent)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::commonmodule::EventValue* eventvalue_;
  ::generationmodule::GenerationEventZGEN* generationeventzgen_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_generationmodule_2fgenerationmodule_2eproto;
};
// -------------------------------------------------------------------

class GenerationEventProfile PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:generationmodule.GenerationEventProfile) */ {
 public:
  inline GenerationEventProfile() : GenerationEventProfile(nullptr) {}
  virtual ~GenerationEventProfile();
  explicit constexpr GenerationEventProfile(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GenerationEventProfile(const GenerationEventProfile& from);
  GenerationEventProfile(GenerationEventProfile&& from) noexcept
    : GenerationEventProfile() {
    *this = ::std::move(from);
  }

  inline GenerationEventProfile& operator=(const GenerationEventProfile& from) {
    CopyFrom(from);
    return *this;
  }
  inline GenerationEventProfile& operator=(GenerationEventProfile&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GenerationEventProfile& default_instance() {
    return *internal_default_instance();
  }
  static inline const GenerationEventProfile* internal_default_instance() {
    return reinterpret_cast<const GenerationEventProfile*>(
               &_GenerationEventProfile_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(GenerationEventProfile& a, GenerationEventProfile& b) {
    a.Swap(&b);
  }
  inline void Swap(GenerationEventProfile* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GenerationEventProfile* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GenerationEventProfile* New() const final {
    return CreateMaybeMessage<GenerationEventProfile>(nullptr);
  }

  GenerationEventProfile* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GenerationEventProfile>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GenerationEventProfile& from);
  void MergeFrom(const GenerationEventProfile& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GenerationEventProfile* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "generationmodule.GenerationEventProfile";
  }
  protected:
  explicit GenerationEventProfile(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_generationmodule_2fgenerationmodule_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEventMessageInfoFieldNumber = 1,
    kGeneratingUnitFieldNumber = 2,
    kGenerationEventFieldNumber = 3,
  };
  // .commonmodule.EventMessageInfo eventMessageInfo = 1 [(.uml.option_parent_message) = true];
  bool has_eventmessageinfo() const;
  private:
  bool _internal_has_eventmessageinfo() const;
  public:
  void clear_eventmessageinfo();
  const ::commonmodule::EventMessageInfo& eventmessageinfo() const;
  ::commonmodule::EventMessageInfo* release_eventmessageinfo();
  ::commonmodule::EventMessageInfo* mutable_eventmessageinfo();
  void set_allocated_eventmessageinfo(::commonmodule::EventMessageInfo* eventmessageinfo);
  private:
  const ::commonmodule::EventMessageInfo& _internal_eventmessageinfo() const;
  ::commonmodule::EventMessageInfo* _internal_mutable_eventmessageinfo();
  public:
  void unsafe_arena_set_allocated_eventmessageinfo(
      ::commonmodule::EventMessageInfo* eventmessageinfo);
  ::commonmodule::EventMessageInfo* unsafe_arena_release_eventmessageinfo();

  // .generationmodule.GeneratingUnit generatingUnit = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  bool has_generatingunit() const;
  private:
  bool _internal_has_generatingunit() const;
  public:
  void clear_generatingunit();
  const ::generationmodule::GeneratingUnit& generatingunit() const;
  ::generationmodule::GeneratingUnit* release_generatingunit();
  ::generationmodule::GeneratingUnit* mutable_generatingunit();
  void set_allocated_generatingunit(::generationmodule::GeneratingUnit* generatingunit);
  private:
  const ::generationmodule::GeneratingUnit& _internal_generatingunit() const;
  ::generationmodule::GeneratingUnit* _internal_mutable_generatingunit();
  public:
  void unsafe_arena_set_allocated_generatingunit(
      ::generationmodule::GeneratingUnit* generatingunit);
  ::generationmodule::GeneratingUnit* unsafe_arena_release_generatingunit();

  // .generationmodule.GenerationEvent generationEvent = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  bool has_generationevent() const;
  private:
  bool _internal_has_generationevent() const;
  public:
  void clear_generationevent();
  const ::generationmodule::GenerationEvent& generationevent() const;
  ::generationmodule::GenerationEvent* release_generationevent();
  ::generationmodule::GenerationEvent* mutable_generationevent();
  void set_allocated_generationevent(::generationmodule::GenerationEvent* generationevent);
  private:
  const ::generationmodule::GenerationEvent& _internal_generationevent() const;
  ::generationmodule::GenerationEvent* _internal_mutable_generationevent();
  public:
  void unsafe_arena_set_allocated_generationevent(
      ::generationmodule::GenerationEvent* generationevent);
  ::generationmodule::GenerationEvent* unsafe_arena_release_generationevent();

  // @@protoc_insertion_point(class_scope:generationmodule.GenerationEventProfile)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::commonmodule::EventMessageInfo* eventmessageinfo_;
  ::generationmodule::GeneratingUnit* generatingunit_;
  ::generationmodule::GenerationEvent* generationevent_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_generationmodule_2fgenerationmodule_2eproto;
};
// -------------------------------------------------------------------

class GenerationStatusZGEN PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:generationmodule.GenerationStatusZGEN) */ {
 public:
  inline GenerationStatusZGEN() : GenerationStatusZGEN(nullptr) {}
  virtual ~GenerationStatusZGEN();
  explicit constexpr GenerationStatusZGEN(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GenerationStatusZGEN(const GenerationStatusZGEN& from);
  GenerationStatusZGEN(GenerationStatusZGEN&& from) noexcept
    : GenerationStatusZGEN() {
    *this = ::std::move(from);
  }

  inline GenerationStatusZGEN& operator=(const GenerationStatusZGEN& from) {
    CopyFrom(from);
    return *this;
  }
  inline GenerationStatusZGEN& operator=(GenerationStatusZGEN&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GenerationStatusZGEN& default_instance() {
    return *internal_default_instance();
  }
  static inline const GenerationStatusZGEN* internal_default_instance() {
    return reinterpret_cast<const GenerationStatusZGEN*>(
               &_GenerationStatusZGEN_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  friend void swap(GenerationStatusZGEN& a, GenerationStatusZGEN& b) {
    a.Swap(&b);
  }
  inline void Swap(GenerationStatusZGEN* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GenerationStatusZGEN* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GenerationStatusZGEN* New() const final {
    return CreateMaybeMessage<GenerationStatusZGEN>(nullptr);
  }

  GenerationStatusZGEN* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GenerationStatusZGEN>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GenerationStatusZGEN& from);
  void MergeFrom(const GenerationStatusZGEN& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GenerationStatusZGEN* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "generationmodule.GenerationStatusZGEN";
  }
  protected:
  explicit GenerationStatusZGEN(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_generationmodule_2fgenerationmodule_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGenerationEventAndStatusZGENFieldNumber = 1,
  };
  // .generationmodule.GenerationEventAndStatusZGEN generationEventAndStatusZGEN = 1 [(.uml.option_parent_message) = true];
  bool has_generationeventandstatuszgen() const;
  private:
  bool _internal_has_generationeventandstatuszgen() const;
  public:
  void clear_generationeventandstatuszgen();
  const ::generationmodule::GenerationEventAndStatusZGEN& generationeventandstatuszgen() const;
  ::generationmodule::GenerationEventAndStatusZGEN* release_generationeventandstatuszgen();
  ::generationmodule::GenerationEventAndStatusZGEN* mutable_generationeventandstatuszgen();
  void set_allocated_generationeventandstatuszgen(::generationmodule::GenerationEventAndStatusZGEN* generationeventandstatuszgen);
  private:
  const ::generationmodule::GenerationEventAndStatusZGEN& _internal_generationeventandstatuszgen() const;
  ::generationmodule::GenerationEventAndStatusZGEN* _internal_mutable_generationeventandstatuszgen();
  public:
  void unsafe_arena_set_allocated_generationeventandstatuszgen(
      ::generationmodule::GenerationEventAndStatusZGEN* generationeventandstatuszgen);
  ::generationmodule::GenerationEventAndStatusZGEN* unsafe_arena_release_generationeventandstatuszgen();

  // @@protoc_insertion_point(class_scope:generationmodule.GenerationStatusZGEN)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::generationmodule::GenerationEventAndStatusZGEN* generationeventandstatuszgen_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_generationmodule_2fgenerationmodule_2eproto;
};
// -------------------------------------------------------------------

class GenerationStatus PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:generationmodule.GenerationStatus) */ {
 public:
  inline GenerationStatus() : GenerationStatus(nullptr) {}
  virtual ~GenerationStatus();
  explicit constexpr GenerationStatus(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GenerationStatus(const GenerationStatus& from);
  GenerationStatus(GenerationStatus&& from) noexcept
    : GenerationStatus() {
    *this = ::std::move(from);
  }

  inline GenerationStatus& operator=(const GenerationStatus& from) {
    CopyFrom(from);
    return *this;
  }
  inline GenerationStatus& operator=(GenerationStatus&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GenerationStatus& default_instance() {
    return *internal_default_instance();
  }
  static inline const GenerationStatus* internal_default_instance() {
    return reinterpret_cast<const GenerationStatus*>(
               &_GenerationStatus_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  friend void swap(GenerationStatus& a, GenerationStatus& b) {
    a.Swap(&b);
  }
  inline void Swap(GenerationStatus* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GenerationStatus* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GenerationStatus* New() const final {
    return CreateMaybeMessage<GenerationStatus>(nullptr);
  }

  GenerationStatus* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GenerationStatus>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GenerationStatus& from);
  void MergeFrom(const GenerationStatus& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GenerationStatus* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "generationmodule.GenerationStatus";
  }
  protected:
  explicit GenerationStatus(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_generationmodule_2fgenerationmodule_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStatusValueFieldNumber = 1,
    kGenerationStatusZGENFieldNumber = 2,
  };
  // .commonmodule.StatusValue statusValue = 1 [(.uml.option_parent_message) = true];
  bool has_statusvalue() const;
  private:
  bool _internal_has_statusvalue() const;
  public:
  void clear_statusvalue();
  const ::commonmodule::StatusValue& statusvalue() const;
  ::commonmodule::StatusValue* release_statusvalue();
  ::commonmodule::StatusValue* mutable_statusvalue();
  void set_allocated_statusvalue(::commonmodule::StatusValue* statusvalue);
  private:
  const ::commonmodule::StatusValue& _internal_statusvalue() const;
  ::commonmodule::StatusValue* _internal_mutable_statusvalue();
  public:
  void unsafe_arena_set_allocated_statusvalue(
      ::commonmodule::StatusValue* statusvalue);
  ::commonmodule::StatusValue* unsafe_arena_release_statusvalue();

  // .generationmodule.GenerationStatusZGEN generationStatusZGEN = 2;
  bool has_generationstatuszgen() const;
  private:
  bool _internal_has_generationstatuszgen() const;
  public:
  void clear_generationstatuszgen();
  const ::generationmodule::GenerationStatusZGEN& generationstatuszgen() const;
  ::generationmodule::GenerationStatusZGEN* release_generationstatuszgen();
  ::generationmodule::GenerationStatusZGEN* mutable_generationstatuszgen();
  void set_allocated_generationstatuszgen(::generationmodule::GenerationStatusZGEN* generationstatuszgen);
  private:
  const ::generationmodule::GenerationStatusZGEN& _internal_generationstatuszgen() const;
  ::generationmodule::GenerationStatusZGEN* _internal_mutable_generationstatuszgen();
  public:
  void unsafe_arena_set_allocated_generationstatuszgen(
      ::generationmodule::GenerationStatusZGEN* generationstatuszgen);
  ::generationmodule::GenerationStatusZGEN* unsafe_arena_release_generationstatuszgen();

  // @@protoc_insertion_point(class_scope:generationmodule.GenerationStatus)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::commonmodule::StatusValue* statusvalue_;
  ::generationmodule::GenerationStatusZGEN* generationstatuszgen_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_generationmodule_2fgenerationmodule_2eproto;
};
// -------------------------------------------------------------------

class GenerationStatusProfile PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:generationmodule.GenerationStatusProfile) */ {
 public:
  inline GenerationStatusProfile() : GenerationStatusProfile(nullptr) {}
  virtual ~GenerationStatusProfile();
  explicit constexpr GenerationStatusProfile(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GenerationStatusProfile(const GenerationStatusProfile& from);
  GenerationStatusProfile(GenerationStatusProfile&& from) noexcept
    : GenerationStatusProfile() {
    *this = ::std::move(from);
  }

  inline GenerationStatusProfile& operator=(const GenerationStatusProfile& from) {
    CopyFrom(from);
    return *this;
  }
  inline GenerationStatusProfile& operator=(GenerationStatusProfile&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GenerationStatusProfile& default_instance() {
    return *internal_default_instance();
  }
  static inline const GenerationStatusProfile* internal_default_instance() {
    return reinterpret_cast<const GenerationStatusProfile*>(
               &_GenerationStatusProfile_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  friend void swap(GenerationStatusProfile& a, GenerationStatusProfile& b) {
    a.Swap(&b);
  }
  inline void Swap(GenerationStatusProfile* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GenerationStatusProfile* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GenerationStatusProfile* New() const final {
    return CreateMaybeMessage<GenerationStatusProfile>(nullptr);
  }

  GenerationStatusProfile* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GenerationStatusProfile>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GenerationStatusProfile& from);
  void MergeFrom(const GenerationStatusProfile& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GenerationStatusProfile* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "generationmodule.GenerationStatusProfile";
  }
  protected:
  explicit GenerationStatusProfile(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_generationmodule_2fgenerationmodule_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStatusMessageInfoFieldNumber = 1,
    kGeneratingUnitFieldNumber = 2,
    kGenerationStatusFieldNumber = 3,
  };
  // .commonmodule.StatusMessageInfo statusMessageInfo = 1 [(.uml.option_parent_message) = true];
  bool has_statusmessageinfo() const;
  private:
  bool _internal_has_statusmessageinfo() const;
  public:
  void clear_statusmessageinfo();
  const ::commonmodule::StatusMessageInfo& statusmessageinfo() const;
  ::commonmodule::StatusMessageInfo* release_statusmessageinfo();
  ::commonmodule::StatusMessageInfo* mutable_statusmessageinfo();
  void set_allocated_statusmessageinfo(::commonmodule::StatusMessageInfo* statusmessageinfo);
  private:
  const ::commonmodule::StatusMessageInfo& _internal_statusmessageinfo() const;
  ::commonmodule::StatusMessageInfo* _internal_mutable_statusmessageinfo();
  public:
  void unsafe_arena_set_allocated_statusmessageinfo(
      ::commonmodule::StatusMessageInfo* statusmessageinfo);
  ::commonmodule::StatusMessageInfo* unsafe_arena_release_statusmessageinfo();

  // .generationmodule.GeneratingUnit generatingUnit = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  bool has_generatingunit() const;
  private:
  bool _internal_has_generatingunit() const;
  public:
  void clear_generatingunit();
  const ::generationmodule::GeneratingUnit& generatingunit() const;
  ::generationmodule::GeneratingUnit* release_generatingunit();
  ::generationmodule::GeneratingUnit* mutable_generatingunit();
  void set_allocated_generatingunit(::generationmodule::GeneratingUnit* generatingunit);
  private:
  const ::generationmodule::GeneratingUnit& _internal_generatingunit() const;
  ::generationmodule::GeneratingUnit* _internal_mutable_generatingunit();
  public:
  void unsafe_arena_set_allocated_generatingunit(
      ::generationmodule::GeneratingUnit* generatingunit);
  ::generationmodule::GeneratingUnit* unsafe_arena_release_generatingunit();

  // .generationmodule.GenerationStatus generationStatus = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  bool has_generationstatus() const;
  private:
  bool _internal_has_generationstatus() const;
  public:
  void clear_generationstatus();
  const ::generationmodule::GenerationStatus& generationstatus() const;
  ::generationmodule::GenerationStatus* release_generationstatus();
  ::generationmodule::GenerationStatus* mutable_generationstatus();
  void set_allocated_generationstatus(::generationmodule::GenerationStatus* generationstatus);
  private:
  const ::generationmodule::GenerationStatus& _internal_generationstatus() const;
  ::generationmodule::GenerationStatus* _internal_mutable_generationstatus();
  public:
  void unsafe_arena_set_allocated_generationstatus(
      ::generationmodule::GenerationStatus* generationstatus);
  ::generationmodule::GenerationStatus* unsafe_arena_release_generationstatus();

  // @@protoc_insertion_point(class_scope:generationmodule.GenerationStatusProfile)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::commonmodule::StatusMessageInfo* statusmessageinfo_;
  ::generationmodule::GeneratingUnit* generatingunit_;
  ::generationmodule::GenerationStatus* generationstatus_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_generationmodule_2fgenerationmodule_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// GenerationPoint

// .commonmodule.ControlSPC blackStartEnabled = 1;
inline bool GenerationPoint::_internal_has_blackstartenabled() const {
  return this != internal_default_instance() && blackstartenabled_ != nullptr;
}
inline bool GenerationPoint::has_blackstartenabled() const {
  return _internal_has_blackstartenabled();
}
inline const ::commonmodule::ControlSPC& GenerationPoint::_internal_blackstartenabled() const {
  const ::commonmodule::ControlSPC* p = blackstartenabled_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::ControlSPC&>(
      ::commonmodule::_ControlSPC_default_instance_);
}
inline const ::commonmodule::ControlSPC& GenerationPoint::blackstartenabled() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationPoint.blackStartEnabled)
  return _internal_blackstartenabled();
}
inline void GenerationPoint::unsafe_arena_set_allocated_blackstartenabled(
    ::commonmodule::ControlSPC* blackstartenabled) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(blackstartenabled_);
  }
  blackstartenabled_ = blackstartenabled;
  if (blackstartenabled) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationPoint.blackStartEnabled)
}
inline ::commonmodule::ControlSPC* GenerationPoint::release_blackstartenabled() {
  
  ::commonmodule::ControlSPC* temp = blackstartenabled_;
  blackstartenabled_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::commonmodule::ControlSPC* GenerationPoint::unsafe_arena_release_blackstartenabled() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationPoint.blackStartEnabled)
  
  ::commonmodule::ControlSPC* temp = blackstartenabled_;
  blackstartenabled_ = nullptr;
  return temp;
}
inline ::commonmodule::ControlSPC* GenerationPoint::_internal_mutable_blackstartenabled() {
  
  if (blackstartenabled_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::ControlSPC>(GetArena());
    blackstartenabled_ = p;
  }
  return blackstartenabled_;
}
inline ::commonmodule::ControlSPC* GenerationPoint::mutable_blackstartenabled() {
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationPoint.blackStartEnabled)
  return _internal_mutable_blackstartenabled();
}
inline void GenerationPoint::set_allocated_blackstartenabled(::commonmodule::ControlSPC* blackstartenabled) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(blackstartenabled_);
  }
  if (blackstartenabled) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(blackstartenabled)->GetArena();
    if (message_arena != submessage_arena) {
      blackstartenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, blackstartenabled, submessage_arena);
    }
    
  } else {
    
  }
  blackstartenabled_ = blackstartenabled;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationPoint.blackStartEnabled)
}

// .commonmodule.ControlSPC frequencySetPointEnabled = 2;
inline bool GenerationPoint::_internal_has_frequencysetpointenabled() const {
  return this != internal_default_instance() && frequencysetpointenabled_ != nullptr;
}
inline bool GenerationPoint::has_frequencysetpointenabled() const {
  return _internal_has_frequencysetpointenabled();
}
inline const ::commonmodule::ControlSPC& GenerationPoint::_internal_frequencysetpointenabled() const {
  const ::commonmodule::ControlSPC* p = frequencysetpointenabled_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::ControlSPC&>(
      ::commonmodule::_ControlSPC_default_instance_);
}
inline const ::commonmodule::ControlSPC& GenerationPoint::frequencysetpointenabled() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationPoint.frequencySetPointEnabled)
  return _internal_frequencysetpointenabled();
}
inline void GenerationPoint::unsafe_arena_set_allocated_frequencysetpointenabled(
    ::commonmodule::ControlSPC* frequencysetpointenabled) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(frequencysetpointenabled_);
  }
  frequencysetpointenabled_ = frequencysetpointenabled;
  if (frequencysetpointenabled) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationPoint.frequencySetPointEnabled)
}
inline ::commonmodule::ControlSPC* GenerationPoint::release_frequencysetpointenabled() {
  
  ::commonmodule::ControlSPC* temp = frequencysetpointenabled_;
  frequencysetpointenabled_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::commonmodule::ControlSPC* GenerationPoint::unsafe_arena_release_frequencysetpointenabled() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationPoint.frequencySetPointEnabled)
  
  ::commonmodule::ControlSPC* temp = frequencysetpointenabled_;
  frequencysetpointenabled_ = nullptr;
  return temp;
}
inline ::commonmodule::ControlSPC* GenerationPoint::_internal_mutable_frequencysetpointenabled() {
  
  if (frequencysetpointenabled_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::ControlSPC>(GetArena());
    frequencysetpointenabled_ = p;
  }
  return frequencysetpointenabled_;
}
inline ::commonmodule::ControlSPC* GenerationPoint::mutable_frequencysetpointenabled() {
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationPoint.frequencySetPointEnabled)
  return _internal_mutable_frequencysetpointenabled();
}
inline void GenerationPoint::set_allocated_frequencysetpointenabled(::commonmodule::ControlSPC* frequencysetpointenabled) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(frequencysetpointenabled_);
  }
  if (frequencysetpointenabled) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(frequencysetpointenabled)->GetArena();
    if (message_arena != submessage_arena) {
      frequencysetpointenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, frequencysetpointenabled, submessage_arena);
    }
    
  } else {
    
  }
  frequencysetpointenabled_ = frequencysetpointenabled;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationPoint.frequencySetPointEnabled)
}

// .google.protobuf.FloatValue pctHzDroop = 3;
inline bool GenerationPoint::_internal_has_pcthzdroop() const {
  return this != internal_default_instance() && pcthzdroop_ != nullptr;
}
inline bool GenerationPoint::has_pcthzdroop() const {
  return _internal_has_pcthzdroop();
}
inline const PROTOBUF_NAMESPACE_ID::FloatValue& GenerationPoint::_internal_pcthzdroop() const {
  const PROTOBUF_NAMESPACE_ID::FloatValue* p = pcthzdroop_;
  return p != nullptr ? *p : reinterpret_cast<const PROTOBUF_NAMESPACE_ID::FloatValue&>(
      PROTOBUF_NAMESPACE_ID::_FloatValue_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::FloatValue& GenerationPoint::pcthzdroop() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationPoint.pctHzDroop)
  return _internal_pcthzdroop();
}
inline void GenerationPoint::unsafe_arena_set_allocated_pcthzdroop(
    PROTOBUF_NAMESPACE_ID::FloatValue* pcthzdroop) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(pcthzdroop_);
  }
  pcthzdroop_ = pcthzdroop;
  if (pcthzdroop) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationPoint.pctHzDroop)
}
inline PROTOBUF_NAMESPACE_ID::FloatValue* GenerationPoint::release_pcthzdroop() {
  
  PROTOBUF_NAMESPACE_ID::FloatValue* temp = pcthzdroop_;
  pcthzdroop_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::FloatValue* GenerationPoint::unsafe_arena_release_pcthzdroop() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationPoint.pctHzDroop)
  
  PROTOBUF_NAMESPACE_ID::FloatValue* temp = pcthzdroop_;
  pcthzdroop_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::FloatValue* GenerationPoint::_internal_mutable_pcthzdroop() {
  
  if (pcthzdroop_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::FloatValue>(GetArena());
    pcthzdroop_ = p;
  }
  return pcthzdroop_;
}
inline PROTOBUF_NAMESPACE_ID::FloatValue* GenerationPoint::mutable_pcthzdroop() {
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationPoint.pctHzDroop)
  return _internal_mutable_pcthzdroop();
}
inline void GenerationPoint::set_allocated_pcthzdroop(PROTOBUF_NAMESPACE_ID::FloatValue* pcthzdroop) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(pcthzdroop_);
  }
  if (pcthzdroop) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(pcthzdroop)->GetArena();
    if (message_arena != submessage_arena) {
      pcthzdroop = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, pcthzdroop, submessage_arena);
    }
    
  } else {
    
  }
  pcthzdroop_ = pcthzdroop;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationPoint.pctHzDroop)
}

// .google.protobuf.FloatValue pctVDroop = 4;
inline bool GenerationPoint::_internal_has_pctvdroop() const {
  return this != internal_default_instance() && pctvdroop_ != nullptr;
}
inline bool GenerationPoint::has_pctvdroop() const {
  return _internal_has_pctvdroop();
}
inline const PROTOBUF_NAMESPACE_ID::FloatValue& GenerationPoint::_internal_pctvdroop() const {
  const PROTOBUF_NAMESPACE_ID::FloatValue* p = pctvdroop_;
  return p != nullptr ? *p : reinterpret_cast<const PROTOBUF_NAMESPACE_ID::FloatValue&>(
      PROTOBUF_NAMESPACE_ID::_FloatValue_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::FloatValue& GenerationPoint::pctvdroop() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationPoint.pctVDroop)
  return _internal_pctvdroop();
}
inline void GenerationPoint::unsafe_arena_set_allocated_pctvdroop(
    PROTOBUF_NAMESPACE_ID::FloatValue* pctvdroop) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(pctvdroop_);
  }
  pctvdroop_ = pctvdroop;
  if (pctvdroop) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationPoint.pctVDroop)
}
inline PROTOBUF_NAMESPACE_ID::FloatValue* GenerationPoint::release_pctvdroop() {
  
  PROTOBUF_NAMESPACE_ID::FloatValue* temp = pctvdroop_;
  pctvdroop_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::FloatValue* GenerationPoint::unsafe_arena_release_pctvdroop() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationPoint.pctVDroop)
  
  PROTOBUF_NAMESPACE_ID::FloatValue* temp = pctvdroop_;
  pctvdroop_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::FloatValue* GenerationPoint::_internal_mutable_pctvdroop() {
  
  if (pctvdroop_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::FloatValue>(GetArena());
    pctvdroop_ = p;
  }
  return pctvdroop_;
}
inline PROTOBUF_NAMESPACE_ID::FloatValue* GenerationPoint::mutable_pctvdroop() {
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationPoint.pctVDroop)
  return _internal_mutable_pctvdroop();
}
inline void GenerationPoint::set_allocated_pctvdroop(PROTOBUF_NAMESPACE_ID::FloatValue* pctvdroop) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(pctvdroop_);
  }
  if (pctvdroop) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(pctvdroop)->GetArena();
    if (message_arena != submessage_arena) {
      pctvdroop = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, pctvdroop, submessage_arena);
    }
    
  } else {
    
  }
  pctvdroop_ = pctvdroop;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationPoint.pctVDroop)
}

// .commonmodule.RampRate rampRates = 5;
inline bool GenerationPoint::_internal_has_ramprates() const {
  return this != internal_default_instance() && ramprates_ != nullptr;
}
inline bool GenerationPoint::has_ramprates() const {
  return _internal_has_ramprates();
}
inline const ::commonmodule::RampRate& GenerationPoint::_internal_ramprates() const {
  const ::commonmodule::RampRate* p = ramprates_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::RampRate&>(
      ::commonmodule::_RampRate_default_instance_);
}
inline const ::commonmodule::RampRate& GenerationPoint::ramprates() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationPoint.rampRates)
  return _internal_ramprates();
}
inline void GenerationPoint::unsafe_arena_set_allocated_ramprates(
    ::commonmodule::RampRate* ramprates) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(ramprates_);
  }
  ramprates_ = ramprates;
  if (ramprates) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationPoint.rampRates)
}
inline ::commonmodule::RampRate* GenerationPoint::release_ramprates() {
  
  ::commonmodule::RampRate* temp = ramprates_;
  ramprates_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::commonmodule::RampRate* GenerationPoint::unsafe_arena_release_ramprates() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationPoint.rampRates)
  
  ::commonmodule::RampRate* temp = ramprates_;
  ramprates_ = nullptr;
  return temp;
}
inline ::commonmodule::RampRate* GenerationPoint::_internal_mutable_ramprates() {
  
  if (ramprates_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::RampRate>(GetArena());
    ramprates_ = p;
  }
  return ramprates_;
}
inline ::commonmodule::RampRate* GenerationPoint::mutable_ramprates() {
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationPoint.rampRates)
  return _internal_mutable_ramprates();
}
inline void GenerationPoint::set_allocated_ramprates(::commonmodule::RampRate* ramprates) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(ramprates_);
  }
  if (ramprates) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(ramprates)->GetArena();
    if (message_arena != submessage_arena) {
      ramprates = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, ramprates, submessage_arena);
    }
    
  } else {
    
  }
  ramprates_ = ramprates;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationPoint.rampRates)
}

// .commonmodule.ControlSPC reactivePwrSetPointEnabled = 6;
inline bool GenerationPoint::_internal_has_reactivepwrsetpointenabled() const {
  return this != internal_default_instance() && reactivepwrsetpointenabled_ != nullptr;
}
inline bool GenerationPoint::has_reactivepwrsetpointenabled() const {
  return _internal_has_reactivepwrsetpointenabled();
}
inline const ::commonmodule::ControlSPC& GenerationPoint::_internal_reactivepwrsetpointenabled() const {
  const ::commonmodule::ControlSPC* p = reactivepwrsetpointenabled_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::ControlSPC&>(
      ::commonmodule::_ControlSPC_default_instance_);
}
inline const ::commonmodule::ControlSPC& GenerationPoint::reactivepwrsetpointenabled() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationPoint.reactivePwrSetPointEnabled)
  return _internal_reactivepwrsetpointenabled();
}
inline void GenerationPoint::unsafe_arena_set_allocated_reactivepwrsetpointenabled(
    ::commonmodule::ControlSPC* reactivepwrsetpointenabled) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(reactivepwrsetpointenabled_);
  }
  reactivepwrsetpointenabled_ = reactivepwrsetpointenabled;
  if (reactivepwrsetpointenabled) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationPoint.reactivePwrSetPointEnabled)
}
inline ::commonmodule::ControlSPC* GenerationPoint::release_reactivepwrsetpointenabled() {
  
  ::commonmodule::ControlSPC* temp = reactivepwrsetpointenabled_;
  reactivepwrsetpointenabled_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::commonmodule::ControlSPC* GenerationPoint::unsafe_arena_release_reactivepwrsetpointenabled() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationPoint.reactivePwrSetPointEnabled)
  
  ::commonmodule::ControlSPC* temp = reactivepwrsetpointenabled_;
  reactivepwrsetpointenabled_ = nullptr;
  return temp;
}
inline ::commonmodule::ControlSPC* GenerationPoint::_internal_mutable_reactivepwrsetpointenabled() {
  
  if (reactivepwrsetpointenabled_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::ControlSPC>(GetArena());
    reactivepwrsetpointenabled_ = p;
  }
  return reactivepwrsetpointenabled_;
}
inline ::commonmodule::ControlSPC* GenerationPoint::mutable_reactivepwrsetpointenabled() {
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationPoint.reactivePwrSetPointEnabled)
  return _internal_mutable_reactivepwrsetpointenabled();
}
inline void GenerationPoint::set_allocated_reactivepwrsetpointenabled(::commonmodule::ControlSPC* reactivepwrsetpointenabled) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(reactivepwrsetpointenabled_);
  }
  if (reactivepwrsetpointenabled) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(reactivepwrsetpointenabled)->GetArena();
    if (message_arena != submessage_arena) {
      reactivepwrsetpointenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, reactivepwrsetpointenabled, submessage_arena);
    }
    
  } else {
    
  }
  reactivepwrsetpointenabled_ = reactivepwrsetpointenabled;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationPoint.reactivePwrSetPointEnabled)
}

// .commonmodule.ControlSPC realPwrSetPointEnabled = 7;
inline bool GenerationPoint::_internal_has_realpwrsetpointenabled() const {
  return this != internal_default_instance() && realpwrsetpointenabled_ != nullptr;
}
inline bool GenerationPoint::has_realpwrsetpointenabled() const {
  return _internal_has_realpwrsetpointenabled();
}
inline const ::commonmodule::ControlSPC& GenerationPoint::_internal_realpwrsetpointenabled() const {
  const ::commonmodule::ControlSPC* p = realpwrsetpointenabled_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::ControlSPC&>(
      ::commonmodule::_ControlSPC_default_instance_);
}
inline const ::commonmodule::ControlSPC& GenerationPoint::realpwrsetpointenabled() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationPoint.realPwrSetPointEnabled)
  return _internal_realpwrsetpointenabled();
}
inline void GenerationPoint::unsafe_arena_set_allocated_realpwrsetpointenabled(
    ::commonmodule::ControlSPC* realpwrsetpointenabled) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(realpwrsetpointenabled_);
  }
  realpwrsetpointenabled_ = realpwrsetpointenabled;
  if (realpwrsetpointenabled) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationPoint.realPwrSetPointEnabled)
}
inline ::commonmodule::ControlSPC* GenerationPoint::release_realpwrsetpointenabled() {
  
  ::commonmodule::ControlSPC* temp = realpwrsetpointenabled_;
  realpwrsetpointenabled_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::commonmodule::ControlSPC* GenerationPoint::unsafe_arena_release_realpwrsetpointenabled() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationPoint.realPwrSetPointEnabled)
  
  ::commonmodule::ControlSPC* temp = realpwrsetpointenabled_;
  realpwrsetpointenabled_ = nullptr;
  return temp;
}
inline ::commonmodule::ControlSPC* GenerationPoint::_internal_mutable_realpwrsetpointenabled() {
  
  if (realpwrsetpointenabled_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::ControlSPC>(GetArena());
    realpwrsetpointenabled_ = p;
  }
  return realpwrsetpointenabled_;
}
inline ::commonmodule::ControlSPC* GenerationPoint::mutable_realpwrsetpointenabled() {
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationPoint.realPwrSetPointEnabled)
  return _internal_mutable_realpwrsetpointenabled();
}
inline void GenerationPoint::set_allocated_realpwrsetpointenabled(::commonmodule::ControlSPC* realpwrsetpointenabled) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(realpwrsetpointenabled_);
  }
  if (realpwrsetpointenabled) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(realpwrsetpointenabled)->GetArena();
    if (message_arena != submessage_arena) {
      realpwrsetpointenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, realpwrsetpointenabled, submessage_arena);
    }
    
  } else {
    
  }
  realpwrsetpointenabled_ = realpwrsetpointenabled;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationPoint.realPwrSetPointEnabled)
}

// .commonmodule.ControlSPC reset = 8;
inline bool GenerationPoint::_internal_has_reset() const {
  return this != internal_default_instance() && reset_ != nullptr;
}
inline bool GenerationPoint::has_reset() const {
  return _internal_has_reset();
}
inline const ::commonmodule::ControlSPC& GenerationPoint::_internal_reset() const {
  const ::commonmodule::ControlSPC* p = reset_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::ControlSPC&>(
      ::commonmodule::_ControlSPC_default_instance_);
}
inline const ::commonmodule::ControlSPC& GenerationPoint::reset() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationPoint.reset)
  return _internal_reset();
}
inline void GenerationPoint::unsafe_arena_set_allocated_reset(
    ::commonmodule::ControlSPC* reset) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(reset_);
  }
  reset_ = reset;
  if (reset) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationPoint.reset)
}
inline ::commonmodule::ControlSPC* GenerationPoint::release_reset() {
  
  ::commonmodule::ControlSPC* temp = reset_;
  reset_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::commonmodule::ControlSPC* GenerationPoint::unsafe_arena_release_reset() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationPoint.reset)
  
  ::commonmodule::ControlSPC* temp = reset_;
  reset_ = nullptr;
  return temp;
}
inline ::commonmodule::ControlSPC* GenerationPoint::_internal_mutable_reset() {
  
  if (reset_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::ControlSPC>(GetArena());
    reset_ = p;
  }
  return reset_;
}
inline ::commonmodule::ControlSPC* GenerationPoint::mutable_reset() {
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationPoint.reset)
  return _internal_mutable_reset();
}
inline void GenerationPoint::set_allocated_reset(::commonmodule::ControlSPC* reset) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(reset_);
  }
  if (reset) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(reset)->GetArena();
    if (message_arena != submessage_arena) {
      reset = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, reset, submessage_arena);
    }
    
  } else {
    
  }
  reset_ = reset;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationPoint.reset)
}

// .commonmodule.Optional_StateKind state = 9;
inline bool GenerationPoint::_internal_has_state() const {
  return this != internal_default_instance() && state_ != nullptr;
}
inline bool GenerationPoint::has_state() const {
  return _internal_has_state();
}
inline const ::commonmodule::Optional_StateKind& GenerationPoint::_internal_state() const {
  const ::commonmodule::Optional_StateKind* p = state_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::Optional_StateKind&>(
      ::commonmodule::_Optional_StateKind_default_instance_);
}
inline const ::commonmodule::Optional_StateKind& GenerationPoint::state() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationPoint.state)
  return _internal_state();
}
inline void GenerationPoint::unsafe_arena_set_allocated_state(
    ::commonmodule::Optional_StateKind* state) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(state_);
  }
  state_ = state;
  if (state) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationPoint.state)
}
inline ::commonmodule::Optional_StateKind* GenerationPoint::release_state() {
  
  ::commonmodule::Optional_StateKind* temp = state_;
  state_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::commonmodule::Optional_StateKind* GenerationPoint::unsafe_arena_release_state() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationPoint.state)
  
  ::commonmodule::Optional_StateKind* temp = state_;
  state_ = nullptr;
  return temp;
}
inline ::commonmodule::Optional_StateKind* GenerationPoint::_internal_mutable_state() {
  
  if (state_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::Optional_StateKind>(GetArena());
    state_ = p;
  }
  return state_;
}
inline ::commonmodule::Optional_StateKind* GenerationPoint::mutable_state() {
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationPoint.state)
  return _internal_mutable_state();
}
inline void GenerationPoint::set_allocated_state(::commonmodule::Optional_StateKind* state) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(state_);
  }
  if (state) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(state)->GetArena();
    if (message_arena != submessage_arena) {
      state = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationPoint.state)
}

// .commonmodule.ControlSPC syncBackToGrid = 10;
inline bool GenerationPoint::_internal_has_syncbacktogrid() const {
  return this != internal_default_instance() && syncbacktogrid_ != nullptr;
}
inline bool GenerationPoint::has_syncbacktogrid() const {
  return _internal_has_syncbacktogrid();
}
inline const ::commonmodule::ControlSPC& GenerationPoint::_internal_syncbacktogrid() const {
  const ::commonmodule::ControlSPC* p = syncbacktogrid_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::ControlSPC&>(
      ::commonmodule::_ControlSPC_default_instance_);
}
inline const ::commonmodule::ControlSPC& GenerationPoint::syncbacktogrid() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationPoint.syncBackToGrid)
  return _internal_syncbacktogrid();
}
inline void GenerationPoint::unsafe_arena_set_allocated_syncbacktogrid(
    ::commonmodule::ControlSPC* syncbacktogrid) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(syncbacktogrid_);
  }
  syncbacktogrid_ = syncbacktogrid;
  if (syncbacktogrid) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationPoint.syncBackToGrid)
}
inline ::commonmodule::ControlSPC* GenerationPoint::release_syncbacktogrid() {
  
  ::commonmodule::ControlSPC* temp = syncbacktogrid_;
  syncbacktogrid_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::commonmodule::ControlSPC* GenerationPoint::unsafe_arena_release_syncbacktogrid() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationPoint.syncBackToGrid)
  
  ::commonmodule::ControlSPC* temp = syncbacktogrid_;
  syncbacktogrid_ = nullptr;
  return temp;
}
inline ::commonmodule::ControlSPC* GenerationPoint::_internal_mutable_syncbacktogrid() {
  
  if (syncbacktogrid_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::ControlSPC>(GetArena());
    syncbacktogrid_ = p;
  }
  return syncbacktogrid_;
}
inline ::commonmodule::ControlSPC* GenerationPoint::mutable_syncbacktogrid() {
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationPoint.syncBackToGrid)
  return _internal_mutable_syncbacktogrid();
}
inline void GenerationPoint::set_allocated_syncbacktogrid(::commonmodule::ControlSPC* syncbacktogrid) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(syncbacktogrid_);
  }
  if (syncbacktogrid) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(syncbacktogrid)->GetArena();
    if (message_arena != submessage_arena) {
      syncbacktogrid = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, syncbacktogrid, submessage_arena);
    }
    
  } else {
    
  }
  syncbacktogrid_ = syncbacktogrid;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationPoint.syncBackToGrid)
}

// .commonmodule.ControlSPC transToIslndOnGridLossEnabled = 11;
inline bool GenerationPoint::_internal_has_transtoislndongridlossenabled() const {
  return this != internal_default_instance() && transtoislndongridlossenabled_ != nullptr;
}
inline bool GenerationPoint::has_transtoislndongridlossenabled() const {
  return _internal_has_transtoislndongridlossenabled();
}
inline const ::commonmodule::ControlSPC& GenerationPoint::_internal_transtoislndongridlossenabled() const {
  const ::commonmodule::ControlSPC* p = transtoislndongridlossenabled_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::ControlSPC&>(
      ::commonmodule::_ControlSPC_default_instance_);
}
inline const ::commonmodule::ControlSPC& GenerationPoint::transtoislndongridlossenabled() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationPoint.transToIslndOnGridLossEnabled)
  return _internal_transtoislndongridlossenabled();
}
inline void GenerationPoint::unsafe_arena_set_allocated_transtoislndongridlossenabled(
    ::commonmodule::ControlSPC* transtoislndongridlossenabled) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(transtoislndongridlossenabled_);
  }
  transtoislndongridlossenabled_ = transtoislndongridlossenabled;
  if (transtoislndongridlossenabled) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationPoint.transToIslndOnGridLossEnabled)
}
inline ::commonmodule::ControlSPC* GenerationPoint::release_transtoislndongridlossenabled() {
  
  ::commonmodule::ControlSPC* temp = transtoislndongridlossenabled_;
  transtoislndongridlossenabled_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::commonmodule::ControlSPC* GenerationPoint::unsafe_arena_release_transtoislndongridlossenabled() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationPoint.transToIslndOnGridLossEnabled)
  
  ::commonmodule::ControlSPC* temp = transtoislndongridlossenabled_;
  transtoislndongridlossenabled_ = nullptr;
  return temp;
}
inline ::commonmodule::ControlSPC* GenerationPoint::_internal_mutable_transtoislndongridlossenabled() {
  
  if (transtoislndongridlossenabled_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::ControlSPC>(GetArena());
    transtoislndongridlossenabled_ = p;
  }
  return transtoislndongridlossenabled_;
}
inline ::commonmodule::ControlSPC* GenerationPoint::mutable_transtoislndongridlossenabled() {
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationPoint.transToIslndOnGridLossEnabled)
  return _internal_mutable_transtoislndongridlossenabled();
}
inline void GenerationPoint::set_allocated_transtoislndongridlossenabled(::commonmodule::ControlSPC* transtoislndongridlossenabled) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(transtoislndongridlossenabled_);
  }
  if (transtoislndongridlossenabled) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(transtoislndongridlossenabled)->GetArena();
    if (message_arena != submessage_arena) {
      transtoislndongridlossenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, transtoislndongridlossenabled, submessage_arena);
    }
    
  } else {
    
  }
  transtoislndongridlossenabled_ = transtoislndongridlossenabled;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationPoint.transToIslndOnGridLossEnabled)
}

// .commonmodule.ControlSPC voltageSetPointEnabled = 12;
inline bool GenerationPoint::_internal_has_voltagesetpointenabled() const {
  return this != internal_default_instance() && voltagesetpointenabled_ != nullptr;
}
inline bool GenerationPoint::has_voltagesetpointenabled() const {
  return _internal_has_voltagesetpointenabled();
}
inline const ::commonmodule::ControlSPC& GenerationPoint::_internal_voltagesetpointenabled() const {
  const ::commonmodule::ControlSPC* p = voltagesetpointenabled_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::ControlSPC&>(
      ::commonmodule::_ControlSPC_default_instance_);
}
inline const ::commonmodule::ControlSPC& GenerationPoint::voltagesetpointenabled() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationPoint.voltageSetPointEnabled)
  return _internal_voltagesetpointenabled();
}
inline void GenerationPoint::unsafe_arena_set_allocated_voltagesetpointenabled(
    ::commonmodule::ControlSPC* voltagesetpointenabled) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(voltagesetpointenabled_);
  }
  voltagesetpointenabled_ = voltagesetpointenabled;
  if (voltagesetpointenabled) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationPoint.voltageSetPointEnabled)
}
inline ::commonmodule::ControlSPC* GenerationPoint::release_voltagesetpointenabled() {
  
  ::commonmodule::ControlSPC* temp = voltagesetpointenabled_;
  voltagesetpointenabled_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::commonmodule::ControlSPC* GenerationPoint::unsafe_arena_release_voltagesetpointenabled() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationPoint.voltageSetPointEnabled)
  
  ::commonmodule::ControlSPC* temp = voltagesetpointenabled_;
  voltagesetpointenabled_ = nullptr;
  return temp;
}
inline ::commonmodule::ControlSPC* GenerationPoint::_internal_mutable_voltagesetpointenabled() {
  
  if (voltagesetpointenabled_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::ControlSPC>(GetArena());
    voltagesetpointenabled_ = p;
  }
  return voltagesetpointenabled_;
}
inline ::commonmodule::ControlSPC* GenerationPoint::mutable_voltagesetpointenabled() {
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationPoint.voltageSetPointEnabled)
  return _internal_mutable_voltagesetpointenabled();
}
inline void GenerationPoint::set_allocated_voltagesetpointenabled(::commonmodule::ControlSPC* voltagesetpointenabled) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(voltagesetpointenabled_);
  }
  if (voltagesetpointenabled) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(voltagesetpointenabled)->GetArena();
    if (message_arena != submessage_arena) {
      voltagesetpointenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, voltagesetpointenabled, submessage_arena);
    }
    
  } else {
    
  }
  voltagesetpointenabled_ = voltagesetpointenabled;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationPoint.voltageSetPointEnabled)
}

// .commonmodule.ControlTimestamp startTime = 13 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
inline bool GenerationPoint::_internal_has_starttime() const {
  return this != internal_default_instance() && starttime_ != nullptr;
}
inline bool GenerationPoint::has_starttime() const {
  return _internal_has_starttime();
}
inline const ::commonmodule::ControlTimestamp& GenerationPoint::_internal_starttime() const {
  const ::commonmodule::ControlTimestamp* p = starttime_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::ControlTimestamp&>(
      ::commonmodule::_ControlTimestamp_default_instance_);
}
inline const ::commonmodule::ControlTimestamp& GenerationPoint::starttime() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationPoint.startTime)
  return _internal_starttime();
}
inline void GenerationPoint::unsafe_arena_set_allocated_starttime(
    ::commonmodule::ControlTimestamp* starttime) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(starttime_);
  }
  starttime_ = starttime;
  if (starttime) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationPoint.startTime)
}
inline ::commonmodule::ControlTimestamp* GenerationPoint::release_starttime() {
  
  ::commonmodule::ControlTimestamp* temp = starttime_;
  starttime_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::commonmodule::ControlTimestamp* GenerationPoint::unsafe_arena_release_starttime() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationPoint.startTime)
  
  ::commonmodule::ControlTimestamp* temp = starttime_;
  starttime_ = nullptr;
  return temp;
}
inline ::commonmodule::ControlTimestamp* GenerationPoint::_internal_mutable_starttime() {
  
  if (starttime_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::ControlTimestamp>(GetArena());
    starttime_ = p;
  }
  return starttime_;
}
inline ::commonmodule::ControlTimestamp* GenerationPoint::mutable_starttime() {
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationPoint.startTime)
  return _internal_mutable_starttime();
}
inline void GenerationPoint::set_allocated_starttime(::commonmodule::ControlTimestamp* starttime) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(starttime_);
  }
  if (starttime) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(starttime)->GetArena();
    if (message_arena != submessage_arena) {
      starttime = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, starttime, submessage_arena);
    }
    
  } else {
    
  }
  starttime_ = starttime;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationPoint.startTime)
}

// -------------------------------------------------------------------

// GenerationCSG

// repeated .generationmodule.GenerationPoint crvPts = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
inline int GenerationCSG::_internal_crvpts_size() const {
  return crvpts_.size();
}
inline int GenerationCSG::crvpts_size() const {
  return _internal_crvpts_size();
}
inline void GenerationCSG::clear_crvpts() {
  crvpts_.Clear();
}
inline ::generationmodule::GenerationPoint* GenerationCSG::mutable_crvpts(int index) {
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationCSG.crvPts)
  return crvpts_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::generationmodule::GenerationPoint >*
GenerationCSG::mutable_crvpts() {
  // @@protoc_insertion_point(field_mutable_list:generationmodule.GenerationCSG.crvPts)
  return &crvpts_;
}
inline const ::generationmodule::GenerationPoint& GenerationCSG::_internal_crvpts(int index) const {
  return crvpts_.Get(index);
}
inline const ::generationmodule::GenerationPoint& GenerationCSG::crvpts(int index) const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationCSG.crvPts)
  return _internal_crvpts(index);
}
inline ::generationmodule::GenerationPoint* GenerationCSG::_internal_add_crvpts() {
  return crvpts_.Add();
}
inline ::generationmodule::GenerationPoint* GenerationCSG::add_crvpts() {
  // @@protoc_insertion_point(field_add:generationmodule.GenerationCSG.crvPts)
  return _internal_add_crvpts();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::generationmodule::GenerationPoint >&
GenerationCSG::crvpts() const {
  // @@protoc_insertion_point(field_list:generationmodule.GenerationCSG.crvPts)
  return crvpts_;
}

// -------------------------------------------------------------------

// GenerationControlScheduleFSCH

// .generationmodule.GenerationCSG ValDCSG = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
inline bool GenerationControlScheduleFSCH::_internal_has_valdcsg() const {
  return this != internal_default_instance() && valdcsg_ != nullptr;
}
inline bool GenerationControlScheduleFSCH::has_valdcsg() const {
  return _internal_has_valdcsg();
}
inline void GenerationControlScheduleFSCH::clear_valdcsg() {
  if (GetArena() == nullptr && valdcsg_ != nullptr) {
    delete valdcsg_;
  }
  valdcsg_ = nullptr;
}
inline const ::generationmodule::GenerationCSG& GenerationControlScheduleFSCH::_internal_valdcsg() const {
  const ::generationmodule::GenerationCSG* p = valdcsg_;
  return p != nullptr ? *p : reinterpret_cast<const ::generationmodule::GenerationCSG&>(
      ::generationmodule::_GenerationCSG_default_instance_);
}
inline const ::generationmodule::GenerationCSG& GenerationControlScheduleFSCH::valdcsg() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationControlScheduleFSCH.ValDCSG)
  return _internal_valdcsg();
}
inline void GenerationControlScheduleFSCH::unsafe_arena_set_allocated_valdcsg(
    ::generationmodule::GenerationCSG* valdcsg) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(valdcsg_);
  }
  valdcsg_ = valdcsg;
  if (valdcsg) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationControlScheduleFSCH.ValDCSG)
}
inline ::generationmodule::GenerationCSG* GenerationControlScheduleFSCH::release_valdcsg() {
  
  ::generationmodule::GenerationCSG* temp = valdcsg_;
  valdcsg_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::generationmodule::GenerationCSG* GenerationControlScheduleFSCH::unsafe_arena_release_valdcsg() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationControlScheduleFSCH.ValDCSG)
  
  ::generationmodule::GenerationCSG* temp = valdcsg_;
  valdcsg_ = nullptr;
  return temp;
}
inline ::generationmodule::GenerationCSG* GenerationControlScheduleFSCH::_internal_mutable_valdcsg() {
  
  if (valdcsg_ == nullptr) {
    auto* p = CreateMaybeMessage<::generationmodule::GenerationCSG>(GetArena());
    valdcsg_ = p;
  }
  return valdcsg_;
}
inline ::generationmodule::GenerationCSG* GenerationControlScheduleFSCH::mutable_valdcsg() {
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationControlScheduleFSCH.ValDCSG)
  return _internal_mutable_valdcsg();
}
inline void GenerationControlScheduleFSCH::set_allocated_valdcsg(::generationmodule::GenerationCSG* valdcsg) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete valdcsg_;
  }
  if (valdcsg) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(valdcsg);
    if (message_arena != submessage_arena) {
      valdcsg = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, valdcsg, submessage_arena);
    }
    
  } else {
    
  }
  valdcsg_ = valdcsg;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationControlScheduleFSCH.ValDCSG)
}

// -------------------------------------------------------------------

// GenerationControlFSCC

// .commonmodule.ControlFSCC controlFSCC = 1 [(.uml.option_parent_message) = true];
inline bool GenerationControlFSCC::_internal_has_controlfscc() const {
  return this != internal_default_instance() && controlfscc_ != nullptr;
}
inline bool GenerationControlFSCC::has_controlfscc() const {
  return _internal_has_controlfscc();
}
inline const ::commonmodule::ControlFSCC& GenerationControlFSCC::_internal_controlfscc() const {
  const ::commonmodule::ControlFSCC* p = controlfscc_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::ControlFSCC&>(
      ::commonmodule::_ControlFSCC_default_instance_);
}
inline const ::commonmodule::ControlFSCC& GenerationControlFSCC::controlfscc() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationControlFSCC.controlFSCC)
  return _internal_controlfscc();
}
inline void GenerationControlFSCC::unsafe_arena_set_allocated_controlfscc(
    ::commonmodule::ControlFSCC* controlfscc) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(controlfscc_);
  }
  controlfscc_ = controlfscc;
  if (controlfscc) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationControlFSCC.controlFSCC)
}
inline ::commonmodule::ControlFSCC* GenerationControlFSCC::release_controlfscc() {
  
  ::commonmodule::ControlFSCC* temp = controlfscc_;
  controlfscc_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::commonmodule::ControlFSCC* GenerationControlFSCC::unsafe_arena_release_controlfscc() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationControlFSCC.controlFSCC)
  
  ::commonmodule::ControlFSCC* temp = controlfscc_;
  controlfscc_ = nullptr;
  return temp;
}
inline ::commonmodule::ControlFSCC* GenerationControlFSCC::_internal_mutable_controlfscc() {
  
  if (controlfscc_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::ControlFSCC>(GetArena());
    controlfscc_ = p;
  }
  return controlfscc_;
}
inline ::commonmodule::ControlFSCC* GenerationControlFSCC::mutable_controlfscc() {
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationControlFSCC.controlFSCC)
  return _internal_mutable_controlfscc();
}
inline void GenerationControlFSCC::set_allocated_controlfscc(::commonmodule::ControlFSCC* controlfscc) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(controlfscc_);
  }
  if (controlfscc) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(controlfscc)->GetArena();
    if (message_arena != submessage_arena) {
      controlfscc = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, controlfscc, submessage_arena);
    }
    
  } else {
    
  }
  controlfscc_ = controlfscc;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationControlFSCC.controlFSCC)
}

// .generationmodule.GenerationControlScheduleFSCH GenerationControlScheduleFSCH = 2;
inline bool GenerationControlFSCC::_internal_has_generationcontrolschedulefsch() const {
  return this != internal_default_instance() && generationcontrolschedulefsch_ != nullptr;
}
inline bool GenerationControlFSCC::has_generationcontrolschedulefsch() const {
  return _internal_has_generationcontrolschedulefsch();
}
inline void GenerationControlFSCC::clear_generationcontrolschedulefsch() {
  if (GetArena() == nullptr && generationcontrolschedulefsch_ != nullptr) {
    delete generationcontrolschedulefsch_;
  }
  generationcontrolschedulefsch_ = nullptr;
}
inline const ::generationmodule::GenerationControlScheduleFSCH& GenerationControlFSCC::_internal_generationcontrolschedulefsch() const {
  const ::generationmodule::GenerationControlScheduleFSCH* p = generationcontrolschedulefsch_;
  return p != nullptr ? *p : reinterpret_cast<const ::generationmodule::GenerationControlScheduleFSCH&>(
      ::generationmodule::_GenerationControlScheduleFSCH_default_instance_);
}
inline const ::generationmodule::GenerationControlScheduleFSCH& GenerationControlFSCC::generationcontrolschedulefsch() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationControlFSCC.GenerationControlScheduleFSCH)
  return _internal_generationcontrolschedulefsch();
}
inline void GenerationControlFSCC::unsafe_arena_set_allocated_generationcontrolschedulefsch(
    ::generationmodule::GenerationControlScheduleFSCH* generationcontrolschedulefsch) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(generationcontrolschedulefsch_);
  }
  generationcontrolschedulefsch_ = generationcontrolschedulefsch;
  if (generationcontrolschedulefsch) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationControlFSCC.GenerationControlScheduleFSCH)
}
inline ::generationmodule::GenerationControlScheduleFSCH* GenerationControlFSCC::release_generationcontrolschedulefsch() {
  
  ::generationmodule::GenerationControlScheduleFSCH* temp = generationcontrolschedulefsch_;
  generationcontrolschedulefsch_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::generationmodule::GenerationControlScheduleFSCH* GenerationControlFSCC::unsafe_arena_release_generationcontrolschedulefsch() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationControlFSCC.GenerationControlScheduleFSCH)
  
  ::generationmodule::GenerationControlScheduleFSCH* temp = generationcontrolschedulefsch_;
  generationcontrolschedulefsch_ = nullptr;
  return temp;
}
inline ::generationmodule::GenerationControlScheduleFSCH* GenerationControlFSCC::_internal_mutable_generationcontrolschedulefsch() {
  
  if (generationcontrolschedulefsch_ == nullptr) {
    auto* p = CreateMaybeMessage<::generationmodule::GenerationControlScheduleFSCH>(GetArena());
    generationcontrolschedulefsch_ = p;
  }
  return generationcontrolschedulefsch_;
}
inline ::generationmodule::GenerationControlScheduleFSCH* GenerationControlFSCC::mutable_generationcontrolschedulefsch() {
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationControlFSCC.GenerationControlScheduleFSCH)
  return _internal_mutable_generationcontrolschedulefsch();
}
inline void GenerationControlFSCC::set_allocated_generationcontrolschedulefsch(::generationmodule::GenerationControlScheduleFSCH* generationcontrolschedulefsch) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete generationcontrolschedulefsch_;
  }
  if (generationcontrolschedulefsch) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(generationcontrolschedulefsch);
    if (message_arena != submessage_arena) {
      generationcontrolschedulefsch = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, generationcontrolschedulefsch, submessage_arena);
    }
    
  } else {
    
  }
  generationcontrolschedulefsch_ = generationcontrolschedulefsch;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationControlFSCC.GenerationControlScheduleFSCH)
}

// -------------------------------------------------------------------

// GenerationControl

// .commonmodule.ControlValue controlValue = 1 [(.uml.option_parent_message) = true];
inline bool GenerationControl::_internal_has_controlvalue() const {
  return this != internal_default_instance() && controlvalue_ != nullptr;
}
inline bool GenerationControl::has_controlvalue() const {
  return _internal_has_controlvalue();
}
inline const ::commonmodule::ControlValue& GenerationControl::_internal_controlvalue() const {
  const ::commonmodule::ControlValue* p = controlvalue_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::ControlValue&>(
      ::commonmodule::_ControlValue_default_instance_);
}
inline const ::commonmodule::ControlValue& GenerationControl::controlvalue() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationControl.controlValue)
  return _internal_controlvalue();
}
inline void GenerationControl::unsafe_arena_set_allocated_controlvalue(
    ::commonmodule::ControlValue* controlvalue) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(controlvalue_);
  }
  controlvalue_ = controlvalue;
  if (controlvalue) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationControl.controlValue)
}
inline ::commonmodule::ControlValue* GenerationControl::release_controlvalue() {
  
  ::commonmodule::ControlValue* temp = controlvalue_;
  controlvalue_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::commonmodule::ControlValue* GenerationControl::unsafe_arena_release_controlvalue() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationControl.controlValue)
  
  ::commonmodule::ControlValue* temp = controlvalue_;
  controlvalue_ = nullptr;
  return temp;
}
inline ::commonmodule::ControlValue* GenerationControl::_internal_mutable_controlvalue() {
  
  if (controlvalue_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::ControlValue>(GetArena());
    controlvalue_ = p;
  }
  return controlvalue_;
}
inline ::commonmodule::ControlValue* GenerationControl::mutable_controlvalue() {
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationControl.controlValue)
  return _internal_mutable_controlvalue();
}
inline void GenerationControl::set_allocated_controlvalue(::commonmodule::ControlValue* controlvalue) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(controlvalue_);
  }
  if (controlvalue) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(controlvalue)->GetArena();
    if (message_arena != submessage_arena) {
      controlvalue = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, controlvalue, submessage_arena);
    }
    
  } else {
    
  }
  controlvalue_ = controlvalue;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationControl.controlValue)
}

// .commonmodule.CheckConditions check = 2;
inline bool GenerationControl::_internal_has_check() const {
  return this != internal_default_instance() && check_ != nullptr;
}
inline bool GenerationControl::has_check() const {
  return _internal_has_check();
}
inline const ::commonmodule::CheckConditions& GenerationControl::_internal_check() const {
  const ::commonmodule::CheckConditions* p = check_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::CheckConditions&>(
      ::commonmodule::_CheckConditions_default_instance_);
}
inline const ::commonmodule::CheckConditions& GenerationControl::check() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationControl.check)
  return _internal_check();
}
inline void GenerationControl::unsafe_arena_set_allocated_check(
    ::commonmodule::CheckConditions* check) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(check_);
  }
  check_ = check;
  if (check) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationControl.check)
}
inline ::commonmodule::CheckConditions* GenerationControl::release_check() {
  
  ::commonmodule::CheckConditions* temp = check_;
  check_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::commonmodule::CheckConditions* GenerationControl::unsafe_arena_release_check() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationControl.check)
  
  ::commonmodule::CheckConditions* temp = check_;
  check_ = nullptr;
  return temp;
}
inline ::commonmodule::CheckConditions* GenerationControl::_internal_mutable_check() {
  
  if (check_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::CheckConditions>(GetArena());
    check_ = p;
  }
  return check_;
}
inline ::commonmodule::CheckConditions* GenerationControl::mutable_check() {
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationControl.check)
  return _internal_mutable_check();
}
inline void GenerationControl::set_allocated_check(::commonmodule::CheckConditions* check) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(check_);
  }
  if (check) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(check)->GetArena();
    if (message_arena != submessage_arena) {
      check = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, check, submessage_arena);
    }
    
  } else {
    
  }
  check_ = check;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationControl.check)
}

// .generationmodule.GenerationControlFSCC generationControlFSCC = 3;
inline bool GenerationControl::_internal_has_generationcontrolfscc() const {
  return this != internal_default_instance() && generationcontrolfscc_ != nullptr;
}
inline bool GenerationControl::has_generationcontrolfscc() const {
  return _internal_has_generationcontrolfscc();
}
inline void GenerationControl::clear_generationcontrolfscc() {
  if (GetArena() == nullptr && generationcontrolfscc_ != nullptr) {
    delete generationcontrolfscc_;
  }
  generationcontrolfscc_ = nullptr;
}
inline const ::generationmodule::GenerationControlFSCC& GenerationControl::_internal_generationcontrolfscc() const {
  const ::generationmodule::GenerationControlFSCC* p = generationcontrolfscc_;
  return p != nullptr ? *p : reinterpret_cast<const ::generationmodule::GenerationControlFSCC&>(
      ::generationmodule::_GenerationControlFSCC_default_instance_);
}
inline const ::generationmodule::GenerationControlFSCC& GenerationControl::generationcontrolfscc() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationControl.generationControlFSCC)
  return _internal_generationcontrolfscc();
}
inline void GenerationControl::unsafe_arena_set_allocated_generationcontrolfscc(
    ::generationmodule::GenerationControlFSCC* generationcontrolfscc) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(generationcontrolfscc_);
  }
  generationcontrolfscc_ = generationcontrolfscc;
  if (generationcontrolfscc) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationControl.generationControlFSCC)
}
inline ::generationmodule::GenerationControlFSCC* GenerationControl::release_generationcontrolfscc() {
  
  ::generationmodule::GenerationControlFSCC* temp = generationcontrolfscc_;
  generationcontrolfscc_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::generationmodule::GenerationControlFSCC* GenerationControl::unsafe_arena_release_generationcontrolfscc() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationControl.generationControlFSCC)
  
  ::generationmodule::GenerationControlFSCC* temp = generationcontrolfscc_;
  generationcontrolfscc_ = nullptr;
  return temp;
}
inline ::generationmodule::GenerationControlFSCC* GenerationControl::_internal_mutable_generationcontrolfscc() {
  
  if (generationcontrolfscc_ == nullptr) {
    auto* p = CreateMaybeMessage<::generationmodule::GenerationControlFSCC>(GetArena());
    generationcontrolfscc_ = p;
  }
  return generationcontrolfscc_;
}
inline ::generationmodule::GenerationControlFSCC* GenerationControl::mutable_generationcontrolfscc() {
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationControl.generationControlFSCC)
  return _internal_mutable_generationcontrolfscc();
}
inline void GenerationControl::set_allocated_generationcontrolfscc(::generationmodule::GenerationControlFSCC* generationcontrolfscc) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete generationcontrolfscc_;
  }
  if (generationcontrolfscc) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(generationcontrolfscc);
    if (message_arena != submessage_arena) {
      generationcontrolfscc = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, generationcontrolfscc, submessage_arena);
    }
    
  } else {
    
  }
  generationcontrolfscc_ = generationcontrolfscc;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationControl.generationControlFSCC)
}

// -------------------------------------------------------------------

// GeneratingUnit

// .commonmodule.ConductingEquipment conductingEquipment = 1 [(.uml.option_parent_message) = true];
inline bool GeneratingUnit::_internal_has_conductingequipment() const {
  return this != internal_default_instance() && conductingequipment_ != nullptr;
}
inline bool GeneratingUnit::has_conductingequipment() const {
  return _internal_has_conductingequipment();
}
inline const ::commonmodule::ConductingEquipment& GeneratingUnit::_internal_conductingequipment() const {
  const ::commonmodule::ConductingEquipment* p = conductingequipment_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::ConductingEquipment&>(
      ::commonmodule::_ConductingEquipment_default_instance_);
}
inline const ::commonmodule::ConductingEquipment& GeneratingUnit::conductingequipment() const {
  // @@protoc_insertion_point(field_get:generationmodule.GeneratingUnit.conductingEquipment)
  return _internal_conductingequipment();
}
inline void GeneratingUnit::unsafe_arena_set_allocated_conductingequipment(
    ::commonmodule::ConductingEquipment* conductingequipment) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(conductingequipment_);
  }
  conductingequipment_ = conductingequipment;
  if (conductingequipment) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GeneratingUnit.conductingEquipment)
}
inline ::commonmodule::ConductingEquipment* GeneratingUnit::release_conductingequipment() {
  
  ::commonmodule::ConductingEquipment* temp = conductingequipment_;
  conductingequipment_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::commonmodule::ConductingEquipment* GeneratingUnit::unsafe_arena_release_conductingequipment() {
  // @@protoc_insertion_point(field_release:generationmodule.GeneratingUnit.conductingEquipment)
  
  ::commonmodule::ConductingEquipment* temp = conductingequipment_;
  conductingequipment_ = nullptr;
  return temp;
}
inline ::commonmodule::ConductingEquipment* GeneratingUnit::_internal_mutable_conductingequipment() {
  
  if (conductingequipment_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::ConductingEquipment>(GetArena());
    conductingequipment_ = p;
  }
  return conductingequipment_;
}
inline ::commonmodule::ConductingEquipment* GeneratingUnit::mutable_conductingequipment() {
  // @@protoc_insertion_point(field_mutable:generationmodule.GeneratingUnit.conductingEquipment)
  return _internal_mutable_conductingequipment();
}
inline void GeneratingUnit::set_allocated_conductingequipment(::commonmodule::ConductingEquipment* conductingequipment) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(conductingequipment_);
  }
  if (conductingequipment) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(conductingequipment)->GetArena();
    if (message_arena != submessage_arena) {
      conductingequipment = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, conductingequipment, submessage_arena);
    }
    
  } else {
    
  }
  conductingequipment_ = conductingequipment;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GeneratingUnit.conductingEquipment)
}

// .commonmodule.ActivePower maxOperatingP = 2;
inline bool GeneratingUnit::_internal_has_maxoperatingp() const {
  return this != internal_default_instance() && maxoperatingp_ != nullptr;
}
inline bool GeneratingUnit::has_maxoperatingp() const {
  return _internal_has_maxoperatingp();
}
inline const ::commonmodule::ActivePower& GeneratingUnit::_internal_maxoperatingp() const {
  const ::commonmodule::ActivePower* p = maxoperatingp_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::ActivePower&>(
      ::commonmodule::_ActivePower_default_instance_);
}
inline const ::commonmodule::ActivePower& GeneratingUnit::maxoperatingp() const {
  // @@protoc_insertion_point(field_get:generationmodule.GeneratingUnit.maxOperatingP)
  return _internal_maxoperatingp();
}
inline void GeneratingUnit::unsafe_arena_set_allocated_maxoperatingp(
    ::commonmodule::ActivePower* maxoperatingp) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(maxoperatingp_);
  }
  maxoperatingp_ = maxoperatingp;
  if (maxoperatingp) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GeneratingUnit.maxOperatingP)
}
inline ::commonmodule::ActivePower* GeneratingUnit::release_maxoperatingp() {
  
  ::commonmodule::ActivePower* temp = maxoperatingp_;
  maxoperatingp_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::commonmodule::ActivePower* GeneratingUnit::unsafe_arena_release_maxoperatingp() {
  // @@protoc_insertion_point(field_release:generationmodule.GeneratingUnit.maxOperatingP)
  
  ::commonmodule::ActivePower* temp = maxoperatingp_;
  maxoperatingp_ = nullptr;
  return temp;
}
inline ::commonmodule::ActivePower* GeneratingUnit::_internal_mutable_maxoperatingp() {
  
  if (maxoperatingp_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::ActivePower>(GetArena());
    maxoperatingp_ = p;
  }
  return maxoperatingp_;
}
inline ::commonmodule::ActivePower* GeneratingUnit::mutable_maxoperatingp() {
  // @@protoc_insertion_point(field_mutable:generationmodule.GeneratingUnit.maxOperatingP)
  return _internal_mutable_maxoperatingp();
}
inline void GeneratingUnit::set_allocated_maxoperatingp(::commonmodule::ActivePower* maxoperatingp) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(maxoperatingp_);
  }
  if (maxoperatingp) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(maxoperatingp)->GetArena();
    if (message_arena != submessage_arena) {
      maxoperatingp = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, maxoperatingp, submessage_arena);
    }
    
  } else {
    
  }
  maxoperatingp_ = maxoperatingp;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GeneratingUnit.maxOperatingP)
}

// -------------------------------------------------------------------

// GenerationControlProfile

// .commonmodule.ControlMessageInfo controlMessageInfo = 1 [(.uml.option_parent_message) = true];
inline bool GenerationControlProfile::_internal_has_controlmessageinfo() const {
  return this != internal_default_instance() && controlmessageinfo_ != nullptr;
}
inline bool GenerationControlProfile::has_controlmessageinfo() const {
  return _internal_has_controlmessageinfo();
}
inline const ::commonmodule::ControlMessageInfo& GenerationControlProfile::_internal_controlmessageinfo() const {
  const ::commonmodule::ControlMessageInfo* p = controlmessageinfo_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::ControlMessageInfo&>(
      ::commonmodule::_ControlMessageInfo_default_instance_);
}
inline const ::commonmodule::ControlMessageInfo& GenerationControlProfile::controlmessageinfo() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationControlProfile.controlMessageInfo)
  return _internal_controlmessageinfo();
}
inline void GenerationControlProfile::unsafe_arena_set_allocated_controlmessageinfo(
    ::commonmodule::ControlMessageInfo* controlmessageinfo) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(controlmessageinfo_);
  }
  controlmessageinfo_ = controlmessageinfo;
  if (controlmessageinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationControlProfile.controlMessageInfo)
}
inline ::commonmodule::ControlMessageInfo* GenerationControlProfile::release_controlmessageinfo() {
  
  ::commonmodule::ControlMessageInfo* temp = controlmessageinfo_;
  controlmessageinfo_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::commonmodule::ControlMessageInfo* GenerationControlProfile::unsafe_arena_release_controlmessageinfo() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationControlProfile.controlMessageInfo)
  
  ::commonmodule::ControlMessageInfo* temp = controlmessageinfo_;
  controlmessageinfo_ = nullptr;
  return temp;
}
inline ::commonmodule::ControlMessageInfo* GenerationControlProfile::_internal_mutable_controlmessageinfo() {
  
  if (controlmessageinfo_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::ControlMessageInfo>(GetArena());
    controlmessageinfo_ = p;
  }
  return controlmessageinfo_;
}
inline ::commonmodule::ControlMessageInfo* GenerationControlProfile::mutable_controlmessageinfo() {
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationControlProfile.controlMessageInfo)
  return _internal_mutable_controlmessageinfo();
}
inline void GenerationControlProfile::set_allocated_controlmessageinfo(::commonmodule::ControlMessageInfo* controlmessageinfo) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(controlmessageinfo_);
  }
  if (controlmessageinfo) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(controlmessageinfo)->GetArena();
    if (message_arena != submessage_arena) {
      controlmessageinfo = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, controlmessageinfo, submessage_arena);
    }
    
  } else {
    
  }
  controlmessageinfo_ = controlmessageinfo;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationControlProfile.controlMessageInfo)
}

// .generationmodule.GeneratingUnit generatingUnit = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
inline bool GenerationControlProfile::_internal_has_generatingunit() const {
  return this != internal_default_instance() && generatingunit_ != nullptr;
}
inline bool GenerationControlProfile::has_generatingunit() const {
  return _internal_has_generatingunit();
}
inline void GenerationControlProfile::clear_generatingunit() {
  if (GetArena() == nullptr && generatingunit_ != nullptr) {
    delete generatingunit_;
  }
  generatingunit_ = nullptr;
}
inline const ::generationmodule::GeneratingUnit& GenerationControlProfile::_internal_generatingunit() const {
  const ::generationmodule::GeneratingUnit* p = generatingunit_;
  return p != nullptr ? *p : reinterpret_cast<const ::generationmodule::GeneratingUnit&>(
      ::generationmodule::_GeneratingUnit_default_instance_);
}
inline const ::generationmodule::GeneratingUnit& GenerationControlProfile::generatingunit() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationControlProfile.generatingUnit)
  return _internal_generatingunit();
}
inline void GenerationControlProfile::unsafe_arena_set_allocated_generatingunit(
    ::generationmodule::GeneratingUnit* generatingunit) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(generatingunit_);
  }
  generatingunit_ = generatingunit;
  if (generatingunit) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationControlProfile.generatingUnit)
}
inline ::generationmodule::GeneratingUnit* GenerationControlProfile::release_generatingunit() {
  
  ::generationmodule::GeneratingUnit* temp = generatingunit_;
  generatingunit_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::generationmodule::GeneratingUnit* GenerationControlProfile::unsafe_arena_release_generatingunit() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationControlProfile.generatingUnit)
  
  ::generationmodule::GeneratingUnit* temp = generatingunit_;
  generatingunit_ = nullptr;
  return temp;
}
inline ::generationmodule::GeneratingUnit* GenerationControlProfile::_internal_mutable_generatingunit() {
  
  if (generatingunit_ == nullptr) {
    auto* p = CreateMaybeMessage<::generationmodule::GeneratingUnit>(GetArena());
    generatingunit_ = p;
  }
  return generatingunit_;
}
inline ::generationmodule::GeneratingUnit* GenerationControlProfile::mutable_generatingunit() {
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationControlProfile.generatingUnit)
  return _internal_mutable_generatingunit();
}
inline void GenerationControlProfile::set_allocated_generatingunit(::generationmodule::GeneratingUnit* generatingunit) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete generatingunit_;
  }
  if (generatingunit) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(generatingunit);
    if (message_arena != submessage_arena) {
      generatingunit = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, generatingunit, submessage_arena);
    }
    
  } else {
    
  }
  generatingunit_ = generatingunit;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationControlProfile.generatingUnit)
}

// .generationmodule.GenerationControl generationControl = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
inline bool GenerationControlProfile::_internal_has_generationcontrol() const {
  return this != internal_default_instance() && generationcontrol_ != nullptr;
}
inline bool GenerationControlProfile::has_generationcontrol() const {
  return _internal_has_generationcontrol();
}
inline void GenerationControlProfile::clear_generationcontrol() {
  if (GetArena() == nullptr && generationcontrol_ != nullptr) {
    delete generationcontrol_;
  }
  generationcontrol_ = nullptr;
}
inline const ::generationmodule::GenerationControl& GenerationControlProfile::_internal_generationcontrol() const {
  const ::generationmodule::GenerationControl* p = generationcontrol_;
  return p != nullptr ? *p : reinterpret_cast<const ::generationmodule::GenerationControl&>(
      ::generationmodule::_GenerationControl_default_instance_);
}
inline const ::generationmodule::GenerationControl& GenerationControlProfile::generationcontrol() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationControlProfile.generationControl)
  return _internal_generationcontrol();
}
inline void GenerationControlProfile::unsafe_arena_set_allocated_generationcontrol(
    ::generationmodule::GenerationControl* generationcontrol) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(generationcontrol_);
  }
  generationcontrol_ = generationcontrol;
  if (generationcontrol) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationControlProfile.generationControl)
}
inline ::generationmodule::GenerationControl* GenerationControlProfile::release_generationcontrol() {
  
  ::generationmodule::GenerationControl* temp = generationcontrol_;
  generationcontrol_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::generationmodule::GenerationControl* GenerationControlProfile::unsafe_arena_release_generationcontrol() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationControlProfile.generationControl)
  
  ::generationmodule::GenerationControl* temp = generationcontrol_;
  generationcontrol_ = nullptr;
  return temp;
}
inline ::generationmodule::GenerationControl* GenerationControlProfile::_internal_mutable_generationcontrol() {
  
  if (generationcontrol_ == nullptr) {
    auto* p = CreateMaybeMessage<::generationmodule::GenerationControl>(GetArena());
    generationcontrol_ = p;
  }
  return generationcontrol_;
}
inline ::generationmodule::GenerationControl* GenerationControlProfile::mutable_generationcontrol() {
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationControlProfile.generationControl)
  return _internal_mutable_generationcontrol();
}
inline void GenerationControlProfile::set_allocated_generationcontrol(::generationmodule::GenerationControl* generationcontrol) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete generationcontrol_;
  }
  if (generationcontrol) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(generationcontrol);
    if (message_arena != submessage_arena) {
      generationcontrol = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, generationcontrol, submessage_arena);
    }
    
  } else {
    
  }
  generationcontrol_ = generationcontrol;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationControlProfile.generationControl)
}

// -------------------------------------------------------------------

// DroopParameter

// .google.protobuf.FloatValue slope = 1;
inline bool DroopParameter::_internal_has_slope() const {
  return this != internal_default_instance() && slope_ != nullptr;
}
inline bool DroopParameter::has_slope() const {
  return _internal_has_slope();
}
inline const PROTOBUF_NAMESPACE_ID::FloatValue& DroopParameter::_internal_slope() const {
  const PROTOBUF_NAMESPACE_ID::FloatValue* p = slope_;
  return p != nullptr ? *p : reinterpret_cast<const PROTOBUF_NAMESPACE_ID::FloatValue&>(
      PROTOBUF_NAMESPACE_ID::_FloatValue_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::FloatValue& DroopParameter::slope() const {
  // @@protoc_insertion_point(field_get:generationmodule.DroopParameter.slope)
  return _internal_slope();
}
inline void DroopParameter::unsafe_arena_set_allocated_slope(
    PROTOBUF_NAMESPACE_ID::FloatValue* slope) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(slope_);
  }
  slope_ = slope;
  if (slope) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.DroopParameter.slope)
}
inline PROTOBUF_NAMESPACE_ID::FloatValue* DroopParameter::release_slope() {
  
  PROTOBUF_NAMESPACE_ID::FloatValue* temp = slope_;
  slope_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::FloatValue* DroopParameter::unsafe_arena_release_slope() {
  // @@protoc_insertion_point(field_release:generationmodule.DroopParameter.slope)
  
  PROTOBUF_NAMESPACE_ID::FloatValue* temp = slope_;
  slope_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::FloatValue* DroopParameter::_internal_mutable_slope() {
  
  if (slope_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::FloatValue>(GetArena());
    slope_ = p;
  }
  return slope_;
}
inline PROTOBUF_NAMESPACE_ID::FloatValue* DroopParameter::mutable_slope() {
  // @@protoc_insertion_point(field_mutable:generationmodule.DroopParameter.slope)
  return _internal_mutable_slope();
}
inline void DroopParameter::set_allocated_slope(PROTOBUF_NAMESPACE_ID::FloatValue* slope) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(slope_);
  }
  if (slope) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(slope)->GetArena();
    if (message_arena != submessage_arena) {
      slope = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, slope, submessage_arena);
    }
    
  } else {
    
  }
  slope_ = slope;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.DroopParameter.slope)
}

// .google.protobuf.FloatValue unloadedOffset = 2;
inline bool DroopParameter::_internal_has_unloadedoffset() const {
  return this != internal_default_instance() && unloadedoffset_ != nullptr;
}
inline bool DroopParameter::has_unloadedoffset() const {
  return _internal_has_unloadedoffset();
}
inline const PROTOBUF_NAMESPACE_ID::FloatValue& DroopParameter::_internal_unloadedoffset() const {
  const PROTOBUF_NAMESPACE_ID::FloatValue* p = unloadedoffset_;
  return p != nullptr ? *p : reinterpret_cast<const PROTOBUF_NAMESPACE_ID::FloatValue&>(
      PROTOBUF_NAMESPACE_ID::_FloatValue_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::FloatValue& DroopParameter::unloadedoffset() const {
  // @@protoc_insertion_point(field_get:generationmodule.DroopParameter.unloadedOffset)
  return _internal_unloadedoffset();
}
inline void DroopParameter::unsafe_arena_set_allocated_unloadedoffset(
    PROTOBUF_NAMESPACE_ID::FloatValue* unloadedoffset) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(unloadedoffset_);
  }
  unloadedoffset_ = unloadedoffset;
  if (unloadedoffset) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.DroopParameter.unloadedOffset)
}
inline PROTOBUF_NAMESPACE_ID::FloatValue* DroopParameter::release_unloadedoffset() {
  
  PROTOBUF_NAMESPACE_ID::FloatValue* temp = unloadedoffset_;
  unloadedoffset_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::FloatValue* DroopParameter::unsafe_arena_release_unloadedoffset() {
  // @@protoc_insertion_point(field_release:generationmodule.DroopParameter.unloadedOffset)
  
  PROTOBUF_NAMESPACE_ID::FloatValue* temp = unloadedoffset_;
  unloadedoffset_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::FloatValue* DroopParameter::_internal_mutable_unloadedoffset() {
  
  if (unloadedoffset_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::FloatValue>(GetArena());
    unloadedoffset_ = p;
  }
  return unloadedoffset_;
}
inline PROTOBUF_NAMESPACE_ID::FloatValue* DroopParameter::mutable_unloadedoffset() {
  // @@protoc_insertion_point(field_mutable:generationmodule.DroopParameter.unloadedOffset)
  return _internal_mutable_unloadedoffset();
}
inline void DroopParameter::set_allocated_unloadedoffset(PROTOBUF_NAMESPACE_ID::FloatValue* unloadedoffset) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(unloadedoffset_);
  }
  if (unloadedoffset) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(unloadedoffset)->GetArena();
    if (message_arena != submessage_arena) {
      unloadedoffset = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, unloadedoffset, submessage_arena);
    }
    
  } else {
    
  }
  unloadedoffset_ = unloadedoffset;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.DroopParameter.unloadedOffset)
}

// -------------------------------------------------------------------

// RealPowerControl

// .generationmodule.DroopParameter droopSetpoint = 1;
inline bool RealPowerControl::_internal_has_droopsetpoint() const {
  return this != internal_default_instance() && droopsetpoint_ != nullptr;
}
inline bool RealPowerControl::has_droopsetpoint() const {
  return _internal_has_droopsetpoint();
}
inline void RealPowerControl::clear_droopsetpoint() {
  if (GetArena() == nullptr && droopsetpoint_ != nullptr) {
    delete droopsetpoint_;
  }
  droopsetpoint_ = nullptr;
}
inline const ::generationmodule::DroopParameter& RealPowerControl::_internal_droopsetpoint() const {
  const ::generationmodule::DroopParameter* p = droopsetpoint_;
  return p != nullptr ? *p : reinterpret_cast<const ::generationmodule::DroopParameter&>(
      ::generationmodule::_DroopParameter_default_instance_);
}
inline const ::generationmodule::DroopParameter& RealPowerControl::droopsetpoint() const {
  // @@protoc_insertion_point(field_get:generationmodule.RealPowerControl.droopSetpoint)
  return _internal_droopsetpoint();
}
inline void RealPowerControl::unsafe_arena_set_allocated_droopsetpoint(
    ::generationmodule::DroopParameter* droopsetpoint) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(droopsetpoint_);
  }
  droopsetpoint_ = droopsetpoint;
  if (droopsetpoint) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.RealPowerControl.droopSetpoint)
}
inline ::generationmodule::DroopParameter* RealPowerControl::release_droopsetpoint() {
  
  ::generationmodule::DroopParameter* temp = droopsetpoint_;
  droopsetpoint_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::generationmodule::DroopParameter* RealPowerControl::unsafe_arena_release_droopsetpoint() {
  // @@protoc_insertion_point(field_release:generationmodule.RealPowerControl.droopSetpoint)
  
  ::generationmodule::DroopParameter* temp = droopsetpoint_;
  droopsetpoint_ = nullptr;
  return temp;
}
inline ::generationmodule::DroopParameter* RealPowerControl::_internal_mutable_droopsetpoint() {
  
  if (droopsetpoint_ == nullptr) {
    auto* p = CreateMaybeMessage<::generationmodule::DroopParameter>(GetArena());
    droopsetpoint_ = p;
  }
  return droopsetpoint_;
}
inline ::generationmodule::DroopParameter* RealPowerControl::mutable_droopsetpoint() {
  // @@protoc_insertion_point(field_mutable:generationmodule.RealPowerControl.droopSetpoint)
  return _internal_mutable_droopsetpoint();
}
inline void RealPowerControl::set_allocated_droopsetpoint(::generationmodule::DroopParameter* droopsetpoint) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete droopsetpoint_;
  }
  if (droopsetpoint) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(droopsetpoint);
    if (message_arena != submessage_arena) {
      droopsetpoint = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, droopsetpoint, submessage_arena);
    }
    
  } else {
    
  }
  droopsetpoint_ = droopsetpoint;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.RealPowerControl.droopSetpoint)
}

// .google.protobuf.FloatValue isochronousSetpoint = 2;
inline bool RealPowerControl::_internal_has_isochronoussetpoint() const {
  return this != internal_default_instance() && isochronoussetpoint_ != nullptr;
}
inline bool RealPowerControl::has_isochronoussetpoint() const {
  return _internal_has_isochronoussetpoint();
}
inline const PROTOBUF_NAMESPACE_ID::FloatValue& RealPowerControl::_internal_isochronoussetpoint() const {
  const PROTOBUF_NAMESPACE_ID::FloatValue* p = isochronoussetpoint_;
  return p != nullptr ? *p : reinterpret_cast<const PROTOBUF_NAMESPACE_ID::FloatValue&>(
      PROTOBUF_NAMESPACE_ID::_FloatValue_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::FloatValue& RealPowerControl::isochronoussetpoint() const {
  // @@protoc_insertion_point(field_get:generationmodule.RealPowerControl.isochronousSetpoint)
  return _internal_isochronoussetpoint();
}
inline void RealPowerControl::unsafe_arena_set_allocated_isochronoussetpoint(
    PROTOBUF_NAMESPACE_ID::FloatValue* isochronoussetpoint) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(isochronoussetpoint_);
  }
  isochronoussetpoint_ = isochronoussetpoint;
  if (isochronoussetpoint) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.RealPowerControl.isochronousSetpoint)
}
inline PROTOBUF_NAMESPACE_ID::FloatValue* RealPowerControl::release_isochronoussetpoint() {
  
  PROTOBUF_NAMESPACE_ID::FloatValue* temp = isochronoussetpoint_;
  isochronoussetpoint_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::FloatValue* RealPowerControl::unsafe_arena_release_isochronoussetpoint() {
  // @@protoc_insertion_point(field_release:generationmodule.RealPowerControl.isochronousSetpoint)
  
  PROTOBUF_NAMESPACE_ID::FloatValue* temp = isochronoussetpoint_;
  isochronoussetpoint_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::FloatValue* RealPowerControl::_internal_mutable_isochronoussetpoint() {
  
  if (isochronoussetpoint_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::FloatValue>(GetArena());
    isochronoussetpoint_ = p;
  }
  return isochronoussetpoint_;
}
inline PROTOBUF_NAMESPACE_ID::FloatValue* RealPowerControl::mutable_isochronoussetpoint() {
  // @@protoc_insertion_point(field_mutable:generationmodule.RealPowerControl.isochronousSetpoint)
  return _internal_mutable_isochronoussetpoint();
}
inline void RealPowerControl::set_allocated_isochronoussetpoint(PROTOBUF_NAMESPACE_ID::FloatValue* isochronoussetpoint) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(isochronoussetpoint_);
  }
  if (isochronoussetpoint) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(isochronoussetpoint)->GetArena();
    if (message_arena != submessage_arena) {
      isochronoussetpoint = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, isochronoussetpoint, submessage_arena);
    }
    
  } else {
    
  }
  isochronoussetpoint_ = isochronoussetpoint;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.RealPowerControl.isochronousSetpoint)
}

// .commonmodule.Optional_RealPowerControlKind realPowerControlMode = 3;
inline bool RealPowerControl::_internal_has_realpowercontrolmode() const {
  return this != internal_default_instance() && realpowercontrolmode_ != nullptr;
}
inline bool RealPowerControl::has_realpowercontrolmode() const {
  return _internal_has_realpowercontrolmode();
}
inline const ::commonmodule::Optional_RealPowerControlKind& RealPowerControl::_internal_realpowercontrolmode() const {
  const ::commonmodule::Optional_RealPowerControlKind* p = realpowercontrolmode_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::Optional_RealPowerControlKind&>(
      ::commonmodule::_Optional_RealPowerControlKind_default_instance_);
}
inline const ::commonmodule::Optional_RealPowerControlKind& RealPowerControl::realpowercontrolmode() const {
  // @@protoc_insertion_point(field_get:generationmodule.RealPowerControl.realPowerControlMode)
  return _internal_realpowercontrolmode();
}
inline void RealPowerControl::unsafe_arena_set_allocated_realpowercontrolmode(
    ::commonmodule::Optional_RealPowerControlKind* realpowercontrolmode) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(realpowercontrolmode_);
  }
  realpowercontrolmode_ = realpowercontrolmode;
  if (realpowercontrolmode) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.RealPowerControl.realPowerControlMode)
}
inline ::commonmodule::Optional_RealPowerControlKind* RealPowerControl::release_realpowercontrolmode() {
  
  ::commonmodule::Optional_RealPowerControlKind* temp = realpowercontrolmode_;
  realpowercontrolmode_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::commonmodule::Optional_RealPowerControlKind* RealPowerControl::unsafe_arena_release_realpowercontrolmode() {
  // @@protoc_insertion_point(field_release:generationmodule.RealPowerControl.realPowerControlMode)
  
  ::commonmodule::Optional_RealPowerControlKind* temp = realpowercontrolmode_;
  realpowercontrolmode_ = nullptr;
  return temp;
}
inline ::commonmodule::Optional_RealPowerControlKind* RealPowerControl::_internal_mutable_realpowercontrolmode() {
  
  if (realpowercontrolmode_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::Optional_RealPowerControlKind>(GetArena());
    realpowercontrolmode_ = p;
  }
  return realpowercontrolmode_;
}
inline ::commonmodule::Optional_RealPowerControlKind* RealPowerControl::mutable_realpowercontrolmode() {
  // @@protoc_insertion_point(field_mutable:generationmodule.RealPowerControl.realPowerControlMode)
  return _internal_mutable_realpowercontrolmode();
}
inline void RealPowerControl::set_allocated_realpowercontrolmode(::commonmodule::Optional_RealPowerControlKind* realpowercontrolmode) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(realpowercontrolmode_);
  }
  if (realpowercontrolmode) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(realpowercontrolmode)->GetArena();
    if (message_arena != submessage_arena) {
      realpowercontrolmode = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, realpowercontrolmode, submessage_arena);
    }
    
  } else {
    
  }
  realpowercontrolmode_ = realpowercontrolmode;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.RealPowerControl.realPowerControlMode)
}

// .google.protobuf.FloatValue realPowerSetpoint = 4;
inline bool RealPowerControl::_internal_has_realpowersetpoint() const {
  return this != internal_default_instance() && realpowersetpoint_ != nullptr;
}
inline bool RealPowerControl::has_realpowersetpoint() const {
  return _internal_has_realpowersetpoint();
}
inline const PROTOBUF_NAMESPACE_ID::FloatValue& RealPowerControl::_internal_realpowersetpoint() const {
  const PROTOBUF_NAMESPACE_ID::FloatValue* p = realpowersetpoint_;
  return p != nullptr ? *p : reinterpret_cast<const PROTOBUF_NAMESPACE_ID::FloatValue&>(
      PROTOBUF_NAMESPACE_ID::_FloatValue_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::FloatValue& RealPowerControl::realpowersetpoint() const {
  // @@protoc_insertion_point(field_get:generationmodule.RealPowerControl.realPowerSetpoint)
  return _internal_realpowersetpoint();
}
inline void RealPowerControl::unsafe_arena_set_allocated_realpowersetpoint(
    PROTOBUF_NAMESPACE_ID::FloatValue* realpowersetpoint) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(realpowersetpoint_);
  }
  realpowersetpoint_ = realpowersetpoint;
  if (realpowersetpoint) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.RealPowerControl.realPowerSetpoint)
}
inline PROTOBUF_NAMESPACE_ID::FloatValue* RealPowerControl::release_realpowersetpoint() {
  
  PROTOBUF_NAMESPACE_ID::FloatValue* temp = realpowersetpoint_;
  realpowersetpoint_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::FloatValue* RealPowerControl::unsafe_arena_release_realpowersetpoint() {
  // @@protoc_insertion_point(field_release:generationmodule.RealPowerControl.realPowerSetpoint)
  
  PROTOBUF_NAMESPACE_ID::FloatValue* temp = realpowersetpoint_;
  realpowersetpoint_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::FloatValue* RealPowerControl::_internal_mutable_realpowersetpoint() {
  
  if (realpowersetpoint_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::FloatValue>(GetArena());
    realpowersetpoint_ = p;
  }
  return realpowersetpoint_;
}
inline PROTOBUF_NAMESPACE_ID::FloatValue* RealPowerControl::mutable_realpowersetpoint() {
  // @@protoc_insertion_point(field_mutable:generationmodule.RealPowerControl.realPowerSetpoint)
  return _internal_mutable_realpowersetpoint();
}
inline void RealPowerControl::set_allocated_realpowersetpoint(PROTOBUF_NAMESPACE_ID::FloatValue* realpowersetpoint) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(realpowersetpoint_);
  }
  if (realpowersetpoint) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(realpowersetpoint)->GetArena();
    if (message_arena != submessage_arena) {
      realpowersetpoint = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, realpowersetpoint, submessage_arena);
    }
    
  } else {
    
  }
  realpowersetpoint_ = realpowersetpoint;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.RealPowerControl.realPowerSetpoint)
}

// -------------------------------------------------------------------

// ReactivePowerControl

// .generationmodule.DroopParameter droopSetpoint = 1;
inline bool ReactivePowerControl::_internal_has_droopsetpoint() const {
  return this != internal_default_instance() && droopsetpoint_ != nullptr;
}
inline bool ReactivePowerControl::has_droopsetpoint() const {
  return _internal_has_droopsetpoint();
}
inline void ReactivePowerControl::clear_droopsetpoint() {
  if (GetArena() == nullptr && droopsetpoint_ != nullptr) {
    delete droopsetpoint_;
  }
  droopsetpoint_ = nullptr;
}
inline const ::generationmodule::DroopParameter& ReactivePowerControl::_internal_droopsetpoint() const {
  const ::generationmodule::DroopParameter* p = droopsetpoint_;
  return p != nullptr ? *p : reinterpret_cast<const ::generationmodule::DroopParameter&>(
      ::generationmodule::_DroopParameter_default_instance_);
}
inline const ::generationmodule::DroopParameter& ReactivePowerControl::droopsetpoint() const {
  // @@protoc_insertion_point(field_get:generationmodule.ReactivePowerControl.droopSetpoint)
  return _internal_droopsetpoint();
}
inline void ReactivePowerControl::unsafe_arena_set_allocated_droopsetpoint(
    ::generationmodule::DroopParameter* droopsetpoint) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(droopsetpoint_);
  }
  droopsetpoint_ = droopsetpoint;
  if (droopsetpoint) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.ReactivePowerControl.droopSetpoint)
}
inline ::generationmodule::DroopParameter* ReactivePowerControl::release_droopsetpoint() {
  
  ::generationmodule::DroopParameter* temp = droopsetpoint_;
  droopsetpoint_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::generationmodule::DroopParameter* ReactivePowerControl::unsafe_arena_release_droopsetpoint() {
  // @@protoc_insertion_point(field_release:generationmodule.ReactivePowerControl.droopSetpoint)
  
  ::generationmodule::DroopParameter* temp = droopsetpoint_;
  droopsetpoint_ = nullptr;
  return temp;
}
inline ::generationmodule::DroopParameter* ReactivePowerControl::_internal_mutable_droopsetpoint() {
  
  if (droopsetpoint_ == nullptr) {
    auto* p = CreateMaybeMessage<::generationmodule::DroopParameter>(GetArena());
    droopsetpoint_ = p;
  }
  return droopsetpoint_;
}
inline ::generationmodule::DroopParameter* ReactivePowerControl::mutable_droopsetpoint() {
  // @@protoc_insertion_point(field_mutable:generationmodule.ReactivePowerControl.droopSetpoint)
  return _internal_mutable_droopsetpoint();
}
inline void ReactivePowerControl::set_allocated_droopsetpoint(::generationmodule::DroopParameter* droopsetpoint) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete droopsetpoint_;
  }
  if (droopsetpoint) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(droopsetpoint);
    if (message_arena != submessage_arena) {
      droopsetpoint = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, droopsetpoint, submessage_arena);
    }
    
  } else {
    
  }
  droopsetpoint_ = droopsetpoint;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.ReactivePowerControl.droopSetpoint)
}

// .google.protobuf.FloatValue powerFactorSetpoint = 2;
inline bool ReactivePowerControl::_internal_has_powerfactorsetpoint() const {
  return this != internal_default_instance() && powerfactorsetpoint_ != nullptr;
}
inline bool ReactivePowerControl::has_powerfactorsetpoint() const {
  return _internal_has_powerfactorsetpoint();
}
inline const PROTOBUF_NAMESPACE_ID::FloatValue& ReactivePowerControl::_internal_powerfactorsetpoint() const {
  const PROTOBUF_NAMESPACE_ID::FloatValue* p = powerfactorsetpoint_;
  return p != nullptr ? *p : reinterpret_cast<const PROTOBUF_NAMESPACE_ID::FloatValue&>(
      PROTOBUF_NAMESPACE_ID::_FloatValue_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::FloatValue& ReactivePowerControl::powerfactorsetpoint() const {
  // @@protoc_insertion_point(field_get:generationmodule.ReactivePowerControl.powerFactorSetpoint)
  return _internal_powerfactorsetpoint();
}
inline void ReactivePowerControl::unsafe_arena_set_allocated_powerfactorsetpoint(
    PROTOBUF_NAMESPACE_ID::FloatValue* powerfactorsetpoint) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(powerfactorsetpoint_);
  }
  powerfactorsetpoint_ = powerfactorsetpoint;
  if (powerfactorsetpoint) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.ReactivePowerControl.powerFactorSetpoint)
}
inline PROTOBUF_NAMESPACE_ID::FloatValue* ReactivePowerControl::release_powerfactorsetpoint() {
  
  PROTOBUF_NAMESPACE_ID::FloatValue* temp = powerfactorsetpoint_;
  powerfactorsetpoint_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::FloatValue* ReactivePowerControl::unsafe_arena_release_powerfactorsetpoint() {
  // @@protoc_insertion_point(field_release:generationmodule.ReactivePowerControl.powerFactorSetpoint)
  
  PROTOBUF_NAMESPACE_ID::FloatValue* temp = powerfactorsetpoint_;
  powerfactorsetpoint_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::FloatValue* ReactivePowerControl::_internal_mutable_powerfactorsetpoint() {
  
  if (powerfactorsetpoint_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::FloatValue>(GetArena());
    powerfactorsetpoint_ = p;
  }
  return powerfactorsetpoint_;
}
inline PROTOBUF_NAMESPACE_ID::FloatValue* ReactivePowerControl::mutable_powerfactorsetpoint() {
  // @@protoc_insertion_point(field_mutable:generationmodule.ReactivePowerControl.powerFactorSetpoint)
  return _internal_mutable_powerfactorsetpoint();
}
inline void ReactivePowerControl::set_allocated_powerfactorsetpoint(PROTOBUF_NAMESPACE_ID::FloatValue* powerfactorsetpoint) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(powerfactorsetpoint_);
  }
  if (powerfactorsetpoint) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(powerfactorsetpoint)->GetArena();
    if (message_arena != submessage_arena) {
      powerfactorsetpoint = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, powerfactorsetpoint, submessage_arena);
    }
    
  } else {
    
  }
  powerfactorsetpoint_ = powerfactorsetpoint;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.ReactivePowerControl.powerFactorSetpoint)
}

// .commonmodule.Optional_ReactivePowerControlKind reactivePowerControlMode = 3;
inline bool ReactivePowerControl::_internal_has_reactivepowercontrolmode() const {
  return this != internal_default_instance() && reactivepowercontrolmode_ != nullptr;
}
inline bool ReactivePowerControl::has_reactivepowercontrolmode() const {
  return _internal_has_reactivepowercontrolmode();
}
inline const ::commonmodule::Optional_ReactivePowerControlKind& ReactivePowerControl::_internal_reactivepowercontrolmode() const {
  const ::commonmodule::Optional_ReactivePowerControlKind* p = reactivepowercontrolmode_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::Optional_ReactivePowerControlKind&>(
      ::commonmodule::_Optional_ReactivePowerControlKind_default_instance_);
}
inline const ::commonmodule::Optional_ReactivePowerControlKind& ReactivePowerControl::reactivepowercontrolmode() const {
  // @@protoc_insertion_point(field_get:generationmodule.ReactivePowerControl.reactivePowerControlMode)
  return _internal_reactivepowercontrolmode();
}
inline void ReactivePowerControl::unsafe_arena_set_allocated_reactivepowercontrolmode(
    ::commonmodule::Optional_ReactivePowerControlKind* reactivepowercontrolmode) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(reactivepowercontrolmode_);
  }
  reactivepowercontrolmode_ = reactivepowercontrolmode;
  if (reactivepowercontrolmode) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.ReactivePowerControl.reactivePowerControlMode)
}
inline ::commonmodule::Optional_ReactivePowerControlKind* ReactivePowerControl::release_reactivepowercontrolmode() {
  
  ::commonmodule::Optional_ReactivePowerControlKind* temp = reactivepowercontrolmode_;
  reactivepowercontrolmode_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::commonmodule::Optional_ReactivePowerControlKind* ReactivePowerControl::unsafe_arena_release_reactivepowercontrolmode() {
  // @@protoc_insertion_point(field_release:generationmodule.ReactivePowerControl.reactivePowerControlMode)
  
  ::commonmodule::Optional_ReactivePowerControlKind* temp = reactivepowercontrolmode_;
  reactivepowercontrolmode_ = nullptr;
  return temp;
}
inline ::commonmodule::Optional_ReactivePowerControlKind* ReactivePowerControl::_internal_mutable_reactivepowercontrolmode() {
  
  if (reactivepowercontrolmode_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::Optional_ReactivePowerControlKind>(GetArena());
    reactivepowercontrolmode_ = p;
  }
  return reactivepowercontrolmode_;
}
inline ::commonmodule::Optional_ReactivePowerControlKind* ReactivePowerControl::mutable_reactivepowercontrolmode() {
  // @@protoc_insertion_point(field_mutable:generationmodule.ReactivePowerControl.reactivePowerControlMode)
  return _internal_mutable_reactivepowercontrolmode();
}
inline void ReactivePowerControl::set_allocated_reactivepowercontrolmode(::commonmodule::Optional_ReactivePowerControlKind* reactivepowercontrolmode) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(reactivepowercontrolmode_);
  }
  if (reactivepowercontrolmode) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(reactivepowercontrolmode)->GetArena();
    if (message_arena != submessage_arena) {
      reactivepowercontrolmode = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, reactivepowercontrolmode, submessage_arena);
    }
    
  } else {
    
  }
  reactivepowercontrolmode_ = reactivepowercontrolmode;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.ReactivePowerControl.reactivePowerControlMode)
}

// .google.protobuf.FloatValue reactivePowerSetpoint = 4;
inline bool ReactivePowerControl::_internal_has_reactivepowersetpoint() const {
  return this != internal_default_instance() && reactivepowersetpoint_ != nullptr;
}
inline bool ReactivePowerControl::has_reactivepowersetpoint() const {
  return _internal_has_reactivepowersetpoint();
}
inline const PROTOBUF_NAMESPACE_ID::FloatValue& ReactivePowerControl::_internal_reactivepowersetpoint() const {
  const PROTOBUF_NAMESPACE_ID::FloatValue* p = reactivepowersetpoint_;
  return p != nullptr ? *p : reinterpret_cast<const PROTOBUF_NAMESPACE_ID::FloatValue&>(
      PROTOBUF_NAMESPACE_ID::_FloatValue_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::FloatValue& ReactivePowerControl::reactivepowersetpoint() const {
  // @@protoc_insertion_point(field_get:generationmodule.ReactivePowerControl.reactivePowerSetpoint)
  return _internal_reactivepowersetpoint();
}
inline void ReactivePowerControl::unsafe_arena_set_allocated_reactivepowersetpoint(
    PROTOBUF_NAMESPACE_ID::FloatValue* reactivepowersetpoint) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(reactivepowersetpoint_);
  }
  reactivepowersetpoint_ = reactivepowersetpoint;
  if (reactivepowersetpoint) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.ReactivePowerControl.reactivePowerSetpoint)
}
inline PROTOBUF_NAMESPACE_ID::FloatValue* ReactivePowerControl::release_reactivepowersetpoint() {
  
  PROTOBUF_NAMESPACE_ID::FloatValue* temp = reactivepowersetpoint_;
  reactivepowersetpoint_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::FloatValue* ReactivePowerControl::unsafe_arena_release_reactivepowersetpoint() {
  // @@protoc_insertion_point(field_release:generationmodule.ReactivePowerControl.reactivePowerSetpoint)
  
  PROTOBUF_NAMESPACE_ID::FloatValue* temp = reactivepowersetpoint_;
  reactivepowersetpoint_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::FloatValue* ReactivePowerControl::_internal_mutable_reactivepowersetpoint() {
  
  if (reactivepowersetpoint_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::FloatValue>(GetArena());
    reactivepowersetpoint_ = p;
  }
  return reactivepowersetpoint_;
}
inline PROTOBUF_NAMESPACE_ID::FloatValue* ReactivePowerControl::mutable_reactivepowersetpoint() {
  // @@protoc_insertion_point(field_mutable:generationmodule.ReactivePowerControl.reactivePowerSetpoint)
  return _internal_mutable_reactivepowersetpoint();
}
inline void ReactivePowerControl::set_allocated_reactivepowersetpoint(PROTOBUF_NAMESPACE_ID::FloatValue* reactivepowersetpoint) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(reactivepowersetpoint_);
  }
  if (reactivepowersetpoint) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(reactivepowersetpoint)->GetArena();
    if (message_arena != submessage_arena) {
      reactivepowersetpoint = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, reactivepowersetpoint, submessage_arena);
    }
    
  } else {
    
  }
  reactivepowersetpoint_ = reactivepowersetpoint;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.ReactivePowerControl.reactivePowerSetpoint)
}

// .google.protobuf.FloatValue voltageSetpoint = 5;
inline bool ReactivePowerControl::_internal_has_voltagesetpoint() const {
  return this != internal_default_instance() && voltagesetpoint_ != nullptr;
}
inline bool ReactivePowerControl::has_voltagesetpoint() const {
  return _internal_has_voltagesetpoint();
}
inline const PROTOBUF_NAMESPACE_ID::FloatValue& ReactivePowerControl::_internal_voltagesetpoint() const {
  const PROTOBUF_NAMESPACE_ID::FloatValue* p = voltagesetpoint_;
  return p != nullptr ? *p : reinterpret_cast<const PROTOBUF_NAMESPACE_ID::FloatValue&>(
      PROTOBUF_NAMESPACE_ID::_FloatValue_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::FloatValue& ReactivePowerControl::voltagesetpoint() const {
  // @@protoc_insertion_point(field_get:generationmodule.ReactivePowerControl.voltageSetpoint)
  return _internal_voltagesetpoint();
}
inline void ReactivePowerControl::unsafe_arena_set_allocated_voltagesetpoint(
    PROTOBUF_NAMESPACE_ID::FloatValue* voltagesetpoint) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(voltagesetpoint_);
  }
  voltagesetpoint_ = voltagesetpoint;
  if (voltagesetpoint) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.ReactivePowerControl.voltageSetpoint)
}
inline PROTOBUF_NAMESPACE_ID::FloatValue* ReactivePowerControl::release_voltagesetpoint() {
  
  PROTOBUF_NAMESPACE_ID::FloatValue* temp = voltagesetpoint_;
  voltagesetpoint_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::FloatValue* ReactivePowerControl::unsafe_arena_release_voltagesetpoint() {
  // @@protoc_insertion_point(field_release:generationmodule.ReactivePowerControl.voltageSetpoint)
  
  PROTOBUF_NAMESPACE_ID::FloatValue* temp = voltagesetpoint_;
  voltagesetpoint_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::FloatValue* ReactivePowerControl::_internal_mutable_voltagesetpoint() {
  
  if (voltagesetpoint_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::FloatValue>(GetArena());
    voltagesetpoint_ = p;
  }
  return voltagesetpoint_;
}
inline PROTOBUF_NAMESPACE_ID::FloatValue* ReactivePowerControl::mutable_voltagesetpoint() {
  // @@protoc_insertion_point(field_mutable:generationmodule.ReactivePowerControl.voltageSetpoint)
  return _internal_mutable_voltagesetpoint();
}
inline void ReactivePowerControl::set_allocated_voltagesetpoint(PROTOBUF_NAMESPACE_ID::FloatValue* voltagesetpoint) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(voltagesetpoint_);
  }
  if (voltagesetpoint) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(voltagesetpoint)->GetArena();
    if (message_arena != submessage_arena) {
      voltagesetpoint = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, voltagesetpoint, submessage_arena);
    }
    
  } else {
    
  }
  voltagesetpoint_ = voltagesetpoint;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.ReactivePowerControl.voltageSetpoint)
}

// -------------------------------------------------------------------

// GenerationDiscreteControl

// .commonmodule.ControlValue controlValue = 1 [(.uml.option_parent_message) = true];
inline bool GenerationDiscreteControl::_internal_has_controlvalue() const {
  return this != internal_default_instance() && controlvalue_ != nullptr;
}
inline bool GenerationDiscreteControl::has_controlvalue() const {
  return _internal_has_controlvalue();
}
inline const ::commonmodule::ControlValue& GenerationDiscreteControl::_internal_controlvalue() const {
  const ::commonmodule::ControlValue* p = controlvalue_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::ControlValue&>(
      ::commonmodule::_ControlValue_default_instance_);
}
inline const ::commonmodule::ControlValue& GenerationDiscreteControl::controlvalue() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationDiscreteControl.controlValue)
  return _internal_controlvalue();
}
inline void GenerationDiscreteControl::unsafe_arena_set_allocated_controlvalue(
    ::commonmodule::ControlValue* controlvalue) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(controlvalue_);
  }
  controlvalue_ = controlvalue;
  if (controlvalue) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationDiscreteControl.controlValue)
}
inline ::commonmodule::ControlValue* GenerationDiscreteControl::release_controlvalue() {
  
  ::commonmodule::ControlValue* temp = controlvalue_;
  controlvalue_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::commonmodule::ControlValue* GenerationDiscreteControl::unsafe_arena_release_controlvalue() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationDiscreteControl.controlValue)
  
  ::commonmodule::ControlValue* temp = controlvalue_;
  controlvalue_ = nullptr;
  return temp;
}
inline ::commonmodule::ControlValue* GenerationDiscreteControl::_internal_mutable_controlvalue() {
  
  if (controlvalue_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::ControlValue>(GetArena());
    controlvalue_ = p;
  }
  return controlvalue_;
}
inline ::commonmodule::ControlValue* GenerationDiscreteControl::mutable_controlvalue() {
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationDiscreteControl.controlValue)
  return _internal_mutable_controlvalue();
}
inline void GenerationDiscreteControl::set_allocated_controlvalue(::commonmodule::ControlValue* controlvalue) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(controlvalue_);
  }
  if (controlvalue) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(controlvalue)->GetArena();
    if (message_arena != submessage_arena) {
      controlvalue = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, controlvalue, submessage_arena);
    }
    
  } else {
    
  }
  controlvalue_ = controlvalue;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationDiscreteControl.controlValue)
}

// .commonmodule.CheckConditions check = 2;
inline bool GenerationDiscreteControl::_internal_has_check() const {
  return this != internal_default_instance() && check_ != nullptr;
}
inline bool GenerationDiscreteControl::has_check() const {
  return _internal_has_check();
}
inline const ::commonmodule::CheckConditions& GenerationDiscreteControl::_internal_check() const {
  const ::commonmodule::CheckConditions* p = check_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::CheckConditions&>(
      ::commonmodule::_CheckConditions_default_instance_);
}
inline const ::commonmodule::CheckConditions& GenerationDiscreteControl::check() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationDiscreteControl.check)
  return _internal_check();
}
inline void GenerationDiscreteControl::unsafe_arena_set_allocated_check(
    ::commonmodule::CheckConditions* check) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(check_);
  }
  check_ = check;
  if (check) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationDiscreteControl.check)
}
inline ::commonmodule::CheckConditions* GenerationDiscreteControl::release_check() {
  
  ::commonmodule::CheckConditions* temp = check_;
  check_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::commonmodule::CheckConditions* GenerationDiscreteControl::unsafe_arena_release_check() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationDiscreteControl.check)
  
  ::commonmodule::CheckConditions* temp = check_;
  check_ = nullptr;
  return temp;
}
inline ::commonmodule::CheckConditions* GenerationDiscreteControl::_internal_mutable_check() {
  
  if (check_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::CheckConditions>(GetArena());
    check_ = p;
  }
  return check_;
}
inline ::commonmodule::CheckConditions* GenerationDiscreteControl::mutable_check() {
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationDiscreteControl.check)
  return _internal_mutable_check();
}
inline void GenerationDiscreteControl::set_allocated_check(::commonmodule::CheckConditions* check) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(check_);
  }
  if (check) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(check)->GetArena();
    if (message_arena != submessage_arena) {
      check = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, check, submessage_arena);
    }
    
  } else {
    
  }
  check_ = check;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationDiscreteControl.check)
}

// .generationmodule.ReactivePowerControl ReactivePowerControl = 3;
inline bool GenerationDiscreteControl::_internal_has_reactivepowercontrol() const {
  return this != internal_default_instance() && reactivepowercontrol_ != nullptr;
}
inline bool GenerationDiscreteControl::has_reactivepowercontrol() const {
  return _internal_has_reactivepowercontrol();
}
inline void GenerationDiscreteControl::clear_reactivepowercontrol() {
  if (GetArena() == nullptr && reactivepowercontrol_ != nullptr) {
    delete reactivepowercontrol_;
  }
  reactivepowercontrol_ = nullptr;
}
inline const ::generationmodule::ReactivePowerControl& GenerationDiscreteControl::_internal_reactivepowercontrol() const {
  const ::generationmodule::ReactivePowerControl* p = reactivepowercontrol_;
  return p != nullptr ? *p : reinterpret_cast<const ::generationmodule::ReactivePowerControl&>(
      ::generationmodule::_ReactivePowerControl_default_instance_);
}
inline const ::generationmodule::ReactivePowerControl& GenerationDiscreteControl::reactivepowercontrol() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationDiscreteControl.ReactivePowerControl)
  return _internal_reactivepowercontrol();
}
inline void GenerationDiscreteControl::unsafe_arena_set_allocated_reactivepowercontrol(
    ::generationmodule::ReactivePowerControl* reactivepowercontrol) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(reactivepowercontrol_);
  }
  reactivepowercontrol_ = reactivepowercontrol;
  if (reactivepowercontrol) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationDiscreteControl.ReactivePowerControl)
}
inline ::generationmodule::ReactivePowerControl* GenerationDiscreteControl::release_reactivepowercontrol() {
  
  ::generationmodule::ReactivePowerControl* temp = reactivepowercontrol_;
  reactivepowercontrol_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::generationmodule::ReactivePowerControl* GenerationDiscreteControl::unsafe_arena_release_reactivepowercontrol() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationDiscreteControl.ReactivePowerControl)
  
  ::generationmodule::ReactivePowerControl* temp = reactivepowercontrol_;
  reactivepowercontrol_ = nullptr;
  return temp;
}
inline ::generationmodule::ReactivePowerControl* GenerationDiscreteControl::_internal_mutable_reactivepowercontrol() {
  
  if (reactivepowercontrol_ == nullptr) {
    auto* p = CreateMaybeMessage<::generationmodule::ReactivePowerControl>(GetArena());
    reactivepowercontrol_ = p;
  }
  return reactivepowercontrol_;
}
inline ::generationmodule::ReactivePowerControl* GenerationDiscreteControl::mutable_reactivepowercontrol() {
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationDiscreteControl.ReactivePowerControl)
  return _internal_mutable_reactivepowercontrol();
}
inline void GenerationDiscreteControl::set_allocated_reactivepowercontrol(::generationmodule::ReactivePowerControl* reactivepowercontrol) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reactivepowercontrol_;
  }
  if (reactivepowercontrol) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(reactivepowercontrol);
    if (message_arena != submessage_arena) {
      reactivepowercontrol = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, reactivepowercontrol, submessage_arena);
    }
    
  } else {
    
  }
  reactivepowercontrol_ = reactivepowercontrol;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationDiscreteControl.ReactivePowerControl)
}

// .generationmodule.RealPowerControl RealPowerControl = 4;
inline bool GenerationDiscreteControl::_internal_has_realpowercontrol() const {
  return this != internal_default_instance() && realpowercontrol_ != nullptr;
}
inline bool GenerationDiscreteControl::has_realpowercontrol() const {
  return _internal_has_realpowercontrol();
}
inline void GenerationDiscreteControl::clear_realpowercontrol() {
  if (GetArena() == nullptr && realpowercontrol_ != nullptr) {
    delete realpowercontrol_;
  }
  realpowercontrol_ = nullptr;
}
inline const ::generationmodule::RealPowerControl& GenerationDiscreteControl::_internal_realpowercontrol() const {
  const ::generationmodule::RealPowerControl* p = realpowercontrol_;
  return p != nullptr ? *p : reinterpret_cast<const ::generationmodule::RealPowerControl&>(
      ::generationmodule::_RealPowerControl_default_instance_);
}
inline const ::generationmodule::RealPowerControl& GenerationDiscreteControl::realpowercontrol() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationDiscreteControl.RealPowerControl)
  return _internal_realpowercontrol();
}
inline void GenerationDiscreteControl::unsafe_arena_set_allocated_realpowercontrol(
    ::generationmodule::RealPowerControl* realpowercontrol) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(realpowercontrol_);
  }
  realpowercontrol_ = realpowercontrol;
  if (realpowercontrol) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationDiscreteControl.RealPowerControl)
}
inline ::generationmodule::RealPowerControl* GenerationDiscreteControl::release_realpowercontrol() {
  
  ::generationmodule::RealPowerControl* temp = realpowercontrol_;
  realpowercontrol_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::generationmodule::RealPowerControl* GenerationDiscreteControl::unsafe_arena_release_realpowercontrol() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationDiscreteControl.RealPowerControl)
  
  ::generationmodule::RealPowerControl* temp = realpowercontrol_;
  realpowercontrol_ = nullptr;
  return temp;
}
inline ::generationmodule::RealPowerControl* GenerationDiscreteControl::_internal_mutable_realpowercontrol() {
  
  if (realpowercontrol_ == nullptr) {
    auto* p = CreateMaybeMessage<::generationmodule::RealPowerControl>(GetArena());
    realpowercontrol_ = p;
  }
  return realpowercontrol_;
}
inline ::generationmodule::RealPowerControl* GenerationDiscreteControl::mutable_realpowercontrol() {
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationDiscreteControl.RealPowerControl)
  return _internal_mutable_realpowercontrol();
}
inline void GenerationDiscreteControl::set_allocated_realpowercontrol(::generationmodule::RealPowerControl* realpowercontrol) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete realpowercontrol_;
  }
  if (realpowercontrol) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(realpowercontrol);
    if (message_arena != submessage_arena) {
      realpowercontrol = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, realpowercontrol, submessage_arena);
    }
    
  } else {
    
  }
  realpowercontrol_ = realpowercontrol;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationDiscreteControl.RealPowerControl)
}

// -------------------------------------------------------------------

// GenerationDiscreteControlProfile

// .commonmodule.ControlMessageInfo controlMessageInfo = 1 [(.uml.option_parent_message) = true];
inline bool GenerationDiscreteControlProfile::_internal_has_controlmessageinfo() const {
  return this != internal_default_instance() && controlmessageinfo_ != nullptr;
}
inline bool GenerationDiscreteControlProfile::has_controlmessageinfo() const {
  return _internal_has_controlmessageinfo();
}
inline const ::commonmodule::ControlMessageInfo& GenerationDiscreteControlProfile::_internal_controlmessageinfo() const {
  const ::commonmodule::ControlMessageInfo* p = controlmessageinfo_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::ControlMessageInfo&>(
      ::commonmodule::_ControlMessageInfo_default_instance_);
}
inline const ::commonmodule::ControlMessageInfo& GenerationDiscreteControlProfile::controlmessageinfo() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationDiscreteControlProfile.controlMessageInfo)
  return _internal_controlmessageinfo();
}
inline void GenerationDiscreteControlProfile::unsafe_arena_set_allocated_controlmessageinfo(
    ::commonmodule::ControlMessageInfo* controlmessageinfo) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(controlmessageinfo_);
  }
  controlmessageinfo_ = controlmessageinfo;
  if (controlmessageinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationDiscreteControlProfile.controlMessageInfo)
}
inline ::commonmodule::ControlMessageInfo* GenerationDiscreteControlProfile::release_controlmessageinfo() {
  
  ::commonmodule::ControlMessageInfo* temp = controlmessageinfo_;
  controlmessageinfo_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::commonmodule::ControlMessageInfo* GenerationDiscreteControlProfile::unsafe_arena_release_controlmessageinfo() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationDiscreteControlProfile.controlMessageInfo)
  
  ::commonmodule::ControlMessageInfo* temp = controlmessageinfo_;
  controlmessageinfo_ = nullptr;
  return temp;
}
inline ::commonmodule::ControlMessageInfo* GenerationDiscreteControlProfile::_internal_mutable_controlmessageinfo() {
  
  if (controlmessageinfo_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::ControlMessageInfo>(GetArena());
    controlmessageinfo_ = p;
  }
  return controlmessageinfo_;
}
inline ::commonmodule::ControlMessageInfo* GenerationDiscreteControlProfile::mutable_controlmessageinfo() {
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationDiscreteControlProfile.controlMessageInfo)
  return _internal_mutable_controlmessageinfo();
}
inline void GenerationDiscreteControlProfile::set_allocated_controlmessageinfo(::commonmodule::ControlMessageInfo* controlmessageinfo) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(controlmessageinfo_);
  }
  if (controlmessageinfo) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(controlmessageinfo)->GetArena();
    if (message_arena != submessage_arena) {
      controlmessageinfo = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, controlmessageinfo, submessage_arena);
    }
    
  } else {
    
  }
  controlmessageinfo_ = controlmessageinfo;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationDiscreteControlProfile.controlMessageInfo)
}

// .generationmodule.GeneratingUnit generatingUnit = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
inline bool GenerationDiscreteControlProfile::_internal_has_generatingunit() const {
  return this != internal_default_instance() && generatingunit_ != nullptr;
}
inline bool GenerationDiscreteControlProfile::has_generatingunit() const {
  return _internal_has_generatingunit();
}
inline void GenerationDiscreteControlProfile::clear_generatingunit() {
  if (GetArena() == nullptr && generatingunit_ != nullptr) {
    delete generatingunit_;
  }
  generatingunit_ = nullptr;
}
inline const ::generationmodule::GeneratingUnit& GenerationDiscreteControlProfile::_internal_generatingunit() const {
  const ::generationmodule::GeneratingUnit* p = generatingunit_;
  return p != nullptr ? *p : reinterpret_cast<const ::generationmodule::GeneratingUnit&>(
      ::generationmodule::_GeneratingUnit_default_instance_);
}
inline const ::generationmodule::GeneratingUnit& GenerationDiscreteControlProfile::generatingunit() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationDiscreteControlProfile.generatingUnit)
  return _internal_generatingunit();
}
inline void GenerationDiscreteControlProfile::unsafe_arena_set_allocated_generatingunit(
    ::generationmodule::GeneratingUnit* generatingunit) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(generatingunit_);
  }
  generatingunit_ = generatingunit;
  if (generatingunit) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationDiscreteControlProfile.generatingUnit)
}
inline ::generationmodule::GeneratingUnit* GenerationDiscreteControlProfile::release_generatingunit() {
  
  ::generationmodule::GeneratingUnit* temp = generatingunit_;
  generatingunit_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::generationmodule::GeneratingUnit* GenerationDiscreteControlProfile::unsafe_arena_release_generatingunit() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationDiscreteControlProfile.generatingUnit)
  
  ::generationmodule::GeneratingUnit* temp = generatingunit_;
  generatingunit_ = nullptr;
  return temp;
}
inline ::generationmodule::GeneratingUnit* GenerationDiscreteControlProfile::_internal_mutable_generatingunit() {
  
  if (generatingunit_ == nullptr) {
    auto* p = CreateMaybeMessage<::generationmodule::GeneratingUnit>(GetArena());
    generatingunit_ = p;
  }
  return generatingunit_;
}
inline ::generationmodule::GeneratingUnit* GenerationDiscreteControlProfile::mutable_generatingunit() {
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationDiscreteControlProfile.generatingUnit)
  return _internal_mutable_generatingunit();
}
inline void GenerationDiscreteControlProfile::set_allocated_generatingunit(::generationmodule::GeneratingUnit* generatingunit) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete generatingunit_;
  }
  if (generatingunit) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(generatingunit);
    if (message_arena != submessage_arena) {
      generatingunit = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, generatingunit, submessage_arena);
    }
    
  } else {
    
  }
  generatingunit_ = generatingunit;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationDiscreteControlProfile.generatingUnit)
}

// .generationmodule.GenerationDiscreteControl generationDiscreteControl = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
inline bool GenerationDiscreteControlProfile::_internal_has_generationdiscretecontrol() const {
  return this != internal_default_instance() && generationdiscretecontrol_ != nullptr;
}
inline bool GenerationDiscreteControlProfile::has_generationdiscretecontrol() const {
  return _internal_has_generationdiscretecontrol();
}
inline void GenerationDiscreteControlProfile::clear_generationdiscretecontrol() {
  if (GetArena() == nullptr && generationdiscretecontrol_ != nullptr) {
    delete generationdiscretecontrol_;
  }
  generationdiscretecontrol_ = nullptr;
}
inline const ::generationmodule::GenerationDiscreteControl& GenerationDiscreteControlProfile::_internal_generationdiscretecontrol() const {
  const ::generationmodule::GenerationDiscreteControl* p = generationdiscretecontrol_;
  return p != nullptr ? *p : reinterpret_cast<const ::generationmodule::GenerationDiscreteControl&>(
      ::generationmodule::_GenerationDiscreteControl_default_instance_);
}
inline const ::generationmodule::GenerationDiscreteControl& GenerationDiscreteControlProfile::generationdiscretecontrol() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationDiscreteControlProfile.generationDiscreteControl)
  return _internal_generationdiscretecontrol();
}
inline void GenerationDiscreteControlProfile::unsafe_arena_set_allocated_generationdiscretecontrol(
    ::generationmodule::GenerationDiscreteControl* generationdiscretecontrol) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(generationdiscretecontrol_);
  }
  generationdiscretecontrol_ = generationdiscretecontrol;
  if (generationdiscretecontrol) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationDiscreteControlProfile.generationDiscreteControl)
}
inline ::generationmodule::GenerationDiscreteControl* GenerationDiscreteControlProfile::release_generationdiscretecontrol() {
  
  ::generationmodule::GenerationDiscreteControl* temp = generationdiscretecontrol_;
  generationdiscretecontrol_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::generationmodule::GenerationDiscreteControl* GenerationDiscreteControlProfile::unsafe_arena_release_generationdiscretecontrol() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationDiscreteControlProfile.generationDiscreteControl)
  
  ::generationmodule::GenerationDiscreteControl* temp = generationdiscretecontrol_;
  generationdiscretecontrol_ = nullptr;
  return temp;
}
inline ::generationmodule::GenerationDiscreteControl* GenerationDiscreteControlProfile::_internal_mutable_generationdiscretecontrol() {
  
  if (generationdiscretecontrol_ == nullptr) {
    auto* p = CreateMaybeMessage<::generationmodule::GenerationDiscreteControl>(GetArena());
    generationdiscretecontrol_ = p;
  }
  return generationdiscretecontrol_;
}
inline ::generationmodule::GenerationDiscreteControl* GenerationDiscreteControlProfile::mutable_generationdiscretecontrol() {
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationDiscreteControlProfile.generationDiscreteControl)
  return _internal_mutable_generationdiscretecontrol();
}
inline void GenerationDiscreteControlProfile::set_allocated_generationdiscretecontrol(::generationmodule::GenerationDiscreteControl* generationdiscretecontrol) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete generationdiscretecontrol_;
  }
  if (generationdiscretecontrol) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(generationdiscretecontrol);
    if (message_arena != submessage_arena) {
      generationdiscretecontrol = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, generationdiscretecontrol, submessage_arena);
    }
    
  } else {
    
  }
  generationdiscretecontrol_ = generationdiscretecontrol;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationDiscreteControlProfile.generationDiscreteControl)
}

// -------------------------------------------------------------------

// GenerationReading

// .commonmodule.ConductingEquipmentTerminalReading conductingEquipmentTerminalReading = 1 [(.uml.option_parent_message) = true];
inline bool GenerationReading::_internal_has_conductingequipmentterminalreading() const {
  return this != internal_default_instance() && conductingequipmentterminalreading_ != nullptr;
}
inline bool GenerationReading::has_conductingequipmentterminalreading() const {
  return _internal_has_conductingequipmentterminalreading();
}
inline const ::commonmodule::ConductingEquipmentTerminalReading& GenerationReading::_internal_conductingequipmentterminalreading() const {
  const ::commonmodule::ConductingEquipmentTerminalReading* p = conductingequipmentterminalreading_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::ConductingEquipmentTerminalReading&>(
      ::commonmodule::_ConductingEquipmentTerminalReading_default_instance_);
}
inline const ::commonmodule::ConductingEquipmentTerminalReading& GenerationReading::conductingequipmentterminalreading() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationReading.conductingEquipmentTerminalReading)
  return _internal_conductingequipmentterminalreading();
}
inline void GenerationReading::unsafe_arena_set_allocated_conductingequipmentterminalreading(
    ::commonmodule::ConductingEquipmentTerminalReading* conductingequipmentterminalreading) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(conductingequipmentterminalreading_);
  }
  conductingequipmentterminalreading_ = conductingequipmentterminalreading;
  if (conductingequipmentterminalreading) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationReading.conductingEquipmentTerminalReading)
}
inline ::commonmodule::ConductingEquipmentTerminalReading* GenerationReading::release_conductingequipmentterminalreading() {
  
  ::commonmodule::ConductingEquipmentTerminalReading* temp = conductingequipmentterminalreading_;
  conductingequipmentterminalreading_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::commonmodule::ConductingEquipmentTerminalReading* GenerationReading::unsafe_arena_release_conductingequipmentterminalreading() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationReading.conductingEquipmentTerminalReading)
  
  ::commonmodule::ConductingEquipmentTerminalReading* temp = conductingequipmentterminalreading_;
  conductingequipmentterminalreading_ = nullptr;
  return temp;
}
inline ::commonmodule::ConductingEquipmentTerminalReading* GenerationReading::_internal_mutable_conductingequipmentterminalreading() {
  
  if (conductingequipmentterminalreading_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::ConductingEquipmentTerminalReading>(GetArena());
    conductingequipmentterminalreading_ = p;
  }
  return conductingequipmentterminalreading_;
}
inline ::commonmodule::ConductingEquipmentTerminalReading* GenerationReading::mutable_conductingequipmentterminalreading() {
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationReading.conductingEquipmentTerminalReading)
  return _internal_mutable_conductingequipmentterminalreading();
}
inline void GenerationReading::set_allocated_conductingequipmentterminalreading(::commonmodule::ConductingEquipmentTerminalReading* conductingequipmentterminalreading) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(conductingequipmentterminalreading_);
  }
  if (conductingequipmentterminalreading) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(conductingequipmentterminalreading)->GetArena();
    if (message_arena != submessage_arena) {
      conductingequipmentterminalreading = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, conductingequipmentterminalreading, submessage_arena);
    }
    
  } else {
    
  }
  conductingequipmentterminalreading_ = conductingequipmentterminalreading;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationReading.conductingEquipmentTerminalReading)
}

// .commonmodule.PhaseMMTN phaseMMTN = 2;
inline bool GenerationReading::_internal_has_phasemmtn() const {
  return this != internal_default_instance() && phasemmtn_ != nullptr;
}
inline bool GenerationReading::has_phasemmtn() const {
  return _internal_has_phasemmtn();
}
inline const ::commonmodule::PhaseMMTN& GenerationReading::_internal_phasemmtn() const {
  const ::commonmodule::PhaseMMTN* p = phasemmtn_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::PhaseMMTN&>(
      ::commonmodule::_PhaseMMTN_default_instance_);
}
inline const ::commonmodule::PhaseMMTN& GenerationReading::phasemmtn() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationReading.phaseMMTN)
  return _internal_phasemmtn();
}
inline void GenerationReading::unsafe_arena_set_allocated_phasemmtn(
    ::commonmodule::PhaseMMTN* phasemmtn) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(phasemmtn_);
  }
  phasemmtn_ = phasemmtn;
  if (phasemmtn) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationReading.phaseMMTN)
}
inline ::commonmodule::PhaseMMTN* GenerationReading::release_phasemmtn() {
  
  ::commonmodule::PhaseMMTN* temp = phasemmtn_;
  phasemmtn_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::commonmodule::PhaseMMTN* GenerationReading::unsafe_arena_release_phasemmtn() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationReading.phaseMMTN)
  
  ::commonmodule::PhaseMMTN* temp = phasemmtn_;
  phasemmtn_ = nullptr;
  return temp;
}
inline ::commonmodule::PhaseMMTN* GenerationReading::_internal_mutable_phasemmtn() {
  
  if (phasemmtn_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::PhaseMMTN>(GetArena());
    phasemmtn_ = p;
  }
  return phasemmtn_;
}
inline ::commonmodule::PhaseMMTN* GenerationReading::mutable_phasemmtn() {
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationReading.phaseMMTN)
  return _internal_mutable_phasemmtn();
}
inline void GenerationReading::set_allocated_phasemmtn(::commonmodule::PhaseMMTN* phasemmtn) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(phasemmtn_);
  }
  if (phasemmtn) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(phasemmtn)->GetArena();
    if (message_arena != submessage_arena) {
      phasemmtn = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, phasemmtn, submessage_arena);
    }
    
  } else {
    
  }
  phasemmtn_ = phasemmtn;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationReading.phaseMMTN)
}

// .commonmodule.ReadingMMTR readingMMTR = 3;
inline bool GenerationReading::_internal_has_readingmmtr() const {
  return this != internal_default_instance() && readingmmtr_ != nullptr;
}
inline bool GenerationReading::has_readingmmtr() const {
  return _internal_has_readingmmtr();
}
inline const ::commonmodule::ReadingMMTR& GenerationReading::_internal_readingmmtr() const {
  const ::commonmodule::ReadingMMTR* p = readingmmtr_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::ReadingMMTR&>(
      ::commonmodule::_ReadingMMTR_default_instance_);
}
inline const ::commonmodule::ReadingMMTR& GenerationReading::readingmmtr() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationReading.readingMMTR)
  return _internal_readingmmtr();
}
inline void GenerationReading::unsafe_arena_set_allocated_readingmmtr(
    ::commonmodule::ReadingMMTR* readingmmtr) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(readingmmtr_);
  }
  readingmmtr_ = readingmmtr;
  if (readingmmtr) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationReading.readingMMTR)
}
inline ::commonmodule::ReadingMMTR* GenerationReading::release_readingmmtr() {
  
  ::commonmodule::ReadingMMTR* temp = readingmmtr_;
  readingmmtr_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::commonmodule::ReadingMMTR* GenerationReading::unsafe_arena_release_readingmmtr() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationReading.readingMMTR)
  
  ::commonmodule::ReadingMMTR* temp = readingmmtr_;
  readingmmtr_ = nullptr;
  return temp;
}
inline ::commonmodule::ReadingMMTR* GenerationReading::_internal_mutable_readingmmtr() {
  
  if (readingmmtr_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::ReadingMMTR>(GetArena());
    readingmmtr_ = p;
  }
  return readingmmtr_;
}
inline ::commonmodule::ReadingMMTR* GenerationReading::mutable_readingmmtr() {
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationReading.readingMMTR)
  return _internal_mutable_readingmmtr();
}
inline void GenerationReading::set_allocated_readingmmtr(::commonmodule::ReadingMMTR* readingmmtr) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(readingmmtr_);
  }
  if (readingmmtr) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(readingmmtr)->GetArena();
    if (message_arena != submessage_arena) {
      readingmmtr = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, readingmmtr, submessage_arena);
    }
    
  } else {
    
  }
  readingmmtr_ = readingmmtr;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationReading.readingMMTR)
}

// .commonmodule.ReadingMMXU readingMMXU = 4;
inline bool GenerationReading::_internal_has_readingmmxu() const {
  return this != internal_default_instance() && readingmmxu_ != nullptr;
}
inline bool GenerationReading::has_readingmmxu() const {
  return _internal_has_readingmmxu();
}
inline const ::commonmodule::ReadingMMXU& GenerationReading::_internal_readingmmxu() const {
  const ::commonmodule::ReadingMMXU* p = readingmmxu_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::ReadingMMXU&>(
      ::commonmodule::_ReadingMMXU_default_instance_);
}
inline const ::commonmodule::ReadingMMXU& GenerationReading::readingmmxu() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationReading.readingMMXU)
  return _internal_readingmmxu();
}
inline void GenerationReading::unsafe_arena_set_allocated_readingmmxu(
    ::commonmodule::ReadingMMXU* readingmmxu) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(readingmmxu_);
  }
  readingmmxu_ = readingmmxu;
  if (readingmmxu) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationReading.readingMMXU)
}
inline ::commonmodule::ReadingMMXU* GenerationReading::release_readingmmxu() {
  
  ::commonmodule::ReadingMMXU* temp = readingmmxu_;
  readingmmxu_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::commonmodule::ReadingMMXU* GenerationReading::unsafe_arena_release_readingmmxu() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationReading.readingMMXU)
  
  ::commonmodule::ReadingMMXU* temp = readingmmxu_;
  readingmmxu_ = nullptr;
  return temp;
}
inline ::commonmodule::ReadingMMXU* GenerationReading::_internal_mutable_readingmmxu() {
  
  if (readingmmxu_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::ReadingMMXU>(GetArena());
    readingmmxu_ = p;
  }
  return readingmmxu_;
}
inline ::commonmodule::ReadingMMXU* GenerationReading::mutable_readingmmxu() {
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationReading.readingMMXU)
  return _internal_mutable_readingmmxu();
}
inline void GenerationReading::set_allocated_readingmmxu(::commonmodule::ReadingMMXU* readingmmxu) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(readingmmxu_);
  }
  if (readingmmxu) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(readingmmxu)->GetArena();
    if (message_arena != submessage_arena) {
      readingmmxu = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, readingmmxu, submessage_arena);
    }
    
  } else {
    
  }
  readingmmxu_ = readingmmxu;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationReading.readingMMXU)
}

// -------------------------------------------------------------------

// GenerationReadingProfile

// .commonmodule.ReadingMessageInfo readingMessageInfo = 1 [(.uml.option_parent_message) = true];
inline bool GenerationReadingProfile::_internal_has_readingmessageinfo() const {
  return this != internal_default_instance() && readingmessageinfo_ != nullptr;
}
inline bool GenerationReadingProfile::has_readingmessageinfo() const {
  return _internal_has_readingmessageinfo();
}
inline const ::commonmodule::ReadingMessageInfo& GenerationReadingProfile::_internal_readingmessageinfo() const {
  const ::commonmodule::ReadingMessageInfo* p = readingmessageinfo_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::ReadingMessageInfo&>(
      ::commonmodule::_ReadingMessageInfo_default_instance_);
}
inline const ::commonmodule::ReadingMessageInfo& GenerationReadingProfile::readingmessageinfo() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationReadingProfile.readingMessageInfo)
  return _internal_readingmessageinfo();
}
inline void GenerationReadingProfile::unsafe_arena_set_allocated_readingmessageinfo(
    ::commonmodule::ReadingMessageInfo* readingmessageinfo) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(readingmessageinfo_);
  }
  readingmessageinfo_ = readingmessageinfo;
  if (readingmessageinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationReadingProfile.readingMessageInfo)
}
inline ::commonmodule::ReadingMessageInfo* GenerationReadingProfile::release_readingmessageinfo() {
  
  ::commonmodule::ReadingMessageInfo* temp = readingmessageinfo_;
  readingmessageinfo_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::commonmodule::ReadingMessageInfo* GenerationReadingProfile::unsafe_arena_release_readingmessageinfo() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationReadingProfile.readingMessageInfo)
  
  ::commonmodule::ReadingMessageInfo* temp = readingmessageinfo_;
  readingmessageinfo_ = nullptr;
  return temp;
}
inline ::commonmodule::ReadingMessageInfo* GenerationReadingProfile::_internal_mutable_readingmessageinfo() {
  
  if (readingmessageinfo_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::ReadingMessageInfo>(GetArena());
    readingmessageinfo_ = p;
  }
  return readingmessageinfo_;
}
inline ::commonmodule::ReadingMessageInfo* GenerationReadingProfile::mutable_readingmessageinfo() {
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationReadingProfile.readingMessageInfo)
  return _internal_mutable_readingmessageinfo();
}
inline void GenerationReadingProfile::set_allocated_readingmessageinfo(::commonmodule::ReadingMessageInfo* readingmessageinfo) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(readingmessageinfo_);
  }
  if (readingmessageinfo) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(readingmessageinfo)->GetArena();
    if (message_arena != submessage_arena) {
      readingmessageinfo = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, readingmessageinfo, submessage_arena);
    }
    
  } else {
    
  }
  readingmessageinfo_ = readingmessageinfo;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationReadingProfile.readingMessageInfo)
}

// .generationmodule.GeneratingUnit generatingUnit = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
inline bool GenerationReadingProfile::_internal_has_generatingunit() const {
  return this != internal_default_instance() && generatingunit_ != nullptr;
}
inline bool GenerationReadingProfile::has_generatingunit() const {
  return _internal_has_generatingunit();
}
inline void GenerationReadingProfile::clear_generatingunit() {
  if (GetArena() == nullptr && generatingunit_ != nullptr) {
    delete generatingunit_;
  }
  generatingunit_ = nullptr;
}
inline const ::generationmodule::GeneratingUnit& GenerationReadingProfile::_internal_generatingunit() const {
  const ::generationmodule::GeneratingUnit* p = generatingunit_;
  return p != nullptr ? *p : reinterpret_cast<const ::generationmodule::GeneratingUnit&>(
      ::generationmodule::_GeneratingUnit_default_instance_);
}
inline const ::generationmodule::GeneratingUnit& GenerationReadingProfile::generatingunit() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationReadingProfile.generatingUnit)
  return _internal_generatingunit();
}
inline void GenerationReadingProfile::unsafe_arena_set_allocated_generatingunit(
    ::generationmodule::GeneratingUnit* generatingunit) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(generatingunit_);
  }
  generatingunit_ = generatingunit;
  if (generatingunit) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationReadingProfile.generatingUnit)
}
inline ::generationmodule::GeneratingUnit* GenerationReadingProfile::release_generatingunit() {
  
  ::generationmodule::GeneratingUnit* temp = generatingunit_;
  generatingunit_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::generationmodule::GeneratingUnit* GenerationReadingProfile::unsafe_arena_release_generatingunit() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationReadingProfile.generatingUnit)
  
  ::generationmodule::GeneratingUnit* temp = generatingunit_;
  generatingunit_ = nullptr;
  return temp;
}
inline ::generationmodule::GeneratingUnit* GenerationReadingProfile::_internal_mutable_generatingunit() {
  
  if (generatingunit_ == nullptr) {
    auto* p = CreateMaybeMessage<::generationmodule::GeneratingUnit>(GetArena());
    generatingunit_ = p;
  }
  return generatingunit_;
}
inline ::generationmodule::GeneratingUnit* GenerationReadingProfile::mutable_generatingunit() {
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationReadingProfile.generatingUnit)
  return _internal_mutable_generatingunit();
}
inline void GenerationReadingProfile::set_allocated_generatingunit(::generationmodule::GeneratingUnit* generatingunit) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete generatingunit_;
  }
  if (generatingunit) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(generatingunit);
    if (message_arena != submessage_arena) {
      generatingunit = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, generatingunit, submessage_arena);
    }
    
  } else {
    
  }
  generatingunit_ = generatingunit;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationReadingProfile.generatingUnit)
}

// .generationmodule.GenerationReading generationReading = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
inline bool GenerationReadingProfile::_internal_has_generationreading() const {
  return this != internal_default_instance() && generationreading_ != nullptr;
}
inline bool GenerationReadingProfile::has_generationreading() const {
  return _internal_has_generationreading();
}
inline void GenerationReadingProfile::clear_generationreading() {
  if (GetArena() == nullptr && generationreading_ != nullptr) {
    delete generationreading_;
  }
  generationreading_ = nullptr;
}
inline const ::generationmodule::GenerationReading& GenerationReadingProfile::_internal_generationreading() const {
  const ::generationmodule::GenerationReading* p = generationreading_;
  return p != nullptr ? *p : reinterpret_cast<const ::generationmodule::GenerationReading&>(
      ::generationmodule::_GenerationReading_default_instance_);
}
inline const ::generationmodule::GenerationReading& GenerationReadingProfile::generationreading() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationReadingProfile.generationReading)
  return _internal_generationreading();
}
inline void GenerationReadingProfile::unsafe_arena_set_allocated_generationreading(
    ::generationmodule::GenerationReading* generationreading) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(generationreading_);
  }
  generationreading_ = generationreading;
  if (generationreading) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationReadingProfile.generationReading)
}
inline ::generationmodule::GenerationReading* GenerationReadingProfile::release_generationreading() {
  
  ::generationmodule::GenerationReading* temp = generationreading_;
  generationreading_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::generationmodule::GenerationReading* GenerationReadingProfile::unsafe_arena_release_generationreading() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationReadingProfile.generationReading)
  
  ::generationmodule::GenerationReading* temp = generationreading_;
  generationreading_ = nullptr;
  return temp;
}
inline ::generationmodule::GenerationReading* GenerationReadingProfile::_internal_mutable_generationreading() {
  
  if (generationreading_ == nullptr) {
    auto* p = CreateMaybeMessage<::generationmodule::GenerationReading>(GetArena());
    generationreading_ = p;
  }
  return generationreading_;
}
inline ::generationmodule::GenerationReading* GenerationReadingProfile::mutable_generationreading() {
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationReadingProfile.generationReading)
  return _internal_mutable_generationreading();
}
inline void GenerationReadingProfile::set_allocated_generationreading(::generationmodule::GenerationReading* generationreading) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete generationreading_;
  }
  if (generationreading) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(generationreading);
    if (message_arena != submessage_arena) {
      generationreading = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, generationreading, submessage_arena);
    }
    
  } else {
    
  }
  generationreading_ = generationreading;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationReadingProfile.generationReading)
}

// -------------------------------------------------------------------

// GenerationPointStatus

// .commonmodule.StatusSPS blackStartEnabled = 1;
inline bool GenerationPointStatus::_internal_has_blackstartenabled() const {
  return this != internal_default_instance() && blackstartenabled_ != nullptr;
}
inline bool GenerationPointStatus::has_blackstartenabled() const {
  return _internal_has_blackstartenabled();
}
inline const ::commonmodule::StatusSPS& GenerationPointStatus::_internal_blackstartenabled() const {
  const ::commonmodule::StatusSPS* p = blackstartenabled_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::StatusSPS&>(
      ::commonmodule::_StatusSPS_default_instance_);
}
inline const ::commonmodule::StatusSPS& GenerationPointStatus::blackstartenabled() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationPointStatus.blackStartEnabled)
  return _internal_blackstartenabled();
}
inline void GenerationPointStatus::unsafe_arena_set_allocated_blackstartenabled(
    ::commonmodule::StatusSPS* blackstartenabled) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(blackstartenabled_);
  }
  blackstartenabled_ = blackstartenabled;
  if (blackstartenabled) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationPointStatus.blackStartEnabled)
}
inline ::commonmodule::StatusSPS* GenerationPointStatus::release_blackstartenabled() {
  
  ::commonmodule::StatusSPS* temp = blackstartenabled_;
  blackstartenabled_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::commonmodule::StatusSPS* GenerationPointStatus::unsafe_arena_release_blackstartenabled() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationPointStatus.blackStartEnabled)
  
  ::commonmodule::StatusSPS* temp = blackstartenabled_;
  blackstartenabled_ = nullptr;
  return temp;
}
inline ::commonmodule::StatusSPS* GenerationPointStatus::_internal_mutable_blackstartenabled() {
  
  if (blackstartenabled_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::StatusSPS>(GetArena());
    blackstartenabled_ = p;
  }
  return blackstartenabled_;
}
inline ::commonmodule::StatusSPS* GenerationPointStatus::mutable_blackstartenabled() {
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationPointStatus.blackStartEnabled)
  return _internal_mutable_blackstartenabled();
}
inline void GenerationPointStatus::set_allocated_blackstartenabled(::commonmodule::StatusSPS* blackstartenabled) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(blackstartenabled_);
  }
  if (blackstartenabled) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(blackstartenabled)->GetArena();
    if (message_arena != submessage_arena) {
      blackstartenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, blackstartenabled, submessage_arena);
    }
    
  } else {
    
  }
  blackstartenabled_ = blackstartenabled;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationPointStatus.blackStartEnabled)
}

// .commonmodule.StatusSPS frequencySetPointEnabled = 2;
inline bool GenerationPointStatus::_internal_has_frequencysetpointenabled() const {
  return this != internal_default_instance() && frequencysetpointenabled_ != nullptr;
}
inline bool GenerationPointStatus::has_frequencysetpointenabled() const {
  return _internal_has_frequencysetpointenabled();
}
inline const ::commonmodule::StatusSPS& GenerationPointStatus::_internal_frequencysetpointenabled() const {
  const ::commonmodule::StatusSPS* p = frequencysetpointenabled_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::StatusSPS&>(
      ::commonmodule::_StatusSPS_default_instance_);
}
inline const ::commonmodule::StatusSPS& GenerationPointStatus::frequencysetpointenabled() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationPointStatus.frequencySetPointEnabled)
  return _internal_frequencysetpointenabled();
}
inline void GenerationPointStatus::unsafe_arena_set_allocated_frequencysetpointenabled(
    ::commonmodule::StatusSPS* frequencysetpointenabled) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(frequencysetpointenabled_);
  }
  frequencysetpointenabled_ = frequencysetpointenabled;
  if (frequencysetpointenabled) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationPointStatus.frequencySetPointEnabled)
}
inline ::commonmodule::StatusSPS* GenerationPointStatus::release_frequencysetpointenabled() {
  
  ::commonmodule::StatusSPS* temp = frequencysetpointenabled_;
  frequencysetpointenabled_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::commonmodule::StatusSPS* GenerationPointStatus::unsafe_arena_release_frequencysetpointenabled() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationPointStatus.frequencySetPointEnabled)
  
  ::commonmodule::StatusSPS* temp = frequencysetpointenabled_;
  frequencysetpointenabled_ = nullptr;
  return temp;
}
inline ::commonmodule::StatusSPS* GenerationPointStatus::_internal_mutable_frequencysetpointenabled() {
  
  if (frequencysetpointenabled_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::StatusSPS>(GetArena());
    frequencysetpointenabled_ = p;
  }
  return frequencysetpointenabled_;
}
inline ::commonmodule::StatusSPS* GenerationPointStatus::mutable_frequencysetpointenabled() {
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationPointStatus.frequencySetPointEnabled)
  return _internal_mutable_frequencysetpointenabled();
}
inline void GenerationPointStatus::set_allocated_frequencysetpointenabled(::commonmodule::StatusSPS* frequencysetpointenabled) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(frequencysetpointenabled_);
  }
  if (frequencysetpointenabled) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(frequencysetpointenabled)->GetArena();
    if (message_arena != submessage_arena) {
      frequencysetpointenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, frequencysetpointenabled, submessage_arena);
    }
    
  } else {
    
  }
  frequencysetpointenabled_ = frequencysetpointenabled;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationPointStatus.frequencySetPointEnabled)
}

// .google.protobuf.FloatValue pctHzDroop = 3;
inline bool GenerationPointStatus::_internal_has_pcthzdroop() const {
  return this != internal_default_instance() && pcthzdroop_ != nullptr;
}
inline bool GenerationPointStatus::has_pcthzdroop() const {
  return _internal_has_pcthzdroop();
}
inline const PROTOBUF_NAMESPACE_ID::FloatValue& GenerationPointStatus::_internal_pcthzdroop() const {
  const PROTOBUF_NAMESPACE_ID::FloatValue* p = pcthzdroop_;
  return p != nullptr ? *p : reinterpret_cast<const PROTOBUF_NAMESPACE_ID::FloatValue&>(
      PROTOBUF_NAMESPACE_ID::_FloatValue_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::FloatValue& GenerationPointStatus::pcthzdroop() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationPointStatus.pctHzDroop)
  return _internal_pcthzdroop();
}
inline void GenerationPointStatus::unsafe_arena_set_allocated_pcthzdroop(
    PROTOBUF_NAMESPACE_ID::FloatValue* pcthzdroop) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(pcthzdroop_);
  }
  pcthzdroop_ = pcthzdroop;
  if (pcthzdroop) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationPointStatus.pctHzDroop)
}
inline PROTOBUF_NAMESPACE_ID::FloatValue* GenerationPointStatus::release_pcthzdroop() {
  
  PROTOBUF_NAMESPACE_ID::FloatValue* temp = pcthzdroop_;
  pcthzdroop_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::FloatValue* GenerationPointStatus::unsafe_arena_release_pcthzdroop() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationPointStatus.pctHzDroop)
  
  PROTOBUF_NAMESPACE_ID::FloatValue* temp = pcthzdroop_;
  pcthzdroop_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::FloatValue* GenerationPointStatus::_internal_mutable_pcthzdroop() {
  
  if (pcthzdroop_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::FloatValue>(GetArena());
    pcthzdroop_ = p;
  }
  return pcthzdroop_;
}
inline PROTOBUF_NAMESPACE_ID::FloatValue* GenerationPointStatus::mutable_pcthzdroop() {
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationPointStatus.pctHzDroop)
  return _internal_mutable_pcthzdroop();
}
inline void GenerationPointStatus::set_allocated_pcthzdroop(PROTOBUF_NAMESPACE_ID::FloatValue* pcthzdroop) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(pcthzdroop_);
  }
  if (pcthzdroop) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(pcthzdroop)->GetArena();
    if (message_arena != submessage_arena) {
      pcthzdroop = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, pcthzdroop, submessage_arena);
    }
    
  } else {
    
  }
  pcthzdroop_ = pcthzdroop;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationPointStatus.pctHzDroop)
}

// .google.protobuf.FloatValue pctVDroop = 4;
inline bool GenerationPointStatus::_internal_has_pctvdroop() const {
  return this != internal_default_instance() && pctvdroop_ != nullptr;
}
inline bool GenerationPointStatus::has_pctvdroop() const {
  return _internal_has_pctvdroop();
}
inline const PROTOBUF_NAMESPACE_ID::FloatValue& GenerationPointStatus::_internal_pctvdroop() const {
  const PROTOBUF_NAMESPACE_ID::FloatValue* p = pctvdroop_;
  return p != nullptr ? *p : reinterpret_cast<const PROTOBUF_NAMESPACE_ID::FloatValue&>(
      PROTOBUF_NAMESPACE_ID::_FloatValue_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::FloatValue& GenerationPointStatus::pctvdroop() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationPointStatus.pctVDroop)
  return _internal_pctvdroop();
}
inline void GenerationPointStatus::unsafe_arena_set_allocated_pctvdroop(
    PROTOBUF_NAMESPACE_ID::FloatValue* pctvdroop) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(pctvdroop_);
  }
  pctvdroop_ = pctvdroop;
  if (pctvdroop) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationPointStatus.pctVDroop)
}
inline PROTOBUF_NAMESPACE_ID::FloatValue* GenerationPointStatus::release_pctvdroop() {
  
  PROTOBUF_NAMESPACE_ID::FloatValue* temp = pctvdroop_;
  pctvdroop_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::FloatValue* GenerationPointStatus::unsafe_arena_release_pctvdroop() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationPointStatus.pctVDroop)
  
  PROTOBUF_NAMESPACE_ID::FloatValue* temp = pctvdroop_;
  pctvdroop_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::FloatValue* GenerationPointStatus::_internal_mutable_pctvdroop() {
  
  if (pctvdroop_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::FloatValue>(GetArena());
    pctvdroop_ = p;
  }
  return pctvdroop_;
}
inline PROTOBUF_NAMESPACE_ID::FloatValue* GenerationPointStatus::mutable_pctvdroop() {
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationPointStatus.pctVDroop)
  return _internal_mutable_pctvdroop();
}
inline void GenerationPointStatus::set_allocated_pctvdroop(PROTOBUF_NAMESPACE_ID::FloatValue* pctvdroop) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(pctvdroop_);
  }
  if (pctvdroop) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(pctvdroop)->GetArena();
    if (message_arena != submessage_arena) {
      pctvdroop = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, pctvdroop, submessage_arena);
    }
    
  } else {
    
  }
  pctvdroop_ = pctvdroop;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationPointStatus.pctVDroop)
}

// .commonmodule.RampRate rampRates = 5;
inline bool GenerationPointStatus::_internal_has_ramprates() const {
  return this != internal_default_instance() && ramprates_ != nullptr;
}
inline bool GenerationPointStatus::has_ramprates() const {
  return _internal_has_ramprates();
}
inline const ::commonmodule::RampRate& GenerationPointStatus::_internal_ramprates() const {
  const ::commonmodule::RampRate* p = ramprates_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::RampRate&>(
      ::commonmodule::_RampRate_default_instance_);
}
inline const ::commonmodule::RampRate& GenerationPointStatus::ramprates() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationPointStatus.rampRates)
  return _internal_ramprates();
}
inline void GenerationPointStatus::unsafe_arena_set_allocated_ramprates(
    ::commonmodule::RampRate* ramprates) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(ramprates_);
  }
  ramprates_ = ramprates;
  if (ramprates) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationPointStatus.rampRates)
}
inline ::commonmodule::RampRate* GenerationPointStatus::release_ramprates() {
  
  ::commonmodule::RampRate* temp = ramprates_;
  ramprates_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::commonmodule::RampRate* GenerationPointStatus::unsafe_arena_release_ramprates() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationPointStatus.rampRates)
  
  ::commonmodule::RampRate* temp = ramprates_;
  ramprates_ = nullptr;
  return temp;
}
inline ::commonmodule::RampRate* GenerationPointStatus::_internal_mutable_ramprates() {
  
  if (ramprates_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::RampRate>(GetArena());
    ramprates_ = p;
  }
  return ramprates_;
}
inline ::commonmodule::RampRate* GenerationPointStatus::mutable_ramprates() {
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationPointStatus.rampRates)
  return _internal_mutable_ramprates();
}
inline void GenerationPointStatus::set_allocated_ramprates(::commonmodule::RampRate* ramprates) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(ramprates_);
  }
  if (ramprates) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(ramprates)->GetArena();
    if (message_arena != submessage_arena) {
      ramprates = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, ramprates, submessage_arena);
    }
    
  } else {
    
  }
  ramprates_ = ramprates;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationPointStatus.rampRates)
}

// .commonmodule.StatusSPS reactivePwrSetPointEnabled = 6;
inline bool GenerationPointStatus::_internal_has_reactivepwrsetpointenabled() const {
  return this != internal_default_instance() && reactivepwrsetpointenabled_ != nullptr;
}
inline bool GenerationPointStatus::has_reactivepwrsetpointenabled() const {
  return _internal_has_reactivepwrsetpointenabled();
}
inline const ::commonmodule::StatusSPS& GenerationPointStatus::_internal_reactivepwrsetpointenabled() const {
  const ::commonmodule::StatusSPS* p = reactivepwrsetpointenabled_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::StatusSPS&>(
      ::commonmodule::_StatusSPS_default_instance_);
}
inline const ::commonmodule::StatusSPS& GenerationPointStatus::reactivepwrsetpointenabled() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationPointStatus.reactivePwrSetPointEnabled)
  return _internal_reactivepwrsetpointenabled();
}
inline void GenerationPointStatus::unsafe_arena_set_allocated_reactivepwrsetpointenabled(
    ::commonmodule::StatusSPS* reactivepwrsetpointenabled) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(reactivepwrsetpointenabled_);
  }
  reactivepwrsetpointenabled_ = reactivepwrsetpointenabled;
  if (reactivepwrsetpointenabled) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationPointStatus.reactivePwrSetPointEnabled)
}
inline ::commonmodule::StatusSPS* GenerationPointStatus::release_reactivepwrsetpointenabled() {
  
  ::commonmodule::StatusSPS* temp = reactivepwrsetpointenabled_;
  reactivepwrsetpointenabled_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::commonmodule::StatusSPS* GenerationPointStatus::unsafe_arena_release_reactivepwrsetpointenabled() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationPointStatus.reactivePwrSetPointEnabled)
  
  ::commonmodule::StatusSPS* temp = reactivepwrsetpointenabled_;
  reactivepwrsetpointenabled_ = nullptr;
  return temp;
}
inline ::commonmodule::StatusSPS* GenerationPointStatus::_internal_mutable_reactivepwrsetpointenabled() {
  
  if (reactivepwrsetpointenabled_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::StatusSPS>(GetArena());
    reactivepwrsetpointenabled_ = p;
  }
  return reactivepwrsetpointenabled_;
}
inline ::commonmodule::StatusSPS* GenerationPointStatus::mutable_reactivepwrsetpointenabled() {
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationPointStatus.reactivePwrSetPointEnabled)
  return _internal_mutable_reactivepwrsetpointenabled();
}
inline void GenerationPointStatus::set_allocated_reactivepwrsetpointenabled(::commonmodule::StatusSPS* reactivepwrsetpointenabled) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(reactivepwrsetpointenabled_);
  }
  if (reactivepwrsetpointenabled) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(reactivepwrsetpointenabled)->GetArena();
    if (message_arena != submessage_arena) {
      reactivepwrsetpointenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, reactivepwrsetpointenabled, submessage_arena);
    }
    
  } else {
    
  }
  reactivepwrsetpointenabled_ = reactivepwrsetpointenabled;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationPointStatus.reactivePwrSetPointEnabled)
}

// .commonmodule.StatusSPS realPwrSetPointEnabled = 7;
inline bool GenerationPointStatus::_internal_has_realpwrsetpointenabled() const {
  return this != internal_default_instance() && realpwrsetpointenabled_ != nullptr;
}
inline bool GenerationPointStatus::has_realpwrsetpointenabled() const {
  return _internal_has_realpwrsetpointenabled();
}
inline const ::commonmodule::StatusSPS& GenerationPointStatus::_internal_realpwrsetpointenabled() const {
  const ::commonmodule::StatusSPS* p = realpwrsetpointenabled_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::StatusSPS&>(
      ::commonmodule::_StatusSPS_default_instance_);
}
inline const ::commonmodule::StatusSPS& GenerationPointStatus::realpwrsetpointenabled() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationPointStatus.realPwrSetPointEnabled)
  return _internal_realpwrsetpointenabled();
}
inline void GenerationPointStatus::unsafe_arena_set_allocated_realpwrsetpointenabled(
    ::commonmodule::StatusSPS* realpwrsetpointenabled) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(realpwrsetpointenabled_);
  }
  realpwrsetpointenabled_ = realpwrsetpointenabled;
  if (realpwrsetpointenabled) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationPointStatus.realPwrSetPointEnabled)
}
inline ::commonmodule::StatusSPS* GenerationPointStatus::release_realpwrsetpointenabled() {
  
  ::commonmodule::StatusSPS* temp = realpwrsetpointenabled_;
  realpwrsetpointenabled_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::commonmodule::StatusSPS* GenerationPointStatus::unsafe_arena_release_realpwrsetpointenabled() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationPointStatus.realPwrSetPointEnabled)
  
  ::commonmodule::StatusSPS* temp = realpwrsetpointenabled_;
  realpwrsetpointenabled_ = nullptr;
  return temp;
}
inline ::commonmodule::StatusSPS* GenerationPointStatus::_internal_mutable_realpwrsetpointenabled() {
  
  if (realpwrsetpointenabled_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::StatusSPS>(GetArena());
    realpwrsetpointenabled_ = p;
  }
  return realpwrsetpointenabled_;
}
inline ::commonmodule::StatusSPS* GenerationPointStatus::mutable_realpwrsetpointenabled() {
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationPointStatus.realPwrSetPointEnabled)
  return _internal_mutable_realpwrsetpointenabled();
}
inline void GenerationPointStatus::set_allocated_realpwrsetpointenabled(::commonmodule::StatusSPS* realpwrsetpointenabled) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(realpwrsetpointenabled_);
  }
  if (realpwrsetpointenabled) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(realpwrsetpointenabled)->GetArena();
    if (message_arena != submessage_arena) {
      realpwrsetpointenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, realpwrsetpointenabled, submessage_arena);
    }
    
  } else {
    
  }
  realpwrsetpointenabled_ = realpwrsetpointenabled;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationPointStatus.realPwrSetPointEnabled)
}

// .commonmodule.Optional_StateKind state = 8;
inline bool GenerationPointStatus::_internal_has_state() const {
  return this != internal_default_instance() && state_ != nullptr;
}
inline bool GenerationPointStatus::has_state() const {
  return _internal_has_state();
}
inline const ::commonmodule::Optional_StateKind& GenerationPointStatus::_internal_state() const {
  const ::commonmodule::Optional_StateKind* p = state_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::Optional_StateKind&>(
      ::commonmodule::_Optional_StateKind_default_instance_);
}
inline const ::commonmodule::Optional_StateKind& GenerationPointStatus::state() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationPointStatus.state)
  return _internal_state();
}
inline void GenerationPointStatus::unsafe_arena_set_allocated_state(
    ::commonmodule::Optional_StateKind* state) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(state_);
  }
  state_ = state;
  if (state) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationPointStatus.state)
}
inline ::commonmodule::Optional_StateKind* GenerationPointStatus::release_state() {
  
  ::commonmodule::Optional_StateKind* temp = state_;
  state_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::commonmodule::Optional_StateKind* GenerationPointStatus::unsafe_arena_release_state() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationPointStatus.state)
  
  ::commonmodule::Optional_StateKind* temp = state_;
  state_ = nullptr;
  return temp;
}
inline ::commonmodule::Optional_StateKind* GenerationPointStatus::_internal_mutable_state() {
  
  if (state_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::Optional_StateKind>(GetArena());
    state_ = p;
  }
  return state_;
}
inline ::commonmodule::Optional_StateKind* GenerationPointStatus::mutable_state() {
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationPointStatus.state)
  return _internal_mutable_state();
}
inline void GenerationPointStatus::set_allocated_state(::commonmodule::Optional_StateKind* state) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(state_);
  }
  if (state) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(state)->GetArena();
    if (message_arena != submessage_arena) {
      state = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationPointStatus.state)
}

// .commonmodule.StatusSPS syncBackToGrid = 9;
inline bool GenerationPointStatus::_internal_has_syncbacktogrid() const {
  return this != internal_default_instance() && syncbacktogrid_ != nullptr;
}
inline bool GenerationPointStatus::has_syncbacktogrid() const {
  return _internal_has_syncbacktogrid();
}
inline const ::commonmodule::StatusSPS& GenerationPointStatus::_internal_syncbacktogrid() const {
  const ::commonmodule::StatusSPS* p = syncbacktogrid_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::StatusSPS&>(
      ::commonmodule::_StatusSPS_default_instance_);
}
inline const ::commonmodule::StatusSPS& GenerationPointStatus::syncbacktogrid() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationPointStatus.syncBackToGrid)
  return _internal_syncbacktogrid();
}
inline void GenerationPointStatus::unsafe_arena_set_allocated_syncbacktogrid(
    ::commonmodule::StatusSPS* syncbacktogrid) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(syncbacktogrid_);
  }
  syncbacktogrid_ = syncbacktogrid;
  if (syncbacktogrid) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationPointStatus.syncBackToGrid)
}
inline ::commonmodule::StatusSPS* GenerationPointStatus::release_syncbacktogrid() {
  
  ::commonmodule::StatusSPS* temp = syncbacktogrid_;
  syncbacktogrid_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::commonmodule::StatusSPS* GenerationPointStatus::unsafe_arena_release_syncbacktogrid() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationPointStatus.syncBackToGrid)
  
  ::commonmodule::StatusSPS* temp = syncbacktogrid_;
  syncbacktogrid_ = nullptr;
  return temp;
}
inline ::commonmodule::StatusSPS* GenerationPointStatus::_internal_mutable_syncbacktogrid() {
  
  if (syncbacktogrid_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::StatusSPS>(GetArena());
    syncbacktogrid_ = p;
  }
  return syncbacktogrid_;
}
inline ::commonmodule::StatusSPS* GenerationPointStatus::mutable_syncbacktogrid() {
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationPointStatus.syncBackToGrid)
  return _internal_mutable_syncbacktogrid();
}
inline void GenerationPointStatus::set_allocated_syncbacktogrid(::commonmodule::StatusSPS* syncbacktogrid) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(syncbacktogrid_);
  }
  if (syncbacktogrid) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(syncbacktogrid)->GetArena();
    if (message_arena != submessage_arena) {
      syncbacktogrid = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, syncbacktogrid, submessage_arena);
    }
    
  } else {
    
  }
  syncbacktogrid_ = syncbacktogrid;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationPointStatus.syncBackToGrid)
}

// .commonmodule.StatusSPS transToIslndOnGridLossEnabled = 10;
inline bool GenerationPointStatus::_internal_has_transtoislndongridlossenabled() const {
  return this != internal_default_instance() && transtoislndongridlossenabled_ != nullptr;
}
inline bool GenerationPointStatus::has_transtoislndongridlossenabled() const {
  return _internal_has_transtoislndongridlossenabled();
}
inline const ::commonmodule::StatusSPS& GenerationPointStatus::_internal_transtoislndongridlossenabled() const {
  const ::commonmodule::StatusSPS* p = transtoislndongridlossenabled_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::StatusSPS&>(
      ::commonmodule::_StatusSPS_default_instance_);
}
inline const ::commonmodule::StatusSPS& GenerationPointStatus::transtoislndongridlossenabled() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationPointStatus.transToIslndOnGridLossEnabled)
  return _internal_transtoislndongridlossenabled();
}
inline void GenerationPointStatus::unsafe_arena_set_allocated_transtoislndongridlossenabled(
    ::commonmodule::StatusSPS* transtoislndongridlossenabled) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(transtoislndongridlossenabled_);
  }
  transtoislndongridlossenabled_ = transtoislndongridlossenabled;
  if (transtoislndongridlossenabled) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationPointStatus.transToIslndOnGridLossEnabled)
}
inline ::commonmodule::StatusSPS* GenerationPointStatus::release_transtoislndongridlossenabled() {
  
  ::commonmodule::StatusSPS* temp = transtoislndongridlossenabled_;
  transtoislndongridlossenabled_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::commonmodule::StatusSPS* GenerationPointStatus::unsafe_arena_release_transtoislndongridlossenabled() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationPointStatus.transToIslndOnGridLossEnabled)
  
  ::commonmodule::StatusSPS* temp = transtoislndongridlossenabled_;
  transtoislndongridlossenabled_ = nullptr;
  return temp;
}
inline ::commonmodule::StatusSPS* GenerationPointStatus::_internal_mutable_transtoislndongridlossenabled() {
  
  if (transtoislndongridlossenabled_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::StatusSPS>(GetArena());
    transtoislndongridlossenabled_ = p;
  }
  return transtoislndongridlossenabled_;
}
inline ::commonmodule::StatusSPS* GenerationPointStatus::mutable_transtoislndongridlossenabled() {
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationPointStatus.transToIslndOnGridLossEnabled)
  return _internal_mutable_transtoislndongridlossenabled();
}
inline void GenerationPointStatus::set_allocated_transtoislndongridlossenabled(::commonmodule::StatusSPS* transtoislndongridlossenabled) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(transtoislndongridlossenabled_);
  }
  if (transtoislndongridlossenabled) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(transtoislndongridlossenabled)->GetArena();
    if (message_arena != submessage_arena) {
      transtoislndongridlossenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, transtoislndongridlossenabled, submessage_arena);
    }
    
  } else {
    
  }
  transtoislndongridlossenabled_ = transtoislndongridlossenabled;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationPointStatus.transToIslndOnGridLossEnabled)
}

// .commonmodule.StatusSPS voltageSetPointEnabled = 11;
inline bool GenerationPointStatus::_internal_has_voltagesetpointenabled() const {
  return this != internal_default_instance() && voltagesetpointenabled_ != nullptr;
}
inline bool GenerationPointStatus::has_voltagesetpointenabled() const {
  return _internal_has_voltagesetpointenabled();
}
inline const ::commonmodule::StatusSPS& GenerationPointStatus::_internal_voltagesetpointenabled() const {
  const ::commonmodule::StatusSPS* p = voltagesetpointenabled_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::StatusSPS&>(
      ::commonmodule::_StatusSPS_default_instance_);
}
inline const ::commonmodule::StatusSPS& GenerationPointStatus::voltagesetpointenabled() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationPointStatus.voltageSetPointEnabled)
  return _internal_voltagesetpointenabled();
}
inline void GenerationPointStatus::unsafe_arena_set_allocated_voltagesetpointenabled(
    ::commonmodule::StatusSPS* voltagesetpointenabled) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(voltagesetpointenabled_);
  }
  voltagesetpointenabled_ = voltagesetpointenabled;
  if (voltagesetpointenabled) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationPointStatus.voltageSetPointEnabled)
}
inline ::commonmodule::StatusSPS* GenerationPointStatus::release_voltagesetpointenabled() {
  
  ::commonmodule::StatusSPS* temp = voltagesetpointenabled_;
  voltagesetpointenabled_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::commonmodule::StatusSPS* GenerationPointStatus::unsafe_arena_release_voltagesetpointenabled() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationPointStatus.voltageSetPointEnabled)
  
  ::commonmodule::StatusSPS* temp = voltagesetpointenabled_;
  voltagesetpointenabled_ = nullptr;
  return temp;
}
inline ::commonmodule::StatusSPS* GenerationPointStatus::_internal_mutable_voltagesetpointenabled() {
  
  if (voltagesetpointenabled_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::StatusSPS>(GetArena());
    voltagesetpointenabled_ = p;
  }
  return voltagesetpointenabled_;
}
inline ::commonmodule::StatusSPS* GenerationPointStatus::mutable_voltagesetpointenabled() {
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationPointStatus.voltageSetPointEnabled)
  return _internal_mutable_voltagesetpointenabled();
}
inline void GenerationPointStatus::set_allocated_voltagesetpointenabled(::commonmodule::StatusSPS* voltagesetpointenabled) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(voltagesetpointenabled_);
  }
  if (voltagesetpointenabled) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(voltagesetpointenabled)->GetArena();
    if (message_arena != submessage_arena) {
      voltagesetpointenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, voltagesetpointenabled, submessage_arena);
    }
    
  } else {
    
  }
  voltagesetpointenabled_ = voltagesetpointenabled;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationPointStatus.voltageSetPointEnabled)
}

// -------------------------------------------------------------------

// GenerationEventAndStatusZGEN

// .commonmodule.LogicalNodeForEventAndStatus logicalNodeForEventAndStatus = 1 [(.uml.option_parent_message) = true];
inline bool GenerationEventAndStatusZGEN::_internal_has_logicalnodeforeventandstatus() const {
  return this != internal_default_instance() && logicalnodeforeventandstatus_ != nullptr;
}
inline bool GenerationEventAndStatusZGEN::has_logicalnodeforeventandstatus() const {
  return _internal_has_logicalnodeforeventandstatus();
}
inline const ::commonmodule::LogicalNodeForEventAndStatus& GenerationEventAndStatusZGEN::_internal_logicalnodeforeventandstatus() const {
  const ::commonmodule::LogicalNodeForEventAndStatus* p = logicalnodeforeventandstatus_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::LogicalNodeForEventAndStatus&>(
      ::commonmodule::_LogicalNodeForEventAndStatus_default_instance_);
}
inline const ::commonmodule::LogicalNodeForEventAndStatus& GenerationEventAndStatusZGEN::logicalnodeforeventandstatus() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationEventAndStatusZGEN.logicalNodeForEventAndStatus)
  return _internal_logicalnodeforeventandstatus();
}
inline void GenerationEventAndStatusZGEN::unsafe_arena_set_allocated_logicalnodeforeventandstatus(
    ::commonmodule::LogicalNodeForEventAndStatus* logicalnodeforeventandstatus) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(logicalnodeforeventandstatus_);
  }
  logicalnodeforeventandstatus_ = logicalnodeforeventandstatus;
  if (logicalnodeforeventandstatus) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationEventAndStatusZGEN.logicalNodeForEventAndStatus)
}
inline ::commonmodule::LogicalNodeForEventAndStatus* GenerationEventAndStatusZGEN::release_logicalnodeforeventandstatus() {
  
  ::commonmodule::LogicalNodeForEventAndStatus* temp = logicalnodeforeventandstatus_;
  logicalnodeforeventandstatus_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::commonmodule::LogicalNodeForEventAndStatus* GenerationEventAndStatusZGEN::unsafe_arena_release_logicalnodeforeventandstatus() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationEventAndStatusZGEN.logicalNodeForEventAndStatus)
  
  ::commonmodule::LogicalNodeForEventAndStatus* temp = logicalnodeforeventandstatus_;
  logicalnodeforeventandstatus_ = nullptr;
  return temp;
}
inline ::commonmodule::LogicalNodeForEventAndStatus* GenerationEventAndStatusZGEN::_internal_mutable_logicalnodeforeventandstatus() {
  
  if (logicalnodeforeventandstatus_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::LogicalNodeForEventAndStatus>(GetArena());
    logicalnodeforeventandstatus_ = p;
  }
  return logicalnodeforeventandstatus_;
}
inline ::commonmodule::LogicalNodeForEventAndStatus* GenerationEventAndStatusZGEN::mutable_logicalnodeforeventandstatus() {
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationEventAndStatusZGEN.logicalNodeForEventAndStatus)
  return _internal_mutable_logicalnodeforeventandstatus();
}
inline void GenerationEventAndStatusZGEN::set_allocated_logicalnodeforeventandstatus(::commonmodule::LogicalNodeForEventAndStatus* logicalnodeforeventandstatus) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(logicalnodeforeventandstatus_);
  }
  if (logicalnodeforeventandstatus) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(logicalnodeforeventandstatus)->GetArena();
    if (message_arena != submessage_arena) {
      logicalnodeforeventandstatus = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, logicalnodeforeventandstatus, submessage_arena);
    }
    
  } else {
    
  }
  logicalnodeforeventandstatus_ = logicalnodeforeventandstatus;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationEventAndStatusZGEN.logicalNodeForEventAndStatus)
}

// .commonmodule.StatusSPS AuxPwrSt = 2;
inline bool GenerationEventAndStatusZGEN::_internal_has_auxpwrst() const {
  return this != internal_default_instance() && auxpwrst_ != nullptr;
}
inline bool GenerationEventAndStatusZGEN::has_auxpwrst() const {
  return _internal_has_auxpwrst();
}
inline const ::commonmodule::StatusSPS& GenerationEventAndStatusZGEN::_internal_auxpwrst() const {
  const ::commonmodule::StatusSPS* p = auxpwrst_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::StatusSPS&>(
      ::commonmodule::_StatusSPS_default_instance_);
}
inline const ::commonmodule::StatusSPS& GenerationEventAndStatusZGEN::auxpwrst() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationEventAndStatusZGEN.AuxPwrSt)
  return _internal_auxpwrst();
}
inline void GenerationEventAndStatusZGEN::unsafe_arena_set_allocated_auxpwrst(
    ::commonmodule::StatusSPS* auxpwrst) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(auxpwrst_);
  }
  auxpwrst_ = auxpwrst;
  if (auxpwrst) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationEventAndStatusZGEN.AuxPwrSt)
}
inline ::commonmodule::StatusSPS* GenerationEventAndStatusZGEN::release_auxpwrst() {
  
  ::commonmodule::StatusSPS* temp = auxpwrst_;
  auxpwrst_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::commonmodule::StatusSPS* GenerationEventAndStatusZGEN::unsafe_arena_release_auxpwrst() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationEventAndStatusZGEN.AuxPwrSt)
  
  ::commonmodule::StatusSPS* temp = auxpwrst_;
  auxpwrst_ = nullptr;
  return temp;
}
inline ::commonmodule::StatusSPS* GenerationEventAndStatusZGEN::_internal_mutable_auxpwrst() {
  
  if (auxpwrst_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::StatusSPS>(GetArena());
    auxpwrst_ = p;
  }
  return auxpwrst_;
}
inline ::commonmodule::StatusSPS* GenerationEventAndStatusZGEN::mutable_auxpwrst() {
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationEventAndStatusZGEN.AuxPwrSt)
  return _internal_mutable_auxpwrst();
}
inline void GenerationEventAndStatusZGEN::set_allocated_auxpwrst(::commonmodule::StatusSPS* auxpwrst) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(auxpwrst_);
  }
  if (auxpwrst) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(auxpwrst)->GetArena();
    if (message_arena != submessage_arena) {
      auxpwrst = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, auxpwrst, submessage_arena);
    }
    
  } else {
    
  }
  auxpwrst_ = auxpwrst;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationEventAndStatusZGEN.AuxPwrSt)
}

// .commonmodule.ENS_DynamicTestKind DynamicTest = 3;
inline bool GenerationEventAndStatusZGEN::_internal_has_dynamictest() const {
  return this != internal_default_instance() && dynamictest_ != nullptr;
}
inline bool GenerationEventAndStatusZGEN::has_dynamictest() const {
  return _internal_has_dynamictest();
}
inline const ::commonmodule::ENS_DynamicTestKind& GenerationEventAndStatusZGEN::_internal_dynamictest() const {
  const ::commonmodule::ENS_DynamicTestKind* p = dynamictest_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::ENS_DynamicTestKind&>(
      ::commonmodule::_ENS_DynamicTestKind_default_instance_);
}
inline const ::commonmodule::ENS_DynamicTestKind& GenerationEventAndStatusZGEN::dynamictest() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationEventAndStatusZGEN.DynamicTest)
  return _internal_dynamictest();
}
inline void GenerationEventAndStatusZGEN::unsafe_arena_set_allocated_dynamictest(
    ::commonmodule::ENS_DynamicTestKind* dynamictest) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(dynamictest_);
  }
  dynamictest_ = dynamictest;
  if (dynamictest) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationEventAndStatusZGEN.DynamicTest)
}
inline ::commonmodule::ENS_DynamicTestKind* GenerationEventAndStatusZGEN::release_dynamictest() {
  
  ::commonmodule::ENS_DynamicTestKind* temp = dynamictest_;
  dynamictest_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::commonmodule::ENS_DynamicTestKind* GenerationEventAndStatusZGEN::unsafe_arena_release_dynamictest() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationEventAndStatusZGEN.DynamicTest)
  
  ::commonmodule::ENS_DynamicTestKind* temp = dynamictest_;
  dynamictest_ = nullptr;
  return temp;
}
inline ::commonmodule::ENS_DynamicTestKind* GenerationEventAndStatusZGEN::_internal_mutable_dynamictest() {
  
  if (dynamictest_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::ENS_DynamicTestKind>(GetArena());
    dynamictest_ = p;
  }
  return dynamictest_;
}
inline ::commonmodule::ENS_DynamicTestKind* GenerationEventAndStatusZGEN::mutable_dynamictest() {
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationEventAndStatusZGEN.DynamicTest)
  return _internal_mutable_dynamictest();
}
inline void GenerationEventAndStatusZGEN::set_allocated_dynamictest(::commonmodule::ENS_DynamicTestKind* dynamictest) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(dynamictest_);
  }
  if (dynamictest) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(dynamictest)->GetArena();
    if (message_arena != submessage_arena) {
      dynamictest = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, dynamictest, submessage_arena);
    }
    
  } else {
    
  }
  dynamictest_ = dynamictest;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationEventAndStatusZGEN.DynamicTest)
}

// .commonmodule.StatusSPS EmgStop = 4;
inline bool GenerationEventAndStatusZGEN::_internal_has_emgstop() const {
  return this != internal_default_instance() && emgstop_ != nullptr;
}
inline bool GenerationEventAndStatusZGEN::has_emgstop() const {
  return _internal_has_emgstop();
}
inline const ::commonmodule::StatusSPS& GenerationEventAndStatusZGEN::_internal_emgstop() const {
  const ::commonmodule::StatusSPS* p = emgstop_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::StatusSPS&>(
      ::commonmodule::_StatusSPS_default_instance_);
}
inline const ::commonmodule::StatusSPS& GenerationEventAndStatusZGEN::emgstop() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationEventAndStatusZGEN.EmgStop)
  return _internal_emgstop();
}
inline void GenerationEventAndStatusZGEN::unsafe_arena_set_allocated_emgstop(
    ::commonmodule::StatusSPS* emgstop) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(emgstop_);
  }
  emgstop_ = emgstop;
  if (emgstop) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationEventAndStatusZGEN.EmgStop)
}
inline ::commonmodule::StatusSPS* GenerationEventAndStatusZGEN::release_emgstop() {
  
  ::commonmodule::StatusSPS* temp = emgstop_;
  emgstop_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::commonmodule::StatusSPS* GenerationEventAndStatusZGEN::unsafe_arena_release_emgstop() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationEventAndStatusZGEN.EmgStop)
  
  ::commonmodule::StatusSPS* temp = emgstop_;
  emgstop_ = nullptr;
  return temp;
}
inline ::commonmodule::StatusSPS* GenerationEventAndStatusZGEN::_internal_mutable_emgstop() {
  
  if (emgstop_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::StatusSPS>(GetArena());
    emgstop_ = p;
  }
  return emgstop_;
}
inline ::commonmodule::StatusSPS* GenerationEventAndStatusZGEN::mutable_emgstop() {
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationEventAndStatusZGEN.EmgStop)
  return _internal_mutable_emgstop();
}
inline void GenerationEventAndStatusZGEN::set_allocated_emgstop(::commonmodule::StatusSPS* emgstop) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(emgstop_);
  }
  if (emgstop) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(emgstop)->GetArena();
    if (message_arena != submessage_arena) {
      emgstop = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, emgstop, submessage_arena);
    }
    
  } else {
    
  }
  emgstop_ = emgstop;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationEventAndStatusZGEN.EmgStop)
}

// .commonmodule.StatusSPS GnSynSt = 5;
inline bool GenerationEventAndStatusZGEN::_internal_has_gnsynst() const {
  return this != internal_default_instance() && gnsynst_ != nullptr;
}
inline bool GenerationEventAndStatusZGEN::has_gnsynst() const {
  return _internal_has_gnsynst();
}
inline const ::commonmodule::StatusSPS& GenerationEventAndStatusZGEN::_internal_gnsynst() const {
  const ::commonmodule::StatusSPS* p = gnsynst_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::StatusSPS&>(
      ::commonmodule::_StatusSPS_default_instance_);
}
inline const ::commonmodule::StatusSPS& GenerationEventAndStatusZGEN::gnsynst() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationEventAndStatusZGEN.GnSynSt)
  return _internal_gnsynst();
}
inline void GenerationEventAndStatusZGEN::unsafe_arena_set_allocated_gnsynst(
    ::commonmodule::StatusSPS* gnsynst) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(gnsynst_);
  }
  gnsynst_ = gnsynst;
  if (gnsynst) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationEventAndStatusZGEN.GnSynSt)
}
inline ::commonmodule::StatusSPS* GenerationEventAndStatusZGEN::release_gnsynst() {
  
  ::commonmodule::StatusSPS* temp = gnsynst_;
  gnsynst_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::commonmodule::StatusSPS* GenerationEventAndStatusZGEN::unsafe_arena_release_gnsynst() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationEventAndStatusZGEN.GnSynSt)
  
  ::commonmodule::StatusSPS* temp = gnsynst_;
  gnsynst_ = nullptr;
  return temp;
}
inline ::commonmodule::StatusSPS* GenerationEventAndStatusZGEN::_internal_mutable_gnsynst() {
  
  if (gnsynst_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::StatusSPS>(GetArena());
    gnsynst_ = p;
  }
  return gnsynst_;
}
inline ::commonmodule::StatusSPS* GenerationEventAndStatusZGEN::mutable_gnsynst() {
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationEventAndStatusZGEN.GnSynSt)
  return _internal_mutable_gnsynst();
}
inline void GenerationEventAndStatusZGEN::set_allocated_gnsynst(::commonmodule::StatusSPS* gnsynst) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(gnsynst_);
  }
  if (gnsynst) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(gnsynst)->GetArena();
    if (message_arena != submessage_arena) {
      gnsynst = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, gnsynst, submessage_arena);
    }
    
  } else {
    
  }
  gnsynst_ = gnsynst;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationEventAndStatusZGEN.GnSynSt)
}

// .generationmodule.GenerationPointStatus PointStatus = 6;
inline bool GenerationEventAndStatusZGEN::_internal_has_pointstatus() const {
  return this != internal_default_instance() && pointstatus_ != nullptr;
}
inline bool GenerationEventAndStatusZGEN::has_pointstatus() const {
  return _internal_has_pointstatus();
}
inline void GenerationEventAndStatusZGEN::clear_pointstatus() {
  if (GetArena() == nullptr && pointstatus_ != nullptr) {
    delete pointstatus_;
  }
  pointstatus_ = nullptr;
}
inline const ::generationmodule::GenerationPointStatus& GenerationEventAndStatusZGEN::_internal_pointstatus() const {
  const ::generationmodule::GenerationPointStatus* p = pointstatus_;
  return p != nullptr ? *p : reinterpret_cast<const ::generationmodule::GenerationPointStatus&>(
      ::generationmodule::_GenerationPointStatus_default_instance_);
}
inline const ::generationmodule::GenerationPointStatus& GenerationEventAndStatusZGEN::pointstatus() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationEventAndStatusZGEN.PointStatus)
  return _internal_pointstatus();
}
inline void GenerationEventAndStatusZGEN::unsafe_arena_set_allocated_pointstatus(
    ::generationmodule::GenerationPointStatus* pointstatus) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(pointstatus_);
  }
  pointstatus_ = pointstatus;
  if (pointstatus) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationEventAndStatusZGEN.PointStatus)
}
inline ::generationmodule::GenerationPointStatus* GenerationEventAndStatusZGEN::release_pointstatus() {
  
  ::generationmodule::GenerationPointStatus* temp = pointstatus_;
  pointstatus_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::generationmodule::GenerationPointStatus* GenerationEventAndStatusZGEN::unsafe_arena_release_pointstatus() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationEventAndStatusZGEN.PointStatus)
  
  ::generationmodule::GenerationPointStatus* temp = pointstatus_;
  pointstatus_ = nullptr;
  return temp;
}
inline ::generationmodule::GenerationPointStatus* GenerationEventAndStatusZGEN::_internal_mutable_pointstatus() {
  
  if (pointstatus_ == nullptr) {
    auto* p = CreateMaybeMessage<::generationmodule::GenerationPointStatus>(GetArena());
    pointstatus_ = p;
  }
  return pointstatus_;
}
inline ::generationmodule::GenerationPointStatus* GenerationEventAndStatusZGEN::mutable_pointstatus() {
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationEventAndStatusZGEN.PointStatus)
  return _internal_mutable_pointstatus();
}
inline void GenerationEventAndStatusZGEN::set_allocated_pointstatus(::generationmodule::GenerationPointStatus* pointstatus) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete pointstatus_;
  }
  if (pointstatus) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(pointstatus);
    if (message_arena != submessage_arena) {
      pointstatus = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, pointstatus, submessage_arena);
    }
    
  } else {
    
  }
  pointstatus_ = pointstatus;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationEventAndStatusZGEN.PointStatus)
}

// -------------------------------------------------------------------

// GenerationEventZGEN

// .generationmodule.GenerationEventAndStatusZGEN generationEventAndStatusZGEN = 1 [(.uml.option_parent_message) = true];
inline bool GenerationEventZGEN::_internal_has_generationeventandstatuszgen() const {
  return this != internal_default_instance() && generationeventandstatuszgen_ != nullptr;
}
inline bool GenerationEventZGEN::has_generationeventandstatuszgen() const {
  return _internal_has_generationeventandstatuszgen();
}
inline void GenerationEventZGEN::clear_generationeventandstatuszgen() {
  if (GetArena() == nullptr && generationeventandstatuszgen_ != nullptr) {
    delete generationeventandstatuszgen_;
  }
  generationeventandstatuszgen_ = nullptr;
}
inline const ::generationmodule::GenerationEventAndStatusZGEN& GenerationEventZGEN::_internal_generationeventandstatuszgen() const {
  const ::generationmodule::GenerationEventAndStatusZGEN* p = generationeventandstatuszgen_;
  return p != nullptr ? *p : reinterpret_cast<const ::generationmodule::GenerationEventAndStatusZGEN&>(
      ::generationmodule::_GenerationEventAndStatusZGEN_default_instance_);
}
inline const ::generationmodule::GenerationEventAndStatusZGEN& GenerationEventZGEN::generationeventandstatuszgen() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationEventZGEN.generationEventAndStatusZGEN)
  return _internal_generationeventandstatuszgen();
}
inline void GenerationEventZGEN::unsafe_arena_set_allocated_generationeventandstatuszgen(
    ::generationmodule::GenerationEventAndStatusZGEN* generationeventandstatuszgen) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(generationeventandstatuszgen_);
  }
  generationeventandstatuszgen_ = generationeventandstatuszgen;
  if (generationeventandstatuszgen) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationEventZGEN.generationEventAndStatusZGEN)
}
inline ::generationmodule::GenerationEventAndStatusZGEN* GenerationEventZGEN::release_generationeventandstatuszgen() {
  
  ::generationmodule::GenerationEventAndStatusZGEN* temp = generationeventandstatuszgen_;
  generationeventandstatuszgen_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::generationmodule::GenerationEventAndStatusZGEN* GenerationEventZGEN::unsafe_arena_release_generationeventandstatuszgen() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationEventZGEN.generationEventAndStatusZGEN)
  
  ::generationmodule::GenerationEventAndStatusZGEN* temp = generationeventandstatuszgen_;
  generationeventandstatuszgen_ = nullptr;
  return temp;
}
inline ::generationmodule::GenerationEventAndStatusZGEN* GenerationEventZGEN::_internal_mutable_generationeventandstatuszgen() {
  
  if (generationeventandstatuszgen_ == nullptr) {
    auto* p = CreateMaybeMessage<::generationmodule::GenerationEventAndStatusZGEN>(GetArena());
    generationeventandstatuszgen_ = p;
  }
  return generationeventandstatuszgen_;
}
inline ::generationmodule::GenerationEventAndStatusZGEN* GenerationEventZGEN::mutable_generationeventandstatuszgen() {
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationEventZGEN.generationEventAndStatusZGEN)
  return _internal_mutable_generationeventandstatuszgen();
}
inline void GenerationEventZGEN::set_allocated_generationeventandstatuszgen(::generationmodule::GenerationEventAndStatusZGEN* generationeventandstatuszgen) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete generationeventandstatuszgen_;
  }
  if (generationeventandstatuszgen) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(generationeventandstatuszgen);
    if (message_arena != submessage_arena) {
      generationeventandstatuszgen = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, generationeventandstatuszgen, submessage_arena);
    }
    
  } else {
    
  }
  generationeventandstatuszgen_ = generationeventandstatuszgen;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationEventZGEN.generationEventAndStatusZGEN)
}

// -------------------------------------------------------------------

// GenerationEvent

// .commonmodule.EventValue eventValue = 1 [(.uml.option_parent_message) = true];
inline bool GenerationEvent::_internal_has_eventvalue() const {
  return this != internal_default_instance() && eventvalue_ != nullptr;
}
inline bool GenerationEvent::has_eventvalue() const {
  return _internal_has_eventvalue();
}
inline const ::commonmodule::EventValue& GenerationEvent::_internal_eventvalue() const {
  const ::commonmodule::EventValue* p = eventvalue_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::EventValue&>(
      ::commonmodule::_EventValue_default_instance_);
}
inline const ::commonmodule::EventValue& GenerationEvent::eventvalue() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationEvent.eventValue)
  return _internal_eventvalue();
}
inline void GenerationEvent::unsafe_arena_set_allocated_eventvalue(
    ::commonmodule::EventValue* eventvalue) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(eventvalue_);
  }
  eventvalue_ = eventvalue;
  if (eventvalue) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationEvent.eventValue)
}
inline ::commonmodule::EventValue* GenerationEvent::release_eventvalue() {
  
  ::commonmodule::EventValue* temp = eventvalue_;
  eventvalue_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::commonmodule::EventValue* GenerationEvent::unsafe_arena_release_eventvalue() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationEvent.eventValue)
  
  ::commonmodule::EventValue* temp = eventvalue_;
  eventvalue_ = nullptr;
  return temp;
}
inline ::commonmodule::EventValue* GenerationEvent::_internal_mutable_eventvalue() {
  
  if (eventvalue_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::EventValue>(GetArena());
    eventvalue_ = p;
  }
  return eventvalue_;
}
inline ::commonmodule::EventValue* GenerationEvent::mutable_eventvalue() {
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationEvent.eventValue)
  return _internal_mutable_eventvalue();
}
inline void GenerationEvent::set_allocated_eventvalue(::commonmodule::EventValue* eventvalue) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(eventvalue_);
  }
  if (eventvalue) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(eventvalue)->GetArena();
    if (message_arena != submessage_arena) {
      eventvalue = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, eventvalue, submessage_arena);
    }
    
  } else {
    
  }
  eventvalue_ = eventvalue;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationEvent.eventValue)
}

// .generationmodule.GenerationEventZGEN generationEventZGEN = 2;
inline bool GenerationEvent::_internal_has_generationeventzgen() const {
  return this != internal_default_instance() && generationeventzgen_ != nullptr;
}
inline bool GenerationEvent::has_generationeventzgen() const {
  return _internal_has_generationeventzgen();
}
inline void GenerationEvent::clear_generationeventzgen() {
  if (GetArena() == nullptr && generationeventzgen_ != nullptr) {
    delete generationeventzgen_;
  }
  generationeventzgen_ = nullptr;
}
inline const ::generationmodule::GenerationEventZGEN& GenerationEvent::_internal_generationeventzgen() const {
  const ::generationmodule::GenerationEventZGEN* p = generationeventzgen_;
  return p != nullptr ? *p : reinterpret_cast<const ::generationmodule::GenerationEventZGEN&>(
      ::generationmodule::_GenerationEventZGEN_default_instance_);
}
inline const ::generationmodule::GenerationEventZGEN& GenerationEvent::generationeventzgen() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationEvent.generationEventZGEN)
  return _internal_generationeventzgen();
}
inline void GenerationEvent::unsafe_arena_set_allocated_generationeventzgen(
    ::generationmodule::GenerationEventZGEN* generationeventzgen) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(generationeventzgen_);
  }
  generationeventzgen_ = generationeventzgen;
  if (generationeventzgen) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationEvent.generationEventZGEN)
}
inline ::generationmodule::GenerationEventZGEN* GenerationEvent::release_generationeventzgen() {
  
  ::generationmodule::GenerationEventZGEN* temp = generationeventzgen_;
  generationeventzgen_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::generationmodule::GenerationEventZGEN* GenerationEvent::unsafe_arena_release_generationeventzgen() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationEvent.generationEventZGEN)
  
  ::generationmodule::GenerationEventZGEN* temp = generationeventzgen_;
  generationeventzgen_ = nullptr;
  return temp;
}
inline ::generationmodule::GenerationEventZGEN* GenerationEvent::_internal_mutable_generationeventzgen() {
  
  if (generationeventzgen_ == nullptr) {
    auto* p = CreateMaybeMessage<::generationmodule::GenerationEventZGEN>(GetArena());
    generationeventzgen_ = p;
  }
  return generationeventzgen_;
}
inline ::generationmodule::GenerationEventZGEN* GenerationEvent::mutable_generationeventzgen() {
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationEvent.generationEventZGEN)
  return _internal_mutable_generationeventzgen();
}
inline void GenerationEvent::set_allocated_generationeventzgen(::generationmodule::GenerationEventZGEN* generationeventzgen) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete generationeventzgen_;
  }
  if (generationeventzgen) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(generationeventzgen);
    if (message_arena != submessage_arena) {
      generationeventzgen = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, generationeventzgen, submessage_arena);
    }
    
  } else {
    
  }
  generationeventzgen_ = generationeventzgen;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationEvent.generationEventZGEN)
}

// -------------------------------------------------------------------

// GenerationEventProfile

// .commonmodule.EventMessageInfo eventMessageInfo = 1 [(.uml.option_parent_message) = true];
inline bool GenerationEventProfile::_internal_has_eventmessageinfo() const {
  return this != internal_default_instance() && eventmessageinfo_ != nullptr;
}
inline bool GenerationEventProfile::has_eventmessageinfo() const {
  return _internal_has_eventmessageinfo();
}
inline const ::commonmodule::EventMessageInfo& GenerationEventProfile::_internal_eventmessageinfo() const {
  const ::commonmodule::EventMessageInfo* p = eventmessageinfo_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::EventMessageInfo&>(
      ::commonmodule::_EventMessageInfo_default_instance_);
}
inline const ::commonmodule::EventMessageInfo& GenerationEventProfile::eventmessageinfo() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationEventProfile.eventMessageInfo)
  return _internal_eventmessageinfo();
}
inline void GenerationEventProfile::unsafe_arena_set_allocated_eventmessageinfo(
    ::commonmodule::EventMessageInfo* eventmessageinfo) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(eventmessageinfo_);
  }
  eventmessageinfo_ = eventmessageinfo;
  if (eventmessageinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationEventProfile.eventMessageInfo)
}
inline ::commonmodule::EventMessageInfo* GenerationEventProfile::release_eventmessageinfo() {
  
  ::commonmodule::EventMessageInfo* temp = eventmessageinfo_;
  eventmessageinfo_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::commonmodule::EventMessageInfo* GenerationEventProfile::unsafe_arena_release_eventmessageinfo() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationEventProfile.eventMessageInfo)
  
  ::commonmodule::EventMessageInfo* temp = eventmessageinfo_;
  eventmessageinfo_ = nullptr;
  return temp;
}
inline ::commonmodule::EventMessageInfo* GenerationEventProfile::_internal_mutable_eventmessageinfo() {
  
  if (eventmessageinfo_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::EventMessageInfo>(GetArena());
    eventmessageinfo_ = p;
  }
  return eventmessageinfo_;
}
inline ::commonmodule::EventMessageInfo* GenerationEventProfile::mutable_eventmessageinfo() {
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationEventProfile.eventMessageInfo)
  return _internal_mutable_eventmessageinfo();
}
inline void GenerationEventProfile::set_allocated_eventmessageinfo(::commonmodule::EventMessageInfo* eventmessageinfo) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(eventmessageinfo_);
  }
  if (eventmessageinfo) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(eventmessageinfo)->GetArena();
    if (message_arena != submessage_arena) {
      eventmessageinfo = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, eventmessageinfo, submessage_arena);
    }
    
  } else {
    
  }
  eventmessageinfo_ = eventmessageinfo;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationEventProfile.eventMessageInfo)
}

// .generationmodule.GeneratingUnit generatingUnit = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
inline bool GenerationEventProfile::_internal_has_generatingunit() const {
  return this != internal_default_instance() && generatingunit_ != nullptr;
}
inline bool GenerationEventProfile::has_generatingunit() const {
  return _internal_has_generatingunit();
}
inline void GenerationEventProfile::clear_generatingunit() {
  if (GetArena() == nullptr && generatingunit_ != nullptr) {
    delete generatingunit_;
  }
  generatingunit_ = nullptr;
}
inline const ::generationmodule::GeneratingUnit& GenerationEventProfile::_internal_generatingunit() const {
  const ::generationmodule::GeneratingUnit* p = generatingunit_;
  return p != nullptr ? *p : reinterpret_cast<const ::generationmodule::GeneratingUnit&>(
      ::generationmodule::_GeneratingUnit_default_instance_);
}
inline const ::generationmodule::GeneratingUnit& GenerationEventProfile::generatingunit() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationEventProfile.generatingUnit)
  return _internal_generatingunit();
}
inline void GenerationEventProfile::unsafe_arena_set_allocated_generatingunit(
    ::generationmodule::GeneratingUnit* generatingunit) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(generatingunit_);
  }
  generatingunit_ = generatingunit;
  if (generatingunit) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationEventProfile.generatingUnit)
}
inline ::generationmodule::GeneratingUnit* GenerationEventProfile::release_generatingunit() {
  
  ::generationmodule::GeneratingUnit* temp = generatingunit_;
  generatingunit_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::generationmodule::GeneratingUnit* GenerationEventProfile::unsafe_arena_release_generatingunit() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationEventProfile.generatingUnit)
  
  ::generationmodule::GeneratingUnit* temp = generatingunit_;
  generatingunit_ = nullptr;
  return temp;
}
inline ::generationmodule::GeneratingUnit* GenerationEventProfile::_internal_mutable_generatingunit() {
  
  if (generatingunit_ == nullptr) {
    auto* p = CreateMaybeMessage<::generationmodule::GeneratingUnit>(GetArena());
    generatingunit_ = p;
  }
  return generatingunit_;
}
inline ::generationmodule::GeneratingUnit* GenerationEventProfile::mutable_generatingunit() {
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationEventProfile.generatingUnit)
  return _internal_mutable_generatingunit();
}
inline void GenerationEventProfile::set_allocated_generatingunit(::generationmodule::GeneratingUnit* generatingunit) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete generatingunit_;
  }
  if (generatingunit) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(generatingunit);
    if (message_arena != submessage_arena) {
      generatingunit = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, generatingunit, submessage_arena);
    }
    
  } else {
    
  }
  generatingunit_ = generatingunit;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationEventProfile.generatingUnit)
}

// .generationmodule.GenerationEvent generationEvent = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
inline bool GenerationEventProfile::_internal_has_generationevent() const {
  return this != internal_default_instance() && generationevent_ != nullptr;
}
inline bool GenerationEventProfile::has_generationevent() const {
  return _internal_has_generationevent();
}
inline void GenerationEventProfile::clear_generationevent() {
  if (GetArena() == nullptr && generationevent_ != nullptr) {
    delete generationevent_;
  }
  generationevent_ = nullptr;
}
inline const ::generationmodule::GenerationEvent& GenerationEventProfile::_internal_generationevent() const {
  const ::generationmodule::GenerationEvent* p = generationevent_;
  return p != nullptr ? *p : reinterpret_cast<const ::generationmodule::GenerationEvent&>(
      ::generationmodule::_GenerationEvent_default_instance_);
}
inline const ::generationmodule::GenerationEvent& GenerationEventProfile::generationevent() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationEventProfile.generationEvent)
  return _internal_generationevent();
}
inline void GenerationEventProfile::unsafe_arena_set_allocated_generationevent(
    ::generationmodule::GenerationEvent* generationevent) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(generationevent_);
  }
  generationevent_ = generationevent;
  if (generationevent) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationEventProfile.generationEvent)
}
inline ::generationmodule::GenerationEvent* GenerationEventProfile::release_generationevent() {
  
  ::generationmodule::GenerationEvent* temp = generationevent_;
  generationevent_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::generationmodule::GenerationEvent* GenerationEventProfile::unsafe_arena_release_generationevent() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationEventProfile.generationEvent)
  
  ::generationmodule::GenerationEvent* temp = generationevent_;
  generationevent_ = nullptr;
  return temp;
}
inline ::generationmodule::GenerationEvent* GenerationEventProfile::_internal_mutable_generationevent() {
  
  if (generationevent_ == nullptr) {
    auto* p = CreateMaybeMessage<::generationmodule::GenerationEvent>(GetArena());
    generationevent_ = p;
  }
  return generationevent_;
}
inline ::generationmodule::GenerationEvent* GenerationEventProfile::mutable_generationevent() {
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationEventProfile.generationEvent)
  return _internal_mutable_generationevent();
}
inline void GenerationEventProfile::set_allocated_generationevent(::generationmodule::GenerationEvent* generationevent) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete generationevent_;
  }
  if (generationevent) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(generationevent);
    if (message_arena != submessage_arena) {
      generationevent = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, generationevent, submessage_arena);
    }
    
  } else {
    
  }
  generationevent_ = generationevent;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationEventProfile.generationEvent)
}

// -------------------------------------------------------------------

// GenerationStatusZGEN

// .generationmodule.GenerationEventAndStatusZGEN generationEventAndStatusZGEN = 1 [(.uml.option_parent_message) = true];
inline bool GenerationStatusZGEN::_internal_has_generationeventandstatuszgen() const {
  return this != internal_default_instance() && generationeventandstatuszgen_ != nullptr;
}
inline bool GenerationStatusZGEN::has_generationeventandstatuszgen() const {
  return _internal_has_generationeventandstatuszgen();
}
inline void GenerationStatusZGEN::clear_generationeventandstatuszgen() {
  if (GetArena() == nullptr && generationeventandstatuszgen_ != nullptr) {
    delete generationeventandstatuszgen_;
  }
  generationeventandstatuszgen_ = nullptr;
}
inline const ::generationmodule::GenerationEventAndStatusZGEN& GenerationStatusZGEN::_internal_generationeventandstatuszgen() const {
  const ::generationmodule::GenerationEventAndStatusZGEN* p = generationeventandstatuszgen_;
  return p != nullptr ? *p : reinterpret_cast<const ::generationmodule::GenerationEventAndStatusZGEN&>(
      ::generationmodule::_GenerationEventAndStatusZGEN_default_instance_);
}
inline const ::generationmodule::GenerationEventAndStatusZGEN& GenerationStatusZGEN::generationeventandstatuszgen() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationStatusZGEN.generationEventAndStatusZGEN)
  return _internal_generationeventandstatuszgen();
}
inline void GenerationStatusZGEN::unsafe_arena_set_allocated_generationeventandstatuszgen(
    ::generationmodule::GenerationEventAndStatusZGEN* generationeventandstatuszgen) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(generationeventandstatuszgen_);
  }
  generationeventandstatuszgen_ = generationeventandstatuszgen;
  if (generationeventandstatuszgen) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationStatusZGEN.generationEventAndStatusZGEN)
}
inline ::generationmodule::GenerationEventAndStatusZGEN* GenerationStatusZGEN::release_generationeventandstatuszgen() {
  
  ::generationmodule::GenerationEventAndStatusZGEN* temp = generationeventandstatuszgen_;
  generationeventandstatuszgen_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::generationmodule::GenerationEventAndStatusZGEN* GenerationStatusZGEN::unsafe_arena_release_generationeventandstatuszgen() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationStatusZGEN.generationEventAndStatusZGEN)
  
  ::generationmodule::GenerationEventAndStatusZGEN* temp = generationeventandstatuszgen_;
  generationeventandstatuszgen_ = nullptr;
  return temp;
}
inline ::generationmodule::GenerationEventAndStatusZGEN* GenerationStatusZGEN::_internal_mutable_generationeventandstatuszgen() {
  
  if (generationeventandstatuszgen_ == nullptr) {
    auto* p = CreateMaybeMessage<::generationmodule::GenerationEventAndStatusZGEN>(GetArena());
    generationeventandstatuszgen_ = p;
  }
  return generationeventandstatuszgen_;
}
inline ::generationmodule::GenerationEventAndStatusZGEN* GenerationStatusZGEN::mutable_generationeventandstatuszgen() {
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationStatusZGEN.generationEventAndStatusZGEN)
  return _internal_mutable_generationeventandstatuszgen();
}
inline void GenerationStatusZGEN::set_allocated_generationeventandstatuszgen(::generationmodule::GenerationEventAndStatusZGEN* generationeventandstatuszgen) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete generationeventandstatuszgen_;
  }
  if (generationeventandstatuszgen) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(generationeventandstatuszgen);
    if (message_arena != submessage_arena) {
      generationeventandstatuszgen = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, generationeventandstatuszgen, submessage_arena);
    }
    
  } else {
    
  }
  generationeventandstatuszgen_ = generationeventandstatuszgen;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationStatusZGEN.generationEventAndStatusZGEN)
}

// -------------------------------------------------------------------

// GenerationStatus

// .commonmodule.StatusValue statusValue = 1 [(.uml.option_parent_message) = true];
inline bool GenerationStatus::_internal_has_statusvalue() const {
  return this != internal_default_instance() && statusvalue_ != nullptr;
}
inline bool GenerationStatus::has_statusvalue() const {
  return _internal_has_statusvalue();
}
inline const ::commonmodule::StatusValue& GenerationStatus::_internal_statusvalue() const {
  const ::commonmodule::StatusValue* p = statusvalue_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::StatusValue&>(
      ::commonmodule::_StatusValue_default_instance_);
}
inline const ::commonmodule::StatusValue& GenerationStatus::statusvalue() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationStatus.statusValue)
  return _internal_statusvalue();
}
inline void GenerationStatus::unsafe_arena_set_allocated_statusvalue(
    ::commonmodule::StatusValue* statusvalue) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(statusvalue_);
  }
  statusvalue_ = statusvalue;
  if (statusvalue) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationStatus.statusValue)
}
inline ::commonmodule::StatusValue* GenerationStatus::release_statusvalue() {
  
  ::commonmodule::StatusValue* temp = statusvalue_;
  statusvalue_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::commonmodule::StatusValue* GenerationStatus::unsafe_arena_release_statusvalue() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationStatus.statusValue)
  
  ::commonmodule::StatusValue* temp = statusvalue_;
  statusvalue_ = nullptr;
  return temp;
}
inline ::commonmodule::StatusValue* GenerationStatus::_internal_mutable_statusvalue() {
  
  if (statusvalue_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::StatusValue>(GetArena());
    statusvalue_ = p;
  }
  return statusvalue_;
}
inline ::commonmodule::StatusValue* GenerationStatus::mutable_statusvalue() {
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationStatus.statusValue)
  return _internal_mutable_statusvalue();
}
inline void GenerationStatus::set_allocated_statusvalue(::commonmodule::StatusValue* statusvalue) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(statusvalue_);
  }
  if (statusvalue) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(statusvalue)->GetArena();
    if (message_arena != submessage_arena) {
      statusvalue = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, statusvalue, submessage_arena);
    }
    
  } else {
    
  }
  statusvalue_ = statusvalue;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationStatus.statusValue)
}

// .generationmodule.GenerationStatusZGEN generationStatusZGEN = 2;
inline bool GenerationStatus::_internal_has_generationstatuszgen() const {
  return this != internal_default_instance() && generationstatuszgen_ != nullptr;
}
inline bool GenerationStatus::has_generationstatuszgen() const {
  return _internal_has_generationstatuszgen();
}
inline void GenerationStatus::clear_generationstatuszgen() {
  if (GetArena() == nullptr && generationstatuszgen_ != nullptr) {
    delete generationstatuszgen_;
  }
  generationstatuszgen_ = nullptr;
}
inline const ::generationmodule::GenerationStatusZGEN& GenerationStatus::_internal_generationstatuszgen() const {
  const ::generationmodule::GenerationStatusZGEN* p = generationstatuszgen_;
  return p != nullptr ? *p : reinterpret_cast<const ::generationmodule::GenerationStatusZGEN&>(
      ::generationmodule::_GenerationStatusZGEN_default_instance_);
}
inline const ::generationmodule::GenerationStatusZGEN& GenerationStatus::generationstatuszgen() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationStatus.generationStatusZGEN)
  return _internal_generationstatuszgen();
}
inline void GenerationStatus::unsafe_arena_set_allocated_generationstatuszgen(
    ::generationmodule::GenerationStatusZGEN* generationstatuszgen) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(generationstatuszgen_);
  }
  generationstatuszgen_ = generationstatuszgen;
  if (generationstatuszgen) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationStatus.generationStatusZGEN)
}
inline ::generationmodule::GenerationStatusZGEN* GenerationStatus::release_generationstatuszgen() {
  
  ::generationmodule::GenerationStatusZGEN* temp = generationstatuszgen_;
  generationstatuszgen_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::generationmodule::GenerationStatusZGEN* GenerationStatus::unsafe_arena_release_generationstatuszgen() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationStatus.generationStatusZGEN)
  
  ::generationmodule::GenerationStatusZGEN* temp = generationstatuszgen_;
  generationstatuszgen_ = nullptr;
  return temp;
}
inline ::generationmodule::GenerationStatusZGEN* GenerationStatus::_internal_mutable_generationstatuszgen() {
  
  if (generationstatuszgen_ == nullptr) {
    auto* p = CreateMaybeMessage<::generationmodule::GenerationStatusZGEN>(GetArena());
    generationstatuszgen_ = p;
  }
  return generationstatuszgen_;
}
inline ::generationmodule::GenerationStatusZGEN* GenerationStatus::mutable_generationstatuszgen() {
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationStatus.generationStatusZGEN)
  return _internal_mutable_generationstatuszgen();
}
inline void GenerationStatus::set_allocated_generationstatuszgen(::generationmodule::GenerationStatusZGEN* generationstatuszgen) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete generationstatuszgen_;
  }
  if (generationstatuszgen) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(generationstatuszgen);
    if (message_arena != submessage_arena) {
      generationstatuszgen = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, generationstatuszgen, submessage_arena);
    }
    
  } else {
    
  }
  generationstatuszgen_ = generationstatuszgen;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationStatus.generationStatusZGEN)
}

// -------------------------------------------------------------------

// GenerationStatusProfile

// .commonmodule.StatusMessageInfo statusMessageInfo = 1 [(.uml.option_parent_message) = true];
inline bool GenerationStatusProfile::_internal_has_statusmessageinfo() const {
  return this != internal_default_instance() && statusmessageinfo_ != nullptr;
}
inline bool GenerationStatusProfile::has_statusmessageinfo() const {
  return _internal_has_statusmessageinfo();
}
inline const ::commonmodule::StatusMessageInfo& GenerationStatusProfile::_internal_statusmessageinfo() const {
  const ::commonmodule::StatusMessageInfo* p = statusmessageinfo_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::StatusMessageInfo&>(
      ::commonmodule::_StatusMessageInfo_default_instance_);
}
inline const ::commonmodule::StatusMessageInfo& GenerationStatusProfile::statusmessageinfo() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationStatusProfile.statusMessageInfo)
  return _internal_statusmessageinfo();
}
inline void GenerationStatusProfile::unsafe_arena_set_allocated_statusmessageinfo(
    ::commonmodule::StatusMessageInfo* statusmessageinfo) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(statusmessageinfo_);
  }
  statusmessageinfo_ = statusmessageinfo;
  if (statusmessageinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationStatusProfile.statusMessageInfo)
}
inline ::commonmodule::StatusMessageInfo* GenerationStatusProfile::release_statusmessageinfo() {
  
  ::commonmodule::StatusMessageInfo* temp = statusmessageinfo_;
  statusmessageinfo_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::commonmodule::StatusMessageInfo* GenerationStatusProfile::unsafe_arena_release_statusmessageinfo() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationStatusProfile.statusMessageInfo)
  
  ::commonmodule::StatusMessageInfo* temp = statusmessageinfo_;
  statusmessageinfo_ = nullptr;
  return temp;
}
inline ::commonmodule::StatusMessageInfo* GenerationStatusProfile::_internal_mutable_statusmessageinfo() {
  
  if (statusmessageinfo_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::StatusMessageInfo>(GetArena());
    statusmessageinfo_ = p;
  }
  return statusmessageinfo_;
}
inline ::commonmodule::StatusMessageInfo* GenerationStatusProfile::mutable_statusmessageinfo() {
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationStatusProfile.statusMessageInfo)
  return _internal_mutable_statusmessageinfo();
}
inline void GenerationStatusProfile::set_allocated_statusmessageinfo(::commonmodule::StatusMessageInfo* statusmessageinfo) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(statusmessageinfo_);
  }
  if (statusmessageinfo) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(statusmessageinfo)->GetArena();
    if (message_arena != submessage_arena) {
      statusmessageinfo = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, statusmessageinfo, submessage_arena);
    }
    
  } else {
    
  }
  statusmessageinfo_ = statusmessageinfo;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationStatusProfile.statusMessageInfo)
}

// .generationmodule.GeneratingUnit generatingUnit = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
inline bool GenerationStatusProfile::_internal_has_generatingunit() const {
  return this != internal_default_instance() && generatingunit_ != nullptr;
}
inline bool GenerationStatusProfile::has_generatingunit() const {
  return _internal_has_generatingunit();
}
inline void GenerationStatusProfile::clear_generatingunit() {
  if (GetArena() == nullptr && generatingunit_ != nullptr) {
    delete generatingunit_;
  }
  generatingunit_ = nullptr;
}
inline const ::generationmodule::GeneratingUnit& GenerationStatusProfile::_internal_generatingunit() const {
  const ::generationmodule::GeneratingUnit* p = generatingunit_;
  return p != nullptr ? *p : reinterpret_cast<const ::generationmodule::GeneratingUnit&>(
      ::generationmodule::_GeneratingUnit_default_instance_);
}
inline const ::generationmodule::GeneratingUnit& GenerationStatusProfile::generatingunit() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationStatusProfile.generatingUnit)
  return _internal_generatingunit();
}
inline void GenerationStatusProfile::unsafe_arena_set_allocated_generatingunit(
    ::generationmodule::GeneratingUnit* generatingunit) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(generatingunit_);
  }
  generatingunit_ = generatingunit;
  if (generatingunit) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationStatusProfile.generatingUnit)
}
inline ::generationmodule::GeneratingUnit* GenerationStatusProfile::release_generatingunit() {
  
  ::generationmodule::GeneratingUnit* temp = generatingunit_;
  generatingunit_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::generationmodule::GeneratingUnit* GenerationStatusProfile::unsafe_arena_release_generatingunit() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationStatusProfile.generatingUnit)
  
  ::generationmodule::GeneratingUnit* temp = generatingunit_;
  generatingunit_ = nullptr;
  return temp;
}
inline ::generationmodule::GeneratingUnit* GenerationStatusProfile::_internal_mutable_generatingunit() {
  
  if (generatingunit_ == nullptr) {
    auto* p = CreateMaybeMessage<::generationmodule::GeneratingUnit>(GetArena());
    generatingunit_ = p;
  }
  return generatingunit_;
}
inline ::generationmodule::GeneratingUnit* GenerationStatusProfile::mutable_generatingunit() {
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationStatusProfile.generatingUnit)
  return _internal_mutable_generatingunit();
}
inline void GenerationStatusProfile::set_allocated_generatingunit(::generationmodule::GeneratingUnit* generatingunit) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete generatingunit_;
  }
  if (generatingunit) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(generatingunit);
    if (message_arena != submessage_arena) {
      generatingunit = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, generatingunit, submessage_arena);
    }
    
  } else {
    
  }
  generatingunit_ = generatingunit;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationStatusProfile.generatingUnit)
}

// .generationmodule.GenerationStatus generationStatus = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
inline bool GenerationStatusProfile::_internal_has_generationstatus() const {
  return this != internal_default_instance() && generationstatus_ != nullptr;
}
inline bool GenerationStatusProfile::has_generationstatus() const {
  return _internal_has_generationstatus();
}
inline void GenerationStatusProfile::clear_generationstatus() {
  if (GetArena() == nullptr && generationstatus_ != nullptr) {
    delete generationstatus_;
  }
  generationstatus_ = nullptr;
}
inline const ::generationmodule::GenerationStatus& GenerationStatusProfile::_internal_generationstatus() const {
  const ::generationmodule::GenerationStatus* p = generationstatus_;
  return p != nullptr ? *p : reinterpret_cast<const ::generationmodule::GenerationStatus&>(
      ::generationmodule::_GenerationStatus_default_instance_);
}
inline const ::generationmodule::GenerationStatus& GenerationStatusProfile::generationstatus() const {
  // @@protoc_insertion_point(field_get:generationmodule.GenerationStatusProfile.generationStatus)
  return _internal_generationstatus();
}
inline void GenerationStatusProfile::unsafe_arena_set_allocated_generationstatus(
    ::generationmodule::GenerationStatus* generationstatus) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(generationstatus_);
  }
  generationstatus_ = generationstatus;
  if (generationstatus) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generationmodule.GenerationStatusProfile.generationStatus)
}
inline ::generationmodule::GenerationStatus* GenerationStatusProfile::release_generationstatus() {
  
  ::generationmodule::GenerationStatus* temp = generationstatus_;
  generationstatus_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::generationmodule::GenerationStatus* GenerationStatusProfile::unsafe_arena_release_generationstatus() {
  // @@protoc_insertion_point(field_release:generationmodule.GenerationStatusProfile.generationStatus)
  
  ::generationmodule::GenerationStatus* temp = generationstatus_;
  generationstatus_ = nullptr;
  return temp;
}
inline ::generationmodule::GenerationStatus* GenerationStatusProfile::_internal_mutable_generationstatus() {
  
  if (generationstatus_ == nullptr) {
    auto* p = CreateMaybeMessage<::generationmodule::GenerationStatus>(GetArena());
    generationstatus_ = p;
  }
  return generationstatus_;
}
inline ::generationmodule::GenerationStatus* GenerationStatusProfile::mutable_generationstatus() {
  // @@protoc_insertion_point(field_mutable:generationmodule.GenerationStatusProfile.generationStatus)
  return _internal_mutable_generationstatus();
}
inline void GenerationStatusProfile::set_allocated_generationstatus(::generationmodule::GenerationStatus* generationstatus) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete generationstatus_;
  }
  if (generationstatus) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(generationstatus);
    if (message_arena != submessage_arena) {
      generationstatus = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, generationstatus, submessage_arena);
    }
    
  } else {
    
  }
  generationstatus_ = generationstatus;
  // @@protoc_insertion_point(field_set_allocated:generationmodule.GenerationStatusProfile.generationStatus)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace generationmodule

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_generationmodule_2fgenerationmodule_2eproto
