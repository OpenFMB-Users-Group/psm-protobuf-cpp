// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: interconnectionmodule/interconnectionmodule.proto

#include "interconnectionmodule/interconnectionmodule.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_commonmodule_2fcommonmodule_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ControlDPC_commonmodule_2fcommonmodule_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_commonmodule_2fcommonmodule_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ApplicationSystem_commonmodule_2fcommonmodule_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_commonmodule_2fcommonmodule_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_CheckConditions_commonmodule_2fcommonmodule_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_commonmodule_2fcommonmodule_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ControlMessageInfo_commonmodule_2fcommonmodule_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_commonmodule_2fcommonmodule_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_RampRate_commonmodule_2fcommonmodule_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_commonmodule_2fcommonmodule_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Timestamp_commonmodule_2fcommonmodule_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_commonmodule_2fcommonmodule_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_ControlFSCC_commonmodule_2fcommonmodule_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_commonmodule_2fcommonmodule_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_ControlValue_commonmodule_2fcommonmodule_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fwrappers_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_FloatValue_google_2fprotobuf_2fwrappers_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_interconnectionmodule_2finterconnectionmodule_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_InterconnectionCSG_interconnectionmodule_2finterconnectionmodule_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_interconnectionmodule_2finterconnectionmodule_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_InterconnectionControlScheduleFSCH_interconnectionmodule_2finterconnectionmodule_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_interconnectionmodule_2finterconnectionmodule_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_InterconnectionScheduleFSCC_interconnectionmodule_2finterconnectionmodule_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_interconnectionmodule_2finterconnectionmodule_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_InterconnectionSchedule_interconnectionmodule_2finterconnectionmodule_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_interconnectionmodule_2finterconnectionmodule_2eproto ::google::protobuf::internal::SCCInfo<4> scc_info_InterconnectionPoint_interconnectionmodule_2finterconnectionmodule_2eproto;
namespace interconnectionmodule {
class InterconnectionPointDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<InterconnectionPoint> _instance;
} _InterconnectionPoint_default_instance_;
class InterconnectionCSGDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<InterconnectionCSG> _instance;
} _InterconnectionCSG_default_instance_;
class InterconnectionControlScheduleFSCHDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<InterconnectionControlScheduleFSCH> _instance;
} _InterconnectionControlScheduleFSCH_default_instance_;
class InterconnectionScheduleFSCCDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<InterconnectionScheduleFSCC> _instance;
} _InterconnectionScheduleFSCC_default_instance_;
class InterconnectionScheduleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<InterconnectionSchedule> _instance;
} _InterconnectionSchedule_default_instance_;
class PlannedInterconnectionScheduleProfileDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PlannedInterconnectionScheduleProfile> _instance;
} _PlannedInterconnectionScheduleProfile_default_instance_;
class RequestedInterconnectionScheduleProfileDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RequestedInterconnectionScheduleProfile> _instance;
} _RequestedInterconnectionScheduleProfile_default_instance_;
}  // namespace interconnectionmodule
static void InitDefaultsInterconnectionPoint_interconnectionmodule_2finterconnectionmodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::interconnectionmodule::_InterconnectionPoint_default_instance_;
    new (ptr) ::interconnectionmodule::InterconnectionPoint();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::interconnectionmodule::InterconnectionPoint::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_InterconnectionPoint_interconnectionmodule_2finterconnectionmodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsInterconnectionPoint_interconnectionmodule_2finterconnectionmodule_2eproto}, {
      &scc_info_ControlDPC_commonmodule_2fcommonmodule_2eproto.base,
      &scc_info_FloatValue_google_2fprotobuf_2fwrappers_2eproto.base,
      &scc_info_RampRate_commonmodule_2fcommonmodule_2eproto.base,
      &scc_info_Timestamp_commonmodule_2fcommonmodule_2eproto.base,}};

static void InitDefaultsInterconnectionCSG_interconnectionmodule_2finterconnectionmodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::interconnectionmodule::_InterconnectionCSG_default_instance_;
    new (ptr) ::interconnectionmodule::InterconnectionCSG();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::interconnectionmodule::InterconnectionCSG::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_InterconnectionCSG_interconnectionmodule_2finterconnectionmodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsInterconnectionCSG_interconnectionmodule_2finterconnectionmodule_2eproto}, {
      &scc_info_InterconnectionPoint_interconnectionmodule_2finterconnectionmodule_2eproto.base,}};

static void InitDefaultsInterconnectionControlScheduleFSCH_interconnectionmodule_2finterconnectionmodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::interconnectionmodule::_InterconnectionControlScheduleFSCH_default_instance_;
    new (ptr) ::interconnectionmodule::InterconnectionControlScheduleFSCH();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::interconnectionmodule::InterconnectionControlScheduleFSCH::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_InterconnectionControlScheduleFSCH_interconnectionmodule_2finterconnectionmodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsInterconnectionControlScheduleFSCH_interconnectionmodule_2finterconnectionmodule_2eproto}, {
      &scc_info_InterconnectionCSG_interconnectionmodule_2finterconnectionmodule_2eproto.base,}};

static void InitDefaultsInterconnectionScheduleFSCC_interconnectionmodule_2finterconnectionmodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::interconnectionmodule::_InterconnectionScheduleFSCC_default_instance_;
    new (ptr) ::interconnectionmodule::InterconnectionScheduleFSCC();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::interconnectionmodule::InterconnectionScheduleFSCC::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_InterconnectionScheduleFSCC_interconnectionmodule_2finterconnectionmodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsInterconnectionScheduleFSCC_interconnectionmodule_2finterconnectionmodule_2eproto}, {
      &scc_info_ControlFSCC_commonmodule_2fcommonmodule_2eproto.base,
      &scc_info_InterconnectionControlScheduleFSCH_interconnectionmodule_2finterconnectionmodule_2eproto.base,}};

static void InitDefaultsInterconnectionSchedule_interconnectionmodule_2finterconnectionmodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::interconnectionmodule::_InterconnectionSchedule_default_instance_;
    new (ptr) ::interconnectionmodule::InterconnectionSchedule();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::interconnectionmodule::InterconnectionSchedule::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_InterconnectionSchedule_interconnectionmodule_2finterconnectionmodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsInterconnectionSchedule_interconnectionmodule_2finterconnectionmodule_2eproto}, {
      &scc_info_ControlValue_commonmodule_2fcommonmodule_2eproto.base,
      &scc_info_CheckConditions_commonmodule_2fcommonmodule_2eproto.base,
      &scc_info_InterconnectionScheduleFSCC_interconnectionmodule_2finterconnectionmodule_2eproto.base,}};

static void InitDefaultsPlannedInterconnectionScheduleProfile_interconnectionmodule_2finterconnectionmodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::interconnectionmodule::_PlannedInterconnectionScheduleProfile_default_instance_;
    new (ptr) ::interconnectionmodule::PlannedInterconnectionScheduleProfile();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::interconnectionmodule::PlannedInterconnectionScheduleProfile::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_PlannedInterconnectionScheduleProfile_interconnectionmodule_2finterconnectionmodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsPlannedInterconnectionScheduleProfile_interconnectionmodule_2finterconnectionmodule_2eproto}, {
      &scc_info_ControlMessageInfo_commonmodule_2fcommonmodule_2eproto.base,
      &scc_info_ApplicationSystem_commonmodule_2fcommonmodule_2eproto.base,
      &scc_info_InterconnectionSchedule_interconnectionmodule_2finterconnectionmodule_2eproto.base,}};

static void InitDefaultsRequestedInterconnectionScheduleProfile_interconnectionmodule_2finterconnectionmodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::interconnectionmodule::_RequestedInterconnectionScheduleProfile_default_instance_;
    new (ptr) ::interconnectionmodule::RequestedInterconnectionScheduleProfile();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::interconnectionmodule::RequestedInterconnectionScheduleProfile::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_RequestedInterconnectionScheduleProfile_interconnectionmodule_2finterconnectionmodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsRequestedInterconnectionScheduleProfile_interconnectionmodule_2finterconnectionmodule_2eproto}, {
      &scc_info_ControlMessageInfo_commonmodule_2fcommonmodule_2eproto.base,
      &scc_info_ApplicationSystem_commonmodule_2fcommonmodule_2eproto.base,
      &scc_info_InterconnectionSchedule_interconnectionmodule_2finterconnectionmodule_2eproto.base,}};

void InitDefaults_interconnectionmodule_2finterconnectionmodule_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_InterconnectionPoint_interconnectionmodule_2finterconnectionmodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_InterconnectionCSG_interconnectionmodule_2finterconnectionmodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_InterconnectionControlScheduleFSCH_interconnectionmodule_2finterconnectionmodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_InterconnectionScheduleFSCC_interconnectionmodule_2finterconnectionmodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_InterconnectionSchedule_interconnectionmodule_2finterconnectionmodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PlannedInterconnectionScheduleProfile_interconnectionmodule_2finterconnectionmodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RequestedInterconnectionScheduleProfile_interconnectionmodule_2finterconnectionmodule_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_interconnectionmodule_2finterconnectionmodule_2eproto[7];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_interconnectionmodule_2finterconnectionmodule_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_interconnectionmodule_2finterconnectionmodule_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_interconnectionmodule_2finterconnectionmodule_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::interconnectionmodule::InterconnectionPoint, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::interconnectionmodule::InterconnectionPoint, blackstartenabled_),
  PROTOBUF_FIELD_OFFSET(::interconnectionmodule::InterconnectionPoint, frequencysetpointenabled_),
  PROTOBUF_FIELD_OFFSET(::interconnectionmodule::InterconnectionPoint, island_),
  PROTOBUF_FIELD_OFFSET(::interconnectionmodule::InterconnectionPoint, pcthzdroop_),
  PROTOBUF_FIELD_OFFSET(::interconnectionmodule::InterconnectionPoint, pctvdroop_),
  PROTOBUF_FIELD_OFFSET(::interconnectionmodule::InterconnectionPoint, ramprates_),
  PROTOBUF_FIELD_OFFSET(::interconnectionmodule::InterconnectionPoint, reactivepwrsetpointenabled_),
  PROTOBUF_FIELD_OFFSET(::interconnectionmodule::InterconnectionPoint, realpwrsetpointenabled_),
  PROTOBUF_FIELD_OFFSET(::interconnectionmodule::InterconnectionPoint, voltagesetpointenabled_),
  PROTOBUF_FIELD_OFFSET(::interconnectionmodule::InterconnectionPoint, starttime_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::interconnectionmodule::InterconnectionCSG, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::interconnectionmodule::InterconnectionCSG, crvpts_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::interconnectionmodule::InterconnectionControlScheduleFSCH, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::interconnectionmodule::InterconnectionControlScheduleFSCH, valdcsg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::interconnectionmodule::InterconnectionScheduleFSCC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::interconnectionmodule::InterconnectionScheduleFSCC, controlfscc_),
  PROTOBUF_FIELD_OFFSET(::interconnectionmodule::InterconnectionScheduleFSCC, interconnectioncontrolschedulefsch_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::interconnectionmodule::InterconnectionSchedule, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::interconnectionmodule::InterconnectionSchedule, controlvalue_),
  PROTOBUF_FIELD_OFFSET(::interconnectionmodule::InterconnectionSchedule, check_),
  PROTOBUF_FIELD_OFFSET(::interconnectionmodule::InterconnectionSchedule, interconnectionschedulefscc_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::interconnectionmodule::PlannedInterconnectionScheduleProfile, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::interconnectionmodule::PlannedInterconnectionScheduleProfile, controlmessageinfo_),
  PROTOBUF_FIELD_OFFSET(::interconnectionmodule::PlannedInterconnectionScheduleProfile, applicationsystem_),
  PROTOBUF_FIELD_OFFSET(::interconnectionmodule::PlannedInterconnectionScheduleProfile, interconnectionschedule_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::interconnectionmodule::RequestedInterconnectionScheduleProfile, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::interconnectionmodule::RequestedInterconnectionScheduleProfile, controlmessageinfo_),
  PROTOBUF_FIELD_OFFSET(::interconnectionmodule::RequestedInterconnectionScheduleProfile, applicationsystem_),
  PROTOBUF_FIELD_OFFSET(::interconnectionmodule::RequestedInterconnectionScheduleProfile, interconnectionschedule_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::interconnectionmodule::InterconnectionPoint)},
  { 15, -1, sizeof(::interconnectionmodule::InterconnectionCSG)},
  { 21, -1, sizeof(::interconnectionmodule::InterconnectionControlScheduleFSCH)},
  { 27, -1, sizeof(::interconnectionmodule::InterconnectionScheduleFSCC)},
  { 34, -1, sizeof(::interconnectionmodule::InterconnectionSchedule)},
  { 42, -1, sizeof(::interconnectionmodule::PlannedInterconnectionScheduleProfile)},
  { 50, -1, sizeof(::interconnectionmodule::RequestedInterconnectionScheduleProfile)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::interconnectionmodule::_InterconnectionPoint_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::interconnectionmodule::_InterconnectionCSG_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::interconnectionmodule::_InterconnectionControlScheduleFSCH_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::interconnectionmodule::_InterconnectionScheduleFSCC_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::interconnectionmodule::_InterconnectionSchedule_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::interconnectionmodule::_PlannedInterconnectionScheduleProfile_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::interconnectionmodule::_RequestedInterconnectionScheduleProfile_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_interconnectionmodule_2finterconnectionmodule_2eproto = {
  {}, AddDescriptors_interconnectionmodule_2finterconnectionmodule_2eproto, "interconnectionmodule/interconnectionmodule.proto", schemas,
  file_default_instances, TableStruct_interconnectionmodule_2finterconnectionmodule_2eproto::offsets,
  file_level_metadata_interconnectionmodule_2finterconnectionmodule_2eproto, 7, file_level_enum_descriptors_interconnectionmodule_2finterconnectionmodule_2eproto, file_level_service_descriptors_interconnectionmodule_2finterconnectionmodule_2eproto,
};

const char descriptor_table_protodef_interconnectionmodule_2finterconnectionmodule_2eproto[] =
  "\n1interconnectionmodule/interconnectionm"
  "odule.proto\022\025interconnectionmodule\032\tuml."
  "proto\032\036google/protobuf/wrappers.proto\032\037c"
  "ommonmodule/commonmodule.proto\"\245\004\n\024Inter"
  "connectionPoint\0223\n\021blackStartEnabled\030\001 \001"
  "(\0132\030.commonmodule.ControlDPC\022:\n\030frequenc"
  "ySetPointEnabled\030\002 \001(\0132\030.commonmodule.Co"
  "ntrolDPC\022(\n\006island\030\003 \001(\0132\030.commonmodule."
  "ControlDPC\022/\n\npctHzDroop\030\004 \001(\0132\033.google."
  "protobuf.FloatValue\022.\n\tpctVDroop\030\005 \001(\0132\033"
  ".google.protobuf.FloatValue\022)\n\trampRates"
  "\030\006 \001(\0132\026.commonmodule.RampRate\022<\n\032reacti"
  "vePwrSetPointEnabled\030\007 \001(\0132\030.commonmodul"
  "e.ControlDPC\0228\n\026realPwrSetPointEnabled\030\010"
  " \001(\0132\030.commonmodule.ControlDPC\0228\n\026voltag"
  "eSetPointEnabled\030\t \001(\0132\030.commonmodule.Co"
  "ntrolDPC\0224\n\tstartTime\030\n \001(\0132\027.commonmodu"
  "le.TimestampB\010\210\265\030\001\220\265\030\001\"[\n\022Interconnectio"
  "nCSG\022E\n\006crvPts\030\001 \003(\0132+.interconnectionmo"
  "dule.InterconnectionPointB\010\210\265\030\001\220\265\030\001\"j\n\"I"
  "nterconnectionControlScheduleFSCH\022D\n\007Val"
  "DCSG\030\001 \001(\0132).interconnectionmodule.Inter"
  "connectionCSGB\010\210\265\030\001\220\265\030\001\"\300\001\n\033Interconnect"
  "ionScheduleFSCC\0224\n\013controlFSCC\030\001 \001(\0132\031.c"
  "ommonmodule.ControlFSCCB\004\200\265\030\001\022k\n\"interco"
  "nnectionControlScheduleFSCH\030\002 \003(\01329.inte"
  "rconnectionmodule.InterconnectionControl"
  "ScheduleFSCHB\004\220\265\030\000\"\342\001\n\027InterconnectionSc"
  "hedule\0226\n\014controlValue\030\001 \001(\0132\032.commonmod"
  "ule.ControlValueB\004\200\265\030\001\022,\n\005check\030\002 \001(\0132\035."
  "commonmodule.CheckConditions\022a\n\033intercon"
  "nectionScheduleFSCC\030\003 \001(\01322.interconnect"
  "ionmodule.InterconnectionScheduleFSCCB\010\210"
  "\265\030\001\220\265\030\001\"\222\002\n%PlannedInterconnectionSchedu"
  "leProfile\022B\n\022controlMessageInfo\030\001 \001(\0132 ."
  "commonmodule.ControlMessageInfoB\004\200\265\030\001\022D\n"
  "\021applicationSystem\030\002 \001(\0132\037.commonmodule."
  "ApplicationSystemB\010\210\265\030\001\220\265\030\001\022Y\n\027interconn"
  "ectionSchedule\030\003 \001(\0132..interconnectionmo"
  "dule.InterconnectionScheduleB\010\210\265\030\001\220\265\030\001:\004"
  "\300\363\030\001\"\224\002\n\'RequestedInterconnectionSchedul"
  "eProfile\022B\n\022controlMessageInfo\030\001 \001(\0132 .c"
  "ommonmodule.ControlMessageInfoB\004\200\265\030\001\022D\n\021"
  "applicationSystem\030\002 \001(\0132\037.commonmodule.A"
  "pplicationSystemB\010\210\265\030\001\220\265\030\001\022Y\n\027interconne"
  "ctionSchedule\030\003 \001(\0132..interconnectionmod"
  "ule.InterconnectionScheduleB\010\210\265\030\001\220\265\030\001:\004\300"
  "\363\030\001B\234\001\n\035openfmb.interconnectionmoduleP\001Z"
  "Ygitlab.com/openfmb/psm/ops/protobuf/go-"
  "openfmb-ops-protobuf/openfmb/interconnec"
  "tionmodule\252\002\035openfmb.interconnectionmodu"
  "leb\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_interconnectionmodule_2finterconnectionmodule_2eproto = {
  false, InitDefaults_interconnectionmodule_2finterconnectionmodule_2eproto, 
  descriptor_table_protodef_interconnectionmodule_2finterconnectionmodule_2eproto,
  "interconnectionmodule/interconnectionmodule.proto", &assign_descriptors_table_interconnectionmodule_2finterconnectionmodule_2eproto, 2050,
};

void AddDescriptors_interconnectionmodule_2finterconnectionmodule_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[3] =
  {
    ::AddDescriptors_uml_2eproto,
    ::AddDescriptors_google_2fprotobuf_2fwrappers_2eproto,
    ::AddDescriptors_commonmodule_2fcommonmodule_2eproto,
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_interconnectionmodule_2finterconnectionmodule_2eproto, deps, 3);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_interconnectionmodule_2finterconnectionmodule_2eproto = []() { AddDescriptors_interconnectionmodule_2finterconnectionmodule_2eproto(); return true; }();
namespace interconnectionmodule {

// ===================================================================

void InterconnectionPoint::InitAsDefaultInstance() {
  ::interconnectionmodule::_InterconnectionPoint_default_instance_._instance.get_mutable()->blackstartenabled_ = const_cast< ::commonmodule::ControlDPC*>(
      ::commonmodule::ControlDPC::internal_default_instance());
  ::interconnectionmodule::_InterconnectionPoint_default_instance_._instance.get_mutable()->frequencysetpointenabled_ = const_cast< ::commonmodule::ControlDPC*>(
      ::commonmodule::ControlDPC::internal_default_instance());
  ::interconnectionmodule::_InterconnectionPoint_default_instance_._instance.get_mutable()->island_ = const_cast< ::commonmodule::ControlDPC*>(
      ::commonmodule::ControlDPC::internal_default_instance());
  ::interconnectionmodule::_InterconnectionPoint_default_instance_._instance.get_mutable()->pcthzdroop_ = const_cast< ::google::protobuf::FloatValue*>(
      ::google::protobuf::FloatValue::internal_default_instance());
  ::interconnectionmodule::_InterconnectionPoint_default_instance_._instance.get_mutable()->pctvdroop_ = const_cast< ::google::protobuf::FloatValue*>(
      ::google::protobuf::FloatValue::internal_default_instance());
  ::interconnectionmodule::_InterconnectionPoint_default_instance_._instance.get_mutable()->ramprates_ = const_cast< ::commonmodule::RampRate*>(
      ::commonmodule::RampRate::internal_default_instance());
  ::interconnectionmodule::_InterconnectionPoint_default_instance_._instance.get_mutable()->reactivepwrsetpointenabled_ = const_cast< ::commonmodule::ControlDPC*>(
      ::commonmodule::ControlDPC::internal_default_instance());
  ::interconnectionmodule::_InterconnectionPoint_default_instance_._instance.get_mutable()->realpwrsetpointenabled_ = const_cast< ::commonmodule::ControlDPC*>(
      ::commonmodule::ControlDPC::internal_default_instance());
  ::interconnectionmodule::_InterconnectionPoint_default_instance_._instance.get_mutable()->voltagesetpointenabled_ = const_cast< ::commonmodule::ControlDPC*>(
      ::commonmodule::ControlDPC::internal_default_instance());
  ::interconnectionmodule::_InterconnectionPoint_default_instance_._instance.get_mutable()->starttime_ = const_cast< ::commonmodule::Timestamp*>(
      ::commonmodule::Timestamp::internal_default_instance());
}
class InterconnectionPoint::HasBitSetters {
 public:
  static const ::commonmodule::ControlDPC& blackstartenabled(const InterconnectionPoint* msg);
  static const ::commonmodule::ControlDPC& frequencysetpointenabled(const InterconnectionPoint* msg);
  static const ::commonmodule::ControlDPC& island(const InterconnectionPoint* msg);
  static const ::google::protobuf::FloatValue& pcthzdroop(const InterconnectionPoint* msg);
  static const ::google::protobuf::FloatValue& pctvdroop(const InterconnectionPoint* msg);
  static const ::commonmodule::RampRate& ramprates(const InterconnectionPoint* msg);
  static const ::commonmodule::ControlDPC& reactivepwrsetpointenabled(const InterconnectionPoint* msg);
  static const ::commonmodule::ControlDPC& realpwrsetpointenabled(const InterconnectionPoint* msg);
  static const ::commonmodule::ControlDPC& voltagesetpointenabled(const InterconnectionPoint* msg);
  static const ::commonmodule::Timestamp& starttime(const InterconnectionPoint* msg);
};

const ::commonmodule::ControlDPC&
InterconnectionPoint::HasBitSetters::blackstartenabled(const InterconnectionPoint* msg) {
  return *msg->blackstartenabled_;
}
const ::commonmodule::ControlDPC&
InterconnectionPoint::HasBitSetters::frequencysetpointenabled(const InterconnectionPoint* msg) {
  return *msg->frequencysetpointenabled_;
}
const ::commonmodule::ControlDPC&
InterconnectionPoint::HasBitSetters::island(const InterconnectionPoint* msg) {
  return *msg->island_;
}
const ::google::protobuf::FloatValue&
InterconnectionPoint::HasBitSetters::pcthzdroop(const InterconnectionPoint* msg) {
  return *msg->pcthzdroop_;
}
const ::google::protobuf::FloatValue&
InterconnectionPoint::HasBitSetters::pctvdroop(const InterconnectionPoint* msg) {
  return *msg->pctvdroop_;
}
const ::commonmodule::RampRate&
InterconnectionPoint::HasBitSetters::ramprates(const InterconnectionPoint* msg) {
  return *msg->ramprates_;
}
const ::commonmodule::ControlDPC&
InterconnectionPoint::HasBitSetters::reactivepwrsetpointenabled(const InterconnectionPoint* msg) {
  return *msg->reactivepwrsetpointenabled_;
}
const ::commonmodule::ControlDPC&
InterconnectionPoint::HasBitSetters::realpwrsetpointenabled(const InterconnectionPoint* msg) {
  return *msg->realpwrsetpointenabled_;
}
const ::commonmodule::ControlDPC&
InterconnectionPoint::HasBitSetters::voltagesetpointenabled(const InterconnectionPoint* msg) {
  return *msg->voltagesetpointenabled_;
}
const ::commonmodule::Timestamp&
InterconnectionPoint::HasBitSetters::starttime(const InterconnectionPoint* msg) {
  return *msg->starttime_;
}
void InterconnectionPoint::clear_blackstartenabled() {
  if (GetArenaNoVirtual() == nullptr && blackstartenabled_ != nullptr) {
    delete blackstartenabled_;
  }
  blackstartenabled_ = nullptr;
}
void InterconnectionPoint::clear_frequencysetpointenabled() {
  if (GetArenaNoVirtual() == nullptr && frequencysetpointenabled_ != nullptr) {
    delete frequencysetpointenabled_;
  }
  frequencysetpointenabled_ = nullptr;
}
void InterconnectionPoint::clear_island() {
  if (GetArenaNoVirtual() == nullptr && island_ != nullptr) {
    delete island_;
  }
  island_ = nullptr;
}
void InterconnectionPoint::clear_pcthzdroop() {
  if (GetArenaNoVirtual() == nullptr && pcthzdroop_ != nullptr) {
    delete pcthzdroop_;
  }
  pcthzdroop_ = nullptr;
}
void InterconnectionPoint::clear_pctvdroop() {
  if (GetArenaNoVirtual() == nullptr && pctvdroop_ != nullptr) {
    delete pctvdroop_;
  }
  pctvdroop_ = nullptr;
}
void InterconnectionPoint::clear_ramprates() {
  if (GetArenaNoVirtual() == nullptr && ramprates_ != nullptr) {
    delete ramprates_;
  }
  ramprates_ = nullptr;
}
void InterconnectionPoint::clear_reactivepwrsetpointenabled() {
  if (GetArenaNoVirtual() == nullptr && reactivepwrsetpointenabled_ != nullptr) {
    delete reactivepwrsetpointenabled_;
  }
  reactivepwrsetpointenabled_ = nullptr;
}
void InterconnectionPoint::clear_realpwrsetpointenabled() {
  if (GetArenaNoVirtual() == nullptr && realpwrsetpointenabled_ != nullptr) {
    delete realpwrsetpointenabled_;
  }
  realpwrsetpointenabled_ = nullptr;
}
void InterconnectionPoint::clear_voltagesetpointenabled() {
  if (GetArenaNoVirtual() == nullptr && voltagesetpointenabled_ != nullptr) {
    delete voltagesetpointenabled_;
  }
  voltagesetpointenabled_ = nullptr;
}
void InterconnectionPoint::clear_starttime() {
  if (GetArenaNoVirtual() == nullptr && starttime_ != nullptr) {
    delete starttime_;
  }
  starttime_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InterconnectionPoint::kBlackStartEnabledFieldNumber;
const int InterconnectionPoint::kFrequencySetPointEnabledFieldNumber;
const int InterconnectionPoint::kIslandFieldNumber;
const int InterconnectionPoint::kPctHzDroopFieldNumber;
const int InterconnectionPoint::kPctVDroopFieldNumber;
const int InterconnectionPoint::kRampRatesFieldNumber;
const int InterconnectionPoint::kReactivePwrSetPointEnabledFieldNumber;
const int InterconnectionPoint::kRealPwrSetPointEnabledFieldNumber;
const int InterconnectionPoint::kVoltageSetPointEnabledFieldNumber;
const int InterconnectionPoint::kStartTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InterconnectionPoint::InterconnectionPoint()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:interconnectionmodule.InterconnectionPoint)
}
InterconnectionPoint::InterconnectionPoint(const InterconnectionPoint& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_blackstartenabled()) {
    blackstartenabled_ = new ::commonmodule::ControlDPC(*from.blackstartenabled_);
  } else {
    blackstartenabled_ = nullptr;
  }
  if (from.has_frequencysetpointenabled()) {
    frequencysetpointenabled_ = new ::commonmodule::ControlDPC(*from.frequencysetpointenabled_);
  } else {
    frequencysetpointenabled_ = nullptr;
  }
  if (from.has_island()) {
    island_ = new ::commonmodule::ControlDPC(*from.island_);
  } else {
    island_ = nullptr;
  }
  if (from.has_pcthzdroop()) {
    pcthzdroop_ = new ::google::protobuf::FloatValue(*from.pcthzdroop_);
  } else {
    pcthzdroop_ = nullptr;
  }
  if (from.has_pctvdroop()) {
    pctvdroop_ = new ::google::protobuf::FloatValue(*from.pctvdroop_);
  } else {
    pctvdroop_ = nullptr;
  }
  if (from.has_ramprates()) {
    ramprates_ = new ::commonmodule::RampRate(*from.ramprates_);
  } else {
    ramprates_ = nullptr;
  }
  if (from.has_reactivepwrsetpointenabled()) {
    reactivepwrsetpointenabled_ = new ::commonmodule::ControlDPC(*from.reactivepwrsetpointenabled_);
  } else {
    reactivepwrsetpointenabled_ = nullptr;
  }
  if (from.has_realpwrsetpointenabled()) {
    realpwrsetpointenabled_ = new ::commonmodule::ControlDPC(*from.realpwrsetpointenabled_);
  } else {
    realpwrsetpointenabled_ = nullptr;
  }
  if (from.has_voltagesetpointenabled()) {
    voltagesetpointenabled_ = new ::commonmodule::ControlDPC(*from.voltagesetpointenabled_);
  } else {
    voltagesetpointenabled_ = nullptr;
  }
  if (from.has_starttime()) {
    starttime_ = new ::commonmodule::Timestamp(*from.starttime_);
  } else {
    starttime_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:interconnectionmodule.InterconnectionPoint)
}

void InterconnectionPoint::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_InterconnectionPoint_interconnectionmodule_2finterconnectionmodule_2eproto.base);
  ::memset(&blackstartenabled_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&starttime_) -
      reinterpret_cast<char*>(&blackstartenabled_)) + sizeof(starttime_));
}

InterconnectionPoint::~InterconnectionPoint() {
  // @@protoc_insertion_point(destructor:interconnectionmodule.InterconnectionPoint)
  SharedDtor();
}

void InterconnectionPoint::SharedDtor() {
  if (this != internal_default_instance()) delete blackstartenabled_;
  if (this != internal_default_instance()) delete frequencysetpointenabled_;
  if (this != internal_default_instance()) delete island_;
  if (this != internal_default_instance()) delete pcthzdroop_;
  if (this != internal_default_instance()) delete pctvdroop_;
  if (this != internal_default_instance()) delete ramprates_;
  if (this != internal_default_instance()) delete reactivepwrsetpointenabled_;
  if (this != internal_default_instance()) delete realpwrsetpointenabled_;
  if (this != internal_default_instance()) delete voltagesetpointenabled_;
  if (this != internal_default_instance()) delete starttime_;
}

void InterconnectionPoint::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const InterconnectionPoint& InterconnectionPoint::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_InterconnectionPoint_interconnectionmodule_2finterconnectionmodule_2eproto.base);
  return *internal_default_instance();
}


void InterconnectionPoint::Clear() {
// @@protoc_insertion_point(message_clear_start:interconnectionmodule.InterconnectionPoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && blackstartenabled_ != nullptr) {
    delete blackstartenabled_;
  }
  blackstartenabled_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && frequencysetpointenabled_ != nullptr) {
    delete frequencysetpointenabled_;
  }
  frequencysetpointenabled_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && island_ != nullptr) {
    delete island_;
  }
  island_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && pcthzdroop_ != nullptr) {
    delete pcthzdroop_;
  }
  pcthzdroop_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && pctvdroop_ != nullptr) {
    delete pctvdroop_;
  }
  pctvdroop_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && ramprates_ != nullptr) {
    delete ramprates_;
  }
  ramprates_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && reactivepwrsetpointenabled_ != nullptr) {
    delete reactivepwrsetpointenabled_;
  }
  reactivepwrsetpointenabled_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && realpwrsetpointenabled_ != nullptr) {
    delete realpwrsetpointenabled_;
  }
  realpwrsetpointenabled_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && voltagesetpointenabled_ != nullptr) {
    delete voltagesetpointenabled_;
  }
  voltagesetpointenabled_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && starttime_ != nullptr) {
    delete starttime_;
  }
  starttime_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* InterconnectionPoint::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<InterconnectionPoint*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .commonmodule.ControlDPC blackStartEnabled = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::ControlDPC::_InternalParse;
        object = msg->mutable_blackstartenabled();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .commonmodule.ControlDPC frequencySetPointEnabled = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::ControlDPC::_InternalParse;
        object = msg->mutable_frequencysetpointenabled();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .commonmodule.ControlDPC island = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::ControlDPC::_InternalParse;
        object = msg->mutable_island();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.FloatValue pctHzDroop = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::FloatValue::_InternalParse;
        object = msg->mutable_pcthzdroop();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.FloatValue pctVDroop = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::FloatValue::_InternalParse;
        object = msg->mutable_pctvdroop();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .commonmodule.RampRate rampRates = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::RampRate::_InternalParse;
        object = msg->mutable_ramprates();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .commonmodule.ControlDPC reactivePwrSetPointEnabled = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::ControlDPC::_InternalParse;
        object = msg->mutable_reactivepwrsetpointenabled();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .commonmodule.ControlDPC realPwrSetPointEnabled = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 66) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::ControlDPC::_InternalParse;
        object = msg->mutable_realpwrsetpointenabled();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .commonmodule.ControlDPC voltageSetPointEnabled = 9;
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) != 74) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::ControlDPC::_InternalParse;
        object = msg->mutable_voltagesetpointenabled();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .commonmodule.Timestamp startTime = 10 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 10: {
        if (static_cast<::google::protobuf::uint8>(tag) != 82) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::Timestamp::_InternalParse;
        object = msg->mutable_starttime();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool InterconnectionPoint::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:interconnectionmodule.InterconnectionPoint)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .commonmodule.ControlDPC blackStartEnabled = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_blackstartenabled()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.ControlDPC frequencySetPointEnabled = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_frequencysetpointenabled()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.ControlDPC island = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_island()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.FloatValue pctHzDroop = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pcthzdroop()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.FloatValue pctVDroop = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pctvdroop()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.RampRate rampRates = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ramprates()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.ControlDPC reactivePwrSetPointEnabled = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_reactivepwrsetpointenabled()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.ControlDPC realPwrSetPointEnabled = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (66 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_realpwrsetpointenabled()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.ControlDPC voltageSetPointEnabled = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (74 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_voltagesetpointenabled()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.Timestamp startTime = 10 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (82 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_starttime()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:interconnectionmodule.InterconnectionPoint)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:interconnectionmodule.InterconnectionPoint)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void InterconnectionPoint::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:interconnectionmodule.InterconnectionPoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.ControlDPC blackStartEnabled = 1;
  if (this->has_blackstartenabled()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::blackstartenabled(this), output);
  }

  // .commonmodule.ControlDPC frequencySetPointEnabled = 2;
  if (this->has_frequencysetpointenabled()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::frequencysetpointenabled(this), output);
  }

  // .commonmodule.ControlDPC island = 3;
  if (this->has_island()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::island(this), output);
  }

  // .google.protobuf.FloatValue pctHzDroop = 4;
  if (this->has_pcthzdroop()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::pcthzdroop(this), output);
  }

  // .google.protobuf.FloatValue pctVDroop = 5;
  if (this->has_pctvdroop()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, HasBitSetters::pctvdroop(this), output);
  }

  // .commonmodule.RampRate rampRates = 6;
  if (this->has_ramprates()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, HasBitSetters::ramprates(this), output);
  }

  // .commonmodule.ControlDPC reactivePwrSetPointEnabled = 7;
  if (this->has_reactivepwrsetpointenabled()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, HasBitSetters::reactivepwrsetpointenabled(this), output);
  }

  // .commonmodule.ControlDPC realPwrSetPointEnabled = 8;
  if (this->has_realpwrsetpointenabled()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, HasBitSetters::realpwrsetpointenabled(this), output);
  }

  // .commonmodule.ControlDPC voltageSetPointEnabled = 9;
  if (this->has_voltagesetpointenabled()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, HasBitSetters::voltagesetpointenabled(this), output);
  }

  // .commonmodule.Timestamp startTime = 10 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_starttime()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, HasBitSetters::starttime(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:interconnectionmodule.InterconnectionPoint)
}

::google::protobuf::uint8* InterconnectionPoint::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:interconnectionmodule.InterconnectionPoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.ControlDPC blackStartEnabled = 1;
  if (this->has_blackstartenabled()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::blackstartenabled(this), target);
  }

  // .commonmodule.ControlDPC frequencySetPointEnabled = 2;
  if (this->has_frequencysetpointenabled()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::frequencysetpointenabled(this), target);
  }

  // .commonmodule.ControlDPC island = 3;
  if (this->has_island()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::island(this), target);
  }

  // .google.protobuf.FloatValue pctHzDroop = 4;
  if (this->has_pcthzdroop()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::pcthzdroop(this), target);
  }

  // .google.protobuf.FloatValue pctVDroop = 5;
  if (this->has_pctvdroop()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, HasBitSetters::pctvdroop(this), target);
  }

  // .commonmodule.RampRate rampRates = 6;
  if (this->has_ramprates()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, HasBitSetters::ramprates(this), target);
  }

  // .commonmodule.ControlDPC reactivePwrSetPointEnabled = 7;
  if (this->has_reactivepwrsetpointenabled()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, HasBitSetters::reactivepwrsetpointenabled(this), target);
  }

  // .commonmodule.ControlDPC realPwrSetPointEnabled = 8;
  if (this->has_realpwrsetpointenabled()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, HasBitSetters::realpwrsetpointenabled(this), target);
  }

  // .commonmodule.ControlDPC voltageSetPointEnabled = 9;
  if (this->has_voltagesetpointenabled()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, HasBitSetters::voltagesetpointenabled(this), target);
  }

  // .commonmodule.Timestamp startTime = 10 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_starttime()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, HasBitSetters::starttime(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:interconnectionmodule.InterconnectionPoint)
  return target;
}

size_t InterconnectionPoint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:interconnectionmodule.InterconnectionPoint)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .commonmodule.ControlDPC blackStartEnabled = 1;
  if (this->has_blackstartenabled()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *blackstartenabled_);
  }

  // .commonmodule.ControlDPC frequencySetPointEnabled = 2;
  if (this->has_frequencysetpointenabled()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *frequencysetpointenabled_);
  }

  // .commonmodule.ControlDPC island = 3;
  if (this->has_island()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *island_);
  }

  // .google.protobuf.FloatValue pctHzDroop = 4;
  if (this->has_pcthzdroop()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pcthzdroop_);
  }

  // .google.protobuf.FloatValue pctVDroop = 5;
  if (this->has_pctvdroop()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pctvdroop_);
  }

  // .commonmodule.RampRate rampRates = 6;
  if (this->has_ramprates()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *ramprates_);
  }

  // .commonmodule.ControlDPC reactivePwrSetPointEnabled = 7;
  if (this->has_reactivepwrsetpointenabled()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *reactivepwrsetpointenabled_);
  }

  // .commonmodule.ControlDPC realPwrSetPointEnabled = 8;
  if (this->has_realpwrsetpointenabled()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *realpwrsetpointenabled_);
  }

  // .commonmodule.ControlDPC voltageSetPointEnabled = 9;
  if (this->has_voltagesetpointenabled()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *voltagesetpointenabled_);
  }

  // .commonmodule.Timestamp startTime = 10 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_starttime()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *starttime_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InterconnectionPoint::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:interconnectionmodule.InterconnectionPoint)
  GOOGLE_DCHECK_NE(&from, this);
  const InterconnectionPoint* source =
      ::google::protobuf::DynamicCastToGenerated<InterconnectionPoint>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:interconnectionmodule.InterconnectionPoint)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:interconnectionmodule.InterconnectionPoint)
    MergeFrom(*source);
  }
}

void InterconnectionPoint::MergeFrom(const InterconnectionPoint& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:interconnectionmodule.InterconnectionPoint)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_blackstartenabled()) {
    mutable_blackstartenabled()->::commonmodule::ControlDPC::MergeFrom(from.blackstartenabled());
  }
  if (from.has_frequencysetpointenabled()) {
    mutable_frequencysetpointenabled()->::commonmodule::ControlDPC::MergeFrom(from.frequencysetpointenabled());
  }
  if (from.has_island()) {
    mutable_island()->::commonmodule::ControlDPC::MergeFrom(from.island());
  }
  if (from.has_pcthzdroop()) {
    mutable_pcthzdroop()->::google::protobuf::FloatValue::MergeFrom(from.pcthzdroop());
  }
  if (from.has_pctvdroop()) {
    mutable_pctvdroop()->::google::protobuf::FloatValue::MergeFrom(from.pctvdroop());
  }
  if (from.has_ramprates()) {
    mutable_ramprates()->::commonmodule::RampRate::MergeFrom(from.ramprates());
  }
  if (from.has_reactivepwrsetpointenabled()) {
    mutable_reactivepwrsetpointenabled()->::commonmodule::ControlDPC::MergeFrom(from.reactivepwrsetpointenabled());
  }
  if (from.has_realpwrsetpointenabled()) {
    mutable_realpwrsetpointenabled()->::commonmodule::ControlDPC::MergeFrom(from.realpwrsetpointenabled());
  }
  if (from.has_voltagesetpointenabled()) {
    mutable_voltagesetpointenabled()->::commonmodule::ControlDPC::MergeFrom(from.voltagesetpointenabled());
  }
  if (from.has_starttime()) {
    mutable_starttime()->::commonmodule::Timestamp::MergeFrom(from.starttime());
  }
}

void InterconnectionPoint::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:interconnectionmodule.InterconnectionPoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InterconnectionPoint::CopyFrom(const InterconnectionPoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:interconnectionmodule.InterconnectionPoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InterconnectionPoint::IsInitialized() const {
  return true;
}

void InterconnectionPoint::Swap(InterconnectionPoint* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InterconnectionPoint::InternalSwap(InterconnectionPoint* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(blackstartenabled_, other->blackstartenabled_);
  swap(frequencysetpointenabled_, other->frequencysetpointenabled_);
  swap(island_, other->island_);
  swap(pcthzdroop_, other->pcthzdroop_);
  swap(pctvdroop_, other->pctvdroop_);
  swap(ramprates_, other->ramprates_);
  swap(reactivepwrsetpointenabled_, other->reactivepwrsetpointenabled_);
  swap(realpwrsetpointenabled_, other->realpwrsetpointenabled_);
  swap(voltagesetpointenabled_, other->voltagesetpointenabled_);
  swap(starttime_, other->starttime_);
}

::google::protobuf::Metadata InterconnectionPoint::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_interconnectionmodule_2finterconnectionmodule_2eproto);
  return ::file_level_metadata_interconnectionmodule_2finterconnectionmodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void InterconnectionCSG::InitAsDefaultInstance() {
}
class InterconnectionCSG::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InterconnectionCSG::kCrvPtsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InterconnectionCSG::InterconnectionCSG()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:interconnectionmodule.InterconnectionCSG)
}
InterconnectionCSG::InterconnectionCSG(const InterconnectionCSG& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      crvpts_(from.crvpts_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:interconnectionmodule.InterconnectionCSG)
}

void InterconnectionCSG::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_InterconnectionCSG_interconnectionmodule_2finterconnectionmodule_2eproto.base);
}

InterconnectionCSG::~InterconnectionCSG() {
  // @@protoc_insertion_point(destructor:interconnectionmodule.InterconnectionCSG)
  SharedDtor();
}

void InterconnectionCSG::SharedDtor() {
}

void InterconnectionCSG::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const InterconnectionCSG& InterconnectionCSG::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_InterconnectionCSG_interconnectionmodule_2finterconnectionmodule_2eproto.base);
  return *internal_default_instance();
}


void InterconnectionCSG::Clear() {
// @@protoc_insertion_point(message_clear_start:interconnectionmodule.InterconnectionCSG)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  crvpts_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* InterconnectionCSG::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<InterconnectionCSG*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .interconnectionmodule.InterconnectionPoint crvPts = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::interconnectionmodule::InterconnectionPoint::_InternalParse;
          object = msg->add_crvpts();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool InterconnectionCSG::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:interconnectionmodule.InterconnectionCSG)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .interconnectionmodule.InterconnectionPoint crvPts = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_crvpts()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:interconnectionmodule.InterconnectionCSG)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:interconnectionmodule.InterconnectionCSG)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void InterconnectionCSG::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:interconnectionmodule.InterconnectionCSG)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .interconnectionmodule.InterconnectionPoint crvPts = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->crvpts_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->crvpts(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:interconnectionmodule.InterconnectionCSG)
}

::google::protobuf::uint8* InterconnectionCSG::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:interconnectionmodule.InterconnectionCSG)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .interconnectionmodule.InterconnectionPoint crvPts = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->crvpts_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->crvpts(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:interconnectionmodule.InterconnectionCSG)
  return target;
}

size_t InterconnectionCSG::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:interconnectionmodule.InterconnectionCSG)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .interconnectionmodule.InterconnectionPoint crvPts = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  {
    unsigned int count = static_cast<unsigned int>(this->crvpts_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->crvpts(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InterconnectionCSG::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:interconnectionmodule.InterconnectionCSG)
  GOOGLE_DCHECK_NE(&from, this);
  const InterconnectionCSG* source =
      ::google::protobuf::DynamicCastToGenerated<InterconnectionCSG>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:interconnectionmodule.InterconnectionCSG)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:interconnectionmodule.InterconnectionCSG)
    MergeFrom(*source);
  }
}

void InterconnectionCSG::MergeFrom(const InterconnectionCSG& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:interconnectionmodule.InterconnectionCSG)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  crvpts_.MergeFrom(from.crvpts_);
}

void InterconnectionCSG::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:interconnectionmodule.InterconnectionCSG)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InterconnectionCSG::CopyFrom(const InterconnectionCSG& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:interconnectionmodule.InterconnectionCSG)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InterconnectionCSG::IsInitialized() const {
  return true;
}

void InterconnectionCSG::Swap(InterconnectionCSG* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InterconnectionCSG::InternalSwap(InterconnectionCSG* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&crvpts_)->InternalSwap(CastToBase(&other->crvpts_));
}

::google::protobuf::Metadata InterconnectionCSG::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_interconnectionmodule_2finterconnectionmodule_2eproto);
  return ::file_level_metadata_interconnectionmodule_2finterconnectionmodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void InterconnectionControlScheduleFSCH::InitAsDefaultInstance() {
  ::interconnectionmodule::_InterconnectionControlScheduleFSCH_default_instance_._instance.get_mutable()->valdcsg_ = const_cast< ::interconnectionmodule::InterconnectionCSG*>(
      ::interconnectionmodule::InterconnectionCSG::internal_default_instance());
}
class InterconnectionControlScheduleFSCH::HasBitSetters {
 public:
  static const ::interconnectionmodule::InterconnectionCSG& valdcsg(const InterconnectionControlScheduleFSCH* msg);
};

const ::interconnectionmodule::InterconnectionCSG&
InterconnectionControlScheduleFSCH::HasBitSetters::valdcsg(const InterconnectionControlScheduleFSCH* msg) {
  return *msg->valdcsg_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InterconnectionControlScheduleFSCH::kValDCSGFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InterconnectionControlScheduleFSCH::InterconnectionControlScheduleFSCH()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:interconnectionmodule.InterconnectionControlScheduleFSCH)
}
InterconnectionControlScheduleFSCH::InterconnectionControlScheduleFSCH(const InterconnectionControlScheduleFSCH& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_valdcsg()) {
    valdcsg_ = new ::interconnectionmodule::InterconnectionCSG(*from.valdcsg_);
  } else {
    valdcsg_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:interconnectionmodule.InterconnectionControlScheduleFSCH)
}

void InterconnectionControlScheduleFSCH::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_InterconnectionControlScheduleFSCH_interconnectionmodule_2finterconnectionmodule_2eproto.base);
  valdcsg_ = nullptr;
}

InterconnectionControlScheduleFSCH::~InterconnectionControlScheduleFSCH() {
  // @@protoc_insertion_point(destructor:interconnectionmodule.InterconnectionControlScheduleFSCH)
  SharedDtor();
}

void InterconnectionControlScheduleFSCH::SharedDtor() {
  if (this != internal_default_instance()) delete valdcsg_;
}

void InterconnectionControlScheduleFSCH::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const InterconnectionControlScheduleFSCH& InterconnectionControlScheduleFSCH::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_InterconnectionControlScheduleFSCH_interconnectionmodule_2finterconnectionmodule_2eproto.base);
  return *internal_default_instance();
}


void InterconnectionControlScheduleFSCH::Clear() {
// @@protoc_insertion_point(message_clear_start:interconnectionmodule.InterconnectionControlScheduleFSCH)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && valdcsg_ != nullptr) {
    delete valdcsg_;
  }
  valdcsg_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* InterconnectionControlScheduleFSCH::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<InterconnectionControlScheduleFSCH*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .interconnectionmodule.InterconnectionCSG ValDCSG = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::interconnectionmodule::InterconnectionCSG::_InternalParse;
        object = msg->mutable_valdcsg();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool InterconnectionControlScheduleFSCH::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:interconnectionmodule.InterconnectionControlScheduleFSCH)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .interconnectionmodule.InterconnectionCSG ValDCSG = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_valdcsg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:interconnectionmodule.InterconnectionControlScheduleFSCH)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:interconnectionmodule.InterconnectionControlScheduleFSCH)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void InterconnectionControlScheduleFSCH::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:interconnectionmodule.InterconnectionControlScheduleFSCH)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .interconnectionmodule.InterconnectionCSG ValDCSG = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_valdcsg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::valdcsg(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:interconnectionmodule.InterconnectionControlScheduleFSCH)
}

::google::protobuf::uint8* InterconnectionControlScheduleFSCH::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:interconnectionmodule.InterconnectionControlScheduleFSCH)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .interconnectionmodule.InterconnectionCSG ValDCSG = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_valdcsg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::valdcsg(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:interconnectionmodule.InterconnectionControlScheduleFSCH)
  return target;
}

size_t InterconnectionControlScheduleFSCH::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:interconnectionmodule.InterconnectionControlScheduleFSCH)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .interconnectionmodule.InterconnectionCSG ValDCSG = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_valdcsg()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *valdcsg_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InterconnectionControlScheduleFSCH::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:interconnectionmodule.InterconnectionControlScheduleFSCH)
  GOOGLE_DCHECK_NE(&from, this);
  const InterconnectionControlScheduleFSCH* source =
      ::google::protobuf::DynamicCastToGenerated<InterconnectionControlScheduleFSCH>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:interconnectionmodule.InterconnectionControlScheduleFSCH)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:interconnectionmodule.InterconnectionControlScheduleFSCH)
    MergeFrom(*source);
  }
}

void InterconnectionControlScheduleFSCH::MergeFrom(const InterconnectionControlScheduleFSCH& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:interconnectionmodule.InterconnectionControlScheduleFSCH)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_valdcsg()) {
    mutable_valdcsg()->::interconnectionmodule::InterconnectionCSG::MergeFrom(from.valdcsg());
  }
}

void InterconnectionControlScheduleFSCH::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:interconnectionmodule.InterconnectionControlScheduleFSCH)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InterconnectionControlScheduleFSCH::CopyFrom(const InterconnectionControlScheduleFSCH& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:interconnectionmodule.InterconnectionControlScheduleFSCH)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InterconnectionControlScheduleFSCH::IsInitialized() const {
  return true;
}

void InterconnectionControlScheduleFSCH::Swap(InterconnectionControlScheduleFSCH* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InterconnectionControlScheduleFSCH::InternalSwap(InterconnectionControlScheduleFSCH* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(valdcsg_, other->valdcsg_);
}

::google::protobuf::Metadata InterconnectionControlScheduleFSCH::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_interconnectionmodule_2finterconnectionmodule_2eproto);
  return ::file_level_metadata_interconnectionmodule_2finterconnectionmodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void InterconnectionScheduleFSCC::InitAsDefaultInstance() {
  ::interconnectionmodule::_InterconnectionScheduleFSCC_default_instance_._instance.get_mutable()->controlfscc_ = const_cast< ::commonmodule::ControlFSCC*>(
      ::commonmodule::ControlFSCC::internal_default_instance());
}
class InterconnectionScheduleFSCC::HasBitSetters {
 public:
  static const ::commonmodule::ControlFSCC& controlfscc(const InterconnectionScheduleFSCC* msg);
};

const ::commonmodule::ControlFSCC&
InterconnectionScheduleFSCC::HasBitSetters::controlfscc(const InterconnectionScheduleFSCC* msg) {
  return *msg->controlfscc_;
}
void InterconnectionScheduleFSCC::clear_controlfscc() {
  if (GetArenaNoVirtual() == nullptr && controlfscc_ != nullptr) {
    delete controlfscc_;
  }
  controlfscc_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InterconnectionScheduleFSCC::kControlFSCCFieldNumber;
const int InterconnectionScheduleFSCC::kInterconnectionControlScheduleFSCHFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InterconnectionScheduleFSCC::InterconnectionScheduleFSCC()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:interconnectionmodule.InterconnectionScheduleFSCC)
}
InterconnectionScheduleFSCC::InterconnectionScheduleFSCC(const InterconnectionScheduleFSCC& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      interconnectioncontrolschedulefsch_(from.interconnectioncontrolschedulefsch_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_controlfscc()) {
    controlfscc_ = new ::commonmodule::ControlFSCC(*from.controlfscc_);
  } else {
    controlfscc_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:interconnectionmodule.InterconnectionScheduleFSCC)
}

void InterconnectionScheduleFSCC::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_InterconnectionScheduleFSCC_interconnectionmodule_2finterconnectionmodule_2eproto.base);
  controlfscc_ = nullptr;
}

InterconnectionScheduleFSCC::~InterconnectionScheduleFSCC() {
  // @@protoc_insertion_point(destructor:interconnectionmodule.InterconnectionScheduleFSCC)
  SharedDtor();
}

void InterconnectionScheduleFSCC::SharedDtor() {
  if (this != internal_default_instance()) delete controlfscc_;
}

void InterconnectionScheduleFSCC::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const InterconnectionScheduleFSCC& InterconnectionScheduleFSCC::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_InterconnectionScheduleFSCC_interconnectionmodule_2finterconnectionmodule_2eproto.base);
  return *internal_default_instance();
}


void InterconnectionScheduleFSCC::Clear() {
// @@protoc_insertion_point(message_clear_start:interconnectionmodule.InterconnectionScheduleFSCC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  interconnectioncontrolschedulefsch_.Clear();
  if (GetArenaNoVirtual() == nullptr && controlfscc_ != nullptr) {
    delete controlfscc_;
  }
  controlfscc_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* InterconnectionScheduleFSCC::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<InterconnectionScheduleFSCC*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .commonmodule.ControlFSCC controlFSCC = 1 [(.uml.option_parent_message) = true];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::ControlFSCC::_InternalParse;
        object = msg->mutable_controlfscc();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // repeated .interconnectionmodule.InterconnectionControlScheduleFSCH interconnectionControlScheduleFSCH = 2 [(.uml.option_multiplicity_min) = 0];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::interconnectionmodule::InterconnectionControlScheduleFSCH::_InternalParse;
          object = msg->add_interconnectioncontrolschedulefsch();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool InterconnectionScheduleFSCC::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:interconnectionmodule.InterconnectionScheduleFSCC)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .commonmodule.ControlFSCC controlFSCC = 1 [(.uml.option_parent_message) = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_controlfscc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .interconnectionmodule.InterconnectionControlScheduleFSCH interconnectionControlScheduleFSCH = 2 [(.uml.option_multiplicity_min) = 0];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_interconnectioncontrolschedulefsch()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:interconnectionmodule.InterconnectionScheduleFSCC)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:interconnectionmodule.InterconnectionScheduleFSCC)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void InterconnectionScheduleFSCC::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:interconnectionmodule.InterconnectionScheduleFSCC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.ControlFSCC controlFSCC = 1 [(.uml.option_parent_message) = true];
  if (this->has_controlfscc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::controlfscc(this), output);
  }

  // repeated .interconnectionmodule.InterconnectionControlScheduleFSCH interconnectionControlScheduleFSCH = 2 [(.uml.option_multiplicity_min) = 0];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->interconnectioncontrolschedulefsch_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->interconnectioncontrolschedulefsch(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:interconnectionmodule.InterconnectionScheduleFSCC)
}

::google::protobuf::uint8* InterconnectionScheduleFSCC::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:interconnectionmodule.InterconnectionScheduleFSCC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.ControlFSCC controlFSCC = 1 [(.uml.option_parent_message) = true];
  if (this->has_controlfscc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::controlfscc(this), target);
  }

  // repeated .interconnectionmodule.InterconnectionControlScheduleFSCH interconnectionControlScheduleFSCH = 2 [(.uml.option_multiplicity_min) = 0];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->interconnectioncontrolschedulefsch_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->interconnectioncontrolschedulefsch(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:interconnectionmodule.InterconnectionScheduleFSCC)
  return target;
}

size_t InterconnectionScheduleFSCC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:interconnectionmodule.InterconnectionScheduleFSCC)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .interconnectionmodule.InterconnectionControlScheduleFSCH interconnectionControlScheduleFSCH = 2 [(.uml.option_multiplicity_min) = 0];
  {
    unsigned int count = static_cast<unsigned int>(this->interconnectioncontrolschedulefsch_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->interconnectioncontrolschedulefsch(static_cast<int>(i)));
    }
  }

  // .commonmodule.ControlFSCC controlFSCC = 1 [(.uml.option_parent_message) = true];
  if (this->has_controlfscc()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *controlfscc_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InterconnectionScheduleFSCC::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:interconnectionmodule.InterconnectionScheduleFSCC)
  GOOGLE_DCHECK_NE(&from, this);
  const InterconnectionScheduleFSCC* source =
      ::google::protobuf::DynamicCastToGenerated<InterconnectionScheduleFSCC>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:interconnectionmodule.InterconnectionScheduleFSCC)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:interconnectionmodule.InterconnectionScheduleFSCC)
    MergeFrom(*source);
  }
}

void InterconnectionScheduleFSCC::MergeFrom(const InterconnectionScheduleFSCC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:interconnectionmodule.InterconnectionScheduleFSCC)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  interconnectioncontrolschedulefsch_.MergeFrom(from.interconnectioncontrolschedulefsch_);
  if (from.has_controlfscc()) {
    mutable_controlfscc()->::commonmodule::ControlFSCC::MergeFrom(from.controlfscc());
  }
}

void InterconnectionScheduleFSCC::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:interconnectionmodule.InterconnectionScheduleFSCC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InterconnectionScheduleFSCC::CopyFrom(const InterconnectionScheduleFSCC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:interconnectionmodule.InterconnectionScheduleFSCC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InterconnectionScheduleFSCC::IsInitialized() const {
  return true;
}

void InterconnectionScheduleFSCC::Swap(InterconnectionScheduleFSCC* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InterconnectionScheduleFSCC::InternalSwap(InterconnectionScheduleFSCC* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&interconnectioncontrolschedulefsch_)->InternalSwap(CastToBase(&other->interconnectioncontrolschedulefsch_));
  swap(controlfscc_, other->controlfscc_);
}

::google::protobuf::Metadata InterconnectionScheduleFSCC::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_interconnectionmodule_2finterconnectionmodule_2eproto);
  return ::file_level_metadata_interconnectionmodule_2finterconnectionmodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void InterconnectionSchedule::InitAsDefaultInstance() {
  ::interconnectionmodule::_InterconnectionSchedule_default_instance_._instance.get_mutable()->controlvalue_ = const_cast< ::commonmodule::ControlValue*>(
      ::commonmodule::ControlValue::internal_default_instance());
  ::interconnectionmodule::_InterconnectionSchedule_default_instance_._instance.get_mutable()->check_ = const_cast< ::commonmodule::CheckConditions*>(
      ::commonmodule::CheckConditions::internal_default_instance());
  ::interconnectionmodule::_InterconnectionSchedule_default_instance_._instance.get_mutable()->interconnectionschedulefscc_ = const_cast< ::interconnectionmodule::InterconnectionScheduleFSCC*>(
      ::interconnectionmodule::InterconnectionScheduleFSCC::internal_default_instance());
}
class InterconnectionSchedule::HasBitSetters {
 public:
  static const ::commonmodule::ControlValue& controlvalue(const InterconnectionSchedule* msg);
  static const ::commonmodule::CheckConditions& check(const InterconnectionSchedule* msg);
  static const ::interconnectionmodule::InterconnectionScheduleFSCC& interconnectionschedulefscc(const InterconnectionSchedule* msg);
};

const ::commonmodule::ControlValue&
InterconnectionSchedule::HasBitSetters::controlvalue(const InterconnectionSchedule* msg) {
  return *msg->controlvalue_;
}
const ::commonmodule::CheckConditions&
InterconnectionSchedule::HasBitSetters::check(const InterconnectionSchedule* msg) {
  return *msg->check_;
}
const ::interconnectionmodule::InterconnectionScheduleFSCC&
InterconnectionSchedule::HasBitSetters::interconnectionschedulefscc(const InterconnectionSchedule* msg) {
  return *msg->interconnectionschedulefscc_;
}
void InterconnectionSchedule::clear_controlvalue() {
  if (GetArenaNoVirtual() == nullptr && controlvalue_ != nullptr) {
    delete controlvalue_;
  }
  controlvalue_ = nullptr;
}
void InterconnectionSchedule::clear_check() {
  if (GetArenaNoVirtual() == nullptr && check_ != nullptr) {
    delete check_;
  }
  check_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InterconnectionSchedule::kControlValueFieldNumber;
const int InterconnectionSchedule::kCheckFieldNumber;
const int InterconnectionSchedule::kInterconnectionScheduleFSCCFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InterconnectionSchedule::InterconnectionSchedule()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:interconnectionmodule.InterconnectionSchedule)
}
InterconnectionSchedule::InterconnectionSchedule(const InterconnectionSchedule& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_controlvalue()) {
    controlvalue_ = new ::commonmodule::ControlValue(*from.controlvalue_);
  } else {
    controlvalue_ = nullptr;
  }
  if (from.has_check()) {
    check_ = new ::commonmodule::CheckConditions(*from.check_);
  } else {
    check_ = nullptr;
  }
  if (from.has_interconnectionschedulefscc()) {
    interconnectionschedulefscc_ = new ::interconnectionmodule::InterconnectionScheduleFSCC(*from.interconnectionschedulefscc_);
  } else {
    interconnectionschedulefscc_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:interconnectionmodule.InterconnectionSchedule)
}

void InterconnectionSchedule::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_InterconnectionSchedule_interconnectionmodule_2finterconnectionmodule_2eproto.base);
  ::memset(&controlvalue_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&interconnectionschedulefscc_) -
      reinterpret_cast<char*>(&controlvalue_)) + sizeof(interconnectionschedulefscc_));
}

InterconnectionSchedule::~InterconnectionSchedule() {
  // @@protoc_insertion_point(destructor:interconnectionmodule.InterconnectionSchedule)
  SharedDtor();
}

void InterconnectionSchedule::SharedDtor() {
  if (this != internal_default_instance()) delete controlvalue_;
  if (this != internal_default_instance()) delete check_;
  if (this != internal_default_instance()) delete interconnectionschedulefscc_;
}

void InterconnectionSchedule::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const InterconnectionSchedule& InterconnectionSchedule::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_InterconnectionSchedule_interconnectionmodule_2finterconnectionmodule_2eproto.base);
  return *internal_default_instance();
}


void InterconnectionSchedule::Clear() {
// @@protoc_insertion_point(message_clear_start:interconnectionmodule.InterconnectionSchedule)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && controlvalue_ != nullptr) {
    delete controlvalue_;
  }
  controlvalue_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && check_ != nullptr) {
    delete check_;
  }
  check_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && interconnectionschedulefscc_ != nullptr) {
    delete interconnectionschedulefscc_;
  }
  interconnectionschedulefscc_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* InterconnectionSchedule::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<InterconnectionSchedule*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .commonmodule.ControlValue controlValue = 1 [(.uml.option_parent_message) = true];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::ControlValue::_InternalParse;
        object = msg->mutable_controlvalue();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .commonmodule.CheckConditions check = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::CheckConditions::_InternalParse;
        object = msg->mutable_check();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .interconnectionmodule.InterconnectionScheduleFSCC interconnectionScheduleFSCC = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::interconnectionmodule::InterconnectionScheduleFSCC::_InternalParse;
        object = msg->mutable_interconnectionschedulefscc();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool InterconnectionSchedule::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:interconnectionmodule.InterconnectionSchedule)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .commonmodule.ControlValue controlValue = 1 [(.uml.option_parent_message) = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_controlvalue()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.CheckConditions check = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_check()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .interconnectionmodule.InterconnectionScheduleFSCC interconnectionScheduleFSCC = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_interconnectionschedulefscc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:interconnectionmodule.InterconnectionSchedule)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:interconnectionmodule.InterconnectionSchedule)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void InterconnectionSchedule::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:interconnectionmodule.InterconnectionSchedule)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.ControlValue controlValue = 1 [(.uml.option_parent_message) = true];
  if (this->has_controlvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::controlvalue(this), output);
  }

  // .commonmodule.CheckConditions check = 2;
  if (this->has_check()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::check(this), output);
  }

  // .interconnectionmodule.InterconnectionScheduleFSCC interconnectionScheduleFSCC = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_interconnectionschedulefscc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::interconnectionschedulefscc(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:interconnectionmodule.InterconnectionSchedule)
}

::google::protobuf::uint8* InterconnectionSchedule::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:interconnectionmodule.InterconnectionSchedule)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.ControlValue controlValue = 1 [(.uml.option_parent_message) = true];
  if (this->has_controlvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::controlvalue(this), target);
  }

  // .commonmodule.CheckConditions check = 2;
  if (this->has_check()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::check(this), target);
  }

  // .interconnectionmodule.InterconnectionScheduleFSCC interconnectionScheduleFSCC = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_interconnectionschedulefscc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::interconnectionschedulefscc(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:interconnectionmodule.InterconnectionSchedule)
  return target;
}

size_t InterconnectionSchedule::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:interconnectionmodule.InterconnectionSchedule)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .commonmodule.ControlValue controlValue = 1 [(.uml.option_parent_message) = true];
  if (this->has_controlvalue()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *controlvalue_);
  }

  // .commonmodule.CheckConditions check = 2;
  if (this->has_check()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *check_);
  }

  // .interconnectionmodule.InterconnectionScheduleFSCC interconnectionScheduleFSCC = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_interconnectionschedulefscc()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *interconnectionschedulefscc_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InterconnectionSchedule::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:interconnectionmodule.InterconnectionSchedule)
  GOOGLE_DCHECK_NE(&from, this);
  const InterconnectionSchedule* source =
      ::google::protobuf::DynamicCastToGenerated<InterconnectionSchedule>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:interconnectionmodule.InterconnectionSchedule)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:interconnectionmodule.InterconnectionSchedule)
    MergeFrom(*source);
  }
}

void InterconnectionSchedule::MergeFrom(const InterconnectionSchedule& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:interconnectionmodule.InterconnectionSchedule)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_controlvalue()) {
    mutable_controlvalue()->::commonmodule::ControlValue::MergeFrom(from.controlvalue());
  }
  if (from.has_check()) {
    mutable_check()->::commonmodule::CheckConditions::MergeFrom(from.check());
  }
  if (from.has_interconnectionschedulefscc()) {
    mutable_interconnectionschedulefscc()->::interconnectionmodule::InterconnectionScheduleFSCC::MergeFrom(from.interconnectionschedulefscc());
  }
}

void InterconnectionSchedule::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:interconnectionmodule.InterconnectionSchedule)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InterconnectionSchedule::CopyFrom(const InterconnectionSchedule& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:interconnectionmodule.InterconnectionSchedule)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InterconnectionSchedule::IsInitialized() const {
  return true;
}

void InterconnectionSchedule::Swap(InterconnectionSchedule* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InterconnectionSchedule::InternalSwap(InterconnectionSchedule* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(controlvalue_, other->controlvalue_);
  swap(check_, other->check_);
  swap(interconnectionschedulefscc_, other->interconnectionschedulefscc_);
}

::google::protobuf::Metadata InterconnectionSchedule::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_interconnectionmodule_2finterconnectionmodule_2eproto);
  return ::file_level_metadata_interconnectionmodule_2finterconnectionmodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void PlannedInterconnectionScheduleProfile::InitAsDefaultInstance() {
  ::interconnectionmodule::_PlannedInterconnectionScheduleProfile_default_instance_._instance.get_mutable()->controlmessageinfo_ = const_cast< ::commonmodule::ControlMessageInfo*>(
      ::commonmodule::ControlMessageInfo::internal_default_instance());
  ::interconnectionmodule::_PlannedInterconnectionScheduleProfile_default_instance_._instance.get_mutable()->applicationsystem_ = const_cast< ::commonmodule::ApplicationSystem*>(
      ::commonmodule::ApplicationSystem::internal_default_instance());
  ::interconnectionmodule::_PlannedInterconnectionScheduleProfile_default_instance_._instance.get_mutable()->interconnectionschedule_ = const_cast< ::interconnectionmodule::InterconnectionSchedule*>(
      ::interconnectionmodule::InterconnectionSchedule::internal_default_instance());
}
class PlannedInterconnectionScheduleProfile::HasBitSetters {
 public:
  static const ::commonmodule::ControlMessageInfo& controlmessageinfo(const PlannedInterconnectionScheduleProfile* msg);
  static const ::commonmodule::ApplicationSystem& applicationsystem(const PlannedInterconnectionScheduleProfile* msg);
  static const ::interconnectionmodule::InterconnectionSchedule& interconnectionschedule(const PlannedInterconnectionScheduleProfile* msg);
};

const ::commonmodule::ControlMessageInfo&
PlannedInterconnectionScheduleProfile::HasBitSetters::controlmessageinfo(const PlannedInterconnectionScheduleProfile* msg) {
  return *msg->controlmessageinfo_;
}
const ::commonmodule::ApplicationSystem&
PlannedInterconnectionScheduleProfile::HasBitSetters::applicationsystem(const PlannedInterconnectionScheduleProfile* msg) {
  return *msg->applicationsystem_;
}
const ::interconnectionmodule::InterconnectionSchedule&
PlannedInterconnectionScheduleProfile::HasBitSetters::interconnectionschedule(const PlannedInterconnectionScheduleProfile* msg) {
  return *msg->interconnectionschedule_;
}
void PlannedInterconnectionScheduleProfile::clear_controlmessageinfo() {
  if (GetArenaNoVirtual() == nullptr && controlmessageinfo_ != nullptr) {
    delete controlmessageinfo_;
  }
  controlmessageinfo_ = nullptr;
}
void PlannedInterconnectionScheduleProfile::clear_applicationsystem() {
  if (GetArenaNoVirtual() == nullptr && applicationsystem_ != nullptr) {
    delete applicationsystem_;
  }
  applicationsystem_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlannedInterconnectionScheduleProfile::kControlMessageInfoFieldNumber;
const int PlannedInterconnectionScheduleProfile::kApplicationSystemFieldNumber;
const int PlannedInterconnectionScheduleProfile::kInterconnectionScheduleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlannedInterconnectionScheduleProfile::PlannedInterconnectionScheduleProfile()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:interconnectionmodule.PlannedInterconnectionScheduleProfile)
}
PlannedInterconnectionScheduleProfile::PlannedInterconnectionScheduleProfile(const PlannedInterconnectionScheduleProfile& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_controlmessageinfo()) {
    controlmessageinfo_ = new ::commonmodule::ControlMessageInfo(*from.controlmessageinfo_);
  } else {
    controlmessageinfo_ = nullptr;
  }
  if (from.has_applicationsystem()) {
    applicationsystem_ = new ::commonmodule::ApplicationSystem(*from.applicationsystem_);
  } else {
    applicationsystem_ = nullptr;
  }
  if (from.has_interconnectionschedule()) {
    interconnectionschedule_ = new ::interconnectionmodule::InterconnectionSchedule(*from.interconnectionschedule_);
  } else {
    interconnectionschedule_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:interconnectionmodule.PlannedInterconnectionScheduleProfile)
}

void PlannedInterconnectionScheduleProfile::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_PlannedInterconnectionScheduleProfile_interconnectionmodule_2finterconnectionmodule_2eproto.base);
  ::memset(&controlmessageinfo_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&interconnectionschedule_) -
      reinterpret_cast<char*>(&controlmessageinfo_)) + sizeof(interconnectionschedule_));
}

PlannedInterconnectionScheduleProfile::~PlannedInterconnectionScheduleProfile() {
  // @@protoc_insertion_point(destructor:interconnectionmodule.PlannedInterconnectionScheduleProfile)
  SharedDtor();
}

void PlannedInterconnectionScheduleProfile::SharedDtor() {
  if (this != internal_default_instance()) delete controlmessageinfo_;
  if (this != internal_default_instance()) delete applicationsystem_;
  if (this != internal_default_instance()) delete interconnectionschedule_;
}

void PlannedInterconnectionScheduleProfile::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PlannedInterconnectionScheduleProfile& PlannedInterconnectionScheduleProfile::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_PlannedInterconnectionScheduleProfile_interconnectionmodule_2finterconnectionmodule_2eproto.base);
  return *internal_default_instance();
}


void PlannedInterconnectionScheduleProfile::Clear() {
// @@protoc_insertion_point(message_clear_start:interconnectionmodule.PlannedInterconnectionScheduleProfile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && controlmessageinfo_ != nullptr) {
    delete controlmessageinfo_;
  }
  controlmessageinfo_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && applicationsystem_ != nullptr) {
    delete applicationsystem_;
  }
  applicationsystem_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && interconnectionschedule_ != nullptr) {
    delete interconnectionschedule_;
  }
  interconnectionschedule_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* PlannedInterconnectionScheduleProfile::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<PlannedInterconnectionScheduleProfile*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .commonmodule.ControlMessageInfo controlMessageInfo = 1 [(.uml.option_parent_message) = true];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::ControlMessageInfo::_InternalParse;
        object = msg->mutable_controlmessageinfo();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .commonmodule.ApplicationSystem applicationSystem = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::ApplicationSystem::_InternalParse;
        object = msg->mutable_applicationsystem();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .interconnectionmodule.InterconnectionSchedule interconnectionSchedule = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::interconnectionmodule::InterconnectionSchedule::_InternalParse;
        object = msg->mutable_interconnectionschedule();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool PlannedInterconnectionScheduleProfile::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:interconnectionmodule.PlannedInterconnectionScheduleProfile)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .commonmodule.ControlMessageInfo controlMessageInfo = 1 [(.uml.option_parent_message) = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_controlmessageinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.ApplicationSystem applicationSystem = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_applicationsystem()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .interconnectionmodule.InterconnectionSchedule interconnectionSchedule = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_interconnectionschedule()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:interconnectionmodule.PlannedInterconnectionScheduleProfile)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:interconnectionmodule.PlannedInterconnectionScheduleProfile)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void PlannedInterconnectionScheduleProfile::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:interconnectionmodule.PlannedInterconnectionScheduleProfile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.ControlMessageInfo controlMessageInfo = 1 [(.uml.option_parent_message) = true];
  if (this->has_controlmessageinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::controlmessageinfo(this), output);
  }

  // .commonmodule.ApplicationSystem applicationSystem = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_applicationsystem()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::applicationsystem(this), output);
  }

  // .interconnectionmodule.InterconnectionSchedule interconnectionSchedule = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_interconnectionschedule()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::interconnectionschedule(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:interconnectionmodule.PlannedInterconnectionScheduleProfile)
}

::google::protobuf::uint8* PlannedInterconnectionScheduleProfile::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:interconnectionmodule.PlannedInterconnectionScheduleProfile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.ControlMessageInfo controlMessageInfo = 1 [(.uml.option_parent_message) = true];
  if (this->has_controlmessageinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::controlmessageinfo(this), target);
  }

  // .commonmodule.ApplicationSystem applicationSystem = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_applicationsystem()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::applicationsystem(this), target);
  }

  // .interconnectionmodule.InterconnectionSchedule interconnectionSchedule = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_interconnectionschedule()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::interconnectionschedule(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:interconnectionmodule.PlannedInterconnectionScheduleProfile)
  return target;
}

size_t PlannedInterconnectionScheduleProfile::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:interconnectionmodule.PlannedInterconnectionScheduleProfile)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .commonmodule.ControlMessageInfo controlMessageInfo = 1 [(.uml.option_parent_message) = true];
  if (this->has_controlmessageinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *controlmessageinfo_);
  }

  // .commonmodule.ApplicationSystem applicationSystem = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_applicationsystem()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *applicationsystem_);
  }

  // .interconnectionmodule.InterconnectionSchedule interconnectionSchedule = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_interconnectionschedule()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *interconnectionschedule_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PlannedInterconnectionScheduleProfile::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:interconnectionmodule.PlannedInterconnectionScheduleProfile)
  GOOGLE_DCHECK_NE(&from, this);
  const PlannedInterconnectionScheduleProfile* source =
      ::google::protobuf::DynamicCastToGenerated<PlannedInterconnectionScheduleProfile>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:interconnectionmodule.PlannedInterconnectionScheduleProfile)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:interconnectionmodule.PlannedInterconnectionScheduleProfile)
    MergeFrom(*source);
  }
}

void PlannedInterconnectionScheduleProfile::MergeFrom(const PlannedInterconnectionScheduleProfile& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:interconnectionmodule.PlannedInterconnectionScheduleProfile)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_controlmessageinfo()) {
    mutable_controlmessageinfo()->::commonmodule::ControlMessageInfo::MergeFrom(from.controlmessageinfo());
  }
  if (from.has_applicationsystem()) {
    mutable_applicationsystem()->::commonmodule::ApplicationSystem::MergeFrom(from.applicationsystem());
  }
  if (from.has_interconnectionschedule()) {
    mutable_interconnectionschedule()->::interconnectionmodule::InterconnectionSchedule::MergeFrom(from.interconnectionschedule());
  }
}

void PlannedInterconnectionScheduleProfile::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:interconnectionmodule.PlannedInterconnectionScheduleProfile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlannedInterconnectionScheduleProfile::CopyFrom(const PlannedInterconnectionScheduleProfile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:interconnectionmodule.PlannedInterconnectionScheduleProfile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlannedInterconnectionScheduleProfile::IsInitialized() const {
  return true;
}

void PlannedInterconnectionScheduleProfile::Swap(PlannedInterconnectionScheduleProfile* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlannedInterconnectionScheduleProfile::InternalSwap(PlannedInterconnectionScheduleProfile* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(controlmessageinfo_, other->controlmessageinfo_);
  swap(applicationsystem_, other->applicationsystem_);
  swap(interconnectionschedule_, other->interconnectionschedule_);
}

::google::protobuf::Metadata PlannedInterconnectionScheduleProfile::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_interconnectionmodule_2finterconnectionmodule_2eproto);
  return ::file_level_metadata_interconnectionmodule_2finterconnectionmodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void RequestedInterconnectionScheduleProfile::InitAsDefaultInstance() {
  ::interconnectionmodule::_RequestedInterconnectionScheduleProfile_default_instance_._instance.get_mutable()->controlmessageinfo_ = const_cast< ::commonmodule::ControlMessageInfo*>(
      ::commonmodule::ControlMessageInfo::internal_default_instance());
  ::interconnectionmodule::_RequestedInterconnectionScheduleProfile_default_instance_._instance.get_mutable()->applicationsystem_ = const_cast< ::commonmodule::ApplicationSystem*>(
      ::commonmodule::ApplicationSystem::internal_default_instance());
  ::interconnectionmodule::_RequestedInterconnectionScheduleProfile_default_instance_._instance.get_mutable()->interconnectionschedule_ = const_cast< ::interconnectionmodule::InterconnectionSchedule*>(
      ::interconnectionmodule::InterconnectionSchedule::internal_default_instance());
}
class RequestedInterconnectionScheduleProfile::HasBitSetters {
 public:
  static const ::commonmodule::ControlMessageInfo& controlmessageinfo(const RequestedInterconnectionScheduleProfile* msg);
  static const ::commonmodule::ApplicationSystem& applicationsystem(const RequestedInterconnectionScheduleProfile* msg);
  static const ::interconnectionmodule::InterconnectionSchedule& interconnectionschedule(const RequestedInterconnectionScheduleProfile* msg);
};

const ::commonmodule::ControlMessageInfo&
RequestedInterconnectionScheduleProfile::HasBitSetters::controlmessageinfo(const RequestedInterconnectionScheduleProfile* msg) {
  return *msg->controlmessageinfo_;
}
const ::commonmodule::ApplicationSystem&
RequestedInterconnectionScheduleProfile::HasBitSetters::applicationsystem(const RequestedInterconnectionScheduleProfile* msg) {
  return *msg->applicationsystem_;
}
const ::interconnectionmodule::InterconnectionSchedule&
RequestedInterconnectionScheduleProfile::HasBitSetters::interconnectionschedule(const RequestedInterconnectionScheduleProfile* msg) {
  return *msg->interconnectionschedule_;
}
void RequestedInterconnectionScheduleProfile::clear_controlmessageinfo() {
  if (GetArenaNoVirtual() == nullptr && controlmessageinfo_ != nullptr) {
    delete controlmessageinfo_;
  }
  controlmessageinfo_ = nullptr;
}
void RequestedInterconnectionScheduleProfile::clear_applicationsystem() {
  if (GetArenaNoVirtual() == nullptr && applicationsystem_ != nullptr) {
    delete applicationsystem_;
  }
  applicationsystem_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RequestedInterconnectionScheduleProfile::kControlMessageInfoFieldNumber;
const int RequestedInterconnectionScheduleProfile::kApplicationSystemFieldNumber;
const int RequestedInterconnectionScheduleProfile::kInterconnectionScheduleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RequestedInterconnectionScheduleProfile::RequestedInterconnectionScheduleProfile()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:interconnectionmodule.RequestedInterconnectionScheduleProfile)
}
RequestedInterconnectionScheduleProfile::RequestedInterconnectionScheduleProfile(const RequestedInterconnectionScheduleProfile& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_controlmessageinfo()) {
    controlmessageinfo_ = new ::commonmodule::ControlMessageInfo(*from.controlmessageinfo_);
  } else {
    controlmessageinfo_ = nullptr;
  }
  if (from.has_applicationsystem()) {
    applicationsystem_ = new ::commonmodule::ApplicationSystem(*from.applicationsystem_);
  } else {
    applicationsystem_ = nullptr;
  }
  if (from.has_interconnectionschedule()) {
    interconnectionschedule_ = new ::interconnectionmodule::InterconnectionSchedule(*from.interconnectionschedule_);
  } else {
    interconnectionschedule_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:interconnectionmodule.RequestedInterconnectionScheduleProfile)
}

void RequestedInterconnectionScheduleProfile::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_RequestedInterconnectionScheduleProfile_interconnectionmodule_2finterconnectionmodule_2eproto.base);
  ::memset(&controlmessageinfo_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&interconnectionschedule_) -
      reinterpret_cast<char*>(&controlmessageinfo_)) + sizeof(interconnectionschedule_));
}

RequestedInterconnectionScheduleProfile::~RequestedInterconnectionScheduleProfile() {
  // @@protoc_insertion_point(destructor:interconnectionmodule.RequestedInterconnectionScheduleProfile)
  SharedDtor();
}

void RequestedInterconnectionScheduleProfile::SharedDtor() {
  if (this != internal_default_instance()) delete controlmessageinfo_;
  if (this != internal_default_instance()) delete applicationsystem_;
  if (this != internal_default_instance()) delete interconnectionschedule_;
}

void RequestedInterconnectionScheduleProfile::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RequestedInterconnectionScheduleProfile& RequestedInterconnectionScheduleProfile::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_RequestedInterconnectionScheduleProfile_interconnectionmodule_2finterconnectionmodule_2eproto.base);
  return *internal_default_instance();
}


void RequestedInterconnectionScheduleProfile::Clear() {
// @@protoc_insertion_point(message_clear_start:interconnectionmodule.RequestedInterconnectionScheduleProfile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && controlmessageinfo_ != nullptr) {
    delete controlmessageinfo_;
  }
  controlmessageinfo_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && applicationsystem_ != nullptr) {
    delete applicationsystem_;
  }
  applicationsystem_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && interconnectionschedule_ != nullptr) {
    delete interconnectionschedule_;
  }
  interconnectionschedule_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* RequestedInterconnectionScheduleProfile::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<RequestedInterconnectionScheduleProfile*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .commonmodule.ControlMessageInfo controlMessageInfo = 1 [(.uml.option_parent_message) = true];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::ControlMessageInfo::_InternalParse;
        object = msg->mutable_controlmessageinfo();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .commonmodule.ApplicationSystem applicationSystem = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::ApplicationSystem::_InternalParse;
        object = msg->mutable_applicationsystem();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .interconnectionmodule.InterconnectionSchedule interconnectionSchedule = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::interconnectionmodule::InterconnectionSchedule::_InternalParse;
        object = msg->mutable_interconnectionschedule();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool RequestedInterconnectionScheduleProfile::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:interconnectionmodule.RequestedInterconnectionScheduleProfile)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .commonmodule.ControlMessageInfo controlMessageInfo = 1 [(.uml.option_parent_message) = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_controlmessageinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.ApplicationSystem applicationSystem = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_applicationsystem()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .interconnectionmodule.InterconnectionSchedule interconnectionSchedule = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_interconnectionschedule()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:interconnectionmodule.RequestedInterconnectionScheduleProfile)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:interconnectionmodule.RequestedInterconnectionScheduleProfile)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void RequestedInterconnectionScheduleProfile::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:interconnectionmodule.RequestedInterconnectionScheduleProfile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.ControlMessageInfo controlMessageInfo = 1 [(.uml.option_parent_message) = true];
  if (this->has_controlmessageinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::controlmessageinfo(this), output);
  }

  // .commonmodule.ApplicationSystem applicationSystem = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_applicationsystem()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::applicationsystem(this), output);
  }

  // .interconnectionmodule.InterconnectionSchedule interconnectionSchedule = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_interconnectionschedule()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::interconnectionschedule(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:interconnectionmodule.RequestedInterconnectionScheduleProfile)
}

::google::protobuf::uint8* RequestedInterconnectionScheduleProfile::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:interconnectionmodule.RequestedInterconnectionScheduleProfile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.ControlMessageInfo controlMessageInfo = 1 [(.uml.option_parent_message) = true];
  if (this->has_controlmessageinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::controlmessageinfo(this), target);
  }

  // .commonmodule.ApplicationSystem applicationSystem = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_applicationsystem()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::applicationsystem(this), target);
  }

  // .interconnectionmodule.InterconnectionSchedule interconnectionSchedule = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_interconnectionschedule()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::interconnectionschedule(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:interconnectionmodule.RequestedInterconnectionScheduleProfile)
  return target;
}

size_t RequestedInterconnectionScheduleProfile::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:interconnectionmodule.RequestedInterconnectionScheduleProfile)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .commonmodule.ControlMessageInfo controlMessageInfo = 1 [(.uml.option_parent_message) = true];
  if (this->has_controlmessageinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *controlmessageinfo_);
  }

  // .commonmodule.ApplicationSystem applicationSystem = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_applicationsystem()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *applicationsystem_);
  }

  // .interconnectionmodule.InterconnectionSchedule interconnectionSchedule = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_interconnectionschedule()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *interconnectionschedule_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RequestedInterconnectionScheduleProfile::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:interconnectionmodule.RequestedInterconnectionScheduleProfile)
  GOOGLE_DCHECK_NE(&from, this);
  const RequestedInterconnectionScheduleProfile* source =
      ::google::protobuf::DynamicCastToGenerated<RequestedInterconnectionScheduleProfile>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:interconnectionmodule.RequestedInterconnectionScheduleProfile)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:interconnectionmodule.RequestedInterconnectionScheduleProfile)
    MergeFrom(*source);
  }
}

void RequestedInterconnectionScheduleProfile::MergeFrom(const RequestedInterconnectionScheduleProfile& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:interconnectionmodule.RequestedInterconnectionScheduleProfile)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_controlmessageinfo()) {
    mutable_controlmessageinfo()->::commonmodule::ControlMessageInfo::MergeFrom(from.controlmessageinfo());
  }
  if (from.has_applicationsystem()) {
    mutable_applicationsystem()->::commonmodule::ApplicationSystem::MergeFrom(from.applicationsystem());
  }
  if (from.has_interconnectionschedule()) {
    mutable_interconnectionschedule()->::interconnectionmodule::InterconnectionSchedule::MergeFrom(from.interconnectionschedule());
  }
}

void RequestedInterconnectionScheduleProfile::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:interconnectionmodule.RequestedInterconnectionScheduleProfile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RequestedInterconnectionScheduleProfile::CopyFrom(const RequestedInterconnectionScheduleProfile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:interconnectionmodule.RequestedInterconnectionScheduleProfile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestedInterconnectionScheduleProfile::IsInitialized() const {
  return true;
}

void RequestedInterconnectionScheduleProfile::Swap(RequestedInterconnectionScheduleProfile* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RequestedInterconnectionScheduleProfile::InternalSwap(RequestedInterconnectionScheduleProfile* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(controlmessageinfo_, other->controlmessageinfo_);
  swap(applicationsystem_, other->applicationsystem_);
  swap(interconnectionschedule_, other->interconnectionschedule_);
}

::google::protobuf::Metadata RequestedInterconnectionScheduleProfile::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_interconnectionmodule_2finterconnectionmodule_2eproto);
  return ::file_level_metadata_interconnectionmodule_2finterconnectionmodule_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace interconnectionmodule
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::interconnectionmodule::InterconnectionPoint* Arena::CreateMaybeMessage< ::interconnectionmodule::InterconnectionPoint >(Arena* arena) {
  return Arena::CreateInternal< ::interconnectionmodule::InterconnectionPoint >(arena);
}
template<> PROTOBUF_NOINLINE ::interconnectionmodule::InterconnectionCSG* Arena::CreateMaybeMessage< ::interconnectionmodule::InterconnectionCSG >(Arena* arena) {
  return Arena::CreateInternal< ::interconnectionmodule::InterconnectionCSG >(arena);
}
template<> PROTOBUF_NOINLINE ::interconnectionmodule::InterconnectionControlScheduleFSCH* Arena::CreateMaybeMessage< ::interconnectionmodule::InterconnectionControlScheduleFSCH >(Arena* arena) {
  return Arena::CreateInternal< ::interconnectionmodule::InterconnectionControlScheduleFSCH >(arena);
}
template<> PROTOBUF_NOINLINE ::interconnectionmodule::InterconnectionScheduleFSCC* Arena::CreateMaybeMessage< ::interconnectionmodule::InterconnectionScheduleFSCC >(Arena* arena) {
  return Arena::CreateInternal< ::interconnectionmodule::InterconnectionScheduleFSCC >(arena);
}
template<> PROTOBUF_NOINLINE ::interconnectionmodule::InterconnectionSchedule* Arena::CreateMaybeMessage< ::interconnectionmodule::InterconnectionSchedule >(Arena* arena) {
  return Arena::CreateInternal< ::interconnectionmodule::InterconnectionSchedule >(arena);
}
template<> PROTOBUF_NOINLINE ::interconnectionmodule::PlannedInterconnectionScheduleProfile* Arena::CreateMaybeMessage< ::interconnectionmodule::PlannedInterconnectionScheduleProfile >(Arena* arena) {
  return Arena::CreateInternal< ::interconnectionmodule::PlannedInterconnectionScheduleProfile >(arena);
}
template<> PROTOBUF_NOINLINE ::interconnectionmodule::RequestedInterconnectionScheduleProfile* Arena::CreateMaybeMessage< ::interconnectionmodule::RequestedInterconnectionScheduleProfile >(Arena* arena) {
  return Arena::CreateInternal< ::interconnectionmodule::RequestedInterconnectionScheduleProfile >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
