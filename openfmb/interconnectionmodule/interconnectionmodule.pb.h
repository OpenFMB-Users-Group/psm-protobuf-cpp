// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: interconnectionmodule/interconnectionmodule.proto

#ifndef PROTOBUF_INCLUDED_interconnectionmodule_2finterconnectionmodule_2eproto
#define PROTOBUF_INCLUDED_interconnectionmodule_2finterconnectionmodule_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "uml.pb.h"
#include <google/protobuf/wrappers.pb.h>
#include "commonmodule/commonmodule.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_interconnectionmodule_2finterconnectionmodule_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_interconnectionmodule_2finterconnectionmodule_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[7]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_interconnectionmodule_2finterconnectionmodule_2eproto();
namespace interconnectionmodule {
class InterconnectionCSG;
class InterconnectionCSGDefaultTypeInternal;
extern InterconnectionCSGDefaultTypeInternal _InterconnectionCSG_default_instance_;
class InterconnectionControlScheduleFSCH;
class InterconnectionControlScheduleFSCHDefaultTypeInternal;
extern InterconnectionControlScheduleFSCHDefaultTypeInternal _InterconnectionControlScheduleFSCH_default_instance_;
class InterconnectionPoint;
class InterconnectionPointDefaultTypeInternal;
extern InterconnectionPointDefaultTypeInternal _InterconnectionPoint_default_instance_;
class InterconnectionSchedule;
class InterconnectionScheduleDefaultTypeInternal;
extern InterconnectionScheduleDefaultTypeInternal _InterconnectionSchedule_default_instance_;
class InterconnectionScheduleFSCC;
class InterconnectionScheduleFSCCDefaultTypeInternal;
extern InterconnectionScheduleFSCCDefaultTypeInternal _InterconnectionScheduleFSCC_default_instance_;
class PlannedInterconnectionScheduleProfile;
class PlannedInterconnectionScheduleProfileDefaultTypeInternal;
extern PlannedInterconnectionScheduleProfileDefaultTypeInternal _PlannedInterconnectionScheduleProfile_default_instance_;
class RequestedInterconnectionScheduleProfile;
class RequestedInterconnectionScheduleProfileDefaultTypeInternal;
extern RequestedInterconnectionScheduleProfileDefaultTypeInternal _RequestedInterconnectionScheduleProfile_default_instance_;
}  // namespace interconnectionmodule
namespace google {
namespace protobuf {
template<> ::interconnectionmodule::InterconnectionCSG* Arena::CreateMaybeMessage<::interconnectionmodule::InterconnectionCSG>(Arena*);
template<> ::interconnectionmodule::InterconnectionControlScheduleFSCH* Arena::CreateMaybeMessage<::interconnectionmodule::InterconnectionControlScheduleFSCH>(Arena*);
template<> ::interconnectionmodule::InterconnectionPoint* Arena::CreateMaybeMessage<::interconnectionmodule::InterconnectionPoint>(Arena*);
template<> ::interconnectionmodule::InterconnectionSchedule* Arena::CreateMaybeMessage<::interconnectionmodule::InterconnectionSchedule>(Arena*);
template<> ::interconnectionmodule::InterconnectionScheduleFSCC* Arena::CreateMaybeMessage<::interconnectionmodule::InterconnectionScheduleFSCC>(Arena*);
template<> ::interconnectionmodule::PlannedInterconnectionScheduleProfile* Arena::CreateMaybeMessage<::interconnectionmodule::PlannedInterconnectionScheduleProfile>(Arena*);
template<> ::interconnectionmodule::RequestedInterconnectionScheduleProfile* Arena::CreateMaybeMessage<::interconnectionmodule::RequestedInterconnectionScheduleProfile>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace interconnectionmodule {

// ===================================================================

class InterconnectionPoint :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:interconnectionmodule.InterconnectionPoint) */ {
 public:
  InterconnectionPoint();
  virtual ~InterconnectionPoint();

  InterconnectionPoint(const InterconnectionPoint& from);

  inline InterconnectionPoint& operator=(const InterconnectionPoint& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InterconnectionPoint(InterconnectionPoint&& from) noexcept
    : InterconnectionPoint() {
    *this = ::std::move(from);
  }

  inline InterconnectionPoint& operator=(InterconnectionPoint&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const InterconnectionPoint& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InterconnectionPoint* internal_default_instance() {
    return reinterpret_cast<const InterconnectionPoint*>(
               &_InterconnectionPoint_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(InterconnectionPoint* other);
  friend void swap(InterconnectionPoint& a, InterconnectionPoint& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InterconnectionPoint* New() const final {
    return CreateMaybeMessage<InterconnectionPoint>(nullptr);
  }

  InterconnectionPoint* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<InterconnectionPoint>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const InterconnectionPoint& from);
  void MergeFrom(const InterconnectionPoint& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InterconnectionPoint* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .commonmodule.ControlDPC blackStartEnabled = 1;
  bool has_blackstartenabled() const;
  void clear_blackstartenabled();
  static const int kBlackStartEnabledFieldNumber = 1;
  const ::commonmodule::ControlDPC& blackstartenabled() const;
  ::commonmodule::ControlDPC* release_blackstartenabled();
  ::commonmodule::ControlDPC* mutable_blackstartenabled();
  void set_allocated_blackstartenabled(::commonmodule::ControlDPC* blackstartenabled);

  // .commonmodule.ControlDPC frequencySetPointEnabled = 2;
  bool has_frequencysetpointenabled() const;
  void clear_frequencysetpointenabled();
  static const int kFrequencySetPointEnabledFieldNumber = 2;
  const ::commonmodule::ControlDPC& frequencysetpointenabled() const;
  ::commonmodule::ControlDPC* release_frequencysetpointenabled();
  ::commonmodule::ControlDPC* mutable_frequencysetpointenabled();
  void set_allocated_frequencysetpointenabled(::commonmodule::ControlDPC* frequencysetpointenabled);

  // .commonmodule.ControlDPC island = 3;
  bool has_island() const;
  void clear_island();
  static const int kIslandFieldNumber = 3;
  const ::commonmodule::ControlDPC& island() const;
  ::commonmodule::ControlDPC* release_island();
  ::commonmodule::ControlDPC* mutable_island();
  void set_allocated_island(::commonmodule::ControlDPC* island);

  // .google.protobuf.FloatValue pctHzDroop = 4;
  bool has_pcthzdroop() const;
  void clear_pcthzdroop();
  static const int kPctHzDroopFieldNumber = 4;
  const ::google::protobuf::FloatValue& pcthzdroop() const;
  ::google::protobuf::FloatValue* release_pcthzdroop();
  ::google::protobuf::FloatValue* mutable_pcthzdroop();
  void set_allocated_pcthzdroop(::google::protobuf::FloatValue* pcthzdroop);

  // .google.protobuf.FloatValue pctVDroop = 5;
  bool has_pctvdroop() const;
  void clear_pctvdroop();
  static const int kPctVDroopFieldNumber = 5;
  const ::google::protobuf::FloatValue& pctvdroop() const;
  ::google::protobuf::FloatValue* release_pctvdroop();
  ::google::protobuf::FloatValue* mutable_pctvdroop();
  void set_allocated_pctvdroop(::google::protobuf::FloatValue* pctvdroop);

  // .commonmodule.RampRate rampRates = 6;
  bool has_ramprates() const;
  void clear_ramprates();
  static const int kRampRatesFieldNumber = 6;
  const ::commonmodule::RampRate& ramprates() const;
  ::commonmodule::RampRate* release_ramprates();
  ::commonmodule::RampRate* mutable_ramprates();
  void set_allocated_ramprates(::commonmodule::RampRate* ramprates);

  // .commonmodule.ControlDPC reactivePwrSetPointEnabled = 7;
  bool has_reactivepwrsetpointenabled() const;
  void clear_reactivepwrsetpointenabled();
  static const int kReactivePwrSetPointEnabledFieldNumber = 7;
  const ::commonmodule::ControlDPC& reactivepwrsetpointenabled() const;
  ::commonmodule::ControlDPC* release_reactivepwrsetpointenabled();
  ::commonmodule::ControlDPC* mutable_reactivepwrsetpointenabled();
  void set_allocated_reactivepwrsetpointenabled(::commonmodule::ControlDPC* reactivepwrsetpointenabled);

  // .commonmodule.ControlDPC realPwrSetPointEnabled = 8;
  bool has_realpwrsetpointenabled() const;
  void clear_realpwrsetpointenabled();
  static const int kRealPwrSetPointEnabledFieldNumber = 8;
  const ::commonmodule::ControlDPC& realpwrsetpointenabled() const;
  ::commonmodule::ControlDPC* release_realpwrsetpointenabled();
  ::commonmodule::ControlDPC* mutable_realpwrsetpointenabled();
  void set_allocated_realpwrsetpointenabled(::commonmodule::ControlDPC* realpwrsetpointenabled);

  // .commonmodule.ControlDPC voltageSetPointEnabled = 9;
  bool has_voltagesetpointenabled() const;
  void clear_voltagesetpointenabled();
  static const int kVoltageSetPointEnabledFieldNumber = 9;
  const ::commonmodule::ControlDPC& voltagesetpointenabled() const;
  ::commonmodule::ControlDPC* release_voltagesetpointenabled();
  ::commonmodule::ControlDPC* mutable_voltagesetpointenabled();
  void set_allocated_voltagesetpointenabled(::commonmodule::ControlDPC* voltagesetpointenabled);

  // .commonmodule.Timestamp startTime = 10 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  bool has_starttime() const;
  void clear_starttime();
  static const int kStartTimeFieldNumber = 10;
  const ::commonmodule::Timestamp& starttime() const;
  ::commonmodule::Timestamp* release_starttime();
  ::commonmodule::Timestamp* mutable_starttime();
  void set_allocated_starttime(::commonmodule::Timestamp* starttime);

  // @@protoc_insertion_point(class_scope:interconnectionmodule.InterconnectionPoint)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::commonmodule::ControlDPC* blackstartenabled_;
  ::commonmodule::ControlDPC* frequencysetpointenabled_;
  ::commonmodule::ControlDPC* island_;
  ::google::protobuf::FloatValue* pcthzdroop_;
  ::google::protobuf::FloatValue* pctvdroop_;
  ::commonmodule::RampRate* ramprates_;
  ::commonmodule::ControlDPC* reactivepwrsetpointenabled_;
  ::commonmodule::ControlDPC* realpwrsetpointenabled_;
  ::commonmodule::ControlDPC* voltagesetpointenabled_;
  ::commonmodule::Timestamp* starttime_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_interconnectionmodule_2finterconnectionmodule_2eproto;
};
// -------------------------------------------------------------------

class InterconnectionCSG :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:interconnectionmodule.InterconnectionCSG) */ {
 public:
  InterconnectionCSG();
  virtual ~InterconnectionCSG();

  InterconnectionCSG(const InterconnectionCSG& from);

  inline InterconnectionCSG& operator=(const InterconnectionCSG& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InterconnectionCSG(InterconnectionCSG&& from) noexcept
    : InterconnectionCSG() {
    *this = ::std::move(from);
  }

  inline InterconnectionCSG& operator=(InterconnectionCSG&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const InterconnectionCSG& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InterconnectionCSG* internal_default_instance() {
    return reinterpret_cast<const InterconnectionCSG*>(
               &_InterconnectionCSG_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(InterconnectionCSG* other);
  friend void swap(InterconnectionCSG& a, InterconnectionCSG& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InterconnectionCSG* New() const final {
    return CreateMaybeMessage<InterconnectionCSG>(nullptr);
  }

  InterconnectionCSG* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<InterconnectionCSG>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const InterconnectionCSG& from);
  void MergeFrom(const InterconnectionCSG& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InterconnectionCSG* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .interconnectionmodule.InterconnectionPoint crvPts = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  int crvpts_size() const;
  void clear_crvpts();
  static const int kCrvPtsFieldNumber = 1;
  ::interconnectionmodule::InterconnectionPoint* mutable_crvpts(int index);
  ::google::protobuf::RepeatedPtrField< ::interconnectionmodule::InterconnectionPoint >*
      mutable_crvpts();
  const ::interconnectionmodule::InterconnectionPoint& crvpts(int index) const;
  ::interconnectionmodule::InterconnectionPoint* add_crvpts();
  const ::google::protobuf::RepeatedPtrField< ::interconnectionmodule::InterconnectionPoint >&
      crvpts() const;

  // @@protoc_insertion_point(class_scope:interconnectionmodule.InterconnectionCSG)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::interconnectionmodule::InterconnectionPoint > crvpts_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_interconnectionmodule_2finterconnectionmodule_2eproto;
};
// -------------------------------------------------------------------

class InterconnectionControlScheduleFSCH :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:interconnectionmodule.InterconnectionControlScheduleFSCH) */ {
 public:
  InterconnectionControlScheduleFSCH();
  virtual ~InterconnectionControlScheduleFSCH();

  InterconnectionControlScheduleFSCH(const InterconnectionControlScheduleFSCH& from);

  inline InterconnectionControlScheduleFSCH& operator=(const InterconnectionControlScheduleFSCH& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InterconnectionControlScheduleFSCH(InterconnectionControlScheduleFSCH&& from) noexcept
    : InterconnectionControlScheduleFSCH() {
    *this = ::std::move(from);
  }

  inline InterconnectionControlScheduleFSCH& operator=(InterconnectionControlScheduleFSCH&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const InterconnectionControlScheduleFSCH& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InterconnectionControlScheduleFSCH* internal_default_instance() {
    return reinterpret_cast<const InterconnectionControlScheduleFSCH*>(
               &_InterconnectionControlScheduleFSCH_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(InterconnectionControlScheduleFSCH* other);
  friend void swap(InterconnectionControlScheduleFSCH& a, InterconnectionControlScheduleFSCH& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InterconnectionControlScheduleFSCH* New() const final {
    return CreateMaybeMessage<InterconnectionControlScheduleFSCH>(nullptr);
  }

  InterconnectionControlScheduleFSCH* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<InterconnectionControlScheduleFSCH>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const InterconnectionControlScheduleFSCH& from);
  void MergeFrom(const InterconnectionControlScheduleFSCH& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InterconnectionControlScheduleFSCH* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .interconnectionmodule.InterconnectionCSG ValDCSG = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  bool has_valdcsg() const;
  void clear_valdcsg();
  static const int kValDCSGFieldNumber = 1;
  const ::interconnectionmodule::InterconnectionCSG& valdcsg() const;
  ::interconnectionmodule::InterconnectionCSG* release_valdcsg();
  ::interconnectionmodule::InterconnectionCSG* mutable_valdcsg();
  void set_allocated_valdcsg(::interconnectionmodule::InterconnectionCSG* valdcsg);

  // @@protoc_insertion_point(class_scope:interconnectionmodule.InterconnectionControlScheduleFSCH)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::interconnectionmodule::InterconnectionCSG* valdcsg_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_interconnectionmodule_2finterconnectionmodule_2eproto;
};
// -------------------------------------------------------------------

class InterconnectionScheduleFSCC :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:interconnectionmodule.InterconnectionScheduleFSCC) */ {
 public:
  InterconnectionScheduleFSCC();
  virtual ~InterconnectionScheduleFSCC();

  InterconnectionScheduleFSCC(const InterconnectionScheduleFSCC& from);

  inline InterconnectionScheduleFSCC& operator=(const InterconnectionScheduleFSCC& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InterconnectionScheduleFSCC(InterconnectionScheduleFSCC&& from) noexcept
    : InterconnectionScheduleFSCC() {
    *this = ::std::move(from);
  }

  inline InterconnectionScheduleFSCC& operator=(InterconnectionScheduleFSCC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const InterconnectionScheduleFSCC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InterconnectionScheduleFSCC* internal_default_instance() {
    return reinterpret_cast<const InterconnectionScheduleFSCC*>(
               &_InterconnectionScheduleFSCC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(InterconnectionScheduleFSCC* other);
  friend void swap(InterconnectionScheduleFSCC& a, InterconnectionScheduleFSCC& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InterconnectionScheduleFSCC* New() const final {
    return CreateMaybeMessage<InterconnectionScheduleFSCC>(nullptr);
  }

  InterconnectionScheduleFSCC* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<InterconnectionScheduleFSCC>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const InterconnectionScheduleFSCC& from);
  void MergeFrom(const InterconnectionScheduleFSCC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InterconnectionScheduleFSCC* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .interconnectionmodule.InterconnectionControlScheduleFSCH interconnectionControlScheduleFSCH = 2 [(.uml.option_multiplicity_min) = 0];
  int interconnectioncontrolschedulefsch_size() const;
  void clear_interconnectioncontrolschedulefsch();
  static const int kInterconnectionControlScheduleFSCHFieldNumber = 2;
  ::interconnectionmodule::InterconnectionControlScheduleFSCH* mutable_interconnectioncontrolschedulefsch(int index);
  ::google::protobuf::RepeatedPtrField< ::interconnectionmodule::InterconnectionControlScheduleFSCH >*
      mutable_interconnectioncontrolschedulefsch();
  const ::interconnectionmodule::InterconnectionControlScheduleFSCH& interconnectioncontrolschedulefsch(int index) const;
  ::interconnectionmodule::InterconnectionControlScheduleFSCH* add_interconnectioncontrolschedulefsch();
  const ::google::protobuf::RepeatedPtrField< ::interconnectionmodule::InterconnectionControlScheduleFSCH >&
      interconnectioncontrolschedulefsch() const;

  // .commonmodule.ControlFSCC controlFSCC = 1 [(.uml.option_parent_message) = true];
  bool has_controlfscc() const;
  void clear_controlfscc();
  static const int kControlFSCCFieldNumber = 1;
  const ::commonmodule::ControlFSCC& controlfscc() const;
  ::commonmodule::ControlFSCC* release_controlfscc();
  ::commonmodule::ControlFSCC* mutable_controlfscc();
  void set_allocated_controlfscc(::commonmodule::ControlFSCC* controlfscc);

  // @@protoc_insertion_point(class_scope:interconnectionmodule.InterconnectionScheduleFSCC)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::interconnectionmodule::InterconnectionControlScheduleFSCH > interconnectioncontrolschedulefsch_;
  ::commonmodule::ControlFSCC* controlfscc_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_interconnectionmodule_2finterconnectionmodule_2eproto;
};
// -------------------------------------------------------------------

class InterconnectionSchedule :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:interconnectionmodule.InterconnectionSchedule) */ {
 public:
  InterconnectionSchedule();
  virtual ~InterconnectionSchedule();

  InterconnectionSchedule(const InterconnectionSchedule& from);

  inline InterconnectionSchedule& operator=(const InterconnectionSchedule& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InterconnectionSchedule(InterconnectionSchedule&& from) noexcept
    : InterconnectionSchedule() {
    *this = ::std::move(from);
  }

  inline InterconnectionSchedule& operator=(InterconnectionSchedule&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const InterconnectionSchedule& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InterconnectionSchedule* internal_default_instance() {
    return reinterpret_cast<const InterconnectionSchedule*>(
               &_InterconnectionSchedule_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(InterconnectionSchedule* other);
  friend void swap(InterconnectionSchedule& a, InterconnectionSchedule& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InterconnectionSchedule* New() const final {
    return CreateMaybeMessage<InterconnectionSchedule>(nullptr);
  }

  InterconnectionSchedule* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<InterconnectionSchedule>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const InterconnectionSchedule& from);
  void MergeFrom(const InterconnectionSchedule& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InterconnectionSchedule* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .commonmodule.ControlValue controlValue = 1 [(.uml.option_parent_message) = true];
  bool has_controlvalue() const;
  void clear_controlvalue();
  static const int kControlValueFieldNumber = 1;
  const ::commonmodule::ControlValue& controlvalue() const;
  ::commonmodule::ControlValue* release_controlvalue();
  ::commonmodule::ControlValue* mutable_controlvalue();
  void set_allocated_controlvalue(::commonmodule::ControlValue* controlvalue);

  // .commonmodule.CheckConditions check = 2;
  bool has_check() const;
  void clear_check();
  static const int kCheckFieldNumber = 2;
  const ::commonmodule::CheckConditions& check() const;
  ::commonmodule::CheckConditions* release_check();
  ::commonmodule::CheckConditions* mutable_check();
  void set_allocated_check(::commonmodule::CheckConditions* check);

  // .interconnectionmodule.InterconnectionScheduleFSCC interconnectionScheduleFSCC = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  bool has_interconnectionschedulefscc() const;
  void clear_interconnectionschedulefscc();
  static const int kInterconnectionScheduleFSCCFieldNumber = 3;
  const ::interconnectionmodule::InterconnectionScheduleFSCC& interconnectionschedulefscc() const;
  ::interconnectionmodule::InterconnectionScheduleFSCC* release_interconnectionschedulefscc();
  ::interconnectionmodule::InterconnectionScheduleFSCC* mutable_interconnectionschedulefscc();
  void set_allocated_interconnectionschedulefscc(::interconnectionmodule::InterconnectionScheduleFSCC* interconnectionschedulefscc);

  // @@protoc_insertion_point(class_scope:interconnectionmodule.InterconnectionSchedule)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::commonmodule::ControlValue* controlvalue_;
  ::commonmodule::CheckConditions* check_;
  ::interconnectionmodule::InterconnectionScheduleFSCC* interconnectionschedulefscc_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_interconnectionmodule_2finterconnectionmodule_2eproto;
};
// -------------------------------------------------------------------

class PlannedInterconnectionScheduleProfile :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:interconnectionmodule.PlannedInterconnectionScheduleProfile) */ {
 public:
  PlannedInterconnectionScheduleProfile();
  virtual ~PlannedInterconnectionScheduleProfile();

  PlannedInterconnectionScheduleProfile(const PlannedInterconnectionScheduleProfile& from);

  inline PlannedInterconnectionScheduleProfile& operator=(const PlannedInterconnectionScheduleProfile& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlannedInterconnectionScheduleProfile(PlannedInterconnectionScheduleProfile&& from) noexcept
    : PlannedInterconnectionScheduleProfile() {
    *this = ::std::move(from);
  }

  inline PlannedInterconnectionScheduleProfile& operator=(PlannedInterconnectionScheduleProfile&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PlannedInterconnectionScheduleProfile& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlannedInterconnectionScheduleProfile* internal_default_instance() {
    return reinterpret_cast<const PlannedInterconnectionScheduleProfile*>(
               &_PlannedInterconnectionScheduleProfile_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(PlannedInterconnectionScheduleProfile* other);
  friend void swap(PlannedInterconnectionScheduleProfile& a, PlannedInterconnectionScheduleProfile& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlannedInterconnectionScheduleProfile* New() const final {
    return CreateMaybeMessage<PlannedInterconnectionScheduleProfile>(nullptr);
  }

  PlannedInterconnectionScheduleProfile* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PlannedInterconnectionScheduleProfile>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PlannedInterconnectionScheduleProfile& from);
  void MergeFrom(const PlannedInterconnectionScheduleProfile& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PlannedInterconnectionScheduleProfile* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .commonmodule.ControlMessageInfo controlMessageInfo = 1 [(.uml.option_parent_message) = true];
  bool has_controlmessageinfo() const;
  void clear_controlmessageinfo();
  static const int kControlMessageInfoFieldNumber = 1;
  const ::commonmodule::ControlMessageInfo& controlmessageinfo() const;
  ::commonmodule::ControlMessageInfo* release_controlmessageinfo();
  ::commonmodule::ControlMessageInfo* mutable_controlmessageinfo();
  void set_allocated_controlmessageinfo(::commonmodule::ControlMessageInfo* controlmessageinfo);

  // .commonmodule.ApplicationSystem applicationSystem = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  bool has_applicationsystem() const;
  void clear_applicationsystem();
  static const int kApplicationSystemFieldNumber = 2;
  const ::commonmodule::ApplicationSystem& applicationsystem() const;
  ::commonmodule::ApplicationSystem* release_applicationsystem();
  ::commonmodule::ApplicationSystem* mutable_applicationsystem();
  void set_allocated_applicationsystem(::commonmodule::ApplicationSystem* applicationsystem);

  // .interconnectionmodule.InterconnectionSchedule interconnectionSchedule = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  bool has_interconnectionschedule() const;
  void clear_interconnectionschedule();
  static const int kInterconnectionScheduleFieldNumber = 3;
  const ::interconnectionmodule::InterconnectionSchedule& interconnectionschedule() const;
  ::interconnectionmodule::InterconnectionSchedule* release_interconnectionschedule();
  ::interconnectionmodule::InterconnectionSchedule* mutable_interconnectionschedule();
  void set_allocated_interconnectionschedule(::interconnectionmodule::InterconnectionSchedule* interconnectionschedule);

  // @@protoc_insertion_point(class_scope:interconnectionmodule.PlannedInterconnectionScheduleProfile)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::commonmodule::ControlMessageInfo* controlmessageinfo_;
  ::commonmodule::ApplicationSystem* applicationsystem_;
  ::interconnectionmodule::InterconnectionSchedule* interconnectionschedule_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_interconnectionmodule_2finterconnectionmodule_2eproto;
};
// -------------------------------------------------------------------

class RequestedInterconnectionScheduleProfile :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:interconnectionmodule.RequestedInterconnectionScheduleProfile) */ {
 public:
  RequestedInterconnectionScheduleProfile();
  virtual ~RequestedInterconnectionScheduleProfile();

  RequestedInterconnectionScheduleProfile(const RequestedInterconnectionScheduleProfile& from);

  inline RequestedInterconnectionScheduleProfile& operator=(const RequestedInterconnectionScheduleProfile& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RequestedInterconnectionScheduleProfile(RequestedInterconnectionScheduleProfile&& from) noexcept
    : RequestedInterconnectionScheduleProfile() {
    *this = ::std::move(from);
  }

  inline RequestedInterconnectionScheduleProfile& operator=(RequestedInterconnectionScheduleProfile&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const RequestedInterconnectionScheduleProfile& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RequestedInterconnectionScheduleProfile* internal_default_instance() {
    return reinterpret_cast<const RequestedInterconnectionScheduleProfile*>(
               &_RequestedInterconnectionScheduleProfile_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(RequestedInterconnectionScheduleProfile* other);
  friend void swap(RequestedInterconnectionScheduleProfile& a, RequestedInterconnectionScheduleProfile& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RequestedInterconnectionScheduleProfile* New() const final {
    return CreateMaybeMessage<RequestedInterconnectionScheduleProfile>(nullptr);
  }

  RequestedInterconnectionScheduleProfile* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RequestedInterconnectionScheduleProfile>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RequestedInterconnectionScheduleProfile& from);
  void MergeFrom(const RequestedInterconnectionScheduleProfile& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RequestedInterconnectionScheduleProfile* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .commonmodule.ControlMessageInfo controlMessageInfo = 1 [(.uml.option_parent_message) = true];
  bool has_controlmessageinfo() const;
  void clear_controlmessageinfo();
  static const int kControlMessageInfoFieldNumber = 1;
  const ::commonmodule::ControlMessageInfo& controlmessageinfo() const;
  ::commonmodule::ControlMessageInfo* release_controlmessageinfo();
  ::commonmodule::ControlMessageInfo* mutable_controlmessageinfo();
  void set_allocated_controlmessageinfo(::commonmodule::ControlMessageInfo* controlmessageinfo);

  // .commonmodule.ApplicationSystem applicationSystem = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  bool has_applicationsystem() const;
  void clear_applicationsystem();
  static const int kApplicationSystemFieldNumber = 2;
  const ::commonmodule::ApplicationSystem& applicationsystem() const;
  ::commonmodule::ApplicationSystem* release_applicationsystem();
  ::commonmodule::ApplicationSystem* mutable_applicationsystem();
  void set_allocated_applicationsystem(::commonmodule::ApplicationSystem* applicationsystem);

  // .interconnectionmodule.InterconnectionSchedule interconnectionSchedule = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  bool has_interconnectionschedule() const;
  void clear_interconnectionschedule();
  static const int kInterconnectionScheduleFieldNumber = 3;
  const ::interconnectionmodule::InterconnectionSchedule& interconnectionschedule() const;
  ::interconnectionmodule::InterconnectionSchedule* release_interconnectionschedule();
  ::interconnectionmodule::InterconnectionSchedule* mutable_interconnectionschedule();
  void set_allocated_interconnectionschedule(::interconnectionmodule::InterconnectionSchedule* interconnectionschedule);

  // @@protoc_insertion_point(class_scope:interconnectionmodule.RequestedInterconnectionScheduleProfile)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::commonmodule::ControlMessageInfo* controlmessageinfo_;
  ::commonmodule::ApplicationSystem* applicationsystem_;
  ::interconnectionmodule::InterconnectionSchedule* interconnectionschedule_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_interconnectionmodule_2finterconnectionmodule_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// InterconnectionPoint

// .commonmodule.ControlDPC blackStartEnabled = 1;
inline bool InterconnectionPoint::has_blackstartenabled() const {
  return this != internal_default_instance() && blackstartenabled_ != nullptr;
}
inline const ::commonmodule::ControlDPC& InterconnectionPoint::blackstartenabled() const {
  const ::commonmodule::ControlDPC* p = blackstartenabled_;
  // @@protoc_insertion_point(field_get:interconnectionmodule.InterconnectionPoint.blackStartEnabled)
  return p != nullptr ? *p : *reinterpret_cast<const ::commonmodule::ControlDPC*>(
      &::commonmodule::_ControlDPC_default_instance_);
}
inline ::commonmodule::ControlDPC* InterconnectionPoint::release_blackstartenabled() {
  // @@protoc_insertion_point(field_release:interconnectionmodule.InterconnectionPoint.blackStartEnabled)
  
  ::commonmodule::ControlDPC* temp = blackstartenabled_;
  blackstartenabled_ = nullptr;
  return temp;
}
inline ::commonmodule::ControlDPC* InterconnectionPoint::mutable_blackstartenabled() {
  
  if (blackstartenabled_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::ControlDPC>(GetArenaNoVirtual());
    blackstartenabled_ = p;
  }
  // @@protoc_insertion_point(field_mutable:interconnectionmodule.InterconnectionPoint.blackStartEnabled)
  return blackstartenabled_;
}
inline void InterconnectionPoint::set_allocated_blackstartenabled(::commonmodule::ControlDPC* blackstartenabled) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(blackstartenabled_);
  }
  if (blackstartenabled) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      blackstartenabled = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, blackstartenabled, submessage_arena);
    }
    
  } else {
    
  }
  blackstartenabled_ = blackstartenabled;
  // @@protoc_insertion_point(field_set_allocated:interconnectionmodule.InterconnectionPoint.blackStartEnabled)
}

// .commonmodule.ControlDPC frequencySetPointEnabled = 2;
inline bool InterconnectionPoint::has_frequencysetpointenabled() const {
  return this != internal_default_instance() && frequencysetpointenabled_ != nullptr;
}
inline const ::commonmodule::ControlDPC& InterconnectionPoint::frequencysetpointenabled() const {
  const ::commonmodule::ControlDPC* p = frequencysetpointenabled_;
  // @@protoc_insertion_point(field_get:interconnectionmodule.InterconnectionPoint.frequencySetPointEnabled)
  return p != nullptr ? *p : *reinterpret_cast<const ::commonmodule::ControlDPC*>(
      &::commonmodule::_ControlDPC_default_instance_);
}
inline ::commonmodule::ControlDPC* InterconnectionPoint::release_frequencysetpointenabled() {
  // @@protoc_insertion_point(field_release:interconnectionmodule.InterconnectionPoint.frequencySetPointEnabled)
  
  ::commonmodule::ControlDPC* temp = frequencysetpointenabled_;
  frequencysetpointenabled_ = nullptr;
  return temp;
}
inline ::commonmodule::ControlDPC* InterconnectionPoint::mutable_frequencysetpointenabled() {
  
  if (frequencysetpointenabled_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::ControlDPC>(GetArenaNoVirtual());
    frequencysetpointenabled_ = p;
  }
  // @@protoc_insertion_point(field_mutable:interconnectionmodule.InterconnectionPoint.frequencySetPointEnabled)
  return frequencysetpointenabled_;
}
inline void InterconnectionPoint::set_allocated_frequencysetpointenabled(::commonmodule::ControlDPC* frequencysetpointenabled) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(frequencysetpointenabled_);
  }
  if (frequencysetpointenabled) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      frequencysetpointenabled = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, frequencysetpointenabled, submessage_arena);
    }
    
  } else {
    
  }
  frequencysetpointenabled_ = frequencysetpointenabled;
  // @@protoc_insertion_point(field_set_allocated:interconnectionmodule.InterconnectionPoint.frequencySetPointEnabled)
}

// .commonmodule.ControlDPC island = 3;
inline bool InterconnectionPoint::has_island() const {
  return this != internal_default_instance() && island_ != nullptr;
}
inline const ::commonmodule::ControlDPC& InterconnectionPoint::island() const {
  const ::commonmodule::ControlDPC* p = island_;
  // @@protoc_insertion_point(field_get:interconnectionmodule.InterconnectionPoint.island)
  return p != nullptr ? *p : *reinterpret_cast<const ::commonmodule::ControlDPC*>(
      &::commonmodule::_ControlDPC_default_instance_);
}
inline ::commonmodule::ControlDPC* InterconnectionPoint::release_island() {
  // @@protoc_insertion_point(field_release:interconnectionmodule.InterconnectionPoint.island)
  
  ::commonmodule::ControlDPC* temp = island_;
  island_ = nullptr;
  return temp;
}
inline ::commonmodule::ControlDPC* InterconnectionPoint::mutable_island() {
  
  if (island_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::ControlDPC>(GetArenaNoVirtual());
    island_ = p;
  }
  // @@protoc_insertion_point(field_mutable:interconnectionmodule.InterconnectionPoint.island)
  return island_;
}
inline void InterconnectionPoint::set_allocated_island(::commonmodule::ControlDPC* island) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(island_);
  }
  if (island) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      island = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, island, submessage_arena);
    }
    
  } else {
    
  }
  island_ = island;
  // @@protoc_insertion_point(field_set_allocated:interconnectionmodule.InterconnectionPoint.island)
}

// .google.protobuf.FloatValue pctHzDroop = 4;
inline bool InterconnectionPoint::has_pcthzdroop() const {
  return this != internal_default_instance() && pcthzdroop_ != nullptr;
}
inline const ::google::protobuf::FloatValue& InterconnectionPoint::pcthzdroop() const {
  const ::google::protobuf::FloatValue* p = pcthzdroop_;
  // @@protoc_insertion_point(field_get:interconnectionmodule.InterconnectionPoint.pctHzDroop)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::protobuf::FloatValue*>(
      &::google::protobuf::_FloatValue_default_instance_);
}
inline ::google::protobuf::FloatValue* InterconnectionPoint::release_pcthzdroop() {
  // @@protoc_insertion_point(field_release:interconnectionmodule.InterconnectionPoint.pctHzDroop)
  
  ::google::protobuf::FloatValue* temp = pcthzdroop_;
  pcthzdroop_ = nullptr;
  return temp;
}
inline ::google::protobuf::FloatValue* InterconnectionPoint::mutable_pcthzdroop() {
  
  if (pcthzdroop_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::FloatValue>(GetArenaNoVirtual());
    pcthzdroop_ = p;
  }
  // @@protoc_insertion_point(field_mutable:interconnectionmodule.InterconnectionPoint.pctHzDroop)
  return pcthzdroop_;
}
inline void InterconnectionPoint::set_allocated_pcthzdroop(::google::protobuf::FloatValue* pcthzdroop) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(pcthzdroop_);
  }
  if (pcthzdroop) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(pcthzdroop)->GetArena();
    if (message_arena != submessage_arena) {
      pcthzdroop = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pcthzdroop, submessage_arena);
    }
    
  } else {
    
  }
  pcthzdroop_ = pcthzdroop;
  // @@protoc_insertion_point(field_set_allocated:interconnectionmodule.InterconnectionPoint.pctHzDroop)
}

// .google.protobuf.FloatValue pctVDroop = 5;
inline bool InterconnectionPoint::has_pctvdroop() const {
  return this != internal_default_instance() && pctvdroop_ != nullptr;
}
inline const ::google::protobuf::FloatValue& InterconnectionPoint::pctvdroop() const {
  const ::google::protobuf::FloatValue* p = pctvdroop_;
  // @@protoc_insertion_point(field_get:interconnectionmodule.InterconnectionPoint.pctVDroop)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::protobuf::FloatValue*>(
      &::google::protobuf::_FloatValue_default_instance_);
}
inline ::google::protobuf::FloatValue* InterconnectionPoint::release_pctvdroop() {
  // @@protoc_insertion_point(field_release:interconnectionmodule.InterconnectionPoint.pctVDroop)
  
  ::google::protobuf::FloatValue* temp = pctvdroop_;
  pctvdroop_ = nullptr;
  return temp;
}
inline ::google::protobuf::FloatValue* InterconnectionPoint::mutable_pctvdroop() {
  
  if (pctvdroop_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::FloatValue>(GetArenaNoVirtual());
    pctvdroop_ = p;
  }
  // @@protoc_insertion_point(field_mutable:interconnectionmodule.InterconnectionPoint.pctVDroop)
  return pctvdroop_;
}
inline void InterconnectionPoint::set_allocated_pctvdroop(::google::protobuf::FloatValue* pctvdroop) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(pctvdroop_);
  }
  if (pctvdroop) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(pctvdroop)->GetArena();
    if (message_arena != submessage_arena) {
      pctvdroop = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pctvdroop, submessage_arena);
    }
    
  } else {
    
  }
  pctvdroop_ = pctvdroop;
  // @@protoc_insertion_point(field_set_allocated:interconnectionmodule.InterconnectionPoint.pctVDroop)
}

// .commonmodule.RampRate rampRates = 6;
inline bool InterconnectionPoint::has_ramprates() const {
  return this != internal_default_instance() && ramprates_ != nullptr;
}
inline const ::commonmodule::RampRate& InterconnectionPoint::ramprates() const {
  const ::commonmodule::RampRate* p = ramprates_;
  // @@protoc_insertion_point(field_get:interconnectionmodule.InterconnectionPoint.rampRates)
  return p != nullptr ? *p : *reinterpret_cast<const ::commonmodule::RampRate*>(
      &::commonmodule::_RampRate_default_instance_);
}
inline ::commonmodule::RampRate* InterconnectionPoint::release_ramprates() {
  // @@protoc_insertion_point(field_release:interconnectionmodule.InterconnectionPoint.rampRates)
  
  ::commonmodule::RampRate* temp = ramprates_;
  ramprates_ = nullptr;
  return temp;
}
inline ::commonmodule::RampRate* InterconnectionPoint::mutable_ramprates() {
  
  if (ramprates_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::RampRate>(GetArenaNoVirtual());
    ramprates_ = p;
  }
  // @@protoc_insertion_point(field_mutable:interconnectionmodule.InterconnectionPoint.rampRates)
  return ramprates_;
}
inline void InterconnectionPoint::set_allocated_ramprates(::commonmodule::RampRate* ramprates) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(ramprates_);
  }
  if (ramprates) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      ramprates = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ramprates, submessage_arena);
    }
    
  } else {
    
  }
  ramprates_ = ramprates;
  // @@protoc_insertion_point(field_set_allocated:interconnectionmodule.InterconnectionPoint.rampRates)
}

// .commonmodule.ControlDPC reactivePwrSetPointEnabled = 7;
inline bool InterconnectionPoint::has_reactivepwrsetpointenabled() const {
  return this != internal_default_instance() && reactivepwrsetpointenabled_ != nullptr;
}
inline const ::commonmodule::ControlDPC& InterconnectionPoint::reactivepwrsetpointenabled() const {
  const ::commonmodule::ControlDPC* p = reactivepwrsetpointenabled_;
  // @@protoc_insertion_point(field_get:interconnectionmodule.InterconnectionPoint.reactivePwrSetPointEnabled)
  return p != nullptr ? *p : *reinterpret_cast<const ::commonmodule::ControlDPC*>(
      &::commonmodule::_ControlDPC_default_instance_);
}
inline ::commonmodule::ControlDPC* InterconnectionPoint::release_reactivepwrsetpointenabled() {
  // @@protoc_insertion_point(field_release:interconnectionmodule.InterconnectionPoint.reactivePwrSetPointEnabled)
  
  ::commonmodule::ControlDPC* temp = reactivepwrsetpointenabled_;
  reactivepwrsetpointenabled_ = nullptr;
  return temp;
}
inline ::commonmodule::ControlDPC* InterconnectionPoint::mutable_reactivepwrsetpointenabled() {
  
  if (reactivepwrsetpointenabled_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::ControlDPC>(GetArenaNoVirtual());
    reactivepwrsetpointenabled_ = p;
  }
  // @@protoc_insertion_point(field_mutable:interconnectionmodule.InterconnectionPoint.reactivePwrSetPointEnabled)
  return reactivepwrsetpointenabled_;
}
inline void InterconnectionPoint::set_allocated_reactivepwrsetpointenabled(::commonmodule::ControlDPC* reactivepwrsetpointenabled) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(reactivepwrsetpointenabled_);
  }
  if (reactivepwrsetpointenabled) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      reactivepwrsetpointenabled = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, reactivepwrsetpointenabled, submessage_arena);
    }
    
  } else {
    
  }
  reactivepwrsetpointenabled_ = reactivepwrsetpointenabled;
  // @@protoc_insertion_point(field_set_allocated:interconnectionmodule.InterconnectionPoint.reactivePwrSetPointEnabled)
}

// .commonmodule.ControlDPC realPwrSetPointEnabled = 8;
inline bool InterconnectionPoint::has_realpwrsetpointenabled() const {
  return this != internal_default_instance() && realpwrsetpointenabled_ != nullptr;
}
inline const ::commonmodule::ControlDPC& InterconnectionPoint::realpwrsetpointenabled() const {
  const ::commonmodule::ControlDPC* p = realpwrsetpointenabled_;
  // @@protoc_insertion_point(field_get:interconnectionmodule.InterconnectionPoint.realPwrSetPointEnabled)
  return p != nullptr ? *p : *reinterpret_cast<const ::commonmodule::ControlDPC*>(
      &::commonmodule::_ControlDPC_default_instance_);
}
inline ::commonmodule::ControlDPC* InterconnectionPoint::release_realpwrsetpointenabled() {
  // @@protoc_insertion_point(field_release:interconnectionmodule.InterconnectionPoint.realPwrSetPointEnabled)
  
  ::commonmodule::ControlDPC* temp = realpwrsetpointenabled_;
  realpwrsetpointenabled_ = nullptr;
  return temp;
}
inline ::commonmodule::ControlDPC* InterconnectionPoint::mutable_realpwrsetpointenabled() {
  
  if (realpwrsetpointenabled_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::ControlDPC>(GetArenaNoVirtual());
    realpwrsetpointenabled_ = p;
  }
  // @@protoc_insertion_point(field_mutable:interconnectionmodule.InterconnectionPoint.realPwrSetPointEnabled)
  return realpwrsetpointenabled_;
}
inline void InterconnectionPoint::set_allocated_realpwrsetpointenabled(::commonmodule::ControlDPC* realpwrsetpointenabled) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(realpwrsetpointenabled_);
  }
  if (realpwrsetpointenabled) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      realpwrsetpointenabled = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, realpwrsetpointenabled, submessage_arena);
    }
    
  } else {
    
  }
  realpwrsetpointenabled_ = realpwrsetpointenabled;
  // @@protoc_insertion_point(field_set_allocated:interconnectionmodule.InterconnectionPoint.realPwrSetPointEnabled)
}

// .commonmodule.ControlDPC voltageSetPointEnabled = 9;
inline bool InterconnectionPoint::has_voltagesetpointenabled() const {
  return this != internal_default_instance() && voltagesetpointenabled_ != nullptr;
}
inline const ::commonmodule::ControlDPC& InterconnectionPoint::voltagesetpointenabled() const {
  const ::commonmodule::ControlDPC* p = voltagesetpointenabled_;
  // @@protoc_insertion_point(field_get:interconnectionmodule.InterconnectionPoint.voltageSetPointEnabled)
  return p != nullptr ? *p : *reinterpret_cast<const ::commonmodule::ControlDPC*>(
      &::commonmodule::_ControlDPC_default_instance_);
}
inline ::commonmodule::ControlDPC* InterconnectionPoint::release_voltagesetpointenabled() {
  // @@protoc_insertion_point(field_release:interconnectionmodule.InterconnectionPoint.voltageSetPointEnabled)
  
  ::commonmodule::ControlDPC* temp = voltagesetpointenabled_;
  voltagesetpointenabled_ = nullptr;
  return temp;
}
inline ::commonmodule::ControlDPC* InterconnectionPoint::mutable_voltagesetpointenabled() {
  
  if (voltagesetpointenabled_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::ControlDPC>(GetArenaNoVirtual());
    voltagesetpointenabled_ = p;
  }
  // @@protoc_insertion_point(field_mutable:interconnectionmodule.InterconnectionPoint.voltageSetPointEnabled)
  return voltagesetpointenabled_;
}
inline void InterconnectionPoint::set_allocated_voltagesetpointenabled(::commonmodule::ControlDPC* voltagesetpointenabled) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(voltagesetpointenabled_);
  }
  if (voltagesetpointenabled) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      voltagesetpointenabled = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, voltagesetpointenabled, submessage_arena);
    }
    
  } else {
    
  }
  voltagesetpointenabled_ = voltagesetpointenabled;
  // @@protoc_insertion_point(field_set_allocated:interconnectionmodule.InterconnectionPoint.voltageSetPointEnabled)
}

// .commonmodule.Timestamp startTime = 10 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
inline bool InterconnectionPoint::has_starttime() const {
  return this != internal_default_instance() && starttime_ != nullptr;
}
inline const ::commonmodule::Timestamp& InterconnectionPoint::starttime() const {
  const ::commonmodule::Timestamp* p = starttime_;
  // @@protoc_insertion_point(field_get:interconnectionmodule.InterconnectionPoint.startTime)
  return p != nullptr ? *p : *reinterpret_cast<const ::commonmodule::Timestamp*>(
      &::commonmodule::_Timestamp_default_instance_);
}
inline ::commonmodule::Timestamp* InterconnectionPoint::release_starttime() {
  // @@protoc_insertion_point(field_release:interconnectionmodule.InterconnectionPoint.startTime)
  
  ::commonmodule::Timestamp* temp = starttime_;
  starttime_ = nullptr;
  return temp;
}
inline ::commonmodule::Timestamp* InterconnectionPoint::mutable_starttime() {
  
  if (starttime_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::Timestamp>(GetArenaNoVirtual());
    starttime_ = p;
  }
  // @@protoc_insertion_point(field_mutable:interconnectionmodule.InterconnectionPoint.startTime)
  return starttime_;
}
inline void InterconnectionPoint::set_allocated_starttime(::commonmodule::Timestamp* starttime) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(starttime_);
  }
  if (starttime) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      starttime = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, starttime, submessage_arena);
    }
    
  } else {
    
  }
  starttime_ = starttime;
  // @@protoc_insertion_point(field_set_allocated:interconnectionmodule.InterconnectionPoint.startTime)
}

// -------------------------------------------------------------------

// InterconnectionCSG

// repeated .interconnectionmodule.InterconnectionPoint crvPts = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
inline int InterconnectionCSG::crvpts_size() const {
  return crvpts_.size();
}
inline void InterconnectionCSG::clear_crvpts() {
  crvpts_.Clear();
}
inline ::interconnectionmodule::InterconnectionPoint* InterconnectionCSG::mutable_crvpts(int index) {
  // @@protoc_insertion_point(field_mutable:interconnectionmodule.InterconnectionCSG.crvPts)
  return crvpts_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::interconnectionmodule::InterconnectionPoint >*
InterconnectionCSG::mutable_crvpts() {
  // @@protoc_insertion_point(field_mutable_list:interconnectionmodule.InterconnectionCSG.crvPts)
  return &crvpts_;
}
inline const ::interconnectionmodule::InterconnectionPoint& InterconnectionCSG::crvpts(int index) const {
  // @@protoc_insertion_point(field_get:interconnectionmodule.InterconnectionCSG.crvPts)
  return crvpts_.Get(index);
}
inline ::interconnectionmodule::InterconnectionPoint* InterconnectionCSG::add_crvpts() {
  // @@protoc_insertion_point(field_add:interconnectionmodule.InterconnectionCSG.crvPts)
  return crvpts_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::interconnectionmodule::InterconnectionPoint >&
InterconnectionCSG::crvpts() const {
  // @@protoc_insertion_point(field_list:interconnectionmodule.InterconnectionCSG.crvPts)
  return crvpts_;
}

// -------------------------------------------------------------------

// InterconnectionControlScheduleFSCH

// .interconnectionmodule.InterconnectionCSG ValDCSG = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
inline bool InterconnectionControlScheduleFSCH::has_valdcsg() const {
  return this != internal_default_instance() && valdcsg_ != nullptr;
}
inline void InterconnectionControlScheduleFSCH::clear_valdcsg() {
  if (GetArenaNoVirtual() == nullptr && valdcsg_ != nullptr) {
    delete valdcsg_;
  }
  valdcsg_ = nullptr;
}
inline const ::interconnectionmodule::InterconnectionCSG& InterconnectionControlScheduleFSCH::valdcsg() const {
  const ::interconnectionmodule::InterconnectionCSG* p = valdcsg_;
  // @@protoc_insertion_point(field_get:interconnectionmodule.InterconnectionControlScheduleFSCH.ValDCSG)
  return p != nullptr ? *p : *reinterpret_cast<const ::interconnectionmodule::InterconnectionCSG*>(
      &::interconnectionmodule::_InterconnectionCSG_default_instance_);
}
inline ::interconnectionmodule::InterconnectionCSG* InterconnectionControlScheduleFSCH::release_valdcsg() {
  // @@protoc_insertion_point(field_release:interconnectionmodule.InterconnectionControlScheduleFSCH.ValDCSG)
  
  ::interconnectionmodule::InterconnectionCSG* temp = valdcsg_;
  valdcsg_ = nullptr;
  return temp;
}
inline ::interconnectionmodule::InterconnectionCSG* InterconnectionControlScheduleFSCH::mutable_valdcsg() {
  
  if (valdcsg_ == nullptr) {
    auto* p = CreateMaybeMessage<::interconnectionmodule::InterconnectionCSG>(GetArenaNoVirtual());
    valdcsg_ = p;
  }
  // @@protoc_insertion_point(field_mutable:interconnectionmodule.InterconnectionControlScheduleFSCH.ValDCSG)
  return valdcsg_;
}
inline void InterconnectionControlScheduleFSCH::set_allocated_valdcsg(::interconnectionmodule::InterconnectionCSG* valdcsg) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete valdcsg_;
  }
  if (valdcsg) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      valdcsg = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, valdcsg, submessage_arena);
    }
    
  } else {
    
  }
  valdcsg_ = valdcsg;
  // @@protoc_insertion_point(field_set_allocated:interconnectionmodule.InterconnectionControlScheduleFSCH.ValDCSG)
}

// -------------------------------------------------------------------

// InterconnectionScheduleFSCC

// .commonmodule.ControlFSCC controlFSCC = 1 [(.uml.option_parent_message) = true];
inline bool InterconnectionScheduleFSCC::has_controlfscc() const {
  return this != internal_default_instance() && controlfscc_ != nullptr;
}
inline const ::commonmodule::ControlFSCC& InterconnectionScheduleFSCC::controlfscc() const {
  const ::commonmodule::ControlFSCC* p = controlfscc_;
  // @@protoc_insertion_point(field_get:interconnectionmodule.InterconnectionScheduleFSCC.controlFSCC)
  return p != nullptr ? *p : *reinterpret_cast<const ::commonmodule::ControlFSCC*>(
      &::commonmodule::_ControlFSCC_default_instance_);
}
inline ::commonmodule::ControlFSCC* InterconnectionScheduleFSCC::release_controlfscc() {
  // @@protoc_insertion_point(field_release:interconnectionmodule.InterconnectionScheduleFSCC.controlFSCC)
  
  ::commonmodule::ControlFSCC* temp = controlfscc_;
  controlfscc_ = nullptr;
  return temp;
}
inline ::commonmodule::ControlFSCC* InterconnectionScheduleFSCC::mutable_controlfscc() {
  
  if (controlfscc_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::ControlFSCC>(GetArenaNoVirtual());
    controlfscc_ = p;
  }
  // @@protoc_insertion_point(field_mutable:interconnectionmodule.InterconnectionScheduleFSCC.controlFSCC)
  return controlfscc_;
}
inline void InterconnectionScheduleFSCC::set_allocated_controlfscc(::commonmodule::ControlFSCC* controlfscc) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(controlfscc_);
  }
  if (controlfscc) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      controlfscc = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, controlfscc, submessage_arena);
    }
    
  } else {
    
  }
  controlfscc_ = controlfscc;
  // @@protoc_insertion_point(field_set_allocated:interconnectionmodule.InterconnectionScheduleFSCC.controlFSCC)
}

// repeated .interconnectionmodule.InterconnectionControlScheduleFSCH interconnectionControlScheduleFSCH = 2 [(.uml.option_multiplicity_min) = 0];
inline int InterconnectionScheduleFSCC::interconnectioncontrolschedulefsch_size() const {
  return interconnectioncontrolschedulefsch_.size();
}
inline void InterconnectionScheduleFSCC::clear_interconnectioncontrolschedulefsch() {
  interconnectioncontrolschedulefsch_.Clear();
}
inline ::interconnectionmodule::InterconnectionControlScheduleFSCH* InterconnectionScheduleFSCC::mutable_interconnectioncontrolschedulefsch(int index) {
  // @@protoc_insertion_point(field_mutable:interconnectionmodule.InterconnectionScheduleFSCC.interconnectionControlScheduleFSCH)
  return interconnectioncontrolschedulefsch_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::interconnectionmodule::InterconnectionControlScheduleFSCH >*
InterconnectionScheduleFSCC::mutable_interconnectioncontrolschedulefsch() {
  // @@protoc_insertion_point(field_mutable_list:interconnectionmodule.InterconnectionScheduleFSCC.interconnectionControlScheduleFSCH)
  return &interconnectioncontrolschedulefsch_;
}
inline const ::interconnectionmodule::InterconnectionControlScheduleFSCH& InterconnectionScheduleFSCC::interconnectioncontrolschedulefsch(int index) const {
  // @@protoc_insertion_point(field_get:interconnectionmodule.InterconnectionScheduleFSCC.interconnectionControlScheduleFSCH)
  return interconnectioncontrolschedulefsch_.Get(index);
}
inline ::interconnectionmodule::InterconnectionControlScheduleFSCH* InterconnectionScheduleFSCC::add_interconnectioncontrolschedulefsch() {
  // @@protoc_insertion_point(field_add:interconnectionmodule.InterconnectionScheduleFSCC.interconnectionControlScheduleFSCH)
  return interconnectioncontrolschedulefsch_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::interconnectionmodule::InterconnectionControlScheduleFSCH >&
InterconnectionScheduleFSCC::interconnectioncontrolschedulefsch() const {
  // @@protoc_insertion_point(field_list:interconnectionmodule.InterconnectionScheduleFSCC.interconnectionControlScheduleFSCH)
  return interconnectioncontrolschedulefsch_;
}

// -------------------------------------------------------------------

// InterconnectionSchedule

// .commonmodule.ControlValue controlValue = 1 [(.uml.option_parent_message) = true];
inline bool InterconnectionSchedule::has_controlvalue() const {
  return this != internal_default_instance() && controlvalue_ != nullptr;
}
inline const ::commonmodule::ControlValue& InterconnectionSchedule::controlvalue() const {
  const ::commonmodule::ControlValue* p = controlvalue_;
  // @@protoc_insertion_point(field_get:interconnectionmodule.InterconnectionSchedule.controlValue)
  return p != nullptr ? *p : *reinterpret_cast<const ::commonmodule::ControlValue*>(
      &::commonmodule::_ControlValue_default_instance_);
}
inline ::commonmodule::ControlValue* InterconnectionSchedule::release_controlvalue() {
  // @@protoc_insertion_point(field_release:interconnectionmodule.InterconnectionSchedule.controlValue)
  
  ::commonmodule::ControlValue* temp = controlvalue_;
  controlvalue_ = nullptr;
  return temp;
}
inline ::commonmodule::ControlValue* InterconnectionSchedule::mutable_controlvalue() {
  
  if (controlvalue_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::ControlValue>(GetArenaNoVirtual());
    controlvalue_ = p;
  }
  // @@protoc_insertion_point(field_mutable:interconnectionmodule.InterconnectionSchedule.controlValue)
  return controlvalue_;
}
inline void InterconnectionSchedule::set_allocated_controlvalue(::commonmodule::ControlValue* controlvalue) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(controlvalue_);
  }
  if (controlvalue) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      controlvalue = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, controlvalue, submessage_arena);
    }
    
  } else {
    
  }
  controlvalue_ = controlvalue;
  // @@protoc_insertion_point(field_set_allocated:interconnectionmodule.InterconnectionSchedule.controlValue)
}

// .commonmodule.CheckConditions check = 2;
inline bool InterconnectionSchedule::has_check() const {
  return this != internal_default_instance() && check_ != nullptr;
}
inline const ::commonmodule::CheckConditions& InterconnectionSchedule::check() const {
  const ::commonmodule::CheckConditions* p = check_;
  // @@protoc_insertion_point(field_get:interconnectionmodule.InterconnectionSchedule.check)
  return p != nullptr ? *p : *reinterpret_cast<const ::commonmodule::CheckConditions*>(
      &::commonmodule::_CheckConditions_default_instance_);
}
inline ::commonmodule::CheckConditions* InterconnectionSchedule::release_check() {
  // @@protoc_insertion_point(field_release:interconnectionmodule.InterconnectionSchedule.check)
  
  ::commonmodule::CheckConditions* temp = check_;
  check_ = nullptr;
  return temp;
}
inline ::commonmodule::CheckConditions* InterconnectionSchedule::mutable_check() {
  
  if (check_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::CheckConditions>(GetArenaNoVirtual());
    check_ = p;
  }
  // @@protoc_insertion_point(field_mutable:interconnectionmodule.InterconnectionSchedule.check)
  return check_;
}
inline void InterconnectionSchedule::set_allocated_check(::commonmodule::CheckConditions* check) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(check_);
  }
  if (check) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      check = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, check, submessage_arena);
    }
    
  } else {
    
  }
  check_ = check;
  // @@protoc_insertion_point(field_set_allocated:interconnectionmodule.InterconnectionSchedule.check)
}

// .interconnectionmodule.InterconnectionScheduleFSCC interconnectionScheduleFSCC = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
inline bool InterconnectionSchedule::has_interconnectionschedulefscc() const {
  return this != internal_default_instance() && interconnectionschedulefscc_ != nullptr;
}
inline void InterconnectionSchedule::clear_interconnectionschedulefscc() {
  if (GetArenaNoVirtual() == nullptr && interconnectionschedulefscc_ != nullptr) {
    delete interconnectionschedulefscc_;
  }
  interconnectionschedulefscc_ = nullptr;
}
inline const ::interconnectionmodule::InterconnectionScheduleFSCC& InterconnectionSchedule::interconnectionschedulefscc() const {
  const ::interconnectionmodule::InterconnectionScheduleFSCC* p = interconnectionschedulefscc_;
  // @@protoc_insertion_point(field_get:interconnectionmodule.InterconnectionSchedule.interconnectionScheduleFSCC)
  return p != nullptr ? *p : *reinterpret_cast<const ::interconnectionmodule::InterconnectionScheduleFSCC*>(
      &::interconnectionmodule::_InterconnectionScheduleFSCC_default_instance_);
}
inline ::interconnectionmodule::InterconnectionScheduleFSCC* InterconnectionSchedule::release_interconnectionschedulefscc() {
  // @@protoc_insertion_point(field_release:interconnectionmodule.InterconnectionSchedule.interconnectionScheduleFSCC)
  
  ::interconnectionmodule::InterconnectionScheduleFSCC* temp = interconnectionschedulefscc_;
  interconnectionschedulefscc_ = nullptr;
  return temp;
}
inline ::interconnectionmodule::InterconnectionScheduleFSCC* InterconnectionSchedule::mutable_interconnectionschedulefscc() {
  
  if (interconnectionschedulefscc_ == nullptr) {
    auto* p = CreateMaybeMessage<::interconnectionmodule::InterconnectionScheduleFSCC>(GetArenaNoVirtual());
    interconnectionschedulefscc_ = p;
  }
  // @@protoc_insertion_point(field_mutable:interconnectionmodule.InterconnectionSchedule.interconnectionScheduleFSCC)
  return interconnectionschedulefscc_;
}
inline void InterconnectionSchedule::set_allocated_interconnectionschedulefscc(::interconnectionmodule::InterconnectionScheduleFSCC* interconnectionschedulefscc) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete interconnectionschedulefscc_;
  }
  if (interconnectionschedulefscc) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      interconnectionschedulefscc = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, interconnectionschedulefscc, submessage_arena);
    }
    
  } else {
    
  }
  interconnectionschedulefscc_ = interconnectionschedulefscc;
  // @@protoc_insertion_point(field_set_allocated:interconnectionmodule.InterconnectionSchedule.interconnectionScheduleFSCC)
}

// -------------------------------------------------------------------

// PlannedInterconnectionScheduleProfile

// .commonmodule.ControlMessageInfo controlMessageInfo = 1 [(.uml.option_parent_message) = true];
inline bool PlannedInterconnectionScheduleProfile::has_controlmessageinfo() const {
  return this != internal_default_instance() && controlmessageinfo_ != nullptr;
}
inline const ::commonmodule::ControlMessageInfo& PlannedInterconnectionScheduleProfile::controlmessageinfo() const {
  const ::commonmodule::ControlMessageInfo* p = controlmessageinfo_;
  // @@protoc_insertion_point(field_get:interconnectionmodule.PlannedInterconnectionScheduleProfile.controlMessageInfo)
  return p != nullptr ? *p : *reinterpret_cast<const ::commonmodule::ControlMessageInfo*>(
      &::commonmodule::_ControlMessageInfo_default_instance_);
}
inline ::commonmodule::ControlMessageInfo* PlannedInterconnectionScheduleProfile::release_controlmessageinfo() {
  // @@protoc_insertion_point(field_release:interconnectionmodule.PlannedInterconnectionScheduleProfile.controlMessageInfo)
  
  ::commonmodule::ControlMessageInfo* temp = controlmessageinfo_;
  controlmessageinfo_ = nullptr;
  return temp;
}
inline ::commonmodule::ControlMessageInfo* PlannedInterconnectionScheduleProfile::mutable_controlmessageinfo() {
  
  if (controlmessageinfo_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::ControlMessageInfo>(GetArenaNoVirtual());
    controlmessageinfo_ = p;
  }
  // @@protoc_insertion_point(field_mutable:interconnectionmodule.PlannedInterconnectionScheduleProfile.controlMessageInfo)
  return controlmessageinfo_;
}
inline void PlannedInterconnectionScheduleProfile::set_allocated_controlmessageinfo(::commonmodule::ControlMessageInfo* controlmessageinfo) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(controlmessageinfo_);
  }
  if (controlmessageinfo) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      controlmessageinfo = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, controlmessageinfo, submessage_arena);
    }
    
  } else {
    
  }
  controlmessageinfo_ = controlmessageinfo;
  // @@protoc_insertion_point(field_set_allocated:interconnectionmodule.PlannedInterconnectionScheduleProfile.controlMessageInfo)
}

// .commonmodule.ApplicationSystem applicationSystem = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
inline bool PlannedInterconnectionScheduleProfile::has_applicationsystem() const {
  return this != internal_default_instance() && applicationsystem_ != nullptr;
}
inline const ::commonmodule::ApplicationSystem& PlannedInterconnectionScheduleProfile::applicationsystem() const {
  const ::commonmodule::ApplicationSystem* p = applicationsystem_;
  // @@protoc_insertion_point(field_get:interconnectionmodule.PlannedInterconnectionScheduleProfile.applicationSystem)
  return p != nullptr ? *p : *reinterpret_cast<const ::commonmodule::ApplicationSystem*>(
      &::commonmodule::_ApplicationSystem_default_instance_);
}
inline ::commonmodule::ApplicationSystem* PlannedInterconnectionScheduleProfile::release_applicationsystem() {
  // @@protoc_insertion_point(field_release:interconnectionmodule.PlannedInterconnectionScheduleProfile.applicationSystem)
  
  ::commonmodule::ApplicationSystem* temp = applicationsystem_;
  applicationsystem_ = nullptr;
  return temp;
}
inline ::commonmodule::ApplicationSystem* PlannedInterconnectionScheduleProfile::mutable_applicationsystem() {
  
  if (applicationsystem_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::ApplicationSystem>(GetArenaNoVirtual());
    applicationsystem_ = p;
  }
  // @@protoc_insertion_point(field_mutable:interconnectionmodule.PlannedInterconnectionScheduleProfile.applicationSystem)
  return applicationsystem_;
}
inline void PlannedInterconnectionScheduleProfile::set_allocated_applicationsystem(::commonmodule::ApplicationSystem* applicationsystem) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(applicationsystem_);
  }
  if (applicationsystem) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      applicationsystem = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, applicationsystem, submessage_arena);
    }
    
  } else {
    
  }
  applicationsystem_ = applicationsystem;
  // @@protoc_insertion_point(field_set_allocated:interconnectionmodule.PlannedInterconnectionScheduleProfile.applicationSystem)
}

// .interconnectionmodule.InterconnectionSchedule interconnectionSchedule = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
inline bool PlannedInterconnectionScheduleProfile::has_interconnectionschedule() const {
  return this != internal_default_instance() && interconnectionschedule_ != nullptr;
}
inline void PlannedInterconnectionScheduleProfile::clear_interconnectionschedule() {
  if (GetArenaNoVirtual() == nullptr && interconnectionschedule_ != nullptr) {
    delete interconnectionschedule_;
  }
  interconnectionschedule_ = nullptr;
}
inline const ::interconnectionmodule::InterconnectionSchedule& PlannedInterconnectionScheduleProfile::interconnectionschedule() const {
  const ::interconnectionmodule::InterconnectionSchedule* p = interconnectionschedule_;
  // @@protoc_insertion_point(field_get:interconnectionmodule.PlannedInterconnectionScheduleProfile.interconnectionSchedule)
  return p != nullptr ? *p : *reinterpret_cast<const ::interconnectionmodule::InterconnectionSchedule*>(
      &::interconnectionmodule::_InterconnectionSchedule_default_instance_);
}
inline ::interconnectionmodule::InterconnectionSchedule* PlannedInterconnectionScheduleProfile::release_interconnectionschedule() {
  // @@protoc_insertion_point(field_release:interconnectionmodule.PlannedInterconnectionScheduleProfile.interconnectionSchedule)
  
  ::interconnectionmodule::InterconnectionSchedule* temp = interconnectionschedule_;
  interconnectionschedule_ = nullptr;
  return temp;
}
inline ::interconnectionmodule::InterconnectionSchedule* PlannedInterconnectionScheduleProfile::mutable_interconnectionschedule() {
  
  if (interconnectionschedule_ == nullptr) {
    auto* p = CreateMaybeMessage<::interconnectionmodule::InterconnectionSchedule>(GetArenaNoVirtual());
    interconnectionschedule_ = p;
  }
  // @@protoc_insertion_point(field_mutable:interconnectionmodule.PlannedInterconnectionScheduleProfile.interconnectionSchedule)
  return interconnectionschedule_;
}
inline void PlannedInterconnectionScheduleProfile::set_allocated_interconnectionschedule(::interconnectionmodule::InterconnectionSchedule* interconnectionschedule) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete interconnectionschedule_;
  }
  if (interconnectionschedule) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      interconnectionschedule = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, interconnectionschedule, submessage_arena);
    }
    
  } else {
    
  }
  interconnectionschedule_ = interconnectionschedule;
  // @@protoc_insertion_point(field_set_allocated:interconnectionmodule.PlannedInterconnectionScheduleProfile.interconnectionSchedule)
}

// -------------------------------------------------------------------

// RequestedInterconnectionScheduleProfile

// .commonmodule.ControlMessageInfo controlMessageInfo = 1 [(.uml.option_parent_message) = true];
inline bool RequestedInterconnectionScheduleProfile::has_controlmessageinfo() const {
  return this != internal_default_instance() && controlmessageinfo_ != nullptr;
}
inline const ::commonmodule::ControlMessageInfo& RequestedInterconnectionScheduleProfile::controlmessageinfo() const {
  const ::commonmodule::ControlMessageInfo* p = controlmessageinfo_;
  // @@protoc_insertion_point(field_get:interconnectionmodule.RequestedInterconnectionScheduleProfile.controlMessageInfo)
  return p != nullptr ? *p : *reinterpret_cast<const ::commonmodule::ControlMessageInfo*>(
      &::commonmodule::_ControlMessageInfo_default_instance_);
}
inline ::commonmodule::ControlMessageInfo* RequestedInterconnectionScheduleProfile::release_controlmessageinfo() {
  // @@protoc_insertion_point(field_release:interconnectionmodule.RequestedInterconnectionScheduleProfile.controlMessageInfo)
  
  ::commonmodule::ControlMessageInfo* temp = controlmessageinfo_;
  controlmessageinfo_ = nullptr;
  return temp;
}
inline ::commonmodule::ControlMessageInfo* RequestedInterconnectionScheduleProfile::mutable_controlmessageinfo() {
  
  if (controlmessageinfo_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::ControlMessageInfo>(GetArenaNoVirtual());
    controlmessageinfo_ = p;
  }
  // @@protoc_insertion_point(field_mutable:interconnectionmodule.RequestedInterconnectionScheduleProfile.controlMessageInfo)
  return controlmessageinfo_;
}
inline void RequestedInterconnectionScheduleProfile::set_allocated_controlmessageinfo(::commonmodule::ControlMessageInfo* controlmessageinfo) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(controlmessageinfo_);
  }
  if (controlmessageinfo) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      controlmessageinfo = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, controlmessageinfo, submessage_arena);
    }
    
  } else {
    
  }
  controlmessageinfo_ = controlmessageinfo;
  // @@protoc_insertion_point(field_set_allocated:interconnectionmodule.RequestedInterconnectionScheduleProfile.controlMessageInfo)
}

// .commonmodule.ApplicationSystem applicationSystem = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
inline bool RequestedInterconnectionScheduleProfile::has_applicationsystem() const {
  return this != internal_default_instance() && applicationsystem_ != nullptr;
}
inline const ::commonmodule::ApplicationSystem& RequestedInterconnectionScheduleProfile::applicationsystem() const {
  const ::commonmodule::ApplicationSystem* p = applicationsystem_;
  // @@protoc_insertion_point(field_get:interconnectionmodule.RequestedInterconnectionScheduleProfile.applicationSystem)
  return p != nullptr ? *p : *reinterpret_cast<const ::commonmodule::ApplicationSystem*>(
      &::commonmodule::_ApplicationSystem_default_instance_);
}
inline ::commonmodule::ApplicationSystem* RequestedInterconnectionScheduleProfile::release_applicationsystem() {
  // @@protoc_insertion_point(field_release:interconnectionmodule.RequestedInterconnectionScheduleProfile.applicationSystem)
  
  ::commonmodule::ApplicationSystem* temp = applicationsystem_;
  applicationsystem_ = nullptr;
  return temp;
}
inline ::commonmodule::ApplicationSystem* RequestedInterconnectionScheduleProfile::mutable_applicationsystem() {
  
  if (applicationsystem_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::ApplicationSystem>(GetArenaNoVirtual());
    applicationsystem_ = p;
  }
  // @@protoc_insertion_point(field_mutable:interconnectionmodule.RequestedInterconnectionScheduleProfile.applicationSystem)
  return applicationsystem_;
}
inline void RequestedInterconnectionScheduleProfile::set_allocated_applicationsystem(::commonmodule::ApplicationSystem* applicationsystem) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(applicationsystem_);
  }
  if (applicationsystem) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      applicationsystem = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, applicationsystem, submessage_arena);
    }
    
  } else {
    
  }
  applicationsystem_ = applicationsystem;
  // @@protoc_insertion_point(field_set_allocated:interconnectionmodule.RequestedInterconnectionScheduleProfile.applicationSystem)
}

// .interconnectionmodule.InterconnectionSchedule interconnectionSchedule = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
inline bool RequestedInterconnectionScheduleProfile::has_interconnectionschedule() const {
  return this != internal_default_instance() && interconnectionschedule_ != nullptr;
}
inline void RequestedInterconnectionScheduleProfile::clear_interconnectionschedule() {
  if (GetArenaNoVirtual() == nullptr && interconnectionschedule_ != nullptr) {
    delete interconnectionschedule_;
  }
  interconnectionschedule_ = nullptr;
}
inline const ::interconnectionmodule::InterconnectionSchedule& RequestedInterconnectionScheduleProfile::interconnectionschedule() const {
  const ::interconnectionmodule::InterconnectionSchedule* p = interconnectionschedule_;
  // @@protoc_insertion_point(field_get:interconnectionmodule.RequestedInterconnectionScheduleProfile.interconnectionSchedule)
  return p != nullptr ? *p : *reinterpret_cast<const ::interconnectionmodule::InterconnectionSchedule*>(
      &::interconnectionmodule::_InterconnectionSchedule_default_instance_);
}
inline ::interconnectionmodule::InterconnectionSchedule* RequestedInterconnectionScheduleProfile::release_interconnectionschedule() {
  // @@protoc_insertion_point(field_release:interconnectionmodule.RequestedInterconnectionScheduleProfile.interconnectionSchedule)
  
  ::interconnectionmodule::InterconnectionSchedule* temp = interconnectionschedule_;
  interconnectionschedule_ = nullptr;
  return temp;
}
inline ::interconnectionmodule::InterconnectionSchedule* RequestedInterconnectionScheduleProfile::mutable_interconnectionschedule() {
  
  if (interconnectionschedule_ == nullptr) {
    auto* p = CreateMaybeMessage<::interconnectionmodule::InterconnectionSchedule>(GetArenaNoVirtual());
    interconnectionschedule_ = p;
  }
  // @@protoc_insertion_point(field_mutable:interconnectionmodule.RequestedInterconnectionScheduleProfile.interconnectionSchedule)
  return interconnectionschedule_;
}
inline void RequestedInterconnectionScheduleProfile::set_allocated_interconnectionschedule(::interconnectionmodule::InterconnectionSchedule* interconnectionschedule) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete interconnectionschedule_;
  }
  if (interconnectionschedule) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      interconnectionschedule = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, interconnectionschedule, submessage_arena);
    }
    
  } else {
    
  }
  interconnectionschedule_ = interconnectionschedule;
  // @@protoc_insertion_point(field_set_allocated:interconnectionmodule.RequestedInterconnectionScheduleProfile.interconnectionSchedule)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace interconnectionmodule

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_interconnectionmodule_2finterconnectionmodule_2eproto
