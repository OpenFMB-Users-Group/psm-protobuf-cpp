// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: metermodule/metermodule.proto
// Protobuf C++ Version: 6.31.1

#include "metermodule/metermodule.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace metermodule {

inline constexpr MeterReading::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        conductingequipmentterminalreading_{nullptr},
        phasemmtn_{nullptr},
        readingmmtr_{nullptr},
        readingmmxu_{nullptr},
        readingmmdc_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR MeterReading::MeterReading(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(MeterReading_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MeterReadingDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MeterReadingDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MeterReadingDefaultTypeInternal() {}
  union {
    MeterReading _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MeterReadingDefaultTypeInternal _MeterReading_default_instance_;

inline constexpr MeterReadingProfile::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        readingmessageinfo_{nullptr},
        meter_{nullptr},
        meterreading_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR MeterReadingProfile::MeterReadingProfile(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(MeterReadingProfile_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MeterReadingProfileDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MeterReadingProfileDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MeterReadingProfileDefaultTypeInternal() {}
  union {
    MeterReadingProfile _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MeterReadingProfileDefaultTypeInternal _MeterReadingProfile_default_instance_;
}  // namespace metermodule
static constexpr const ::_pb::EnumDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_enum_descriptors_metermodule_2fmetermodule_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_metermodule_2fmetermodule_2eproto = nullptr;
const ::uint32_t
    TableStruct_metermodule_2fmetermodule_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::metermodule::MeterReading, _impl_._has_bits_),
        8, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::metermodule::MeterReading, _impl_.conductingequipmentterminalreading_),
        PROTOBUF_FIELD_OFFSET(::metermodule::MeterReading, _impl_.phasemmtn_),
        PROTOBUF_FIELD_OFFSET(::metermodule::MeterReading, _impl_.readingmmtr_),
        PROTOBUF_FIELD_OFFSET(::metermodule::MeterReading, _impl_.readingmmxu_),
        PROTOBUF_FIELD_OFFSET(::metermodule::MeterReading, _impl_.readingmmdc_),
        0,
        1,
        2,
        3,
        4,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::metermodule::MeterReadingProfile, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::metermodule::MeterReadingProfile, _impl_.readingmessageinfo_),
        PROTOBUF_FIELD_OFFSET(::metermodule::MeterReadingProfile, _impl_.meter_),
        PROTOBUF_FIELD_OFFSET(::metermodule::MeterReadingProfile, _impl_.meterreading_),
        0,
        1,
        2,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, sizeof(::metermodule::MeterReading)},
        {13, sizeof(::metermodule::MeterReadingProfile)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::metermodule::_MeterReading_default_instance_._instance,
    &::metermodule::_MeterReadingProfile_default_instance_._instance,
};
const char descriptor_table_protodef_metermodule_2fmetermodule_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\035metermodule/metermodule.proto\022\013metermo"
    "dule\032\tuml.proto\032\037commonmodule/commonmodu"
    "le.proto\"\256\002\n\014MeterReading\022b\n\"conductingE"
    "quipmentTerminalReading\030\001 \001(\01320.commonmo"
    "dule.ConductingEquipmentTerminalReadingB"
    "\004\200\265\030\001\022*\n\tphaseMMTN\030\002 \001(\0132\027.commonmodule."
    "PhaseMMTN\022.\n\013readingMMTR\030\003 \001(\0132\031.commonm"
    "odule.ReadingMMTR\022.\n\013readingMMXU\030\004 \001(\0132\031"
    ".commonmodule.ReadingMMXU\022.\n\013readingMMDC"
    "\030\005 \001(\0132\031.commonmodule.ReadingMMDC\"\310\001\n\023Me"
    "terReadingProfile\022B\n\022readingMessageInfo\030"
    "\001 \001(\0132 .commonmodule.ReadingMessageInfoB"
    "\004\200\265\030\001\022,\n\005meter\030\002 \001(\0132\023.commonmodule.Mete"
    "rB\010\210\265\030\001\220\265\030\001\0229\n\014meterReading\030\003 \001(\0132\031.mete"
    "rmodule.MeterReadingB\010\210\265\030\001\220\265\030\001:\004\300\363\030\001B\201\001\n"
    "\023openfmb.metermoduleP\001ZRgitlab.com/openf"
    "mb/psm/ops/protobuf/go-openfmb-ops-proto"
    "buf/v2/openfmb/metermodule\252\002\023openfmb.met"
    "ermoduleb\006proto3"
};
static const ::_pbi::DescriptorTable* PROTOBUF_NONNULL const
    descriptor_table_metermodule_2fmetermodule_2eproto_deps[2] = {
        &::descriptor_table_commonmodule_2fcommonmodule_2eproto,
        &::descriptor_table_uml_2eproto,
};
static ::absl::once_flag descriptor_table_metermodule_2fmetermodule_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_metermodule_2fmetermodule_2eproto = {
    false,
    false,
    736,
    descriptor_table_protodef_metermodule_2fmetermodule_2eproto,
    "metermodule/metermodule.proto",
    &descriptor_table_metermodule_2fmetermodule_2eproto_once,
    descriptor_table_metermodule_2fmetermodule_2eproto_deps,
    2,
    2,
    schemas,
    file_default_instances,
    TableStruct_metermodule_2fmetermodule_2eproto::offsets,
    file_level_enum_descriptors_metermodule_2fmetermodule_2eproto,
    file_level_service_descriptors_metermodule_2fmetermodule_2eproto,
};
namespace metermodule {
// ===================================================================

class MeterReading::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<MeterReading>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(MeterReading, _impl_._has_bits_);
};

void MeterReading::clear_conductingequipmentterminalreading() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.conductingequipmentterminalreading_ != nullptr) _impl_.conductingequipmentterminalreading_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void MeterReading::clear_phasemmtn() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.phasemmtn_ != nullptr) _impl_.phasemmtn_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void MeterReading::clear_readingmmtr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.readingmmtr_ != nullptr) _impl_.readingmmtr_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void MeterReading::clear_readingmmxu() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.readingmmxu_ != nullptr) _impl_.readingmmxu_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
void MeterReading::clear_readingmmdc() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.readingmmdc_ != nullptr) _impl_.readingmmdc_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
MeterReading::MeterReading(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, MeterReading_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:metermodule.MeterReading)
}
PROTOBUF_NDEBUG_INLINE MeterReading::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::metermodule::MeterReading& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

MeterReading::MeterReading(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const MeterReading& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, MeterReading_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  MeterReading* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.conductingequipmentterminalreading_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.conductingequipmentterminalreading_)
                : nullptr;
  _impl_.phasemmtn_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.phasemmtn_)
                : nullptr;
  _impl_.readingmmtr_ = ((cached_has_bits & 0x00000004u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.readingmmtr_)
                : nullptr;
  _impl_.readingmmxu_ = ((cached_has_bits & 0x00000008u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.readingmmxu_)
                : nullptr;
  _impl_.readingmmdc_ = ((cached_has_bits & 0x00000010u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.readingmmdc_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:metermodule.MeterReading)
}
PROTOBUF_NDEBUG_INLINE MeterReading::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void MeterReading::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, conductingequipmentterminalreading_),
           0,
           offsetof(Impl_, readingmmdc_) -
               offsetof(Impl_, conductingequipmentterminalreading_) +
               sizeof(Impl_::readingmmdc_));
}
MeterReading::~MeterReading() {
  // @@protoc_insertion_point(destructor:metermodule.MeterReading)
  SharedDtor(*this);
}
inline void MeterReading::SharedDtor(MessageLite& self) {
  MeterReading& this_ = static_cast<MeterReading&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.conductingequipmentterminalreading_;
  delete this_._impl_.phasemmtn_;
  delete this_._impl_.readingmmtr_;
  delete this_._impl_.readingmmxu_;
  delete this_._impl_.readingmmdc_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL MeterReading::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) MeterReading(arena);
}
constexpr auto MeterReading::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(MeterReading),
                                            alignof(MeterReading));
}
constexpr auto MeterReading::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_MeterReading_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &MeterReading::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<MeterReading>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &MeterReading::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<MeterReading>(), &MeterReading::ByteSizeLong,
              &MeterReading::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(MeterReading, _impl_._cached_size_),
          false,
      },
      &MeterReading::kDescriptorMethods,
      &descriptor_table_metermodule_2fmetermodule_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull MeterReading_class_data_ =
        MeterReading::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
MeterReading::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&MeterReading_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(MeterReading_class_data_.tc_table);
  return MeterReading_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 5, 0, 2>
MeterReading::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(MeterReading, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    5,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    MeterReading_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::metermodule::MeterReading>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .commonmodule.ConductingEquipmentTerminalReading conductingEquipmentTerminalReading = 1 [(.uml.option_parent_message) = true];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(MeterReading, _impl_.conductingequipmentterminalreading_)}},
    // .commonmodule.PhaseMMTN phaseMMTN = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(MeterReading, _impl_.phasemmtn_)}},
    // .commonmodule.ReadingMMTR readingMMTR = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(MeterReading, _impl_.readingmmtr_)}},
    // .commonmodule.ReadingMMXU readingMMXU = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 3, 3, PROTOBUF_FIELD_OFFSET(MeterReading, _impl_.readingmmxu_)}},
    // .commonmodule.ReadingMMDC readingMMDC = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 4, 4, PROTOBUF_FIELD_OFFSET(MeterReading, _impl_.readingmmdc_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .commonmodule.ConductingEquipmentTerminalReading conductingEquipmentTerminalReading = 1 [(.uml.option_parent_message) = true];
    {PROTOBUF_FIELD_OFFSET(MeterReading, _impl_.conductingequipmentterminalreading_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .commonmodule.PhaseMMTN phaseMMTN = 2;
    {PROTOBUF_FIELD_OFFSET(MeterReading, _impl_.phasemmtn_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .commonmodule.ReadingMMTR readingMMTR = 3;
    {PROTOBUF_FIELD_OFFSET(MeterReading, _impl_.readingmmtr_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .commonmodule.ReadingMMXU readingMMXU = 4;
    {PROTOBUF_FIELD_OFFSET(MeterReading, _impl_.readingmmxu_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .commonmodule.ReadingMMDC readingMMDC = 5;
    {PROTOBUF_FIELD_OFFSET(MeterReading, _impl_.readingmmdc_), _Internal::kHasBitsOffset + 4, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::commonmodule::ConductingEquipmentTerminalReading>()},
      {::_pbi::TcParser::GetTable<::commonmodule::PhaseMMTN>()},
      {::_pbi::TcParser::GetTable<::commonmodule::ReadingMMTR>()},
      {::_pbi::TcParser::GetTable<::commonmodule::ReadingMMXU>()},
      {::_pbi::TcParser::GetTable<::commonmodule::ReadingMMDC>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void MeterReading::Clear() {
// @@protoc_insertion_point(message_clear_start:metermodule.MeterReading)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.conductingequipmentterminalreading_ != nullptr);
      _impl_.conductingequipmentterminalreading_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.phasemmtn_ != nullptr);
      _impl_.phasemmtn_->Clear();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(_impl_.readingmmtr_ != nullptr);
      _impl_.readingmmtr_->Clear();
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(_impl_.readingmmxu_ != nullptr);
      _impl_.readingmmxu_->Clear();
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      ABSL_DCHECK(_impl_.readingmmdc_ != nullptr);
      _impl_.readingmmdc_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL MeterReading::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const MeterReading& this_ = static_cast<const MeterReading&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL MeterReading::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const MeterReading& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:metermodule.MeterReading)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .commonmodule.ConductingEquipmentTerminalReading conductingEquipmentTerminalReading = 1 [(.uml.option_parent_message) = true];
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.conductingequipmentterminalreading_, this_._impl_.conductingequipmentterminalreading_->GetCachedSize(), target,
        stream);
  }

  // .commonmodule.PhaseMMTN phaseMMTN = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.phasemmtn_, this_._impl_.phasemmtn_->GetCachedSize(), target,
        stream);
  }

  // .commonmodule.ReadingMMTR readingMMTR = 3;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.readingmmtr_, this_._impl_.readingmmtr_->GetCachedSize(), target,
        stream);
  }

  // .commonmodule.ReadingMMXU readingMMXU = 4;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *this_._impl_.readingmmxu_, this_._impl_.readingmmxu_->GetCachedSize(), target,
        stream);
  }

  // .commonmodule.ReadingMMDC readingMMDC = 5;
  if ((cached_has_bits & 0x00000010u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *this_._impl_.readingmmdc_, this_._impl_.readingmmdc_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:metermodule.MeterReading)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t MeterReading::ByteSizeLong(const MessageLite& base) {
  const MeterReading& this_ = static_cast<const MeterReading&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t MeterReading::ByteSizeLong() const {
  const MeterReading& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:metermodule.MeterReading)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fu) != 0) {
    // .commonmodule.ConductingEquipmentTerminalReading conductingEquipmentTerminalReading = 1 [(.uml.option_parent_message) = true];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.conductingequipmentterminalreading_);
    }
    // .commonmodule.PhaseMMTN phaseMMTN = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.phasemmtn_);
    }
    // .commonmodule.ReadingMMTR readingMMTR = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.readingmmtr_);
    }
    // .commonmodule.ReadingMMXU readingMMXU = 4;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.readingmmxu_);
    }
    // .commonmodule.ReadingMMDC readingMMDC = 5;
    if ((cached_has_bits & 0x00000010u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.readingmmdc_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void MeterReading::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MeterReading*>(&to_msg);
  auto& from = static_cast<const MeterReading&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:metermodule.MeterReading)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.conductingequipmentterminalreading_ != nullptr);
      if (_this->_impl_.conductingequipmentterminalreading_ == nullptr) {
        _this->_impl_.conductingequipmentterminalreading_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.conductingequipmentterminalreading_);
      } else {
        _this->_impl_.conductingequipmentterminalreading_->MergeFrom(*from._impl_.conductingequipmentterminalreading_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.phasemmtn_ != nullptr);
      if (_this->_impl_.phasemmtn_ == nullptr) {
        _this->_impl_.phasemmtn_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.phasemmtn_);
      } else {
        _this->_impl_.phasemmtn_->MergeFrom(*from._impl_.phasemmtn_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(from._impl_.readingmmtr_ != nullptr);
      if (_this->_impl_.readingmmtr_ == nullptr) {
        _this->_impl_.readingmmtr_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.readingmmtr_);
      } else {
        _this->_impl_.readingmmtr_->MergeFrom(*from._impl_.readingmmtr_);
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(from._impl_.readingmmxu_ != nullptr);
      if (_this->_impl_.readingmmxu_ == nullptr) {
        _this->_impl_.readingmmxu_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.readingmmxu_);
      } else {
        _this->_impl_.readingmmxu_->MergeFrom(*from._impl_.readingmmxu_);
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      ABSL_DCHECK(from._impl_.readingmmdc_ != nullptr);
      if (_this->_impl_.readingmmdc_ == nullptr) {
        _this->_impl_.readingmmdc_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.readingmmdc_);
      } else {
        _this->_impl_.readingmmdc_->MergeFrom(*from._impl_.readingmmdc_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MeterReading::CopyFrom(const MeterReading& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:metermodule.MeterReading)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MeterReading::InternalSwap(MeterReading* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MeterReading, _impl_.readingmmdc_)
      + sizeof(MeterReading::_impl_.readingmmdc_)
      - PROTOBUF_FIELD_OFFSET(MeterReading, _impl_.conductingequipmentterminalreading_)>(
          reinterpret_cast<char*>(&_impl_.conductingequipmentterminalreading_),
          reinterpret_cast<char*>(&other->_impl_.conductingequipmentterminalreading_));
}

::google::protobuf::Metadata MeterReading::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MeterReadingProfile::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<MeterReadingProfile>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(MeterReadingProfile, _impl_._has_bits_);
};

void MeterReadingProfile::clear_readingmessageinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.readingmessageinfo_ != nullptr) _impl_.readingmessageinfo_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void MeterReadingProfile::clear_meter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.meter_ != nullptr) _impl_.meter_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
MeterReadingProfile::MeterReadingProfile(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, MeterReadingProfile_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:metermodule.MeterReadingProfile)
}
PROTOBUF_NDEBUG_INLINE MeterReadingProfile::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::metermodule::MeterReadingProfile& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

MeterReadingProfile::MeterReadingProfile(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const MeterReadingProfile& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, MeterReadingProfile_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  MeterReadingProfile* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.readingmessageinfo_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.readingmessageinfo_)
                : nullptr;
  _impl_.meter_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.meter_)
                : nullptr;
  _impl_.meterreading_ = ((cached_has_bits & 0x00000004u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.meterreading_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:metermodule.MeterReadingProfile)
}
PROTOBUF_NDEBUG_INLINE MeterReadingProfile::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void MeterReadingProfile::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, readingmessageinfo_),
           0,
           offsetof(Impl_, meterreading_) -
               offsetof(Impl_, readingmessageinfo_) +
               sizeof(Impl_::meterreading_));
}
MeterReadingProfile::~MeterReadingProfile() {
  // @@protoc_insertion_point(destructor:metermodule.MeterReadingProfile)
  SharedDtor(*this);
}
inline void MeterReadingProfile::SharedDtor(MessageLite& self) {
  MeterReadingProfile& this_ = static_cast<MeterReadingProfile&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.readingmessageinfo_;
  delete this_._impl_.meter_;
  delete this_._impl_.meterreading_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL MeterReadingProfile::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) MeterReadingProfile(arena);
}
constexpr auto MeterReadingProfile::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(MeterReadingProfile),
                                            alignof(MeterReadingProfile));
}
constexpr auto MeterReadingProfile::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_MeterReadingProfile_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &MeterReadingProfile::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<MeterReadingProfile>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &MeterReadingProfile::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<MeterReadingProfile>(), &MeterReadingProfile::ByteSizeLong,
              &MeterReadingProfile::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(MeterReadingProfile, _impl_._cached_size_),
          false,
      },
      &MeterReadingProfile::kDescriptorMethods,
      &descriptor_table_metermodule_2fmetermodule_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull MeterReadingProfile_class_data_ =
        MeterReadingProfile::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
MeterReadingProfile::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&MeterReadingProfile_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(MeterReadingProfile_class_data_.tc_table);
  return MeterReadingProfile_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 3, 0, 2>
MeterReadingProfile::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(MeterReadingProfile, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    MeterReadingProfile_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::metermodule::MeterReadingProfile>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .commonmodule.ReadingMessageInfo readingMessageInfo = 1 [(.uml.option_parent_message) = true];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(MeterReadingProfile, _impl_.readingmessageinfo_)}},
    // .commonmodule.Meter meter = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(MeterReadingProfile, _impl_.meter_)}},
    // .metermodule.MeterReading meterReading = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(MeterReadingProfile, _impl_.meterreading_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .commonmodule.ReadingMessageInfo readingMessageInfo = 1 [(.uml.option_parent_message) = true];
    {PROTOBUF_FIELD_OFFSET(MeterReadingProfile, _impl_.readingmessageinfo_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .commonmodule.Meter meter = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
    {PROTOBUF_FIELD_OFFSET(MeterReadingProfile, _impl_.meter_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .metermodule.MeterReading meterReading = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
    {PROTOBUF_FIELD_OFFSET(MeterReadingProfile, _impl_.meterreading_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::commonmodule::ReadingMessageInfo>()},
      {::_pbi::TcParser::GetTable<::commonmodule::Meter>()},
      {::_pbi::TcParser::GetTable<::metermodule::MeterReading>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void MeterReadingProfile::Clear() {
// @@protoc_insertion_point(message_clear_start:metermodule.MeterReadingProfile)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.readingmessageinfo_ != nullptr);
      _impl_.readingmessageinfo_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.meter_ != nullptr);
      _impl_.meter_->Clear();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(_impl_.meterreading_ != nullptr);
      _impl_.meterreading_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL MeterReadingProfile::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const MeterReadingProfile& this_ = static_cast<const MeterReadingProfile&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL MeterReadingProfile::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const MeterReadingProfile& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:metermodule.MeterReadingProfile)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .commonmodule.ReadingMessageInfo readingMessageInfo = 1 [(.uml.option_parent_message) = true];
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.readingmessageinfo_, this_._impl_.readingmessageinfo_->GetCachedSize(), target,
        stream);
  }

  // .commonmodule.Meter meter = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.meter_, this_._impl_.meter_->GetCachedSize(), target,
        stream);
  }

  // .metermodule.MeterReading meterReading = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.meterreading_, this_._impl_.meterreading_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:metermodule.MeterReadingProfile)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t MeterReadingProfile::ByteSizeLong(const MessageLite& base) {
  const MeterReadingProfile& this_ = static_cast<const MeterReadingProfile&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t MeterReadingProfile::ByteSizeLong() const {
  const MeterReadingProfile& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:metermodule.MeterReadingProfile)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // .commonmodule.ReadingMessageInfo readingMessageInfo = 1 [(.uml.option_parent_message) = true];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.readingmessageinfo_);
    }
    // .commonmodule.Meter meter = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.meter_);
    }
    // .metermodule.MeterReading meterReading = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.meterreading_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void MeterReadingProfile::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MeterReadingProfile*>(&to_msg);
  auto& from = static_cast<const MeterReadingProfile&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:metermodule.MeterReadingProfile)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.readingmessageinfo_ != nullptr);
      if (_this->_impl_.readingmessageinfo_ == nullptr) {
        _this->_impl_.readingmessageinfo_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.readingmessageinfo_);
      } else {
        _this->_impl_.readingmessageinfo_->MergeFrom(*from._impl_.readingmessageinfo_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.meter_ != nullptr);
      if (_this->_impl_.meter_ == nullptr) {
        _this->_impl_.meter_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.meter_);
      } else {
        _this->_impl_.meter_->MergeFrom(*from._impl_.meter_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(from._impl_.meterreading_ != nullptr);
      if (_this->_impl_.meterreading_ == nullptr) {
        _this->_impl_.meterreading_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.meterreading_);
      } else {
        _this->_impl_.meterreading_->MergeFrom(*from._impl_.meterreading_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MeterReadingProfile::CopyFrom(const MeterReadingProfile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:metermodule.MeterReadingProfile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MeterReadingProfile::InternalSwap(MeterReadingProfile* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MeterReadingProfile, _impl_.meterreading_)
      + sizeof(MeterReadingProfile::_impl_.meterreading_)
      - PROTOBUF_FIELD_OFFSET(MeterReadingProfile, _impl_.readingmessageinfo_)>(
          reinterpret_cast<char*>(&_impl_.readingmessageinfo_),
          reinterpret_cast<char*>(&other->_impl_.readingmessageinfo_));
}

::google::protobuf::Metadata MeterReadingProfile::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace metermodule
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_metermodule_2fmetermodule_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
