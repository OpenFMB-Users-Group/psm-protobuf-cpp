// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: optimizermodule/optimizermodule.proto

#include "optimizermodule/optimizermodule.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_commonmodule_2fcommonmodule_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ApplicationSystem_commonmodule_2fcommonmodule_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_commonmodule_2fcommonmodule_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_OptimizationMessageInfo_commonmodule_2fcommonmodule_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_essmodule_2fessmodule_2eproto ::google::protobuf::internal::SCCInfo<4> scc_info_ESSControlProfile_essmodule_2fessmodule_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_generationmodule_2fgenerationmodule_2eproto ::google::protobuf::internal::SCCInfo<4> scc_info_GenerationControlProfile_generationmodule_2fgenerationmodule_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_interconnectionmodule_2finterconnectionmodule_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_PlannedInterconnectionScheduleProfile_interconnectionmodule_2finterconnectionmodule_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_interconnectionmodule_2finterconnectionmodule_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_RequestedInterconnectionScheduleProfile_interconnectionmodule_2finterconnectionmodule_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_loadmodule_2floadmodule_2eproto ::google::protobuf::internal::SCCInfo<4> scc_info_LoadControlProfile_loadmodule_2floadmodule_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_optimizermodule_2foptimizermodule_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ESSControlScheduleProfileList_optimizermodule_2foptimizermodule_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_optimizermodule_2foptimizermodule_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_GenerationControlScheduleProfileList_optimizermodule_2foptimizermodule_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_optimizermodule_2foptimizermodule_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_LoadControlScheduleProfileList_optimizermodule_2foptimizermodule_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_optimizermodule_2foptimizermodule_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_PlannedInterconnectionScheduleProfileList_optimizermodule_2foptimizermodule_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_optimizermodule_2foptimizermodule_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_RegulatorControlScheduleProfileList_optimizermodule_2foptimizermodule_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_optimizermodule_2foptimizermodule_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_RequestedInterconnectionScheduleProfileList_optimizermodule_2foptimizermodule_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_optimizermodule_2foptimizermodule_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_SolarControlScheduleProfileList_optimizermodule_2foptimizermodule_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_optimizermodule_2foptimizermodule_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_SwitchControlScheduleProfileList_optimizermodule_2foptimizermodule_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_regulatormodule_2fregulatormodule_2eproto ::google::protobuf::internal::SCCInfo<4> scc_info_RegulatorControlProfile_regulatormodule_2fregulatormodule_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_solarmodule_2fsolarmodule_2eproto ::google::protobuf::internal::SCCInfo<4> scc_info_SolarControlProfile_solarmodule_2fsolarmodule_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_switchmodule_2fswitchmodule_2eproto ::google::protobuf::internal::SCCInfo<4> scc_info_SwitchControlProfile_switchmodule_2fswitchmodule_2eproto;
namespace optimizermodule {
class RegulatorControlScheduleProfileListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RegulatorControlScheduleProfileList> _instance;
} _RegulatorControlScheduleProfileList_default_instance_;
class SolarControlScheduleProfileListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SolarControlScheduleProfileList> _instance;
} _SolarControlScheduleProfileList_default_instance_;
class PlannedInterconnectionScheduleProfileListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PlannedInterconnectionScheduleProfileList> _instance;
} _PlannedInterconnectionScheduleProfileList_default_instance_;
class LoadControlScheduleProfileListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LoadControlScheduleProfileList> _instance;
} _LoadControlScheduleProfileList_default_instance_;
class ESSControlScheduleProfileListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ESSControlScheduleProfileList> _instance;
} _ESSControlScheduleProfileList_default_instance_;
class SwitchControlScheduleProfileListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SwitchControlScheduleProfileList> _instance;
} _SwitchControlScheduleProfileList_default_instance_;
class GenerationControlScheduleProfileListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GenerationControlScheduleProfileList> _instance;
} _GenerationControlScheduleProfileList_default_instance_;
class PlannedOptimizerScheduleProfileDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PlannedOptimizerScheduleProfile> _instance;
} _PlannedOptimizerScheduleProfile_default_instance_;
class RequestedInterconnectionScheduleProfileListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RequestedInterconnectionScheduleProfileList> _instance;
} _RequestedInterconnectionScheduleProfileList_default_instance_;
class RequestedOptimizerScheduleProfileDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RequestedOptimizerScheduleProfile> _instance;
} _RequestedOptimizerScheduleProfile_default_instance_;
}  // namespace optimizermodule
static void InitDefaultsRegulatorControlScheduleProfileList_optimizermodule_2foptimizermodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::optimizermodule::_RegulatorControlScheduleProfileList_default_instance_;
    new (ptr) ::optimizermodule::RegulatorControlScheduleProfileList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::optimizermodule::RegulatorControlScheduleProfileList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_RegulatorControlScheduleProfileList_optimizermodule_2foptimizermodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRegulatorControlScheduleProfileList_optimizermodule_2foptimizermodule_2eproto}, {
      &scc_info_RegulatorControlProfile_regulatormodule_2fregulatormodule_2eproto.base,}};

static void InitDefaultsSolarControlScheduleProfileList_optimizermodule_2foptimizermodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::optimizermodule::_SolarControlScheduleProfileList_default_instance_;
    new (ptr) ::optimizermodule::SolarControlScheduleProfileList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::optimizermodule::SolarControlScheduleProfileList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SolarControlScheduleProfileList_optimizermodule_2foptimizermodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSolarControlScheduleProfileList_optimizermodule_2foptimizermodule_2eproto}, {
      &scc_info_SolarControlProfile_solarmodule_2fsolarmodule_2eproto.base,}};

static void InitDefaultsPlannedInterconnectionScheduleProfileList_optimizermodule_2foptimizermodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::optimizermodule::_PlannedInterconnectionScheduleProfileList_default_instance_;
    new (ptr) ::optimizermodule::PlannedInterconnectionScheduleProfileList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::optimizermodule::PlannedInterconnectionScheduleProfileList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_PlannedInterconnectionScheduleProfileList_optimizermodule_2foptimizermodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPlannedInterconnectionScheduleProfileList_optimizermodule_2foptimizermodule_2eproto}, {
      &scc_info_PlannedInterconnectionScheduleProfile_interconnectionmodule_2finterconnectionmodule_2eproto.base,}};

static void InitDefaultsLoadControlScheduleProfileList_optimizermodule_2foptimizermodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::optimizermodule::_LoadControlScheduleProfileList_default_instance_;
    new (ptr) ::optimizermodule::LoadControlScheduleProfileList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::optimizermodule::LoadControlScheduleProfileList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_LoadControlScheduleProfileList_optimizermodule_2foptimizermodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsLoadControlScheduleProfileList_optimizermodule_2foptimizermodule_2eproto}, {
      &scc_info_LoadControlProfile_loadmodule_2floadmodule_2eproto.base,}};

static void InitDefaultsESSControlScheduleProfileList_optimizermodule_2foptimizermodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::optimizermodule::_ESSControlScheduleProfileList_default_instance_;
    new (ptr) ::optimizermodule::ESSControlScheduleProfileList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::optimizermodule::ESSControlScheduleProfileList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ESSControlScheduleProfileList_optimizermodule_2foptimizermodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsESSControlScheduleProfileList_optimizermodule_2foptimizermodule_2eproto}, {
      &scc_info_ESSControlProfile_essmodule_2fessmodule_2eproto.base,}};

static void InitDefaultsSwitchControlScheduleProfileList_optimizermodule_2foptimizermodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::optimizermodule::_SwitchControlScheduleProfileList_default_instance_;
    new (ptr) ::optimizermodule::SwitchControlScheduleProfileList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::optimizermodule::SwitchControlScheduleProfileList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SwitchControlScheduleProfileList_optimizermodule_2foptimizermodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSwitchControlScheduleProfileList_optimizermodule_2foptimizermodule_2eproto}, {
      &scc_info_SwitchControlProfile_switchmodule_2fswitchmodule_2eproto.base,}};

static void InitDefaultsGenerationControlScheduleProfileList_optimizermodule_2foptimizermodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::optimizermodule::_GenerationControlScheduleProfileList_default_instance_;
    new (ptr) ::optimizermodule::GenerationControlScheduleProfileList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::optimizermodule::GenerationControlScheduleProfileList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GenerationControlScheduleProfileList_optimizermodule_2foptimizermodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGenerationControlScheduleProfileList_optimizermodule_2foptimizermodule_2eproto}, {
      &scc_info_GenerationControlProfile_generationmodule_2fgenerationmodule_2eproto.base,}};

static void InitDefaultsPlannedOptimizerScheduleProfile_optimizermodule_2foptimizermodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::optimizermodule::_PlannedOptimizerScheduleProfile_default_instance_;
    new (ptr) ::optimizermodule::PlannedOptimizerScheduleProfile();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::optimizermodule::PlannedOptimizerScheduleProfile::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<9> scc_info_PlannedOptimizerScheduleProfile_optimizermodule_2foptimizermodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 9, InitDefaultsPlannedOptimizerScheduleProfile_optimizermodule_2foptimizermodule_2eproto}, {
      &scc_info_OptimizationMessageInfo_commonmodule_2fcommonmodule_2eproto.base,
      &scc_info_ApplicationSystem_commonmodule_2fcommonmodule_2eproto.base,
      &scc_info_ESSControlScheduleProfileList_optimizermodule_2foptimizermodule_2eproto.base,
      &scc_info_GenerationControlScheduleProfileList_optimizermodule_2foptimizermodule_2eproto.base,
      &scc_info_LoadControlScheduleProfileList_optimizermodule_2foptimizermodule_2eproto.base,
      &scc_info_PlannedInterconnectionScheduleProfileList_optimizermodule_2foptimizermodule_2eproto.base,
      &scc_info_RegulatorControlScheduleProfileList_optimizermodule_2foptimizermodule_2eproto.base,
      &scc_info_SolarControlScheduleProfileList_optimizermodule_2foptimizermodule_2eproto.base,
      &scc_info_SwitchControlScheduleProfileList_optimizermodule_2foptimizermodule_2eproto.base,}};

static void InitDefaultsRequestedInterconnectionScheduleProfileList_optimizermodule_2foptimizermodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::optimizermodule::_RequestedInterconnectionScheduleProfileList_default_instance_;
    new (ptr) ::optimizermodule::RequestedInterconnectionScheduleProfileList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::optimizermodule::RequestedInterconnectionScheduleProfileList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_RequestedInterconnectionScheduleProfileList_optimizermodule_2foptimizermodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRequestedInterconnectionScheduleProfileList_optimizermodule_2foptimizermodule_2eproto}, {
      &scc_info_RequestedInterconnectionScheduleProfile_interconnectionmodule_2finterconnectionmodule_2eproto.base,}};

static void InitDefaultsRequestedOptimizerScheduleProfile_optimizermodule_2foptimizermodule_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::optimizermodule::_RequestedOptimizerScheduleProfile_default_instance_;
    new (ptr) ::optimizermodule::RequestedOptimizerScheduleProfile();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::optimizermodule::RequestedOptimizerScheduleProfile::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<9> scc_info_RequestedOptimizerScheduleProfile_optimizermodule_2foptimizermodule_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 9, InitDefaultsRequestedOptimizerScheduleProfile_optimizermodule_2foptimizermodule_2eproto}, {
      &scc_info_OptimizationMessageInfo_commonmodule_2fcommonmodule_2eproto.base,
      &scc_info_ApplicationSystem_commonmodule_2fcommonmodule_2eproto.base,
      &scc_info_ESSControlScheduleProfileList_optimizermodule_2foptimizermodule_2eproto.base,
      &scc_info_GenerationControlScheduleProfileList_optimizermodule_2foptimizermodule_2eproto.base,
      &scc_info_LoadControlScheduleProfileList_optimizermodule_2foptimizermodule_2eproto.base,
      &scc_info_RegulatorControlScheduleProfileList_optimizermodule_2foptimizermodule_2eproto.base,
      &scc_info_RequestedInterconnectionScheduleProfileList_optimizermodule_2foptimizermodule_2eproto.base,
      &scc_info_SolarControlScheduleProfileList_optimizermodule_2foptimizermodule_2eproto.base,
      &scc_info_SwitchControlScheduleProfileList_optimizermodule_2foptimizermodule_2eproto.base,}};

void InitDefaults_optimizermodule_2foptimizermodule_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_RegulatorControlScheduleProfileList_optimizermodule_2foptimizermodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SolarControlScheduleProfileList_optimizermodule_2foptimizermodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PlannedInterconnectionScheduleProfileList_optimizermodule_2foptimizermodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LoadControlScheduleProfileList_optimizermodule_2foptimizermodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ESSControlScheduleProfileList_optimizermodule_2foptimizermodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SwitchControlScheduleProfileList_optimizermodule_2foptimizermodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GenerationControlScheduleProfileList_optimizermodule_2foptimizermodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PlannedOptimizerScheduleProfile_optimizermodule_2foptimizermodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RequestedInterconnectionScheduleProfileList_optimizermodule_2foptimizermodule_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RequestedOptimizerScheduleProfile_optimizermodule_2foptimizermodule_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_optimizermodule_2foptimizermodule_2eproto[10];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_optimizermodule_2foptimizermodule_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_optimizermodule_2foptimizermodule_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_optimizermodule_2foptimizermodule_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::optimizermodule::RegulatorControlScheduleProfileList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::optimizermodule::RegulatorControlScheduleProfileList, regulatorcontrolprofile_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::optimizermodule::SolarControlScheduleProfileList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::optimizermodule::SolarControlScheduleProfileList, solarcontrolprofile_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::optimizermodule::PlannedInterconnectionScheduleProfileList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::optimizermodule::PlannedInterconnectionScheduleProfileList, plannedinterconnectionscheduleprofile_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::optimizermodule::LoadControlScheduleProfileList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::optimizermodule::LoadControlScheduleProfileList, loadcontrolprofile_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::optimizermodule::ESSControlScheduleProfileList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::optimizermodule::ESSControlScheduleProfileList, esscontrolprofile_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::optimizermodule::SwitchControlScheduleProfileList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::optimizermodule::SwitchControlScheduleProfileList, switchcontrolprofile_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::optimizermodule::GenerationControlScheduleProfileList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::optimizermodule::GenerationControlScheduleProfileList, generationcontrolprofile_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::optimizermodule::PlannedOptimizerScheduleProfile, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::optimizermodule::PlannedOptimizerScheduleProfile, optimizationmessageinfo_),
  PROTOBUF_FIELD_OFFSET(::optimizermodule::PlannedOptimizerScheduleProfile, applicationsystem_),
  PROTOBUF_FIELD_OFFSET(::optimizermodule::PlannedOptimizerScheduleProfile, esscontrolscheduleprofilelist_),
  PROTOBUF_FIELD_OFFSET(::optimizermodule::PlannedOptimizerScheduleProfile, generationcontrolscheduleprofilelist_),
  PROTOBUF_FIELD_OFFSET(::optimizermodule::PlannedOptimizerScheduleProfile, loadcontrolscheduleprofilelist_),
  PROTOBUF_FIELD_OFFSET(::optimizermodule::PlannedOptimizerScheduleProfile, plannedinterconnectionscheduleprofilelist_),
  PROTOBUF_FIELD_OFFSET(::optimizermodule::PlannedOptimizerScheduleProfile, regulatorcontrolscheduleprofilelist_),
  PROTOBUF_FIELD_OFFSET(::optimizermodule::PlannedOptimizerScheduleProfile, solarcontrolscheduleprofilelist_),
  PROTOBUF_FIELD_OFFSET(::optimizermodule::PlannedOptimizerScheduleProfile, switchcontrolscheduleprofilelist_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::optimizermodule::RequestedInterconnectionScheduleProfileList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::optimizermodule::RequestedInterconnectionScheduleProfileList, requestedinterconnectionscheduleprofile_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::optimizermodule::RequestedOptimizerScheduleProfile, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::optimizermodule::RequestedOptimizerScheduleProfile, optimizationmessageinfo_),
  PROTOBUF_FIELD_OFFSET(::optimizermodule::RequestedOptimizerScheduleProfile, applicationsystem_),
  PROTOBUF_FIELD_OFFSET(::optimizermodule::RequestedOptimizerScheduleProfile, esscontrolscheduleprofilelist_),
  PROTOBUF_FIELD_OFFSET(::optimizermodule::RequestedOptimizerScheduleProfile, generationcontrolscheduleprofilelist_),
  PROTOBUF_FIELD_OFFSET(::optimizermodule::RequestedOptimizerScheduleProfile, loadcontrolscheduleprofilelist_),
  PROTOBUF_FIELD_OFFSET(::optimizermodule::RequestedOptimizerScheduleProfile, regulatorcontrolscheduleprofilelist_),
  PROTOBUF_FIELD_OFFSET(::optimizermodule::RequestedOptimizerScheduleProfile, requestedinterconnectionscheduleprofilelist_),
  PROTOBUF_FIELD_OFFSET(::optimizermodule::RequestedOptimizerScheduleProfile, solarcontrolscheduleprofilelist_),
  PROTOBUF_FIELD_OFFSET(::optimizermodule::RequestedOptimizerScheduleProfile, switchcontrolscheduleprofilelist_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::optimizermodule::RegulatorControlScheduleProfileList)},
  { 6, -1, sizeof(::optimizermodule::SolarControlScheduleProfileList)},
  { 12, -1, sizeof(::optimizermodule::PlannedInterconnectionScheduleProfileList)},
  { 18, -1, sizeof(::optimizermodule::LoadControlScheduleProfileList)},
  { 24, -1, sizeof(::optimizermodule::ESSControlScheduleProfileList)},
  { 30, -1, sizeof(::optimizermodule::SwitchControlScheduleProfileList)},
  { 36, -1, sizeof(::optimizermodule::GenerationControlScheduleProfileList)},
  { 42, -1, sizeof(::optimizermodule::PlannedOptimizerScheduleProfile)},
  { 56, -1, sizeof(::optimizermodule::RequestedInterconnectionScheduleProfileList)},
  { 62, -1, sizeof(::optimizermodule::RequestedOptimizerScheduleProfile)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::optimizermodule::_RegulatorControlScheduleProfileList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::optimizermodule::_SolarControlScheduleProfileList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::optimizermodule::_PlannedInterconnectionScheduleProfileList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::optimizermodule::_LoadControlScheduleProfileList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::optimizermodule::_ESSControlScheduleProfileList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::optimizermodule::_SwitchControlScheduleProfileList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::optimizermodule::_GenerationControlScheduleProfileList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::optimizermodule::_PlannedOptimizerScheduleProfile_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::optimizermodule::_RequestedInterconnectionScheduleProfileList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::optimizermodule::_RequestedOptimizerScheduleProfile_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_optimizermodule_2foptimizermodule_2eproto = {
  {}, AddDescriptors_optimizermodule_2foptimizermodule_2eproto, "optimizermodule/optimizermodule.proto", schemas,
  file_default_instances, TableStruct_optimizermodule_2foptimizermodule_2eproto::offsets,
  file_level_metadata_optimizermodule_2foptimizermodule_2eproto, 10, file_level_enum_descriptors_optimizermodule_2foptimizermodule_2eproto, file_level_service_descriptors_optimizermodule_2foptimizermodule_2eproto,
};

const char descriptor_table_protodef_optimizermodule_2foptimizermodule_2eproto[] =
  "\n%optimizermodule/optimizermodule.proto\022"
  "\017optimizermodule\032\tuml.proto\032%regulatormo"
  "dule/regulatormodule.proto\032\035solarmodule/"
  "solarmodule.proto\0321interconnectionmodule"
  "/interconnectionmodule.proto\032\033loadmodule"
  "/loadmodule.proto\032\031essmodule/essmodule.p"
  "roto\032\037switchmodule/switchmodule.proto\032\'g"
  "enerationmodule/generationmodule.proto\032\037"
  "commonmodule/commonmodule.proto\"z\n#Regul"
  "atorControlScheduleProfileList\022S\n\027regula"
  "torControlProfile\030\001 \003(\0132(.regulatormodul"
  "e.RegulatorControlProfileB\010\210\265\030\001\220\265\030\001\"j\n\037S"
  "olarControlScheduleProfileList\022G\n\023solarC"
  "ontrolProfile\030\001 \003(\0132 .solarmodule.SolarC"
  "ontrolProfileB\010\210\265\030\001\220\265\030\001\"\242\001\n)PlannedInter"
  "connectionScheduleProfileList\022u\n%planned"
  "InterconnectionScheduleProfile\030\001 \003(\0132<.i"
  "nterconnectionmodule.PlannedInterconnect"
  "ionScheduleProfileB\010\210\265\030\001\220\265\030\001\"f\n\036LoadCont"
  "rolScheduleProfileList\022D\n\022loadControlPro"
  "file\030\001 \003(\0132\036.loadmodule.LoadControlProfi"
  "leB\010\210\265\030\001\220\265\030\001\"b\n\035ESSControlScheduleProfil"
  "eList\022A\n\021essControlProfile\030\001 \003(\0132\034.essmo"
  "dule.ESSControlProfileB\010\210\265\030\001\220\265\030\001\"n\n Swit"
  "chControlScheduleProfileList\022J\n\024switchCo"
  "ntrolProfile\030\001 \003(\0132\".switchmodule.Switch"
  "ControlProfileB\010\210\265\030\001\220\265\030\001\"~\n$GenerationCo"
  "ntrolScheduleProfileList\022V\n\030generationCo"
  "ntrolProfile\030\001 \003(\0132*.generationmodule.Ge"
  "nerationControlProfileB\010\210\265\030\001\220\265\030\001\"\332\006\n\037Pla"
  "nnedOptimizerScheduleProfile\022L\n\027optimiza"
  "tionMessageInfo\030\001 \001(\0132%.commonmodule.Opt"
  "imizationMessageInfoB\004\200\265\030\001\022D\n\021applicatio"
  "nSystem\030\002 \001(\0132\037.commonmodule.Application"
  "SystemB\010\210\265\030\001\220\265\030\001\022U\n\035essControlSchedulePr"
  "ofileList\030\003 \001(\0132..optimizermodule.ESSCon"
  "trolScheduleProfileList\022c\n$generationCon"
  "trolScheduleProfileList\030\004 \001(\01325.optimize"
  "rmodule.GenerationControlScheduleProfile"
  "List\022W\n\036loadControlScheduleProfileList\030\005"
  " \001(\0132/.optimizermodule.LoadControlSchedu"
  "leProfileList\022m\n)plannedInterconnectionS"
  "cheduleProfileList\030\006 \001(\0132:.optimizermodu"
  "le.PlannedInterconnectionScheduleProfile"
  "List\022a\n#regulatorControlScheduleProfileL"
  "ist\030\007 \001(\01324.optimizermodule.RegulatorCon"
  "trolScheduleProfileList\022Y\n\037solarControlS"
  "cheduleProfileList\030\010 \001(\01320.optimizermodu"
  "le.SolarControlScheduleProfileList\022[\n sw"
  "itchControlScheduleProfileList\030\t \001(\01321.o"
  "ptimizermodule.SwitchControlScheduleProf"
  "ileList:\004\300\363\030\001\"\250\001\n+RequestedInterconnecti"
  "onScheduleProfileList\022y\n\'requestedInterc"
  "onnectionScheduleProfile\030\001 \003(\0132>.interco"
  "nnectionmodule.RequestedInterconnectionS"
  "cheduleProfileB\010\210\265\030\001\220\265\030\001\"\340\006\n!RequestedOp"
  "timizerScheduleProfile\022L\n\027optimizationMe"
  "ssageInfo\030\001 \001(\0132%.commonmodule.Optimizat"
  "ionMessageInfoB\004\200\265\030\001\022D\n\021applicationSyste"
  "m\030\002 \001(\0132\037.commonmodule.ApplicationSystem"
  "B\010\210\265\030\001\220\265\030\001\022U\n\035essControlScheduleProfileL"
  "ist\030\003 \001(\0132..optimizermodule.ESSControlSc"
  "heduleProfileList\022c\n$generationControlSc"
  "heduleProfileList\030\004 \001(\01325.optimizermodul"
  "e.GenerationControlScheduleProfileList\022W"
  "\n\036loadControlScheduleProfileList\030\005 \001(\0132/"
  ".optimizermodule.LoadControlScheduleProf"
  "ileList\022a\n#regulatorControlScheduleProfi"
  "leList\030\006 \001(\01324.optimizermodule.Regulator"
  "ControlScheduleProfileList\022q\n+requestedI"
  "nterconnectionScheduleProfileList\030\007 \001(\0132"
  "<.optimizermodule.RequestedInterconnecti"
  "onScheduleProfileList\022Y\n\037solarControlSch"
  "eduleProfileList\030\010 \001(\01320.optimizermodule"
  ".SolarControlScheduleProfileList\022[\n swit"
  "chControlScheduleProfileList\030\t \001(\01321.opt"
  "imizermodule.SwitchControlScheduleProfil"
  "eList:\004\300\363\030\001B\212\001\n\027openfmb.optimizermoduleP"
  "\001ZSgitlab.com/openfmb/psm/ops/protobuf/g"
  "o-openfmb-ops-protobuf/openfmb/optimizer"
  "module\252\002\027openfmb.optimizermoduleb\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_optimizermodule_2foptimizermodule_2eproto = {
  false, InitDefaults_optimizermodule_2foptimizermodule_2eproto, 
  descriptor_table_protodef_optimizermodule_2foptimizermodule_2eproto,
  "optimizermodule/optimizermodule.proto", &assign_descriptors_table_optimizermodule_2foptimizermodule_2eproto, 3240,
};

void AddDescriptors_optimizermodule_2foptimizermodule_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[9] =
  {
    ::AddDescriptors_uml_2eproto,
    ::AddDescriptors_regulatormodule_2fregulatormodule_2eproto,
    ::AddDescriptors_solarmodule_2fsolarmodule_2eproto,
    ::AddDescriptors_interconnectionmodule_2finterconnectionmodule_2eproto,
    ::AddDescriptors_loadmodule_2floadmodule_2eproto,
    ::AddDescriptors_essmodule_2fessmodule_2eproto,
    ::AddDescriptors_switchmodule_2fswitchmodule_2eproto,
    ::AddDescriptors_generationmodule_2fgenerationmodule_2eproto,
    ::AddDescriptors_commonmodule_2fcommonmodule_2eproto,
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_optimizermodule_2foptimizermodule_2eproto, deps, 9);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_optimizermodule_2foptimizermodule_2eproto = []() { AddDescriptors_optimizermodule_2foptimizermodule_2eproto(); return true; }();
namespace optimizermodule {

// ===================================================================

void RegulatorControlScheduleProfileList::InitAsDefaultInstance() {
}
class RegulatorControlScheduleProfileList::HasBitSetters {
 public:
};

void RegulatorControlScheduleProfileList::clear_regulatorcontrolprofile() {
  regulatorcontrolprofile_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RegulatorControlScheduleProfileList::kRegulatorControlProfileFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RegulatorControlScheduleProfileList::RegulatorControlScheduleProfileList()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:optimizermodule.RegulatorControlScheduleProfileList)
}
RegulatorControlScheduleProfileList::RegulatorControlScheduleProfileList(const RegulatorControlScheduleProfileList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      regulatorcontrolprofile_(from.regulatorcontrolprofile_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:optimizermodule.RegulatorControlScheduleProfileList)
}

void RegulatorControlScheduleProfileList::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_RegulatorControlScheduleProfileList_optimizermodule_2foptimizermodule_2eproto.base);
}

RegulatorControlScheduleProfileList::~RegulatorControlScheduleProfileList() {
  // @@protoc_insertion_point(destructor:optimizermodule.RegulatorControlScheduleProfileList)
  SharedDtor();
}

void RegulatorControlScheduleProfileList::SharedDtor() {
}

void RegulatorControlScheduleProfileList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RegulatorControlScheduleProfileList& RegulatorControlScheduleProfileList::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_RegulatorControlScheduleProfileList_optimizermodule_2foptimizermodule_2eproto.base);
  return *internal_default_instance();
}


void RegulatorControlScheduleProfileList::Clear() {
// @@protoc_insertion_point(message_clear_start:optimizermodule.RegulatorControlScheduleProfileList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  regulatorcontrolprofile_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* RegulatorControlScheduleProfileList::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<RegulatorControlScheduleProfileList*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .regulatormodule.RegulatorControlProfile regulatorControlProfile = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::regulatormodule::RegulatorControlProfile::_InternalParse;
          object = msg->add_regulatorcontrolprofile();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool RegulatorControlScheduleProfileList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:optimizermodule.RegulatorControlScheduleProfileList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .regulatormodule.RegulatorControlProfile regulatorControlProfile = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_regulatorcontrolprofile()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:optimizermodule.RegulatorControlScheduleProfileList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:optimizermodule.RegulatorControlScheduleProfileList)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void RegulatorControlScheduleProfileList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:optimizermodule.RegulatorControlScheduleProfileList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .regulatormodule.RegulatorControlProfile regulatorControlProfile = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->regulatorcontrolprofile_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->regulatorcontrolprofile(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:optimizermodule.RegulatorControlScheduleProfileList)
}

::google::protobuf::uint8* RegulatorControlScheduleProfileList::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:optimizermodule.RegulatorControlScheduleProfileList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .regulatormodule.RegulatorControlProfile regulatorControlProfile = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->regulatorcontrolprofile_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->regulatorcontrolprofile(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:optimizermodule.RegulatorControlScheduleProfileList)
  return target;
}

size_t RegulatorControlScheduleProfileList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:optimizermodule.RegulatorControlScheduleProfileList)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .regulatormodule.RegulatorControlProfile regulatorControlProfile = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  {
    unsigned int count = static_cast<unsigned int>(this->regulatorcontrolprofile_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->regulatorcontrolprofile(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RegulatorControlScheduleProfileList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:optimizermodule.RegulatorControlScheduleProfileList)
  GOOGLE_DCHECK_NE(&from, this);
  const RegulatorControlScheduleProfileList* source =
      ::google::protobuf::DynamicCastToGenerated<RegulatorControlScheduleProfileList>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:optimizermodule.RegulatorControlScheduleProfileList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:optimizermodule.RegulatorControlScheduleProfileList)
    MergeFrom(*source);
  }
}

void RegulatorControlScheduleProfileList::MergeFrom(const RegulatorControlScheduleProfileList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:optimizermodule.RegulatorControlScheduleProfileList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  regulatorcontrolprofile_.MergeFrom(from.regulatorcontrolprofile_);
}

void RegulatorControlScheduleProfileList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:optimizermodule.RegulatorControlScheduleProfileList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegulatorControlScheduleProfileList::CopyFrom(const RegulatorControlScheduleProfileList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:optimizermodule.RegulatorControlScheduleProfileList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegulatorControlScheduleProfileList::IsInitialized() const {
  return true;
}

void RegulatorControlScheduleProfileList::Swap(RegulatorControlScheduleProfileList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RegulatorControlScheduleProfileList::InternalSwap(RegulatorControlScheduleProfileList* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&regulatorcontrolprofile_)->InternalSwap(CastToBase(&other->regulatorcontrolprofile_));
}

::google::protobuf::Metadata RegulatorControlScheduleProfileList::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_optimizermodule_2foptimizermodule_2eproto);
  return ::file_level_metadata_optimizermodule_2foptimizermodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void SolarControlScheduleProfileList::InitAsDefaultInstance() {
}
class SolarControlScheduleProfileList::HasBitSetters {
 public:
};

void SolarControlScheduleProfileList::clear_solarcontrolprofile() {
  solarcontrolprofile_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SolarControlScheduleProfileList::kSolarControlProfileFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SolarControlScheduleProfileList::SolarControlScheduleProfileList()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:optimizermodule.SolarControlScheduleProfileList)
}
SolarControlScheduleProfileList::SolarControlScheduleProfileList(const SolarControlScheduleProfileList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      solarcontrolprofile_(from.solarcontrolprofile_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:optimizermodule.SolarControlScheduleProfileList)
}

void SolarControlScheduleProfileList::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_SolarControlScheduleProfileList_optimizermodule_2foptimizermodule_2eproto.base);
}

SolarControlScheduleProfileList::~SolarControlScheduleProfileList() {
  // @@protoc_insertion_point(destructor:optimizermodule.SolarControlScheduleProfileList)
  SharedDtor();
}

void SolarControlScheduleProfileList::SharedDtor() {
}

void SolarControlScheduleProfileList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SolarControlScheduleProfileList& SolarControlScheduleProfileList::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SolarControlScheduleProfileList_optimizermodule_2foptimizermodule_2eproto.base);
  return *internal_default_instance();
}


void SolarControlScheduleProfileList::Clear() {
// @@protoc_insertion_point(message_clear_start:optimizermodule.SolarControlScheduleProfileList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  solarcontrolprofile_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SolarControlScheduleProfileList::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SolarControlScheduleProfileList*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .solarmodule.SolarControlProfile solarControlProfile = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::solarmodule::SolarControlProfile::_InternalParse;
          object = msg->add_solarcontrolprofile();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SolarControlScheduleProfileList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:optimizermodule.SolarControlScheduleProfileList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .solarmodule.SolarControlProfile solarControlProfile = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_solarcontrolprofile()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:optimizermodule.SolarControlScheduleProfileList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:optimizermodule.SolarControlScheduleProfileList)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SolarControlScheduleProfileList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:optimizermodule.SolarControlScheduleProfileList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .solarmodule.SolarControlProfile solarControlProfile = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->solarcontrolprofile_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->solarcontrolprofile(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:optimizermodule.SolarControlScheduleProfileList)
}

::google::protobuf::uint8* SolarControlScheduleProfileList::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:optimizermodule.SolarControlScheduleProfileList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .solarmodule.SolarControlProfile solarControlProfile = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->solarcontrolprofile_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->solarcontrolprofile(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:optimizermodule.SolarControlScheduleProfileList)
  return target;
}

size_t SolarControlScheduleProfileList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:optimizermodule.SolarControlScheduleProfileList)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .solarmodule.SolarControlProfile solarControlProfile = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  {
    unsigned int count = static_cast<unsigned int>(this->solarcontrolprofile_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->solarcontrolprofile(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SolarControlScheduleProfileList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:optimizermodule.SolarControlScheduleProfileList)
  GOOGLE_DCHECK_NE(&from, this);
  const SolarControlScheduleProfileList* source =
      ::google::protobuf::DynamicCastToGenerated<SolarControlScheduleProfileList>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:optimizermodule.SolarControlScheduleProfileList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:optimizermodule.SolarControlScheduleProfileList)
    MergeFrom(*source);
  }
}

void SolarControlScheduleProfileList::MergeFrom(const SolarControlScheduleProfileList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:optimizermodule.SolarControlScheduleProfileList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  solarcontrolprofile_.MergeFrom(from.solarcontrolprofile_);
}

void SolarControlScheduleProfileList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:optimizermodule.SolarControlScheduleProfileList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SolarControlScheduleProfileList::CopyFrom(const SolarControlScheduleProfileList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:optimizermodule.SolarControlScheduleProfileList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SolarControlScheduleProfileList::IsInitialized() const {
  return true;
}

void SolarControlScheduleProfileList::Swap(SolarControlScheduleProfileList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SolarControlScheduleProfileList::InternalSwap(SolarControlScheduleProfileList* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&solarcontrolprofile_)->InternalSwap(CastToBase(&other->solarcontrolprofile_));
}

::google::protobuf::Metadata SolarControlScheduleProfileList::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_optimizermodule_2foptimizermodule_2eproto);
  return ::file_level_metadata_optimizermodule_2foptimizermodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void PlannedInterconnectionScheduleProfileList::InitAsDefaultInstance() {
}
class PlannedInterconnectionScheduleProfileList::HasBitSetters {
 public:
};

void PlannedInterconnectionScheduleProfileList::clear_plannedinterconnectionscheduleprofile() {
  plannedinterconnectionscheduleprofile_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlannedInterconnectionScheduleProfileList::kPlannedInterconnectionScheduleProfileFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlannedInterconnectionScheduleProfileList::PlannedInterconnectionScheduleProfileList()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:optimizermodule.PlannedInterconnectionScheduleProfileList)
}
PlannedInterconnectionScheduleProfileList::PlannedInterconnectionScheduleProfileList(const PlannedInterconnectionScheduleProfileList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      plannedinterconnectionscheduleprofile_(from.plannedinterconnectionscheduleprofile_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:optimizermodule.PlannedInterconnectionScheduleProfileList)
}

void PlannedInterconnectionScheduleProfileList::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_PlannedInterconnectionScheduleProfileList_optimizermodule_2foptimizermodule_2eproto.base);
}

PlannedInterconnectionScheduleProfileList::~PlannedInterconnectionScheduleProfileList() {
  // @@protoc_insertion_point(destructor:optimizermodule.PlannedInterconnectionScheduleProfileList)
  SharedDtor();
}

void PlannedInterconnectionScheduleProfileList::SharedDtor() {
}

void PlannedInterconnectionScheduleProfileList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PlannedInterconnectionScheduleProfileList& PlannedInterconnectionScheduleProfileList::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_PlannedInterconnectionScheduleProfileList_optimizermodule_2foptimizermodule_2eproto.base);
  return *internal_default_instance();
}


void PlannedInterconnectionScheduleProfileList::Clear() {
// @@protoc_insertion_point(message_clear_start:optimizermodule.PlannedInterconnectionScheduleProfileList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  plannedinterconnectionscheduleprofile_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* PlannedInterconnectionScheduleProfileList::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<PlannedInterconnectionScheduleProfileList*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .interconnectionmodule.PlannedInterconnectionScheduleProfile plannedInterconnectionScheduleProfile = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::interconnectionmodule::PlannedInterconnectionScheduleProfile::_InternalParse;
          object = msg->add_plannedinterconnectionscheduleprofile();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool PlannedInterconnectionScheduleProfileList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:optimizermodule.PlannedInterconnectionScheduleProfileList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .interconnectionmodule.PlannedInterconnectionScheduleProfile plannedInterconnectionScheduleProfile = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_plannedinterconnectionscheduleprofile()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:optimizermodule.PlannedInterconnectionScheduleProfileList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:optimizermodule.PlannedInterconnectionScheduleProfileList)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void PlannedInterconnectionScheduleProfileList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:optimizermodule.PlannedInterconnectionScheduleProfileList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .interconnectionmodule.PlannedInterconnectionScheduleProfile plannedInterconnectionScheduleProfile = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->plannedinterconnectionscheduleprofile_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->plannedinterconnectionscheduleprofile(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:optimizermodule.PlannedInterconnectionScheduleProfileList)
}

::google::protobuf::uint8* PlannedInterconnectionScheduleProfileList::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:optimizermodule.PlannedInterconnectionScheduleProfileList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .interconnectionmodule.PlannedInterconnectionScheduleProfile plannedInterconnectionScheduleProfile = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->plannedinterconnectionscheduleprofile_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->plannedinterconnectionscheduleprofile(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:optimizermodule.PlannedInterconnectionScheduleProfileList)
  return target;
}

size_t PlannedInterconnectionScheduleProfileList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:optimizermodule.PlannedInterconnectionScheduleProfileList)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .interconnectionmodule.PlannedInterconnectionScheduleProfile plannedInterconnectionScheduleProfile = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  {
    unsigned int count = static_cast<unsigned int>(this->plannedinterconnectionscheduleprofile_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->plannedinterconnectionscheduleprofile(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PlannedInterconnectionScheduleProfileList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:optimizermodule.PlannedInterconnectionScheduleProfileList)
  GOOGLE_DCHECK_NE(&from, this);
  const PlannedInterconnectionScheduleProfileList* source =
      ::google::protobuf::DynamicCastToGenerated<PlannedInterconnectionScheduleProfileList>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:optimizermodule.PlannedInterconnectionScheduleProfileList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:optimizermodule.PlannedInterconnectionScheduleProfileList)
    MergeFrom(*source);
  }
}

void PlannedInterconnectionScheduleProfileList::MergeFrom(const PlannedInterconnectionScheduleProfileList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:optimizermodule.PlannedInterconnectionScheduleProfileList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  plannedinterconnectionscheduleprofile_.MergeFrom(from.plannedinterconnectionscheduleprofile_);
}

void PlannedInterconnectionScheduleProfileList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:optimizermodule.PlannedInterconnectionScheduleProfileList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlannedInterconnectionScheduleProfileList::CopyFrom(const PlannedInterconnectionScheduleProfileList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:optimizermodule.PlannedInterconnectionScheduleProfileList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlannedInterconnectionScheduleProfileList::IsInitialized() const {
  return true;
}

void PlannedInterconnectionScheduleProfileList::Swap(PlannedInterconnectionScheduleProfileList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlannedInterconnectionScheduleProfileList::InternalSwap(PlannedInterconnectionScheduleProfileList* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&plannedinterconnectionscheduleprofile_)->InternalSwap(CastToBase(&other->plannedinterconnectionscheduleprofile_));
}

::google::protobuf::Metadata PlannedInterconnectionScheduleProfileList::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_optimizermodule_2foptimizermodule_2eproto);
  return ::file_level_metadata_optimizermodule_2foptimizermodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void LoadControlScheduleProfileList::InitAsDefaultInstance() {
}
class LoadControlScheduleProfileList::HasBitSetters {
 public:
};

void LoadControlScheduleProfileList::clear_loadcontrolprofile() {
  loadcontrolprofile_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoadControlScheduleProfileList::kLoadControlProfileFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoadControlScheduleProfileList::LoadControlScheduleProfileList()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:optimizermodule.LoadControlScheduleProfileList)
}
LoadControlScheduleProfileList::LoadControlScheduleProfileList(const LoadControlScheduleProfileList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      loadcontrolprofile_(from.loadcontrolprofile_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:optimizermodule.LoadControlScheduleProfileList)
}

void LoadControlScheduleProfileList::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_LoadControlScheduleProfileList_optimizermodule_2foptimizermodule_2eproto.base);
}

LoadControlScheduleProfileList::~LoadControlScheduleProfileList() {
  // @@protoc_insertion_point(destructor:optimizermodule.LoadControlScheduleProfileList)
  SharedDtor();
}

void LoadControlScheduleProfileList::SharedDtor() {
}

void LoadControlScheduleProfileList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LoadControlScheduleProfileList& LoadControlScheduleProfileList::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_LoadControlScheduleProfileList_optimizermodule_2foptimizermodule_2eproto.base);
  return *internal_default_instance();
}


void LoadControlScheduleProfileList::Clear() {
// @@protoc_insertion_point(message_clear_start:optimizermodule.LoadControlScheduleProfileList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  loadcontrolprofile_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* LoadControlScheduleProfileList::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<LoadControlScheduleProfileList*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .loadmodule.LoadControlProfile loadControlProfile = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::loadmodule::LoadControlProfile::_InternalParse;
          object = msg->add_loadcontrolprofile();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool LoadControlScheduleProfileList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:optimizermodule.LoadControlScheduleProfileList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .loadmodule.LoadControlProfile loadControlProfile = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_loadcontrolprofile()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:optimizermodule.LoadControlScheduleProfileList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:optimizermodule.LoadControlScheduleProfileList)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void LoadControlScheduleProfileList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:optimizermodule.LoadControlScheduleProfileList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .loadmodule.LoadControlProfile loadControlProfile = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->loadcontrolprofile_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->loadcontrolprofile(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:optimizermodule.LoadControlScheduleProfileList)
}

::google::protobuf::uint8* LoadControlScheduleProfileList::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:optimizermodule.LoadControlScheduleProfileList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .loadmodule.LoadControlProfile loadControlProfile = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->loadcontrolprofile_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->loadcontrolprofile(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:optimizermodule.LoadControlScheduleProfileList)
  return target;
}

size_t LoadControlScheduleProfileList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:optimizermodule.LoadControlScheduleProfileList)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .loadmodule.LoadControlProfile loadControlProfile = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  {
    unsigned int count = static_cast<unsigned int>(this->loadcontrolprofile_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->loadcontrolprofile(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LoadControlScheduleProfileList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:optimizermodule.LoadControlScheduleProfileList)
  GOOGLE_DCHECK_NE(&from, this);
  const LoadControlScheduleProfileList* source =
      ::google::protobuf::DynamicCastToGenerated<LoadControlScheduleProfileList>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:optimizermodule.LoadControlScheduleProfileList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:optimizermodule.LoadControlScheduleProfileList)
    MergeFrom(*source);
  }
}

void LoadControlScheduleProfileList::MergeFrom(const LoadControlScheduleProfileList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:optimizermodule.LoadControlScheduleProfileList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  loadcontrolprofile_.MergeFrom(from.loadcontrolprofile_);
}

void LoadControlScheduleProfileList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:optimizermodule.LoadControlScheduleProfileList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoadControlScheduleProfileList::CopyFrom(const LoadControlScheduleProfileList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:optimizermodule.LoadControlScheduleProfileList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoadControlScheduleProfileList::IsInitialized() const {
  return true;
}

void LoadControlScheduleProfileList::Swap(LoadControlScheduleProfileList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoadControlScheduleProfileList::InternalSwap(LoadControlScheduleProfileList* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&loadcontrolprofile_)->InternalSwap(CastToBase(&other->loadcontrolprofile_));
}

::google::protobuf::Metadata LoadControlScheduleProfileList::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_optimizermodule_2foptimizermodule_2eproto);
  return ::file_level_metadata_optimizermodule_2foptimizermodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ESSControlScheduleProfileList::InitAsDefaultInstance() {
}
class ESSControlScheduleProfileList::HasBitSetters {
 public:
};

void ESSControlScheduleProfileList::clear_esscontrolprofile() {
  esscontrolprofile_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ESSControlScheduleProfileList::kEssControlProfileFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ESSControlScheduleProfileList::ESSControlScheduleProfileList()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:optimizermodule.ESSControlScheduleProfileList)
}
ESSControlScheduleProfileList::ESSControlScheduleProfileList(const ESSControlScheduleProfileList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      esscontrolprofile_(from.esscontrolprofile_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:optimizermodule.ESSControlScheduleProfileList)
}

void ESSControlScheduleProfileList::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ESSControlScheduleProfileList_optimizermodule_2foptimizermodule_2eproto.base);
}

ESSControlScheduleProfileList::~ESSControlScheduleProfileList() {
  // @@protoc_insertion_point(destructor:optimizermodule.ESSControlScheduleProfileList)
  SharedDtor();
}

void ESSControlScheduleProfileList::SharedDtor() {
}

void ESSControlScheduleProfileList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ESSControlScheduleProfileList& ESSControlScheduleProfileList::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ESSControlScheduleProfileList_optimizermodule_2foptimizermodule_2eproto.base);
  return *internal_default_instance();
}


void ESSControlScheduleProfileList::Clear() {
// @@protoc_insertion_point(message_clear_start:optimizermodule.ESSControlScheduleProfileList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  esscontrolprofile_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ESSControlScheduleProfileList::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ESSControlScheduleProfileList*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .essmodule.ESSControlProfile essControlProfile = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::essmodule::ESSControlProfile::_InternalParse;
          object = msg->add_esscontrolprofile();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ESSControlScheduleProfileList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:optimizermodule.ESSControlScheduleProfileList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .essmodule.ESSControlProfile essControlProfile = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_esscontrolprofile()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:optimizermodule.ESSControlScheduleProfileList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:optimizermodule.ESSControlScheduleProfileList)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ESSControlScheduleProfileList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:optimizermodule.ESSControlScheduleProfileList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .essmodule.ESSControlProfile essControlProfile = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->esscontrolprofile_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->esscontrolprofile(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:optimizermodule.ESSControlScheduleProfileList)
}

::google::protobuf::uint8* ESSControlScheduleProfileList::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:optimizermodule.ESSControlScheduleProfileList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .essmodule.ESSControlProfile essControlProfile = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->esscontrolprofile_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->esscontrolprofile(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:optimizermodule.ESSControlScheduleProfileList)
  return target;
}

size_t ESSControlScheduleProfileList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:optimizermodule.ESSControlScheduleProfileList)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .essmodule.ESSControlProfile essControlProfile = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  {
    unsigned int count = static_cast<unsigned int>(this->esscontrolprofile_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->esscontrolprofile(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ESSControlScheduleProfileList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:optimizermodule.ESSControlScheduleProfileList)
  GOOGLE_DCHECK_NE(&from, this);
  const ESSControlScheduleProfileList* source =
      ::google::protobuf::DynamicCastToGenerated<ESSControlScheduleProfileList>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:optimizermodule.ESSControlScheduleProfileList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:optimizermodule.ESSControlScheduleProfileList)
    MergeFrom(*source);
  }
}

void ESSControlScheduleProfileList::MergeFrom(const ESSControlScheduleProfileList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:optimizermodule.ESSControlScheduleProfileList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  esscontrolprofile_.MergeFrom(from.esscontrolprofile_);
}

void ESSControlScheduleProfileList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:optimizermodule.ESSControlScheduleProfileList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ESSControlScheduleProfileList::CopyFrom(const ESSControlScheduleProfileList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:optimizermodule.ESSControlScheduleProfileList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ESSControlScheduleProfileList::IsInitialized() const {
  return true;
}

void ESSControlScheduleProfileList::Swap(ESSControlScheduleProfileList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ESSControlScheduleProfileList::InternalSwap(ESSControlScheduleProfileList* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&esscontrolprofile_)->InternalSwap(CastToBase(&other->esscontrolprofile_));
}

::google::protobuf::Metadata ESSControlScheduleProfileList::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_optimizermodule_2foptimizermodule_2eproto);
  return ::file_level_metadata_optimizermodule_2foptimizermodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void SwitchControlScheduleProfileList::InitAsDefaultInstance() {
}
class SwitchControlScheduleProfileList::HasBitSetters {
 public:
};

void SwitchControlScheduleProfileList::clear_switchcontrolprofile() {
  switchcontrolprofile_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SwitchControlScheduleProfileList::kSwitchControlProfileFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SwitchControlScheduleProfileList::SwitchControlScheduleProfileList()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:optimizermodule.SwitchControlScheduleProfileList)
}
SwitchControlScheduleProfileList::SwitchControlScheduleProfileList(const SwitchControlScheduleProfileList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      switchcontrolprofile_(from.switchcontrolprofile_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:optimizermodule.SwitchControlScheduleProfileList)
}

void SwitchControlScheduleProfileList::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_SwitchControlScheduleProfileList_optimizermodule_2foptimizermodule_2eproto.base);
}

SwitchControlScheduleProfileList::~SwitchControlScheduleProfileList() {
  // @@protoc_insertion_point(destructor:optimizermodule.SwitchControlScheduleProfileList)
  SharedDtor();
}

void SwitchControlScheduleProfileList::SharedDtor() {
}

void SwitchControlScheduleProfileList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SwitchControlScheduleProfileList& SwitchControlScheduleProfileList::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SwitchControlScheduleProfileList_optimizermodule_2foptimizermodule_2eproto.base);
  return *internal_default_instance();
}


void SwitchControlScheduleProfileList::Clear() {
// @@protoc_insertion_point(message_clear_start:optimizermodule.SwitchControlScheduleProfileList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switchcontrolprofile_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SwitchControlScheduleProfileList::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SwitchControlScheduleProfileList*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .switchmodule.SwitchControlProfile switchControlProfile = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::switchmodule::SwitchControlProfile::_InternalParse;
          object = msg->add_switchcontrolprofile();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SwitchControlScheduleProfileList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:optimizermodule.SwitchControlScheduleProfileList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .switchmodule.SwitchControlProfile switchControlProfile = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_switchcontrolprofile()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:optimizermodule.SwitchControlScheduleProfileList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:optimizermodule.SwitchControlScheduleProfileList)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SwitchControlScheduleProfileList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:optimizermodule.SwitchControlScheduleProfileList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .switchmodule.SwitchControlProfile switchControlProfile = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->switchcontrolprofile_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->switchcontrolprofile(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:optimizermodule.SwitchControlScheduleProfileList)
}

::google::protobuf::uint8* SwitchControlScheduleProfileList::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:optimizermodule.SwitchControlScheduleProfileList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .switchmodule.SwitchControlProfile switchControlProfile = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->switchcontrolprofile_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->switchcontrolprofile(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:optimizermodule.SwitchControlScheduleProfileList)
  return target;
}

size_t SwitchControlScheduleProfileList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:optimizermodule.SwitchControlScheduleProfileList)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .switchmodule.SwitchControlProfile switchControlProfile = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  {
    unsigned int count = static_cast<unsigned int>(this->switchcontrolprofile_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->switchcontrolprofile(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SwitchControlScheduleProfileList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:optimizermodule.SwitchControlScheduleProfileList)
  GOOGLE_DCHECK_NE(&from, this);
  const SwitchControlScheduleProfileList* source =
      ::google::protobuf::DynamicCastToGenerated<SwitchControlScheduleProfileList>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:optimizermodule.SwitchControlScheduleProfileList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:optimizermodule.SwitchControlScheduleProfileList)
    MergeFrom(*source);
  }
}

void SwitchControlScheduleProfileList::MergeFrom(const SwitchControlScheduleProfileList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:optimizermodule.SwitchControlScheduleProfileList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switchcontrolprofile_.MergeFrom(from.switchcontrolprofile_);
}

void SwitchControlScheduleProfileList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:optimizermodule.SwitchControlScheduleProfileList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SwitchControlScheduleProfileList::CopyFrom(const SwitchControlScheduleProfileList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:optimizermodule.SwitchControlScheduleProfileList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SwitchControlScheduleProfileList::IsInitialized() const {
  return true;
}

void SwitchControlScheduleProfileList::Swap(SwitchControlScheduleProfileList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SwitchControlScheduleProfileList::InternalSwap(SwitchControlScheduleProfileList* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&switchcontrolprofile_)->InternalSwap(CastToBase(&other->switchcontrolprofile_));
}

::google::protobuf::Metadata SwitchControlScheduleProfileList::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_optimizermodule_2foptimizermodule_2eproto);
  return ::file_level_metadata_optimizermodule_2foptimizermodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void GenerationControlScheduleProfileList::InitAsDefaultInstance() {
}
class GenerationControlScheduleProfileList::HasBitSetters {
 public:
};

void GenerationControlScheduleProfileList::clear_generationcontrolprofile() {
  generationcontrolprofile_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GenerationControlScheduleProfileList::kGenerationControlProfileFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GenerationControlScheduleProfileList::GenerationControlScheduleProfileList()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:optimizermodule.GenerationControlScheduleProfileList)
}
GenerationControlScheduleProfileList::GenerationControlScheduleProfileList(const GenerationControlScheduleProfileList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      generationcontrolprofile_(from.generationcontrolprofile_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:optimizermodule.GenerationControlScheduleProfileList)
}

void GenerationControlScheduleProfileList::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_GenerationControlScheduleProfileList_optimizermodule_2foptimizermodule_2eproto.base);
}

GenerationControlScheduleProfileList::~GenerationControlScheduleProfileList() {
  // @@protoc_insertion_point(destructor:optimizermodule.GenerationControlScheduleProfileList)
  SharedDtor();
}

void GenerationControlScheduleProfileList::SharedDtor() {
}

void GenerationControlScheduleProfileList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GenerationControlScheduleProfileList& GenerationControlScheduleProfileList::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GenerationControlScheduleProfileList_optimizermodule_2foptimizermodule_2eproto.base);
  return *internal_default_instance();
}


void GenerationControlScheduleProfileList::Clear() {
// @@protoc_insertion_point(message_clear_start:optimizermodule.GenerationControlScheduleProfileList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  generationcontrolprofile_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GenerationControlScheduleProfileList::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GenerationControlScheduleProfileList*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .generationmodule.GenerationControlProfile generationControlProfile = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::generationmodule::GenerationControlProfile::_InternalParse;
          object = msg->add_generationcontrolprofile();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GenerationControlScheduleProfileList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:optimizermodule.GenerationControlScheduleProfileList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .generationmodule.GenerationControlProfile generationControlProfile = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_generationcontrolprofile()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:optimizermodule.GenerationControlScheduleProfileList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:optimizermodule.GenerationControlScheduleProfileList)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GenerationControlScheduleProfileList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:optimizermodule.GenerationControlScheduleProfileList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .generationmodule.GenerationControlProfile generationControlProfile = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->generationcontrolprofile_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->generationcontrolprofile(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:optimizermodule.GenerationControlScheduleProfileList)
}

::google::protobuf::uint8* GenerationControlScheduleProfileList::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:optimizermodule.GenerationControlScheduleProfileList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .generationmodule.GenerationControlProfile generationControlProfile = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->generationcontrolprofile_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->generationcontrolprofile(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:optimizermodule.GenerationControlScheduleProfileList)
  return target;
}

size_t GenerationControlScheduleProfileList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:optimizermodule.GenerationControlScheduleProfileList)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .generationmodule.GenerationControlProfile generationControlProfile = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  {
    unsigned int count = static_cast<unsigned int>(this->generationcontrolprofile_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->generationcontrolprofile(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GenerationControlScheduleProfileList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:optimizermodule.GenerationControlScheduleProfileList)
  GOOGLE_DCHECK_NE(&from, this);
  const GenerationControlScheduleProfileList* source =
      ::google::protobuf::DynamicCastToGenerated<GenerationControlScheduleProfileList>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:optimizermodule.GenerationControlScheduleProfileList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:optimizermodule.GenerationControlScheduleProfileList)
    MergeFrom(*source);
  }
}

void GenerationControlScheduleProfileList::MergeFrom(const GenerationControlScheduleProfileList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:optimizermodule.GenerationControlScheduleProfileList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  generationcontrolprofile_.MergeFrom(from.generationcontrolprofile_);
}

void GenerationControlScheduleProfileList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:optimizermodule.GenerationControlScheduleProfileList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GenerationControlScheduleProfileList::CopyFrom(const GenerationControlScheduleProfileList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:optimizermodule.GenerationControlScheduleProfileList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GenerationControlScheduleProfileList::IsInitialized() const {
  return true;
}

void GenerationControlScheduleProfileList::Swap(GenerationControlScheduleProfileList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GenerationControlScheduleProfileList::InternalSwap(GenerationControlScheduleProfileList* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&generationcontrolprofile_)->InternalSwap(CastToBase(&other->generationcontrolprofile_));
}

::google::protobuf::Metadata GenerationControlScheduleProfileList::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_optimizermodule_2foptimizermodule_2eproto);
  return ::file_level_metadata_optimizermodule_2foptimizermodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void PlannedOptimizerScheduleProfile::InitAsDefaultInstance() {
  ::optimizermodule::_PlannedOptimizerScheduleProfile_default_instance_._instance.get_mutable()->optimizationmessageinfo_ = const_cast< ::commonmodule::OptimizationMessageInfo*>(
      ::commonmodule::OptimizationMessageInfo::internal_default_instance());
  ::optimizermodule::_PlannedOptimizerScheduleProfile_default_instance_._instance.get_mutable()->applicationsystem_ = const_cast< ::commonmodule::ApplicationSystem*>(
      ::commonmodule::ApplicationSystem::internal_default_instance());
  ::optimizermodule::_PlannedOptimizerScheduleProfile_default_instance_._instance.get_mutable()->esscontrolscheduleprofilelist_ = const_cast< ::optimizermodule::ESSControlScheduleProfileList*>(
      ::optimizermodule::ESSControlScheduleProfileList::internal_default_instance());
  ::optimizermodule::_PlannedOptimizerScheduleProfile_default_instance_._instance.get_mutable()->generationcontrolscheduleprofilelist_ = const_cast< ::optimizermodule::GenerationControlScheduleProfileList*>(
      ::optimizermodule::GenerationControlScheduleProfileList::internal_default_instance());
  ::optimizermodule::_PlannedOptimizerScheduleProfile_default_instance_._instance.get_mutable()->loadcontrolscheduleprofilelist_ = const_cast< ::optimizermodule::LoadControlScheduleProfileList*>(
      ::optimizermodule::LoadControlScheduleProfileList::internal_default_instance());
  ::optimizermodule::_PlannedOptimizerScheduleProfile_default_instance_._instance.get_mutable()->plannedinterconnectionscheduleprofilelist_ = const_cast< ::optimizermodule::PlannedInterconnectionScheduleProfileList*>(
      ::optimizermodule::PlannedInterconnectionScheduleProfileList::internal_default_instance());
  ::optimizermodule::_PlannedOptimizerScheduleProfile_default_instance_._instance.get_mutable()->regulatorcontrolscheduleprofilelist_ = const_cast< ::optimizermodule::RegulatorControlScheduleProfileList*>(
      ::optimizermodule::RegulatorControlScheduleProfileList::internal_default_instance());
  ::optimizermodule::_PlannedOptimizerScheduleProfile_default_instance_._instance.get_mutable()->solarcontrolscheduleprofilelist_ = const_cast< ::optimizermodule::SolarControlScheduleProfileList*>(
      ::optimizermodule::SolarControlScheduleProfileList::internal_default_instance());
  ::optimizermodule::_PlannedOptimizerScheduleProfile_default_instance_._instance.get_mutable()->switchcontrolscheduleprofilelist_ = const_cast< ::optimizermodule::SwitchControlScheduleProfileList*>(
      ::optimizermodule::SwitchControlScheduleProfileList::internal_default_instance());
}
class PlannedOptimizerScheduleProfile::HasBitSetters {
 public:
  static const ::commonmodule::OptimizationMessageInfo& optimizationmessageinfo(const PlannedOptimizerScheduleProfile* msg);
  static const ::commonmodule::ApplicationSystem& applicationsystem(const PlannedOptimizerScheduleProfile* msg);
  static const ::optimizermodule::ESSControlScheduleProfileList& esscontrolscheduleprofilelist(const PlannedOptimizerScheduleProfile* msg);
  static const ::optimizermodule::GenerationControlScheduleProfileList& generationcontrolscheduleprofilelist(const PlannedOptimizerScheduleProfile* msg);
  static const ::optimizermodule::LoadControlScheduleProfileList& loadcontrolscheduleprofilelist(const PlannedOptimizerScheduleProfile* msg);
  static const ::optimizermodule::PlannedInterconnectionScheduleProfileList& plannedinterconnectionscheduleprofilelist(const PlannedOptimizerScheduleProfile* msg);
  static const ::optimizermodule::RegulatorControlScheduleProfileList& regulatorcontrolscheduleprofilelist(const PlannedOptimizerScheduleProfile* msg);
  static const ::optimizermodule::SolarControlScheduleProfileList& solarcontrolscheduleprofilelist(const PlannedOptimizerScheduleProfile* msg);
  static const ::optimizermodule::SwitchControlScheduleProfileList& switchcontrolscheduleprofilelist(const PlannedOptimizerScheduleProfile* msg);
};

const ::commonmodule::OptimizationMessageInfo&
PlannedOptimizerScheduleProfile::HasBitSetters::optimizationmessageinfo(const PlannedOptimizerScheduleProfile* msg) {
  return *msg->optimizationmessageinfo_;
}
const ::commonmodule::ApplicationSystem&
PlannedOptimizerScheduleProfile::HasBitSetters::applicationsystem(const PlannedOptimizerScheduleProfile* msg) {
  return *msg->applicationsystem_;
}
const ::optimizermodule::ESSControlScheduleProfileList&
PlannedOptimizerScheduleProfile::HasBitSetters::esscontrolscheduleprofilelist(const PlannedOptimizerScheduleProfile* msg) {
  return *msg->esscontrolscheduleprofilelist_;
}
const ::optimizermodule::GenerationControlScheduleProfileList&
PlannedOptimizerScheduleProfile::HasBitSetters::generationcontrolscheduleprofilelist(const PlannedOptimizerScheduleProfile* msg) {
  return *msg->generationcontrolscheduleprofilelist_;
}
const ::optimizermodule::LoadControlScheduleProfileList&
PlannedOptimizerScheduleProfile::HasBitSetters::loadcontrolscheduleprofilelist(const PlannedOptimizerScheduleProfile* msg) {
  return *msg->loadcontrolscheduleprofilelist_;
}
const ::optimizermodule::PlannedInterconnectionScheduleProfileList&
PlannedOptimizerScheduleProfile::HasBitSetters::plannedinterconnectionscheduleprofilelist(const PlannedOptimizerScheduleProfile* msg) {
  return *msg->plannedinterconnectionscheduleprofilelist_;
}
const ::optimizermodule::RegulatorControlScheduleProfileList&
PlannedOptimizerScheduleProfile::HasBitSetters::regulatorcontrolscheduleprofilelist(const PlannedOptimizerScheduleProfile* msg) {
  return *msg->regulatorcontrolscheduleprofilelist_;
}
const ::optimizermodule::SolarControlScheduleProfileList&
PlannedOptimizerScheduleProfile::HasBitSetters::solarcontrolscheduleprofilelist(const PlannedOptimizerScheduleProfile* msg) {
  return *msg->solarcontrolscheduleprofilelist_;
}
const ::optimizermodule::SwitchControlScheduleProfileList&
PlannedOptimizerScheduleProfile::HasBitSetters::switchcontrolscheduleprofilelist(const PlannedOptimizerScheduleProfile* msg) {
  return *msg->switchcontrolscheduleprofilelist_;
}
void PlannedOptimizerScheduleProfile::clear_optimizationmessageinfo() {
  if (GetArenaNoVirtual() == nullptr && optimizationmessageinfo_ != nullptr) {
    delete optimizationmessageinfo_;
  }
  optimizationmessageinfo_ = nullptr;
}
void PlannedOptimizerScheduleProfile::clear_applicationsystem() {
  if (GetArenaNoVirtual() == nullptr && applicationsystem_ != nullptr) {
    delete applicationsystem_;
  }
  applicationsystem_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlannedOptimizerScheduleProfile::kOptimizationMessageInfoFieldNumber;
const int PlannedOptimizerScheduleProfile::kApplicationSystemFieldNumber;
const int PlannedOptimizerScheduleProfile::kEssControlScheduleProfileListFieldNumber;
const int PlannedOptimizerScheduleProfile::kGenerationControlScheduleProfileListFieldNumber;
const int PlannedOptimizerScheduleProfile::kLoadControlScheduleProfileListFieldNumber;
const int PlannedOptimizerScheduleProfile::kPlannedInterconnectionScheduleProfileListFieldNumber;
const int PlannedOptimizerScheduleProfile::kRegulatorControlScheduleProfileListFieldNumber;
const int PlannedOptimizerScheduleProfile::kSolarControlScheduleProfileListFieldNumber;
const int PlannedOptimizerScheduleProfile::kSwitchControlScheduleProfileListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlannedOptimizerScheduleProfile::PlannedOptimizerScheduleProfile()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:optimizermodule.PlannedOptimizerScheduleProfile)
}
PlannedOptimizerScheduleProfile::PlannedOptimizerScheduleProfile(const PlannedOptimizerScheduleProfile& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_optimizationmessageinfo()) {
    optimizationmessageinfo_ = new ::commonmodule::OptimizationMessageInfo(*from.optimizationmessageinfo_);
  } else {
    optimizationmessageinfo_ = nullptr;
  }
  if (from.has_applicationsystem()) {
    applicationsystem_ = new ::commonmodule::ApplicationSystem(*from.applicationsystem_);
  } else {
    applicationsystem_ = nullptr;
  }
  if (from.has_esscontrolscheduleprofilelist()) {
    esscontrolscheduleprofilelist_ = new ::optimizermodule::ESSControlScheduleProfileList(*from.esscontrolscheduleprofilelist_);
  } else {
    esscontrolscheduleprofilelist_ = nullptr;
  }
  if (from.has_generationcontrolscheduleprofilelist()) {
    generationcontrolscheduleprofilelist_ = new ::optimizermodule::GenerationControlScheduleProfileList(*from.generationcontrolscheduleprofilelist_);
  } else {
    generationcontrolscheduleprofilelist_ = nullptr;
  }
  if (from.has_loadcontrolscheduleprofilelist()) {
    loadcontrolscheduleprofilelist_ = new ::optimizermodule::LoadControlScheduleProfileList(*from.loadcontrolscheduleprofilelist_);
  } else {
    loadcontrolscheduleprofilelist_ = nullptr;
  }
  if (from.has_plannedinterconnectionscheduleprofilelist()) {
    plannedinterconnectionscheduleprofilelist_ = new ::optimizermodule::PlannedInterconnectionScheduleProfileList(*from.plannedinterconnectionscheduleprofilelist_);
  } else {
    plannedinterconnectionscheduleprofilelist_ = nullptr;
  }
  if (from.has_regulatorcontrolscheduleprofilelist()) {
    regulatorcontrolscheduleprofilelist_ = new ::optimizermodule::RegulatorControlScheduleProfileList(*from.regulatorcontrolscheduleprofilelist_);
  } else {
    regulatorcontrolscheduleprofilelist_ = nullptr;
  }
  if (from.has_solarcontrolscheduleprofilelist()) {
    solarcontrolscheduleprofilelist_ = new ::optimizermodule::SolarControlScheduleProfileList(*from.solarcontrolscheduleprofilelist_);
  } else {
    solarcontrolscheduleprofilelist_ = nullptr;
  }
  if (from.has_switchcontrolscheduleprofilelist()) {
    switchcontrolscheduleprofilelist_ = new ::optimizermodule::SwitchControlScheduleProfileList(*from.switchcontrolscheduleprofilelist_);
  } else {
    switchcontrolscheduleprofilelist_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:optimizermodule.PlannedOptimizerScheduleProfile)
}

void PlannedOptimizerScheduleProfile::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_PlannedOptimizerScheduleProfile_optimizermodule_2foptimizermodule_2eproto.base);
  ::memset(&optimizationmessageinfo_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&switchcontrolscheduleprofilelist_) -
      reinterpret_cast<char*>(&optimizationmessageinfo_)) + sizeof(switchcontrolscheduleprofilelist_));
}

PlannedOptimizerScheduleProfile::~PlannedOptimizerScheduleProfile() {
  // @@protoc_insertion_point(destructor:optimizermodule.PlannedOptimizerScheduleProfile)
  SharedDtor();
}

void PlannedOptimizerScheduleProfile::SharedDtor() {
  if (this != internal_default_instance()) delete optimizationmessageinfo_;
  if (this != internal_default_instance()) delete applicationsystem_;
  if (this != internal_default_instance()) delete esscontrolscheduleprofilelist_;
  if (this != internal_default_instance()) delete generationcontrolscheduleprofilelist_;
  if (this != internal_default_instance()) delete loadcontrolscheduleprofilelist_;
  if (this != internal_default_instance()) delete plannedinterconnectionscheduleprofilelist_;
  if (this != internal_default_instance()) delete regulatorcontrolscheduleprofilelist_;
  if (this != internal_default_instance()) delete solarcontrolscheduleprofilelist_;
  if (this != internal_default_instance()) delete switchcontrolscheduleprofilelist_;
}

void PlannedOptimizerScheduleProfile::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PlannedOptimizerScheduleProfile& PlannedOptimizerScheduleProfile::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_PlannedOptimizerScheduleProfile_optimizermodule_2foptimizermodule_2eproto.base);
  return *internal_default_instance();
}


void PlannedOptimizerScheduleProfile::Clear() {
// @@protoc_insertion_point(message_clear_start:optimizermodule.PlannedOptimizerScheduleProfile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && optimizationmessageinfo_ != nullptr) {
    delete optimizationmessageinfo_;
  }
  optimizationmessageinfo_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && applicationsystem_ != nullptr) {
    delete applicationsystem_;
  }
  applicationsystem_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && esscontrolscheduleprofilelist_ != nullptr) {
    delete esscontrolscheduleprofilelist_;
  }
  esscontrolscheduleprofilelist_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && generationcontrolscheduleprofilelist_ != nullptr) {
    delete generationcontrolscheduleprofilelist_;
  }
  generationcontrolscheduleprofilelist_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && loadcontrolscheduleprofilelist_ != nullptr) {
    delete loadcontrolscheduleprofilelist_;
  }
  loadcontrolscheduleprofilelist_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && plannedinterconnectionscheduleprofilelist_ != nullptr) {
    delete plannedinterconnectionscheduleprofilelist_;
  }
  plannedinterconnectionscheduleprofilelist_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && regulatorcontrolscheduleprofilelist_ != nullptr) {
    delete regulatorcontrolscheduleprofilelist_;
  }
  regulatorcontrolscheduleprofilelist_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && solarcontrolscheduleprofilelist_ != nullptr) {
    delete solarcontrolscheduleprofilelist_;
  }
  solarcontrolscheduleprofilelist_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && switchcontrolscheduleprofilelist_ != nullptr) {
    delete switchcontrolscheduleprofilelist_;
  }
  switchcontrolscheduleprofilelist_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* PlannedOptimizerScheduleProfile::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<PlannedOptimizerScheduleProfile*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .commonmodule.OptimizationMessageInfo optimizationMessageInfo = 1 [(.uml.option_parent_message) = true];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::OptimizationMessageInfo::_InternalParse;
        object = msg->mutable_optimizationmessageinfo();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .commonmodule.ApplicationSystem applicationSystem = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::ApplicationSystem::_InternalParse;
        object = msg->mutable_applicationsystem();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .optimizermodule.ESSControlScheduleProfileList essControlScheduleProfileList = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::optimizermodule::ESSControlScheduleProfileList::_InternalParse;
        object = msg->mutable_esscontrolscheduleprofilelist();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .optimizermodule.GenerationControlScheduleProfileList generationControlScheduleProfileList = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::optimizermodule::GenerationControlScheduleProfileList::_InternalParse;
        object = msg->mutable_generationcontrolscheduleprofilelist();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .optimizermodule.LoadControlScheduleProfileList loadControlScheduleProfileList = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::optimizermodule::LoadControlScheduleProfileList::_InternalParse;
        object = msg->mutable_loadcontrolscheduleprofilelist();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .optimizermodule.PlannedInterconnectionScheduleProfileList plannedInterconnectionScheduleProfileList = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::optimizermodule::PlannedInterconnectionScheduleProfileList::_InternalParse;
        object = msg->mutable_plannedinterconnectionscheduleprofilelist();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .optimizermodule.RegulatorControlScheduleProfileList regulatorControlScheduleProfileList = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::optimizermodule::RegulatorControlScheduleProfileList::_InternalParse;
        object = msg->mutable_regulatorcontrolscheduleprofilelist();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .optimizermodule.SolarControlScheduleProfileList solarControlScheduleProfileList = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 66) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::optimizermodule::SolarControlScheduleProfileList::_InternalParse;
        object = msg->mutable_solarcontrolscheduleprofilelist();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .optimizermodule.SwitchControlScheduleProfileList switchControlScheduleProfileList = 9;
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) != 74) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::optimizermodule::SwitchControlScheduleProfileList::_InternalParse;
        object = msg->mutable_switchcontrolscheduleprofilelist();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool PlannedOptimizerScheduleProfile::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:optimizermodule.PlannedOptimizerScheduleProfile)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .commonmodule.OptimizationMessageInfo optimizationMessageInfo = 1 [(.uml.option_parent_message) = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_optimizationmessageinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.ApplicationSystem applicationSystem = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_applicationsystem()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .optimizermodule.ESSControlScheduleProfileList essControlScheduleProfileList = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_esscontrolscheduleprofilelist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .optimizermodule.GenerationControlScheduleProfileList generationControlScheduleProfileList = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_generationcontrolscheduleprofilelist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .optimizermodule.LoadControlScheduleProfileList loadControlScheduleProfileList = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_loadcontrolscheduleprofilelist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .optimizermodule.PlannedInterconnectionScheduleProfileList plannedInterconnectionScheduleProfileList = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_plannedinterconnectionscheduleprofilelist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .optimizermodule.RegulatorControlScheduleProfileList regulatorControlScheduleProfileList = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_regulatorcontrolscheduleprofilelist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .optimizermodule.SolarControlScheduleProfileList solarControlScheduleProfileList = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (66 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_solarcontrolscheduleprofilelist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .optimizermodule.SwitchControlScheduleProfileList switchControlScheduleProfileList = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (74 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_switchcontrolscheduleprofilelist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:optimizermodule.PlannedOptimizerScheduleProfile)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:optimizermodule.PlannedOptimizerScheduleProfile)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void PlannedOptimizerScheduleProfile::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:optimizermodule.PlannedOptimizerScheduleProfile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.OptimizationMessageInfo optimizationMessageInfo = 1 [(.uml.option_parent_message) = true];
  if (this->has_optimizationmessageinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::optimizationmessageinfo(this), output);
  }

  // .commonmodule.ApplicationSystem applicationSystem = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_applicationsystem()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::applicationsystem(this), output);
  }

  // .optimizermodule.ESSControlScheduleProfileList essControlScheduleProfileList = 3;
  if (this->has_esscontrolscheduleprofilelist()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::esscontrolscheduleprofilelist(this), output);
  }

  // .optimizermodule.GenerationControlScheduleProfileList generationControlScheduleProfileList = 4;
  if (this->has_generationcontrolscheduleprofilelist()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::generationcontrolscheduleprofilelist(this), output);
  }

  // .optimizermodule.LoadControlScheduleProfileList loadControlScheduleProfileList = 5;
  if (this->has_loadcontrolscheduleprofilelist()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, HasBitSetters::loadcontrolscheduleprofilelist(this), output);
  }

  // .optimizermodule.PlannedInterconnectionScheduleProfileList plannedInterconnectionScheduleProfileList = 6;
  if (this->has_plannedinterconnectionscheduleprofilelist()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, HasBitSetters::plannedinterconnectionscheduleprofilelist(this), output);
  }

  // .optimizermodule.RegulatorControlScheduleProfileList regulatorControlScheduleProfileList = 7;
  if (this->has_regulatorcontrolscheduleprofilelist()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, HasBitSetters::regulatorcontrolscheduleprofilelist(this), output);
  }

  // .optimizermodule.SolarControlScheduleProfileList solarControlScheduleProfileList = 8;
  if (this->has_solarcontrolscheduleprofilelist()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, HasBitSetters::solarcontrolscheduleprofilelist(this), output);
  }

  // .optimizermodule.SwitchControlScheduleProfileList switchControlScheduleProfileList = 9;
  if (this->has_switchcontrolscheduleprofilelist()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, HasBitSetters::switchcontrolscheduleprofilelist(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:optimizermodule.PlannedOptimizerScheduleProfile)
}

::google::protobuf::uint8* PlannedOptimizerScheduleProfile::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:optimizermodule.PlannedOptimizerScheduleProfile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.OptimizationMessageInfo optimizationMessageInfo = 1 [(.uml.option_parent_message) = true];
  if (this->has_optimizationmessageinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::optimizationmessageinfo(this), target);
  }

  // .commonmodule.ApplicationSystem applicationSystem = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_applicationsystem()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::applicationsystem(this), target);
  }

  // .optimizermodule.ESSControlScheduleProfileList essControlScheduleProfileList = 3;
  if (this->has_esscontrolscheduleprofilelist()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::esscontrolscheduleprofilelist(this), target);
  }

  // .optimizermodule.GenerationControlScheduleProfileList generationControlScheduleProfileList = 4;
  if (this->has_generationcontrolscheduleprofilelist()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::generationcontrolscheduleprofilelist(this), target);
  }

  // .optimizermodule.LoadControlScheduleProfileList loadControlScheduleProfileList = 5;
  if (this->has_loadcontrolscheduleprofilelist()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, HasBitSetters::loadcontrolscheduleprofilelist(this), target);
  }

  // .optimizermodule.PlannedInterconnectionScheduleProfileList plannedInterconnectionScheduleProfileList = 6;
  if (this->has_plannedinterconnectionscheduleprofilelist()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, HasBitSetters::plannedinterconnectionscheduleprofilelist(this), target);
  }

  // .optimizermodule.RegulatorControlScheduleProfileList regulatorControlScheduleProfileList = 7;
  if (this->has_regulatorcontrolscheduleprofilelist()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, HasBitSetters::regulatorcontrolscheduleprofilelist(this), target);
  }

  // .optimizermodule.SolarControlScheduleProfileList solarControlScheduleProfileList = 8;
  if (this->has_solarcontrolscheduleprofilelist()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, HasBitSetters::solarcontrolscheduleprofilelist(this), target);
  }

  // .optimizermodule.SwitchControlScheduleProfileList switchControlScheduleProfileList = 9;
  if (this->has_switchcontrolscheduleprofilelist()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, HasBitSetters::switchcontrolscheduleprofilelist(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:optimizermodule.PlannedOptimizerScheduleProfile)
  return target;
}

size_t PlannedOptimizerScheduleProfile::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:optimizermodule.PlannedOptimizerScheduleProfile)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .commonmodule.OptimizationMessageInfo optimizationMessageInfo = 1 [(.uml.option_parent_message) = true];
  if (this->has_optimizationmessageinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *optimizationmessageinfo_);
  }

  // .commonmodule.ApplicationSystem applicationSystem = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_applicationsystem()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *applicationsystem_);
  }

  // .optimizermodule.ESSControlScheduleProfileList essControlScheduleProfileList = 3;
  if (this->has_esscontrolscheduleprofilelist()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *esscontrolscheduleprofilelist_);
  }

  // .optimizermodule.GenerationControlScheduleProfileList generationControlScheduleProfileList = 4;
  if (this->has_generationcontrolscheduleprofilelist()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *generationcontrolscheduleprofilelist_);
  }

  // .optimizermodule.LoadControlScheduleProfileList loadControlScheduleProfileList = 5;
  if (this->has_loadcontrolscheduleprofilelist()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *loadcontrolscheduleprofilelist_);
  }

  // .optimizermodule.PlannedInterconnectionScheduleProfileList plannedInterconnectionScheduleProfileList = 6;
  if (this->has_plannedinterconnectionscheduleprofilelist()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *plannedinterconnectionscheduleprofilelist_);
  }

  // .optimizermodule.RegulatorControlScheduleProfileList regulatorControlScheduleProfileList = 7;
  if (this->has_regulatorcontrolscheduleprofilelist()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *regulatorcontrolscheduleprofilelist_);
  }

  // .optimizermodule.SolarControlScheduleProfileList solarControlScheduleProfileList = 8;
  if (this->has_solarcontrolscheduleprofilelist()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *solarcontrolscheduleprofilelist_);
  }

  // .optimizermodule.SwitchControlScheduleProfileList switchControlScheduleProfileList = 9;
  if (this->has_switchcontrolscheduleprofilelist()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *switchcontrolscheduleprofilelist_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PlannedOptimizerScheduleProfile::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:optimizermodule.PlannedOptimizerScheduleProfile)
  GOOGLE_DCHECK_NE(&from, this);
  const PlannedOptimizerScheduleProfile* source =
      ::google::protobuf::DynamicCastToGenerated<PlannedOptimizerScheduleProfile>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:optimizermodule.PlannedOptimizerScheduleProfile)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:optimizermodule.PlannedOptimizerScheduleProfile)
    MergeFrom(*source);
  }
}

void PlannedOptimizerScheduleProfile::MergeFrom(const PlannedOptimizerScheduleProfile& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:optimizermodule.PlannedOptimizerScheduleProfile)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_optimizationmessageinfo()) {
    mutable_optimizationmessageinfo()->::commonmodule::OptimizationMessageInfo::MergeFrom(from.optimizationmessageinfo());
  }
  if (from.has_applicationsystem()) {
    mutable_applicationsystem()->::commonmodule::ApplicationSystem::MergeFrom(from.applicationsystem());
  }
  if (from.has_esscontrolscheduleprofilelist()) {
    mutable_esscontrolscheduleprofilelist()->::optimizermodule::ESSControlScheduleProfileList::MergeFrom(from.esscontrolscheduleprofilelist());
  }
  if (from.has_generationcontrolscheduleprofilelist()) {
    mutable_generationcontrolscheduleprofilelist()->::optimizermodule::GenerationControlScheduleProfileList::MergeFrom(from.generationcontrolscheduleprofilelist());
  }
  if (from.has_loadcontrolscheduleprofilelist()) {
    mutable_loadcontrolscheduleprofilelist()->::optimizermodule::LoadControlScheduleProfileList::MergeFrom(from.loadcontrolscheduleprofilelist());
  }
  if (from.has_plannedinterconnectionscheduleprofilelist()) {
    mutable_plannedinterconnectionscheduleprofilelist()->::optimizermodule::PlannedInterconnectionScheduleProfileList::MergeFrom(from.plannedinterconnectionscheduleprofilelist());
  }
  if (from.has_regulatorcontrolscheduleprofilelist()) {
    mutable_regulatorcontrolscheduleprofilelist()->::optimizermodule::RegulatorControlScheduleProfileList::MergeFrom(from.regulatorcontrolscheduleprofilelist());
  }
  if (from.has_solarcontrolscheduleprofilelist()) {
    mutable_solarcontrolscheduleprofilelist()->::optimizermodule::SolarControlScheduleProfileList::MergeFrom(from.solarcontrolscheduleprofilelist());
  }
  if (from.has_switchcontrolscheduleprofilelist()) {
    mutable_switchcontrolscheduleprofilelist()->::optimizermodule::SwitchControlScheduleProfileList::MergeFrom(from.switchcontrolscheduleprofilelist());
  }
}

void PlannedOptimizerScheduleProfile::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:optimizermodule.PlannedOptimizerScheduleProfile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlannedOptimizerScheduleProfile::CopyFrom(const PlannedOptimizerScheduleProfile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:optimizermodule.PlannedOptimizerScheduleProfile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlannedOptimizerScheduleProfile::IsInitialized() const {
  return true;
}

void PlannedOptimizerScheduleProfile::Swap(PlannedOptimizerScheduleProfile* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlannedOptimizerScheduleProfile::InternalSwap(PlannedOptimizerScheduleProfile* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(optimizationmessageinfo_, other->optimizationmessageinfo_);
  swap(applicationsystem_, other->applicationsystem_);
  swap(esscontrolscheduleprofilelist_, other->esscontrolscheduleprofilelist_);
  swap(generationcontrolscheduleprofilelist_, other->generationcontrolscheduleprofilelist_);
  swap(loadcontrolscheduleprofilelist_, other->loadcontrolscheduleprofilelist_);
  swap(plannedinterconnectionscheduleprofilelist_, other->plannedinterconnectionscheduleprofilelist_);
  swap(regulatorcontrolscheduleprofilelist_, other->regulatorcontrolscheduleprofilelist_);
  swap(solarcontrolscheduleprofilelist_, other->solarcontrolscheduleprofilelist_);
  swap(switchcontrolscheduleprofilelist_, other->switchcontrolscheduleprofilelist_);
}

::google::protobuf::Metadata PlannedOptimizerScheduleProfile::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_optimizermodule_2foptimizermodule_2eproto);
  return ::file_level_metadata_optimizermodule_2foptimizermodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void RequestedInterconnectionScheduleProfileList::InitAsDefaultInstance() {
}
class RequestedInterconnectionScheduleProfileList::HasBitSetters {
 public:
};

void RequestedInterconnectionScheduleProfileList::clear_requestedinterconnectionscheduleprofile() {
  requestedinterconnectionscheduleprofile_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RequestedInterconnectionScheduleProfileList::kRequestedInterconnectionScheduleProfileFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RequestedInterconnectionScheduleProfileList::RequestedInterconnectionScheduleProfileList()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:optimizermodule.RequestedInterconnectionScheduleProfileList)
}
RequestedInterconnectionScheduleProfileList::RequestedInterconnectionScheduleProfileList(const RequestedInterconnectionScheduleProfileList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      requestedinterconnectionscheduleprofile_(from.requestedinterconnectionscheduleprofile_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:optimizermodule.RequestedInterconnectionScheduleProfileList)
}

void RequestedInterconnectionScheduleProfileList::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_RequestedInterconnectionScheduleProfileList_optimizermodule_2foptimizermodule_2eproto.base);
}

RequestedInterconnectionScheduleProfileList::~RequestedInterconnectionScheduleProfileList() {
  // @@protoc_insertion_point(destructor:optimizermodule.RequestedInterconnectionScheduleProfileList)
  SharedDtor();
}

void RequestedInterconnectionScheduleProfileList::SharedDtor() {
}

void RequestedInterconnectionScheduleProfileList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RequestedInterconnectionScheduleProfileList& RequestedInterconnectionScheduleProfileList::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_RequestedInterconnectionScheduleProfileList_optimizermodule_2foptimizermodule_2eproto.base);
  return *internal_default_instance();
}


void RequestedInterconnectionScheduleProfileList::Clear() {
// @@protoc_insertion_point(message_clear_start:optimizermodule.RequestedInterconnectionScheduleProfileList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  requestedinterconnectionscheduleprofile_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* RequestedInterconnectionScheduleProfileList::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<RequestedInterconnectionScheduleProfileList*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .interconnectionmodule.RequestedInterconnectionScheduleProfile requestedInterconnectionScheduleProfile = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::interconnectionmodule::RequestedInterconnectionScheduleProfile::_InternalParse;
          object = msg->add_requestedinterconnectionscheduleprofile();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool RequestedInterconnectionScheduleProfileList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:optimizermodule.RequestedInterconnectionScheduleProfileList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .interconnectionmodule.RequestedInterconnectionScheduleProfile requestedInterconnectionScheduleProfile = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_requestedinterconnectionscheduleprofile()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:optimizermodule.RequestedInterconnectionScheduleProfileList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:optimizermodule.RequestedInterconnectionScheduleProfileList)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void RequestedInterconnectionScheduleProfileList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:optimizermodule.RequestedInterconnectionScheduleProfileList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .interconnectionmodule.RequestedInterconnectionScheduleProfile requestedInterconnectionScheduleProfile = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->requestedinterconnectionscheduleprofile_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->requestedinterconnectionscheduleprofile(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:optimizermodule.RequestedInterconnectionScheduleProfileList)
}

::google::protobuf::uint8* RequestedInterconnectionScheduleProfileList::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:optimizermodule.RequestedInterconnectionScheduleProfileList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .interconnectionmodule.RequestedInterconnectionScheduleProfile requestedInterconnectionScheduleProfile = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->requestedinterconnectionscheduleprofile_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->requestedinterconnectionscheduleprofile(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:optimizermodule.RequestedInterconnectionScheduleProfileList)
  return target;
}

size_t RequestedInterconnectionScheduleProfileList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:optimizermodule.RequestedInterconnectionScheduleProfileList)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .interconnectionmodule.RequestedInterconnectionScheduleProfile requestedInterconnectionScheduleProfile = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  {
    unsigned int count = static_cast<unsigned int>(this->requestedinterconnectionscheduleprofile_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->requestedinterconnectionscheduleprofile(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RequestedInterconnectionScheduleProfileList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:optimizermodule.RequestedInterconnectionScheduleProfileList)
  GOOGLE_DCHECK_NE(&from, this);
  const RequestedInterconnectionScheduleProfileList* source =
      ::google::protobuf::DynamicCastToGenerated<RequestedInterconnectionScheduleProfileList>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:optimizermodule.RequestedInterconnectionScheduleProfileList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:optimizermodule.RequestedInterconnectionScheduleProfileList)
    MergeFrom(*source);
  }
}

void RequestedInterconnectionScheduleProfileList::MergeFrom(const RequestedInterconnectionScheduleProfileList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:optimizermodule.RequestedInterconnectionScheduleProfileList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  requestedinterconnectionscheduleprofile_.MergeFrom(from.requestedinterconnectionscheduleprofile_);
}

void RequestedInterconnectionScheduleProfileList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:optimizermodule.RequestedInterconnectionScheduleProfileList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RequestedInterconnectionScheduleProfileList::CopyFrom(const RequestedInterconnectionScheduleProfileList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:optimizermodule.RequestedInterconnectionScheduleProfileList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestedInterconnectionScheduleProfileList::IsInitialized() const {
  return true;
}

void RequestedInterconnectionScheduleProfileList::Swap(RequestedInterconnectionScheduleProfileList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RequestedInterconnectionScheduleProfileList::InternalSwap(RequestedInterconnectionScheduleProfileList* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&requestedinterconnectionscheduleprofile_)->InternalSwap(CastToBase(&other->requestedinterconnectionscheduleprofile_));
}

::google::protobuf::Metadata RequestedInterconnectionScheduleProfileList::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_optimizermodule_2foptimizermodule_2eproto);
  return ::file_level_metadata_optimizermodule_2foptimizermodule_2eproto[kIndexInFileMessages];
}


// ===================================================================

void RequestedOptimizerScheduleProfile::InitAsDefaultInstance() {
  ::optimizermodule::_RequestedOptimizerScheduleProfile_default_instance_._instance.get_mutable()->optimizationmessageinfo_ = const_cast< ::commonmodule::OptimizationMessageInfo*>(
      ::commonmodule::OptimizationMessageInfo::internal_default_instance());
  ::optimizermodule::_RequestedOptimizerScheduleProfile_default_instance_._instance.get_mutable()->applicationsystem_ = const_cast< ::commonmodule::ApplicationSystem*>(
      ::commonmodule::ApplicationSystem::internal_default_instance());
  ::optimizermodule::_RequestedOptimizerScheduleProfile_default_instance_._instance.get_mutable()->esscontrolscheduleprofilelist_ = const_cast< ::optimizermodule::ESSControlScheduleProfileList*>(
      ::optimizermodule::ESSControlScheduleProfileList::internal_default_instance());
  ::optimizermodule::_RequestedOptimizerScheduleProfile_default_instance_._instance.get_mutable()->generationcontrolscheduleprofilelist_ = const_cast< ::optimizermodule::GenerationControlScheduleProfileList*>(
      ::optimizermodule::GenerationControlScheduleProfileList::internal_default_instance());
  ::optimizermodule::_RequestedOptimizerScheduleProfile_default_instance_._instance.get_mutable()->loadcontrolscheduleprofilelist_ = const_cast< ::optimizermodule::LoadControlScheduleProfileList*>(
      ::optimizermodule::LoadControlScheduleProfileList::internal_default_instance());
  ::optimizermodule::_RequestedOptimizerScheduleProfile_default_instance_._instance.get_mutable()->regulatorcontrolscheduleprofilelist_ = const_cast< ::optimizermodule::RegulatorControlScheduleProfileList*>(
      ::optimizermodule::RegulatorControlScheduleProfileList::internal_default_instance());
  ::optimizermodule::_RequestedOptimizerScheduleProfile_default_instance_._instance.get_mutable()->requestedinterconnectionscheduleprofilelist_ = const_cast< ::optimizermodule::RequestedInterconnectionScheduleProfileList*>(
      ::optimizermodule::RequestedInterconnectionScheduleProfileList::internal_default_instance());
  ::optimizermodule::_RequestedOptimizerScheduleProfile_default_instance_._instance.get_mutable()->solarcontrolscheduleprofilelist_ = const_cast< ::optimizermodule::SolarControlScheduleProfileList*>(
      ::optimizermodule::SolarControlScheduleProfileList::internal_default_instance());
  ::optimizermodule::_RequestedOptimizerScheduleProfile_default_instance_._instance.get_mutable()->switchcontrolscheduleprofilelist_ = const_cast< ::optimizermodule::SwitchControlScheduleProfileList*>(
      ::optimizermodule::SwitchControlScheduleProfileList::internal_default_instance());
}
class RequestedOptimizerScheduleProfile::HasBitSetters {
 public:
  static const ::commonmodule::OptimizationMessageInfo& optimizationmessageinfo(const RequestedOptimizerScheduleProfile* msg);
  static const ::commonmodule::ApplicationSystem& applicationsystem(const RequestedOptimizerScheduleProfile* msg);
  static const ::optimizermodule::ESSControlScheduleProfileList& esscontrolscheduleprofilelist(const RequestedOptimizerScheduleProfile* msg);
  static const ::optimizermodule::GenerationControlScheduleProfileList& generationcontrolscheduleprofilelist(const RequestedOptimizerScheduleProfile* msg);
  static const ::optimizermodule::LoadControlScheduleProfileList& loadcontrolscheduleprofilelist(const RequestedOptimizerScheduleProfile* msg);
  static const ::optimizermodule::RegulatorControlScheduleProfileList& regulatorcontrolscheduleprofilelist(const RequestedOptimizerScheduleProfile* msg);
  static const ::optimizermodule::RequestedInterconnectionScheduleProfileList& requestedinterconnectionscheduleprofilelist(const RequestedOptimizerScheduleProfile* msg);
  static const ::optimizermodule::SolarControlScheduleProfileList& solarcontrolscheduleprofilelist(const RequestedOptimizerScheduleProfile* msg);
  static const ::optimizermodule::SwitchControlScheduleProfileList& switchcontrolscheduleprofilelist(const RequestedOptimizerScheduleProfile* msg);
};

const ::commonmodule::OptimizationMessageInfo&
RequestedOptimizerScheduleProfile::HasBitSetters::optimizationmessageinfo(const RequestedOptimizerScheduleProfile* msg) {
  return *msg->optimizationmessageinfo_;
}
const ::commonmodule::ApplicationSystem&
RequestedOptimizerScheduleProfile::HasBitSetters::applicationsystem(const RequestedOptimizerScheduleProfile* msg) {
  return *msg->applicationsystem_;
}
const ::optimizermodule::ESSControlScheduleProfileList&
RequestedOptimizerScheduleProfile::HasBitSetters::esscontrolscheduleprofilelist(const RequestedOptimizerScheduleProfile* msg) {
  return *msg->esscontrolscheduleprofilelist_;
}
const ::optimizermodule::GenerationControlScheduleProfileList&
RequestedOptimizerScheduleProfile::HasBitSetters::generationcontrolscheduleprofilelist(const RequestedOptimizerScheduleProfile* msg) {
  return *msg->generationcontrolscheduleprofilelist_;
}
const ::optimizermodule::LoadControlScheduleProfileList&
RequestedOptimizerScheduleProfile::HasBitSetters::loadcontrolscheduleprofilelist(const RequestedOptimizerScheduleProfile* msg) {
  return *msg->loadcontrolscheduleprofilelist_;
}
const ::optimizermodule::RegulatorControlScheduleProfileList&
RequestedOptimizerScheduleProfile::HasBitSetters::regulatorcontrolscheduleprofilelist(const RequestedOptimizerScheduleProfile* msg) {
  return *msg->regulatorcontrolscheduleprofilelist_;
}
const ::optimizermodule::RequestedInterconnectionScheduleProfileList&
RequestedOptimizerScheduleProfile::HasBitSetters::requestedinterconnectionscheduleprofilelist(const RequestedOptimizerScheduleProfile* msg) {
  return *msg->requestedinterconnectionscheduleprofilelist_;
}
const ::optimizermodule::SolarControlScheduleProfileList&
RequestedOptimizerScheduleProfile::HasBitSetters::solarcontrolscheduleprofilelist(const RequestedOptimizerScheduleProfile* msg) {
  return *msg->solarcontrolscheduleprofilelist_;
}
const ::optimizermodule::SwitchControlScheduleProfileList&
RequestedOptimizerScheduleProfile::HasBitSetters::switchcontrolscheduleprofilelist(const RequestedOptimizerScheduleProfile* msg) {
  return *msg->switchcontrolscheduleprofilelist_;
}
void RequestedOptimizerScheduleProfile::clear_optimizationmessageinfo() {
  if (GetArenaNoVirtual() == nullptr && optimizationmessageinfo_ != nullptr) {
    delete optimizationmessageinfo_;
  }
  optimizationmessageinfo_ = nullptr;
}
void RequestedOptimizerScheduleProfile::clear_applicationsystem() {
  if (GetArenaNoVirtual() == nullptr && applicationsystem_ != nullptr) {
    delete applicationsystem_;
  }
  applicationsystem_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RequestedOptimizerScheduleProfile::kOptimizationMessageInfoFieldNumber;
const int RequestedOptimizerScheduleProfile::kApplicationSystemFieldNumber;
const int RequestedOptimizerScheduleProfile::kEssControlScheduleProfileListFieldNumber;
const int RequestedOptimizerScheduleProfile::kGenerationControlScheduleProfileListFieldNumber;
const int RequestedOptimizerScheduleProfile::kLoadControlScheduleProfileListFieldNumber;
const int RequestedOptimizerScheduleProfile::kRegulatorControlScheduleProfileListFieldNumber;
const int RequestedOptimizerScheduleProfile::kRequestedInterconnectionScheduleProfileListFieldNumber;
const int RequestedOptimizerScheduleProfile::kSolarControlScheduleProfileListFieldNumber;
const int RequestedOptimizerScheduleProfile::kSwitchControlScheduleProfileListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RequestedOptimizerScheduleProfile::RequestedOptimizerScheduleProfile()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:optimizermodule.RequestedOptimizerScheduleProfile)
}
RequestedOptimizerScheduleProfile::RequestedOptimizerScheduleProfile(const RequestedOptimizerScheduleProfile& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_optimizationmessageinfo()) {
    optimizationmessageinfo_ = new ::commonmodule::OptimizationMessageInfo(*from.optimizationmessageinfo_);
  } else {
    optimizationmessageinfo_ = nullptr;
  }
  if (from.has_applicationsystem()) {
    applicationsystem_ = new ::commonmodule::ApplicationSystem(*from.applicationsystem_);
  } else {
    applicationsystem_ = nullptr;
  }
  if (from.has_esscontrolscheduleprofilelist()) {
    esscontrolscheduleprofilelist_ = new ::optimizermodule::ESSControlScheduleProfileList(*from.esscontrolscheduleprofilelist_);
  } else {
    esscontrolscheduleprofilelist_ = nullptr;
  }
  if (from.has_generationcontrolscheduleprofilelist()) {
    generationcontrolscheduleprofilelist_ = new ::optimizermodule::GenerationControlScheduleProfileList(*from.generationcontrolscheduleprofilelist_);
  } else {
    generationcontrolscheduleprofilelist_ = nullptr;
  }
  if (from.has_loadcontrolscheduleprofilelist()) {
    loadcontrolscheduleprofilelist_ = new ::optimizermodule::LoadControlScheduleProfileList(*from.loadcontrolscheduleprofilelist_);
  } else {
    loadcontrolscheduleprofilelist_ = nullptr;
  }
  if (from.has_regulatorcontrolscheduleprofilelist()) {
    regulatorcontrolscheduleprofilelist_ = new ::optimizermodule::RegulatorControlScheduleProfileList(*from.regulatorcontrolscheduleprofilelist_);
  } else {
    regulatorcontrolscheduleprofilelist_ = nullptr;
  }
  if (from.has_requestedinterconnectionscheduleprofilelist()) {
    requestedinterconnectionscheduleprofilelist_ = new ::optimizermodule::RequestedInterconnectionScheduleProfileList(*from.requestedinterconnectionscheduleprofilelist_);
  } else {
    requestedinterconnectionscheduleprofilelist_ = nullptr;
  }
  if (from.has_solarcontrolscheduleprofilelist()) {
    solarcontrolscheduleprofilelist_ = new ::optimizermodule::SolarControlScheduleProfileList(*from.solarcontrolscheduleprofilelist_);
  } else {
    solarcontrolscheduleprofilelist_ = nullptr;
  }
  if (from.has_switchcontrolscheduleprofilelist()) {
    switchcontrolscheduleprofilelist_ = new ::optimizermodule::SwitchControlScheduleProfileList(*from.switchcontrolscheduleprofilelist_);
  } else {
    switchcontrolscheduleprofilelist_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:optimizermodule.RequestedOptimizerScheduleProfile)
}

void RequestedOptimizerScheduleProfile::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_RequestedOptimizerScheduleProfile_optimizermodule_2foptimizermodule_2eproto.base);
  ::memset(&optimizationmessageinfo_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&switchcontrolscheduleprofilelist_) -
      reinterpret_cast<char*>(&optimizationmessageinfo_)) + sizeof(switchcontrolscheduleprofilelist_));
}

RequestedOptimizerScheduleProfile::~RequestedOptimizerScheduleProfile() {
  // @@protoc_insertion_point(destructor:optimizermodule.RequestedOptimizerScheduleProfile)
  SharedDtor();
}

void RequestedOptimizerScheduleProfile::SharedDtor() {
  if (this != internal_default_instance()) delete optimizationmessageinfo_;
  if (this != internal_default_instance()) delete applicationsystem_;
  if (this != internal_default_instance()) delete esscontrolscheduleprofilelist_;
  if (this != internal_default_instance()) delete generationcontrolscheduleprofilelist_;
  if (this != internal_default_instance()) delete loadcontrolscheduleprofilelist_;
  if (this != internal_default_instance()) delete regulatorcontrolscheduleprofilelist_;
  if (this != internal_default_instance()) delete requestedinterconnectionscheduleprofilelist_;
  if (this != internal_default_instance()) delete solarcontrolscheduleprofilelist_;
  if (this != internal_default_instance()) delete switchcontrolscheduleprofilelist_;
}

void RequestedOptimizerScheduleProfile::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RequestedOptimizerScheduleProfile& RequestedOptimizerScheduleProfile::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_RequestedOptimizerScheduleProfile_optimizermodule_2foptimizermodule_2eproto.base);
  return *internal_default_instance();
}


void RequestedOptimizerScheduleProfile::Clear() {
// @@protoc_insertion_point(message_clear_start:optimizermodule.RequestedOptimizerScheduleProfile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && optimizationmessageinfo_ != nullptr) {
    delete optimizationmessageinfo_;
  }
  optimizationmessageinfo_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && applicationsystem_ != nullptr) {
    delete applicationsystem_;
  }
  applicationsystem_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && esscontrolscheduleprofilelist_ != nullptr) {
    delete esscontrolscheduleprofilelist_;
  }
  esscontrolscheduleprofilelist_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && generationcontrolscheduleprofilelist_ != nullptr) {
    delete generationcontrolscheduleprofilelist_;
  }
  generationcontrolscheduleprofilelist_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && loadcontrolscheduleprofilelist_ != nullptr) {
    delete loadcontrolscheduleprofilelist_;
  }
  loadcontrolscheduleprofilelist_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && regulatorcontrolscheduleprofilelist_ != nullptr) {
    delete regulatorcontrolscheduleprofilelist_;
  }
  regulatorcontrolscheduleprofilelist_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && requestedinterconnectionscheduleprofilelist_ != nullptr) {
    delete requestedinterconnectionscheduleprofilelist_;
  }
  requestedinterconnectionscheduleprofilelist_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && solarcontrolscheduleprofilelist_ != nullptr) {
    delete solarcontrolscheduleprofilelist_;
  }
  solarcontrolscheduleprofilelist_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && switchcontrolscheduleprofilelist_ != nullptr) {
    delete switchcontrolscheduleprofilelist_;
  }
  switchcontrolscheduleprofilelist_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* RequestedOptimizerScheduleProfile::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<RequestedOptimizerScheduleProfile*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .commonmodule.OptimizationMessageInfo optimizationMessageInfo = 1 [(.uml.option_parent_message) = true];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::OptimizationMessageInfo::_InternalParse;
        object = msg->mutable_optimizationmessageinfo();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .commonmodule.ApplicationSystem applicationSystem = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::commonmodule::ApplicationSystem::_InternalParse;
        object = msg->mutable_applicationsystem();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .optimizermodule.ESSControlScheduleProfileList essControlScheduleProfileList = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::optimizermodule::ESSControlScheduleProfileList::_InternalParse;
        object = msg->mutable_esscontrolscheduleprofilelist();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .optimizermodule.GenerationControlScheduleProfileList generationControlScheduleProfileList = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::optimizermodule::GenerationControlScheduleProfileList::_InternalParse;
        object = msg->mutable_generationcontrolscheduleprofilelist();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .optimizermodule.LoadControlScheduleProfileList loadControlScheduleProfileList = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::optimizermodule::LoadControlScheduleProfileList::_InternalParse;
        object = msg->mutable_loadcontrolscheduleprofilelist();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .optimizermodule.RegulatorControlScheduleProfileList regulatorControlScheduleProfileList = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::optimizermodule::RegulatorControlScheduleProfileList::_InternalParse;
        object = msg->mutable_regulatorcontrolscheduleprofilelist();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .optimizermodule.RequestedInterconnectionScheduleProfileList requestedInterconnectionScheduleProfileList = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::optimizermodule::RequestedInterconnectionScheduleProfileList::_InternalParse;
        object = msg->mutable_requestedinterconnectionscheduleprofilelist();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .optimizermodule.SolarControlScheduleProfileList solarControlScheduleProfileList = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 66) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::optimizermodule::SolarControlScheduleProfileList::_InternalParse;
        object = msg->mutable_solarcontrolscheduleprofilelist();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .optimizermodule.SwitchControlScheduleProfileList switchControlScheduleProfileList = 9;
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) != 74) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::optimizermodule::SwitchControlScheduleProfileList::_InternalParse;
        object = msg->mutable_switchcontrolscheduleprofilelist();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool RequestedOptimizerScheduleProfile::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:optimizermodule.RequestedOptimizerScheduleProfile)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .commonmodule.OptimizationMessageInfo optimizationMessageInfo = 1 [(.uml.option_parent_message) = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_optimizationmessageinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .commonmodule.ApplicationSystem applicationSystem = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_applicationsystem()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .optimizermodule.ESSControlScheduleProfileList essControlScheduleProfileList = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_esscontrolscheduleprofilelist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .optimizermodule.GenerationControlScheduleProfileList generationControlScheduleProfileList = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_generationcontrolscheduleprofilelist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .optimizermodule.LoadControlScheduleProfileList loadControlScheduleProfileList = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_loadcontrolscheduleprofilelist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .optimizermodule.RegulatorControlScheduleProfileList regulatorControlScheduleProfileList = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_regulatorcontrolscheduleprofilelist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .optimizermodule.RequestedInterconnectionScheduleProfileList requestedInterconnectionScheduleProfileList = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_requestedinterconnectionscheduleprofilelist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .optimizermodule.SolarControlScheduleProfileList solarControlScheduleProfileList = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (66 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_solarcontrolscheduleprofilelist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .optimizermodule.SwitchControlScheduleProfileList switchControlScheduleProfileList = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (74 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_switchcontrolscheduleprofilelist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:optimizermodule.RequestedOptimizerScheduleProfile)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:optimizermodule.RequestedOptimizerScheduleProfile)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void RequestedOptimizerScheduleProfile::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:optimizermodule.RequestedOptimizerScheduleProfile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.OptimizationMessageInfo optimizationMessageInfo = 1 [(.uml.option_parent_message) = true];
  if (this->has_optimizationmessageinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::optimizationmessageinfo(this), output);
  }

  // .commonmodule.ApplicationSystem applicationSystem = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_applicationsystem()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::applicationsystem(this), output);
  }

  // .optimizermodule.ESSControlScheduleProfileList essControlScheduleProfileList = 3;
  if (this->has_esscontrolscheduleprofilelist()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::esscontrolscheduleprofilelist(this), output);
  }

  // .optimizermodule.GenerationControlScheduleProfileList generationControlScheduleProfileList = 4;
  if (this->has_generationcontrolscheduleprofilelist()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::generationcontrolscheduleprofilelist(this), output);
  }

  // .optimizermodule.LoadControlScheduleProfileList loadControlScheduleProfileList = 5;
  if (this->has_loadcontrolscheduleprofilelist()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, HasBitSetters::loadcontrolscheduleprofilelist(this), output);
  }

  // .optimizermodule.RegulatorControlScheduleProfileList regulatorControlScheduleProfileList = 6;
  if (this->has_regulatorcontrolscheduleprofilelist()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, HasBitSetters::regulatorcontrolscheduleprofilelist(this), output);
  }

  // .optimizermodule.RequestedInterconnectionScheduleProfileList requestedInterconnectionScheduleProfileList = 7;
  if (this->has_requestedinterconnectionscheduleprofilelist()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, HasBitSetters::requestedinterconnectionscheduleprofilelist(this), output);
  }

  // .optimizermodule.SolarControlScheduleProfileList solarControlScheduleProfileList = 8;
  if (this->has_solarcontrolscheduleprofilelist()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, HasBitSetters::solarcontrolscheduleprofilelist(this), output);
  }

  // .optimizermodule.SwitchControlScheduleProfileList switchControlScheduleProfileList = 9;
  if (this->has_switchcontrolscheduleprofilelist()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, HasBitSetters::switchcontrolscheduleprofilelist(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:optimizermodule.RequestedOptimizerScheduleProfile)
}

::google::protobuf::uint8* RequestedOptimizerScheduleProfile::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:optimizermodule.RequestedOptimizerScheduleProfile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .commonmodule.OptimizationMessageInfo optimizationMessageInfo = 1 [(.uml.option_parent_message) = true];
  if (this->has_optimizationmessageinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::optimizationmessageinfo(this), target);
  }

  // .commonmodule.ApplicationSystem applicationSystem = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_applicationsystem()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::applicationsystem(this), target);
  }

  // .optimizermodule.ESSControlScheduleProfileList essControlScheduleProfileList = 3;
  if (this->has_esscontrolscheduleprofilelist()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::esscontrolscheduleprofilelist(this), target);
  }

  // .optimizermodule.GenerationControlScheduleProfileList generationControlScheduleProfileList = 4;
  if (this->has_generationcontrolscheduleprofilelist()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::generationcontrolscheduleprofilelist(this), target);
  }

  // .optimizermodule.LoadControlScheduleProfileList loadControlScheduleProfileList = 5;
  if (this->has_loadcontrolscheduleprofilelist()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, HasBitSetters::loadcontrolscheduleprofilelist(this), target);
  }

  // .optimizermodule.RegulatorControlScheduleProfileList regulatorControlScheduleProfileList = 6;
  if (this->has_regulatorcontrolscheduleprofilelist()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, HasBitSetters::regulatorcontrolscheduleprofilelist(this), target);
  }

  // .optimizermodule.RequestedInterconnectionScheduleProfileList requestedInterconnectionScheduleProfileList = 7;
  if (this->has_requestedinterconnectionscheduleprofilelist()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, HasBitSetters::requestedinterconnectionscheduleprofilelist(this), target);
  }

  // .optimizermodule.SolarControlScheduleProfileList solarControlScheduleProfileList = 8;
  if (this->has_solarcontrolscheduleprofilelist()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, HasBitSetters::solarcontrolscheduleprofilelist(this), target);
  }

  // .optimizermodule.SwitchControlScheduleProfileList switchControlScheduleProfileList = 9;
  if (this->has_switchcontrolscheduleprofilelist()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, HasBitSetters::switchcontrolscheduleprofilelist(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:optimizermodule.RequestedOptimizerScheduleProfile)
  return target;
}

size_t RequestedOptimizerScheduleProfile::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:optimizermodule.RequestedOptimizerScheduleProfile)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .commonmodule.OptimizationMessageInfo optimizationMessageInfo = 1 [(.uml.option_parent_message) = true];
  if (this->has_optimizationmessageinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *optimizationmessageinfo_);
  }

  // .commonmodule.ApplicationSystem applicationSystem = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if (this->has_applicationsystem()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *applicationsystem_);
  }

  // .optimizermodule.ESSControlScheduleProfileList essControlScheduleProfileList = 3;
  if (this->has_esscontrolscheduleprofilelist()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *esscontrolscheduleprofilelist_);
  }

  // .optimizermodule.GenerationControlScheduleProfileList generationControlScheduleProfileList = 4;
  if (this->has_generationcontrolscheduleprofilelist()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *generationcontrolscheduleprofilelist_);
  }

  // .optimizermodule.LoadControlScheduleProfileList loadControlScheduleProfileList = 5;
  if (this->has_loadcontrolscheduleprofilelist()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *loadcontrolscheduleprofilelist_);
  }

  // .optimizermodule.RegulatorControlScheduleProfileList regulatorControlScheduleProfileList = 6;
  if (this->has_regulatorcontrolscheduleprofilelist()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *regulatorcontrolscheduleprofilelist_);
  }

  // .optimizermodule.RequestedInterconnectionScheduleProfileList requestedInterconnectionScheduleProfileList = 7;
  if (this->has_requestedinterconnectionscheduleprofilelist()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *requestedinterconnectionscheduleprofilelist_);
  }

  // .optimizermodule.SolarControlScheduleProfileList solarControlScheduleProfileList = 8;
  if (this->has_solarcontrolscheduleprofilelist()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *solarcontrolscheduleprofilelist_);
  }

  // .optimizermodule.SwitchControlScheduleProfileList switchControlScheduleProfileList = 9;
  if (this->has_switchcontrolscheduleprofilelist()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *switchcontrolscheduleprofilelist_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RequestedOptimizerScheduleProfile::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:optimizermodule.RequestedOptimizerScheduleProfile)
  GOOGLE_DCHECK_NE(&from, this);
  const RequestedOptimizerScheduleProfile* source =
      ::google::protobuf::DynamicCastToGenerated<RequestedOptimizerScheduleProfile>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:optimizermodule.RequestedOptimizerScheduleProfile)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:optimizermodule.RequestedOptimizerScheduleProfile)
    MergeFrom(*source);
  }
}

void RequestedOptimizerScheduleProfile::MergeFrom(const RequestedOptimizerScheduleProfile& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:optimizermodule.RequestedOptimizerScheduleProfile)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_optimizationmessageinfo()) {
    mutable_optimizationmessageinfo()->::commonmodule::OptimizationMessageInfo::MergeFrom(from.optimizationmessageinfo());
  }
  if (from.has_applicationsystem()) {
    mutable_applicationsystem()->::commonmodule::ApplicationSystem::MergeFrom(from.applicationsystem());
  }
  if (from.has_esscontrolscheduleprofilelist()) {
    mutable_esscontrolscheduleprofilelist()->::optimizermodule::ESSControlScheduleProfileList::MergeFrom(from.esscontrolscheduleprofilelist());
  }
  if (from.has_generationcontrolscheduleprofilelist()) {
    mutable_generationcontrolscheduleprofilelist()->::optimizermodule::GenerationControlScheduleProfileList::MergeFrom(from.generationcontrolscheduleprofilelist());
  }
  if (from.has_loadcontrolscheduleprofilelist()) {
    mutable_loadcontrolscheduleprofilelist()->::optimizermodule::LoadControlScheduleProfileList::MergeFrom(from.loadcontrolscheduleprofilelist());
  }
  if (from.has_regulatorcontrolscheduleprofilelist()) {
    mutable_regulatorcontrolscheduleprofilelist()->::optimizermodule::RegulatorControlScheduleProfileList::MergeFrom(from.regulatorcontrolscheduleprofilelist());
  }
  if (from.has_requestedinterconnectionscheduleprofilelist()) {
    mutable_requestedinterconnectionscheduleprofilelist()->::optimizermodule::RequestedInterconnectionScheduleProfileList::MergeFrom(from.requestedinterconnectionscheduleprofilelist());
  }
  if (from.has_solarcontrolscheduleprofilelist()) {
    mutable_solarcontrolscheduleprofilelist()->::optimizermodule::SolarControlScheduleProfileList::MergeFrom(from.solarcontrolscheduleprofilelist());
  }
  if (from.has_switchcontrolscheduleprofilelist()) {
    mutable_switchcontrolscheduleprofilelist()->::optimizermodule::SwitchControlScheduleProfileList::MergeFrom(from.switchcontrolscheduleprofilelist());
  }
}

void RequestedOptimizerScheduleProfile::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:optimizermodule.RequestedOptimizerScheduleProfile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RequestedOptimizerScheduleProfile::CopyFrom(const RequestedOptimizerScheduleProfile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:optimizermodule.RequestedOptimizerScheduleProfile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestedOptimizerScheduleProfile::IsInitialized() const {
  return true;
}

void RequestedOptimizerScheduleProfile::Swap(RequestedOptimizerScheduleProfile* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RequestedOptimizerScheduleProfile::InternalSwap(RequestedOptimizerScheduleProfile* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(optimizationmessageinfo_, other->optimizationmessageinfo_);
  swap(applicationsystem_, other->applicationsystem_);
  swap(esscontrolscheduleprofilelist_, other->esscontrolscheduleprofilelist_);
  swap(generationcontrolscheduleprofilelist_, other->generationcontrolscheduleprofilelist_);
  swap(loadcontrolscheduleprofilelist_, other->loadcontrolscheduleprofilelist_);
  swap(regulatorcontrolscheduleprofilelist_, other->regulatorcontrolscheduleprofilelist_);
  swap(requestedinterconnectionscheduleprofilelist_, other->requestedinterconnectionscheduleprofilelist_);
  swap(solarcontrolscheduleprofilelist_, other->solarcontrolscheduleprofilelist_);
  swap(switchcontrolscheduleprofilelist_, other->switchcontrolscheduleprofilelist_);
}

::google::protobuf::Metadata RequestedOptimizerScheduleProfile::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_optimizermodule_2foptimizermodule_2eproto);
  return ::file_level_metadata_optimizermodule_2foptimizermodule_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace optimizermodule
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::optimizermodule::RegulatorControlScheduleProfileList* Arena::CreateMaybeMessage< ::optimizermodule::RegulatorControlScheduleProfileList >(Arena* arena) {
  return Arena::CreateInternal< ::optimizermodule::RegulatorControlScheduleProfileList >(arena);
}
template<> PROTOBUF_NOINLINE ::optimizermodule::SolarControlScheduleProfileList* Arena::CreateMaybeMessage< ::optimizermodule::SolarControlScheduleProfileList >(Arena* arena) {
  return Arena::CreateInternal< ::optimizermodule::SolarControlScheduleProfileList >(arena);
}
template<> PROTOBUF_NOINLINE ::optimizermodule::PlannedInterconnectionScheduleProfileList* Arena::CreateMaybeMessage< ::optimizermodule::PlannedInterconnectionScheduleProfileList >(Arena* arena) {
  return Arena::CreateInternal< ::optimizermodule::PlannedInterconnectionScheduleProfileList >(arena);
}
template<> PROTOBUF_NOINLINE ::optimizermodule::LoadControlScheduleProfileList* Arena::CreateMaybeMessage< ::optimizermodule::LoadControlScheduleProfileList >(Arena* arena) {
  return Arena::CreateInternal< ::optimizermodule::LoadControlScheduleProfileList >(arena);
}
template<> PROTOBUF_NOINLINE ::optimizermodule::ESSControlScheduleProfileList* Arena::CreateMaybeMessage< ::optimizermodule::ESSControlScheduleProfileList >(Arena* arena) {
  return Arena::CreateInternal< ::optimizermodule::ESSControlScheduleProfileList >(arena);
}
template<> PROTOBUF_NOINLINE ::optimizermodule::SwitchControlScheduleProfileList* Arena::CreateMaybeMessage< ::optimizermodule::SwitchControlScheduleProfileList >(Arena* arena) {
  return Arena::CreateInternal< ::optimizermodule::SwitchControlScheduleProfileList >(arena);
}
template<> PROTOBUF_NOINLINE ::optimizermodule::GenerationControlScheduleProfileList* Arena::CreateMaybeMessage< ::optimizermodule::GenerationControlScheduleProfileList >(Arena* arena) {
  return Arena::CreateInternal< ::optimizermodule::GenerationControlScheduleProfileList >(arena);
}
template<> PROTOBUF_NOINLINE ::optimizermodule::PlannedOptimizerScheduleProfile* Arena::CreateMaybeMessage< ::optimizermodule::PlannedOptimizerScheduleProfile >(Arena* arena) {
  return Arena::CreateInternal< ::optimizermodule::PlannedOptimizerScheduleProfile >(arena);
}
template<> PROTOBUF_NOINLINE ::optimizermodule::RequestedInterconnectionScheduleProfileList* Arena::CreateMaybeMessage< ::optimizermodule::RequestedInterconnectionScheduleProfileList >(Arena* arena) {
  return Arena::CreateInternal< ::optimizermodule::RequestedInterconnectionScheduleProfileList >(arena);
}
template<> PROTOBUF_NOINLINE ::optimizermodule::RequestedOptimizerScheduleProfile* Arena::CreateMaybeMessage< ::optimizermodule::RequestedOptimizerScheduleProfile >(Arena* arena) {
  return Arena::CreateInternal< ::optimizermodule::RequestedOptimizerScheduleProfile >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
