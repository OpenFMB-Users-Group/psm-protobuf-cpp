// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: optimizermodule/optimizermodule.proto

#ifndef PROTOBUF_INCLUDED_optimizermodule_2foptimizermodule_2eproto
#define PROTOBUF_INCLUDED_optimizermodule_2foptimizermodule_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "uml.pb.h"
#include "regulatormodule/regulatormodule.pb.h"
#include "solarmodule/solarmodule.pb.h"
#include "interconnectionmodule/interconnectionmodule.pb.h"
#include "loadmodule/loadmodule.pb.h"
#include "essmodule/essmodule.pb.h"
#include "switchmodule/switchmodule.pb.h"
#include "generationmodule/generationmodule.pb.h"
#include "commonmodule/commonmodule.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_optimizermodule_2foptimizermodule_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_optimizermodule_2foptimizermodule_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[10]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_optimizermodule_2foptimizermodule_2eproto();
namespace optimizermodule {
class ESSControlScheduleProfileList;
class ESSControlScheduleProfileListDefaultTypeInternal;
extern ESSControlScheduleProfileListDefaultTypeInternal _ESSControlScheduleProfileList_default_instance_;
class GenerationControlScheduleProfileList;
class GenerationControlScheduleProfileListDefaultTypeInternal;
extern GenerationControlScheduleProfileListDefaultTypeInternal _GenerationControlScheduleProfileList_default_instance_;
class LoadControlScheduleProfileList;
class LoadControlScheduleProfileListDefaultTypeInternal;
extern LoadControlScheduleProfileListDefaultTypeInternal _LoadControlScheduleProfileList_default_instance_;
class PlannedInterconnectionScheduleProfileList;
class PlannedInterconnectionScheduleProfileListDefaultTypeInternal;
extern PlannedInterconnectionScheduleProfileListDefaultTypeInternal _PlannedInterconnectionScheduleProfileList_default_instance_;
class PlannedOptimizerScheduleProfile;
class PlannedOptimizerScheduleProfileDefaultTypeInternal;
extern PlannedOptimizerScheduleProfileDefaultTypeInternal _PlannedOptimizerScheduleProfile_default_instance_;
class RegulatorControlScheduleProfileList;
class RegulatorControlScheduleProfileListDefaultTypeInternal;
extern RegulatorControlScheduleProfileListDefaultTypeInternal _RegulatorControlScheduleProfileList_default_instance_;
class RequestedInterconnectionScheduleProfileList;
class RequestedInterconnectionScheduleProfileListDefaultTypeInternal;
extern RequestedInterconnectionScheduleProfileListDefaultTypeInternal _RequestedInterconnectionScheduleProfileList_default_instance_;
class RequestedOptimizerScheduleProfile;
class RequestedOptimizerScheduleProfileDefaultTypeInternal;
extern RequestedOptimizerScheduleProfileDefaultTypeInternal _RequestedOptimizerScheduleProfile_default_instance_;
class SolarControlScheduleProfileList;
class SolarControlScheduleProfileListDefaultTypeInternal;
extern SolarControlScheduleProfileListDefaultTypeInternal _SolarControlScheduleProfileList_default_instance_;
class SwitchControlScheduleProfileList;
class SwitchControlScheduleProfileListDefaultTypeInternal;
extern SwitchControlScheduleProfileListDefaultTypeInternal _SwitchControlScheduleProfileList_default_instance_;
}  // namespace optimizermodule
namespace google {
namespace protobuf {
template<> ::optimizermodule::ESSControlScheduleProfileList* Arena::CreateMaybeMessage<::optimizermodule::ESSControlScheduleProfileList>(Arena*);
template<> ::optimizermodule::GenerationControlScheduleProfileList* Arena::CreateMaybeMessage<::optimizermodule::GenerationControlScheduleProfileList>(Arena*);
template<> ::optimizermodule::LoadControlScheduleProfileList* Arena::CreateMaybeMessage<::optimizermodule::LoadControlScheduleProfileList>(Arena*);
template<> ::optimizermodule::PlannedInterconnectionScheduleProfileList* Arena::CreateMaybeMessage<::optimizermodule::PlannedInterconnectionScheduleProfileList>(Arena*);
template<> ::optimizermodule::PlannedOptimizerScheduleProfile* Arena::CreateMaybeMessage<::optimizermodule::PlannedOptimizerScheduleProfile>(Arena*);
template<> ::optimizermodule::RegulatorControlScheduleProfileList* Arena::CreateMaybeMessage<::optimizermodule::RegulatorControlScheduleProfileList>(Arena*);
template<> ::optimizermodule::RequestedInterconnectionScheduleProfileList* Arena::CreateMaybeMessage<::optimizermodule::RequestedInterconnectionScheduleProfileList>(Arena*);
template<> ::optimizermodule::RequestedOptimizerScheduleProfile* Arena::CreateMaybeMessage<::optimizermodule::RequestedOptimizerScheduleProfile>(Arena*);
template<> ::optimizermodule::SolarControlScheduleProfileList* Arena::CreateMaybeMessage<::optimizermodule::SolarControlScheduleProfileList>(Arena*);
template<> ::optimizermodule::SwitchControlScheduleProfileList* Arena::CreateMaybeMessage<::optimizermodule::SwitchControlScheduleProfileList>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace optimizermodule {

// ===================================================================

class RegulatorControlScheduleProfileList :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:optimizermodule.RegulatorControlScheduleProfileList) */ {
 public:
  RegulatorControlScheduleProfileList();
  virtual ~RegulatorControlScheduleProfileList();

  RegulatorControlScheduleProfileList(const RegulatorControlScheduleProfileList& from);

  inline RegulatorControlScheduleProfileList& operator=(const RegulatorControlScheduleProfileList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RegulatorControlScheduleProfileList(RegulatorControlScheduleProfileList&& from) noexcept
    : RegulatorControlScheduleProfileList() {
    *this = ::std::move(from);
  }

  inline RegulatorControlScheduleProfileList& operator=(RegulatorControlScheduleProfileList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const RegulatorControlScheduleProfileList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RegulatorControlScheduleProfileList* internal_default_instance() {
    return reinterpret_cast<const RegulatorControlScheduleProfileList*>(
               &_RegulatorControlScheduleProfileList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(RegulatorControlScheduleProfileList* other);
  friend void swap(RegulatorControlScheduleProfileList& a, RegulatorControlScheduleProfileList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RegulatorControlScheduleProfileList* New() const final {
    return CreateMaybeMessage<RegulatorControlScheduleProfileList>(nullptr);
  }

  RegulatorControlScheduleProfileList* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RegulatorControlScheduleProfileList>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RegulatorControlScheduleProfileList& from);
  void MergeFrom(const RegulatorControlScheduleProfileList& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RegulatorControlScheduleProfileList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .regulatormodule.RegulatorControlProfile regulatorControlProfile = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  int regulatorcontrolprofile_size() const;
  void clear_regulatorcontrolprofile();
  static const int kRegulatorControlProfileFieldNumber = 1;
  ::regulatormodule::RegulatorControlProfile* mutable_regulatorcontrolprofile(int index);
  ::google::protobuf::RepeatedPtrField< ::regulatormodule::RegulatorControlProfile >*
      mutable_regulatorcontrolprofile();
  const ::regulatormodule::RegulatorControlProfile& regulatorcontrolprofile(int index) const;
  ::regulatormodule::RegulatorControlProfile* add_regulatorcontrolprofile();
  const ::google::protobuf::RepeatedPtrField< ::regulatormodule::RegulatorControlProfile >&
      regulatorcontrolprofile() const;

  // @@protoc_insertion_point(class_scope:optimizermodule.RegulatorControlScheduleProfileList)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::regulatormodule::RegulatorControlProfile > regulatorcontrolprofile_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_optimizermodule_2foptimizermodule_2eproto;
};
// -------------------------------------------------------------------

class SolarControlScheduleProfileList :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:optimizermodule.SolarControlScheduleProfileList) */ {
 public:
  SolarControlScheduleProfileList();
  virtual ~SolarControlScheduleProfileList();

  SolarControlScheduleProfileList(const SolarControlScheduleProfileList& from);

  inline SolarControlScheduleProfileList& operator=(const SolarControlScheduleProfileList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SolarControlScheduleProfileList(SolarControlScheduleProfileList&& from) noexcept
    : SolarControlScheduleProfileList() {
    *this = ::std::move(from);
  }

  inline SolarControlScheduleProfileList& operator=(SolarControlScheduleProfileList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const SolarControlScheduleProfileList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SolarControlScheduleProfileList* internal_default_instance() {
    return reinterpret_cast<const SolarControlScheduleProfileList*>(
               &_SolarControlScheduleProfileList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(SolarControlScheduleProfileList* other);
  friend void swap(SolarControlScheduleProfileList& a, SolarControlScheduleProfileList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SolarControlScheduleProfileList* New() const final {
    return CreateMaybeMessage<SolarControlScheduleProfileList>(nullptr);
  }

  SolarControlScheduleProfileList* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SolarControlScheduleProfileList>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SolarControlScheduleProfileList& from);
  void MergeFrom(const SolarControlScheduleProfileList& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SolarControlScheduleProfileList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .solarmodule.SolarControlProfile solarControlProfile = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  int solarcontrolprofile_size() const;
  void clear_solarcontrolprofile();
  static const int kSolarControlProfileFieldNumber = 1;
  ::solarmodule::SolarControlProfile* mutable_solarcontrolprofile(int index);
  ::google::protobuf::RepeatedPtrField< ::solarmodule::SolarControlProfile >*
      mutable_solarcontrolprofile();
  const ::solarmodule::SolarControlProfile& solarcontrolprofile(int index) const;
  ::solarmodule::SolarControlProfile* add_solarcontrolprofile();
  const ::google::protobuf::RepeatedPtrField< ::solarmodule::SolarControlProfile >&
      solarcontrolprofile() const;

  // @@protoc_insertion_point(class_scope:optimizermodule.SolarControlScheduleProfileList)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::solarmodule::SolarControlProfile > solarcontrolprofile_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_optimizermodule_2foptimizermodule_2eproto;
};
// -------------------------------------------------------------------

class PlannedInterconnectionScheduleProfileList :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:optimizermodule.PlannedInterconnectionScheduleProfileList) */ {
 public:
  PlannedInterconnectionScheduleProfileList();
  virtual ~PlannedInterconnectionScheduleProfileList();

  PlannedInterconnectionScheduleProfileList(const PlannedInterconnectionScheduleProfileList& from);

  inline PlannedInterconnectionScheduleProfileList& operator=(const PlannedInterconnectionScheduleProfileList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlannedInterconnectionScheduleProfileList(PlannedInterconnectionScheduleProfileList&& from) noexcept
    : PlannedInterconnectionScheduleProfileList() {
    *this = ::std::move(from);
  }

  inline PlannedInterconnectionScheduleProfileList& operator=(PlannedInterconnectionScheduleProfileList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PlannedInterconnectionScheduleProfileList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlannedInterconnectionScheduleProfileList* internal_default_instance() {
    return reinterpret_cast<const PlannedInterconnectionScheduleProfileList*>(
               &_PlannedInterconnectionScheduleProfileList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(PlannedInterconnectionScheduleProfileList* other);
  friend void swap(PlannedInterconnectionScheduleProfileList& a, PlannedInterconnectionScheduleProfileList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlannedInterconnectionScheduleProfileList* New() const final {
    return CreateMaybeMessage<PlannedInterconnectionScheduleProfileList>(nullptr);
  }

  PlannedInterconnectionScheduleProfileList* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PlannedInterconnectionScheduleProfileList>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PlannedInterconnectionScheduleProfileList& from);
  void MergeFrom(const PlannedInterconnectionScheduleProfileList& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PlannedInterconnectionScheduleProfileList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .interconnectionmodule.PlannedInterconnectionScheduleProfile plannedInterconnectionScheduleProfile = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  int plannedinterconnectionscheduleprofile_size() const;
  void clear_plannedinterconnectionscheduleprofile();
  static const int kPlannedInterconnectionScheduleProfileFieldNumber = 1;
  ::interconnectionmodule::PlannedInterconnectionScheduleProfile* mutable_plannedinterconnectionscheduleprofile(int index);
  ::google::protobuf::RepeatedPtrField< ::interconnectionmodule::PlannedInterconnectionScheduleProfile >*
      mutable_plannedinterconnectionscheduleprofile();
  const ::interconnectionmodule::PlannedInterconnectionScheduleProfile& plannedinterconnectionscheduleprofile(int index) const;
  ::interconnectionmodule::PlannedInterconnectionScheduleProfile* add_plannedinterconnectionscheduleprofile();
  const ::google::protobuf::RepeatedPtrField< ::interconnectionmodule::PlannedInterconnectionScheduleProfile >&
      plannedinterconnectionscheduleprofile() const;

  // @@protoc_insertion_point(class_scope:optimizermodule.PlannedInterconnectionScheduleProfileList)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::interconnectionmodule::PlannedInterconnectionScheduleProfile > plannedinterconnectionscheduleprofile_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_optimizermodule_2foptimizermodule_2eproto;
};
// -------------------------------------------------------------------

class LoadControlScheduleProfileList :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:optimizermodule.LoadControlScheduleProfileList) */ {
 public:
  LoadControlScheduleProfileList();
  virtual ~LoadControlScheduleProfileList();

  LoadControlScheduleProfileList(const LoadControlScheduleProfileList& from);

  inline LoadControlScheduleProfileList& operator=(const LoadControlScheduleProfileList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LoadControlScheduleProfileList(LoadControlScheduleProfileList&& from) noexcept
    : LoadControlScheduleProfileList() {
    *this = ::std::move(from);
  }

  inline LoadControlScheduleProfileList& operator=(LoadControlScheduleProfileList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const LoadControlScheduleProfileList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LoadControlScheduleProfileList* internal_default_instance() {
    return reinterpret_cast<const LoadControlScheduleProfileList*>(
               &_LoadControlScheduleProfileList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(LoadControlScheduleProfileList* other);
  friend void swap(LoadControlScheduleProfileList& a, LoadControlScheduleProfileList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LoadControlScheduleProfileList* New() const final {
    return CreateMaybeMessage<LoadControlScheduleProfileList>(nullptr);
  }

  LoadControlScheduleProfileList* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LoadControlScheduleProfileList>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LoadControlScheduleProfileList& from);
  void MergeFrom(const LoadControlScheduleProfileList& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LoadControlScheduleProfileList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .loadmodule.LoadControlProfile loadControlProfile = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  int loadcontrolprofile_size() const;
  void clear_loadcontrolprofile();
  static const int kLoadControlProfileFieldNumber = 1;
  ::loadmodule::LoadControlProfile* mutable_loadcontrolprofile(int index);
  ::google::protobuf::RepeatedPtrField< ::loadmodule::LoadControlProfile >*
      mutable_loadcontrolprofile();
  const ::loadmodule::LoadControlProfile& loadcontrolprofile(int index) const;
  ::loadmodule::LoadControlProfile* add_loadcontrolprofile();
  const ::google::protobuf::RepeatedPtrField< ::loadmodule::LoadControlProfile >&
      loadcontrolprofile() const;

  // @@protoc_insertion_point(class_scope:optimizermodule.LoadControlScheduleProfileList)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::loadmodule::LoadControlProfile > loadcontrolprofile_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_optimizermodule_2foptimizermodule_2eproto;
};
// -------------------------------------------------------------------

class ESSControlScheduleProfileList :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:optimizermodule.ESSControlScheduleProfileList) */ {
 public:
  ESSControlScheduleProfileList();
  virtual ~ESSControlScheduleProfileList();

  ESSControlScheduleProfileList(const ESSControlScheduleProfileList& from);

  inline ESSControlScheduleProfileList& operator=(const ESSControlScheduleProfileList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ESSControlScheduleProfileList(ESSControlScheduleProfileList&& from) noexcept
    : ESSControlScheduleProfileList() {
    *this = ::std::move(from);
  }

  inline ESSControlScheduleProfileList& operator=(ESSControlScheduleProfileList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ESSControlScheduleProfileList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ESSControlScheduleProfileList* internal_default_instance() {
    return reinterpret_cast<const ESSControlScheduleProfileList*>(
               &_ESSControlScheduleProfileList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(ESSControlScheduleProfileList* other);
  friend void swap(ESSControlScheduleProfileList& a, ESSControlScheduleProfileList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ESSControlScheduleProfileList* New() const final {
    return CreateMaybeMessage<ESSControlScheduleProfileList>(nullptr);
  }

  ESSControlScheduleProfileList* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ESSControlScheduleProfileList>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ESSControlScheduleProfileList& from);
  void MergeFrom(const ESSControlScheduleProfileList& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ESSControlScheduleProfileList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .essmodule.ESSControlProfile essControlProfile = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  int esscontrolprofile_size() const;
  void clear_esscontrolprofile();
  static const int kEssControlProfileFieldNumber = 1;
  ::essmodule::ESSControlProfile* mutable_esscontrolprofile(int index);
  ::google::protobuf::RepeatedPtrField< ::essmodule::ESSControlProfile >*
      mutable_esscontrolprofile();
  const ::essmodule::ESSControlProfile& esscontrolprofile(int index) const;
  ::essmodule::ESSControlProfile* add_esscontrolprofile();
  const ::google::protobuf::RepeatedPtrField< ::essmodule::ESSControlProfile >&
      esscontrolprofile() const;

  // @@protoc_insertion_point(class_scope:optimizermodule.ESSControlScheduleProfileList)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::essmodule::ESSControlProfile > esscontrolprofile_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_optimizermodule_2foptimizermodule_2eproto;
};
// -------------------------------------------------------------------

class SwitchControlScheduleProfileList :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:optimizermodule.SwitchControlScheduleProfileList) */ {
 public:
  SwitchControlScheduleProfileList();
  virtual ~SwitchControlScheduleProfileList();

  SwitchControlScheduleProfileList(const SwitchControlScheduleProfileList& from);

  inline SwitchControlScheduleProfileList& operator=(const SwitchControlScheduleProfileList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SwitchControlScheduleProfileList(SwitchControlScheduleProfileList&& from) noexcept
    : SwitchControlScheduleProfileList() {
    *this = ::std::move(from);
  }

  inline SwitchControlScheduleProfileList& operator=(SwitchControlScheduleProfileList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const SwitchControlScheduleProfileList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SwitchControlScheduleProfileList* internal_default_instance() {
    return reinterpret_cast<const SwitchControlScheduleProfileList*>(
               &_SwitchControlScheduleProfileList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(SwitchControlScheduleProfileList* other);
  friend void swap(SwitchControlScheduleProfileList& a, SwitchControlScheduleProfileList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SwitchControlScheduleProfileList* New() const final {
    return CreateMaybeMessage<SwitchControlScheduleProfileList>(nullptr);
  }

  SwitchControlScheduleProfileList* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SwitchControlScheduleProfileList>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SwitchControlScheduleProfileList& from);
  void MergeFrom(const SwitchControlScheduleProfileList& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SwitchControlScheduleProfileList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .switchmodule.SwitchControlProfile switchControlProfile = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  int switchcontrolprofile_size() const;
  void clear_switchcontrolprofile();
  static const int kSwitchControlProfileFieldNumber = 1;
  ::switchmodule::SwitchControlProfile* mutable_switchcontrolprofile(int index);
  ::google::protobuf::RepeatedPtrField< ::switchmodule::SwitchControlProfile >*
      mutable_switchcontrolprofile();
  const ::switchmodule::SwitchControlProfile& switchcontrolprofile(int index) const;
  ::switchmodule::SwitchControlProfile* add_switchcontrolprofile();
  const ::google::protobuf::RepeatedPtrField< ::switchmodule::SwitchControlProfile >&
      switchcontrolprofile() const;

  // @@protoc_insertion_point(class_scope:optimizermodule.SwitchControlScheduleProfileList)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::switchmodule::SwitchControlProfile > switchcontrolprofile_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_optimizermodule_2foptimizermodule_2eproto;
};
// -------------------------------------------------------------------

class GenerationControlScheduleProfileList :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:optimizermodule.GenerationControlScheduleProfileList) */ {
 public:
  GenerationControlScheduleProfileList();
  virtual ~GenerationControlScheduleProfileList();

  GenerationControlScheduleProfileList(const GenerationControlScheduleProfileList& from);

  inline GenerationControlScheduleProfileList& operator=(const GenerationControlScheduleProfileList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GenerationControlScheduleProfileList(GenerationControlScheduleProfileList&& from) noexcept
    : GenerationControlScheduleProfileList() {
    *this = ::std::move(from);
  }

  inline GenerationControlScheduleProfileList& operator=(GenerationControlScheduleProfileList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const GenerationControlScheduleProfileList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GenerationControlScheduleProfileList* internal_default_instance() {
    return reinterpret_cast<const GenerationControlScheduleProfileList*>(
               &_GenerationControlScheduleProfileList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(GenerationControlScheduleProfileList* other);
  friend void swap(GenerationControlScheduleProfileList& a, GenerationControlScheduleProfileList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GenerationControlScheduleProfileList* New() const final {
    return CreateMaybeMessage<GenerationControlScheduleProfileList>(nullptr);
  }

  GenerationControlScheduleProfileList* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GenerationControlScheduleProfileList>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GenerationControlScheduleProfileList& from);
  void MergeFrom(const GenerationControlScheduleProfileList& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GenerationControlScheduleProfileList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .generationmodule.GenerationControlProfile generationControlProfile = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  int generationcontrolprofile_size() const;
  void clear_generationcontrolprofile();
  static const int kGenerationControlProfileFieldNumber = 1;
  ::generationmodule::GenerationControlProfile* mutable_generationcontrolprofile(int index);
  ::google::protobuf::RepeatedPtrField< ::generationmodule::GenerationControlProfile >*
      mutable_generationcontrolprofile();
  const ::generationmodule::GenerationControlProfile& generationcontrolprofile(int index) const;
  ::generationmodule::GenerationControlProfile* add_generationcontrolprofile();
  const ::google::protobuf::RepeatedPtrField< ::generationmodule::GenerationControlProfile >&
      generationcontrolprofile() const;

  // @@protoc_insertion_point(class_scope:optimizermodule.GenerationControlScheduleProfileList)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::generationmodule::GenerationControlProfile > generationcontrolprofile_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_optimizermodule_2foptimizermodule_2eproto;
};
// -------------------------------------------------------------------

class PlannedOptimizerScheduleProfile :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:optimizermodule.PlannedOptimizerScheduleProfile) */ {
 public:
  PlannedOptimizerScheduleProfile();
  virtual ~PlannedOptimizerScheduleProfile();

  PlannedOptimizerScheduleProfile(const PlannedOptimizerScheduleProfile& from);

  inline PlannedOptimizerScheduleProfile& operator=(const PlannedOptimizerScheduleProfile& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlannedOptimizerScheduleProfile(PlannedOptimizerScheduleProfile&& from) noexcept
    : PlannedOptimizerScheduleProfile() {
    *this = ::std::move(from);
  }

  inline PlannedOptimizerScheduleProfile& operator=(PlannedOptimizerScheduleProfile&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PlannedOptimizerScheduleProfile& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlannedOptimizerScheduleProfile* internal_default_instance() {
    return reinterpret_cast<const PlannedOptimizerScheduleProfile*>(
               &_PlannedOptimizerScheduleProfile_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(PlannedOptimizerScheduleProfile* other);
  friend void swap(PlannedOptimizerScheduleProfile& a, PlannedOptimizerScheduleProfile& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlannedOptimizerScheduleProfile* New() const final {
    return CreateMaybeMessage<PlannedOptimizerScheduleProfile>(nullptr);
  }

  PlannedOptimizerScheduleProfile* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PlannedOptimizerScheduleProfile>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PlannedOptimizerScheduleProfile& from);
  void MergeFrom(const PlannedOptimizerScheduleProfile& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PlannedOptimizerScheduleProfile* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .commonmodule.OptimizationMessageInfo optimizationMessageInfo = 1 [(.uml.option_parent_message) = true];
  bool has_optimizationmessageinfo() const;
  void clear_optimizationmessageinfo();
  static const int kOptimizationMessageInfoFieldNumber = 1;
  const ::commonmodule::OptimizationMessageInfo& optimizationmessageinfo() const;
  ::commonmodule::OptimizationMessageInfo* release_optimizationmessageinfo();
  ::commonmodule::OptimizationMessageInfo* mutable_optimizationmessageinfo();
  void set_allocated_optimizationmessageinfo(::commonmodule::OptimizationMessageInfo* optimizationmessageinfo);

  // .commonmodule.ApplicationSystem applicationSystem = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  bool has_applicationsystem() const;
  void clear_applicationsystem();
  static const int kApplicationSystemFieldNumber = 2;
  const ::commonmodule::ApplicationSystem& applicationsystem() const;
  ::commonmodule::ApplicationSystem* release_applicationsystem();
  ::commonmodule::ApplicationSystem* mutable_applicationsystem();
  void set_allocated_applicationsystem(::commonmodule::ApplicationSystem* applicationsystem);

  // .optimizermodule.ESSControlScheduleProfileList essControlScheduleProfileList = 3;
  bool has_esscontrolscheduleprofilelist() const;
  void clear_esscontrolscheduleprofilelist();
  static const int kEssControlScheduleProfileListFieldNumber = 3;
  const ::optimizermodule::ESSControlScheduleProfileList& esscontrolscheduleprofilelist() const;
  ::optimizermodule::ESSControlScheduleProfileList* release_esscontrolscheduleprofilelist();
  ::optimizermodule::ESSControlScheduleProfileList* mutable_esscontrolscheduleprofilelist();
  void set_allocated_esscontrolscheduleprofilelist(::optimizermodule::ESSControlScheduleProfileList* esscontrolscheduleprofilelist);

  // .optimizermodule.GenerationControlScheduleProfileList generationControlScheduleProfileList = 4;
  bool has_generationcontrolscheduleprofilelist() const;
  void clear_generationcontrolscheduleprofilelist();
  static const int kGenerationControlScheduleProfileListFieldNumber = 4;
  const ::optimizermodule::GenerationControlScheduleProfileList& generationcontrolscheduleprofilelist() const;
  ::optimizermodule::GenerationControlScheduleProfileList* release_generationcontrolscheduleprofilelist();
  ::optimizermodule::GenerationControlScheduleProfileList* mutable_generationcontrolscheduleprofilelist();
  void set_allocated_generationcontrolscheduleprofilelist(::optimizermodule::GenerationControlScheduleProfileList* generationcontrolscheduleprofilelist);

  // .optimizermodule.LoadControlScheduleProfileList loadControlScheduleProfileList = 5;
  bool has_loadcontrolscheduleprofilelist() const;
  void clear_loadcontrolscheduleprofilelist();
  static const int kLoadControlScheduleProfileListFieldNumber = 5;
  const ::optimizermodule::LoadControlScheduleProfileList& loadcontrolscheduleprofilelist() const;
  ::optimizermodule::LoadControlScheduleProfileList* release_loadcontrolscheduleprofilelist();
  ::optimizermodule::LoadControlScheduleProfileList* mutable_loadcontrolscheduleprofilelist();
  void set_allocated_loadcontrolscheduleprofilelist(::optimizermodule::LoadControlScheduleProfileList* loadcontrolscheduleprofilelist);

  // .optimizermodule.PlannedInterconnectionScheduleProfileList plannedInterconnectionScheduleProfileList = 6;
  bool has_plannedinterconnectionscheduleprofilelist() const;
  void clear_plannedinterconnectionscheduleprofilelist();
  static const int kPlannedInterconnectionScheduleProfileListFieldNumber = 6;
  const ::optimizermodule::PlannedInterconnectionScheduleProfileList& plannedinterconnectionscheduleprofilelist() const;
  ::optimizermodule::PlannedInterconnectionScheduleProfileList* release_plannedinterconnectionscheduleprofilelist();
  ::optimizermodule::PlannedInterconnectionScheduleProfileList* mutable_plannedinterconnectionscheduleprofilelist();
  void set_allocated_plannedinterconnectionscheduleprofilelist(::optimizermodule::PlannedInterconnectionScheduleProfileList* plannedinterconnectionscheduleprofilelist);

  // .optimizermodule.RegulatorControlScheduleProfileList regulatorControlScheduleProfileList = 7;
  bool has_regulatorcontrolscheduleprofilelist() const;
  void clear_regulatorcontrolscheduleprofilelist();
  static const int kRegulatorControlScheduleProfileListFieldNumber = 7;
  const ::optimizermodule::RegulatorControlScheduleProfileList& regulatorcontrolscheduleprofilelist() const;
  ::optimizermodule::RegulatorControlScheduleProfileList* release_regulatorcontrolscheduleprofilelist();
  ::optimizermodule::RegulatorControlScheduleProfileList* mutable_regulatorcontrolscheduleprofilelist();
  void set_allocated_regulatorcontrolscheduleprofilelist(::optimizermodule::RegulatorControlScheduleProfileList* regulatorcontrolscheduleprofilelist);

  // .optimizermodule.SolarControlScheduleProfileList solarControlScheduleProfileList = 8;
  bool has_solarcontrolscheduleprofilelist() const;
  void clear_solarcontrolscheduleprofilelist();
  static const int kSolarControlScheduleProfileListFieldNumber = 8;
  const ::optimizermodule::SolarControlScheduleProfileList& solarcontrolscheduleprofilelist() const;
  ::optimizermodule::SolarControlScheduleProfileList* release_solarcontrolscheduleprofilelist();
  ::optimizermodule::SolarControlScheduleProfileList* mutable_solarcontrolscheduleprofilelist();
  void set_allocated_solarcontrolscheduleprofilelist(::optimizermodule::SolarControlScheduleProfileList* solarcontrolscheduleprofilelist);

  // .optimizermodule.SwitchControlScheduleProfileList switchControlScheduleProfileList = 9;
  bool has_switchcontrolscheduleprofilelist() const;
  void clear_switchcontrolscheduleprofilelist();
  static const int kSwitchControlScheduleProfileListFieldNumber = 9;
  const ::optimizermodule::SwitchControlScheduleProfileList& switchcontrolscheduleprofilelist() const;
  ::optimizermodule::SwitchControlScheduleProfileList* release_switchcontrolscheduleprofilelist();
  ::optimizermodule::SwitchControlScheduleProfileList* mutable_switchcontrolscheduleprofilelist();
  void set_allocated_switchcontrolscheduleprofilelist(::optimizermodule::SwitchControlScheduleProfileList* switchcontrolscheduleprofilelist);

  // @@protoc_insertion_point(class_scope:optimizermodule.PlannedOptimizerScheduleProfile)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::commonmodule::OptimizationMessageInfo* optimizationmessageinfo_;
  ::commonmodule::ApplicationSystem* applicationsystem_;
  ::optimizermodule::ESSControlScheduleProfileList* esscontrolscheduleprofilelist_;
  ::optimizermodule::GenerationControlScheduleProfileList* generationcontrolscheduleprofilelist_;
  ::optimizermodule::LoadControlScheduleProfileList* loadcontrolscheduleprofilelist_;
  ::optimizermodule::PlannedInterconnectionScheduleProfileList* plannedinterconnectionscheduleprofilelist_;
  ::optimizermodule::RegulatorControlScheduleProfileList* regulatorcontrolscheduleprofilelist_;
  ::optimizermodule::SolarControlScheduleProfileList* solarcontrolscheduleprofilelist_;
  ::optimizermodule::SwitchControlScheduleProfileList* switchcontrolscheduleprofilelist_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_optimizermodule_2foptimizermodule_2eproto;
};
// -------------------------------------------------------------------

class RequestedInterconnectionScheduleProfileList :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:optimizermodule.RequestedInterconnectionScheduleProfileList) */ {
 public:
  RequestedInterconnectionScheduleProfileList();
  virtual ~RequestedInterconnectionScheduleProfileList();

  RequestedInterconnectionScheduleProfileList(const RequestedInterconnectionScheduleProfileList& from);

  inline RequestedInterconnectionScheduleProfileList& operator=(const RequestedInterconnectionScheduleProfileList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RequestedInterconnectionScheduleProfileList(RequestedInterconnectionScheduleProfileList&& from) noexcept
    : RequestedInterconnectionScheduleProfileList() {
    *this = ::std::move(from);
  }

  inline RequestedInterconnectionScheduleProfileList& operator=(RequestedInterconnectionScheduleProfileList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const RequestedInterconnectionScheduleProfileList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RequestedInterconnectionScheduleProfileList* internal_default_instance() {
    return reinterpret_cast<const RequestedInterconnectionScheduleProfileList*>(
               &_RequestedInterconnectionScheduleProfileList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(RequestedInterconnectionScheduleProfileList* other);
  friend void swap(RequestedInterconnectionScheduleProfileList& a, RequestedInterconnectionScheduleProfileList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RequestedInterconnectionScheduleProfileList* New() const final {
    return CreateMaybeMessage<RequestedInterconnectionScheduleProfileList>(nullptr);
  }

  RequestedInterconnectionScheduleProfileList* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RequestedInterconnectionScheduleProfileList>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RequestedInterconnectionScheduleProfileList& from);
  void MergeFrom(const RequestedInterconnectionScheduleProfileList& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RequestedInterconnectionScheduleProfileList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .interconnectionmodule.RequestedInterconnectionScheduleProfile requestedInterconnectionScheduleProfile = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  int requestedinterconnectionscheduleprofile_size() const;
  void clear_requestedinterconnectionscheduleprofile();
  static const int kRequestedInterconnectionScheduleProfileFieldNumber = 1;
  ::interconnectionmodule::RequestedInterconnectionScheduleProfile* mutable_requestedinterconnectionscheduleprofile(int index);
  ::google::protobuf::RepeatedPtrField< ::interconnectionmodule::RequestedInterconnectionScheduleProfile >*
      mutable_requestedinterconnectionscheduleprofile();
  const ::interconnectionmodule::RequestedInterconnectionScheduleProfile& requestedinterconnectionscheduleprofile(int index) const;
  ::interconnectionmodule::RequestedInterconnectionScheduleProfile* add_requestedinterconnectionscheduleprofile();
  const ::google::protobuf::RepeatedPtrField< ::interconnectionmodule::RequestedInterconnectionScheduleProfile >&
      requestedinterconnectionscheduleprofile() const;

  // @@protoc_insertion_point(class_scope:optimizermodule.RequestedInterconnectionScheduleProfileList)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::interconnectionmodule::RequestedInterconnectionScheduleProfile > requestedinterconnectionscheduleprofile_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_optimizermodule_2foptimizermodule_2eproto;
};
// -------------------------------------------------------------------

class RequestedOptimizerScheduleProfile :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:optimizermodule.RequestedOptimizerScheduleProfile) */ {
 public:
  RequestedOptimizerScheduleProfile();
  virtual ~RequestedOptimizerScheduleProfile();

  RequestedOptimizerScheduleProfile(const RequestedOptimizerScheduleProfile& from);

  inline RequestedOptimizerScheduleProfile& operator=(const RequestedOptimizerScheduleProfile& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RequestedOptimizerScheduleProfile(RequestedOptimizerScheduleProfile&& from) noexcept
    : RequestedOptimizerScheduleProfile() {
    *this = ::std::move(from);
  }

  inline RequestedOptimizerScheduleProfile& operator=(RequestedOptimizerScheduleProfile&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const RequestedOptimizerScheduleProfile& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RequestedOptimizerScheduleProfile* internal_default_instance() {
    return reinterpret_cast<const RequestedOptimizerScheduleProfile*>(
               &_RequestedOptimizerScheduleProfile_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(RequestedOptimizerScheduleProfile* other);
  friend void swap(RequestedOptimizerScheduleProfile& a, RequestedOptimizerScheduleProfile& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RequestedOptimizerScheduleProfile* New() const final {
    return CreateMaybeMessage<RequestedOptimizerScheduleProfile>(nullptr);
  }

  RequestedOptimizerScheduleProfile* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RequestedOptimizerScheduleProfile>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RequestedOptimizerScheduleProfile& from);
  void MergeFrom(const RequestedOptimizerScheduleProfile& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RequestedOptimizerScheduleProfile* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .commonmodule.OptimizationMessageInfo optimizationMessageInfo = 1 [(.uml.option_parent_message) = true];
  bool has_optimizationmessageinfo() const;
  void clear_optimizationmessageinfo();
  static const int kOptimizationMessageInfoFieldNumber = 1;
  const ::commonmodule::OptimizationMessageInfo& optimizationmessageinfo() const;
  ::commonmodule::OptimizationMessageInfo* release_optimizationmessageinfo();
  ::commonmodule::OptimizationMessageInfo* mutable_optimizationmessageinfo();
  void set_allocated_optimizationmessageinfo(::commonmodule::OptimizationMessageInfo* optimizationmessageinfo);

  // .commonmodule.ApplicationSystem applicationSystem = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  bool has_applicationsystem() const;
  void clear_applicationsystem();
  static const int kApplicationSystemFieldNumber = 2;
  const ::commonmodule::ApplicationSystem& applicationsystem() const;
  ::commonmodule::ApplicationSystem* release_applicationsystem();
  ::commonmodule::ApplicationSystem* mutable_applicationsystem();
  void set_allocated_applicationsystem(::commonmodule::ApplicationSystem* applicationsystem);

  // .optimizermodule.ESSControlScheduleProfileList essControlScheduleProfileList = 3;
  bool has_esscontrolscheduleprofilelist() const;
  void clear_esscontrolscheduleprofilelist();
  static const int kEssControlScheduleProfileListFieldNumber = 3;
  const ::optimizermodule::ESSControlScheduleProfileList& esscontrolscheduleprofilelist() const;
  ::optimizermodule::ESSControlScheduleProfileList* release_esscontrolscheduleprofilelist();
  ::optimizermodule::ESSControlScheduleProfileList* mutable_esscontrolscheduleprofilelist();
  void set_allocated_esscontrolscheduleprofilelist(::optimizermodule::ESSControlScheduleProfileList* esscontrolscheduleprofilelist);

  // .optimizermodule.GenerationControlScheduleProfileList generationControlScheduleProfileList = 4;
  bool has_generationcontrolscheduleprofilelist() const;
  void clear_generationcontrolscheduleprofilelist();
  static const int kGenerationControlScheduleProfileListFieldNumber = 4;
  const ::optimizermodule::GenerationControlScheduleProfileList& generationcontrolscheduleprofilelist() const;
  ::optimizermodule::GenerationControlScheduleProfileList* release_generationcontrolscheduleprofilelist();
  ::optimizermodule::GenerationControlScheduleProfileList* mutable_generationcontrolscheduleprofilelist();
  void set_allocated_generationcontrolscheduleprofilelist(::optimizermodule::GenerationControlScheduleProfileList* generationcontrolscheduleprofilelist);

  // .optimizermodule.LoadControlScheduleProfileList loadControlScheduleProfileList = 5;
  bool has_loadcontrolscheduleprofilelist() const;
  void clear_loadcontrolscheduleprofilelist();
  static const int kLoadControlScheduleProfileListFieldNumber = 5;
  const ::optimizermodule::LoadControlScheduleProfileList& loadcontrolscheduleprofilelist() const;
  ::optimizermodule::LoadControlScheduleProfileList* release_loadcontrolscheduleprofilelist();
  ::optimizermodule::LoadControlScheduleProfileList* mutable_loadcontrolscheduleprofilelist();
  void set_allocated_loadcontrolscheduleprofilelist(::optimizermodule::LoadControlScheduleProfileList* loadcontrolscheduleprofilelist);

  // .optimizermodule.RegulatorControlScheduleProfileList regulatorControlScheduleProfileList = 6;
  bool has_regulatorcontrolscheduleprofilelist() const;
  void clear_regulatorcontrolscheduleprofilelist();
  static const int kRegulatorControlScheduleProfileListFieldNumber = 6;
  const ::optimizermodule::RegulatorControlScheduleProfileList& regulatorcontrolscheduleprofilelist() const;
  ::optimizermodule::RegulatorControlScheduleProfileList* release_regulatorcontrolscheduleprofilelist();
  ::optimizermodule::RegulatorControlScheduleProfileList* mutable_regulatorcontrolscheduleprofilelist();
  void set_allocated_regulatorcontrolscheduleprofilelist(::optimizermodule::RegulatorControlScheduleProfileList* regulatorcontrolscheduleprofilelist);

  // .optimizermodule.RequestedInterconnectionScheduleProfileList requestedInterconnectionScheduleProfileList = 7;
  bool has_requestedinterconnectionscheduleprofilelist() const;
  void clear_requestedinterconnectionscheduleprofilelist();
  static const int kRequestedInterconnectionScheduleProfileListFieldNumber = 7;
  const ::optimizermodule::RequestedInterconnectionScheduleProfileList& requestedinterconnectionscheduleprofilelist() const;
  ::optimizermodule::RequestedInterconnectionScheduleProfileList* release_requestedinterconnectionscheduleprofilelist();
  ::optimizermodule::RequestedInterconnectionScheduleProfileList* mutable_requestedinterconnectionscheduleprofilelist();
  void set_allocated_requestedinterconnectionscheduleprofilelist(::optimizermodule::RequestedInterconnectionScheduleProfileList* requestedinterconnectionscheduleprofilelist);

  // .optimizermodule.SolarControlScheduleProfileList solarControlScheduleProfileList = 8;
  bool has_solarcontrolscheduleprofilelist() const;
  void clear_solarcontrolscheduleprofilelist();
  static const int kSolarControlScheduleProfileListFieldNumber = 8;
  const ::optimizermodule::SolarControlScheduleProfileList& solarcontrolscheduleprofilelist() const;
  ::optimizermodule::SolarControlScheduleProfileList* release_solarcontrolscheduleprofilelist();
  ::optimizermodule::SolarControlScheduleProfileList* mutable_solarcontrolscheduleprofilelist();
  void set_allocated_solarcontrolscheduleprofilelist(::optimizermodule::SolarControlScheduleProfileList* solarcontrolscheduleprofilelist);

  // .optimizermodule.SwitchControlScheduleProfileList switchControlScheduleProfileList = 9;
  bool has_switchcontrolscheduleprofilelist() const;
  void clear_switchcontrolscheduleprofilelist();
  static const int kSwitchControlScheduleProfileListFieldNumber = 9;
  const ::optimizermodule::SwitchControlScheduleProfileList& switchcontrolscheduleprofilelist() const;
  ::optimizermodule::SwitchControlScheduleProfileList* release_switchcontrolscheduleprofilelist();
  ::optimizermodule::SwitchControlScheduleProfileList* mutable_switchcontrolscheduleprofilelist();
  void set_allocated_switchcontrolscheduleprofilelist(::optimizermodule::SwitchControlScheduleProfileList* switchcontrolscheduleprofilelist);

  // @@protoc_insertion_point(class_scope:optimizermodule.RequestedOptimizerScheduleProfile)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::commonmodule::OptimizationMessageInfo* optimizationmessageinfo_;
  ::commonmodule::ApplicationSystem* applicationsystem_;
  ::optimizermodule::ESSControlScheduleProfileList* esscontrolscheduleprofilelist_;
  ::optimizermodule::GenerationControlScheduleProfileList* generationcontrolscheduleprofilelist_;
  ::optimizermodule::LoadControlScheduleProfileList* loadcontrolscheduleprofilelist_;
  ::optimizermodule::RegulatorControlScheduleProfileList* regulatorcontrolscheduleprofilelist_;
  ::optimizermodule::RequestedInterconnectionScheduleProfileList* requestedinterconnectionscheduleprofilelist_;
  ::optimizermodule::SolarControlScheduleProfileList* solarcontrolscheduleprofilelist_;
  ::optimizermodule::SwitchControlScheduleProfileList* switchcontrolscheduleprofilelist_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_optimizermodule_2foptimizermodule_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// RegulatorControlScheduleProfileList

// repeated .regulatormodule.RegulatorControlProfile regulatorControlProfile = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
inline int RegulatorControlScheduleProfileList::regulatorcontrolprofile_size() const {
  return regulatorcontrolprofile_.size();
}
inline ::regulatormodule::RegulatorControlProfile* RegulatorControlScheduleProfileList::mutable_regulatorcontrolprofile(int index) {
  // @@protoc_insertion_point(field_mutable:optimizermodule.RegulatorControlScheduleProfileList.regulatorControlProfile)
  return regulatorcontrolprofile_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::regulatormodule::RegulatorControlProfile >*
RegulatorControlScheduleProfileList::mutable_regulatorcontrolprofile() {
  // @@protoc_insertion_point(field_mutable_list:optimizermodule.RegulatorControlScheduleProfileList.regulatorControlProfile)
  return &regulatorcontrolprofile_;
}
inline const ::regulatormodule::RegulatorControlProfile& RegulatorControlScheduleProfileList::regulatorcontrolprofile(int index) const {
  // @@protoc_insertion_point(field_get:optimizermodule.RegulatorControlScheduleProfileList.regulatorControlProfile)
  return regulatorcontrolprofile_.Get(index);
}
inline ::regulatormodule::RegulatorControlProfile* RegulatorControlScheduleProfileList::add_regulatorcontrolprofile() {
  // @@protoc_insertion_point(field_add:optimizermodule.RegulatorControlScheduleProfileList.regulatorControlProfile)
  return regulatorcontrolprofile_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::regulatormodule::RegulatorControlProfile >&
RegulatorControlScheduleProfileList::regulatorcontrolprofile() const {
  // @@protoc_insertion_point(field_list:optimizermodule.RegulatorControlScheduleProfileList.regulatorControlProfile)
  return regulatorcontrolprofile_;
}

// -------------------------------------------------------------------

// SolarControlScheduleProfileList

// repeated .solarmodule.SolarControlProfile solarControlProfile = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
inline int SolarControlScheduleProfileList::solarcontrolprofile_size() const {
  return solarcontrolprofile_.size();
}
inline ::solarmodule::SolarControlProfile* SolarControlScheduleProfileList::mutable_solarcontrolprofile(int index) {
  // @@protoc_insertion_point(field_mutable:optimizermodule.SolarControlScheduleProfileList.solarControlProfile)
  return solarcontrolprofile_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::solarmodule::SolarControlProfile >*
SolarControlScheduleProfileList::mutable_solarcontrolprofile() {
  // @@protoc_insertion_point(field_mutable_list:optimizermodule.SolarControlScheduleProfileList.solarControlProfile)
  return &solarcontrolprofile_;
}
inline const ::solarmodule::SolarControlProfile& SolarControlScheduleProfileList::solarcontrolprofile(int index) const {
  // @@protoc_insertion_point(field_get:optimizermodule.SolarControlScheduleProfileList.solarControlProfile)
  return solarcontrolprofile_.Get(index);
}
inline ::solarmodule::SolarControlProfile* SolarControlScheduleProfileList::add_solarcontrolprofile() {
  // @@protoc_insertion_point(field_add:optimizermodule.SolarControlScheduleProfileList.solarControlProfile)
  return solarcontrolprofile_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::solarmodule::SolarControlProfile >&
SolarControlScheduleProfileList::solarcontrolprofile() const {
  // @@protoc_insertion_point(field_list:optimizermodule.SolarControlScheduleProfileList.solarControlProfile)
  return solarcontrolprofile_;
}

// -------------------------------------------------------------------

// PlannedInterconnectionScheduleProfileList

// repeated .interconnectionmodule.PlannedInterconnectionScheduleProfile plannedInterconnectionScheduleProfile = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
inline int PlannedInterconnectionScheduleProfileList::plannedinterconnectionscheduleprofile_size() const {
  return plannedinterconnectionscheduleprofile_.size();
}
inline ::interconnectionmodule::PlannedInterconnectionScheduleProfile* PlannedInterconnectionScheduleProfileList::mutable_plannedinterconnectionscheduleprofile(int index) {
  // @@protoc_insertion_point(field_mutable:optimizermodule.PlannedInterconnectionScheduleProfileList.plannedInterconnectionScheduleProfile)
  return plannedinterconnectionscheduleprofile_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::interconnectionmodule::PlannedInterconnectionScheduleProfile >*
PlannedInterconnectionScheduleProfileList::mutable_plannedinterconnectionscheduleprofile() {
  // @@protoc_insertion_point(field_mutable_list:optimizermodule.PlannedInterconnectionScheduleProfileList.plannedInterconnectionScheduleProfile)
  return &plannedinterconnectionscheduleprofile_;
}
inline const ::interconnectionmodule::PlannedInterconnectionScheduleProfile& PlannedInterconnectionScheduleProfileList::plannedinterconnectionscheduleprofile(int index) const {
  // @@protoc_insertion_point(field_get:optimizermodule.PlannedInterconnectionScheduleProfileList.plannedInterconnectionScheduleProfile)
  return plannedinterconnectionscheduleprofile_.Get(index);
}
inline ::interconnectionmodule::PlannedInterconnectionScheduleProfile* PlannedInterconnectionScheduleProfileList::add_plannedinterconnectionscheduleprofile() {
  // @@protoc_insertion_point(field_add:optimizermodule.PlannedInterconnectionScheduleProfileList.plannedInterconnectionScheduleProfile)
  return plannedinterconnectionscheduleprofile_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::interconnectionmodule::PlannedInterconnectionScheduleProfile >&
PlannedInterconnectionScheduleProfileList::plannedinterconnectionscheduleprofile() const {
  // @@protoc_insertion_point(field_list:optimizermodule.PlannedInterconnectionScheduleProfileList.plannedInterconnectionScheduleProfile)
  return plannedinterconnectionscheduleprofile_;
}

// -------------------------------------------------------------------

// LoadControlScheduleProfileList

// repeated .loadmodule.LoadControlProfile loadControlProfile = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
inline int LoadControlScheduleProfileList::loadcontrolprofile_size() const {
  return loadcontrolprofile_.size();
}
inline ::loadmodule::LoadControlProfile* LoadControlScheduleProfileList::mutable_loadcontrolprofile(int index) {
  // @@protoc_insertion_point(field_mutable:optimizermodule.LoadControlScheduleProfileList.loadControlProfile)
  return loadcontrolprofile_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::loadmodule::LoadControlProfile >*
LoadControlScheduleProfileList::mutable_loadcontrolprofile() {
  // @@protoc_insertion_point(field_mutable_list:optimizermodule.LoadControlScheduleProfileList.loadControlProfile)
  return &loadcontrolprofile_;
}
inline const ::loadmodule::LoadControlProfile& LoadControlScheduleProfileList::loadcontrolprofile(int index) const {
  // @@protoc_insertion_point(field_get:optimizermodule.LoadControlScheduleProfileList.loadControlProfile)
  return loadcontrolprofile_.Get(index);
}
inline ::loadmodule::LoadControlProfile* LoadControlScheduleProfileList::add_loadcontrolprofile() {
  // @@protoc_insertion_point(field_add:optimizermodule.LoadControlScheduleProfileList.loadControlProfile)
  return loadcontrolprofile_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::loadmodule::LoadControlProfile >&
LoadControlScheduleProfileList::loadcontrolprofile() const {
  // @@protoc_insertion_point(field_list:optimizermodule.LoadControlScheduleProfileList.loadControlProfile)
  return loadcontrolprofile_;
}

// -------------------------------------------------------------------

// ESSControlScheduleProfileList

// repeated .essmodule.ESSControlProfile essControlProfile = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
inline int ESSControlScheduleProfileList::esscontrolprofile_size() const {
  return esscontrolprofile_.size();
}
inline ::essmodule::ESSControlProfile* ESSControlScheduleProfileList::mutable_esscontrolprofile(int index) {
  // @@protoc_insertion_point(field_mutable:optimizermodule.ESSControlScheduleProfileList.essControlProfile)
  return esscontrolprofile_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::essmodule::ESSControlProfile >*
ESSControlScheduleProfileList::mutable_esscontrolprofile() {
  // @@protoc_insertion_point(field_mutable_list:optimizermodule.ESSControlScheduleProfileList.essControlProfile)
  return &esscontrolprofile_;
}
inline const ::essmodule::ESSControlProfile& ESSControlScheduleProfileList::esscontrolprofile(int index) const {
  // @@protoc_insertion_point(field_get:optimizermodule.ESSControlScheduleProfileList.essControlProfile)
  return esscontrolprofile_.Get(index);
}
inline ::essmodule::ESSControlProfile* ESSControlScheduleProfileList::add_esscontrolprofile() {
  // @@protoc_insertion_point(field_add:optimizermodule.ESSControlScheduleProfileList.essControlProfile)
  return esscontrolprofile_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::essmodule::ESSControlProfile >&
ESSControlScheduleProfileList::esscontrolprofile() const {
  // @@protoc_insertion_point(field_list:optimizermodule.ESSControlScheduleProfileList.essControlProfile)
  return esscontrolprofile_;
}

// -------------------------------------------------------------------

// SwitchControlScheduleProfileList

// repeated .switchmodule.SwitchControlProfile switchControlProfile = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
inline int SwitchControlScheduleProfileList::switchcontrolprofile_size() const {
  return switchcontrolprofile_.size();
}
inline ::switchmodule::SwitchControlProfile* SwitchControlScheduleProfileList::mutable_switchcontrolprofile(int index) {
  // @@protoc_insertion_point(field_mutable:optimizermodule.SwitchControlScheduleProfileList.switchControlProfile)
  return switchcontrolprofile_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::switchmodule::SwitchControlProfile >*
SwitchControlScheduleProfileList::mutable_switchcontrolprofile() {
  // @@protoc_insertion_point(field_mutable_list:optimizermodule.SwitchControlScheduleProfileList.switchControlProfile)
  return &switchcontrolprofile_;
}
inline const ::switchmodule::SwitchControlProfile& SwitchControlScheduleProfileList::switchcontrolprofile(int index) const {
  // @@protoc_insertion_point(field_get:optimizermodule.SwitchControlScheduleProfileList.switchControlProfile)
  return switchcontrolprofile_.Get(index);
}
inline ::switchmodule::SwitchControlProfile* SwitchControlScheduleProfileList::add_switchcontrolprofile() {
  // @@protoc_insertion_point(field_add:optimizermodule.SwitchControlScheduleProfileList.switchControlProfile)
  return switchcontrolprofile_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::switchmodule::SwitchControlProfile >&
SwitchControlScheduleProfileList::switchcontrolprofile() const {
  // @@protoc_insertion_point(field_list:optimizermodule.SwitchControlScheduleProfileList.switchControlProfile)
  return switchcontrolprofile_;
}

// -------------------------------------------------------------------

// GenerationControlScheduleProfileList

// repeated .generationmodule.GenerationControlProfile generationControlProfile = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
inline int GenerationControlScheduleProfileList::generationcontrolprofile_size() const {
  return generationcontrolprofile_.size();
}
inline ::generationmodule::GenerationControlProfile* GenerationControlScheduleProfileList::mutable_generationcontrolprofile(int index) {
  // @@protoc_insertion_point(field_mutable:optimizermodule.GenerationControlScheduleProfileList.generationControlProfile)
  return generationcontrolprofile_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::generationmodule::GenerationControlProfile >*
GenerationControlScheduleProfileList::mutable_generationcontrolprofile() {
  // @@protoc_insertion_point(field_mutable_list:optimizermodule.GenerationControlScheduleProfileList.generationControlProfile)
  return &generationcontrolprofile_;
}
inline const ::generationmodule::GenerationControlProfile& GenerationControlScheduleProfileList::generationcontrolprofile(int index) const {
  // @@protoc_insertion_point(field_get:optimizermodule.GenerationControlScheduleProfileList.generationControlProfile)
  return generationcontrolprofile_.Get(index);
}
inline ::generationmodule::GenerationControlProfile* GenerationControlScheduleProfileList::add_generationcontrolprofile() {
  // @@protoc_insertion_point(field_add:optimizermodule.GenerationControlScheduleProfileList.generationControlProfile)
  return generationcontrolprofile_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::generationmodule::GenerationControlProfile >&
GenerationControlScheduleProfileList::generationcontrolprofile() const {
  // @@protoc_insertion_point(field_list:optimizermodule.GenerationControlScheduleProfileList.generationControlProfile)
  return generationcontrolprofile_;
}

// -------------------------------------------------------------------

// PlannedOptimizerScheduleProfile

// .commonmodule.OptimizationMessageInfo optimizationMessageInfo = 1 [(.uml.option_parent_message) = true];
inline bool PlannedOptimizerScheduleProfile::has_optimizationmessageinfo() const {
  return this != internal_default_instance() && optimizationmessageinfo_ != nullptr;
}
inline const ::commonmodule::OptimizationMessageInfo& PlannedOptimizerScheduleProfile::optimizationmessageinfo() const {
  const ::commonmodule::OptimizationMessageInfo* p = optimizationmessageinfo_;
  // @@protoc_insertion_point(field_get:optimizermodule.PlannedOptimizerScheduleProfile.optimizationMessageInfo)
  return p != nullptr ? *p : *reinterpret_cast<const ::commonmodule::OptimizationMessageInfo*>(
      &::commonmodule::_OptimizationMessageInfo_default_instance_);
}
inline ::commonmodule::OptimizationMessageInfo* PlannedOptimizerScheduleProfile::release_optimizationmessageinfo() {
  // @@protoc_insertion_point(field_release:optimizermodule.PlannedOptimizerScheduleProfile.optimizationMessageInfo)
  
  ::commonmodule::OptimizationMessageInfo* temp = optimizationmessageinfo_;
  optimizationmessageinfo_ = nullptr;
  return temp;
}
inline ::commonmodule::OptimizationMessageInfo* PlannedOptimizerScheduleProfile::mutable_optimizationmessageinfo() {
  
  if (optimizationmessageinfo_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::OptimizationMessageInfo>(GetArenaNoVirtual());
    optimizationmessageinfo_ = p;
  }
  // @@protoc_insertion_point(field_mutable:optimizermodule.PlannedOptimizerScheduleProfile.optimizationMessageInfo)
  return optimizationmessageinfo_;
}
inline void PlannedOptimizerScheduleProfile::set_allocated_optimizationmessageinfo(::commonmodule::OptimizationMessageInfo* optimizationmessageinfo) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(optimizationmessageinfo_);
  }
  if (optimizationmessageinfo) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      optimizationmessageinfo = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, optimizationmessageinfo, submessage_arena);
    }
    
  } else {
    
  }
  optimizationmessageinfo_ = optimizationmessageinfo;
  // @@protoc_insertion_point(field_set_allocated:optimizermodule.PlannedOptimizerScheduleProfile.optimizationMessageInfo)
}

// .commonmodule.ApplicationSystem applicationSystem = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
inline bool PlannedOptimizerScheduleProfile::has_applicationsystem() const {
  return this != internal_default_instance() && applicationsystem_ != nullptr;
}
inline const ::commonmodule::ApplicationSystem& PlannedOptimizerScheduleProfile::applicationsystem() const {
  const ::commonmodule::ApplicationSystem* p = applicationsystem_;
  // @@protoc_insertion_point(field_get:optimizermodule.PlannedOptimizerScheduleProfile.applicationSystem)
  return p != nullptr ? *p : *reinterpret_cast<const ::commonmodule::ApplicationSystem*>(
      &::commonmodule::_ApplicationSystem_default_instance_);
}
inline ::commonmodule::ApplicationSystem* PlannedOptimizerScheduleProfile::release_applicationsystem() {
  // @@protoc_insertion_point(field_release:optimizermodule.PlannedOptimizerScheduleProfile.applicationSystem)
  
  ::commonmodule::ApplicationSystem* temp = applicationsystem_;
  applicationsystem_ = nullptr;
  return temp;
}
inline ::commonmodule::ApplicationSystem* PlannedOptimizerScheduleProfile::mutable_applicationsystem() {
  
  if (applicationsystem_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::ApplicationSystem>(GetArenaNoVirtual());
    applicationsystem_ = p;
  }
  // @@protoc_insertion_point(field_mutable:optimizermodule.PlannedOptimizerScheduleProfile.applicationSystem)
  return applicationsystem_;
}
inline void PlannedOptimizerScheduleProfile::set_allocated_applicationsystem(::commonmodule::ApplicationSystem* applicationsystem) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(applicationsystem_);
  }
  if (applicationsystem) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      applicationsystem = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, applicationsystem, submessage_arena);
    }
    
  } else {
    
  }
  applicationsystem_ = applicationsystem;
  // @@protoc_insertion_point(field_set_allocated:optimizermodule.PlannedOptimizerScheduleProfile.applicationSystem)
}

// .optimizermodule.ESSControlScheduleProfileList essControlScheduleProfileList = 3;
inline bool PlannedOptimizerScheduleProfile::has_esscontrolscheduleprofilelist() const {
  return this != internal_default_instance() && esscontrolscheduleprofilelist_ != nullptr;
}
inline void PlannedOptimizerScheduleProfile::clear_esscontrolscheduleprofilelist() {
  if (GetArenaNoVirtual() == nullptr && esscontrolscheduleprofilelist_ != nullptr) {
    delete esscontrolscheduleprofilelist_;
  }
  esscontrolscheduleprofilelist_ = nullptr;
}
inline const ::optimizermodule::ESSControlScheduleProfileList& PlannedOptimizerScheduleProfile::esscontrolscheduleprofilelist() const {
  const ::optimizermodule::ESSControlScheduleProfileList* p = esscontrolscheduleprofilelist_;
  // @@protoc_insertion_point(field_get:optimizermodule.PlannedOptimizerScheduleProfile.essControlScheduleProfileList)
  return p != nullptr ? *p : *reinterpret_cast<const ::optimizermodule::ESSControlScheduleProfileList*>(
      &::optimizermodule::_ESSControlScheduleProfileList_default_instance_);
}
inline ::optimizermodule::ESSControlScheduleProfileList* PlannedOptimizerScheduleProfile::release_esscontrolscheduleprofilelist() {
  // @@protoc_insertion_point(field_release:optimizermodule.PlannedOptimizerScheduleProfile.essControlScheduleProfileList)
  
  ::optimizermodule::ESSControlScheduleProfileList* temp = esscontrolscheduleprofilelist_;
  esscontrolscheduleprofilelist_ = nullptr;
  return temp;
}
inline ::optimizermodule::ESSControlScheduleProfileList* PlannedOptimizerScheduleProfile::mutable_esscontrolscheduleprofilelist() {
  
  if (esscontrolscheduleprofilelist_ == nullptr) {
    auto* p = CreateMaybeMessage<::optimizermodule::ESSControlScheduleProfileList>(GetArenaNoVirtual());
    esscontrolscheduleprofilelist_ = p;
  }
  // @@protoc_insertion_point(field_mutable:optimizermodule.PlannedOptimizerScheduleProfile.essControlScheduleProfileList)
  return esscontrolscheduleprofilelist_;
}
inline void PlannedOptimizerScheduleProfile::set_allocated_esscontrolscheduleprofilelist(::optimizermodule::ESSControlScheduleProfileList* esscontrolscheduleprofilelist) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete esscontrolscheduleprofilelist_;
  }
  if (esscontrolscheduleprofilelist) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      esscontrolscheduleprofilelist = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, esscontrolscheduleprofilelist, submessage_arena);
    }
    
  } else {
    
  }
  esscontrolscheduleprofilelist_ = esscontrolscheduleprofilelist;
  // @@protoc_insertion_point(field_set_allocated:optimizermodule.PlannedOptimizerScheduleProfile.essControlScheduleProfileList)
}

// .optimizermodule.GenerationControlScheduleProfileList generationControlScheduleProfileList = 4;
inline bool PlannedOptimizerScheduleProfile::has_generationcontrolscheduleprofilelist() const {
  return this != internal_default_instance() && generationcontrolscheduleprofilelist_ != nullptr;
}
inline void PlannedOptimizerScheduleProfile::clear_generationcontrolscheduleprofilelist() {
  if (GetArenaNoVirtual() == nullptr && generationcontrolscheduleprofilelist_ != nullptr) {
    delete generationcontrolscheduleprofilelist_;
  }
  generationcontrolscheduleprofilelist_ = nullptr;
}
inline const ::optimizermodule::GenerationControlScheduleProfileList& PlannedOptimizerScheduleProfile::generationcontrolscheduleprofilelist() const {
  const ::optimizermodule::GenerationControlScheduleProfileList* p = generationcontrolscheduleprofilelist_;
  // @@protoc_insertion_point(field_get:optimizermodule.PlannedOptimizerScheduleProfile.generationControlScheduleProfileList)
  return p != nullptr ? *p : *reinterpret_cast<const ::optimizermodule::GenerationControlScheduleProfileList*>(
      &::optimizermodule::_GenerationControlScheduleProfileList_default_instance_);
}
inline ::optimizermodule::GenerationControlScheduleProfileList* PlannedOptimizerScheduleProfile::release_generationcontrolscheduleprofilelist() {
  // @@protoc_insertion_point(field_release:optimizermodule.PlannedOptimizerScheduleProfile.generationControlScheduleProfileList)
  
  ::optimizermodule::GenerationControlScheduleProfileList* temp = generationcontrolscheduleprofilelist_;
  generationcontrolscheduleprofilelist_ = nullptr;
  return temp;
}
inline ::optimizermodule::GenerationControlScheduleProfileList* PlannedOptimizerScheduleProfile::mutable_generationcontrolscheduleprofilelist() {
  
  if (generationcontrolscheduleprofilelist_ == nullptr) {
    auto* p = CreateMaybeMessage<::optimizermodule::GenerationControlScheduleProfileList>(GetArenaNoVirtual());
    generationcontrolscheduleprofilelist_ = p;
  }
  // @@protoc_insertion_point(field_mutable:optimizermodule.PlannedOptimizerScheduleProfile.generationControlScheduleProfileList)
  return generationcontrolscheduleprofilelist_;
}
inline void PlannedOptimizerScheduleProfile::set_allocated_generationcontrolscheduleprofilelist(::optimizermodule::GenerationControlScheduleProfileList* generationcontrolscheduleprofilelist) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete generationcontrolscheduleprofilelist_;
  }
  if (generationcontrolscheduleprofilelist) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      generationcontrolscheduleprofilelist = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, generationcontrolscheduleprofilelist, submessage_arena);
    }
    
  } else {
    
  }
  generationcontrolscheduleprofilelist_ = generationcontrolscheduleprofilelist;
  // @@protoc_insertion_point(field_set_allocated:optimizermodule.PlannedOptimizerScheduleProfile.generationControlScheduleProfileList)
}

// .optimizermodule.LoadControlScheduleProfileList loadControlScheduleProfileList = 5;
inline bool PlannedOptimizerScheduleProfile::has_loadcontrolscheduleprofilelist() const {
  return this != internal_default_instance() && loadcontrolscheduleprofilelist_ != nullptr;
}
inline void PlannedOptimizerScheduleProfile::clear_loadcontrolscheduleprofilelist() {
  if (GetArenaNoVirtual() == nullptr && loadcontrolscheduleprofilelist_ != nullptr) {
    delete loadcontrolscheduleprofilelist_;
  }
  loadcontrolscheduleprofilelist_ = nullptr;
}
inline const ::optimizermodule::LoadControlScheduleProfileList& PlannedOptimizerScheduleProfile::loadcontrolscheduleprofilelist() const {
  const ::optimizermodule::LoadControlScheduleProfileList* p = loadcontrolscheduleprofilelist_;
  // @@protoc_insertion_point(field_get:optimizermodule.PlannedOptimizerScheduleProfile.loadControlScheduleProfileList)
  return p != nullptr ? *p : *reinterpret_cast<const ::optimizermodule::LoadControlScheduleProfileList*>(
      &::optimizermodule::_LoadControlScheduleProfileList_default_instance_);
}
inline ::optimizermodule::LoadControlScheduleProfileList* PlannedOptimizerScheduleProfile::release_loadcontrolscheduleprofilelist() {
  // @@protoc_insertion_point(field_release:optimizermodule.PlannedOptimizerScheduleProfile.loadControlScheduleProfileList)
  
  ::optimizermodule::LoadControlScheduleProfileList* temp = loadcontrolscheduleprofilelist_;
  loadcontrolscheduleprofilelist_ = nullptr;
  return temp;
}
inline ::optimizermodule::LoadControlScheduleProfileList* PlannedOptimizerScheduleProfile::mutable_loadcontrolscheduleprofilelist() {
  
  if (loadcontrolscheduleprofilelist_ == nullptr) {
    auto* p = CreateMaybeMessage<::optimizermodule::LoadControlScheduleProfileList>(GetArenaNoVirtual());
    loadcontrolscheduleprofilelist_ = p;
  }
  // @@protoc_insertion_point(field_mutable:optimizermodule.PlannedOptimizerScheduleProfile.loadControlScheduleProfileList)
  return loadcontrolscheduleprofilelist_;
}
inline void PlannedOptimizerScheduleProfile::set_allocated_loadcontrolscheduleprofilelist(::optimizermodule::LoadControlScheduleProfileList* loadcontrolscheduleprofilelist) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete loadcontrolscheduleprofilelist_;
  }
  if (loadcontrolscheduleprofilelist) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      loadcontrolscheduleprofilelist = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, loadcontrolscheduleprofilelist, submessage_arena);
    }
    
  } else {
    
  }
  loadcontrolscheduleprofilelist_ = loadcontrolscheduleprofilelist;
  // @@protoc_insertion_point(field_set_allocated:optimizermodule.PlannedOptimizerScheduleProfile.loadControlScheduleProfileList)
}

// .optimizermodule.PlannedInterconnectionScheduleProfileList plannedInterconnectionScheduleProfileList = 6;
inline bool PlannedOptimizerScheduleProfile::has_plannedinterconnectionscheduleprofilelist() const {
  return this != internal_default_instance() && plannedinterconnectionscheduleprofilelist_ != nullptr;
}
inline void PlannedOptimizerScheduleProfile::clear_plannedinterconnectionscheduleprofilelist() {
  if (GetArenaNoVirtual() == nullptr && plannedinterconnectionscheduleprofilelist_ != nullptr) {
    delete plannedinterconnectionscheduleprofilelist_;
  }
  plannedinterconnectionscheduleprofilelist_ = nullptr;
}
inline const ::optimizermodule::PlannedInterconnectionScheduleProfileList& PlannedOptimizerScheduleProfile::plannedinterconnectionscheduleprofilelist() const {
  const ::optimizermodule::PlannedInterconnectionScheduleProfileList* p = plannedinterconnectionscheduleprofilelist_;
  // @@protoc_insertion_point(field_get:optimizermodule.PlannedOptimizerScheduleProfile.plannedInterconnectionScheduleProfileList)
  return p != nullptr ? *p : *reinterpret_cast<const ::optimizermodule::PlannedInterconnectionScheduleProfileList*>(
      &::optimizermodule::_PlannedInterconnectionScheduleProfileList_default_instance_);
}
inline ::optimizermodule::PlannedInterconnectionScheduleProfileList* PlannedOptimizerScheduleProfile::release_plannedinterconnectionscheduleprofilelist() {
  // @@protoc_insertion_point(field_release:optimizermodule.PlannedOptimizerScheduleProfile.plannedInterconnectionScheduleProfileList)
  
  ::optimizermodule::PlannedInterconnectionScheduleProfileList* temp = plannedinterconnectionscheduleprofilelist_;
  plannedinterconnectionscheduleprofilelist_ = nullptr;
  return temp;
}
inline ::optimizermodule::PlannedInterconnectionScheduleProfileList* PlannedOptimizerScheduleProfile::mutable_plannedinterconnectionscheduleprofilelist() {
  
  if (plannedinterconnectionscheduleprofilelist_ == nullptr) {
    auto* p = CreateMaybeMessage<::optimizermodule::PlannedInterconnectionScheduleProfileList>(GetArenaNoVirtual());
    plannedinterconnectionscheduleprofilelist_ = p;
  }
  // @@protoc_insertion_point(field_mutable:optimizermodule.PlannedOptimizerScheduleProfile.plannedInterconnectionScheduleProfileList)
  return plannedinterconnectionscheduleprofilelist_;
}
inline void PlannedOptimizerScheduleProfile::set_allocated_plannedinterconnectionscheduleprofilelist(::optimizermodule::PlannedInterconnectionScheduleProfileList* plannedinterconnectionscheduleprofilelist) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete plannedinterconnectionscheduleprofilelist_;
  }
  if (plannedinterconnectionscheduleprofilelist) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      plannedinterconnectionscheduleprofilelist = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, plannedinterconnectionscheduleprofilelist, submessage_arena);
    }
    
  } else {
    
  }
  plannedinterconnectionscheduleprofilelist_ = plannedinterconnectionscheduleprofilelist;
  // @@protoc_insertion_point(field_set_allocated:optimizermodule.PlannedOptimizerScheduleProfile.plannedInterconnectionScheduleProfileList)
}

// .optimizermodule.RegulatorControlScheduleProfileList regulatorControlScheduleProfileList = 7;
inline bool PlannedOptimizerScheduleProfile::has_regulatorcontrolscheduleprofilelist() const {
  return this != internal_default_instance() && regulatorcontrolscheduleprofilelist_ != nullptr;
}
inline void PlannedOptimizerScheduleProfile::clear_regulatorcontrolscheduleprofilelist() {
  if (GetArenaNoVirtual() == nullptr && regulatorcontrolscheduleprofilelist_ != nullptr) {
    delete regulatorcontrolscheduleprofilelist_;
  }
  regulatorcontrolscheduleprofilelist_ = nullptr;
}
inline const ::optimizermodule::RegulatorControlScheduleProfileList& PlannedOptimizerScheduleProfile::regulatorcontrolscheduleprofilelist() const {
  const ::optimizermodule::RegulatorControlScheduleProfileList* p = regulatorcontrolscheduleprofilelist_;
  // @@protoc_insertion_point(field_get:optimizermodule.PlannedOptimizerScheduleProfile.regulatorControlScheduleProfileList)
  return p != nullptr ? *p : *reinterpret_cast<const ::optimizermodule::RegulatorControlScheduleProfileList*>(
      &::optimizermodule::_RegulatorControlScheduleProfileList_default_instance_);
}
inline ::optimizermodule::RegulatorControlScheduleProfileList* PlannedOptimizerScheduleProfile::release_regulatorcontrolscheduleprofilelist() {
  // @@protoc_insertion_point(field_release:optimizermodule.PlannedOptimizerScheduleProfile.regulatorControlScheduleProfileList)
  
  ::optimizermodule::RegulatorControlScheduleProfileList* temp = regulatorcontrolscheduleprofilelist_;
  regulatorcontrolscheduleprofilelist_ = nullptr;
  return temp;
}
inline ::optimizermodule::RegulatorControlScheduleProfileList* PlannedOptimizerScheduleProfile::mutable_regulatorcontrolscheduleprofilelist() {
  
  if (regulatorcontrolscheduleprofilelist_ == nullptr) {
    auto* p = CreateMaybeMessage<::optimizermodule::RegulatorControlScheduleProfileList>(GetArenaNoVirtual());
    regulatorcontrolscheduleprofilelist_ = p;
  }
  // @@protoc_insertion_point(field_mutable:optimizermodule.PlannedOptimizerScheduleProfile.regulatorControlScheduleProfileList)
  return regulatorcontrolscheduleprofilelist_;
}
inline void PlannedOptimizerScheduleProfile::set_allocated_regulatorcontrolscheduleprofilelist(::optimizermodule::RegulatorControlScheduleProfileList* regulatorcontrolscheduleprofilelist) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete regulatorcontrolscheduleprofilelist_;
  }
  if (regulatorcontrolscheduleprofilelist) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      regulatorcontrolscheduleprofilelist = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, regulatorcontrolscheduleprofilelist, submessage_arena);
    }
    
  } else {
    
  }
  regulatorcontrolscheduleprofilelist_ = regulatorcontrolscheduleprofilelist;
  // @@protoc_insertion_point(field_set_allocated:optimizermodule.PlannedOptimizerScheduleProfile.regulatorControlScheduleProfileList)
}

// .optimizermodule.SolarControlScheduleProfileList solarControlScheduleProfileList = 8;
inline bool PlannedOptimizerScheduleProfile::has_solarcontrolscheduleprofilelist() const {
  return this != internal_default_instance() && solarcontrolscheduleprofilelist_ != nullptr;
}
inline void PlannedOptimizerScheduleProfile::clear_solarcontrolscheduleprofilelist() {
  if (GetArenaNoVirtual() == nullptr && solarcontrolscheduleprofilelist_ != nullptr) {
    delete solarcontrolscheduleprofilelist_;
  }
  solarcontrolscheduleprofilelist_ = nullptr;
}
inline const ::optimizermodule::SolarControlScheduleProfileList& PlannedOptimizerScheduleProfile::solarcontrolscheduleprofilelist() const {
  const ::optimizermodule::SolarControlScheduleProfileList* p = solarcontrolscheduleprofilelist_;
  // @@protoc_insertion_point(field_get:optimizermodule.PlannedOptimizerScheduleProfile.solarControlScheduleProfileList)
  return p != nullptr ? *p : *reinterpret_cast<const ::optimizermodule::SolarControlScheduleProfileList*>(
      &::optimizermodule::_SolarControlScheduleProfileList_default_instance_);
}
inline ::optimizermodule::SolarControlScheduleProfileList* PlannedOptimizerScheduleProfile::release_solarcontrolscheduleprofilelist() {
  // @@protoc_insertion_point(field_release:optimizermodule.PlannedOptimizerScheduleProfile.solarControlScheduleProfileList)
  
  ::optimizermodule::SolarControlScheduleProfileList* temp = solarcontrolscheduleprofilelist_;
  solarcontrolscheduleprofilelist_ = nullptr;
  return temp;
}
inline ::optimizermodule::SolarControlScheduleProfileList* PlannedOptimizerScheduleProfile::mutable_solarcontrolscheduleprofilelist() {
  
  if (solarcontrolscheduleprofilelist_ == nullptr) {
    auto* p = CreateMaybeMessage<::optimizermodule::SolarControlScheduleProfileList>(GetArenaNoVirtual());
    solarcontrolscheduleprofilelist_ = p;
  }
  // @@protoc_insertion_point(field_mutable:optimizermodule.PlannedOptimizerScheduleProfile.solarControlScheduleProfileList)
  return solarcontrolscheduleprofilelist_;
}
inline void PlannedOptimizerScheduleProfile::set_allocated_solarcontrolscheduleprofilelist(::optimizermodule::SolarControlScheduleProfileList* solarcontrolscheduleprofilelist) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete solarcontrolscheduleprofilelist_;
  }
  if (solarcontrolscheduleprofilelist) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      solarcontrolscheduleprofilelist = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, solarcontrolscheduleprofilelist, submessage_arena);
    }
    
  } else {
    
  }
  solarcontrolscheduleprofilelist_ = solarcontrolscheduleprofilelist;
  // @@protoc_insertion_point(field_set_allocated:optimizermodule.PlannedOptimizerScheduleProfile.solarControlScheduleProfileList)
}

// .optimizermodule.SwitchControlScheduleProfileList switchControlScheduleProfileList = 9;
inline bool PlannedOptimizerScheduleProfile::has_switchcontrolscheduleprofilelist() const {
  return this != internal_default_instance() && switchcontrolscheduleprofilelist_ != nullptr;
}
inline void PlannedOptimizerScheduleProfile::clear_switchcontrolscheduleprofilelist() {
  if (GetArenaNoVirtual() == nullptr && switchcontrolscheduleprofilelist_ != nullptr) {
    delete switchcontrolscheduleprofilelist_;
  }
  switchcontrolscheduleprofilelist_ = nullptr;
}
inline const ::optimizermodule::SwitchControlScheduleProfileList& PlannedOptimizerScheduleProfile::switchcontrolscheduleprofilelist() const {
  const ::optimizermodule::SwitchControlScheduleProfileList* p = switchcontrolscheduleprofilelist_;
  // @@protoc_insertion_point(field_get:optimizermodule.PlannedOptimizerScheduleProfile.switchControlScheduleProfileList)
  return p != nullptr ? *p : *reinterpret_cast<const ::optimizermodule::SwitchControlScheduleProfileList*>(
      &::optimizermodule::_SwitchControlScheduleProfileList_default_instance_);
}
inline ::optimizermodule::SwitchControlScheduleProfileList* PlannedOptimizerScheduleProfile::release_switchcontrolscheduleprofilelist() {
  // @@protoc_insertion_point(field_release:optimizermodule.PlannedOptimizerScheduleProfile.switchControlScheduleProfileList)
  
  ::optimizermodule::SwitchControlScheduleProfileList* temp = switchcontrolscheduleprofilelist_;
  switchcontrolscheduleprofilelist_ = nullptr;
  return temp;
}
inline ::optimizermodule::SwitchControlScheduleProfileList* PlannedOptimizerScheduleProfile::mutable_switchcontrolscheduleprofilelist() {
  
  if (switchcontrolscheduleprofilelist_ == nullptr) {
    auto* p = CreateMaybeMessage<::optimizermodule::SwitchControlScheduleProfileList>(GetArenaNoVirtual());
    switchcontrolscheduleprofilelist_ = p;
  }
  // @@protoc_insertion_point(field_mutable:optimizermodule.PlannedOptimizerScheduleProfile.switchControlScheduleProfileList)
  return switchcontrolscheduleprofilelist_;
}
inline void PlannedOptimizerScheduleProfile::set_allocated_switchcontrolscheduleprofilelist(::optimizermodule::SwitchControlScheduleProfileList* switchcontrolscheduleprofilelist) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete switchcontrolscheduleprofilelist_;
  }
  if (switchcontrolscheduleprofilelist) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      switchcontrolscheduleprofilelist = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, switchcontrolscheduleprofilelist, submessage_arena);
    }
    
  } else {
    
  }
  switchcontrolscheduleprofilelist_ = switchcontrolscheduleprofilelist;
  // @@protoc_insertion_point(field_set_allocated:optimizermodule.PlannedOptimizerScheduleProfile.switchControlScheduleProfileList)
}

// -------------------------------------------------------------------

// RequestedInterconnectionScheduleProfileList

// repeated .interconnectionmodule.RequestedInterconnectionScheduleProfile requestedInterconnectionScheduleProfile = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
inline int RequestedInterconnectionScheduleProfileList::requestedinterconnectionscheduleprofile_size() const {
  return requestedinterconnectionscheduleprofile_.size();
}
inline ::interconnectionmodule::RequestedInterconnectionScheduleProfile* RequestedInterconnectionScheduleProfileList::mutable_requestedinterconnectionscheduleprofile(int index) {
  // @@protoc_insertion_point(field_mutable:optimizermodule.RequestedInterconnectionScheduleProfileList.requestedInterconnectionScheduleProfile)
  return requestedinterconnectionscheduleprofile_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::interconnectionmodule::RequestedInterconnectionScheduleProfile >*
RequestedInterconnectionScheduleProfileList::mutable_requestedinterconnectionscheduleprofile() {
  // @@protoc_insertion_point(field_mutable_list:optimizermodule.RequestedInterconnectionScheduleProfileList.requestedInterconnectionScheduleProfile)
  return &requestedinterconnectionscheduleprofile_;
}
inline const ::interconnectionmodule::RequestedInterconnectionScheduleProfile& RequestedInterconnectionScheduleProfileList::requestedinterconnectionscheduleprofile(int index) const {
  // @@protoc_insertion_point(field_get:optimizermodule.RequestedInterconnectionScheduleProfileList.requestedInterconnectionScheduleProfile)
  return requestedinterconnectionscheduleprofile_.Get(index);
}
inline ::interconnectionmodule::RequestedInterconnectionScheduleProfile* RequestedInterconnectionScheduleProfileList::add_requestedinterconnectionscheduleprofile() {
  // @@protoc_insertion_point(field_add:optimizermodule.RequestedInterconnectionScheduleProfileList.requestedInterconnectionScheduleProfile)
  return requestedinterconnectionscheduleprofile_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::interconnectionmodule::RequestedInterconnectionScheduleProfile >&
RequestedInterconnectionScheduleProfileList::requestedinterconnectionscheduleprofile() const {
  // @@protoc_insertion_point(field_list:optimizermodule.RequestedInterconnectionScheduleProfileList.requestedInterconnectionScheduleProfile)
  return requestedinterconnectionscheduleprofile_;
}

// -------------------------------------------------------------------

// RequestedOptimizerScheduleProfile

// .commonmodule.OptimizationMessageInfo optimizationMessageInfo = 1 [(.uml.option_parent_message) = true];
inline bool RequestedOptimizerScheduleProfile::has_optimizationmessageinfo() const {
  return this != internal_default_instance() && optimizationmessageinfo_ != nullptr;
}
inline const ::commonmodule::OptimizationMessageInfo& RequestedOptimizerScheduleProfile::optimizationmessageinfo() const {
  const ::commonmodule::OptimizationMessageInfo* p = optimizationmessageinfo_;
  // @@protoc_insertion_point(field_get:optimizermodule.RequestedOptimizerScheduleProfile.optimizationMessageInfo)
  return p != nullptr ? *p : *reinterpret_cast<const ::commonmodule::OptimizationMessageInfo*>(
      &::commonmodule::_OptimizationMessageInfo_default_instance_);
}
inline ::commonmodule::OptimizationMessageInfo* RequestedOptimizerScheduleProfile::release_optimizationmessageinfo() {
  // @@protoc_insertion_point(field_release:optimizermodule.RequestedOptimizerScheduleProfile.optimizationMessageInfo)
  
  ::commonmodule::OptimizationMessageInfo* temp = optimizationmessageinfo_;
  optimizationmessageinfo_ = nullptr;
  return temp;
}
inline ::commonmodule::OptimizationMessageInfo* RequestedOptimizerScheduleProfile::mutable_optimizationmessageinfo() {
  
  if (optimizationmessageinfo_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::OptimizationMessageInfo>(GetArenaNoVirtual());
    optimizationmessageinfo_ = p;
  }
  // @@protoc_insertion_point(field_mutable:optimizermodule.RequestedOptimizerScheduleProfile.optimizationMessageInfo)
  return optimizationmessageinfo_;
}
inline void RequestedOptimizerScheduleProfile::set_allocated_optimizationmessageinfo(::commonmodule::OptimizationMessageInfo* optimizationmessageinfo) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(optimizationmessageinfo_);
  }
  if (optimizationmessageinfo) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      optimizationmessageinfo = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, optimizationmessageinfo, submessage_arena);
    }
    
  } else {
    
  }
  optimizationmessageinfo_ = optimizationmessageinfo;
  // @@protoc_insertion_point(field_set_allocated:optimizermodule.RequestedOptimizerScheduleProfile.optimizationMessageInfo)
}

// .commonmodule.ApplicationSystem applicationSystem = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
inline bool RequestedOptimizerScheduleProfile::has_applicationsystem() const {
  return this != internal_default_instance() && applicationsystem_ != nullptr;
}
inline const ::commonmodule::ApplicationSystem& RequestedOptimizerScheduleProfile::applicationsystem() const {
  const ::commonmodule::ApplicationSystem* p = applicationsystem_;
  // @@protoc_insertion_point(field_get:optimizermodule.RequestedOptimizerScheduleProfile.applicationSystem)
  return p != nullptr ? *p : *reinterpret_cast<const ::commonmodule::ApplicationSystem*>(
      &::commonmodule::_ApplicationSystem_default_instance_);
}
inline ::commonmodule::ApplicationSystem* RequestedOptimizerScheduleProfile::release_applicationsystem() {
  // @@protoc_insertion_point(field_release:optimizermodule.RequestedOptimizerScheduleProfile.applicationSystem)
  
  ::commonmodule::ApplicationSystem* temp = applicationsystem_;
  applicationsystem_ = nullptr;
  return temp;
}
inline ::commonmodule::ApplicationSystem* RequestedOptimizerScheduleProfile::mutable_applicationsystem() {
  
  if (applicationsystem_ == nullptr) {
    auto* p = CreateMaybeMessage<::commonmodule::ApplicationSystem>(GetArenaNoVirtual());
    applicationsystem_ = p;
  }
  // @@protoc_insertion_point(field_mutable:optimizermodule.RequestedOptimizerScheduleProfile.applicationSystem)
  return applicationsystem_;
}
inline void RequestedOptimizerScheduleProfile::set_allocated_applicationsystem(::commonmodule::ApplicationSystem* applicationsystem) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(applicationsystem_);
  }
  if (applicationsystem) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      applicationsystem = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, applicationsystem, submessage_arena);
    }
    
  } else {
    
  }
  applicationsystem_ = applicationsystem;
  // @@protoc_insertion_point(field_set_allocated:optimizermodule.RequestedOptimizerScheduleProfile.applicationSystem)
}

// .optimizermodule.ESSControlScheduleProfileList essControlScheduleProfileList = 3;
inline bool RequestedOptimizerScheduleProfile::has_esscontrolscheduleprofilelist() const {
  return this != internal_default_instance() && esscontrolscheduleprofilelist_ != nullptr;
}
inline void RequestedOptimizerScheduleProfile::clear_esscontrolscheduleprofilelist() {
  if (GetArenaNoVirtual() == nullptr && esscontrolscheduleprofilelist_ != nullptr) {
    delete esscontrolscheduleprofilelist_;
  }
  esscontrolscheduleprofilelist_ = nullptr;
}
inline const ::optimizermodule::ESSControlScheduleProfileList& RequestedOptimizerScheduleProfile::esscontrolscheduleprofilelist() const {
  const ::optimizermodule::ESSControlScheduleProfileList* p = esscontrolscheduleprofilelist_;
  // @@protoc_insertion_point(field_get:optimizermodule.RequestedOptimizerScheduleProfile.essControlScheduleProfileList)
  return p != nullptr ? *p : *reinterpret_cast<const ::optimizermodule::ESSControlScheduleProfileList*>(
      &::optimizermodule::_ESSControlScheduleProfileList_default_instance_);
}
inline ::optimizermodule::ESSControlScheduleProfileList* RequestedOptimizerScheduleProfile::release_esscontrolscheduleprofilelist() {
  // @@protoc_insertion_point(field_release:optimizermodule.RequestedOptimizerScheduleProfile.essControlScheduleProfileList)
  
  ::optimizermodule::ESSControlScheduleProfileList* temp = esscontrolscheduleprofilelist_;
  esscontrolscheduleprofilelist_ = nullptr;
  return temp;
}
inline ::optimizermodule::ESSControlScheduleProfileList* RequestedOptimizerScheduleProfile::mutable_esscontrolscheduleprofilelist() {
  
  if (esscontrolscheduleprofilelist_ == nullptr) {
    auto* p = CreateMaybeMessage<::optimizermodule::ESSControlScheduleProfileList>(GetArenaNoVirtual());
    esscontrolscheduleprofilelist_ = p;
  }
  // @@protoc_insertion_point(field_mutable:optimizermodule.RequestedOptimizerScheduleProfile.essControlScheduleProfileList)
  return esscontrolscheduleprofilelist_;
}
inline void RequestedOptimizerScheduleProfile::set_allocated_esscontrolscheduleprofilelist(::optimizermodule::ESSControlScheduleProfileList* esscontrolscheduleprofilelist) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete esscontrolscheduleprofilelist_;
  }
  if (esscontrolscheduleprofilelist) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      esscontrolscheduleprofilelist = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, esscontrolscheduleprofilelist, submessage_arena);
    }
    
  } else {
    
  }
  esscontrolscheduleprofilelist_ = esscontrolscheduleprofilelist;
  // @@protoc_insertion_point(field_set_allocated:optimizermodule.RequestedOptimizerScheduleProfile.essControlScheduleProfileList)
}

// .optimizermodule.GenerationControlScheduleProfileList generationControlScheduleProfileList = 4;
inline bool RequestedOptimizerScheduleProfile::has_generationcontrolscheduleprofilelist() const {
  return this != internal_default_instance() && generationcontrolscheduleprofilelist_ != nullptr;
}
inline void RequestedOptimizerScheduleProfile::clear_generationcontrolscheduleprofilelist() {
  if (GetArenaNoVirtual() == nullptr && generationcontrolscheduleprofilelist_ != nullptr) {
    delete generationcontrolscheduleprofilelist_;
  }
  generationcontrolscheduleprofilelist_ = nullptr;
}
inline const ::optimizermodule::GenerationControlScheduleProfileList& RequestedOptimizerScheduleProfile::generationcontrolscheduleprofilelist() const {
  const ::optimizermodule::GenerationControlScheduleProfileList* p = generationcontrolscheduleprofilelist_;
  // @@protoc_insertion_point(field_get:optimizermodule.RequestedOptimizerScheduleProfile.generationControlScheduleProfileList)
  return p != nullptr ? *p : *reinterpret_cast<const ::optimizermodule::GenerationControlScheduleProfileList*>(
      &::optimizermodule::_GenerationControlScheduleProfileList_default_instance_);
}
inline ::optimizermodule::GenerationControlScheduleProfileList* RequestedOptimizerScheduleProfile::release_generationcontrolscheduleprofilelist() {
  // @@protoc_insertion_point(field_release:optimizermodule.RequestedOptimizerScheduleProfile.generationControlScheduleProfileList)
  
  ::optimizermodule::GenerationControlScheduleProfileList* temp = generationcontrolscheduleprofilelist_;
  generationcontrolscheduleprofilelist_ = nullptr;
  return temp;
}
inline ::optimizermodule::GenerationControlScheduleProfileList* RequestedOptimizerScheduleProfile::mutable_generationcontrolscheduleprofilelist() {
  
  if (generationcontrolscheduleprofilelist_ == nullptr) {
    auto* p = CreateMaybeMessage<::optimizermodule::GenerationControlScheduleProfileList>(GetArenaNoVirtual());
    generationcontrolscheduleprofilelist_ = p;
  }
  // @@protoc_insertion_point(field_mutable:optimizermodule.RequestedOptimizerScheduleProfile.generationControlScheduleProfileList)
  return generationcontrolscheduleprofilelist_;
}
inline void RequestedOptimizerScheduleProfile::set_allocated_generationcontrolscheduleprofilelist(::optimizermodule::GenerationControlScheduleProfileList* generationcontrolscheduleprofilelist) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete generationcontrolscheduleprofilelist_;
  }
  if (generationcontrolscheduleprofilelist) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      generationcontrolscheduleprofilelist = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, generationcontrolscheduleprofilelist, submessage_arena);
    }
    
  } else {
    
  }
  generationcontrolscheduleprofilelist_ = generationcontrolscheduleprofilelist;
  // @@protoc_insertion_point(field_set_allocated:optimizermodule.RequestedOptimizerScheduleProfile.generationControlScheduleProfileList)
}

// .optimizermodule.LoadControlScheduleProfileList loadControlScheduleProfileList = 5;
inline bool RequestedOptimizerScheduleProfile::has_loadcontrolscheduleprofilelist() const {
  return this != internal_default_instance() && loadcontrolscheduleprofilelist_ != nullptr;
}
inline void RequestedOptimizerScheduleProfile::clear_loadcontrolscheduleprofilelist() {
  if (GetArenaNoVirtual() == nullptr && loadcontrolscheduleprofilelist_ != nullptr) {
    delete loadcontrolscheduleprofilelist_;
  }
  loadcontrolscheduleprofilelist_ = nullptr;
}
inline const ::optimizermodule::LoadControlScheduleProfileList& RequestedOptimizerScheduleProfile::loadcontrolscheduleprofilelist() const {
  const ::optimizermodule::LoadControlScheduleProfileList* p = loadcontrolscheduleprofilelist_;
  // @@protoc_insertion_point(field_get:optimizermodule.RequestedOptimizerScheduleProfile.loadControlScheduleProfileList)
  return p != nullptr ? *p : *reinterpret_cast<const ::optimizermodule::LoadControlScheduleProfileList*>(
      &::optimizermodule::_LoadControlScheduleProfileList_default_instance_);
}
inline ::optimizermodule::LoadControlScheduleProfileList* RequestedOptimizerScheduleProfile::release_loadcontrolscheduleprofilelist() {
  // @@protoc_insertion_point(field_release:optimizermodule.RequestedOptimizerScheduleProfile.loadControlScheduleProfileList)
  
  ::optimizermodule::LoadControlScheduleProfileList* temp = loadcontrolscheduleprofilelist_;
  loadcontrolscheduleprofilelist_ = nullptr;
  return temp;
}
inline ::optimizermodule::LoadControlScheduleProfileList* RequestedOptimizerScheduleProfile::mutable_loadcontrolscheduleprofilelist() {
  
  if (loadcontrolscheduleprofilelist_ == nullptr) {
    auto* p = CreateMaybeMessage<::optimizermodule::LoadControlScheduleProfileList>(GetArenaNoVirtual());
    loadcontrolscheduleprofilelist_ = p;
  }
  // @@protoc_insertion_point(field_mutable:optimizermodule.RequestedOptimizerScheduleProfile.loadControlScheduleProfileList)
  return loadcontrolscheduleprofilelist_;
}
inline void RequestedOptimizerScheduleProfile::set_allocated_loadcontrolscheduleprofilelist(::optimizermodule::LoadControlScheduleProfileList* loadcontrolscheduleprofilelist) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete loadcontrolscheduleprofilelist_;
  }
  if (loadcontrolscheduleprofilelist) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      loadcontrolscheduleprofilelist = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, loadcontrolscheduleprofilelist, submessage_arena);
    }
    
  } else {
    
  }
  loadcontrolscheduleprofilelist_ = loadcontrolscheduleprofilelist;
  // @@protoc_insertion_point(field_set_allocated:optimizermodule.RequestedOptimizerScheduleProfile.loadControlScheduleProfileList)
}

// .optimizermodule.RegulatorControlScheduleProfileList regulatorControlScheduleProfileList = 6;
inline bool RequestedOptimizerScheduleProfile::has_regulatorcontrolscheduleprofilelist() const {
  return this != internal_default_instance() && regulatorcontrolscheduleprofilelist_ != nullptr;
}
inline void RequestedOptimizerScheduleProfile::clear_regulatorcontrolscheduleprofilelist() {
  if (GetArenaNoVirtual() == nullptr && regulatorcontrolscheduleprofilelist_ != nullptr) {
    delete regulatorcontrolscheduleprofilelist_;
  }
  regulatorcontrolscheduleprofilelist_ = nullptr;
}
inline const ::optimizermodule::RegulatorControlScheduleProfileList& RequestedOptimizerScheduleProfile::regulatorcontrolscheduleprofilelist() const {
  const ::optimizermodule::RegulatorControlScheduleProfileList* p = regulatorcontrolscheduleprofilelist_;
  // @@protoc_insertion_point(field_get:optimizermodule.RequestedOptimizerScheduleProfile.regulatorControlScheduleProfileList)
  return p != nullptr ? *p : *reinterpret_cast<const ::optimizermodule::RegulatorControlScheduleProfileList*>(
      &::optimizermodule::_RegulatorControlScheduleProfileList_default_instance_);
}
inline ::optimizermodule::RegulatorControlScheduleProfileList* RequestedOptimizerScheduleProfile::release_regulatorcontrolscheduleprofilelist() {
  // @@protoc_insertion_point(field_release:optimizermodule.RequestedOptimizerScheduleProfile.regulatorControlScheduleProfileList)
  
  ::optimizermodule::RegulatorControlScheduleProfileList* temp = regulatorcontrolscheduleprofilelist_;
  regulatorcontrolscheduleprofilelist_ = nullptr;
  return temp;
}
inline ::optimizermodule::RegulatorControlScheduleProfileList* RequestedOptimizerScheduleProfile::mutable_regulatorcontrolscheduleprofilelist() {
  
  if (regulatorcontrolscheduleprofilelist_ == nullptr) {
    auto* p = CreateMaybeMessage<::optimizermodule::RegulatorControlScheduleProfileList>(GetArenaNoVirtual());
    regulatorcontrolscheduleprofilelist_ = p;
  }
  // @@protoc_insertion_point(field_mutable:optimizermodule.RequestedOptimizerScheduleProfile.regulatorControlScheduleProfileList)
  return regulatorcontrolscheduleprofilelist_;
}
inline void RequestedOptimizerScheduleProfile::set_allocated_regulatorcontrolscheduleprofilelist(::optimizermodule::RegulatorControlScheduleProfileList* regulatorcontrolscheduleprofilelist) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete regulatorcontrolscheduleprofilelist_;
  }
  if (regulatorcontrolscheduleprofilelist) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      regulatorcontrolscheduleprofilelist = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, regulatorcontrolscheduleprofilelist, submessage_arena);
    }
    
  } else {
    
  }
  regulatorcontrolscheduleprofilelist_ = regulatorcontrolscheduleprofilelist;
  // @@protoc_insertion_point(field_set_allocated:optimizermodule.RequestedOptimizerScheduleProfile.regulatorControlScheduleProfileList)
}

// .optimizermodule.RequestedInterconnectionScheduleProfileList requestedInterconnectionScheduleProfileList = 7;
inline bool RequestedOptimizerScheduleProfile::has_requestedinterconnectionscheduleprofilelist() const {
  return this != internal_default_instance() && requestedinterconnectionscheduleprofilelist_ != nullptr;
}
inline void RequestedOptimizerScheduleProfile::clear_requestedinterconnectionscheduleprofilelist() {
  if (GetArenaNoVirtual() == nullptr && requestedinterconnectionscheduleprofilelist_ != nullptr) {
    delete requestedinterconnectionscheduleprofilelist_;
  }
  requestedinterconnectionscheduleprofilelist_ = nullptr;
}
inline const ::optimizermodule::RequestedInterconnectionScheduleProfileList& RequestedOptimizerScheduleProfile::requestedinterconnectionscheduleprofilelist() const {
  const ::optimizermodule::RequestedInterconnectionScheduleProfileList* p = requestedinterconnectionscheduleprofilelist_;
  // @@protoc_insertion_point(field_get:optimizermodule.RequestedOptimizerScheduleProfile.requestedInterconnectionScheduleProfileList)
  return p != nullptr ? *p : *reinterpret_cast<const ::optimizermodule::RequestedInterconnectionScheduleProfileList*>(
      &::optimizermodule::_RequestedInterconnectionScheduleProfileList_default_instance_);
}
inline ::optimizermodule::RequestedInterconnectionScheduleProfileList* RequestedOptimizerScheduleProfile::release_requestedinterconnectionscheduleprofilelist() {
  // @@protoc_insertion_point(field_release:optimizermodule.RequestedOptimizerScheduleProfile.requestedInterconnectionScheduleProfileList)
  
  ::optimizermodule::RequestedInterconnectionScheduleProfileList* temp = requestedinterconnectionscheduleprofilelist_;
  requestedinterconnectionscheduleprofilelist_ = nullptr;
  return temp;
}
inline ::optimizermodule::RequestedInterconnectionScheduleProfileList* RequestedOptimizerScheduleProfile::mutable_requestedinterconnectionscheduleprofilelist() {
  
  if (requestedinterconnectionscheduleprofilelist_ == nullptr) {
    auto* p = CreateMaybeMessage<::optimizermodule::RequestedInterconnectionScheduleProfileList>(GetArenaNoVirtual());
    requestedinterconnectionscheduleprofilelist_ = p;
  }
  // @@protoc_insertion_point(field_mutable:optimizermodule.RequestedOptimizerScheduleProfile.requestedInterconnectionScheduleProfileList)
  return requestedinterconnectionscheduleprofilelist_;
}
inline void RequestedOptimizerScheduleProfile::set_allocated_requestedinterconnectionscheduleprofilelist(::optimizermodule::RequestedInterconnectionScheduleProfileList* requestedinterconnectionscheduleprofilelist) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete requestedinterconnectionscheduleprofilelist_;
  }
  if (requestedinterconnectionscheduleprofilelist) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      requestedinterconnectionscheduleprofilelist = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, requestedinterconnectionscheduleprofilelist, submessage_arena);
    }
    
  } else {
    
  }
  requestedinterconnectionscheduleprofilelist_ = requestedinterconnectionscheduleprofilelist;
  // @@protoc_insertion_point(field_set_allocated:optimizermodule.RequestedOptimizerScheduleProfile.requestedInterconnectionScheduleProfileList)
}

// .optimizermodule.SolarControlScheduleProfileList solarControlScheduleProfileList = 8;
inline bool RequestedOptimizerScheduleProfile::has_solarcontrolscheduleprofilelist() const {
  return this != internal_default_instance() && solarcontrolscheduleprofilelist_ != nullptr;
}
inline void RequestedOptimizerScheduleProfile::clear_solarcontrolscheduleprofilelist() {
  if (GetArenaNoVirtual() == nullptr && solarcontrolscheduleprofilelist_ != nullptr) {
    delete solarcontrolscheduleprofilelist_;
  }
  solarcontrolscheduleprofilelist_ = nullptr;
}
inline const ::optimizermodule::SolarControlScheduleProfileList& RequestedOptimizerScheduleProfile::solarcontrolscheduleprofilelist() const {
  const ::optimizermodule::SolarControlScheduleProfileList* p = solarcontrolscheduleprofilelist_;
  // @@protoc_insertion_point(field_get:optimizermodule.RequestedOptimizerScheduleProfile.solarControlScheduleProfileList)
  return p != nullptr ? *p : *reinterpret_cast<const ::optimizermodule::SolarControlScheduleProfileList*>(
      &::optimizermodule::_SolarControlScheduleProfileList_default_instance_);
}
inline ::optimizermodule::SolarControlScheduleProfileList* RequestedOptimizerScheduleProfile::release_solarcontrolscheduleprofilelist() {
  // @@protoc_insertion_point(field_release:optimizermodule.RequestedOptimizerScheduleProfile.solarControlScheduleProfileList)
  
  ::optimizermodule::SolarControlScheduleProfileList* temp = solarcontrolscheduleprofilelist_;
  solarcontrolscheduleprofilelist_ = nullptr;
  return temp;
}
inline ::optimizermodule::SolarControlScheduleProfileList* RequestedOptimizerScheduleProfile::mutable_solarcontrolscheduleprofilelist() {
  
  if (solarcontrolscheduleprofilelist_ == nullptr) {
    auto* p = CreateMaybeMessage<::optimizermodule::SolarControlScheduleProfileList>(GetArenaNoVirtual());
    solarcontrolscheduleprofilelist_ = p;
  }
  // @@protoc_insertion_point(field_mutable:optimizermodule.RequestedOptimizerScheduleProfile.solarControlScheduleProfileList)
  return solarcontrolscheduleprofilelist_;
}
inline void RequestedOptimizerScheduleProfile::set_allocated_solarcontrolscheduleprofilelist(::optimizermodule::SolarControlScheduleProfileList* solarcontrolscheduleprofilelist) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete solarcontrolscheduleprofilelist_;
  }
  if (solarcontrolscheduleprofilelist) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      solarcontrolscheduleprofilelist = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, solarcontrolscheduleprofilelist, submessage_arena);
    }
    
  } else {
    
  }
  solarcontrolscheduleprofilelist_ = solarcontrolscheduleprofilelist;
  // @@protoc_insertion_point(field_set_allocated:optimizermodule.RequestedOptimizerScheduleProfile.solarControlScheduleProfileList)
}

// .optimizermodule.SwitchControlScheduleProfileList switchControlScheduleProfileList = 9;
inline bool RequestedOptimizerScheduleProfile::has_switchcontrolscheduleprofilelist() const {
  return this != internal_default_instance() && switchcontrolscheduleprofilelist_ != nullptr;
}
inline void RequestedOptimizerScheduleProfile::clear_switchcontrolscheduleprofilelist() {
  if (GetArenaNoVirtual() == nullptr && switchcontrolscheduleprofilelist_ != nullptr) {
    delete switchcontrolscheduleprofilelist_;
  }
  switchcontrolscheduleprofilelist_ = nullptr;
}
inline const ::optimizermodule::SwitchControlScheduleProfileList& RequestedOptimizerScheduleProfile::switchcontrolscheduleprofilelist() const {
  const ::optimizermodule::SwitchControlScheduleProfileList* p = switchcontrolscheduleprofilelist_;
  // @@protoc_insertion_point(field_get:optimizermodule.RequestedOptimizerScheduleProfile.switchControlScheduleProfileList)
  return p != nullptr ? *p : *reinterpret_cast<const ::optimizermodule::SwitchControlScheduleProfileList*>(
      &::optimizermodule::_SwitchControlScheduleProfileList_default_instance_);
}
inline ::optimizermodule::SwitchControlScheduleProfileList* RequestedOptimizerScheduleProfile::release_switchcontrolscheduleprofilelist() {
  // @@protoc_insertion_point(field_release:optimizermodule.RequestedOptimizerScheduleProfile.switchControlScheduleProfileList)
  
  ::optimizermodule::SwitchControlScheduleProfileList* temp = switchcontrolscheduleprofilelist_;
  switchcontrolscheduleprofilelist_ = nullptr;
  return temp;
}
inline ::optimizermodule::SwitchControlScheduleProfileList* RequestedOptimizerScheduleProfile::mutable_switchcontrolscheduleprofilelist() {
  
  if (switchcontrolscheduleprofilelist_ == nullptr) {
    auto* p = CreateMaybeMessage<::optimizermodule::SwitchControlScheduleProfileList>(GetArenaNoVirtual());
    switchcontrolscheduleprofilelist_ = p;
  }
  // @@protoc_insertion_point(field_mutable:optimizermodule.RequestedOptimizerScheduleProfile.switchControlScheduleProfileList)
  return switchcontrolscheduleprofilelist_;
}
inline void RequestedOptimizerScheduleProfile::set_allocated_switchcontrolscheduleprofilelist(::optimizermodule::SwitchControlScheduleProfileList* switchcontrolscheduleprofilelist) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete switchcontrolscheduleprofilelist_;
  }
  if (switchcontrolscheduleprofilelist) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      switchcontrolscheduleprofilelist = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, switchcontrolscheduleprofilelist, submessage_arena);
    }
    
  } else {
    
  }
  switchcontrolscheduleprofilelist_ = switchcontrolscheduleprofilelist;
  // @@protoc_insertion_point(field_set_allocated:optimizermodule.RequestedOptimizerScheduleProfile.switchControlScheduleProfileList)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace optimizermodule

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_optimizermodule_2foptimizermodule_2eproto
