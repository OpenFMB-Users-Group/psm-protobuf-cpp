// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: regulatormodule/regulatormodule.proto
// Protobuf C++ Version: 6.31.1

#include "regulatormodule/regulatormodule.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace regulatormodule {

inline constexpr DirectionalATCC::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        bndwid_{nullptr},
        ctldltmms_{nullptr},
        ldcr_{nullptr},
        ldcx_{nullptr},
        volspt_{nullptr},
        voltagesetpointenabled_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR DirectionalATCC::DirectionalATCC(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(DirectionalATCC_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DirectionalATCCDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DirectionalATCCDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DirectionalATCCDefaultTypeInternal() {}
  union {
    DirectionalATCC _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DirectionalATCCDefaultTypeInternal _DirectionalATCC_default_instance_;

inline constexpr RegulatorSystem::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        conductingequipment_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR RegulatorSystem::RegulatorSystem(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(RegulatorSystem_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RegulatorSystemDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RegulatorSystemDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RegulatorSystemDefaultTypeInternal() {}
  union {
    RegulatorSystem _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RegulatorSystemDefaultTypeInternal _RegulatorSystem_default_instance_;

inline constexpr RegulatorEventAndStatusATCC::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        bndctr_{nullptr},
        bndwid_{nullptr},
        bndwidhi_{nullptr},
        bndwidlo_{nullptr},
        dirctlrev_{nullptr},
        dirindt_{nullptr},
        dirrev_{nullptr},
        ldcr_{nullptr},
        ldcx_{nullptr},
        parop_{nullptr},
        ramprates_{nullptr},
        state_{nullptr},
        stdltmms_{nullptr},
        tapoperr_{nullptr},
        tappos_{nullptr},
        vollmthi_{nullptr},
        vollmtlo_{nullptr},
        volspt_{nullptr},
        voltagesetpointenabled_{nullptr},
        dirmod_{nullptr},
        vollmtmode_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR RegulatorEventAndStatusATCC::RegulatorEventAndStatusATCC(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(RegulatorEventAndStatusATCC_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RegulatorEventAndStatusATCCDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RegulatorEventAndStatusATCCDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RegulatorEventAndStatusATCCDefaultTypeInternal() {}
  union {
    RegulatorEventAndStatusATCC _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RegulatorEventAndStatusATCCDefaultTypeInternal _RegulatorEventAndStatusATCC_default_instance_;

inline constexpr RegulatorControlATCC::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        logicalnodeforcontrol_{nullptr},
        dirfwd_{nullptr},
        dirmode_{nullptr},
        dirrev_{nullptr},
        dirthd_{nullptr},
        parop_{nullptr},
        ramprates_{nullptr},
        state_{nullptr},
        tapopl_{nullptr},
        tapopr_{nullptr},
        vollmthi_{nullptr},
        vollmtlo_{nullptr},
        vollmtmode_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR RegulatorControlATCC::RegulatorControlATCC(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(RegulatorControlATCC_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RegulatorControlATCCDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RegulatorControlATCCDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RegulatorControlATCCDefaultTypeInternal() {}
  union {
    RegulatorControlATCC _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RegulatorControlATCCDefaultTypeInternal _RegulatorControlATCC_default_instance_;

inline constexpr RegulatorReading::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        conductingequipmentterminalreading_{nullptr},
        phasemmtn_{nullptr},
        readingmmtr_{nullptr},
        readingmmxu_{nullptr},
        secondaryreadingmmxu_{nullptr},
        readingmmdc_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR RegulatorReading::RegulatorReading(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(RegulatorReading_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RegulatorReadingDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RegulatorReadingDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RegulatorReadingDefaultTypeInternal() {}
  union {
    RegulatorReading _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RegulatorReadingDefaultTypeInternal _RegulatorReading_default_instance_;

inline constexpr RegulatorPoint::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        control_{nullptr},
        starttime_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR RegulatorPoint::RegulatorPoint(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(RegulatorPoint_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RegulatorPointDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RegulatorPointDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RegulatorPointDefaultTypeInternal() {}
  union {
    RegulatorPoint _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RegulatorPointDefaultTypeInternal _RegulatorPoint_default_instance_;

inline constexpr RegulatorEventAndStatusANCR::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        logicalnodeforeventandstatus_{nullptr},
        dynamictest_{nullptr},
        pointstatus_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR RegulatorEventAndStatusANCR::RegulatorEventAndStatusANCR(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(RegulatorEventAndStatusANCR_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RegulatorEventAndStatusANCRDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RegulatorEventAndStatusANCRDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RegulatorEventAndStatusANCRDefaultTypeInternal() {}
  union {
    RegulatorEventAndStatusANCR _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RegulatorEventAndStatusANCRDefaultTypeInternal _RegulatorEventAndStatusANCR_default_instance_;

inline constexpr RegulatorDiscreteControl::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        controlvalue_{nullptr},
        check_{nullptr},
        regulatorcontrolatcc_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR RegulatorDiscreteControl::RegulatorDiscreteControl(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(RegulatorDiscreteControl_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RegulatorDiscreteControlDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RegulatorDiscreteControlDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RegulatorDiscreteControlDefaultTypeInternal() {}
  union {
    RegulatorDiscreteControl _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RegulatorDiscreteControlDefaultTypeInternal _RegulatorDiscreteControl_default_instance_;

inline constexpr RegulatorStatus::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        statusvalue_{nullptr},
        regulatoreventandstatusancr_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR RegulatorStatus::RegulatorStatus(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(RegulatorStatus_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RegulatorStatusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RegulatorStatusDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RegulatorStatusDefaultTypeInternal() {}
  union {
    RegulatorStatus _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RegulatorStatusDefaultTypeInternal _RegulatorStatus_default_instance_;

inline constexpr RegulatorReadingProfile::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        regulatorreading_{},
        readingmessageinfo_{nullptr},
        regulatorsystem_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR RegulatorReadingProfile::RegulatorReadingProfile(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(RegulatorReadingProfile_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RegulatorReadingProfileDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RegulatorReadingProfileDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RegulatorReadingProfileDefaultTypeInternal() {}
  union {
    RegulatorReadingProfile _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RegulatorReadingProfileDefaultTypeInternal _RegulatorReadingProfile_default_instance_;

inline constexpr RegulatorEvent::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        eventvalue_{nullptr},
        regulatoreventandstatusancr_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR RegulatorEvent::RegulatorEvent(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(RegulatorEvent_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RegulatorEventDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RegulatorEventDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RegulatorEventDefaultTypeInternal() {}
  union {
    RegulatorEvent _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RegulatorEventDefaultTypeInternal _RegulatorEvent_default_instance_;

inline constexpr RegulatorDiscreteControlProfile::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        controlmessageinfo_{nullptr},
        regulatordiscretecontrol_{nullptr},
        regulatorsystem_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR RegulatorDiscreteControlProfile::RegulatorDiscreteControlProfile(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(RegulatorDiscreteControlProfile_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RegulatorDiscreteControlProfileDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RegulatorDiscreteControlProfileDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RegulatorDiscreteControlProfileDefaultTypeInternal() {}
  union {
    RegulatorDiscreteControlProfile _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RegulatorDiscreteControlProfileDefaultTypeInternal _RegulatorDiscreteControlProfile_default_instance_;

inline constexpr RegulatorCSG::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : crvpts_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RegulatorCSG::RegulatorCSG(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(RegulatorCSG_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RegulatorCSGDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RegulatorCSGDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RegulatorCSGDefaultTypeInternal() {}
  union {
    RegulatorCSG _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RegulatorCSGDefaultTypeInternal _RegulatorCSG_default_instance_;

inline constexpr RegulatorStatusProfile::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        statusmessageinfo_{nullptr},
        regulatorstatus_{nullptr},
        regulatorsystem_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR RegulatorStatusProfile::RegulatorStatusProfile(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(RegulatorStatusProfile_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RegulatorStatusProfileDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RegulatorStatusProfileDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RegulatorStatusProfileDefaultTypeInternal() {}
  union {
    RegulatorStatusProfile _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RegulatorStatusProfileDefaultTypeInternal _RegulatorStatusProfile_default_instance_;

inline constexpr RegulatorEventProfile::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        eventmessageinfo_{nullptr},
        regulatorevent_{nullptr},
        regulatorsystem_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR RegulatorEventProfile::RegulatorEventProfile(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(RegulatorEventProfile_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RegulatorEventProfileDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RegulatorEventProfileDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RegulatorEventProfileDefaultTypeInternal() {}
  union {
    RegulatorEventProfile _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RegulatorEventProfileDefaultTypeInternal _RegulatorEventProfile_default_instance_;

inline constexpr RegulatorControlScheduleFSCH::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        valdcsg_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR RegulatorControlScheduleFSCH::RegulatorControlScheduleFSCH(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(RegulatorControlScheduleFSCH_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RegulatorControlScheduleFSCHDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RegulatorControlScheduleFSCHDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RegulatorControlScheduleFSCHDefaultTypeInternal() {}
  union {
    RegulatorControlScheduleFSCH _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RegulatorControlScheduleFSCHDefaultTypeInternal _RegulatorControlScheduleFSCH_default_instance_;

inline constexpr RegulatorControlFSCC::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        controlfscc_{nullptr},
        regulatorcontrolschedulefsch_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR RegulatorControlFSCC::RegulatorControlFSCC(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(RegulatorControlFSCC_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RegulatorControlFSCCDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RegulatorControlFSCCDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RegulatorControlFSCCDefaultTypeInternal() {}
  union {
    RegulatorControlFSCC _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RegulatorControlFSCCDefaultTypeInternal _RegulatorControlFSCC_default_instance_;

inline constexpr RegulatorControl::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        controlvalue_{nullptr},
        check_{nullptr},
        regulatorcontrolfscc_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR RegulatorControl::RegulatorControl(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(RegulatorControl_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RegulatorControlDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RegulatorControlDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RegulatorControlDefaultTypeInternal() {}
  union {
    RegulatorControl _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RegulatorControlDefaultTypeInternal _RegulatorControl_default_instance_;

inline constexpr RegulatorControlProfile::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        controlmessageinfo_{nullptr},
        regulatorcontrol_{nullptr},
        regulatorsystem_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR RegulatorControlProfile::RegulatorControlProfile(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(RegulatorControlProfile_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RegulatorControlProfileDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RegulatorControlProfileDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RegulatorControlProfileDefaultTypeInternal() {}
  union {
    RegulatorControlProfile _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RegulatorControlProfileDefaultTypeInternal _RegulatorControlProfile_default_instance_;
}  // namespace regulatormodule
static constexpr const ::_pb::EnumDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_enum_descriptors_regulatormodule_2fregulatormodule_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_regulatormodule_2fregulatormodule_2eproto = nullptr;
const ::uint32_t
    TableStruct_regulatormodule_2fregulatormodule_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::regulatormodule::DirectionalATCC, _impl_._has_bits_),
        9, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::regulatormodule::DirectionalATCC, _impl_.bndwid_),
        PROTOBUF_FIELD_OFFSET(::regulatormodule::DirectionalATCC, _impl_.ctldltmms_),
        PROTOBUF_FIELD_OFFSET(::regulatormodule::DirectionalATCC, _impl_.ldcr_),
        PROTOBUF_FIELD_OFFSET(::regulatormodule::DirectionalATCC, _impl_.ldcx_),
        PROTOBUF_FIELD_OFFSET(::regulatormodule::DirectionalATCC, _impl_.volspt_),
        PROTOBUF_FIELD_OFFSET(::regulatormodule::DirectionalATCC, _impl_.voltagesetpointenabled_),
        0,
        1,
        2,
        3,
        4,
        5,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::regulatormodule::RegulatorControlATCC, _impl_._has_bits_),
        16, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::regulatormodule::RegulatorControlATCC, _impl_.logicalnodeforcontrol_),
        PROTOBUF_FIELD_OFFSET(::regulatormodule::RegulatorControlATCC, _impl_.dirfwd_),
        PROTOBUF_FIELD_OFFSET(::regulatormodule::RegulatorControlATCC, _impl_.dirmode_),
        PROTOBUF_FIELD_OFFSET(::regulatormodule::RegulatorControlATCC, _impl_.dirrev_),
        PROTOBUF_FIELD_OFFSET(::regulatormodule::RegulatorControlATCC, _impl_.dirthd_),
        PROTOBUF_FIELD_OFFSET(::regulatormodule::RegulatorControlATCC, _impl_.parop_),
        PROTOBUF_FIELD_OFFSET(::regulatormodule::RegulatorControlATCC, _impl_.ramprates_),
        PROTOBUF_FIELD_OFFSET(::regulatormodule::RegulatorControlATCC, _impl_.state_),
        PROTOBUF_FIELD_OFFSET(::regulatormodule::RegulatorControlATCC, _impl_.tapopl_),
        PROTOBUF_FIELD_OFFSET(::regulatormodule::RegulatorControlATCC, _impl_.tapopr_),
        PROTOBUF_FIELD_OFFSET(::regulatormodule::RegulatorControlATCC, _impl_.vollmthi_),
        PROTOBUF_FIELD_OFFSET(::regulatormodule::RegulatorControlATCC, _impl_.vollmtlo_),
        PROTOBUF_FIELD_OFFSET(::regulatormodule::RegulatorControlATCC, _impl_.vollmtmode_),
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::regulatormodule::RegulatorPoint, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::regulatormodule::RegulatorPoint, _impl_.control_),
        PROTOBUF_FIELD_OFFSET(::regulatormodule::RegulatorPoint, _impl_.starttime_),
        0,
        1,
        0x000, // bitmap
        PROTOBUF_FIELD_OFFSET(::regulatormodule::RegulatorCSG, _impl_.crvpts_),
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::regulatormodule::RegulatorControlScheduleFSCH, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::regulatormodule::RegulatorControlScheduleFSCH, _impl_.valdcsg_),
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::regulatormodule::RegulatorControlFSCC, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::regulatormodule::RegulatorControlFSCC, _impl_.controlfscc_),
        PROTOBUF_FIELD_OFFSET(::regulatormodule::RegulatorControlFSCC, _impl_.regulatorcontrolschedulefsch_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::regulatormodule::RegulatorControl, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::regulatormodule::RegulatorControl, _impl_.controlvalue_),
        PROTOBUF_FIELD_OFFSET(::regulatormodule::RegulatorControl, _impl_.check_),
        PROTOBUF_FIELD_OFFSET(::regulatormodule::RegulatorControl, _impl_.regulatorcontrolfscc_),
        0,
        1,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::regulatormodule::RegulatorSystem, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::regulatormodule::RegulatorSystem, _impl_.conductingequipment_),
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::regulatormodule::RegulatorControlProfile, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::regulatormodule::RegulatorControlProfile, _impl_.controlmessageinfo_),
        PROTOBUF_FIELD_OFFSET(::regulatormodule::RegulatorControlProfile, _impl_.regulatorcontrol_),
        PROTOBUF_FIELD_OFFSET(::regulatormodule::RegulatorControlProfile, _impl_.regulatorsystem_),
        0,
        1,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::regulatormodule::RegulatorDiscreteControl, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::regulatormodule::RegulatorDiscreteControl, _impl_.controlvalue_),
        PROTOBUF_FIELD_OFFSET(::regulatormodule::RegulatorDiscreteControl, _impl_.check_),
        PROTOBUF_FIELD_OFFSET(::regulatormodule::RegulatorDiscreteControl, _impl_.regulatorcontrolatcc_),
        0,
        1,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::regulatormodule::RegulatorDiscreteControlProfile, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::regulatormodule::RegulatorDiscreteControlProfile, _impl_.controlmessageinfo_),
        PROTOBUF_FIELD_OFFSET(::regulatormodule::RegulatorDiscreteControlProfile, _impl_.regulatordiscretecontrol_),
        PROTOBUF_FIELD_OFFSET(::regulatormodule::RegulatorDiscreteControlProfile, _impl_.regulatorsystem_),
        0,
        1,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::regulatormodule::RegulatorEventAndStatusATCC, _impl_._has_bits_),
        24, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::regulatormodule::RegulatorEventAndStatusATCC, _impl_.bndctr_),
        PROTOBUF_FIELD_OFFSET(::regulatormodule::RegulatorEventAndStatusATCC, _impl_.bndwid_),
        PROTOBUF_FIELD_OFFSET(::regulatormodule::RegulatorEventAndStatusATCC, _impl_.bndwidhi_),
        PROTOBUF_FIELD_OFFSET(::regulatormodule::RegulatorEventAndStatusATCC, _impl_.bndwidlo_),
        PROTOBUF_FIELD_OFFSET(::regulatormodule::RegulatorEventAndStatusATCC, _impl_.dirctlrev_),
        PROTOBUF_FIELD_OFFSET(::regulatormodule::RegulatorEventAndStatusATCC, _impl_.dirindt_),
        PROTOBUF_FIELD_OFFSET(::regulatormodule::RegulatorEventAndStatusATCC, _impl_.dirrev_),
        PROTOBUF_FIELD_OFFSET(::regulatormodule::RegulatorEventAndStatusATCC, _impl_.ldcr_),
        PROTOBUF_FIELD_OFFSET(::regulatormodule::RegulatorEventAndStatusATCC, _impl_.ldcx_),
        PROTOBUF_FIELD_OFFSET(::regulatormodule::RegulatorEventAndStatusATCC, _impl_.parop_),
        PROTOBUF_FIELD_OFFSET(::regulatormodule::RegulatorEventAndStatusATCC, _impl_.ramprates_),
        PROTOBUF_FIELD_OFFSET(::regulatormodule::RegulatorEventAndStatusATCC, _impl_.state_),
        PROTOBUF_FIELD_OFFSET(::regulatormodule::RegulatorEventAndStatusATCC, _impl_.stdltmms_),
        PROTOBUF_FIELD_OFFSET(::regulatormodule::RegulatorEventAndStatusATCC, _impl_.tapoperr_),
        PROTOBUF_FIELD_OFFSET(::regulatormodule::RegulatorEventAndStatusATCC, _impl_.tappos_),
        PROTOBUF_FIELD_OFFSET(::regulatormodule::RegulatorEventAndStatusATCC, _impl_.vollmthi_),
        PROTOBUF_FIELD_OFFSET(::regulatormodule::RegulatorEventAndStatusATCC, _impl_.vollmtlo_),
        PROTOBUF_FIELD_OFFSET(::regulatormodule::RegulatorEventAndStatusATCC, _impl_.volspt_),
        PROTOBUF_FIELD_OFFSET(::regulatormodule::RegulatorEventAndStatusATCC, _impl_.voltagesetpointenabled_),
        PROTOBUF_FIELD_OFFSET(::regulatormodule::RegulatorEventAndStatusATCC, _impl_.dirmod_),
        PROTOBUF_FIELD_OFFSET(::regulatormodule::RegulatorEventAndStatusATCC, _impl_.vollmtmode_),
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::regulatormodule::RegulatorEventAndStatusANCR, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::regulatormodule::RegulatorEventAndStatusANCR, _impl_.logicalnodeforeventandstatus_),
        PROTOBUF_FIELD_OFFSET(::regulatormodule::RegulatorEventAndStatusANCR, _impl_.dynamictest_),
        PROTOBUF_FIELD_OFFSET(::regulatormodule::RegulatorEventAndStatusANCR, _impl_.pointstatus_),
        0,
        1,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::regulatormodule::RegulatorEvent, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::regulatormodule::RegulatorEvent, _impl_.eventvalue_),
        PROTOBUF_FIELD_OFFSET(::regulatormodule::RegulatorEvent, _impl_.regulatoreventandstatusancr_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::regulatormodule::RegulatorEventProfile, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::regulatormodule::RegulatorEventProfile, _impl_.eventmessageinfo_),
        PROTOBUF_FIELD_OFFSET(::regulatormodule::RegulatorEventProfile, _impl_.regulatorevent_),
        PROTOBUF_FIELD_OFFSET(::regulatormodule::RegulatorEventProfile, _impl_.regulatorsystem_),
        0,
        1,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::regulatormodule::RegulatorReading, _impl_._has_bits_),
        9, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::regulatormodule::RegulatorReading, _impl_.conductingequipmentterminalreading_),
        PROTOBUF_FIELD_OFFSET(::regulatormodule::RegulatorReading, _impl_.phasemmtn_),
        PROTOBUF_FIELD_OFFSET(::regulatormodule::RegulatorReading, _impl_.readingmmtr_),
        PROTOBUF_FIELD_OFFSET(::regulatormodule::RegulatorReading, _impl_.readingmmxu_),
        PROTOBUF_FIELD_OFFSET(::regulatormodule::RegulatorReading, _impl_.secondaryreadingmmxu_),
        PROTOBUF_FIELD_OFFSET(::regulatormodule::RegulatorReading, _impl_.readingmmdc_),
        0,
        1,
        2,
        3,
        4,
        5,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::regulatormodule::RegulatorReadingProfile, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::regulatormodule::RegulatorReadingProfile, _impl_.readingmessageinfo_),
        PROTOBUF_FIELD_OFFSET(::regulatormodule::RegulatorReadingProfile, _impl_.regulatorreading_),
        PROTOBUF_FIELD_OFFSET(::regulatormodule::RegulatorReadingProfile, _impl_.regulatorsystem_),
        0,
        ~0u,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::regulatormodule::RegulatorStatus, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::regulatormodule::RegulatorStatus, _impl_.statusvalue_),
        PROTOBUF_FIELD_OFFSET(::regulatormodule::RegulatorStatus, _impl_.regulatoreventandstatusancr_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::regulatormodule::RegulatorStatusProfile, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::regulatormodule::RegulatorStatusProfile, _impl_.statusmessageinfo_),
        PROTOBUF_FIELD_OFFSET(::regulatormodule::RegulatorStatusProfile, _impl_.regulatorstatus_),
        PROTOBUF_FIELD_OFFSET(::regulatormodule::RegulatorStatusProfile, _impl_.regulatorsystem_),
        0,
        1,
        2,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, sizeof(::regulatormodule::DirectionalATCC)},
        {15, sizeof(::regulatormodule::RegulatorControlATCC)},
        {44, sizeof(::regulatormodule::RegulatorPoint)},
        {51, sizeof(::regulatormodule::RegulatorCSG)},
        {53, sizeof(::regulatormodule::RegulatorControlScheduleFSCH)},
        {58, sizeof(::regulatormodule::RegulatorControlFSCC)},
        {65, sizeof(::regulatormodule::RegulatorControl)},
        {74, sizeof(::regulatormodule::RegulatorSystem)},
        {79, sizeof(::regulatormodule::RegulatorControlProfile)},
        {88, sizeof(::regulatormodule::RegulatorDiscreteControl)},
        {97, sizeof(::regulatormodule::RegulatorDiscreteControlProfile)},
        {106, sizeof(::regulatormodule::RegulatorEventAndStatusATCC)},
        {151, sizeof(::regulatormodule::RegulatorEventAndStatusANCR)},
        {160, sizeof(::regulatormodule::RegulatorEvent)},
        {167, sizeof(::regulatormodule::RegulatorEventProfile)},
        {176, sizeof(::regulatormodule::RegulatorReading)},
        {191, sizeof(::regulatormodule::RegulatorReadingProfile)},
        {200, sizeof(::regulatormodule::RegulatorStatus)},
        {207, sizeof(::regulatormodule::RegulatorStatusProfile)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::regulatormodule::_DirectionalATCC_default_instance_._instance,
    &::regulatormodule::_RegulatorControlATCC_default_instance_._instance,
    &::regulatormodule::_RegulatorPoint_default_instance_._instance,
    &::regulatormodule::_RegulatorCSG_default_instance_._instance,
    &::regulatormodule::_RegulatorControlScheduleFSCH_default_instance_._instance,
    &::regulatormodule::_RegulatorControlFSCC_default_instance_._instance,
    &::regulatormodule::_RegulatorControl_default_instance_._instance,
    &::regulatormodule::_RegulatorSystem_default_instance_._instance,
    &::regulatormodule::_RegulatorControlProfile_default_instance_._instance,
    &::regulatormodule::_RegulatorDiscreteControl_default_instance_._instance,
    &::regulatormodule::_RegulatorDiscreteControlProfile_default_instance_._instance,
    &::regulatormodule::_RegulatorEventAndStatusATCC_default_instance_._instance,
    &::regulatormodule::_RegulatorEventAndStatusANCR_default_instance_._instance,
    &::regulatormodule::_RegulatorEvent_default_instance_._instance,
    &::regulatormodule::_RegulatorEventProfile_default_instance_._instance,
    &::regulatormodule::_RegulatorReading_default_instance_._instance,
    &::regulatormodule::_RegulatorReadingProfile_default_instance_._instance,
    &::regulatormodule::_RegulatorStatus_default_instance_._instance,
    &::regulatormodule::_RegulatorStatusProfile_default_instance_._instance,
};
const char descriptor_table_protodef_regulatormodule_2fregulatormodule_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n%regulatormodule/regulatormodule.proto\022"
    "\017regulatormodule\032\tuml.proto\032\037commonmodul"
    "e/commonmodule.proto\"\220\002\n\017DirectionalATCC"
    "\022&\n\006BndWid\030\001 \001(\0132\026.commonmodule.PhaseAPC"
    "\022)\n\tCtlDlTmms\030\002 \001(\0132\026.commonmodule.Phase"
    "ISC\022$\n\004LDCR\030\003 \001(\0132\026.commonmodule.PhaseAP"
    "C\022$\n\004LDCX\030\004 \001(\0132\026.commonmodule.PhaseAPC\022"
    "&\n\006VolSpt\030\005 \001(\0132\026.commonmodule.PhaseAPC\022"
    "6\n\026voltageSetPointEnabled\030\006 \001(\0132\026.common"
    "module.PhaseDPC\"\214\005\n\024RegulatorControlATCC"
    "\022H\n\025logicalNodeForControl\030\001 \001(\0132#.common"
    "module.LogicalNodeForControlB\004\200\265\030\001\0220\n\006Di"
    "rFwd\030\002 \001(\0132 .regulatormodule.Directional"
    "ATCC\0229\n\007DirMode\030\003 \001(\0132(.commonmodule.Opt"
    "ional_DirectionModeKind\0220\n\006DirRev\030\004 \001(\0132"
    " .regulatormodule.DirectionalATCC\022&\n\006Dir"
    "Thd\030\005 \001(\0132\026.commonmodule.PhaseAPC\022%\n\005Par"
    "Op\030\006 \001(\0132\026.commonmodule.PhaseSPC\022)\n\tramp"
    "Rates\030\007 \001(\0132\026.commonmodule.RampRate\022/\n\005s"
    "tate\030\010 \001(\0132 .commonmodule.Optional_State"
    "Kind\022&\n\006TapOpL\030\t \001(\0132\026.commonmodule.Phas"
    "eSPC\022&\n\006TapOpR\030\n \001(\0132\026.commonmodule.Phas"
    "eSPC\022(\n\010VolLmtHi\030\013 \001(\0132\026.commonmodule.Ph"
    "aseAPC\022(\n\010VolLmtLo\030\014 \001(\0132\026.commonmodule."
    "PhaseAPC\022<\n\nVolLmtMode\030\r \001(\0132(.commonmod"
    "ule.Optional_VoltLimitModeKind\"~\n\016Regula"
    "torPoint\0226\n\007control\030\001 \001(\0132%.regulatormod"
    "ule.RegulatorControlATCC\0224\n\tstartTime\030\010 "
    "\001(\0132\027.commonmodule.TimestampB\010\210\265\030\001\220\265\030\001\"I"
    "\n\014RegulatorCSG\0229\n\006crvPts\030\001 \003(\0132\037.regulat"
    "ormodule.RegulatorPointB\010\210\265\030\001\220\265\030\001\"X\n\034Reg"
    "ulatorControlScheduleFSCH\0228\n\007ValDCSG\030\001 \001"
    "(\0132\035.regulatormodule.RegulatorCSGB\010\210\265\030\001\220"
    "\265\030\001\"\241\001\n\024RegulatorControlFSCC\0224\n\013controlF"
    "SCC\030\001 \001(\0132\031.commonmodule.ControlFSCCB\004\200\265"
    "\030\001\022S\n\034regulatorControlScheduleFSCH\030\002 \001(\013"
    "2-.regulatormodule.RegulatorControlSched"
    "uleFSCH\"\275\001\n\020RegulatorControl\0226\n\014controlV"
    "alue\030\001 \001(\0132\032.commonmodule.ControlValueB\004"
    "\200\265\030\001\022,\n\005check\030\002 \001(\0132\035.commonmodule.Check"
    "Conditions\022C\n\024regulatorControlFSCC\030\003 \001(\013"
    "2%.regulatormodule.RegulatorControlFSCC\""
    "W\n\017RegulatorSystem\022D\n\023conductingEquipmen"
    "t\030\001 \001(\0132!.commonmodule.ConductingEquipme"
    "ntB\004\200\265\030\001\"\357\001\n\027RegulatorControlProfile\022B\n\022"
    "controlMessageInfo\030\001 \001(\0132 .commonmodule."
    "ControlMessageInfoB\004\200\265\030\001\022E\n\020regulatorCon"
    "trol\030\002 \001(\0132!.regulatormodule.RegulatorCo"
    "ntrolB\010\210\265\030\001\220\265\030\001\022C\n\017regulatorSystem\030\003 \001(\013"
    "2 .regulatormodule.RegulatorSystemB\010\210\265\030\001"
    "\220\265\030\001:\004\300\363\030\001\"\305\001\n\030RegulatorDiscreteControl\022"
    "6\n\014controlValue\030\001 \001(\0132\032.commonmodule.Con"
    "trolValueB\004\200\265\030\001\022,\n\005check\030\002 \001(\0132\035.commonm"
    "odule.CheckConditions\022C\n\024regulatorContro"
    "lATCC\030\003 \001(\0132%.regulatormodule.RegulatorC"
    "ontrolATCC\"\207\002\n\037RegulatorDiscreteControlP"
    "rofile\022B\n\022controlMessageInfo\030\001 \001(\0132 .com"
    "monmodule.ControlMessageInfoB\004\200\265\030\001\022U\n\030re"
    "gulatorDiscreteControl\030\002 \001(\0132).regulator"
    "module.RegulatorDiscreteControlB\010\210\265\030\001\220\265\030"
    "\001\022C\n\017regulatorSystem\030\003 \001(\0132 .regulatormo"
    "dule.RegulatorSystemB\010\210\265\030\001\220\265\030\001:\004\300\363\030\001\"\244\007\n"
    "\033RegulatorEventAndStatusATCC\022!\n\006BndCtr\030\001"
    " \001(\0132\021.commonmodule.ASG\022!\n\006BndWid\030\002 \001(\0132"
    "\021.commonmodule.ASG\022(\n\010BndWidHi\030\003 \001(\0132\026.c"
    "ommonmodule.PhaseSPS\022(\n\010BndWidLo\030\004 \001(\0132\026"
    ".commonmodule.PhaseSPS\022)\n\tDirCtlRev\030\005 \001("
    "\0132\026.commonmodule.PhaseSPS\022\'\n\007DirIndt\030\006 \001"
    "(\0132\026.commonmodule.PhaseSPS\022&\n\006DirRev\030\007 \001"
    "(\0132\026.commonmodule.PhaseSPS\022\037\n\004LDCR\030\010 \001(\013"
    "2\021.commonmodule.ASG\022\037\n\004LDCX\030\t \001(\0132\021.comm"
    "onmodule.ASG\022&\n\005ParOp\030\n \001(\0132\027.commonmodu"
    "le.StatusSPS\022)\n\trampRates\030\013 \001(\0132\026.common"
    "module.RampRate\022/\n\005state\030\014 \001(\0132 .commonm"
    "odule.Optional_StateKind\022)\n\010StDlTmms\030\r \001"
    "(\0132\027.commonmodule.StatusINC\022)\n\010TapOpErr\030"
    "\016 \001(\0132\027.commonmodule.StatusSPS\022&\n\006TapPos"
    "\030\017 \001(\0132\026.commonmodule.PhaseINS\022(\n\010VolLmt"
    "Hi\030\020 \001(\0132\026.commonmodule.PhaseSPS\022(\n\010VolL"
    "mtLo\030\021 \001(\0132\026.commonmodule.PhaseSPS\022&\n\006Vo"
    "lSpt\030\022 \001(\0132\026.commonmodule.PhaseAPC\0227\n\026vo"
    "ltageSetPointEnabled\030\023 \001(\0132\027.commonmodul"
    "e.StatusSPS\0228\n\006DirMod\030\024 \001(\0132(.commonmodu"
    "le.Optional_DirectionModeKind\022<\n\nVolLmtM"
    "ode\030\025 \001(\0132(.commonmodule.Optional_VoltLi"
    "mitModeKind\"\360\001\n\033RegulatorEventAndStatusA"
    "NCR\022V\n\034logicalNodeForEventAndStatus\030\001 \001("
    "\0132*.commonmodule.LogicalNodeForEventAndS"
    "tatusB\004\200\265\030\001\0226\n\013DynamicTest\030\002 \001(\0132!.commo"
    "nmodule.ENS_DynamicTestKind\022A\n\013PointStat"
    "us\030\003 \001(\0132,.regulatormodule.RegulatorEven"
    "tAndStatusATCC\"\227\001\n\016RegulatorEvent\0222\n\neve"
    "ntValue\030\001 \001(\0132\030.commonmodule.EventValueB"
    "\004\200\265\030\001\022Q\n\033regulatorEventAndStatusANCR\030\002 \001"
    "(\0132,.regulatormodule.RegulatorEventAndSt"
    "atusANCR\"\345\001\n\025RegulatorEventProfile\022>\n\020ev"
    "entMessageInfo\030\001 \001(\0132\036.commonmodule.Even"
    "tMessageInfoB\004\200\265\030\001\022A\n\016regulatorEvent\030\002 \001"
    "(\0132\037.regulatormodule.RegulatorEventB\010\210\265\030"
    "\001\220\265\030\001\022C\n\017regulatorSystem\030\003 \001(\0132 .regulat"
    "ormodule.RegulatorSystemB\010\210\265\030\001\220\265\030\001:\004\300\363\030\001"
    "\"\353\002\n\020RegulatorReading\022b\n\"conductingEquip"
    "mentTerminalReading\030\001 \001(\01320.commonmodule"
    ".ConductingEquipmentTerminalReadingB\004\200\265\030"
    "\001\022*\n\tphaseMMTN\030\002 \001(\0132\027.commonmodule.Phas"
    "eMMTN\022.\n\013readingMMTR\030\003 \001(\0132\031.commonmodul"
    "e.ReadingMMTR\022.\n\013readingMMXU\030\004 \001(\0132\031.com"
    "monmodule.ReadingMMXU\0227\n\024secondaryReadin"
    "gMMXU\030\005 \001(\0132\031.commonmodule.ReadingMMXU\022."
    "\n\013readingMMDC\030\006 \001(\0132\031.commonmodule.Readi"
    "ngMMDC\"\363\001\n\027RegulatorReadingProfile\022B\n\022re"
    "adingMessageInfo\030\001 \001(\0132 .commonmodule.Re"
    "adingMessageInfoB\004\200\265\030\001\022I\n\020regulatorReadi"
    "ng\030\002 \003(\0132!.regulatormodule.RegulatorRead"
    "ingB\014\210\265\030\001\220\265\030\001\230\265\030\002\022C\n\017regulatorSystem\030\003 \001"
    "(\0132 .regulatormodule.RegulatorSystemB\010\210\265"
    "\030\001\220\265\030\001:\004\300\363\030\001\"\232\001\n\017RegulatorStatus\0224\n\013stat"
    "usValue\030\001 \001(\0132\031.commonmodule.StatusValue"
    "B\004\200\265\030\001\022Q\n\033regulatorEventAndStatusANCR\030\002 "
    "\001(\0132,.regulatormodule.RegulatorEventAndS"
    "tatusANCR\"\352\001\n\026RegulatorStatusProfile\022@\n\021"
    "statusMessageInfo\030\001 \001(\0132\037.commonmodule.S"
    "tatusMessageInfoB\004\200\265\030\001\022C\n\017regulatorStatu"
    "s\030\002 \001(\0132 .regulatormodule.RegulatorStatu"
    "sB\010\210\265\030\001\220\265\030\001\022C\n\017regulatorSystem\030\003 \001(\0132 .r"
    "egulatormodule.RegulatorSystemB\010\210\265\030\001\220\265\030\001"
    ":\004\300\363\030\001B\215\001\n\027openfmb.regulatormoduleP\001ZVgi"
    "tlab.com/openfmb/psm/ops/protobuf/go-ope"
    "nfmb-ops-protobuf/v2/openfmb/regulatormo"
    "dule\252\002\027openfmb.regulatormoduleb\006proto3"
};
static const ::_pbi::DescriptorTable* PROTOBUF_NONNULL const
    descriptor_table_regulatormodule_2fregulatormodule_2eproto_deps[2] = {
        &::descriptor_table_commonmodule_2fcommonmodule_2eproto,
        &::descriptor_table_uml_2eproto,
};
static ::absl::once_flag descriptor_table_regulatormodule_2fregulatormodule_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_regulatormodule_2fregulatormodule_2eproto = {
    false,
    false,
    5198,
    descriptor_table_protodef_regulatormodule_2fregulatormodule_2eproto,
    "regulatormodule/regulatormodule.proto",
    &descriptor_table_regulatormodule_2fregulatormodule_2eproto_once,
    descriptor_table_regulatormodule_2fregulatormodule_2eproto_deps,
    2,
    19,
    schemas,
    file_default_instances,
    TableStruct_regulatormodule_2fregulatormodule_2eproto::offsets,
    file_level_enum_descriptors_regulatormodule_2fregulatormodule_2eproto,
    file_level_service_descriptors_regulatormodule_2fregulatormodule_2eproto,
};
namespace regulatormodule {
// ===================================================================

class DirectionalATCC::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<DirectionalATCC>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(DirectionalATCC, _impl_._has_bits_);
};

void DirectionalATCC::clear_bndwid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.bndwid_ != nullptr) _impl_.bndwid_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void DirectionalATCC::clear_ctldltmms() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.ctldltmms_ != nullptr) _impl_.ctldltmms_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void DirectionalATCC::clear_ldcr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.ldcr_ != nullptr) _impl_.ldcr_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void DirectionalATCC::clear_ldcx() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.ldcx_ != nullptr) _impl_.ldcx_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
void DirectionalATCC::clear_volspt() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.volspt_ != nullptr) _impl_.volspt_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
void DirectionalATCC::clear_voltagesetpointenabled() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.voltagesetpointenabled_ != nullptr) _impl_.voltagesetpointenabled_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
DirectionalATCC::DirectionalATCC(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, DirectionalATCC_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:regulatormodule.DirectionalATCC)
}
PROTOBUF_NDEBUG_INLINE DirectionalATCC::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::regulatormodule::DirectionalATCC& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

DirectionalATCC::DirectionalATCC(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const DirectionalATCC& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, DirectionalATCC_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DirectionalATCC* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.bndwid_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.bndwid_)
                : nullptr;
  _impl_.ctldltmms_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.ctldltmms_)
                : nullptr;
  _impl_.ldcr_ = ((cached_has_bits & 0x00000004u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.ldcr_)
                : nullptr;
  _impl_.ldcx_ = ((cached_has_bits & 0x00000008u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.ldcx_)
                : nullptr;
  _impl_.volspt_ = ((cached_has_bits & 0x00000010u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.volspt_)
                : nullptr;
  _impl_.voltagesetpointenabled_ = ((cached_has_bits & 0x00000020u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.voltagesetpointenabled_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:regulatormodule.DirectionalATCC)
}
PROTOBUF_NDEBUG_INLINE DirectionalATCC::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void DirectionalATCC::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, bndwid_),
           0,
           offsetof(Impl_, voltagesetpointenabled_) -
               offsetof(Impl_, bndwid_) +
               sizeof(Impl_::voltagesetpointenabled_));
}
DirectionalATCC::~DirectionalATCC() {
  // @@protoc_insertion_point(destructor:regulatormodule.DirectionalATCC)
  SharedDtor(*this);
}
inline void DirectionalATCC::SharedDtor(MessageLite& self) {
  DirectionalATCC& this_ = static_cast<DirectionalATCC&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.bndwid_;
  delete this_._impl_.ctldltmms_;
  delete this_._impl_.ldcr_;
  delete this_._impl_.ldcx_;
  delete this_._impl_.volspt_;
  delete this_._impl_.voltagesetpointenabled_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL DirectionalATCC::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) DirectionalATCC(arena);
}
constexpr auto DirectionalATCC::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(DirectionalATCC),
                                            alignof(DirectionalATCC));
}
constexpr auto DirectionalATCC::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_DirectionalATCC_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &DirectionalATCC::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<DirectionalATCC>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &DirectionalATCC::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<DirectionalATCC>(), &DirectionalATCC::ByteSizeLong,
              &DirectionalATCC::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(DirectionalATCC, _impl_._cached_size_),
          false,
      },
      &DirectionalATCC::kDescriptorMethods,
      &descriptor_table_regulatormodule_2fregulatormodule_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull DirectionalATCC_class_data_ =
        DirectionalATCC::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
DirectionalATCC::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&DirectionalATCC_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(DirectionalATCC_class_data_.tc_table);
  return DirectionalATCC_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 6, 0, 2>
DirectionalATCC::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DirectionalATCC, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    6,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    DirectionalATCC_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::regulatormodule::DirectionalATCC>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .commonmodule.PhaseAPC BndWid = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(DirectionalATCC, _impl_.bndwid_)}},
    // .commonmodule.PhaseISC CtlDlTmms = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(DirectionalATCC, _impl_.ctldltmms_)}},
    // .commonmodule.PhaseAPC LDCR = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(DirectionalATCC, _impl_.ldcr_)}},
    // .commonmodule.PhaseAPC LDCX = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 3, 3, PROTOBUF_FIELD_OFFSET(DirectionalATCC, _impl_.ldcx_)}},
    // .commonmodule.PhaseAPC VolSpt = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 4, 4, PROTOBUF_FIELD_OFFSET(DirectionalATCC, _impl_.volspt_)}},
    // .commonmodule.PhaseDPC voltageSetPointEnabled = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 5, 5, PROTOBUF_FIELD_OFFSET(DirectionalATCC, _impl_.voltagesetpointenabled_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .commonmodule.PhaseAPC BndWid = 1;
    {PROTOBUF_FIELD_OFFSET(DirectionalATCC, _impl_.bndwid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .commonmodule.PhaseISC CtlDlTmms = 2;
    {PROTOBUF_FIELD_OFFSET(DirectionalATCC, _impl_.ctldltmms_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .commonmodule.PhaseAPC LDCR = 3;
    {PROTOBUF_FIELD_OFFSET(DirectionalATCC, _impl_.ldcr_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .commonmodule.PhaseAPC LDCX = 4;
    {PROTOBUF_FIELD_OFFSET(DirectionalATCC, _impl_.ldcx_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .commonmodule.PhaseAPC VolSpt = 5;
    {PROTOBUF_FIELD_OFFSET(DirectionalATCC, _impl_.volspt_), _Internal::kHasBitsOffset + 4, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .commonmodule.PhaseDPC voltageSetPointEnabled = 6;
    {PROTOBUF_FIELD_OFFSET(DirectionalATCC, _impl_.voltagesetpointenabled_), _Internal::kHasBitsOffset + 5, 5,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::commonmodule::PhaseAPC>()},
      {::_pbi::TcParser::GetTable<::commonmodule::PhaseISC>()},
      {::_pbi::TcParser::GetTable<::commonmodule::PhaseAPC>()},
      {::_pbi::TcParser::GetTable<::commonmodule::PhaseAPC>()},
      {::_pbi::TcParser::GetTable<::commonmodule::PhaseAPC>()},
      {::_pbi::TcParser::GetTable<::commonmodule::PhaseDPC>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void DirectionalATCC::Clear() {
// @@protoc_insertion_point(message_clear_start:regulatormodule.DirectionalATCC)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.bndwid_ != nullptr);
      _impl_.bndwid_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.ctldltmms_ != nullptr);
      _impl_.ctldltmms_->Clear();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(_impl_.ldcr_ != nullptr);
      _impl_.ldcr_->Clear();
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(_impl_.ldcx_ != nullptr);
      _impl_.ldcx_->Clear();
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      ABSL_DCHECK(_impl_.volspt_ != nullptr);
      _impl_.volspt_->Clear();
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      ABSL_DCHECK(_impl_.voltagesetpointenabled_ != nullptr);
      _impl_.voltagesetpointenabled_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL DirectionalATCC::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const DirectionalATCC& this_ = static_cast<const DirectionalATCC&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL DirectionalATCC::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const DirectionalATCC& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:regulatormodule.DirectionalATCC)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .commonmodule.PhaseAPC BndWid = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.bndwid_, this_._impl_.bndwid_->GetCachedSize(), target,
        stream);
  }

  // .commonmodule.PhaseISC CtlDlTmms = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.ctldltmms_, this_._impl_.ctldltmms_->GetCachedSize(), target,
        stream);
  }

  // .commonmodule.PhaseAPC LDCR = 3;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.ldcr_, this_._impl_.ldcr_->GetCachedSize(), target,
        stream);
  }

  // .commonmodule.PhaseAPC LDCX = 4;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *this_._impl_.ldcx_, this_._impl_.ldcx_->GetCachedSize(), target,
        stream);
  }

  // .commonmodule.PhaseAPC VolSpt = 5;
  if ((cached_has_bits & 0x00000010u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *this_._impl_.volspt_, this_._impl_.volspt_->GetCachedSize(), target,
        stream);
  }

  // .commonmodule.PhaseDPC voltageSetPointEnabled = 6;
  if ((cached_has_bits & 0x00000020u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        6, *this_._impl_.voltagesetpointenabled_, this_._impl_.voltagesetpointenabled_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:regulatormodule.DirectionalATCC)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t DirectionalATCC::ByteSizeLong(const MessageLite& base) {
  const DirectionalATCC& this_ = static_cast<const DirectionalATCC&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t DirectionalATCC::ByteSizeLong() const {
  const DirectionalATCC& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:regulatormodule.DirectionalATCC)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fu) != 0) {
    // .commonmodule.PhaseAPC BndWid = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.bndwid_);
    }
    // .commonmodule.PhaseISC CtlDlTmms = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.ctldltmms_);
    }
    // .commonmodule.PhaseAPC LDCR = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.ldcr_);
    }
    // .commonmodule.PhaseAPC LDCX = 4;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.ldcx_);
    }
    // .commonmodule.PhaseAPC VolSpt = 5;
    if ((cached_has_bits & 0x00000010u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.volspt_);
    }
    // .commonmodule.PhaseDPC voltageSetPointEnabled = 6;
    if ((cached_has_bits & 0x00000020u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.voltagesetpointenabled_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void DirectionalATCC::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DirectionalATCC*>(&to_msg);
  auto& from = static_cast<const DirectionalATCC&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:regulatormodule.DirectionalATCC)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.bndwid_ != nullptr);
      if (_this->_impl_.bndwid_ == nullptr) {
        _this->_impl_.bndwid_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.bndwid_);
      } else {
        _this->_impl_.bndwid_->MergeFrom(*from._impl_.bndwid_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.ctldltmms_ != nullptr);
      if (_this->_impl_.ctldltmms_ == nullptr) {
        _this->_impl_.ctldltmms_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.ctldltmms_);
      } else {
        _this->_impl_.ctldltmms_->MergeFrom(*from._impl_.ctldltmms_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(from._impl_.ldcr_ != nullptr);
      if (_this->_impl_.ldcr_ == nullptr) {
        _this->_impl_.ldcr_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.ldcr_);
      } else {
        _this->_impl_.ldcr_->MergeFrom(*from._impl_.ldcr_);
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(from._impl_.ldcx_ != nullptr);
      if (_this->_impl_.ldcx_ == nullptr) {
        _this->_impl_.ldcx_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.ldcx_);
      } else {
        _this->_impl_.ldcx_->MergeFrom(*from._impl_.ldcx_);
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      ABSL_DCHECK(from._impl_.volspt_ != nullptr);
      if (_this->_impl_.volspt_ == nullptr) {
        _this->_impl_.volspt_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.volspt_);
      } else {
        _this->_impl_.volspt_->MergeFrom(*from._impl_.volspt_);
      }
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      ABSL_DCHECK(from._impl_.voltagesetpointenabled_ != nullptr);
      if (_this->_impl_.voltagesetpointenabled_ == nullptr) {
        _this->_impl_.voltagesetpointenabled_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.voltagesetpointenabled_);
      } else {
        _this->_impl_.voltagesetpointenabled_->MergeFrom(*from._impl_.voltagesetpointenabled_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DirectionalATCC::CopyFrom(const DirectionalATCC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:regulatormodule.DirectionalATCC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DirectionalATCC::InternalSwap(DirectionalATCC* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DirectionalATCC, _impl_.voltagesetpointenabled_)
      + sizeof(DirectionalATCC::_impl_.voltagesetpointenabled_)
      - PROTOBUF_FIELD_OFFSET(DirectionalATCC, _impl_.bndwid_)>(
          reinterpret_cast<char*>(&_impl_.bndwid_),
          reinterpret_cast<char*>(&other->_impl_.bndwid_));
}

::google::protobuf::Metadata DirectionalATCC::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RegulatorControlATCC::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<RegulatorControlATCC>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RegulatorControlATCC, _impl_._has_bits_);
};

void RegulatorControlATCC::clear_logicalnodeforcontrol() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.logicalnodeforcontrol_ != nullptr) _impl_.logicalnodeforcontrol_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void RegulatorControlATCC::clear_dirmode() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.dirmode_ != nullptr) _impl_.dirmode_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void RegulatorControlATCC::clear_dirthd() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.dirthd_ != nullptr) _impl_.dirthd_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
void RegulatorControlATCC::clear_parop() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.parop_ != nullptr) _impl_.parop_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
void RegulatorControlATCC::clear_ramprates() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.ramprates_ != nullptr) _impl_.ramprates_->Clear();
  _impl_._has_bits_[0] &= ~0x00000040u;
}
void RegulatorControlATCC::clear_state() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.state_ != nullptr) _impl_.state_->Clear();
  _impl_._has_bits_[0] &= ~0x00000080u;
}
void RegulatorControlATCC::clear_tapopl() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.tapopl_ != nullptr) _impl_.tapopl_->Clear();
  _impl_._has_bits_[0] &= ~0x00000100u;
}
void RegulatorControlATCC::clear_tapopr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.tapopr_ != nullptr) _impl_.tapopr_->Clear();
  _impl_._has_bits_[0] &= ~0x00000200u;
}
void RegulatorControlATCC::clear_vollmthi() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.vollmthi_ != nullptr) _impl_.vollmthi_->Clear();
  _impl_._has_bits_[0] &= ~0x00000400u;
}
void RegulatorControlATCC::clear_vollmtlo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.vollmtlo_ != nullptr) _impl_.vollmtlo_->Clear();
  _impl_._has_bits_[0] &= ~0x00000800u;
}
void RegulatorControlATCC::clear_vollmtmode() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.vollmtmode_ != nullptr) _impl_.vollmtmode_->Clear();
  _impl_._has_bits_[0] &= ~0x00001000u;
}
RegulatorControlATCC::RegulatorControlATCC(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RegulatorControlATCC_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:regulatormodule.RegulatorControlATCC)
}
PROTOBUF_NDEBUG_INLINE RegulatorControlATCC::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::regulatormodule::RegulatorControlATCC& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

RegulatorControlATCC::RegulatorControlATCC(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const RegulatorControlATCC& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RegulatorControlATCC_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RegulatorControlATCC* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.logicalnodeforcontrol_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.logicalnodeforcontrol_)
                : nullptr;
  _impl_.dirfwd_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.dirfwd_)
                : nullptr;
  _impl_.dirmode_ = ((cached_has_bits & 0x00000004u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.dirmode_)
                : nullptr;
  _impl_.dirrev_ = ((cached_has_bits & 0x00000008u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.dirrev_)
                : nullptr;
  _impl_.dirthd_ = ((cached_has_bits & 0x00000010u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.dirthd_)
                : nullptr;
  _impl_.parop_ = ((cached_has_bits & 0x00000020u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.parop_)
                : nullptr;
  _impl_.ramprates_ = ((cached_has_bits & 0x00000040u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.ramprates_)
                : nullptr;
  _impl_.state_ = ((cached_has_bits & 0x00000080u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.state_)
                : nullptr;
  _impl_.tapopl_ = ((cached_has_bits & 0x00000100u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.tapopl_)
                : nullptr;
  _impl_.tapopr_ = ((cached_has_bits & 0x00000200u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.tapopr_)
                : nullptr;
  _impl_.vollmthi_ = ((cached_has_bits & 0x00000400u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.vollmthi_)
                : nullptr;
  _impl_.vollmtlo_ = ((cached_has_bits & 0x00000800u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.vollmtlo_)
                : nullptr;
  _impl_.vollmtmode_ = ((cached_has_bits & 0x00001000u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.vollmtmode_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:regulatormodule.RegulatorControlATCC)
}
PROTOBUF_NDEBUG_INLINE RegulatorControlATCC::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void RegulatorControlATCC::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, logicalnodeforcontrol_),
           0,
           offsetof(Impl_, vollmtmode_) -
               offsetof(Impl_, logicalnodeforcontrol_) +
               sizeof(Impl_::vollmtmode_));
}
RegulatorControlATCC::~RegulatorControlATCC() {
  // @@protoc_insertion_point(destructor:regulatormodule.RegulatorControlATCC)
  SharedDtor(*this);
}
inline void RegulatorControlATCC::SharedDtor(MessageLite& self) {
  RegulatorControlATCC& this_ = static_cast<RegulatorControlATCC&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.logicalnodeforcontrol_;
  delete this_._impl_.dirfwd_;
  delete this_._impl_.dirmode_;
  delete this_._impl_.dirrev_;
  delete this_._impl_.dirthd_;
  delete this_._impl_.parop_;
  delete this_._impl_.ramprates_;
  delete this_._impl_.state_;
  delete this_._impl_.tapopl_;
  delete this_._impl_.tapopr_;
  delete this_._impl_.vollmthi_;
  delete this_._impl_.vollmtlo_;
  delete this_._impl_.vollmtmode_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL RegulatorControlATCC::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) RegulatorControlATCC(arena);
}
constexpr auto RegulatorControlATCC::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(RegulatorControlATCC),
                                            alignof(RegulatorControlATCC));
}
constexpr auto RegulatorControlATCC::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_RegulatorControlATCC_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &RegulatorControlATCC::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<RegulatorControlATCC>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &RegulatorControlATCC::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<RegulatorControlATCC>(), &RegulatorControlATCC::ByteSizeLong,
              &RegulatorControlATCC::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(RegulatorControlATCC, _impl_._cached_size_),
          false,
      },
      &RegulatorControlATCC::kDescriptorMethods,
      &descriptor_table_regulatormodule_2fregulatormodule_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull RegulatorControlATCC_class_data_ =
        RegulatorControlATCC::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
RegulatorControlATCC::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&RegulatorControlATCC_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(RegulatorControlATCC_class_data_.tc_table);
  return RegulatorControlATCC_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 13, 13, 0, 2>
RegulatorControlATCC::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RegulatorControlATCC, _impl_._has_bits_),
    0, // no _extensions_
    13, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294959104,  // skipmap
    offsetof(decltype(_table_), field_entries),
    13,  // num_field_entries
    13,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    RegulatorControlATCC_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::regulatormodule::RegulatorControlATCC>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .commonmodule.LogicalNodeForControl logicalNodeForControl = 1 [(.uml.option_parent_message) = true];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RegulatorControlATCC, _impl_.logicalnodeforcontrol_)}},
    // .regulatormodule.DirectionalATCC DirFwd = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(RegulatorControlATCC, _impl_.dirfwd_)}},
    // .commonmodule.Optional_DirectionModeKind DirMode = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(RegulatorControlATCC, _impl_.dirmode_)}},
    // .regulatormodule.DirectionalATCC DirRev = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 3, 3, PROTOBUF_FIELD_OFFSET(RegulatorControlATCC, _impl_.dirrev_)}},
    // .commonmodule.PhaseAPC DirThd = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 4, 4, PROTOBUF_FIELD_OFFSET(RegulatorControlATCC, _impl_.dirthd_)}},
    // .commonmodule.PhaseSPC ParOp = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 5, 5, PROTOBUF_FIELD_OFFSET(RegulatorControlATCC, _impl_.parop_)}},
    // .commonmodule.RampRate rampRates = 7;
    {::_pbi::TcParser::FastMtS1,
     {58, 6, 6, PROTOBUF_FIELD_OFFSET(RegulatorControlATCC, _impl_.ramprates_)}},
    // .commonmodule.Optional_StateKind state = 8;
    {::_pbi::TcParser::FastMtS1,
     {66, 7, 7, PROTOBUF_FIELD_OFFSET(RegulatorControlATCC, _impl_.state_)}},
    // .commonmodule.PhaseSPC TapOpL = 9;
    {::_pbi::TcParser::FastMtS1,
     {74, 8, 8, PROTOBUF_FIELD_OFFSET(RegulatorControlATCC, _impl_.tapopl_)}},
    // .commonmodule.PhaseSPC TapOpR = 10;
    {::_pbi::TcParser::FastMtS1,
     {82, 9, 9, PROTOBUF_FIELD_OFFSET(RegulatorControlATCC, _impl_.tapopr_)}},
    // .commonmodule.PhaseAPC VolLmtHi = 11;
    {::_pbi::TcParser::FastMtS1,
     {90, 10, 10, PROTOBUF_FIELD_OFFSET(RegulatorControlATCC, _impl_.vollmthi_)}},
    // .commonmodule.PhaseAPC VolLmtLo = 12;
    {::_pbi::TcParser::FastMtS1,
     {98, 11, 11, PROTOBUF_FIELD_OFFSET(RegulatorControlATCC, _impl_.vollmtlo_)}},
    // .commonmodule.Optional_VoltLimitModeKind VolLmtMode = 13;
    {::_pbi::TcParser::FastMtS1,
     {106, 12, 12, PROTOBUF_FIELD_OFFSET(RegulatorControlATCC, _impl_.vollmtmode_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .commonmodule.LogicalNodeForControl logicalNodeForControl = 1 [(.uml.option_parent_message) = true];
    {PROTOBUF_FIELD_OFFSET(RegulatorControlATCC, _impl_.logicalnodeforcontrol_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .regulatormodule.DirectionalATCC DirFwd = 2;
    {PROTOBUF_FIELD_OFFSET(RegulatorControlATCC, _impl_.dirfwd_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .commonmodule.Optional_DirectionModeKind DirMode = 3;
    {PROTOBUF_FIELD_OFFSET(RegulatorControlATCC, _impl_.dirmode_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .regulatormodule.DirectionalATCC DirRev = 4;
    {PROTOBUF_FIELD_OFFSET(RegulatorControlATCC, _impl_.dirrev_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .commonmodule.PhaseAPC DirThd = 5;
    {PROTOBUF_FIELD_OFFSET(RegulatorControlATCC, _impl_.dirthd_), _Internal::kHasBitsOffset + 4, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .commonmodule.PhaseSPC ParOp = 6;
    {PROTOBUF_FIELD_OFFSET(RegulatorControlATCC, _impl_.parop_), _Internal::kHasBitsOffset + 5, 5,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .commonmodule.RampRate rampRates = 7;
    {PROTOBUF_FIELD_OFFSET(RegulatorControlATCC, _impl_.ramprates_), _Internal::kHasBitsOffset + 6, 6,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .commonmodule.Optional_StateKind state = 8;
    {PROTOBUF_FIELD_OFFSET(RegulatorControlATCC, _impl_.state_), _Internal::kHasBitsOffset + 7, 7,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .commonmodule.PhaseSPC TapOpL = 9;
    {PROTOBUF_FIELD_OFFSET(RegulatorControlATCC, _impl_.tapopl_), _Internal::kHasBitsOffset + 8, 8,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .commonmodule.PhaseSPC TapOpR = 10;
    {PROTOBUF_FIELD_OFFSET(RegulatorControlATCC, _impl_.tapopr_), _Internal::kHasBitsOffset + 9, 9,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .commonmodule.PhaseAPC VolLmtHi = 11;
    {PROTOBUF_FIELD_OFFSET(RegulatorControlATCC, _impl_.vollmthi_), _Internal::kHasBitsOffset + 10, 10,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .commonmodule.PhaseAPC VolLmtLo = 12;
    {PROTOBUF_FIELD_OFFSET(RegulatorControlATCC, _impl_.vollmtlo_), _Internal::kHasBitsOffset + 11, 11,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .commonmodule.Optional_VoltLimitModeKind VolLmtMode = 13;
    {PROTOBUF_FIELD_OFFSET(RegulatorControlATCC, _impl_.vollmtmode_), _Internal::kHasBitsOffset + 12, 12,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::commonmodule::LogicalNodeForControl>()},
      {::_pbi::TcParser::GetTable<::regulatormodule::DirectionalATCC>()},
      {::_pbi::TcParser::GetTable<::commonmodule::Optional_DirectionModeKind>()},
      {::_pbi::TcParser::GetTable<::regulatormodule::DirectionalATCC>()},
      {::_pbi::TcParser::GetTable<::commonmodule::PhaseAPC>()},
      {::_pbi::TcParser::GetTable<::commonmodule::PhaseSPC>()},
      {::_pbi::TcParser::GetTable<::commonmodule::RampRate>()},
      {::_pbi::TcParser::GetTable<::commonmodule::Optional_StateKind>()},
      {::_pbi::TcParser::GetTable<::commonmodule::PhaseSPC>()},
      {::_pbi::TcParser::GetTable<::commonmodule::PhaseSPC>()},
      {::_pbi::TcParser::GetTable<::commonmodule::PhaseAPC>()},
      {::_pbi::TcParser::GetTable<::commonmodule::PhaseAPC>()},
      {::_pbi::TcParser::GetTable<::commonmodule::Optional_VoltLimitModeKind>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void RegulatorControlATCC::Clear() {
// @@protoc_insertion_point(message_clear_start:regulatormodule.RegulatorControlATCC)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.logicalnodeforcontrol_ != nullptr);
      _impl_.logicalnodeforcontrol_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.dirfwd_ != nullptr);
      _impl_.dirfwd_->Clear();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(_impl_.dirmode_ != nullptr);
      _impl_.dirmode_->Clear();
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(_impl_.dirrev_ != nullptr);
      _impl_.dirrev_->Clear();
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      ABSL_DCHECK(_impl_.dirthd_ != nullptr);
      _impl_.dirthd_->Clear();
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      ABSL_DCHECK(_impl_.parop_ != nullptr);
      _impl_.parop_->Clear();
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      ABSL_DCHECK(_impl_.ramprates_ != nullptr);
      _impl_.ramprates_->Clear();
    }
    if ((cached_has_bits & 0x00000080u) != 0) {
      ABSL_DCHECK(_impl_.state_ != nullptr);
      _impl_.state_->Clear();
    }
  }
  if ((cached_has_bits & 0x00001f00u) != 0) {
    if ((cached_has_bits & 0x00000100u) != 0) {
      ABSL_DCHECK(_impl_.tapopl_ != nullptr);
      _impl_.tapopl_->Clear();
    }
    if ((cached_has_bits & 0x00000200u) != 0) {
      ABSL_DCHECK(_impl_.tapopr_ != nullptr);
      _impl_.tapopr_->Clear();
    }
    if ((cached_has_bits & 0x00000400u) != 0) {
      ABSL_DCHECK(_impl_.vollmthi_ != nullptr);
      _impl_.vollmthi_->Clear();
    }
    if ((cached_has_bits & 0x00000800u) != 0) {
      ABSL_DCHECK(_impl_.vollmtlo_ != nullptr);
      _impl_.vollmtlo_->Clear();
    }
    if ((cached_has_bits & 0x00001000u) != 0) {
      ABSL_DCHECK(_impl_.vollmtmode_ != nullptr);
      _impl_.vollmtmode_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL RegulatorControlATCC::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const RegulatorControlATCC& this_ = static_cast<const RegulatorControlATCC&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL RegulatorControlATCC::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const RegulatorControlATCC& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:regulatormodule.RegulatorControlATCC)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .commonmodule.LogicalNodeForControl logicalNodeForControl = 1 [(.uml.option_parent_message) = true];
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.logicalnodeforcontrol_, this_._impl_.logicalnodeforcontrol_->GetCachedSize(), target,
        stream);
  }

  // .regulatormodule.DirectionalATCC DirFwd = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.dirfwd_, this_._impl_.dirfwd_->GetCachedSize(), target,
        stream);
  }

  // .commonmodule.Optional_DirectionModeKind DirMode = 3;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.dirmode_, this_._impl_.dirmode_->GetCachedSize(), target,
        stream);
  }

  // .regulatormodule.DirectionalATCC DirRev = 4;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *this_._impl_.dirrev_, this_._impl_.dirrev_->GetCachedSize(), target,
        stream);
  }

  // .commonmodule.PhaseAPC DirThd = 5;
  if ((cached_has_bits & 0x00000010u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *this_._impl_.dirthd_, this_._impl_.dirthd_->GetCachedSize(), target,
        stream);
  }

  // .commonmodule.PhaseSPC ParOp = 6;
  if ((cached_has_bits & 0x00000020u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        6, *this_._impl_.parop_, this_._impl_.parop_->GetCachedSize(), target,
        stream);
  }

  // .commonmodule.RampRate rampRates = 7;
  if ((cached_has_bits & 0x00000040u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        7, *this_._impl_.ramprates_, this_._impl_.ramprates_->GetCachedSize(), target,
        stream);
  }

  // .commonmodule.Optional_StateKind state = 8;
  if ((cached_has_bits & 0x00000080u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        8, *this_._impl_.state_, this_._impl_.state_->GetCachedSize(), target,
        stream);
  }

  // .commonmodule.PhaseSPC TapOpL = 9;
  if ((cached_has_bits & 0x00000100u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        9, *this_._impl_.tapopl_, this_._impl_.tapopl_->GetCachedSize(), target,
        stream);
  }

  // .commonmodule.PhaseSPC TapOpR = 10;
  if ((cached_has_bits & 0x00000200u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        10, *this_._impl_.tapopr_, this_._impl_.tapopr_->GetCachedSize(), target,
        stream);
  }

  // .commonmodule.PhaseAPC VolLmtHi = 11;
  if ((cached_has_bits & 0x00000400u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        11, *this_._impl_.vollmthi_, this_._impl_.vollmthi_->GetCachedSize(), target,
        stream);
  }

  // .commonmodule.PhaseAPC VolLmtLo = 12;
  if ((cached_has_bits & 0x00000800u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        12, *this_._impl_.vollmtlo_, this_._impl_.vollmtlo_->GetCachedSize(), target,
        stream);
  }

  // .commonmodule.Optional_VoltLimitModeKind VolLmtMode = 13;
  if ((cached_has_bits & 0x00001000u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        13, *this_._impl_.vollmtmode_, this_._impl_.vollmtmode_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:regulatormodule.RegulatorControlATCC)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t RegulatorControlATCC::ByteSizeLong(const MessageLite& base) {
  const RegulatorControlATCC& this_ = static_cast<const RegulatorControlATCC&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t RegulatorControlATCC::ByteSizeLong() const {
  const RegulatorControlATCC& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:regulatormodule.RegulatorControlATCC)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    // .commonmodule.LogicalNodeForControl logicalNodeForControl = 1 [(.uml.option_parent_message) = true];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.logicalnodeforcontrol_);
    }
    // .regulatormodule.DirectionalATCC DirFwd = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.dirfwd_);
    }
    // .commonmodule.Optional_DirectionModeKind DirMode = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.dirmode_);
    }
    // .regulatormodule.DirectionalATCC DirRev = 4;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.dirrev_);
    }
    // .commonmodule.PhaseAPC DirThd = 5;
    if ((cached_has_bits & 0x00000010u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.dirthd_);
    }
    // .commonmodule.PhaseSPC ParOp = 6;
    if ((cached_has_bits & 0x00000020u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.parop_);
    }
    // .commonmodule.RampRate rampRates = 7;
    if ((cached_has_bits & 0x00000040u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.ramprates_);
    }
    // .commonmodule.Optional_StateKind state = 8;
    if ((cached_has_bits & 0x00000080u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.state_);
    }
  }
  if ((cached_has_bits & 0x00001f00u) != 0) {
    // .commonmodule.PhaseSPC TapOpL = 9;
    if ((cached_has_bits & 0x00000100u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.tapopl_);
    }
    // .commonmodule.PhaseSPC TapOpR = 10;
    if ((cached_has_bits & 0x00000200u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.tapopr_);
    }
    // .commonmodule.PhaseAPC VolLmtHi = 11;
    if ((cached_has_bits & 0x00000400u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.vollmthi_);
    }
    // .commonmodule.PhaseAPC VolLmtLo = 12;
    if ((cached_has_bits & 0x00000800u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.vollmtlo_);
    }
    // .commonmodule.Optional_VoltLimitModeKind VolLmtMode = 13;
    if ((cached_has_bits & 0x00001000u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.vollmtmode_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void RegulatorControlATCC::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RegulatorControlATCC*>(&to_msg);
  auto& from = static_cast<const RegulatorControlATCC&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:regulatormodule.RegulatorControlATCC)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.logicalnodeforcontrol_ != nullptr);
      if (_this->_impl_.logicalnodeforcontrol_ == nullptr) {
        _this->_impl_.logicalnodeforcontrol_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.logicalnodeforcontrol_);
      } else {
        _this->_impl_.logicalnodeforcontrol_->MergeFrom(*from._impl_.logicalnodeforcontrol_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.dirfwd_ != nullptr);
      if (_this->_impl_.dirfwd_ == nullptr) {
        _this->_impl_.dirfwd_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.dirfwd_);
      } else {
        _this->_impl_.dirfwd_->MergeFrom(*from._impl_.dirfwd_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(from._impl_.dirmode_ != nullptr);
      if (_this->_impl_.dirmode_ == nullptr) {
        _this->_impl_.dirmode_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.dirmode_);
      } else {
        _this->_impl_.dirmode_->MergeFrom(*from._impl_.dirmode_);
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(from._impl_.dirrev_ != nullptr);
      if (_this->_impl_.dirrev_ == nullptr) {
        _this->_impl_.dirrev_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.dirrev_);
      } else {
        _this->_impl_.dirrev_->MergeFrom(*from._impl_.dirrev_);
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      ABSL_DCHECK(from._impl_.dirthd_ != nullptr);
      if (_this->_impl_.dirthd_ == nullptr) {
        _this->_impl_.dirthd_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.dirthd_);
      } else {
        _this->_impl_.dirthd_->MergeFrom(*from._impl_.dirthd_);
      }
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      ABSL_DCHECK(from._impl_.parop_ != nullptr);
      if (_this->_impl_.parop_ == nullptr) {
        _this->_impl_.parop_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.parop_);
      } else {
        _this->_impl_.parop_->MergeFrom(*from._impl_.parop_);
      }
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      ABSL_DCHECK(from._impl_.ramprates_ != nullptr);
      if (_this->_impl_.ramprates_ == nullptr) {
        _this->_impl_.ramprates_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.ramprates_);
      } else {
        _this->_impl_.ramprates_->MergeFrom(*from._impl_.ramprates_);
      }
    }
    if ((cached_has_bits & 0x00000080u) != 0) {
      ABSL_DCHECK(from._impl_.state_ != nullptr);
      if (_this->_impl_.state_ == nullptr) {
        _this->_impl_.state_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.state_);
      } else {
        _this->_impl_.state_->MergeFrom(*from._impl_.state_);
      }
    }
  }
  if ((cached_has_bits & 0x00001f00u) != 0) {
    if ((cached_has_bits & 0x00000100u) != 0) {
      ABSL_DCHECK(from._impl_.tapopl_ != nullptr);
      if (_this->_impl_.tapopl_ == nullptr) {
        _this->_impl_.tapopl_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.tapopl_);
      } else {
        _this->_impl_.tapopl_->MergeFrom(*from._impl_.tapopl_);
      }
    }
    if ((cached_has_bits & 0x00000200u) != 0) {
      ABSL_DCHECK(from._impl_.tapopr_ != nullptr);
      if (_this->_impl_.tapopr_ == nullptr) {
        _this->_impl_.tapopr_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.tapopr_);
      } else {
        _this->_impl_.tapopr_->MergeFrom(*from._impl_.tapopr_);
      }
    }
    if ((cached_has_bits & 0x00000400u) != 0) {
      ABSL_DCHECK(from._impl_.vollmthi_ != nullptr);
      if (_this->_impl_.vollmthi_ == nullptr) {
        _this->_impl_.vollmthi_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.vollmthi_);
      } else {
        _this->_impl_.vollmthi_->MergeFrom(*from._impl_.vollmthi_);
      }
    }
    if ((cached_has_bits & 0x00000800u) != 0) {
      ABSL_DCHECK(from._impl_.vollmtlo_ != nullptr);
      if (_this->_impl_.vollmtlo_ == nullptr) {
        _this->_impl_.vollmtlo_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.vollmtlo_);
      } else {
        _this->_impl_.vollmtlo_->MergeFrom(*from._impl_.vollmtlo_);
      }
    }
    if ((cached_has_bits & 0x00001000u) != 0) {
      ABSL_DCHECK(from._impl_.vollmtmode_ != nullptr);
      if (_this->_impl_.vollmtmode_ == nullptr) {
        _this->_impl_.vollmtmode_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.vollmtmode_);
      } else {
        _this->_impl_.vollmtmode_->MergeFrom(*from._impl_.vollmtmode_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RegulatorControlATCC::CopyFrom(const RegulatorControlATCC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:regulatormodule.RegulatorControlATCC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RegulatorControlATCC::InternalSwap(RegulatorControlATCC* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RegulatorControlATCC, _impl_.vollmtmode_)
      + sizeof(RegulatorControlATCC::_impl_.vollmtmode_)
      - PROTOBUF_FIELD_OFFSET(RegulatorControlATCC, _impl_.logicalnodeforcontrol_)>(
          reinterpret_cast<char*>(&_impl_.logicalnodeforcontrol_),
          reinterpret_cast<char*>(&other->_impl_.logicalnodeforcontrol_));
}

::google::protobuf::Metadata RegulatorControlATCC::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RegulatorPoint::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<RegulatorPoint>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RegulatorPoint, _impl_._has_bits_);
};

void RegulatorPoint::clear_starttime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.starttime_ != nullptr) _impl_.starttime_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
RegulatorPoint::RegulatorPoint(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RegulatorPoint_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:regulatormodule.RegulatorPoint)
}
PROTOBUF_NDEBUG_INLINE RegulatorPoint::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::regulatormodule::RegulatorPoint& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

RegulatorPoint::RegulatorPoint(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const RegulatorPoint& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RegulatorPoint_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RegulatorPoint* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.control_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.control_)
                : nullptr;
  _impl_.starttime_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.starttime_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:regulatormodule.RegulatorPoint)
}
PROTOBUF_NDEBUG_INLINE RegulatorPoint::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void RegulatorPoint::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, control_),
           0,
           offsetof(Impl_, starttime_) -
               offsetof(Impl_, control_) +
               sizeof(Impl_::starttime_));
}
RegulatorPoint::~RegulatorPoint() {
  // @@protoc_insertion_point(destructor:regulatormodule.RegulatorPoint)
  SharedDtor(*this);
}
inline void RegulatorPoint::SharedDtor(MessageLite& self) {
  RegulatorPoint& this_ = static_cast<RegulatorPoint&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.control_;
  delete this_._impl_.starttime_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL RegulatorPoint::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) RegulatorPoint(arena);
}
constexpr auto RegulatorPoint::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(RegulatorPoint),
                                            alignof(RegulatorPoint));
}
constexpr auto RegulatorPoint::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_RegulatorPoint_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &RegulatorPoint::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<RegulatorPoint>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &RegulatorPoint::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<RegulatorPoint>(), &RegulatorPoint::ByteSizeLong,
              &RegulatorPoint::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(RegulatorPoint, _impl_._cached_size_),
          false,
      },
      &RegulatorPoint::kDescriptorMethods,
      &descriptor_table_regulatormodule_2fregulatormodule_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull RegulatorPoint_class_data_ =
        RegulatorPoint::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
RegulatorPoint::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&RegulatorPoint_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(RegulatorPoint_class_data_.tc_table);
  return RegulatorPoint_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2>
RegulatorPoint::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RegulatorPoint, _impl_._has_bits_),
    0, // no _extensions_
    8, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967166,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    RegulatorPoint_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::regulatormodule::RegulatorPoint>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .commonmodule.Timestamp startTime = 8 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
    {::_pbi::TcParser::FastMtS1,
     {66, 1, 1, PROTOBUF_FIELD_OFFSET(RegulatorPoint, _impl_.starttime_)}},
    // .regulatormodule.RegulatorControlATCC control = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RegulatorPoint, _impl_.control_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .regulatormodule.RegulatorControlATCC control = 1;
    {PROTOBUF_FIELD_OFFSET(RegulatorPoint, _impl_.control_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .commonmodule.Timestamp startTime = 8 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
    {PROTOBUF_FIELD_OFFSET(RegulatorPoint, _impl_.starttime_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::regulatormodule::RegulatorControlATCC>()},
      {::_pbi::TcParser::GetTable<::commonmodule::Timestamp>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void RegulatorPoint::Clear() {
// @@protoc_insertion_point(message_clear_start:regulatormodule.RegulatorPoint)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.control_ != nullptr);
      _impl_.control_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.starttime_ != nullptr);
      _impl_.starttime_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL RegulatorPoint::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const RegulatorPoint& this_ = static_cast<const RegulatorPoint&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL RegulatorPoint::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const RegulatorPoint& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:regulatormodule.RegulatorPoint)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .regulatormodule.RegulatorControlATCC control = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.control_, this_._impl_.control_->GetCachedSize(), target,
        stream);
  }

  // .commonmodule.Timestamp startTime = 8 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        8, *this_._impl_.starttime_, this_._impl_.starttime_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:regulatormodule.RegulatorPoint)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t RegulatorPoint::ByteSizeLong(const MessageLite& base) {
  const RegulatorPoint& this_ = static_cast<const RegulatorPoint&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t RegulatorPoint::ByteSizeLong() const {
  const RegulatorPoint& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:regulatormodule.RegulatorPoint)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // .regulatormodule.RegulatorControlATCC control = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.control_);
    }
    // .commonmodule.Timestamp startTime = 8 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.starttime_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void RegulatorPoint::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RegulatorPoint*>(&to_msg);
  auto& from = static_cast<const RegulatorPoint&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:regulatormodule.RegulatorPoint)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.control_ != nullptr);
      if (_this->_impl_.control_ == nullptr) {
        _this->_impl_.control_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.control_);
      } else {
        _this->_impl_.control_->MergeFrom(*from._impl_.control_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.starttime_ != nullptr);
      if (_this->_impl_.starttime_ == nullptr) {
        _this->_impl_.starttime_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.starttime_);
      } else {
        _this->_impl_.starttime_->MergeFrom(*from._impl_.starttime_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RegulatorPoint::CopyFrom(const RegulatorPoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:regulatormodule.RegulatorPoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RegulatorPoint::InternalSwap(RegulatorPoint* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RegulatorPoint, _impl_.starttime_)
      + sizeof(RegulatorPoint::_impl_.starttime_)
      - PROTOBUF_FIELD_OFFSET(RegulatorPoint, _impl_.control_)>(
          reinterpret_cast<char*>(&_impl_.control_),
          reinterpret_cast<char*>(&other->_impl_.control_));
}

::google::protobuf::Metadata RegulatorPoint::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RegulatorCSG::_Internal {
 public:
};

RegulatorCSG::RegulatorCSG(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RegulatorCSG_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:regulatormodule.RegulatorCSG)
}
PROTOBUF_NDEBUG_INLINE RegulatorCSG::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::regulatormodule::RegulatorCSG& from_msg)
      : crvpts_{visibility, arena, from.crvpts_},
        _cached_size_{0} {}

RegulatorCSG::RegulatorCSG(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const RegulatorCSG& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RegulatorCSG_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RegulatorCSG* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:regulatormodule.RegulatorCSG)
}
PROTOBUF_NDEBUG_INLINE RegulatorCSG::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : crvpts_{visibility, arena},
        _cached_size_{0} {}

inline void RegulatorCSG::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
RegulatorCSG::~RegulatorCSG() {
  // @@protoc_insertion_point(destructor:regulatormodule.RegulatorCSG)
  SharedDtor(*this);
}
inline void RegulatorCSG::SharedDtor(MessageLite& self) {
  RegulatorCSG& this_ = static_cast<RegulatorCSG&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL RegulatorCSG::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) RegulatorCSG(arena);
}
constexpr auto RegulatorCSG::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(RegulatorCSG, _impl_.crvpts_) +
          decltype(RegulatorCSG::_impl_.crvpts_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(RegulatorCSG), alignof(RegulatorCSG), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&RegulatorCSG::PlacementNew_,
                                 sizeof(RegulatorCSG),
                                 alignof(RegulatorCSG));
  }
}
constexpr auto RegulatorCSG::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_RegulatorCSG_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &RegulatorCSG::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<RegulatorCSG>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &RegulatorCSG::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<RegulatorCSG>(), &RegulatorCSG::ByteSizeLong,
              &RegulatorCSG::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(RegulatorCSG, _impl_._cached_size_),
          false,
      },
      &RegulatorCSG::kDescriptorMethods,
      &descriptor_table_regulatormodule_2fregulatormodule_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull RegulatorCSG_class_data_ =
        RegulatorCSG::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
RegulatorCSG::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&RegulatorCSG_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(RegulatorCSG_class_data_.tc_table);
  return RegulatorCSG_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2>
RegulatorCSG::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    RegulatorCSG_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::regulatormodule::RegulatorCSG>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .regulatormodule.RegulatorPoint crvPts = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(RegulatorCSG, _impl_.crvpts_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .regulatormodule.RegulatorPoint crvPts = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
    {PROTOBUF_FIELD_OFFSET(RegulatorCSG, _impl_.crvpts_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::regulatormodule::RegulatorPoint>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void RegulatorCSG::Clear() {
// @@protoc_insertion_point(message_clear_start:regulatormodule.RegulatorCSG)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.crvpts_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL RegulatorCSG::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const RegulatorCSG& this_ = static_cast<const RegulatorCSG&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL RegulatorCSG::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const RegulatorCSG& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:regulatormodule.RegulatorCSG)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .regulatormodule.RegulatorPoint crvPts = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_crvpts_size());
       i < n; i++) {
    const auto& repfield = this_._internal_crvpts().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:regulatormodule.RegulatorCSG)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t RegulatorCSG::ByteSizeLong(const MessageLite& base) {
  const RegulatorCSG& this_ = static_cast<const RegulatorCSG&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t RegulatorCSG::ByteSizeLong() const {
  const RegulatorCSG& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:regulatormodule.RegulatorCSG)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .regulatormodule.RegulatorPoint crvPts = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
    {
      total_size += 1UL * this_._internal_crvpts_size();
      for (const auto& msg : this_._internal_crvpts()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void RegulatorCSG::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RegulatorCSG*>(&to_msg);
  auto& from = static_cast<const RegulatorCSG&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:regulatormodule.RegulatorCSG)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_crvpts()->MergeFrom(
      from._internal_crvpts());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RegulatorCSG::CopyFrom(const RegulatorCSG& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:regulatormodule.RegulatorCSG)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RegulatorCSG::InternalSwap(RegulatorCSG* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.crvpts_.InternalSwap(&other->_impl_.crvpts_);
}

::google::protobuf::Metadata RegulatorCSG::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RegulatorControlScheduleFSCH::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<RegulatorControlScheduleFSCH>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RegulatorControlScheduleFSCH, _impl_._has_bits_);
};

RegulatorControlScheduleFSCH::RegulatorControlScheduleFSCH(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RegulatorControlScheduleFSCH_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:regulatormodule.RegulatorControlScheduleFSCH)
}
PROTOBUF_NDEBUG_INLINE RegulatorControlScheduleFSCH::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::regulatormodule::RegulatorControlScheduleFSCH& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

RegulatorControlScheduleFSCH::RegulatorControlScheduleFSCH(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const RegulatorControlScheduleFSCH& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RegulatorControlScheduleFSCH_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RegulatorControlScheduleFSCH* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.valdcsg_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.valdcsg_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:regulatormodule.RegulatorControlScheduleFSCH)
}
PROTOBUF_NDEBUG_INLINE RegulatorControlScheduleFSCH::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void RegulatorControlScheduleFSCH::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.valdcsg_ = {};
}
RegulatorControlScheduleFSCH::~RegulatorControlScheduleFSCH() {
  // @@protoc_insertion_point(destructor:regulatormodule.RegulatorControlScheduleFSCH)
  SharedDtor(*this);
}
inline void RegulatorControlScheduleFSCH::SharedDtor(MessageLite& self) {
  RegulatorControlScheduleFSCH& this_ = static_cast<RegulatorControlScheduleFSCH&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.valdcsg_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL RegulatorControlScheduleFSCH::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) RegulatorControlScheduleFSCH(arena);
}
constexpr auto RegulatorControlScheduleFSCH::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(RegulatorControlScheduleFSCH),
                                            alignof(RegulatorControlScheduleFSCH));
}
constexpr auto RegulatorControlScheduleFSCH::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_RegulatorControlScheduleFSCH_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &RegulatorControlScheduleFSCH::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<RegulatorControlScheduleFSCH>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &RegulatorControlScheduleFSCH::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<RegulatorControlScheduleFSCH>(), &RegulatorControlScheduleFSCH::ByteSizeLong,
              &RegulatorControlScheduleFSCH::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(RegulatorControlScheduleFSCH, _impl_._cached_size_),
          false,
      },
      &RegulatorControlScheduleFSCH::kDescriptorMethods,
      &descriptor_table_regulatormodule_2fregulatormodule_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull RegulatorControlScheduleFSCH_class_data_ =
        RegulatorControlScheduleFSCH::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
RegulatorControlScheduleFSCH::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&RegulatorControlScheduleFSCH_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(RegulatorControlScheduleFSCH_class_data_.tc_table);
  return RegulatorControlScheduleFSCH_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2>
RegulatorControlScheduleFSCH::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RegulatorControlScheduleFSCH, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    RegulatorControlScheduleFSCH_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::regulatormodule::RegulatorControlScheduleFSCH>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .regulatormodule.RegulatorCSG ValDCSG = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RegulatorControlScheduleFSCH, _impl_.valdcsg_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .regulatormodule.RegulatorCSG ValDCSG = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
    {PROTOBUF_FIELD_OFFSET(RegulatorControlScheduleFSCH, _impl_.valdcsg_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::regulatormodule::RegulatorCSG>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void RegulatorControlScheduleFSCH::Clear() {
// @@protoc_insertion_point(message_clear_start:regulatormodule.RegulatorControlScheduleFSCH)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.valdcsg_ != nullptr);
    _impl_.valdcsg_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL RegulatorControlScheduleFSCH::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const RegulatorControlScheduleFSCH& this_ = static_cast<const RegulatorControlScheduleFSCH&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL RegulatorControlScheduleFSCH::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const RegulatorControlScheduleFSCH& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:regulatormodule.RegulatorControlScheduleFSCH)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .regulatormodule.RegulatorCSG ValDCSG = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.valdcsg_, this_._impl_.valdcsg_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:regulatormodule.RegulatorControlScheduleFSCH)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t RegulatorControlScheduleFSCH::ByteSizeLong(const MessageLite& base) {
  const RegulatorControlScheduleFSCH& this_ = static_cast<const RegulatorControlScheduleFSCH&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t RegulatorControlScheduleFSCH::ByteSizeLong() const {
  const RegulatorControlScheduleFSCH& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:regulatormodule.RegulatorControlScheduleFSCH)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // .regulatormodule.RegulatorCSG ValDCSG = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.valdcsg_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void RegulatorControlScheduleFSCH::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RegulatorControlScheduleFSCH*>(&to_msg);
  auto& from = static_cast<const RegulatorControlScheduleFSCH&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:regulatormodule.RegulatorControlScheduleFSCH)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(from._impl_.valdcsg_ != nullptr);
    if (_this->_impl_.valdcsg_ == nullptr) {
      _this->_impl_.valdcsg_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.valdcsg_);
    } else {
      _this->_impl_.valdcsg_->MergeFrom(*from._impl_.valdcsg_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RegulatorControlScheduleFSCH::CopyFrom(const RegulatorControlScheduleFSCH& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:regulatormodule.RegulatorControlScheduleFSCH)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RegulatorControlScheduleFSCH::InternalSwap(RegulatorControlScheduleFSCH* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.valdcsg_, other->_impl_.valdcsg_);
}

::google::protobuf::Metadata RegulatorControlScheduleFSCH::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RegulatorControlFSCC::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<RegulatorControlFSCC>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RegulatorControlFSCC, _impl_._has_bits_);
};

void RegulatorControlFSCC::clear_controlfscc() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.controlfscc_ != nullptr) _impl_.controlfscc_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
RegulatorControlFSCC::RegulatorControlFSCC(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RegulatorControlFSCC_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:regulatormodule.RegulatorControlFSCC)
}
PROTOBUF_NDEBUG_INLINE RegulatorControlFSCC::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::regulatormodule::RegulatorControlFSCC& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

RegulatorControlFSCC::RegulatorControlFSCC(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const RegulatorControlFSCC& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RegulatorControlFSCC_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RegulatorControlFSCC* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.controlfscc_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.controlfscc_)
                : nullptr;
  _impl_.regulatorcontrolschedulefsch_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.regulatorcontrolschedulefsch_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:regulatormodule.RegulatorControlFSCC)
}
PROTOBUF_NDEBUG_INLINE RegulatorControlFSCC::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void RegulatorControlFSCC::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, controlfscc_),
           0,
           offsetof(Impl_, regulatorcontrolschedulefsch_) -
               offsetof(Impl_, controlfscc_) +
               sizeof(Impl_::regulatorcontrolschedulefsch_));
}
RegulatorControlFSCC::~RegulatorControlFSCC() {
  // @@protoc_insertion_point(destructor:regulatormodule.RegulatorControlFSCC)
  SharedDtor(*this);
}
inline void RegulatorControlFSCC::SharedDtor(MessageLite& self) {
  RegulatorControlFSCC& this_ = static_cast<RegulatorControlFSCC&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.controlfscc_;
  delete this_._impl_.regulatorcontrolschedulefsch_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL RegulatorControlFSCC::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) RegulatorControlFSCC(arena);
}
constexpr auto RegulatorControlFSCC::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(RegulatorControlFSCC),
                                            alignof(RegulatorControlFSCC));
}
constexpr auto RegulatorControlFSCC::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_RegulatorControlFSCC_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &RegulatorControlFSCC::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<RegulatorControlFSCC>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &RegulatorControlFSCC::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<RegulatorControlFSCC>(), &RegulatorControlFSCC::ByteSizeLong,
              &RegulatorControlFSCC::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(RegulatorControlFSCC, _impl_._cached_size_),
          false,
      },
      &RegulatorControlFSCC::kDescriptorMethods,
      &descriptor_table_regulatormodule_2fregulatormodule_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull RegulatorControlFSCC_class_data_ =
        RegulatorControlFSCC::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
RegulatorControlFSCC::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&RegulatorControlFSCC_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(RegulatorControlFSCC_class_data_.tc_table);
  return RegulatorControlFSCC_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2>
RegulatorControlFSCC::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RegulatorControlFSCC, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    RegulatorControlFSCC_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::regulatormodule::RegulatorControlFSCC>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .regulatormodule.RegulatorControlScheduleFSCH regulatorControlScheduleFSCH = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(RegulatorControlFSCC, _impl_.regulatorcontrolschedulefsch_)}},
    // .commonmodule.ControlFSCC controlFSCC = 1 [(.uml.option_parent_message) = true];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RegulatorControlFSCC, _impl_.controlfscc_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .commonmodule.ControlFSCC controlFSCC = 1 [(.uml.option_parent_message) = true];
    {PROTOBUF_FIELD_OFFSET(RegulatorControlFSCC, _impl_.controlfscc_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .regulatormodule.RegulatorControlScheduleFSCH regulatorControlScheduleFSCH = 2;
    {PROTOBUF_FIELD_OFFSET(RegulatorControlFSCC, _impl_.regulatorcontrolschedulefsch_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::commonmodule::ControlFSCC>()},
      {::_pbi::TcParser::GetTable<::regulatormodule::RegulatorControlScheduleFSCH>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void RegulatorControlFSCC::Clear() {
// @@protoc_insertion_point(message_clear_start:regulatormodule.RegulatorControlFSCC)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.controlfscc_ != nullptr);
      _impl_.controlfscc_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.regulatorcontrolschedulefsch_ != nullptr);
      _impl_.regulatorcontrolschedulefsch_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL RegulatorControlFSCC::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const RegulatorControlFSCC& this_ = static_cast<const RegulatorControlFSCC&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL RegulatorControlFSCC::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const RegulatorControlFSCC& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:regulatormodule.RegulatorControlFSCC)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .commonmodule.ControlFSCC controlFSCC = 1 [(.uml.option_parent_message) = true];
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.controlfscc_, this_._impl_.controlfscc_->GetCachedSize(), target,
        stream);
  }

  // .regulatormodule.RegulatorControlScheduleFSCH regulatorControlScheduleFSCH = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.regulatorcontrolschedulefsch_, this_._impl_.regulatorcontrolschedulefsch_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:regulatormodule.RegulatorControlFSCC)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t RegulatorControlFSCC::ByteSizeLong(const MessageLite& base) {
  const RegulatorControlFSCC& this_ = static_cast<const RegulatorControlFSCC&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t RegulatorControlFSCC::ByteSizeLong() const {
  const RegulatorControlFSCC& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:regulatormodule.RegulatorControlFSCC)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // .commonmodule.ControlFSCC controlFSCC = 1 [(.uml.option_parent_message) = true];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.controlfscc_);
    }
    // .regulatormodule.RegulatorControlScheduleFSCH regulatorControlScheduleFSCH = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.regulatorcontrolschedulefsch_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void RegulatorControlFSCC::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RegulatorControlFSCC*>(&to_msg);
  auto& from = static_cast<const RegulatorControlFSCC&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:regulatormodule.RegulatorControlFSCC)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.controlfscc_ != nullptr);
      if (_this->_impl_.controlfscc_ == nullptr) {
        _this->_impl_.controlfscc_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.controlfscc_);
      } else {
        _this->_impl_.controlfscc_->MergeFrom(*from._impl_.controlfscc_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.regulatorcontrolschedulefsch_ != nullptr);
      if (_this->_impl_.regulatorcontrolschedulefsch_ == nullptr) {
        _this->_impl_.regulatorcontrolschedulefsch_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.regulatorcontrolschedulefsch_);
      } else {
        _this->_impl_.regulatorcontrolschedulefsch_->MergeFrom(*from._impl_.regulatorcontrolschedulefsch_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RegulatorControlFSCC::CopyFrom(const RegulatorControlFSCC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:regulatormodule.RegulatorControlFSCC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RegulatorControlFSCC::InternalSwap(RegulatorControlFSCC* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RegulatorControlFSCC, _impl_.regulatorcontrolschedulefsch_)
      + sizeof(RegulatorControlFSCC::_impl_.regulatorcontrolschedulefsch_)
      - PROTOBUF_FIELD_OFFSET(RegulatorControlFSCC, _impl_.controlfscc_)>(
          reinterpret_cast<char*>(&_impl_.controlfscc_),
          reinterpret_cast<char*>(&other->_impl_.controlfscc_));
}

::google::protobuf::Metadata RegulatorControlFSCC::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RegulatorControl::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<RegulatorControl>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RegulatorControl, _impl_._has_bits_);
};

void RegulatorControl::clear_controlvalue() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.controlvalue_ != nullptr) _impl_.controlvalue_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void RegulatorControl::clear_check() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.check_ != nullptr) _impl_.check_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
RegulatorControl::RegulatorControl(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RegulatorControl_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:regulatormodule.RegulatorControl)
}
PROTOBUF_NDEBUG_INLINE RegulatorControl::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::regulatormodule::RegulatorControl& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

RegulatorControl::RegulatorControl(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const RegulatorControl& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RegulatorControl_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RegulatorControl* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.controlvalue_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.controlvalue_)
                : nullptr;
  _impl_.check_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.check_)
                : nullptr;
  _impl_.regulatorcontrolfscc_ = ((cached_has_bits & 0x00000004u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.regulatorcontrolfscc_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:regulatormodule.RegulatorControl)
}
PROTOBUF_NDEBUG_INLINE RegulatorControl::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void RegulatorControl::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, controlvalue_),
           0,
           offsetof(Impl_, regulatorcontrolfscc_) -
               offsetof(Impl_, controlvalue_) +
               sizeof(Impl_::regulatorcontrolfscc_));
}
RegulatorControl::~RegulatorControl() {
  // @@protoc_insertion_point(destructor:regulatormodule.RegulatorControl)
  SharedDtor(*this);
}
inline void RegulatorControl::SharedDtor(MessageLite& self) {
  RegulatorControl& this_ = static_cast<RegulatorControl&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.controlvalue_;
  delete this_._impl_.check_;
  delete this_._impl_.regulatorcontrolfscc_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL RegulatorControl::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) RegulatorControl(arena);
}
constexpr auto RegulatorControl::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(RegulatorControl),
                                            alignof(RegulatorControl));
}
constexpr auto RegulatorControl::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_RegulatorControl_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &RegulatorControl::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<RegulatorControl>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &RegulatorControl::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<RegulatorControl>(), &RegulatorControl::ByteSizeLong,
              &RegulatorControl::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(RegulatorControl, _impl_._cached_size_),
          false,
      },
      &RegulatorControl::kDescriptorMethods,
      &descriptor_table_regulatormodule_2fregulatormodule_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull RegulatorControl_class_data_ =
        RegulatorControl::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
RegulatorControl::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&RegulatorControl_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(RegulatorControl_class_data_.tc_table);
  return RegulatorControl_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 3, 0, 2>
RegulatorControl::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RegulatorControl, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    RegulatorControl_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::regulatormodule::RegulatorControl>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .commonmodule.ControlValue controlValue = 1 [(.uml.option_parent_message) = true];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RegulatorControl, _impl_.controlvalue_)}},
    // .commonmodule.CheckConditions check = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(RegulatorControl, _impl_.check_)}},
    // .regulatormodule.RegulatorControlFSCC regulatorControlFSCC = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(RegulatorControl, _impl_.regulatorcontrolfscc_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .commonmodule.ControlValue controlValue = 1 [(.uml.option_parent_message) = true];
    {PROTOBUF_FIELD_OFFSET(RegulatorControl, _impl_.controlvalue_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .commonmodule.CheckConditions check = 2;
    {PROTOBUF_FIELD_OFFSET(RegulatorControl, _impl_.check_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .regulatormodule.RegulatorControlFSCC regulatorControlFSCC = 3;
    {PROTOBUF_FIELD_OFFSET(RegulatorControl, _impl_.regulatorcontrolfscc_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::commonmodule::ControlValue>()},
      {::_pbi::TcParser::GetTable<::commonmodule::CheckConditions>()},
      {::_pbi::TcParser::GetTable<::regulatormodule::RegulatorControlFSCC>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void RegulatorControl::Clear() {
// @@protoc_insertion_point(message_clear_start:regulatormodule.RegulatorControl)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.controlvalue_ != nullptr);
      _impl_.controlvalue_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.check_ != nullptr);
      _impl_.check_->Clear();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(_impl_.regulatorcontrolfscc_ != nullptr);
      _impl_.regulatorcontrolfscc_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL RegulatorControl::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const RegulatorControl& this_ = static_cast<const RegulatorControl&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL RegulatorControl::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const RegulatorControl& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:regulatormodule.RegulatorControl)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .commonmodule.ControlValue controlValue = 1 [(.uml.option_parent_message) = true];
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.controlvalue_, this_._impl_.controlvalue_->GetCachedSize(), target,
        stream);
  }

  // .commonmodule.CheckConditions check = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.check_, this_._impl_.check_->GetCachedSize(), target,
        stream);
  }

  // .regulatormodule.RegulatorControlFSCC regulatorControlFSCC = 3;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.regulatorcontrolfscc_, this_._impl_.regulatorcontrolfscc_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:regulatormodule.RegulatorControl)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t RegulatorControl::ByteSizeLong(const MessageLite& base) {
  const RegulatorControl& this_ = static_cast<const RegulatorControl&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t RegulatorControl::ByteSizeLong() const {
  const RegulatorControl& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:regulatormodule.RegulatorControl)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // .commonmodule.ControlValue controlValue = 1 [(.uml.option_parent_message) = true];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.controlvalue_);
    }
    // .commonmodule.CheckConditions check = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.check_);
    }
    // .regulatormodule.RegulatorControlFSCC regulatorControlFSCC = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.regulatorcontrolfscc_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void RegulatorControl::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RegulatorControl*>(&to_msg);
  auto& from = static_cast<const RegulatorControl&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:regulatormodule.RegulatorControl)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.controlvalue_ != nullptr);
      if (_this->_impl_.controlvalue_ == nullptr) {
        _this->_impl_.controlvalue_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.controlvalue_);
      } else {
        _this->_impl_.controlvalue_->MergeFrom(*from._impl_.controlvalue_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.check_ != nullptr);
      if (_this->_impl_.check_ == nullptr) {
        _this->_impl_.check_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.check_);
      } else {
        _this->_impl_.check_->MergeFrom(*from._impl_.check_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(from._impl_.regulatorcontrolfscc_ != nullptr);
      if (_this->_impl_.regulatorcontrolfscc_ == nullptr) {
        _this->_impl_.regulatorcontrolfscc_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.regulatorcontrolfscc_);
      } else {
        _this->_impl_.regulatorcontrolfscc_->MergeFrom(*from._impl_.regulatorcontrolfscc_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RegulatorControl::CopyFrom(const RegulatorControl& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:regulatormodule.RegulatorControl)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RegulatorControl::InternalSwap(RegulatorControl* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RegulatorControl, _impl_.regulatorcontrolfscc_)
      + sizeof(RegulatorControl::_impl_.regulatorcontrolfscc_)
      - PROTOBUF_FIELD_OFFSET(RegulatorControl, _impl_.controlvalue_)>(
          reinterpret_cast<char*>(&_impl_.controlvalue_),
          reinterpret_cast<char*>(&other->_impl_.controlvalue_));
}

::google::protobuf::Metadata RegulatorControl::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RegulatorSystem::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<RegulatorSystem>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RegulatorSystem, _impl_._has_bits_);
};

void RegulatorSystem::clear_conductingequipment() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.conductingequipment_ != nullptr) _impl_.conductingequipment_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
RegulatorSystem::RegulatorSystem(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RegulatorSystem_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:regulatormodule.RegulatorSystem)
}
PROTOBUF_NDEBUG_INLINE RegulatorSystem::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::regulatormodule::RegulatorSystem& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

RegulatorSystem::RegulatorSystem(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const RegulatorSystem& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RegulatorSystem_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RegulatorSystem* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.conductingequipment_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.conductingequipment_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:regulatormodule.RegulatorSystem)
}
PROTOBUF_NDEBUG_INLINE RegulatorSystem::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void RegulatorSystem::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.conductingequipment_ = {};
}
RegulatorSystem::~RegulatorSystem() {
  // @@protoc_insertion_point(destructor:regulatormodule.RegulatorSystem)
  SharedDtor(*this);
}
inline void RegulatorSystem::SharedDtor(MessageLite& self) {
  RegulatorSystem& this_ = static_cast<RegulatorSystem&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.conductingequipment_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL RegulatorSystem::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) RegulatorSystem(arena);
}
constexpr auto RegulatorSystem::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(RegulatorSystem),
                                            alignof(RegulatorSystem));
}
constexpr auto RegulatorSystem::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_RegulatorSystem_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &RegulatorSystem::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<RegulatorSystem>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &RegulatorSystem::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<RegulatorSystem>(), &RegulatorSystem::ByteSizeLong,
              &RegulatorSystem::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(RegulatorSystem, _impl_._cached_size_),
          false,
      },
      &RegulatorSystem::kDescriptorMethods,
      &descriptor_table_regulatormodule_2fregulatormodule_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull RegulatorSystem_class_data_ =
        RegulatorSystem::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
RegulatorSystem::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&RegulatorSystem_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(RegulatorSystem_class_data_.tc_table);
  return RegulatorSystem_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2>
RegulatorSystem::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RegulatorSystem, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    RegulatorSystem_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::regulatormodule::RegulatorSystem>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .commonmodule.ConductingEquipment conductingEquipment = 1 [(.uml.option_parent_message) = true];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RegulatorSystem, _impl_.conductingequipment_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .commonmodule.ConductingEquipment conductingEquipment = 1 [(.uml.option_parent_message) = true];
    {PROTOBUF_FIELD_OFFSET(RegulatorSystem, _impl_.conductingequipment_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::commonmodule::ConductingEquipment>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void RegulatorSystem::Clear() {
// @@protoc_insertion_point(message_clear_start:regulatormodule.RegulatorSystem)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.conductingequipment_ != nullptr);
    _impl_.conductingequipment_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL RegulatorSystem::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const RegulatorSystem& this_ = static_cast<const RegulatorSystem&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL RegulatorSystem::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const RegulatorSystem& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:regulatormodule.RegulatorSystem)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .commonmodule.ConductingEquipment conductingEquipment = 1 [(.uml.option_parent_message) = true];
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.conductingequipment_, this_._impl_.conductingequipment_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:regulatormodule.RegulatorSystem)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t RegulatorSystem::ByteSizeLong(const MessageLite& base) {
  const RegulatorSystem& this_ = static_cast<const RegulatorSystem&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t RegulatorSystem::ByteSizeLong() const {
  const RegulatorSystem& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:regulatormodule.RegulatorSystem)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // .commonmodule.ConductingEquipment conductingEquipment = 1 [(.uml.option_parent_message) = true];
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.conductingequipment_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void RegulatorSystem::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RegulatorSystem*>(&to_msg);
  auto& from = static_cast<const RegulatorSystem&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:regulatormodule.RegulatorSystem)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(from._impl_.conductingequipment_ != nullptr);
    if (_this->_impl_.conductingequipment_ == nullptr) {
      _this->_impl_.conductingequipment_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.conductingequipment_);
    } else {
      _this->_impl_.conductingequipment_->MergeFrom(*from._impl_.conductingequipment_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RegulatorSystem::CopyFrom(const RegulatorSystem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:regulatormodule.RegulatorSystem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RegulatorSystem::InternalSwap(RegulatorSystem* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.conductingequipment_, other->_impl_.conductingequipment_);
}

::google::protobuf::Metadata RegulatorSystem::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RegulatorControlProfile::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<RegulatorControlProfile>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RegulatorControlProfile, _impl_._has_bits_);
};

void RegulatorControlProfile::clear_controlmessageinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.controlmessageinfo_ != nullptr) _impl_.controlmessageinfo_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
RegulatorControlProfile::RegulatorControlProfile(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RegulatorControlProfile_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:regulatormodule.RegulatorControlProfile)
}
PROTOBUF_NDEBUG_INLINE RegulatorControlProfile::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::regulatormodule::RegulatorControlProfile& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

RegulatorControlProfile::RegulatorControlProfile(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const RegulatorControlProfile& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RegulatorControlProfile_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RegulatorControlProfile* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.controlmessageinfo_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.controlmessageinfo_)
                : nullptr;
  _impl_.regulatorcontrol_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.regulatorcontrol_)
                : nullptr;
  _impl_.regulatorsystem_ = ((cached_has_bits & 0x00000004u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.regulatorsystem_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:regulatormodule.RegulatorControlProfile)
}
PROTOBUF_NDEBUG_INLINE RegulatorControlProfile::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void RegulatorControlProfile::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, controlmessageinfo_),
           0,
           offsetof(Impl_, regulatorsystem_) -
               offsetof(Impl_, controlmessageinfo_) +
               sizeof(Impl_::regulatorsystem_));
}
RegulatorControlProfile::~RegulatorControlProfile() {
  // @@protoc_insertion_point(destructor:regulatormodule.RegulatorControlProfile)
  SharedDtor(*this);
}
inline void RegulatorControlProfile::SharedDtor(MessageLite& self) {
  RegulatorControlProfile& this_ = static_cast<RegulatorControlProfile&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.controlmessageinfo_;
  delete this_._impl_.regulatorcontrol_;
  delete this_._impl_.regulatorsystem_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL RegulatorControlProfile::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) RegulatorControlProfile(arena);
}
constexpr auto RegulatorControlProfile::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(RegulatorControlProfile),
                                            alignof(RegulatorControlProfile));
}
constexpr auto RegulatorControlProfile::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_RegulatorControlProfile_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &RegulatorControlProfile::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<RegulatorControlProfile>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &RegulatorControlProfile::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<RegulatorControlProfile>(), &RegulatorControlProfile::ByteSizeLong,
              &RegulatorControlProfile::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(RegulatorControlProfile, _impl_._cached_size_),
          false,
      },
      &RegulatorControlProfile::kDescriptorMethods,
      &descriptor_table_regulatormodule_2fregulatormodule_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull RegulatorControlProfile_class_data_ =
        RegulatorControlProfile::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
RegulatorControlProfile::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&RegulatorControlProfile_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(RegulatorControlProfile_class_data_.tc_table);
  return RegulatorControlProfile_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 3, 0, 2>
RegulatorControlProfile::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RegulatorControlProfile, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    RegulatorControlProfile_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::regulatormodule::RegulatorControlProfile>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .commonmodule.ControlMessageInfo controlMessageInfo = 1 [(.uml.option_parent_message) = true];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RegulatorControlProfile, _impl_.controlmessageinfo_)}},
    // .regulatormodule.RegulatorControl regulatorControl = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(RegulatorControlProfile, _impl_.regulatorcontrol_)}},
    // .regulatormodule.RegulatorSystem regulatorSystem = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(RegulatorControlProfile, _impl_.regulatorsystem_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .commonmodule.ControlMessageInfo controlMessageInfo = 1 [(.uml.option_parent_message) = true];
    {PROTOBUF_FIELD_OFFSET(RegulatorControlProfile, _impl_.controlmessageinfo_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .regulatormodule.RegulatorControl regulatorControl = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
    {PROTOBUF_FIELD_OFFSET(RegulatorControlProfile, _impl_.regulatorcontrol_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .regulatormodule.RegulatorSystem regulatorSystem = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
    {PROTOBUF_FIELD_OFFSET(RegulatorControlProfile, _impl_.regulatorsystem_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::commonmodule::ControlMessageInfo>()},
      {::_pbi::TcParser::GetTable<::regulatormodule::RegulatorControl>()},
      {::_pbi::TcParser::GetTable<::regulatormodule::RegulatorSystem>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void RegulatorControlProfile::Clear() {
// @@protoc_insertion_point(message_clear_start:regulatormodule.RegulatorControlProfile)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.controlmessageinfo_ != nullptr);
      _impl_.controlmessageinfo_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.regulatorcontrol_ != nullptr);
      _impl_.regulatorcontrol_->Clear();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(_impl_.regulatorsystem_ != nullptr);
      _impl_.regulatorsystem_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL RegulatorControlProfile::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const RegulatorControlProfile& this_ = static_cast<const RegulatorControlProfile&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL RegulatorControlProfile::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const RegulatorControlProfile& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:regulatormodule.RegulatorControlProfile)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .commonmodule.ControlMessageInfo controlMessageInfo = 1 [(.uml.option_parent_message) = true];
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.controlmessageinfo_, this_._impl_.controlmessageinfo_->GetCachedSize(), target,
        stream);
  }

  // .regulatormodule.RegulatorControl regulatorControl = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.regulatorcontrol_, this_._impl_.regulatorcontrol_->GetCachedSize(), target,
        stream);
  }

  // .regulatormodule.RegulatorSystem regulatorSystem = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.regulatorsystem_, this_._impl_.regulatorsystem_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:regulatormodule.RegulatorControlProfile)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t RegulatorControlProfile::ByteSizeLong(const MessageLite& base) {
  const RegulatorControlProfile& this_ = static_cast<const RegulatorControlProfile&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t RegulatorControlProfile::ByteSizeLong() const {
  const RegulatorControlProfile& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:regulatormodule.RegulatorControlProfile)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // .commonmodule.ControlMessageInfo controlMessageInfo = 1 [(.uml.option_parent_message) = true];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.controlmessageinfo_);
    }
    // .regulatormodule.RegulatorControl regulatorControl = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.regulatorcontrol_);
    }
    // .regulatormodule.RegulatorSystem regulatorSystem = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.regulatorsystem_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void RegulatorControlProfile::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RegulatorControlProfile*>(&to_msg);
  auto& from = static_cast<const RegulatorControlProfile&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:regulatormodule.RegulatorControlProfile)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.controlmessageinfo_ != nullptr);
      if (_this->_impl_.controlmessageinfo_ == nullptr) {
        _this->_impl_.controlmessageinfo_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.controlmessageinfo_);
      } else {
        _this->_impl_.controlmessageinfo_->MergeFrom(*from._impl_.controlmessageinfo_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.regulatorcontrol_ != nullptr);
      if (_this->_impl_.regulatorcontrol_ == nullptr) {
        _this->_impl_.regulatorcontrol_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.regulatorcontrol_);
      } else {
        _this->_impl_.regulatorcontrol_->MergeFrom(*from._impl_.regulatorcontrol_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(from._impl_.regulatorsystem_ != nullptr);
      if (_this->_impl_.regulatorsystem_ == nullptr) {
        _this->_impl_.regulatorsystem_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.regulatorsystem_);
      } else {
        _this->_impl_.regulatorsystem_->MergeFrom(*from._impl_.regulatorsystem_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RegulatorControlProfile::CopyFrom(const RegulatorControlProfile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:regulatormodule.RegulatorControlProfile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RegulatorControlProfile::InternalSwap(RegulatorControlProfile* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RegulatorControlProfile, _impl_.regulatorsystem_)
      + sizeof(RegulatorControlProfile::_impl_.regulatorsystem_)
      - PROTOBUF_FIELD_OFFSET(RegulatorControlProfile, _impl_.controlmessageinfo_)>(
          reinterpret_cast<char*>(&_impl_.controlmessageinfo_),
          reinterpret_cast<char*>(&other->_impl_.controlmessageinfo_));
}

::google::protobuf::Metadata RegulatorControlProfile::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RegulatorDiscreteControl::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<RegulatorDiscreteControl>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RegulatorDiscreteControl, _impl_._has_bits_);
};

void RegulatorDiscreteControl::clear_controlvalue() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.controlvalue_ != nullptr) _impl_.controlvalue_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void RegulatorDiscreteControl::clear_check() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.check_ != nullptr) _impl_.check_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
RegulatorDiscreteControl::RegulatorDiscreteControl(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RegulatorDiscreteControl_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:regulatormodule.RegulatorDiscreteControl)
}
PROTOBUF_NDEBUG_INLINE RegulatorDiscreteControl::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::regulatormodule::RegulatorDiscreteControl& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

RegulatorDiscreteControl::RegulatorDiscreteControl(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const RegulatorDiscreteControl& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RegulatorDiscreteControl_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RegulatorDiscreteControl* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.controlvalue_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.controlvalue_)
                : nullptr;
  _impl_.check_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.check_)
                : nullptr;
  _impl_.regulatorcontrolatcc_ = ((cached_has_bits & 0x00000004u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.regulatorcontrolatcc_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:regulatormodule.RegulatorDiscreteControl)
}
PROTOBUF_NDEBUG_INLINE RegulatorDiscreteControl::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void RegulatorDiscreteControl::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, controlvalue_),
           0,
           offsetof(Impl_, regulatorcontrolatcc_) -
               offsetof(Impl_, controlvalue_) +
               sizeof(Impl_::regulatorcontrolatcc_));
}
RegulatorDiscreteControl::~RegulatorDiscreteControl() {
  // @@protoc_insertion_point(destructor:regulatormodule.RegulatorDiscreteControl)
  SharedDtor(*this);
}
inline void RegulatorDiscreteControl::SharedDtor(MessageLite& self) {
  RegulatorDiscreteControl& this_ = static_cast<RegulatorDiscreteControl&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.controlvalue_;
  delete this_._impl_.check_;
  delete this_._impl_.regulatorcontrolatcc_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL RegulatorDiscreteControl::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) RegulatorDiscreteControl(arena);
}
constexpr auto RegulatorDiscreteControl::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(RegulatorDiscreteControl),
                                            alignof(RegulatorDiscreteControl));
}
constexpr auto RegulatorDiscreteControl::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_RegulatorDiscreteControl_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &RegulatorDiscreteControl::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<RegulatorDiscreteControl>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &RegulatorDiscreteControl::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<RegulatorDiscreteControl>(), &RegulatorDiscreteControl::ByteSizeLong,
              &RegulatorDiscreteControl::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(RegulatorDiscreteControl, _impl_._cached_size_),
          false,
      },
      &RegulatorDiscreteControl::kDescriptorMethods,
      &descriptor_table_regulatormodule_2fregulatormodule_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull RegulatorDiscreteControl_class_data_ =
        RegulatorDiscreteControl::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
RegulatorDiscreteControl::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&RegulatorDiscreteControl_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(RegulatorDiscreteControl_class_data_.tc_table);
  return RegulatorDiscreteControl_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 3, 0, 2>
RegulatorDiscreteControl::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RegulatorDiscreteControl, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    RegulatorDiscreteControl_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::regulatormodule::RegulatorDiscreteControl>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .commonmodule.ControlValue controlValue = 1 [(.uml.option_parent_message) = true];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RegulatorDiscreteControl, _impl_.controlvalue_)}},
    // .commonmodule.CheckConditions check = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(RegulatorDiscreteControl, _impl_.check_)}},
    // .regulatormodule.RegulatorControlATCC regulatorControlATCC = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(RegulatorDiscreteControl, _impl_.regulatorcontrolatcc_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .commonmodule.ControlValue controlValue = 1 [(.uml.option_parent_message) = true];
    {PROTOBUF_FIELD_OFFSET(RegulatorDiscreteControl, _impl_.controlvalue_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .commonmodule.CheckConditions check = 2;
    {PROTOBUF_FIELD_OFFSET(RegulatorDiscreteControl, _impl_.check_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .regulatormodule.RegulatorControlATCC regulatorControlATCC = 3;
    {PROTOBUF_FIELD_OFFSET(RegulatorDiscreteControl, _impl_.regulatorcontrolatcc_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::commonmodule::ControlValue>()},
      {::_pbi::TcParser::GetTable<::commonmodule::CheckConditions>()},
      {::_pbi::TcParser::GetTable<::regulatormodule::RegulatorControlATCC>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void RegulatorDiscreteControl::Clear() {
// @@protoc_insertion_point(message_clear_start:regulatormodule.RegulatorDiscreteControl)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.controlvalue_ != nullptr);
      _impl_.controlvalue_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.check_ != nullptr);
      _impl_.check_->Clear();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(_impl_.regulatorcontrolatcc_ != nullptr);
      _impl_.regulatorcontrolatcc_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL RegulatorDiscreteControl::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const RegulatorDiscreteControl& this_ = static_cast<const RegulatorDiscreteControl&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL RegulatorDiscreteControl::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const RegulatorDiscreteControl& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:regulatormodule.RegulatorDiscreteControl)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .commonmodule.ControlValue controlValue = 1 [(.uml.option_parent_message) = true];
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.controlvalue_, this_._impl_.controlvalue_->GetCachedSize(), target,
        stream);
  }

  // .commonmodule.CheckConditions check = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.check_, this_._impl_.check_->GetCachedSize(), target,
        stream);
  }

  // .regulatormodule.RegulatorControlATCC regulatorControlATCC = 3;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.regulatorcontrolatcc_, this_._impl_.regulatorcontrolatcc_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:regulatormodule.RegulatorDiscreteControl)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t RegulatorDiscreteControl::ByteSizeLong(const MessageLite& base) {
  const RegulatorDiscreteControl& this_ = static_cast<const RegulatorDiscreteControl&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t RegulatorDiscreteControl::ByteSizeLong() const {
  const RegulatorDiscreteControl& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:regulatormodule.RegulatorDiscreteControl)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // .commonmodule.ControlValue controlValue = 1 [(.uml.option_parent_message) = true];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.controlvalue_);
    }
    // .commonmodule.CheckConditions check = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.check_);
    }
    // .regulatormodule.RegulatorControlATCC regulatorControlATCC = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.regulatorcontrolatcc_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void RegulatorDiscreteControl::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RegulatorDiscreteControl*>(&to_msg);
  auto& from = static_cast<const RegulatorDiscreteControl&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:regulatormodule.RegulatorDiscreteControl)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.controlvalue_ != nullptr);
      if (_this->_impl_.controlvalue_ == nullptr) {
        _this->_impl_.controlvalue_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.controlvalue_);
      } else {
        _this->_impl_.controlvalue_->MergeFrom(*from._impl_.controlvalue_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.check_ != nullptr);
      if (_this->_impl_.check_ == nullptr) {
        _this->_impl_.check_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.check_);
      } else {
        _this->_impl_.check_->MergeFrom(*from._impl_.check_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(from._impl_.regulatorcontrolatcc_ != nullptr);
      if (_this->_impl_.regulatorcontrolatcc_ == nullptr) {
        _this->_impl_.regulatorcontrolatcc_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.regulatorcontrolatcc_);
      } else {
        _this->_impl_.regulatorcontrolatcc_->MergeFrom(*from._impl_.regulatorcontrolatcc_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RegulatorDiscreteControl::CopyFrom(const RegulatorDiscreteControl& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:regulatormodule.RegulatorDiscreteControl)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RegulatorDiscreteControl::InternalSwap(RegulatorDiscreteControl* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RegulatorDiscreteControl, _impl_.regulatorcontrolatcc_)
      + sizeof(RegulatorDiscreteControl::_impl_.regulatorcontrolatcc_)
      - PROTOBUF_FIELD_OFFSET(RegulatorDiscreteControl, _impl_.controlvalue_)>(
          reinterpret_cast<char*>(&_impl_.controlvalue_),
          reinterpret_cast<char*>(&other->_impl_.controlvalue_));
}

::google::protobuf::Metadata RegulatorDiscreteControl::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RegulatorDiscreteControlProfile::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<RegulatorDiscreteControlProfile>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RegulatorDiscreteControlProfile, _impl_._has_bits_);
};

void RegulatorDiscreteControlProfile::clear_controlmessageinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.controlmessageinfo_ != nullptr) _impl_.controlmessageinfo_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
RegulatorDiscreteControlProfile::RegulatorDiscreteControlProfile(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RegulatorDiscreteControlProfile_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:regulatormodule.RegulatorDiscreteControlProfile)
}
PROTOBUF_NDEBUG_INLINE RegulatorDiscreteControlProfile::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::regulatormodule::RegulatorDiscreteControlProfile& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

RegulatorDiscreteControlProfile::RegulatorDiscreteControlProfile(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const RegulatorDiscreteControlProfile& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RegulatorDiscreteControlProfile_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RegulatorDiscreteControlProfile* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.controlmessageinfo_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.controlmessageinfo_)
                : nullptr;
  _impl_.regulatordiscretecontrol_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.regulatordiscretecontrol_)
                : nullptr;
  _impl_.regulatorsystem_ = ((cached_has_bits & 0x00000004u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.regulatorsystem_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:regulatormodule.RegulatorDiscreteControlProfile)
}
PROTOBUF_NDEBUG_INLINE RegulatorDiscreteControlProfile::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void RegulatorDiscreteControlProfile::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, controlmessageinfo_),
           0,
           offsetof(Impl_, regulatorsystem_) -
               offsetof(Impl_, controlmessageinfo_) +
               sizeof(Impl_::regulatorsystem_));
}
RegulatorDiscreteControlProfile::~RegulatorDiscreteControlProfile() {
  // @@protoc_insertion_point(destructor:regulatormodule.RegulatorDiscreteControlProfile)
  SharedDtor(*this);
}
inline void RegulatorDiscreteControlProfile::SharedDtor(MessageLite& self) {
  RegulatorDiscreteControlProfile& this_ = static_cast<RegulatorDiscreteControlProfile&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.controlmessageinfo_;
  delete this_._impl_.regulatordiscretecontrol_;
  delete this_._impl_.regulatorsystem_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL RegulatorDiscreteControlProfile::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) RegulatorDiscreteControlProfile(arena);
}
constexpr auto RegulatorDiscreteControlProfile::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(RegulatorDiscreteControlProfile),
                                            alignof(RegulatorDiscreteControlProfile));
}
constexpr auto RegulatorDiscreteControlProfile::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_RegulatorDiscreteControlProfile_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &RegulatorDiscreteControlProfile::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<RegulatorDiscreteControlProfile>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &RegulatorDiscreteControlProfile::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<RegulatorDiscreteControlProfile>(), &RegulatorDiscreteControlProfile::ByteSizeLong,
              &RegulatorDiscreteControlProfile::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(RegulatorDiscreteControlProfile, _impl_._cached_size_),
          false,
      },
      &RegulatorDiscreteControlProfile::kDescriptorMethods,
      &descriptor_table_regulatormodule_2fregulatormodule_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull RegulatorDiscreteControlProfile_class_data_ =
        RegulatorDiscreteControlProfile::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
RegulatorDiscreteControlProfile::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&RegulatorDiscreteControlProfile_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(RegulatorDiscreteControlProfile_class_data_.tc_table);
  return RegulatorDiscreteControlProfile_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 3, 0, 2>
RegulatorDiscreteControlProfile::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RegulatorDiscreteControlProfile, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    RegulatorDiscreteControlProfile_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::regulatormodule::RegulatorDiscreteControlProfile>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .commonmodule.ControlMessageInfo controlMessageInfo = 1 [(.uml.option_parent_message) = true];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RegulatorDiscreteControlProfile, _impl_.controlmessageinfo_)}},
    // .regulatormodule.RegulatorDiscreteControl regulatorDiscreteControl = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(RegulatorDiscreteControlProfile, _impl_.regulatordiscretecontrol_)}},
    // .regulatormodule.RegulatorSystem regulatorSystem = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(RegulatorDiscreteControlProfile, _impl_.regulatorsystem_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .commonmodule.ControlMessageInfo controlMessageInfo = 1 [(.uml.option_parent_message) = true];
    {PROTOBUF_FIELD_OFFSET(RegulatorDiscreteControlProfile, _impl_.controlmessageinfo_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .regulatormodule.RegulatorDiscreteControl regulatorDiscreteControl = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
    {PROTOBUF_FIELD_OFFSET(RegulatorDiscreteControlProfile, _impl_.regulatordiscretecontrol_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .regulatormodule.RegulatorSystem regulatorSystem = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
    {PROTOBUF_FIELD_OFFSET(RegulatorDiscreteControlProfile, _impl_.regulatorsystem_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::commonmodule::ControlMessageInfo>()},
      {::_pbi::TcParser::GetTable<::regulatormodule::RegulatorDiscreteControl>()},
      {::_pbi::TcParser::GetTable<::regulatormodule::RegulatorSystem>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void RegulatorDiscreteControlProfile::Clear() {
// @@protoc_insertion_point(message_clear_start:regulatormodule.RegulatorDiscreteControlProfile)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.controlmessageinfo_ != nullptr);
      _impl_.controlmessageinfo_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.regulatordiscretecontrol_ != nullptr);
      _impl_.regulatordiscretecontrol_->Clear();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(_impl_.regulatorsystem_ != nullptr);
      _impl_.regulatorsystem_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL RegulatorDiscreteControlProfile::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const RegulatorDiscreteControlProfile& this_ = static_cast<const RegulatorDiscreteControlProfile&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL RegulatorDiscreteControlProfile::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const RegulatorDiscreteControlProfile& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:regulatormodule.RegulatorDiscreteControlProfile)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .commonmodule.ControlMessageInfo controlMessageInfo = 1 [(.uml.option_parent_message) = true];
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.controlmessageinfo_, this_._impl_.controlmessageinfo_->GetCachedSize(), target,
        stream);
  }

  // .regulatormodule.RegulatorDiscreteControl regulatorDiscreteControl = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.regulatordiscretecontrol_, this_._impl_.regulatordiscretecontrol_->GetCachedSize(), target,
        stream);
  }

  // .regulatormodule.RegulatorSystem regulatorSystem = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.regulatorsystem_, this_._impl_.regulatorsystem_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:regulatormodule.RegulatorDiscreteControlProfile)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t RegulatorDiscreteControlProfile::ByteSizeLong(const MessageLite& base) {
  const RegulatorDiscreteControlProfile& this_ = static_cast<const RegulatorDiscreteControlProfile&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t RegulatorDiscreteControlProfile::ByteSizeLong() const {
  const RegulatorDiscreteControlProfile& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:regulatormodule.RegulatorDiscreteControlProfile)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // .commonmodule.ControlMessageInfo controlMessageInfo = 1 [(.uml.option_parent_message) = true];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.controlmessageinfo_);
    }
    // .regulatormodule.RegulatorDiscreteControl regulatorDiscreteControl = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.regulatordiscretecontrol_);
    }
    // .regulatormodule.RegulatorSystem regulatorSystem = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.regulatorsystem_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void RegulatorDiscreteControlProfile::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RegulatorDiscreteControlProfile*>(&to_msg);
  auto& from = static_cast<const RegulatorDiscreteControlProfile&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:regulatormodule.RegulatorDiscreteControlProfile)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.controlmessageinfo_ != nullptr);
      if (_this->_impl_.controlmessageinfo_ == nullptr) {
        _this->_impl_.controlmessageinfo_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.controlmessageinfo_);
      } else {
        _this->_impl_.controlmessageinfo_->MergeFrom(*from._impl_.controlmessageinfo_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.regulatordiscretecontrol_ != nullptr);
      if (_this->_impl_.regulatordiscretecontrol_ == nullptr) {
        _this->_impl_.regulatordiscretecontrol_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.regulatordiscretecontrol_);
      } else {
        _this->_impl_.regulatordiscretecontrol_->MergeFrom(*from._impl_.regulatordiscretecontrol_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(from._impl_.regulatorsystem_ != nullptr);
      if (_this->_impl_.regulatorsystem_ == nullptr) {
        _this->_impl_.regulatorsystem_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.regulatorsystem_);
      } else {
        _this->_impl_.regulatorsystem_->MergeFrom(*from._impl_.regulatorsystem_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RegulatorDiscreteControlProfile::CopyFrom(const RegulatorDiscreteControlProfile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:regulatormodule.RegulatorDiscreteControlProfile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RegulatorDiscreteControlProfile::InternalSwap(RegulatorDiscreteControlProfile* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RegulatorDiscreteControlProfile, _impl_.regulatorsystem_)
      + sizeof(RegulatorDiscreteControlProfile::_impl_.regulatorsystem_)
      - PROTOBUF_FIELD_OFFSET(RegulatorDiscreteControlProfile, _impl_.controlmessageinfo_)>(
          reinterpret_cast<char*>(&_impl_.controlmessageinfo_),
          reinterpret_cast<char*>(&other->_impl_.controlmessageinfo_));
}

::google::protobuf::Metadata RegulatorDiscreteControlProfile::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RegulatorEventAndStatusATCC::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<RegulatorEventAndStatusATCC>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RegulatorEventAndStatusATCC, _impl_._has_bits_);
};

void RegulatorEventAndStatusATCC::clear_bndctr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.bndctr_ != nullptr) _impl_.bndctr_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void RegulatorEventAndStatusATCC::clear_bndwid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.bndwid_ != nullptr) _impl_.bndwid_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void RegulatorEventAndStatusATCC::clear_bndwidhi() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.bndwidhi_ != nullptr) _impl_.bndwidhi_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void RegulatorEventAndStatusATCC::clear_bndwidlo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.bndwidlo_ != nullptr) _impl_.bndwidlo_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
void RegulatorEventAndStatusATCC::clear_dirctlrev() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.dirctlrev_ != nullptr) _impl_.dirctlrev_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
void RegulatorEventAndStatusATCC::clear_dirindt() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.dirindt_ != nullptr) _impl_.dirindt_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
void RegulatorEventAndStatusATCC::clear_dirrev() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.dirrev_ != nullptr) _impl_.dirrev_->Clear();
  _impl_._has_bits_[0] &= ~0x00000040u;
}
void RegulatorEventAndStatusATCC::clear_ldcr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.ldcr_ != nullptr) _impl_.ldcr_->Clear();
  _impl_._has_bits_[0] &= ~0x00000080u;
}
void RegulatorEventAndStatusATCC::clear_ldcx() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.ldcx_ != nullptr) _impl_.ldcx_->Clear();
  _impl_._has_bits_[0] &= ~0x00000100u;
}
void RegulatorEventAndStatusATCC::clear_parop() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.parop_ != nullptr) _impl_.parop_->Clear();
  _impl_._has_bits_[0] &= ~0x00000200u;
}
void RegulatorEventAndStatusATCC::clear_ramprates() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.ramprates_ != nullptr) _impl_.ramprates_->Clear();
  _impl_._has_bits_[0] &= ~0x00000400u;
}
void RegulatorEventAndStatusATCC::clear_state() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.state_ != nullptr) _impl_.state_->Clear();
  _impl_._has_bits_[0] &= ~0x00000800u;
}
void RegulatorEventAndStatusATCC::clear_stdltmms() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.stdltmms_ != nullptr) _impl_.stdltmms_->Clear();
  _impl_._has_bits_[0] &= ~0x00001000u;
}
void RegulatorEventAndStatusATCC::clear_tapoperr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.tapoperr_ != nullptr) _impl_.tapoperr_->Clear();
  _impl_._has_bits_[0] &= ~0x00002000u;
}
void RegulatorEventAndStatusATCC::clear_tappos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.tappos_ != nullptr) _impl_.tappos_->Clear();
  _impl_._has_bits_[0] &= ~0x00004000u;
}
void RegulatorEventAndStatusATCC::clear_vollmthi() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.vollmthi_ != nullptr) _impl_.vollmthi_->Clear();
  _impl_._has_bits_[0] &= ~0x00008000u;
}
void RegulatorEventAndStatusATCC::clear_vollmtlo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.vollmtlo_ != nullptr) _impl_.vollmtlo_->Clear();
  _impl_._has_bits_[0] &= ~0x00010000u;
}
void RegulatorEventAndStatusATCC::clear_volspt() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.volspt_ != nullptr) _impl_.volspt_->Clear();
  _impl_._has_bits_[0] &= ~0x00020000u;
}
void RegulatorEventAndStatusATCC::clear_voltagesetpointenabled() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.voltagesetpointenabled_ != nullptr) _impl_.voltagesetpointenabled_->Clear();
  _impl_._has_bits_[0] &= ~0x00040000u;
}
void RegulatorEventAndStatusATCC::clear_dirmod() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.dirmod_ != nullptr) _impl_.dirmod_->Clear();
  _impl_._has_bits_[0] &= ~0x00080000u;
}
void RegulatorEventAndStatusATCC::clear_vollmtmode() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.vollmtmode_ != nullptr) _impl_.vollmtmode_->Clear();
  _impl_._has_bits_[0] &= ~0x00100000u;
}
RegulatorEventAndStatusATCC::RegulatorEventAndStatusATCC(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RegulatorEventAndStatusATCC_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:regulatormodule.RegulatorEventAndStatusATCC)
}
PROTOBUF_NDEBUG_INLINE RegulatorEventAndStatusATCC::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::regulatormodule::RegulatorEventAndStatusATCC& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

RegulatorEventAndStatusATCC::RegulatorEventAndStatusATCC(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const RegulatorEventAndStatusATCC& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RegulatorEventAndStatusATCC_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RegulatorEventAndStatusATCC* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.bndctr_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.bndctr_)
                : nullptr;
  _impl_.bndwid_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.bndwid_)
                : nullptr;
  _impl_.bndwidhi_ = ((cached_has_bits & 0x00000004u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.bndwidhi_)
                : nullptr;
  _impl_.bndwidlo_ = ((cached_has_bits & 0x00000008u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.bndwidlo_)
                : nullptr;
  _impl_.dirctlrev_ = ((cached_has_bits & 0x00000010u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.dirctlrev_)
                : nullptr;
  _impl_.dirindt_ = ((cached_has_bits & 0x00000020u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.dirindt_)
                : nullptr;
  _impl_.dirrev_ = ((cached_has_bits & 0x00000040u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.dirrev_)
                : nullptr;
  _impl_.ldcr_ = ((cached_has_bits & 0x00000080u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.ldcr_)
                : nullptr;
  _impl_.ldcx_ = ((cached_has_bits & 0x00000100u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.ldcx_)
                : nullptr;
  _impl_.parop_ = ((cached_has_bits & 0x00000200u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.parop_)
                : nullptr;
  _impl_.ramprates_ = ((cached_has_bits & 0x00000400u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.ramprates_)
                : nullptr;
  _impl_.state_ = ((cached_has_bits & 0x00000800u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.state_)
                : nullptr;
  _impl_.stdltmms_ = ((cached_has_bits & 0x00001000u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.stdltmms_)
                : nullptr;
  _impl_.tapoperr_ = ((cached_has_bits & 0x00002000u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.tapoperr_)
                : nullptr;
  _impl_.tappos_ = ((cached_has_bits & 0x00004000u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.tappos_)
                : nullptr;
  _impl_.vollmthi_ = ((cached_has_bits & 0x00008000u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.vollmthi_)
                : nullptr;
  _impl_.vollmtlo_ = ((cached_has_bits & 0x00010000u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.vollmtlo_)
                : nullptr;
  _impl_.volspt_ = ((cached_has_bits & 0x00020000u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.volspt_)
                : nullptr;
  _impl_.voltagesetpointenabled_ = ((cached_has_bits & 0x00040000u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.voltagesetpointenabled_)
                : nullptr;
  _impl_.dirmod_ = ((cached_has_bits & 0x00080000u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.dirmod_)
                : nullptr;
  _impl_.vollmtmode_ = ((cached_has_bits & 0x00100000u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.vollmtmode_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:regulatormodule.RegulatorEventAndStatusATCC)
}
PROTOBUF_NDEBUG_INLINE RegulatorEventAndStatusATCC::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void RegulatorEventAndStatusATCC::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, bndctr_),
           0,
           offsetof(Impl_, vollmtmode_) -
               offsetof(Impl_, bndctr_) +
               sizeof(Impl_::vollmtmode_));
}
RegulatorEventAndStatusATCC::~RegulatorEventAndStatusATCC() {
  // @@protoc_insertion_point(destructor:regulatormodule.RegulatorEventAndStatusATCC)
  SharedDtor(*this);
}
inline void RegulatorEventAndStatusATCC::SharedDtor(MessageLite& self) {
  RegulatorEventAndStatusATCC& this_ = static_cast<RegulatorEventAndStatusATCC&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.bndctr_;
  delete this_._impl_.bndwid_;
  delete this_._impl_.bndwidhi_;
  delete this_._impl_.bndwidlo_;
  delete this_._impl_.dirctlrev_;
  delete this_._impl_.dirindt_;
  delete this_._impl_.dirrev_;
  delete this_._impl_.ldcr_;
  delete this_._impl_.ldcx_;
  delete this_._impl_.parop_;
  delete this_._impl_.ramprates_;
  delete this_._impl_.state_;
  delete this_._impl_.stdltmms_;
  delete this_._impl_.tapoperr_;
  delete this_._impl_.tappos_;
  delete this_._impl_.vollmthi_;
  delete this_._impl_.vollmtlo_;
  delete this_._impl_.volspt_;
  delete this_._impl_.voltagesetpointenabled_;
  delete this_._impl_.dirmod_;
  delete this_._impl_.vollmtmode_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL RegulatorEventAndStatusATCC::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) RegulatorEventAndStatusATCC(arena);
}
constexpr auto RegulatorEventAndStatusATCC::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(RegulatorEventAndStatusATCC),
                                            alignof(RegulatorEventAndStatusATCC));
}
constexpr auto RegulatorEventAndStatusATCC::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_RegulatorEventAndStatusATCC_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &RegulatorEventAndStatusATCC::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<RegulatorEventAndStatusATCC>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &RegulatorEventAndStatusATCC::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<RegulatorEventAndStatusATCC>(), &RegulatorEventAndStatusATCC::ByteSizeLong,
              &RegulatorEventAndStatusATCC::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(RegulatorEventAndStatusATCC, _impl_._cached_size_),
          false,
      },
      &RegulatorEventAndStatusATCC::kDescriptorMethods,
      &descriptor_table_regulatormodule_2fregulatormodule_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull RegulatorEventAndStatusATCC_class_data_ =
        RegulatorEventAndStatusATCC::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
RegulatorEventAndStatusATCC::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&RegulatorEventAndStatusATCC_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(RegulatorEventAndStatusATCC_class_data_.tc_table);
  return RegulatorEventAndStatusATCC_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 21, 21, 0, 2>
RegulatorEventAndStatusATCC::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RegulatorEventAndStatusATCC, _impl_._has_bits_),
    0, // no _extensions_
    21, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4292870144,  // skipmap
    offsetof(decltype(_table_), field_entries),
    21,  // num_field_entries
    21,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    RegulatorEventAndStatusATCC_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::regulatormodule::RegulatorEventAndStatusATCC>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .commonmodule.ASG BndCtr = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RegulatorEventAndStatusATCC, _impl_.bndctr_)}},
    // .commonmodule.ASG BndWid = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(RegulatorEventAndStatusATCC, _impl_.bndwid_)}},
    // .commonmodule.PhaseSPS BndWidHi = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(RegulatorEventAndStatusATCC, _impl_.bndwidhi_)}},
    // .commonmodule.PhaseSPS BndWidLo = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 3, 3, PROTOBUF_FIELD_OFFSET(RegulatorEventAndStatusATCC, _impl_.bndwidlo_)}},
    // .commonmodule.PhaseSPS DirCtlRev = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 4, 4, PROTOBUF_FIELD_OFFSET(RegulatorEventAndStatusATCC, _impl_.dirctlrev_)}},
    // .commonmodule.PhaseSPS DirIndt = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 5, 5, PROTOBUF_FIELD_OFFSET(RegulatorEventAndStatusATCC, _impl_.dirindt_)}},
    // .commonmodule.PhaseSPS DirRev = 7;
    {::_pbi::TcParser::FastMtS1,
     {58, 6, 6, PROTOBUF_FIELD_OFFSET(RegulatorEventAndStatusATCC, _impl_.dirrev_)}},
    // .commonmodule.ASG LDCR = 8;
    {::_pbi::TcParser::FastMtS1,
     {66, 7, 7, PROTOBUF_FIELD_OFFSET(RegulatorEventAndStatusATCC, _impl_.ldcr_)}},
    // .commonmodule.ASG LDCX = 9;
    {::_pbi::TcParser::FastMtS1,
     {74, 8, 8, PROTOBUF_FIELD_OFFSET(RegulatorEventAndStatusATCC, _impl_.ldcx_)}},
    // .commonmodule.StatusSPS ParOp = 10;
    {::_pbi::TcParser::FastMtS1,
     {82, 9, 9, PROTOBUF_FIELD_OFFSET(RegulatorEventAndStatusATCC, _impl_.parop_)}},
    // .commonmodule.RampRate rampRates = 11;
    {::_pbi::TcParser::FastMtS1,
     {90, 10, 10, PROTOBUF_FIELD_OFFSET(RegulatorEventAndStatusATCC, _impl_.ramprates_)}},
    // .commonmodule.Optional_StateKind state = 12;
    {::_pbi::TcParser::FastMtS1,
     {98, 11, 11, PROTOBUF_FIELD_OFFSET(RegulatorEventAndStatusATCC, _impl_.state_)}},
    // .commonmodule.StatusINC StDlTmms = 13;
    {::_pbi::TcParser::FastMtS1,
     {106, 12, 12, PROTOBUF_FIELD_OFFSET(RegulatorEventAndStatusATCC, _impl_.stdltmms_)}},
    // .commonmodule.StatusSPS TapOpErr = 14;
    {::_pbi::TcParser::FastMtS1,
     {114, 13, 13, PROTOBUF_FIELD_OFFSET(RegulatorEventAndStatusATCC, _impl_.tapoperr_)}},
    // .commonmodule.PhaseINS TapPos = 15;
    {::_pbi::TcParser::FastMtS1,
     {122, 14, 14, PROTOBUF_FIELD_OFFSET(RegulatorEventAndStatusATCC, _impl_.tappos_)}},
    // .commonmodule.PhaseSPS VolLmtHi = 16;
    {::_pbi::TcParser::FastMtS2,
     {386, 15, 15, PROTOBUF_FIELD_OFFSET(RegulatorEventAndStatusATCC, _impl_.vollmthi_)}},
    // .commonmodule.PhaseSPS VolLmtLo = 17;
    {::_pbi::TcParser::FastMtS2,
     {394, 16, 16, PROTOBUF_FIELD_OFFSET(RegulatorEventAndStatusATCC, _impl_.vollmtlo_)}},
    // .commonmodule.PhaseAPC VolSpt = 18;
    {::_pbi::TcParser::FastMtS2,
     {402, 17, 17, PROTOBUF_FIELD_OFFSET(RegulatorEventAndStatusATCC, _impl_.volspt_)}},
    // .commonmodule.StatusSPS voltageSetPointEnabled = 19;
    {::_pbi::TcParser::FastMtS2,
     {410, 18, 18, PROTOBUF_FIELD_OFFSET(RegulatorEventAndStatusATCC, _impl_.voltagesetpointenabled_)}},
    // .commonmodule.Optional_DirectionModeKind DirMod = 20;
    {::_pbi::TcParser::FastMtS2,
     {418, 19, 19, PROTOBUF_FIELD_OFFSET(RegulatorEventAndStatusATCC, _impl_.dirmod_)}},
    // .commonmodule.Optional_VoltLimitModeKind VolLmtMode = 21;
    {::_pbi::TcParser::FastMtS2,
     {426, 20, 20, PROTOBUF_FIELD_OFFSET(RegulatorEventAndStatusATCC, _impl_.vollmtmode_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .commonmodule.ASG BndCtr = 1;
    {PROTOBUF_FIELD_OFFSET(RegulatorEventAndStatusATCC, _impl_.bndctr_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .commonmodule.ASG BndWid = 2;
    {PROTOBUF_FIELD_OFFSET(RegulatorEventAndStatusATCC, _impl_.bndwid_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .commonmodule.PhaseSPS BndWidHi = 3;
    {PROTOBUF_FIELD_OFFSET(RegulatorEventAndStatusATCC, _impl_.bndwidhi_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .commonmodule.PhaseSPS BndWidLo = 4;
    {PROTOBUF_FIELD_OFFSET(RegulatorEventAndStatusATCC, _impl_.bndwidlo_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .commonmodule.PhaseSPS DirCtlRev = 5;
    {PROTOBUF_FIELD_OFFSET(RegulatorEventAndStatusATCC, _impl_.dirctlrev_), _Internal::kHasBitsOffset + 4, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .commonmodule.PhaseSPS DirIndt = 6;
    {PROTOBUF_FIELD_OFFSET(RegulatorEventAndStatusATCC, _impl_.dirindt_), _Internal::kHasBitsOffset + 5, 5,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .commonmodule.PhaseSPS DirRev = 7;
    {PROTOBUF_FIELD_OFFSET(RegulatorEventAndStatusATCC, _impl_.dirrev_), _Internal::kHasBitsOffset + 6, 6,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .commonmodule.ASG LDCR = 8;
    {PROTOBUF_FIELD_OFFSET(RegulatorEventAndStatusATCC, _impl_.ldcr_), _Internal::kHasBitsOffset + 7, 7,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .commonmodule.ASG LDCX = 9;
    {PROTOBUF_FIELD_OFFSET(RegulatorEventAndStatusATCC, _impl_.ldcx_), _Internal::kHasBitsOffset + 8, 8,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .commonmodule.StatusSPS ParOp = 10;
    {PROTOBUF_FIELD_OFFSET(RegulatorEventAndStatusATCC, _impl_.parop_), _Internal::kHasBitsOffset + 9, 9,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .commonmodule.RampRate rampRates = 11;
    {PROTOBUF_FIELD_OFFSET(RegulatorEventAndStatusATCC, _impl_.ramprates_), _Internal::kHasBitsOffset + 10, 10,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .commonmodule.Optional_StateKind state = 12;
    {PROTOBUF_FIELD_OFFSET(RegulatorEventAndStatusATCC, _impl_.state_), _Internal::kHasBitsOffset + 11, 11,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .commonmodule.StatusINC StDlTmms = 13;
    {PROTOBUF_FIELD_OFFSET(RegulatorEventAndStatusATCC, _impl_.stdltmms_), _Internal::kHasBitsOffset + 12, 12,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .commonmodule.StatusSPS TapOpErr = 14;
    {PROTOBUF_FIELD_OFFSET(RegulatorEventAndStatusATCC, _impl_.tapoperr_), _Internal::kHasBitsOffset + 13, 13,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .commonmodule.PhaseINS TapPos = 15;
    {PROTOBUF_FIELD_OFFSET(RegulatorEventAndStatusATCC, _impl_.tappos_), _Internal::kHasBitsOffset + 14, 14,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .commonmodule.PhaseSPS VolLmtHi = 16;
    {PROTOBUF_FIELD_OFFSET(RegulatorEventAndStatusATCC, _impl_.vollmthi_), _Internal::kHasBitsOffset + 15, 15,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .commonmodule.PhaseSPS VolLmtLo = 17;
    {PROTOBUF_FIELD_OFFSET(RegulatorEventAndStatusATCC, _impl_.vollmtlo_), _Internal::kHasBitsOffset + 16, 16,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .commonmodule.PhaseAPC VolSpt = 18;
    {PROTOBUF_FIELD_OFFSET(RegulatorEventAndStatusATCC, _impl_.volspt_), _Internal::kHasBitsOffset + 17, 17,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .commonmodule.StatusSPS voltageSetPointEnabled = 19;
    {PROTOBUF_FIELD_OFFSET(RegulatorEventAndStatusATCC, _impl_.voltagesetpointenabled_), _Internal::kHasBitsOffset + 18, 18,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .commonmodule.Optional_DirectionModeKind DirMod = 20;
    {PROTOBUF_FIELD_OFFSET(RegulatorEventAndStatusATCC, _impl_.dirmod_), _Internal::kHasBitsOffset + 19, 19,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .commonmodule.Optional_VoltLimitModeKind VolLmtMode = 21;
    {PROTOBUF_FIELD_OFFSET(RegulatorEventAndStatusATCC, _impl_.vollmtmode_), _Internal::kHasBitsOffset + 20, 20,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::commonmodule::ASG>()},
      {::_pbi::TcParser::GetTable<::commonmodule::ASG>()},
      {::_pbi::TcParser::GetTable<::commonmodule::PhaseSPS>()},
      {::_pbi::TcParser::GetTable<::commonmodule::PhaseSPS>()},
      {::_pbi::TcParser::GetTable<::commonmodule::PhaseSPS>()},
      {::_pbi::TcParser::GetTable<::commonmodule::PhaseSPS>()},
      {::_pbi::TcParser::GetTable<::commonmodule::PhaseSPS>()},
      {::_pbi::TcParser::GetTable<::commonmodule::ASG>()},
      {::_pbi::TcParser::GetTable<::commonmodule::ASG>()},
      {::_pbi::TcParser::GetTable<::commonmodule::StatusSPS>()},
      {::_pbi::TcParser::GetTable<::commonmodule::RampRate>()},
      {::_pbi::TcParser::GetTable<::commonmodule::Optional_StateKind>()},
      {::_pbi::TcParser::GetTable<::commonmodule::StatusINC>()},
      {::_pbi::TcParser::GetTable<::commonmodule::StatusSPS>()},
      {::_pbi::TcParser::GetTable<::commonmodule::PhaseINS>()},
      {::_pbi::TcParser::GetTable<::commonmodule::PhaseSPS>()},
      {::_pbi::TcParser::GetTable<::commonmodule::PhaseSPS>()},
      {::_pbi::TcParser::GetTable<::commonmodule::PhaseAPC>()},
      {::_pbi::TcParser::GetTable<::commonmodule::StatusSPS>()},
      {::_pbi::TcParser::GetTable<::commonmodule::Optional_DirectionModeKind>()},
      {::_pbi::TcParser::GetTable<::commonmodule::Optional_VoltLimitModeKind>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void RegulatorEventAndStatusATCC::Clear() {
// @@protoc_insertion_point(message_clear_start:regulatormodule.RegulatorEventAndStatusATCC)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.bndctr_ != nullptr);
      _impl_.bndctr_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.bndwid_ != nullptr);
      _impl_.bndwid_->Clear();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(_impl_.bndwidhi_ != nullptr);
      _impl_.bndwidhi_->Clear();
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(_impl_.bndwidlo_ != nullptr);
      _impl_.bndwidlo_->Clear();
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      ABSL_DCHECK(_impl_.dirctlrev_ != nullptr);
      _impl_.dirctlrev_->Clear();
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      ABSL_DCHECK(_impl_.dirindt_ != nullptr);
      _impl_.dirindt_->Clear();
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      ABSL_DCHECK(_impl_.dirrev_ != nullptr);
      _impl_.dirrev_->Clear();
    }
    if ((cached_has_bits & 0x00000080u) != 0) {
      ABSL_DCHECK(_impl_.ldcr_ != nullptr);
      _impl_.ldcr_->Clear();
    }
  }
  if ((cached_has_bits & 0x0000ff00u) != 0) {
    if ((cached_has_bits & 0x00000100u) != 0) {
      ABSL_DCHECK(_impl_.ldcx_ != nullptr);
      _impl_.ldcx_->Clear();
    }
    if ((cached_has_bits & 0x00000200u) != 0) {
      ABSL_DCHECK(_impl_.parop_ != nullptr);
      _impl_.parop_->Clear();
    }
    if ((cached_has_bits & 0x00000400u) != 0) {
      ABSL_DCHECK(_impl_.ramprates_ != nullptr);
      _impl_.ramprates_->Clear();
    }
    if ((cached_has_bits & 0x00000800u) != 0) {
      ABSL_DCHECK(_impl_.state_ != nullptr);
      _impl_.state_->Clear();
    }
    if ((cached_has_bits & 0x00001000u) != 0) {
      ABSL_DCHECK(_impl_.stdltmms_ != nullptr);
      _impl_.stdltmms_->Clear();
    }
    if ((cached_has_bits & 0x00002000u) != 0) {
      ABSL_DCHECK(_impl_.tapoperr_ != nullptr);
      _impl_.tapoperr_->Clear();
    }
    if ((cached_has_bits & 0x00004000u) != 0) {
      ABSL_DCHECK(_impl_.tappos_ != nullptr);
      _impl_.tappos_->Clear();
    }
    if ((cached_has_bits & 0x00008000u) != 0) {
      ABSL_DCHECK(_impl_.vollmthi_ != nullptr);
      _impl_.vollmthi_->Clear();
    }
  }
  if ((cached_has_bits & 0x001f0000u) != 0) {
    if ((cached_has_bits & 0x00010000u) != 0) {
      ABSL_DCHECK(_impl_.vollmtlo_ != nullptr);
      _impl_.vollmtlo_->Clear();
    }
    if ((cached_has_bits & 0x00020000u) != 0) {
      ABSL_DCHECK(_impl_.volspt_ != nullptr);
      _impl_.volspt_->Clear();
    }
    if ((cached_has_bits & 0x00040000u) != 0) {
      ABSL_DCHECK(_impl_.voltagesetpointenabled_ != nullptr);
      _impl_.voltagesetpointenabled_->Clear();
    }
    if ((cached_has_bits & 0x00080000u) != 0) {
      ABSL_DCHECK(_impl_.dirmod_ != nullptr);
      _impl_.dirmod_->Clear();
    }
    if ((cached_has_bits & 0x00100000u) != 0) {
      ABSL_DCHECK(_impl_.vollmtmode_ != nullptr);
      _impl_.vollmtmode_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL RegulatorEventAndStatusATCC::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const RegulatorEventAndStatusATCC& this_ = static_cast<const RegulatorEventAndStatusATCC&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL RegulatorEventAndStatusATCC::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const RegulatorEventAndStatusATCC& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:regulatormodule.RegulatorEventAndStatusATCC)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .commonmodule.ASG BndCtr = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.bndctr_, this_._impl_.bndctr_->GetCachedSize(), target,
        stream);
  }

  // .commonmodule.ASG BndWid = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.bndwid_, this_._impl_.bndwid_->GetCachedSize(), target,
        stream);
  }

  // .commonmodule.PhaseSPS BndWidHi = 3;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.bndwidhi_, this_._impl_.bndwidhi_->GetCachedSize(), target,
        stream);
  }

  // .commonmodule.PhaseSPS BndWidLo = 4;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *this_._impl_.bndwidlo_, this_._impl_.bndwidlo_->GetCachedSize(), target,
        stream);
  }

  // .commonmodule.PhaseSPS DirCtlRev = 5;
  if ((cached_has_bits & 0x00000010u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *this_._impl_.dirctlrev_, this_._impl_.dirctlrev_->GetCachedSize(), target,
        stream);
  }

  // .commonmodule.PhaseSPS DirIndt = 6;
  if ((cached_has_bits & 0x00000020u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        6, *this_._impl_.dirindt_, this_._impl_.dirindt_->GetCachedSize(), target,
        stream);
  }

  // .commonmodule.PhaseSPS DirRev = 7;
  if ((cached_has_bits & 0x00000040u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        7, *this_._impl_.dirrev_, this_._impl_.dirrev_->GetCachedSize(), target,
        stream);
  }

  // .commonmodule.ASG LDCR = 8;
  if ((cached_has_bits & 0x00000080u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        8, *this_._impl_.ldcr_, this_._impl_.ldcr_->GetCachedSize(), target,
        stream);
  }

  // .commonmodule.ASG LDCX = 9;
  if ((cached_has_bits & 0x00000100u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        9, *this_._impl_.ldcx_, this_._impl_.ldcx_->GetCachedSize(), target,
        stream);
  }

  // .commonmodule.StatusSPS ParOp = 10;
  if ((cached_has_bits & 0x00000200u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        10, *this_._impl_.parop_, this_._impl_.parop_->GetCachedSize(), target,
        stream);
  }

  // .commonmodule.RampRate rampRates = 11;
  if ((cached_has_bits & 0x00000400u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        11, *this_._impl_.ramprates_, this_._impl_.ramprates_->GetCachedSize(), target,
        stream);
  }

  // .commonmodule.Optional_StateKind state = 12;
  if ((cached_has_bits & 0x00000800u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        12, *this_._impl_.state_, this_._impl_.state_->GetCachedSize(), target,
        stream);
  }

  // .commonmodule.StatusINC StDlTmms = 13;
  if ((cached_has_bits & 0x00001000u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        13, *this_._impl_.stdltmms_, this_._impl_.stdltmms_->GetCachedSize(), target,
        stream);
  }

  // .commonmodule.StatusSPS TapOpErr = 14;
  if ((cached_has_bits & 0x00002000u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        14, *this_._impl_.tapoperr_, this_._impl_.tapoperr_->GetCachedSize(), target,
        stream);
  }

  // .commonmodule.PhaseINS TapPos = 15;
  if ((cached_has_bits & 0x00004000u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        15, *this_._impl_.tappos_, this_._impl_.tappos_->GetCachedSize(), target,
        stream);
  }

  // .commonmodule.PhaseSPS VolLmtHi = 16;
  if ((cached_has_bits & 0x00008000u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        16, *this_._impl_.vollmthi_, this_._impl_.vollmthi_->GetCachedSize(), target,
        stream);
  }

  // .commonmodule.PhaseSPS VolLmtLo = 17;
  if ((cached_has_bits & 0x00010000u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        17, *this_._impl_.vollmtlo_, this_._impl_.vollmtlo_->GetCachedSize(), target,
        stream);
  }

  // .commonmodule.PhaseAPC VolSpt = 18;
  if ((cached_has_bits & 0x00020000u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        18, *this_._impl_.volspt_, this_._impl_.volspt_->GetCachedSize(), target,
        stream);
  }

  // .commonmodule.StatusSPS voltageSetPointEnabled = 19;
  if ((cached_has_bits & 0x00040000u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        19, *this_._impl_.voltagesetpointenabled_, this_._impl_.voltagesetpointenabled_->GetCachedSize(), target,
        stream);
  }

  // .commonmodule.Optional_DirectionModeKind DirMod = 20;
  if ((cached_has_bits & 0x00080000u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        20, *this_._impl_.dirmod_, this_._impl_.dirmod_->GetCachedSize(), target,
        stream);
  }

  // .commonmodule.Optional_VoltLimitModeKind VolLmtMode = 21;
  if ((cached_has_bits & 0x00100000u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        21, *this_._impl_.vollmtmode_, this_._impl_.vollmtmode_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:regulatormodule.RegulatorEventAndStatusATCC)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t RegulatorEventAndStatusATCC::ByteSizeLong(const MessageLite& base) {
  const RegulatorEventAndStatusATCC& this_ = static_cast<const RegulatorEventAndStatusATCC&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t RegulatorEventAndStatusATCC::ByteSizeLong() const {
  const RegulatorEventAndStatusATCC& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:regulatormodule.RegulatorEventAndStatusATCC)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    // .commonmodule.ASG BndCtr = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.bndctr_);
    }
    // .commonmodule.ASG BndWid = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.bndwid_);
    }
    // .commonmodule.PhaseSPS BndWidHi = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.bndwidhi_);
    }
    // .commonmodule.PhaseSPS BndWidLo = 4;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.bndwidlo_);
    }
    // .commonmodule.PhaseSPS DirCtlRev = 5;
    if ((cached_has_bits & 0x00000010u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.dirctlrev_);
    }
    // .commonmodule.PhaseSPS DirIndt = 6;
    if ((cached_has_bits & 0x00000020u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.dirindt_);
    }
    // .commonmodule.PhaseSPS DirRev = 7;
    if ((cached_has_bits & 0x00000040u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.dirrev_);
    }
    // .commonmodule.ASG LDCR = 8;
    if ((cached_has_bits & 0x00000080u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.ldcr_);
    }
  }
  if ((cached_has_bits & 0x0000ff00u) != 0) {
    // .commonmodule.ASG LDCX = 9;
    if ((cached_has_bits & 0x00000100u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.ldcx_);
    }
    // .commonmodule.StatusSPS ParOp = 10;
    if ((cached_has_bits & 0x00000200u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.parop_);
    }
    // .commonmodule.RampRate rampRates = 11;
    if ((cached_has_bits & 0x00000400u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.ramprates_);
    }
    // .commonmodule.Optional_StateKind state = 12;
    if ((cached_has_bits & 0x00000800u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.state_);
    }
    // .commonmodule.StatusINC StDlTmms = 13;
    if ((cached_has_bits & 0x00001000u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.stdltmms_);
    }
    // .commonmodule.StatusSPS TapOpErr = 14;
    if ((cached_has_bits & 0x00002000u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.tapoperr_);
    }
    // .commonmodule.PhaseINS TapPos = 15;
    if ((cached_has_bits & 0x00004000u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.tappos_);
    }
    // .commonmodule.PhaseSPS VolLmtHi = 16;
    if ((cached_has_bits & 0x00008000u) != 0) {
      total_size += 2 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.vollmthi_);
    }
  }
  if ((cached_has_bits & 0x001f0000u) != 0) {
    // .commonmodule.PhaseSPS VolLmtLo = 17;
    if ((cached_has_bits & 0x00010000u) != 0) {
      total_size += 2 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.vollmtlo_);
    }
    // .commonmodule.PhaseAPC VolSpt = 18;
    if ((cached_has_bits & 0x00020000u) != 0) {
      total_size += 2 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.volspt_);
    }
    // .commonmodule.StatusSPS voltageSetPointEnabled = 19;
    if ((cached_has_bits & 0x00040000u) != 0) {
      total_size += 2 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.voltagesetpointenabled_);
    }
    // .commonmodule.Optional_DirectionModeKind DirMod = 20;
    if ((cached_has_bits & 0x00080000u) != 0) {
      total_size += 2 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.dirmod_);
    }
    // .commonmodule.Optional_VoltLimitModeKind VolLmtMode = 21;
    if ((cached_has_bits & 0x00100000u) != 0) {
      total_size += 2 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.vollmtmode_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void RegulatorEventAndStatusATCC::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RegulatorEventAndStatusATCC*>(&to_msg);
  auto& from = static_cast<const RegulatorEventAndStatusATCC&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:regulatormodule.RegulatorEventAndStatusATCC)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.bndctr_ != nullptr);
      if (_this->_impl_.bndctr_ == nullptr) {
        _this->_impl_.bndctr_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.bndctr_);
      } else {
        _this->_impl_.bndctr_->MergeFrom(*from._impl_.bndctr_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.bndwid_ != nullptr);
      if (_this->_impl_.bndwid_ == nullptr) {
        _this->_impl_.bndwid_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.bndwid_);
      } else {
        _this->_impl_.bndwid_->MergeFrom(*from._impl_.bndwid_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(from._impl_.bndwidhi_ != nullptr);
      if (_this->_impl_.bndwidhi_ == nullptr) {
        _this->_impl_.bndwidhi_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.bndwidhi_);
      } else {
        _this->_impl_.bndwidhi_->MergeFrom(*from._impl_.bndwidhi_);
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(from._impl_.bndwidlo_ != nullptr);
      if (_this->_impl_.bndwidlo_ == nullptr) {
        _this->_impl_.bndwidlo_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.bndwidlo_);
      } else {
        _this->_impl_.bndwidlo_->MergeFrom(*from._impl_.bndwidlo_);
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      ABSL_DCHECK(from._impl_.dirctlrev_ != nullptr);
      if (_this->_impl_.dirctlrev_ == nullptr) {
        _this->_impl_.dirctlrev_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.dirctlrev_);
      } else {
        _this->_impl_.dirctlrev_->MergeFrom(*from._impl_.dirctlrev_);
      }
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      ABSL_DCHECK(from._impl_.dirindt_ != nullptr);
      if (_this->_impl_.dirindt_ == nullptr) {
        _this->_impl_.dirindt_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.dirindt_);
      } else {
        _this->_impl_.dirindt_->MergeFrom(*from._impl_.dirindt_);
      }
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      ABSL_DCHECK(from._impl_.dirrev_ != nullptr);
      if (_this->_impl_.dirrev_ == nullptr) {
        _this->_impl_.dirrev_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.dirrev_);
      } else {
        _this->_impl_.dirrev_->MergeFrom(*from._impl_.dirrev_);
      }
    }
    if ((cached_has_bits & 0x00000080u) != 0) {
      ABSL_DCHECK(from._impl_.ldcr_ != nullptr);
      if (_this->_impl_.ldcr_ == nullptr) {
        _this->_impl_.ldcr_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.ldcr_);
      } else {
        _this->_impl_.ldcr_->MergeFrom(*from._impl_.ldcr_);
      }
    }
  }
  if ((cached_has_bits & 0x0000ff00u) != 0) {
    if ((cached_has_bits & 0x00000100u) != 0) {
      ABSL_DCHECK(from._impl_.ldcx_ != nullptr);
      if (_this->_impl_.ldcx_ == nullptr) {
        _this->_impl_.ldcx_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.ldcx_);
      } else {
        _this->_impl_.ldcx_->MergeFrom(*from._impl_.ldcx_);
      }
    }
    if ((cached_has_bits & 0x00000200u) != 0) {
      ABSL_DCHECK(from._impl_.parop_ != nullptr);
      if (_this->_impl_.parop_ == nullptr) {
        _this->_impl_.parop_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.parop_);
      } else {
        _this->_impl_.parop_->MergeFrom(*from._impl_.parop_);
      }
    }
    if ((cached_has_bits & 0x00000400u) != 0) {
      ABSL_DCHECK(from._impl_.ramprates_ != nullptr);
      if (_this->_impl_.ramprates_ == nullptr) {
        _this->_impl_.ramprates_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.ramprates_);
      } else {
        _this->_impl_.ramprates_->MergeFrom(*from._impl_.ramprates_);
      }
    }
    if ((cached_has_bits & 0x00000800u) != 0) {
      ABSL_DCHECK(from._impl_.state_ != nullptr);
      if (_this->_impl_.state_ == nullptr) {
        _this->_impl_.state_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.state_);
      } else {
        _this->_impl_.state_->MergeFrom(*from._impl_.state_);
      }
    }
    if ((cached_has_bits & 0x00001000u) != 0) {
      ABSL_DCHECK(from._impl_.stdltmms_ != nullptr);
      if (_this->_impl_.stdltmms_ == nullptr) {
        _this->_impl_.stdltmms_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.stdltmms_);
      } else {
        _this->_impl_.stdltmms_->MergeFrom(*from._impl_.stdltmms_);
      }
    }
    if ((cached_has_bits & 0x00002000u) != 0) {
      ABSL_DCHECK(from._impl_.tapoperr_ != nullptr);
      if (_this->_impl_.tapoperr_ == nullptr) {
        _this->_impl_.tapoperr_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.tapoperr_);
      } else {
        _this->_impl_.tapoperr_->MergeFrom(*from._impl_.tapoperr_);
      }
    }
    if ((cached_has_bits & 0x00004000u) != 0) {
      ABSL_DCHECK(from._impl_.tappos_ != nullptr);
      if (_this->_impl_.tappos_ == nullptr) {
        _this->_impl_.tappos_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.tappos_);
      } else {
        _this->_impl_.tappos_->MergeFrom(*from._impl_.tappos_);
      }
    }
    if ((cached_has_bits & 0x00008000u) != 0) {
      ABSL_DCHECK(from._impl_.vollmthi_ != nullptr);
      if (_this->_impl_.vollmthi_ == nullptr) {
        _this->_impl_.vollmthi_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.vollmthi_);
      } else {
        _this->_impl_.vollmthi_->MergeFrom(*from._impl_.vollmthi_);
      }
    }
  }
  if ((cached_has_bits & 0x001f0000u) != 0) {
    if ((cached_has_bits & 0x00010000u) != 0) {
      ABSL_DCHECK(from._impl_.vollmtlo_ != nullptr);
      if (_this->_impl_.vollmtlo_ == nullptr) {
        _this->_impl_.vollmtlo_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.vollmtlo_);
      } else {
        _this->_impl_.vollmtlo_->MergeFrom(*from._impl_.vollmtlo_);
      }
    }
    if ((cached_has_bits & 0x00020000u) != 0) {
      ABSL_DCHECK(from._impl_.volspt_ != nullptr);
      if (_this->_impl_.volspt_ == nullptr) {
        _this->_impl_.volspt_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.volspt_);
      } else {
        _this->_impl_.volspt_->MergeFrom(*from._impl_.volspt_);
      }
    }
    if ((cached_has_bits & 0x00040000u) != 0) {
      ABSL_DCHECK(from._impl_.voltagesetpointenabled_ != nullptr);
      if (_this->_impl_.voltagesetpointenabled_ == nullptr) {
        _this->_impl_.voltagesetpointenabled_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.voltagesetpointenabled_);
      } else {
        _this->_impl_.voltagesetpointenabled_->MergeFrom(*from._impl_.voltagesetpointenabled_);
      }
    }
    if ((cached_has_bits & 0x00080000u) != 0) {
      ABSL_DCHECK(from._impl_.dirmod_ != nullptr);
      if (_this->_impl_.dirmod_ == nullptr) {
        _this->_impl_.dirmod_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.dirmod_);
      } else {
        _this->_impl_.dirmod_->MergeFrom(*from._impl_.dirmod_);
      }
    }
    if ((cached_has_bits & 0x00100000u) != 0) {
      ABSL_DCHECK(from._impl_.vollmtmode_ != nullptr);
      if (_this->_impl_.vollmtmode_ == nullptr) {
        _this->_impl_.vollmtmode_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.vollmtmode_);
      } else {
        _this->_impl_.vollmtmode_->MergeFrom(*from._impl_.vollmtmode_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RegulatorEventAndStatusATCC::CopyFrom(const RegulatorEventAndStatusATCC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:regulatormodule.RegulatorEventAndStatusATCC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RegulatorEventAndStatusATCC::InternalSwap(RegulatorEventAndStatusATCC* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RegulatorEventAndStatusATCC, _impl_.vollmtmode_)
      + sizeof(RegulatorEventAndStatusATCC::_impl_.vollmtmode_)
      - PROTOBUF_FIELD_OFFSET(RegulatorEventAndStatusATCC, _impl_.bndctr_)>(
          reinterpret_cast<char*>(&_impl_.bndctr_),
          reinterpret_cast<char*>(&other->_impl_.bndctr_));
}

::google::protobuf::Metadata RegulatorEventAndStatusATCC::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RegulatorEventAndStatusANCR::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<RegulatorEventAndStatusANCR>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RegulatorEventAndStatusANCR, _impl_._has_bits_);
};

void RegulatorEventAndStatusANCR::clear_logicalnodeforeventandstatus() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.logicalnodeforeventandstatus_ != nullptr) _impl_.logicalnodeforeventandstatus_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void RegulatorEventAndStatusANCR::clear_dynamictest() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.dynamictest_ != nullptr) _impl_.dynamictest_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
RegulatorEventAndStatusANCR::RegulatorEventAndStatusANCR(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RegulatorEventAndStatusANCR_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:regulatormodule.RegulatorEventAndStatusANCR)
}
PROTOBUF_NDEBUG_INLINE RegulatorEventAndStatusANCR::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::regulatormodule::RegulatorEventAndStatusANCR& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

RegulatorEventAndStatusANCR::RegulatorEventAndStatusANCR(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const RegulatorEventAndStatusANCR& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RegulatorEventAndStatusANCR_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RegulatorEventAndStatusANCR* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.logicalnodeforeventandstatus_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.logicalnodeforeventandstatus_)
                : nullptr;
  _impl_.dynamictest_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.dynamictest_)
                : nullptr;
  _impl_.pointstatus_ = ((cached_has_bits & 0x00000004u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.pointstatus_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:regulatormodule.RegulatorEventAndStatusANCR)
}
PROTOBUF_NDEBUG_INLINE RegulatorEventAndStatusANCR::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void RegulatorEventAndStatusANCR::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, logicalnodeforeventandstatus_),
           0,
           offsetof(Impl_, pointstatus_) -
               offsetof(Impl_, logicalnodeforeventandstatus_) +
               sizeof(Impl_::pointstatus_));
}
RegulatorEventAndStatusANCR::~RegulatorEventAndStatusANCR() {
  // @@protoc_insertion_point(destructor:regulatormodule.RegulatorEventAndStatusANCR)
  SharedDtor(*this);
}
inline void RegulatorEventAndStatusANCR::SharedDtor(MessageLite& self) {
  RegulatorEventAndStatusANCR& this_ = static_cast<RegulatorEventAndStatusANCR&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.logicalnodeforeventandstatus_;
  delete this_._impl_.dynamictest_;
  delete this_._impl_.pointstatus_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL RegulatorEventAndStatusANCR::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) RegulatorEventAndStatusANCR(arena);
}
constexpr auto RegulatorEventAndStatusANCR::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(RegulatorEventAndStatusANCR),
                                            alignof(RegulatorEventAndStatusANCR));
}
constexpr auto RegulatorEventAndStatusANCR::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_RegulatorEventAndStatusANCR_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &RegulatorEventAndStatusANCR::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<RegulatorEventAndStatusANCR>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &RegulatorEventAndStatusANCR::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<RegulatorEventAndStatusANCR>(), &RegulatorEventAndStatusANCR::ByteSizeLong,
              &RegulatorEventAndStatusANCR::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(RegulatorEventAndStatusANCR, _impl_._cached_size_),
          false,
      },
      &RegulatorEventAndStatusANCR::kDescriptorMethods,
      &descriptor_table_regulatormodule_2fregulatormodule_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull RegulatorEventAndStatusANCR_class_data_ =
        RegulatorEventAndStatusANCR::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
RegulatorEventAndStatusANCR::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&RegulatorEventAndStatusANCR_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(RegulatorEventAndStatusANCR_class_data_.tc_table);
  return RegulatorEventAndStatusANCR_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 3, 0, 2>
RegulatorEventAndStatusANCR::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RegulatorEventAndStatusANCR, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    RegulatorEventAndStatusANCR_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::regulatormodule::RegulatorEventAndStatusANCR>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .commonmodule.LogicalNodeForEventAndStatus logicalNodeForEventAndStatus = 1 [(.uml.option_parent_message) = true];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RegulatorEventAndStatusANCR, _impl_.logicalnodeforeventandstatus_)}},
    // .commonmodule.ENS_DynamicTestKind DynamicTest = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(RegulatorEventAndStatusANCR, _impl_.dynamictest_)}},
    // .regulatormodule.RegulatorEventAndStatusATCC PointStatus = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(RegulatorEventAndStatusANCR, _impl_.pointstatus_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .commonmodule.LogicalNodeForEventAndStatus logicalNodeForEventAndStatus = 1 [(.uml.option_parent_message) = true];
    {PROTOBUF_FIELD_OFFSET(RegulatorEventAndStatusANCR, _impl_.logicalnodeforeventandstatus_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .commonmodule.ENS_DynamicTestKind DynamicTest = 2;
    {PROTOBUF_FIELD_OFFSET(RegulatorEventAndStatusANCR, _impl_.dynamictest_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .regulatormodule.RegulatorEventAndStatusATCC PointStatus = 3;
    {PROTOBUF_FIELD_OFFSET(RegulatorEventAndStatusANCR, _impl_.pointstatus_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::commonmodule::LogicalNodeForEventAndStatus>()},
      {::_pbi::TcParser::GetTable<::commonmodule::ENS_DynamicTestKind>()},
      {::_pbi::TcParser::GetTable<::regulatormodule::RegulatorEventAndStatusATCC>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void RegulatorEventAndStatusANCR::Clear() {
// @@protoc_insertion_point(message_clear_start:regulatormodule.RegulatorEventAndStatusANCR)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.logicalnodeforeventandstatus_ != nullptr);
      _impl_.logicalnodeforeventandstatus_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.dynamictest_ != nullptr);
      _impl_.dynamictest_->Clear();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(_impl_.pointstatus_ != nullptr);
      _impl_.pointstatus_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL RegulatorEventAndStatusANCR::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const RegulatorEventAndStatusANCR& this_ = static_cast<const RegulatorEventAndStatusANCR&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL RegulatorEventAndStatusANCR::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const RegulatorEventAndStatusANCR& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:regulatormodule.RegulatorEventAndStatusANCR)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .commonmodule.LogicalNodeForEventAndStatus logicalNodeForEventAndStatus = 1 [(.uml.option_parent_message) = true];
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.logicalnodeforeventandstatus_, this_._impl_.logicalnodeforeventandstatus_->GetCachedSize(), target,
        stream);
  }

  // .commonmodule.ENS_DynamicTestKind DynamicTest = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.dynamictest_, this_._impl_.dynamictest_->GetCachedSize(), target,
        stream);
  }

  // .regulatormodule.RegulatorEventAndStatusATCC PointStatus = 3;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.pointstatus_, this_._impl_.pointstatus_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:regulatormodule.RegulatorEventAndStatusANCR)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t RegulatorEventAndStatusANCR::ByteSizeLong(const MessageLite& base) {
  const RegulatorEventAndStatusANCR& this_ = static_cast<const RegulatorEventAndStatusANCR&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t RegulatorEventAndStatusANCR::ByteSizeLong() const {
  const RegulatorEventAndStatusANCR& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:regulatormodule.RegulatorEventAndStatusANCR)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // .commonmodule.LogicalNodeForEventAndStatus logicalNodeForEventAndStatus = 1 [(.uml.option_parent_message) = true];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.logicalnodeforeventandstatus_);
    }
    // .commonmodule.ENS_DynamicTestKind DynamicTest = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.dynamictest_);
    }
    // .regulatormodule.RegulatorEventAndStatusATCC PointStatus = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.pointstatus_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void RegulatorEventAndStatusANCR::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RegulatorEventAndStatusANCR*>(&to_msg);
  auto& from = static_cast<const RegulatorEventAndStatusANCR&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:regulatormodule.RegulatorEventAndStatusANCR)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.logicalnodeforeventandstatus_ != nullptr);
      if (_this->_impl_.logicalnodeforeventandstatus_ == nullptr) {
        _this->_impl_.logicalnodeforeventandstatus_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.logicalnodeforeventandstatus_);
      } else {
        _this->_impl_.logicalnodeforeventandstatus_->MergeFrom(*from._impl_.logicalnodeforeventandstatus_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.dynamictest_ != nullptr);
      if (_this->_impl_.dynamictest_ == nullptr) {
        _this->_impl_.dynamictest_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.dynamictest_);
      } else {
        _this->_impl_.dynamictest_->MergeFrom(*from._impl_.dynamictest_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(from._impl_.pointstatus_ != nullptr);
      if (_this->_impl_.pointstatus_ == nullptr) {
        _this->_impl_.pointstatus_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.pointstatus_);
      } else {
        _this->_impl_.pointstatus_->MergeFrom(*from._impl_.pointstatus_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RegulatorEventAndStatusANCR::CopyFrom(const RegulatorEventAndStatusANCR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:regulatormodule.RegulatorEventAndStatusANCR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RegulatorEventAndStatusANCR::InternalSwap(RegulatorEventAndStatusANCR* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RegulatorEventAndStatusANCR, _impl_.pointstatus_)
      + sizeof(RegulatorEventAndStatusANCR::_impl_.pointstatus_)
      - PROTOBUF_FIELD_OFFSET(RegulatorEventAndStatusANCR, _impl_.logicalnodeforeventandstatus_)>(
          reinterpret_cast<char*>(&_impl_.logicalnodeforeventandstatus_),
          reinterpret_cast<char*>(&other->_impl_.logicalnodeforeventandstatus_));
}

::google::protobuf::Metadata RegulatorEventAndStatusANCR::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RegulatorEvent::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<RegulatorEvent>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RegulatorEvent, _impl_._has_bits_);
};

void RegulatorEvent::clear_eventvalue() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.eventvalue_ != nullptr) _impl_.eventvalue_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
RegulatorEvent::RegulatorEvent(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RegulatorEvent_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:regulatormodule.RegulatorEvent)
}
PROTOBUF_NDEBUG_INLINE RegulatorEvent::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::regulatormodule::RegulatorEvent& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

RegulatorEvent::RegulatorEvent(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const RegulatorEvent& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RegulatorEvent_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RegulatorEvent* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.eventvalue_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.eventvalue_)
                : nullptr;
  _impl_.regulatoreventandstatusancr_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.regulatoreventandstatusancr_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:regulatormodule.RegulatorEvent)
}
PROTOBUF_NDEBUG_INLINE RegulatorEvent::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void RegulatorEvent::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, eventvalue_),
           0,
           offsetof(Impl_, regulatoreventandstatusancr_) -
               offsetof(Impl_, eventvalue_) +
               sizeof(Impl_::regulatoreventandstatusancr_));
}
RegulatorEvent::~RegulatorEvent() {
  // @@protoc_insertion_point(destructor:regulatormodule.RegulatorEvent)
  SharedDtor(*this);
}
inline void RegulatorEvent::SharedDtor(MessageLite& self) {
  RegulatorEvent& this_ = static_cast<RegulatorEvent&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.eventvalue_;
  delete this_._impl_.regulatoreventandstatusancr_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL RegulatorEvent::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) RegulatorEvent(arena);
}
constexpr auto RegulatorEvent::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(RegulatorEvent),
                                            alignof(RegulatorEvent));
}
constexpr auto RegulatorEvent::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_RegulatorEvent_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &RegulatorEvent::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<RegulatorEvent>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &RegulatorEvent::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<RegulatorEvent>(), &RegulatorEvent::ByteSizeLong,
              &RegulatorEvent::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(RegulatorEvent, _impl_._cached_size_),
          false,
      },
      &RegulatorEvent::kDescriptorMethods,
      &descriptor_table_regulatormodule_2fregulatormodule_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull RegulatorEvent_class_data_ =
        RegulatorEvent::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
RegulatorEvent::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&RegulatorEvent_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(RegulatorEvent_class_data_.tc_table);
  return RegulatorEvent_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2>
RegulatorEvent::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RegulatorEvent, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    RegulatorEvent_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::regulatormodule::RegulatorEvent>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .regulatormodule.RegulatorEventAndStatusANCR regulatorEventAndStatusANCR = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(RegulatorEvent, _impl_.regulatoreventandstatusancr_)}},
    // .commonmodule.EventValue eventValue = 1 [(.uml.option_parent_message) = true];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RegulatorEvent, _impl_.eventvalue_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .commonmodule.EventValue eventValue = 1 [(.uml.option_parent_message) = true];
    {PROTOBUF_FIELD_OFFSET(RegulatorEvent, _impl_.eventvalue_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .regulatormodule.RegulatorEventAndStatusANCR regulatorEventAndStatusANCR = 2;
    {PROTOBUF_FIELD_OFFSET(RegulatorEvent, _impl_.regulatoreventandstatusancr_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::commonmodule::EventValue>()},
      {::_pbi::TcParser::GetTable<::regulatormodule::RegulatorEventAndStatusANCR>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void RegulatorEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:regulatormodule.RegulatorEvent)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.eventvalue_ != nullptr);
      _impl_.eventvalue_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.regulatoreventandstatusancr_ != nullptr);
      _impl_.regulatoreventandstatusancr_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL RegulatorEvent::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const RegulatorEvent& this_ = static_cast<const RegulatorEvent&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL RegulatorEvent::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const RegulatorEvent& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:regulatormodule.RegulatorEvent)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .commonmodule.EventValue eventValue = 1 [(.uml.option_parent_message) = true];
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.eventvalue_, this_._impl_.eventvalue_->GetCachedSize(), target,
        stream);
  }

  // .regulatormodule.RegulatorEventAndStatusANCR regulatorEventAndStatusANCR = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.regulatoreventandstatusancr_, this_._impl_.regulatoreventandstatusancr_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:regulatormodule.RegulatorEvent)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t RegulatorEvent::ByteSizeLong(const MessageLite& base) {
  const RegulatorEvent& this_ = static_cast<const RegulatorEvent&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t RegulatorEvent::ByteSizeLong() const {
  const RegulatorEvent& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:regulatormodule.RegulatorEvent)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // .commonmodule.EventValue eventValue = 1 [(.uml.option_parent_message) = true];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.eventvalue_);
    }
    // .regulatormodule.RegulatorEventAndStatusANCR regulatorEventAndStatusANCR = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.regulatoreventandstatusancr_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void RegulatorEvent::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RegulatorEvent*>(&to_msg);
  auto& from = static_cast<const RegulatorEvent&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:regulatormodule.RegulatorEvent)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.eventvalue_ != nullptr);
      if (_this->_impl_.eventvalue_ == nullptr) {
        _this->_impl_.eventvalue_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.eventvalue_);
      } else {
        _this->_impl_.eventvalue_->MergeFrom(*from._impl_.eventvalue_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.regulatoreventandstatusancr_ != nullptr);
      if (_this->_impl_.regulatoreventandstatusancr_ == nullptr) {
        _this->_impl_.regulatoreventandstatusancr_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.regulatoreventandstatusancr_);
      } else {
        _this->_impl_.regulatoreventandstatusancr_->MergeFrom(*from._impl_.regulatoreventandstatusancr_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RegulatorEvent::CopyFrom(const RegulatorEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:regulatormodule.RegulatorEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RegulatorEvent::InternalSwap(RegulatorEvent* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RegulatorEvent, _impl_.regulatoreventandstatusancr_)
      + sizeof(RegulatorEvent::_impl_.regulatoreventandstatusancr_)
      - PROTOBUF_FIELD_OFFSET(RegulatorEvent, _impl_.eventvalue_)>(
          reinterpret_cast<char*>(&_impl_.eventvalue_),
          reinterpret_cast<char*>(&other->_impl_.eventvalue_));
}

::google::protobuf::Metadata RegulatorEvent::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RegulatorEventProfile::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<RegulatorEventProfile>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RegulatorEventProfile, _impl_._has_bits_);
};

void RegulatorEventProfile::clear_eventmessageinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.eventmessageinfo_ != nullptr) _impl_.eventmessageinfo_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
RegulatorEventProfile::RegulatorEventProfile(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RegulatorEventProfile_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:regulatormodule.RegulatorEventProfile)
}
PROTOBUF_NDEBUG_INLINE RegulatorEventProfile::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::regulatormodule::RegulatorEventProfile& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

RegulatorEventProfile::RegulatorEventProfile(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const RegulatorEventProfile& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RegulatorEventProfile_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RegulatorEventProfile* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.eventmessageinfo_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.eventmessageinfo_)
                : nullptr;
  _impl_.regulatorevent_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.regulatorevent_)
                : nullptr;
  _impl_.regulatorsystem_ = ((cached_has_bits & 0x00000004u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.regulatorsystem_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:regulatormodule.RegulatorEventProfile)
}
PROTOBUF_NDEBUG_INLINE RegulatorEventProfile::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void RegulatorEventProfile::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, eventmessageinfo_),
           0,
           offsetof(Impl_, regulatorsystem_) -
               offsetof(Impl_, eventmessageinfo_) +
               sizeof(Impl_::regulatorsystem_));
}
RegulatorEventProfile::~RegulatorEventProfile() {
  // @@protoc_insertion_point(destructor:regulatormodule.RegulatorEventProfile)
  SharedDtor(*this);
}
inline void RegulatorEventProfile::SharedDtor(MessageLite& self) {
  RegulatorEventProfile& this_ = static_cast<RegulatorEventProfile&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.eventmessageinfo_;
  delete this_._impl_.regulatorevent_;
  delete this_._impl_.regulatorsystem_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL RegulatorEventProfile::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) RegulatorEventProfile(arena);
}
constexpr auto RegulatorEventProfile::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(RegulatorEventProfile),
                                            alignof(RegulatorEventProfile));
}
constexpr auto RegulatorEventProfile::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_RegulatorEventProfile_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &RegulatorEventProfile::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<RegulatorEventProfile>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &RegulatorEventProfile::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<RegulatorEventProfile>(), &RegulatorEventProfile::ByteSizeLong,
              &RegulatorEventProfile::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(RegulatorEventProfile, _impl_._cached_size_),
          false,
      },
      &RegulatorEventProfile::kDescriptorMethods,
      &descriptor_table_regulatormodule_2fregulatormodule_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull RegulatorEventProfile_class_data_ =
        RegulatorEventProfile::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
RegulatorEventProfile::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&RegulatorEventProfile_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(RegulatorEventProfile_class_data_.tc_table);
  return RegulatorEventProfile_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 3, 0, 2>
RegulatorEventProfile::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RegulatorEventProfile, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    RegulatorEventProfile_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::regulatormodule::RegulatorEventProfile>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .commonmodule.EventMessageInfo eventMessageInfo = 1 [(.uml.option_parent_message) = true];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RegulatorEventProfile, _impl_.eventmessageinfo_)}},
    // .regulatormodule.RegulatorEvent regulatorEvent = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(RegulatorEventProfile, _impl_.regulatorevent_)}},
    // .regulatormodule.RegulatorSystem regulatorSystem = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(RegulatorEventProfile, _impl_.regulatorsystem_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .commonmodule.EventMessageInfo eventMessageInfo = 1 [(.uml.option_parent_message) = true];
    {PROTOBUF_FIELD_OFFSET(RegulatorEventProfile, _impl_.eventmessageinfo_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .regulatormodule.RegulatorEvent regulatorEvent = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
    {PROTOBUF_FIELD_OFFSET(RegulatorEventProfile, _impl_.regulatorevent_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .regulatormodule.RegulatorSystem regulatorSystem = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
    {PROTOBUF_FIELD_OFFSET(RegulatorEventProfile, _impl_.regulatorsystem_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::commonmodule::EventMessageInfo>()},
      {::_pbi::TcParser::GetTable<::regulatormodule::RegulatorEvent>()},
      {::_pbi::TcParser::GetTable<::regulatormodule::RegulatorSystem>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void RegulatorEventProfile::Clear() {
// @@protoc_insertion_point(message_clear_start:regulatormodule.RegulatorEventProfile)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.eventmessageinfo_ != nullptr);
      _impl_.eventmessageinfo_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.regulatorevent_ != nullptr);
      _impl_.regulatorevent_->Clear();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(_impl_.regulatorsystem_ != nullptr);
      _impl_.regulatorsystem_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL RegulatorEventProfile::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const RegulatorEventProfile& this_ = static_cast<const RegulatorEventProfile&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL RegulatorEventProfile::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const RegulatorEventProfile& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:regulatormodule.RegulatorEventProfile)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .commonmodule.EventMessageInfo eventMessageInfo = 1 [(.uml.option_parent_message) = true];
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.eventmessageinfo_, this_._impl_.eventmessageinfo_->GetCachedSize(), target,
        stream);
  }

  // .regulatormodule.RegulatorEvent regulatorEvent = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.regulatorevent_, this_._impl_.regulatorevent_->GetCachedSize(), target,
        stream);
  }

  // .regulatormodule.RegulatorSystem regulatorSystem = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.regulatorsystem_, this_._impl_.regulatorsystem_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:regulatormodule.RegulatorEventProfile)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t RegulatorEventProfile::ByteSizeLong(const MessageLite& base) {
  const RegulatorEventProfile& this_ = static_cast<const RegulatorEventProfile&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t RegulatorEventProfile::ByteSizeLong() const {
  const RegulatorEventProfile& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:regulatormodule.RegulatorEventProfile)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // .commonmodule.EventMessageInfo eventMessageInfo = 1 [(.uml.option_parent_message) = true];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.eventmessageinfo_);
    }
    // .regulatormodule.RegulatorEvent regulatorEvent = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.regulatorevent_);
    }
    // .regulatormodule.RegulatorSystem regulatorSystem = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.regulatorsystem_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void RegulatorEventProfile::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RegulatorEventProfile*>(&to_msg);
  auto& from = static_cast<const RegulatorEventProfile&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:regulatormodule.RegulatorEventProfile)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.eventmessageinfo_ != nullptr);
      if (_this->_impl_.eventmessageinfo_ == nullptr) {
        _this->_impl_.eventmessageinfo_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.eventmessageinfo_);
      } else {
        _this->_impl_.eventmessageinfo_->MergeFrom(*from._impl_.eventmessageinfo_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.regulatorevent_ != nullptr);
      if (_this->_impl_.regulatorevent_ == nullptr) {
        _this->_impl_.regulatorevent_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.regulatorevent_);
      } else {
        _this->_impl_.regulatorevent_->MergeFrom(*from._impl_.regulatorevent_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(from._impl_.regulatorsystem_ != nullptr);
      if (_this->_impl_.regulatorsystem_ == nullptr) {
        _this->_impl_.regulatorsystem_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.regulatorsystem_);
      } else {
        _this->_impl_.regulatorsystem_->MergeFrom(*from._impl_.regulatorsystem_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RegulatorEventProfile::CopyFrom(const RegulatorEventProfile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:regulatormodule.RegulatorEventProfile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RegulatorEventProfile::InternalSwap(RegulatorEventProfile* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RegulatorEventProfile, _impl_.regulatorsystem_)
      + sizeof(RegulatorEventProfile::_impl_.regulatorsystem_)
      - PROTOBUF_FIELD_OFFSET(RegulatorEventProfile, _impl_.eventmessageinfo_)>(
          reinterpret_cast<char*>(&_impl_.eventmessageinfo_),
          reinterpret_cast<char*>(&other->_impl_.eventmessageinfo_));
}

::google::protobuf::Metadata RegulatorEventProfile::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RegulatorReading::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<RegulatorReading>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RegulatorReading, _impl_._has_bits_);
};

void RegulatorReading::clear_conductingequipmentterminalreading() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.conductingequipmentterminalreading_ != nullptr) _impl_.conductingequipmentterminalreading_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void RegulatorReading::clear_phasemmtn() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.phasemmtn_ != nullptr) _impl_.phasemmtn_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void RegulatorReading::clear_readingmmtr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.readingmmtr_ != nullptr) _impl_.readingmmtr_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void RegulatorReading::clear_readingmmxu() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.readingmmxu_ != nullptr) _impl_.readingmmxu_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
void RegulatorReading::clear_secondaryreadingmmxu() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.secondaryreadingmmxu_ != nullptr) _impl_.secondaryreadingmmxu_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
void RegulatorReading::clear_readingmmdc() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.readingmmdc_ != nullptr) _impl_.readingmmdc_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
RegulatorReading::RegulatorReading(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RegulatorReading_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:regulatormodule.RegulatorReading)
}
PROTOBUF_NDEBUG_INLINE RegulatorReading::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::regulatormodule::RegulatorReading& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

RegulatorReading::RegulatorReading(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const RegulatorReading& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RegulatorReading_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RegulatorReading* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.conductingequipmentterminalreading_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.conductingequipmentterminalreading_)
                : nullptr;
  _impl_.phasemmtn_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.phasemmtn_)
                : nullptr;
  _impl_.readingmmtr_ = ((cached_has_bits & 0x00000004u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.readingmmtr_)
                : nullptr;
  _impl_.readingmmxu_ = ((cached_has_bits & 0x00000008u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.readingmmxu_)
                : nullptr;
  _impl_.secondaryreadingmmxu_ = ((cached_has_bits & 0x00000010u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.secondaryreadingmmxu_)
                : nullptr;
  _impl_.readingmmdc_ = ((cached_has_bits & 0x00000020u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.readingmmdc_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:regulatormodule.RegulatorReading)
}
PROTOBUF_NDEBUG_INLINE RegulatorReading::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void RegulatorReading::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, conductingequipmentterminalreading_),
           0,
           offsetof(Impl_, readingmmdc_) -
               offsetof(Impl_, conductingequipmentterminalreading_) +
               sizeof(Impl_::readingmmdc_));
}
RegulatorReading::~RegulatorReading() {
  // @@protoc_insertion_point(destructor:regulatormodule.RegulatorReading)
  SharedDtor(*this);
}
inline void RegulatorReading::SharedDtor(MessageLite& self) {
  RegulatorReading& this_ = static_cast<RegulatorReading&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.conductingequipmentterminalreading_;
  delete this_._impl_.phasemmtn_;
  delete this_._impl_.readingmmtr_;
  delete this_._impl_.readingmmxu_;
  delete this_._impl_.secondaryreadingmmxu_;
  delete this_._impl_.readingmmdc_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL RegulatorReading::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) RegulatorReading(arena);
}
constexpr auto RegulatorReading::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(RegulatorReading),
                                            alignof(RegulatorReading));
}
constexpr auto RegulatorReading::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_RegulatorReading_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &RegulatorReading::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<RegulatorReading>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &RegulatorReading::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<RegulatorReading>(), &RegulatorReading::ByteSizeLong,
              &RegulatorReading::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(RegulatorReading, _impl_._cached_size_),
          false,
      },
      &RegulatorReading::kDescriptorMethods,
      &descriptor_table_regulatormodule_2fregulatormodule_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull RegulatorReading_class_data_ =
        RegulatorReading::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
RegulatorReading::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&RegulatorReading_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(RegulatorReading_class_data_.tc_table);
  return RegulatorReading_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 6, 0, 2>
RegulatorReading::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RegulatorReading, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    6,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    RegulatorReading_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::regulatormodule::RegulatorReading>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .commonmodule.ConductingEquipmentTerminalReading conductingEquipmentTerminalReading = 1 [(.uml.option_parent_message) = true];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RegulatorReading, _impl_.conductingequipmentterminalreading_)}},
    // .commonmodule.PhaseMMTN phaseMMTN = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(RegulatorReading, _impl_.phasemmtn_)}},
    // .commonmodule.ReadingMMTR readingMMTR = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(RegulatorReading, _impl_.readingmmtr_)}},
    // .commonmodule.ReadingMMXU readingMMXU = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 3, 3, PROTOBUF_FIELD_OFFSET(RegulatorReading, _impl_.readingmmxu_)}},
    // .commonmodule.ReadingMMXU secondaryReadingMMXU = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 4, 4, PROTOBUF_FIELD_OFFSET(RegulatorReading, _impl_.secondaryreadingmmxu_)}},
    // .commonmodule.ReadingMMDC readingMMDC = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 5, 5, PROTOBUF_FIELD_OFFSET(RegulatorReading, _impl_.readingmmdc_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .commonmodule.ConductingEquipmentTerminalReading conductingEquipmentTerminalReading = 1 [(.uml.option_parent_message) = true];
    {PROTOBUF_FIELD_OFFSET(RegulatorReading, _impl_.conductingequipmentterminalreading_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .commonmodule.PhaseMMTN phaseMMTN = 2;
    {PROTOBUF_FIELD_OFFSET(RegulatorReading, _impl_.phasemmtn_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .commonmodule.ReadingMMTR readingMMTR = 3;
    {PROTOBUF_FIELD_OFFSET(RegulatorReading, _impl_.readingmmtr_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .commonmodule.ReadingMMXU readingMMXU = 4;
    {PROTOBUF_FIELD_OFFSET(RegulatorReading, _impl_.readingmmxu_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .commonmodule.ReadingMMXU secondaryReadingMMXU = 5;
    {PROTOBUF_FIELD_OFFSET(RegulatorReading, _impl_.secondaryreadingmmxu_), _Internal::kHasBitsOffset + 4, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .commonmodule.ReadingMMDC readingMMDC = 6;
    {PROTOBUF_FIELD_OFFSET(RegulatorReading, _impl_.readingmmdc_), _Internal::kHasBitsOffset + 5, 5,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::commonmodule::ConductingEquipmentTerminalReading>()},
      {::_pbi::TcParser::GetTable<::commonmodule::PhaseMMTN>()},
      {::_pbi::TcParser::GetTable<::commonmodule::ReadingMMTR>()},
      {::_pbi::TcParser::GetTable<::commonmodule::ReadingMMXU>()},
      {::_pbi::TcParser::GetTable<::commonmodule::ReadingMMXU>()},
      {::_pbi::TcParser::GetTable<::commonmodule::ReadingMMDC>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void RegulatorReading::Clear() {
// @@protoc_insertion_point(message_clear_start:regulatormodule.RegulatorReading)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.conductingequipmentterminalreading_ != nullptr);
      _impl_.conductingequipmentterminalreading_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.phasemmtn_ != nullptr);
      _impl_.phasemmtn_->Clear();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(_impl_.readingmmtr_ != nullptr);
      _impl_.readingmmtr_->Clear();
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(_impl_.readingmmxu_ != nullptr);
      _impl_.readingmmxu_->Clear();
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      ABSL_DCHECK(_impl_.secondaryreadingmmxu_ != nullptr);
      _impl_.secondaryreadingmmxu_->Clear();
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      ABSL_DCHECK(_impl_.readingmmdc_ != nullptr);
      _impl_.readingmmdc_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL RegulatorReading::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const RegulatorReading& this_ = static_cast<const RegulatorReading&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL RegulatorReading::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const RegulatorReading& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:regulatormodule.RegulatorReading)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .commonmodule.ConductingEquipmentTerminalReading conductingEquipmentTerminalReading = 1 [(.uml.option_parent_message) = true];
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.conductingequipmentterminalreading_, this_._impl_.conductingequipmentterminalreading_->GetCachedSize(), target,
        stream);
  }

  // .commonmodule.PhaseMMTN phaseMMTN = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.phasemmtn_, this_._impl_.phasemmtn_->GetCachedSize(), target,
        stream);
  }

  // .commonmodule.ReadingMMTR readingMMTR = 3;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.readingmmtr_, this_._impl_.readingmmtr_->GetCachedSize(), target,
        stream);
  }

  // .commonmodule.ReadingMMXU readingMMXU = 4;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *this_._impl_.readingmmxu_, this_._impl_.readingmmxu_->GetCachedSize(), target,
        stream);
  }

  // .commonmodule.ReadingMMXU secondaryReadingMMXU = 5;
  if ((cached_has_bits & 0x00000010u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *this_._impl_.secondaryreadingmmxu_, this_._impl_.secondaryreadingmmxu_->GetCachedSize(), target,
        stream);
  }

  // .commonmodule.ReadingMMDC readingMMDC = 6;
  if ((cached_has_bits & 0x00000020u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        6, *this_._impl_.readingmmdc_, this_._impl_.readingmmdc_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:regulatormodule.RegulatorReading)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t RegulatorReading::ByteSizeLong(const MessageLite& base) {
  const RegulatorReading& this_ = static_cast<const RegulatorReading&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t RegulatorReading::ByteSizeLong() const {
  const RegulatorReading& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:regulatormodule.RegulatorReading)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fu) != 0) {
    // .commonmodule.ConductingEquipmentTerminalReading conductingEquipmentTerminalReading = 1 [(.uml.option_parent_message) = true];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.conductingequipmentterminalreading_);
    }
    // .commonmodule.PhaseMMTN phaseMMTN = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.phasemmtn_);
    }
    // .commonmodule.ReadingMMTR readingMMTR = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.readingmmtr_);
    }
    // .commonmodule.ReadingMMXU readingMMXU = 4;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.readingmmxu_);
    }
    // .commonmodule.ReadingMMXU secondaryReadingMMXU = 5;
    if ((cached_has_bits & 0x00000010u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.secondaryreadingmmxu_);
    }
    // .commonmodule.ReadingMMDC readingMMDC = 6;
    if ((cached_has_bits & 0x00000020u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.readingmmdc_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void RegulatorReading::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RegulatorReading*>(&to_msg);
  auto& from = static_cast<const RegulatorReading&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:regulatormodule.RegulatorReading)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.conductingequipmentterminalreading_ != nullptr);
      if (_this->_impl_.conductingequipmentterminalreading_ == nullptr) {
        _this->_impl_.conductingequipmentterminalreading_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.conductingequipmentterminalreading_);
      } else {
        _this->_impl_.conductingequipmentterminalreading_->MergeFrom(*from._impl_.conductingequipmentterminalreading_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.phasemmtn_ != nullptr);
      if (_this->_impl_.phasemmtn_ == nullptr) {
        _this->_impl_.phasemmtn_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.phasemmtn_);
      } else {
        _this->_impl_.phasemmtn_->MergeFrom(*from._impl_.phasemmtn_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(from._impl_.readingmmtr_ != nullptr);
      if (_this->_impl_.readingmmtr_ == nullptr) {
        _this->_impl_.readingmmtr_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.readingmmtr_);
      } else {
        _this->_impl_.readingmmtr_->MergeFrom(*from._impl_.readingmmtr_);
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(from._impl_.readingmmxu_ != nullptr);
      if (_this->_impl_.readingmmxu_ == nullptr) {
        _this->_impl_.readingmmxu_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.readingmmxu_);
      } else {
        _this->_impl_.readingmmxu_->MergeFrom(*from._impl_.readingmmxu_);
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      ABSL_DCHECK(from._impl_.secondaryreadingmmxu_ != nullptr);
      if (_this->_impl_.secondaryreadingmmxu_ == nullptr) {
        _this->_impl_.secondaryreadingmmxu_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.secondaryreadingmmxu_);
      } else {
        _this->_impl_.secondaryreadingmmxu_->MergeFrom(*from._impl_.secondaryreadingmmxu_);
      }
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      ABSL_DCHECK(from._impl_.readingmmdc_ != nullptr);
      if (_this->_impl_.readingmmdc_ == nullptr) {
        _this->_impl_.readingmmdc_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.readingmmdc_);
      } else {
        _this->_impl_.readingmmdc_->MergeFrom(*from._impl_.readingmmdc_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RegulatorReading::CopyFrom(const RegulatorReading& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:regulatormodule.RegulatorReading)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RegulatorReading::InternalSwap(RegulatorReading* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RegulatorReading, _impl_.readingmmdc_)
      + sizeof(RegulatorReading::_impl_.readingmmdc_)
      - PROTOBUF_FIELD_OFFSET(RegulatorReading, _impl_.conductingequipmentterminalreading_)>(
          reinterpret_cast<char*>(&_impl_.conductingequipmentterminalreading_),
          reinterpret_cast<char*>(&other->_impl_.conductingequipmentterminalreading_));
}

::google::protobuf::Metadata RegulatorReading::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RegulatorReadingProfile::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<RegulatorReadingProfile>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RegulatorReadingProfile, _impl_._has_bits_);
};

void RegulatorReadingProfile::clear_readingmessageinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.readingmessageinfo_ != nullptr) _impl_.readingmessageinfo_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
RegulatorReadingProfile::RegulatorReadingProfile(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RegulatorReadingProfile_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:regulatormodule.RegulatorReadingProfile)
}
PROTOBUF_NDEBUG_INLINE RegulatorReadingProfile::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::regulatormodule::RegulatorReadingProfile& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        regulatorreading_{visibility, arena, from.regulatorreading_} {}

RegulatorReadingProfile::RegulatorReadingProfile(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const RegulatorReadingProfile& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RegulatorReadingProfile_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RegulatorReadingProfile* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.readingmessageinfo_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.readingmessageinfo_)
                : nullptr;
  _impl_.regulatorsystem_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.regulatorsystem_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:regulatormodule.RegulatorReadingProfile)
}
PROTOBUF_NDEBUG_INLINE RegulatorReadingProfile::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        regulatorreading_{visibility, arena} {}

inline void RegulatorReadingProfile::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, readingmessageinfo_),
           0,
           offsetof(Impl_, regulatorsystem_) -
               offsetof(Impl_, readingmessageinfo_) +
               sizeof(Impl_::regulatorsystem_));
}
RegulatorReadingProfile::~RegulatorReadingProfile() {
  // @@protoc_insertion_point(destructor:regulatormodule.RegulatorReadingProfile)
  SharedDtor(*this);
}
inline void RegulatorReadingProfile::SharedDtor(MessageLite& self) {
  RegulatorReadingProfile& this_ = static_cast<RegulatorReadingProfile&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.readingmessageinfo_;
  delete this_._impl_.regulatorsystem_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL RegulatorReadingProfile::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) RegulatorReadingProfile(arena);
}
constexpr auto RegulatorReadingProfile::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(RegulatorReadingProfile, _impl_.regulatorreading_) +
          decltype(RegulatorReadingProfile::_impl_.regulatorreading_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(RegulatorReadingProfile), alignof(RegulatorReadingProfile), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&RegulatorReadingProfile::PlacementNew_,
                                 sizeof(RegulatorReadingProfile),
                                 alignof(RegulatorReadingProfile));
  }
}
constexpr auto RegulatorReadingProfile::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_RegulatorReadingProfile_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &RegulatorReadingProfile::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<RegulatorReadingProfile>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &RegulatorReadingProfile::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<RegulatorReadingProfile>(), &RegulatorReadingProfile::ByteSizeLong,
              &RegulatorReadingProfile::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(RegulatorReadingProfile, _impl_._cached_size_),
          false,
      },
      &RegulatorReadingProfile::kDescriptorMethods,
      &descriptor_table_regulatormodule_2fregulatormodule_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull RegulatorReadingProfile_class_data_ =
        RegulatorReadingProfile::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
RegulatorReadingProfile::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&RegulatorReadingProfile_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(RegulatorReadingProfile_class_data_.tc_table);
  return RegulatorReadingProfile_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 3, 0, 2>
RegulatorReadingProfile::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RegulatorReadingProfile, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    RegulatorReadingProfile_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::regulatormodule::RegulatorReadingProfile>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .commonmodule.ReadingMessageInfo readingMessageInfo = 1 [(.uml.option_parent_message) = true];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RegulatorReadingProfile, _impl_.readingmessageinfo_)}},
    // repeated .regulatormodule.RegulatorReading regulatorReading = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1, (.uml.option_multiplicity_max) = 2];
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(RegulatorReadingProfile, _impl_.regulatorreading_)}},
    // .regulatormodule.RegulatorSystem regulatorSystem = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 2, PROTOBUF_FIELD_OFFSET(RegulatorReadingProfile, _impl_.regulatorsystem_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .commonmodule.ReadingMessageInfo readingMessageInfo = 1 [(.uml.option_parent_message) = true];
    {PROTOBUF_FIELD_OFFSET(RegulatorReadingProfile, _impl_.readingmessageinfo_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .regulatormodule.RegulatorReading regulatorReading = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1, (.uml.option_multiplicity_max) = 2];
    {PROTOBUF_FIELD_OFFSET(RegulatorReadingProfile, _impl_.regulatorreading_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .regulatormodule.RegulatorSystem regulatorSystem = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
    {PROTOBUF_FIELD_OFFSET(RegulatorReadingProfile, _impl_.regulatorsystem_), _Internal::kHasBitsOffset + 1, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::commonmodule::ReadingMessageInfo>()},
      {::_pbi::TcParser::GetTable<::regulatormodule::RegulatorReading>()},
      {::_pbi::TcParser::GetTable<::regulatormodule::RegulatorSystem>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void RegulatorReadingProfile::Clear() {
// @@protoc_insertion_point(message_clear_start:regulatormodule.RegulatorReadingProfile)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.regulatorreading_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.readingmessageinfo_ != nullptr);
      _impl_.readingmessageinfo_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.regulatorsystem_ != nullptr);
      _impl_.regulatorsystem_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL RegulatorReadingProfile::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const RegulatorReadingProfile& this_ = static_cast<const RegulatorReadingProfile&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL RegulatorReadingProfile::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const RegulatorReadingProfile& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:regulatormodule.RegulatorReadingProfile)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .commonmodule.ReadingMessageInfo readingMessageInfo = 1 [(.uml.option_parent_message) = true];
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.readingmessageinfo_, this_._impl_.readingmessageinfo_->GetCachedSize(), target,
        stream);
  }

  // repeated .regulatormodule.RegulatorReading regulatorReading = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1, (.uml.option_multiplicity_max) = 2];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_regulatorreading_size());
       i < n; i++) {
    const auto& repfield = this_._internal_regulatorreading().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            2, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // .regulatormodule.RegulatorSystem regulatorSystem = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.regulatorsystem_, this_._impl_.regulatorsystem_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:regulatormodule.RegulatorReadingProfile)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t RegulatorReadingProfile::ByteSizeLong(const MessageLite& base) {
  const RegulatorReadingProfile& this_ = static_cast<const RegulatorReadingProfile&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t RegulatorReadingProfile::ByteSizeLong() const {
  const RegulatorReadingProfile& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:regulatormodule.RegulatorReadingProfile)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .regulatormodule.RegulatorReading regulatorReading = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1, (.uml.option_multiplicity_max) = 2];
    {
      total_size += 1UL * this_._internal_regulatorreading_size();
      for (const auto& msg : this_._internal_regulatorreading()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // .commonmodule.ReadingMessageInfo readingMessageInfo = 1 [(.uml.option_parent_message) = true];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.readingmessageinfo_);
    }
    // .regulatormodule.RegulatorSystem regulatorSystem = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.regulatorsystem_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void RegulatorReadingProfile::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RegulatorReadingProfile*>(&to_msg);
  auto& from = static_cast<const RegulatorReadingProfile&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:regulatormodule.RegulatorReadingProfile)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_regulatorreading()->MergeFrom(
      from._internal_regulatorreading());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.readingmessageinfo_ != nullptr);
      if (_this->_impl_.readingmessageinfo_ == nullptr) {
        _this->_impl_.readingmessageinfo_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.readingmessageinfo_);
      } else {
        _this->_impl_.readingmessageinfo_->MergeFrom(*from._impl_.readingmessageinfo_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.regulatorsystem_ != nullptr);
      if (_this->_impl_.regulatorsystem_ == nullptr) {
        _this->_impl_.regulatorsystem_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.regulatorsystem_);
      } else {
        _this->_impl_.regulatorsystem_->MergeFrom(*from._impl_.regulatorsystem_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RegulatorReadingProfile::CopyFrom(const RegulatorReadingProfile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:regulatormodule.RegulatorReadingProfile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RegulatorReadingProfile::InternalSwap(RegulatorReadingProfile* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.regulatorreading_.InternalSwap(&other->_impl_.regulatorreading_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RegulatorReadingProfile, _impl_.regulatorsystem_)
      + sizeof(RegulatorReadingProfile::_impl_.regulatorsystem_)
      - PROTOBUF_FIELD_OFFSET(RegulatorReadingProfile, _impl_.readingmessageinfo_)>(
          reinterpret_cast<char*>(&_impl_.readingmessageinfo_),
          reinterpret_cast<char*>(&other->_impl_.readingmessageinfo_));
}

::google::protobuf::Metadata RegulatorReadingProfile::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RegulatorStatus::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<RegulatorStatus>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RegulatorStatus, _impl_._has_bits_);
};

void RegulatorStatus::clear_statusvalue() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.statusvalue_ != nullptr) _impl_.statusvalue_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
RegulatorStatus::RegulatorStatus(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RegulatorStatus_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:regulatormodule.RegulatorStatus)
}
PROTOBUF_NDEBUG_INLINE RegulatorStatus::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::regulatormodule::RegulatorStatus& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

RegulatorStatus::RegulatorStatus(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const RegulatorStatus& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RegulatorStatus_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RegulatorStatus* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.statusvalue_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.statusvalue_)
                : nullptr;
  _impl_.regulatoreventandstatusancr_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.regulatoreventandstatusancr_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:regulatormodule.RegulatorStatus)
}
PROTOBUF_NDEBUG_INLINE RegulatorStatus::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void RegulatorStatus::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, statusvalue_),
           0,
           offsetof(Impl_, regulatoreventandstatusancr_) -
               offsetof(Impl_, statusvalue_) +
               sizeof(Impl_::regulatoreventandstatusancr_));
}
RegulatorStatus::~RegulatorStatus() {
  // @@protoc_insertion_point(destructor:regulatormodule.RegulatorStatus)
  SharedDtor(*this);
}
inline void RegulatorStatus::SharedDtor(MessageLite& self) {
  RegulatorStatus& this_ = static_cast<RegulatorStatus&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.statusvalue_;
  delete this_._impl_.regulatoreventandstatusancr_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL RegulatorStatus::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) RegulatorStatus(arena);
}
constexpr auto RegulatorStatus::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(RegulatorStatus),
                                            alignof(RegulatorStatus));
}
constexpr auto RegulatorStatus::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_RegulatorStatus_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &RegulatorStatus::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<RegulatorStatus>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &RegulatorStatus::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<RegulatorStatus>(), &RegulatorStatus::ByteSizeLong,
              &RegulatorStatus::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(RegulatorStatus, _impl_._cached_size_),
          false,
      },
      &RegulatorStatus::kDescriptorMethods,
      &descriptor_table_regulatormodule_2fregulatormodule_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull RegulatorStatus_class_data_ =
        RegulatorStatus::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
RegulatorStatus::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&RegulatorStatus_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(RegulatorStatus_class_data_.tc_table);
  return RegulatorStatus_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2>
RegulatorStatus::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RegulatorStatus, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    RegulatorStatus_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::regulatormodule::RegulatorStatus>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .regulatormodule.RegulatorEventAndStatusANCR regulatorEventAndStatusANCR = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(RegulatorStatus, _impl_.regulatoreventandstatusancr_)}},
    // .commonmodule.StatusValue statusValue = 1 [(.uml.option_parent_message) = true];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RegulatorStatus, _impl_.statusvalue_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .commonmodule.StatusValue statusValue = 1 [(.uml.option_parent_message) = true];
    {PROTOBUF_FIELD_OFFSET(RegulatorStatus, _impl_.statusvalue_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .regulatormodule.RegulatorEventAndStatusANCR regulatorEventAndStatusANCR = 2;
    {PROTOBUF_FIELD_OFFSET(RegulatorStatus, _impl_.regulatoreventandstatusancr_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::commonmodule::StatusValue>()},
      {::_pbi::TcParser::GetTable<::regulatormodule::RegulatorEventAndStatusANCR>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void RegulatorStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:regulatormodule.RegulatorStatus)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.statusvalue_ != nullptr);
      _impl_.statusvalue_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.regulatoreventandstatusancr_ != nullptr);
      _impl_.regulatoreventandstatusancr_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL RegulatorStatus::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const RegulatorStatus& this_ = static_cast<const RegulatorStatus&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL RegulatorStatus::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const RegulatorStatus& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:regulatormodule.RegulatorStatus)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .commonmodule.StatusValue statusValue = 1 [(.uml.option_parent_message) = true];
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.statusvalue_, this_._impl_.statusvalue_->GetCachedSize(), target,
        stream);
  }

  // .regulatormodule.RegulatorEventAndStatusANCR regulatorEventAndStatusANCR = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.regulatoreventandstatusancr_, this_._impl_.regulatoreventandstatusancr_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:regulatormodule.RegulatorStatus)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t RegulatorStatus::ByteSizeLong(const MessageLite& base) {
  const RegulatorStatus& this_ = static_cast<const RegulatorStatus&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t RegulatorStatus::ByteSizeLong() const {
  const RegulatorStatus& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:regulatormodule.RegulatorStatus)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // .commonmodule.StatusValue statusValue = 1 [(.uml.option_parent_message) = true];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.statusvalue_);
    }
    // .regulatormodule.RegulatorEventAndStatusANCR regulatorEventAndStatusANCR = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.regulatoreventandstatusancr_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void RegulatorStatus::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RegulatorStatus*>(&to_msg);
  auto& from = static_cast<const RegulatorStatus&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:regulatormodule.RegulatorStatus)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.statusvalue_ != nullptr);
      if (_this->_impl_.statusvalue_ == nullptr) {
        _this->_impl_.statusvalue_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.statusvalue_);
      } else {
        _this->_impl_.statusvalue_->MergeFrom(*from._impl_.statusvalue_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.regulatoreventandstatusancr_ != nullptr);
      if (_this->_impl_.regulatoreventandstatusancr_ == nullptr) {
        _this->_impl_.regulatoreventandstatusancr_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.regulatoreventandstatusancr_);
      } else {
        _this->_impl_.regulatoreventandstatusancr_->MergeFrom(*from._impl_.regulatoreventandstatusancr_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RegulatorStatus::CopyFrom(const RegulatorStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:regulatormodule.RegulatorStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RegulatorStatus::InternalSwap(RegulatorStatus* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RegulatorStatus, _impl_.regulatoreventandstatusancr_)
      + sizeof(RegulatorStatus::_impl_.regulatoreventandstatusancr_)
      - PROTOBUF_FIELD_OFFSET(RegulatorStatus, _impl_.statusvalue_)>(
          reinterpret_cast<char*>(&_impl_.statusvalue_),
          reinterpret_cast<char*>(&other->_impl_.statusvalue_));
}

::google::protobuf::Metadata RegulatorStatus::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RegulatorStatusProfile::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<RegulatorStatusProfile>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RegulatorStatusProfile, _impl_._has_bits_);
};

void RegulatorStatusProfile::clear_statusmessageinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.statusmessageinfo_ != nullptr) _impl_.statusmessageinfo_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
RegulatorStatusProfile::RegulatorStatusProfile(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RegulatorStatusProfile_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:regulatormodule.RegulatorStatusProfile)
}
PROTOBUF_NDEBUG_INLINE RegulatorStatusProfile::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::regulatormodule::RegulatorStatusProfile& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

RegulatorStatusProfile::RegulatorStatusProfile(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const RegulatorStatusProfile& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RegulatorStatusProfile_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RegulatorStatusProfile* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.statusmessageinfo_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.statusmessageinfo_)
                : nullptr;
  _impl_.regulatorstatus_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.regulatorstatus_)
                : nullptr;
  _impl_.regulatorsystem_ = ((cached_has_bits & 0x00000004u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.regulatorsystem_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:regulatormodule.RegulatorStatusProfile)
}
PROTOBUF_NDEBUG_INLINE RegulatorStatusProfile::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void RegulatorStatusProfile::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, statusmessageinfo_),
           0,
           offsetof(Impl_, regulatorsystem_) -
               offsetof(Impl_, statusmessageinfo_) +
               sizeof(Impl_::regulatorsystem_));
}
RegulatorStatusProfile::~RegulatorStatusProfile() {
  // @@protoc_insertion_point(destructor:regulatormodule.RegulatorStatusProfile)
  SharedDtor(*this);
}
inline void RegulatorStatusProfile::SharedDtor(MessageLite& self) {
  RegulatorStatusProfile& this_ = static_cast<RegulatorStatusProfile&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.statusmessageinfo_;
  delete this_._impl_.regulatorstatus_;
  delete this_._impl_.regulatorsystem_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL RegulatorStatusProfile::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) RegulatorStatusProfile(arena);
}
constexpr auto RegulatorStatusProfile::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(RegulatorStatusProfile),
                                            alignof(RegulatorStatusProfile));
}
constexpr auto RegulatorStatusProfile::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_RegulatorStatusProfile_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &RegulatorStatusProfile::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<RegulatorStatusProfile>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &RegulatorStatusProfile::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<RegulatorStatusProfile>(), &RegulatorStatusProfile::ByteSizeLong,
              &RegulatorStatusProfile::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(RegulatorStatusProfile, _impl_._cached_size_),
          false,
      },
      &RegulatorStatusProfile::kDescriptorMethods,
      &descriptor_table_regulatormodule_2fregulatormodule_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull RegulatorStatusProfile_class_data_ =
        RegulatorStatusProfile::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
RegulatorStatusProfile::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&RegulatorStatusProfile_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(RegulatorStatusProfile_class_data_.tc_table);
  return RegulatorStatusProfile_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 3, 0, 2>
RegulatorStatusProfile::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RegulatorStatusProfile, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    RegulatorStatusProfile_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::regulatormodule::RegulatorStatusProfile>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .commonmodule.StatusMessageInfo statusMessageInfo = 1 [(.uml.option_parent_message) = true];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RegulatorStatusProfile, _impl_.statusmessageinfo_)}},
    // .regulatormodule.RegulatorStatus regulatorStatus = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(RegulatorStatusProfile, _impl_.regulatorstatus_)}},
    // .regulatormodule.RegulatorSystem regulatorSystem = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(RegulatorStatusProfile, _impl_.regulatorsystem_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .commonmodule.StatusMessageInfo statusMessageInfo = 1 [(.uml.option_parent_message) = true];
    {PROTOBUF_FIELD_OFFSET(RegulatorStatusProfile, _impl_.statusmessageinfo_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .regulatormodule.RegulatorStatus regulatorStatus = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
    {PROTOBUF_FIELD_OFFSET(RegulatorStatusProfile, _impl_.regulatorstatus_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .regulatormodule.RegulatorSystem regulatorSystem = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
    {PROTOBUF_FIELD_OFFSET(RegulatorStatusProfile, _impl_.regulatorsystem_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::commonmodule::StatusMessageInfo>()},
      {::_pbi::TcParser::GetTable<::regulatormodule::RegulatorStatus>()},
      {::_pbi::TcParser::GetTable<::regulatormodule::RegulatorSystem>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void RegulatorStatusProfile::Clear() {
// @@protoc_insertion_point(message_clear_start:regulatormodule.RegulatorStatusProfile)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.statusmessageinfo_ != nullptr);
      _impl_.statusmessageinfo_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.regulatorstatus_ != nullptr);
      _impl_.regulatorstatus_->Clear();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(_impl_.regulatorsystem_ != nullptr);
      _impl_.regulatorsystem_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL RegulatorStatusProfile::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const RegulatorStatusProfile& this_ = static_cast<const RegulatorStatusProfile&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL RegulatorStatusProfile::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const RegulatorStatusProfile& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:regulatormodule.RegulatorStatusProfile)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .commonmodule.StatusMessageInfo statusMessageInfo = 1 [(.uml.option_parent_message) = true];
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.statusmessageinfo_, this_._impl_.statusmessageinfo_->GetCachedSize(), target,
        stream);
  }

  // .regulatormodule.RegulatorStatus regulatorStatus = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.regulatorstatus_, this_._impl_.regulatorstatus_->GetCachedSize(), target,
        stream);
  }

  // .regulatormodule.RegulatorSystem regulatorSystem = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.regulatorsystem_, this_._impl_.regulatorsystem_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:regulatormodule.RegulatorStatusProfile)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t RegulatorStatusProfile::ByteSizeLong(const MessageLite& base) {
  const RegulatorStatusProfile& this_ = static_cast<const RegulatorStatusProfile&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t RegulatorStatusProfile::ByteSizeLong() const {
  const RegulatorStatusProfile& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:regulatormodule.RegulatorStatusProfile)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // .commonmodule.StatusMessageInfo statusMessageInfo = 1 [(.uml.option_parent_message) = true];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.statusmessageinfo_);
    }
    // .regulatormodule.RegulatorStatus regulatorStatus = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.regulatorstatus_);
    }
    // .regulatormodule.RegulatorSystem regulatorSystem = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.regulatorsystem_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void RegulatorStatusProfile::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RegulatorStatusProfile*>(&to_msg);
  auto& from = static_cast<const RegulatorStatusProfile&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:regulatormodule.RegulatorStatusProfile)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.statusmessageinfo_ != nullptr);
      if (_this->_impl_.statusmessageinfo_ == nullptr) {
        _this->_impl_.statusmessageinfo_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.statusmessageinfo_);
      } else {
        _this->_impl_.statusmessageinfo_->MergeFrom(*from._impl_.statusmessageinfo_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.regulatorstatus_ != nullptr);
      if (_this->_impl_.regulatorstatus_ == nullptr) {
        _this->_impl_.regulatorstatus_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.regulatorstatus_);
      } else {
        _this->_impl_.regulatorstatus_->MergeFrom(*from._impl_.regulatorstatus_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(from._impl_.regulatorsystem_ != nullptr);
      if (_this->_impl_.regulatorsystem_ == nullptr) {
        _this->_impl_.regulatorsystem_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.regulatorsystem_);
      } else {
        _this->_impl_.regulatorsystem_->MergeFrom(*from._impl_.regulatorsystem_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RegulatorStatusProfile::CopyFrom(const RegulatorStatusProfile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:regulatormodule.RegulatorStatusProfile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RegulatorStatusProfile::InternalSwap(RegulatorStatusProfile* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RegulatorStatusProfile, _impl_.regulatorsystem_)
      + sizeof(RegulatorStatusProfile::_impl_.regulatorsystem_)
      - PROTOBUF_FIELD_OFFSET(RegulatorStatusProfile, _impl_.statusmessageinfo_)>(
          reinterpret_cast<char*>(&_impl_.statusmessageinfo_),
          reinterpret_cast<char*>(&other->_impl_.statusmessageinfo_));
}

::google::protobuf::Metadata RegulatorStatusProfile::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace regulatormodule
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_regulatormodule_2fregulatormodule_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
