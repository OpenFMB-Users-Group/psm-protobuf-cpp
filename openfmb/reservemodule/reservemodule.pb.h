// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: reservemodule/reservemodule.proto
// Protobuf C++ Version: 6.31.1

#ifndef reservemodule_2freservemodule_2eproto_2epb_2eh
#define reservemodule_2freservemodule_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6031001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "uml.pb.h"
#include "commonmodule/commonmodule.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_reservemodule_2freservemodule_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_reservemodule_2freservemodule_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_reservemodule_2freservemodule_2eproto;
}  // extern "C"
namespace reservemodule {
class AllocatedMargin;
struct AllocatedMarginDefaultTypeInternal;
extern AllocatedMarginDefaultTypeInternal _AllocatedMargin_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull AllocatedMargin_class_data_;
class ReserveAvailability;
struct ReserveAvailabilityDefaultTypeInternal;
extern ReserveAvailabilityDefaultTypeInternal _ReserveAvailability_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ReserveAvailability_class_data_;
class ReserveAvailabilityProfile;
struct ReserveAvailabilityProfileDefaultTypeInternal;
extern ReserveAvailabilityProfileDefaultTypeInternal _ReserveAvailabilityProfile_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ReserveAvailabilityProfile_class_data_;
class ReserveMargin;
struct ReserveMarginDefaultTypeInternal;
extern ReserveMarginDefaultTypeInternal _ReserveMargin_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ReserveMargin_class_data_;
class ReserveRequest;
struct ReserveRequestDefaultTypeInternal;
extern ReserveRequestDefaultTypeInternal _ReserveRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ReserveRequest_class_data_;
class ReserveRequestProfile;
struct ReserveRequestProfileDefaultTypeInternal;
extern ReserveRequestProfileDefaultTypeInternal _ReserveRequestProfile_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ReserveRequestProfile_class_data_;
}  // namespace reservemodule
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace reservemodule {

// ===================================================================


// -------------------------------------------------------------------

class ReserveMargin final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:reservemodule.ReserveMargin) */ {
 public:
  inline ReserveMargin() : ReserveMargin(nullptr) {}
  ~ReserveMargin() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ReserveMargin* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ReserveMargin));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ReserveMargin(::google::protobuf::internal::ConstantInitialized);

  inline ReserveMargin(const ReserveMargin& from) : ReserveMargin(nullptr, from) {}
  inline ReserveMargin(ReserveMargin&& from) noexcept
      : ReserveMargin(nullptr, ::std::move(from)) {}
  inline ReserveMargin& operator=(const ReserveMargin& from) {
    CopyFrom(from);
    return *this;
  }
  inline ReserveMargin& operator=(ReserveMargin&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ReserveMargin& default_instance() {
    return *reinterpret_cast<const ReserveMargin*>(
        &_ReserveMargin_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(ReserveMargin& a, ReserveMargin& b) { a.Swap(&b); }
  inline void Swap(ReserveMargin* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ReserveMargin* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ReserveMargin* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ReserveMargin>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ReserveMargin& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ReserveMargin& from) { ReserveMargin::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ReserveMargin* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "reservemodule.ReserveMargin"; }

 protected:
  explicit ReserveMargin(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ReserveMargin(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ReserveMargin& from);
  ReserveMargin(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ReserveMargin&& from) noexcept
      : ReserveMargin(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLogicalNodeFieldNumber = 1,
    kAFieldNumber = 2,
    kVAFieldNumber = 3,
    kVArFieldNumber = 4,
    kWFieldNumber = 5,
  };
  // .commonmodule.LogicalNode logicalNode = 1 [(.uml.option_parent_message) = true];
  bool has_logicalnode() const;
  void clear_logicalnode() ;
  const ::commonmodule::LogicalNode& logicalnode() const;
  [[nodiscard]] ::commonmodule::LogicalNode* PROTOBUF_NULLABLE release_logicalnode();
  ::commonmodule::LogicalNode* PROTOBUF_NONNULL mutable_logicalnode();
  void set_allocated_logicalnode(::commonmodule::LogicalNode* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_logicalnode(::commonmodule::LogicalNode* PROTOBUF_NULLABLE value);
  ::commonmodule::LogicalNode* PROTOBUF_NULLABLE unsafe_arena_release_logicalnode();

  private:
  const ::commonmodule::LogicalNode& _internal_logicalnode() const;
  ::commonmodule::LogicalNode* PROTOBUF_NONNULL _internal_mutable_logicalnode();

  public:
  // .commonmodule.PMG A = 2;
  bool has_a() const;
  void clear_a() ;
  const ::commonmodule::PMG& a() const;
  [[nodiscard]] ::commonmodule::PMG* PROTOBUF_NULLABLE release_a();
  ::commonmodule::PMG* PROTOBUF_NONNULL mutable_a();
  void set_allocated_a(::commonmodule::PMG* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_a(::commonmodule::PMG* PROTOBUF_NULLABLE value);
  ::commonmodule::PMG* PROTOBUF_NULLABLE unsafe_arena_release_a();

  private:
  const ::commonmodule::PMG& _internal_a() const;
  ::commonmodule::PMG* PROTOBUF_NONNULL _internal_mutable_a();

  public:
  // .commonmodule.PMG VA = 3;
  bool has_va() const;
  void clear_va() ;
  const ::commonmodule::PMG& va() const;
  [[nodiscard]] ::commonmodule::PMG* PROTOBUF_NULLABLE release_va();
  ::commonmodule::PMG* PROTOBUF_NONNULL mutable_va();
  void set_allocated_va(::commonmodule::PMG* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_va(::commonmodule::PMG* PROTOBUF_NULLABLE value);
  ::commonmodule::PMG* PROTOBUF_NULLABLE unsafe_arena_release_va();

  private:
  const ::commonmodule::PMG& _internal_va() const;
  ::commonmodule::PMG* PROTOBUF_NONNULL _internal_mutable_va();

  public:
  // .commonmodule.PMG VAr = 4;
  bool has_var() const;
  void clear_var() ;
  const ::commonmodule::PMG& var() const;
  [[nodiscard]] ::commonmodule::PMG* PROTOBUF_NULLABLE release_var();
  ::commonmodule::PMG* PROTOBUF_NONNULL mutable_var();
  void set_allocated_var(::commonmodule::PMG* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_var(::commonmodule::PMG* PROTOBUF_NULLABLE value);
  ::commonmodule::PMG* PROTOBUF_NULLABLE unsafe_arena_release_var();

  private:
  const ::commonmodule::PMG& _internal_var() const;
  ::commonmodule::PMG* PROTOBUF_NONNULL _internal_mutable_var();

  public:
  // .commonmodule.PMG W = 5;
  bool has_w() const;
  void clear_w() ;
  const ::commonmodule::PMG& w() const;
  [[nodiscard]] ::commonmodule::PMG* PROTOBUF_NULLABLE release_w();
  ::commonmodule::PMG* PROTOBUF_NONNULL mutable_w();
  void set_allocated_w(::commonmodule::PMG* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_w(::commonmodule::PMG* PROTOBUF_NULLABLE value);
  ::commonmodule::PMG* PROTOBUF_NULLABLE unsafe_arena_release_w();

  private:
  const ::commonmodule::PMG& _internal_w() const;
  ::commonmodule::PMG* PROTOBUF_NONNULL _internal_mutable_w();

  public:
  // @@protoc_insertion_point(class_scope:reservemodule.ReserveMargin)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5,
                                   5, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ReserveMargin& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::commonmodule::LogicalNode* PROTOBUF_NULLABLE logicalnode_;
    ::commonmodule::PMG* PROTOBUF_NULLABLE a_;
    ::commonmodule::PMG* PROTOBUF_NULLABLE va_;
    ::commonmodule::PMG* PROTOBUF_NULLABLE var_;
    ::commonmodule::PMG* PROTOBUF_NULLABLE w_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_reservemodule_2freservemodule_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ReserveMargin_class_data_;
// -------------------------------------------------------------------

class ReserveRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:reservemodule.ReserveRequest) */ {
 public:
  inline ReserveRequest() : ReserveRequest(nullptr) {}
  ~ReserveRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ReserveRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ReserveRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ReserveRequest(::google::protobuf::internal::ConstantInitialized);

  inline ReserveRequest(const ReserveRequest& from) : ReserveRequest(nullptr, from) {}
  inline ReserveRequest(ReserveRequest&& from) noexcept
      : ReserveRequest(nullptr, ::std::move(from)) {}
  inline ReserveRequest& operator=(const ReserveRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ReserveRequest& operator=(ReserveRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ReserveRequest& default_instance() {
    return *reinterpret_cast<const ReserveRequest*>(
        &_ReserveRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(ReserveRequest& a, ReserveRequest& b) { a.Swap(&b); }
  inline void Swap(ReserveRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ReserveRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ReserveRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ReserveRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ReserveRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ReserveRequest& from) { ReserveRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ReserveRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "reservemodule.ReserveRequest"; }

 protected:
  explicit ReserveRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ReserveRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ReserveRequest& from);
  ReserveRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ReserveRequest&& from) noexcept
      : ReserveRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRequestIDFieldNumber = 1,
    kMarginFieldNumber = 2,
    kStandbyMarginFieldNumber = 3,
  };
  // string requestID = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  void clear_requestid() ;
  const ::std::string& requestid() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_requestid(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_requestid();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_requestid();
  void set_allocated_requestid(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_requestid() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_requestid(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_requestid();

  public:
  // .reservemodule.ReserveMargin margin = 2;
  bool has_margin() const;
  void clear_margin() ;
  const ::reservemodule::ReserveMargin& margin() const;
  [[nodiscard]] ::reservemodule::ReserveMargin* PROTOBUF_NULLABLE release_margin();
  ::reservemodule::ReserveMargin* PROTOBUF_NONNULL mutable_margin();
  void set_allocated_margin(::reservemodule::ReserveMargin* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_margin(::reservemodule::ReserveMargin* PROTOBUF_NULLABLE value);
  ::reservemodule::ReserveMargin* PROTOBUF_NULLABLE unsafe_arena_release_margin();

  private:
  const ::reservemodule::ReserveMargin& _internal_margin() const;
  ::reservemodule::ReserveMargin* PROTOBUF_NONNULL _internal_mutable_margin();

  public:
  // .reservemodule.ReserveMargin standbyMargin = 3;
  bool has_standbymargin() const;
  void clear_standbymargin() ;
  const ::reservemodule::ReserveMargin& standbymargin() const;
  [[nodiscard]] ::reservemodule::ReserveMargin* PROTOBUF_NULLABLE release_standbymargin();
  ::reservemodule::ReserveMargin* PROTOBUF_NONNULL mutable_standbymargin();
  void set_allocated_standbymargin(::reservemodule::ReserveMargin* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_standbymargin(::reservemodule::ReserveMargin* PROTOBUF_NULLABLE value);
  ::reservemodule::ReserveMargin* PROTOBUF_NULLABLE unsafe_arena_release_standbymargin();

  private:
  const ::reservemodule::ReserveMargin& _internal_standbymargin() const;
  ::reservemodule::ReserveMargin* PROTOBUF_NONNULL _internal_mutable_standbymargin();

  public:
  // @@protoc_insertion_point(class_scope:reservemodule.ReserveRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   2, 46,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ReserveRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr requestid_;
    ::reservemodule::ReserveMargin* PROTOBUF_NULLABLE margin_;
    ::reservemodule::ReserveMargin* PROTOBUF_NULLABLE standbymargin_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_reservemodule_2freservemodule_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ReserveRequest_class_data_;
// -------------------------------------------------------------------

class ReserveAvailability final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:reservemodule.ReserveAvailability) */ {
 public:
  inline ReserveAvailability() : ReserveAvailability(nullptr) {}
  ~ReserveAvailability() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ReserveAvailability* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ReserveAvailability));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ReserveAvailability(::google::protobuf::internal::ConstantInitialized);

  inline ReserveAvailability(const ReserveAvailability& from) : ReserveAvailability(nullptr, from) {}
  inline ReserveAvailability(ReserveAvailability&& from) noexcept
      : ReserveAvailability(nullptr, ::std::move(from)) {}
  inline ReserveAvailability& operator=(const ReserveAvailability& from) {
    CopyFrom(from);
    return *this;
  }
  inline ReserveAvailability& operator=(ReserveAvailability&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ReserveAvailability& default_instance() {
    return *reinterpret_cast<const ReserveAvailability*>(
        &_ReserveAvailability_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(ReserveAvailability& a, ReserveAvailability& b) { a.Swap(&b); }
  inline void Swap(ReserveAvailability* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ReserveAvailability* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ReserveAvailability* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ReserveAvailability>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ReserveAvailability& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ReserveAvailability& from) { ReserveAvailability::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ReserveAvailability* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "reservemodule.ReserveAvailability"; }

 protected:
  explicit ReserveAvailability(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ReserveAvailability(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ReserveAvailability& from);
  ReserveAvailability(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ReserveAvailability&& from) noexcept
      : ReserveAvailability(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIncrementalMarginFieldNumber = 1,
    kMarginFieldNumber = 2,
    kStandbyMarginFieldNumber = 3,
  };
  // .reservemodule.ReserveMargin incrementalMargin = 1;
  bool has_incrementalmargin() const;
  void clear_incrementalmargin() ;
  const ::reservemodule::ReserveMargin& incrementalmargin() const;
  [[nodiscard]] ::reservemodule::ReserveMargin* PROTOBUF_NULLABLE release_incrementalmargin();
  ::reservemodule::ReserveMargin* PROTOBUF_NONNULL mutable_incrementalmargin();
  void set_allocated_incrementalmargin(::reservemodule::ReserveMargin* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_incrementalmargin(::reservemodule::ReserveMargin* PROTOBUF_NULLABLE value);
  ::reservemodule::ReserveMargin* PROTOBUF_NULLABLE unsafe_arena_release_incrementalmargin();

  private:
  const ::reservemodule::ReserveMargin& _internal_incrementalmargin() const;
  ::reservemodule::ReserveMargin* PROTOBUF_NONNULL _internal_mutable_incrementalmargin();

  public:
  // .reservemodule.ReserveMargin margin = 2;
  bool has_margin() const;
  void clear_margin() ;
  const ::reservemodule::ReserveMargin& margin() const;
  [[nodiscard]] ::reservemodule::ReserveMargin* PROTOBUF_NULLABLE release_margin();
  ::reservemodule::ReserveMargin* PROTOBUF_NONNULL mutable_margin();
  void set_allocated_margin(::reservemodule::ReserveMargin* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_margin(::reservemodule::ReserveMargin* PROTOBUF_NULLABLE value);
  ::reservemodule::ReserveMargin* PROTOBUF_NULLABLE unsafe_arena_release_margin();

  private:
  const ::reservemodule::ReserveMargin& _internal_margin() const;
  ::reservemodule::ReserveMargin* PROTOBUF_NONNULL _internal_mutable_margin();

  public:
  // .reservemodule.ReserveMargin standbyMargin = 3;
  bool has_standbymargin() const;
  void clear_standbymargin() ;
  const ::reservemodule::ReserveMargin& standbymargin() const;
  [[nodiscard]] ::reservemodule::ReserveMargin* PROTOBUF_NULLABLE release_standbymargin();
  ::reservemodule::ReserveMargin* PROTOBUF_NONNULL mutable_standbymargin();
  void set_allocated_standbymargin(::reservemodule::ReserveMargin* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_standbymargin(::reservemodule::ReserveMargin* PROTOBUF_NULLABLE value);
  ::reservemodule::ReserveMargin* PROTOBUF_NULLABLE unsafe_arena_release_standbymargin();

  private:
  const ::reservemodule::ReserveMargin& _internal_standbymargin() const;
  ::reservemodule::ReserveMargin* PROTOBUF_NONNULL _internal_mutable_standbymargin();

  public:
  // @@protoc_insertion_point(class_scope:reservemodule.ReserveAvailability)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   3, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ReserveAvailability& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::reservemodule::ReserveMargin* PROTOBUF_NULLABLE incrementalmargin_;
    ::reservemodule::ReserveMargin* PROTOBUF_NULLABLE margin_;
    ::reservemodule::ReserveMargin* PROTOBUF_NULLABLE standbymargin_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_reservemodule_2freservemodule_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ReserveAvailability_class_data_;
// -------------------------------------------------------------------

class AllocatedMargin final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:reservemodule.AllocatedMargin) */ {
 public:
  inline AllocatedMargin() : AllocatedMargin(nullptr) {}
  ~AllocatedMargin() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(AllocatedMargin* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(AllocatedMargin));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AllocatedMargin(::google::protobuf::internal::ConstantInitialized);

  inline AllocatedMargin(const AllocatedMargin& from) : AllocatedMargin(nullptr, from) {}
  inline AllocatedMargin(AllocatedMargin&& from) noexcept
      : AllocatedMargin(nullptr, ::std::move(from)) {}
  inline AllocatedMargin& operator=(const AllocatedMargin& from) {
    CopyFrom(from);
    return *this;
  }
  inline AllocatedMargin& operator=(AllocatedMargin&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AllocatedMargin& default_instance() {
    return *reinterpret_cast<const AllocatedMargin*>(
        &_AllocatedMargin_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(AllocatedMargin& a, AllocatedMargin& b) { a.Swap(&b); }
  inline void Swap(AllocatedMargin* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AllocatedMargin* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AllocatedMargin* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<AllocatedMargin>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AllocatedMargin& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AllocatedMargin& from) { AllocatedMargin::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(AllocatedMargin* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "reservemodule.AllocatedMargin"; }

 protected:
  explicit AllocatedMargin(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  AllocatedMargin(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const AllocatedMargin& from);
  AllocatedMargin(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, AllocatedMargin&& from) noexcept
      : AllocatedMargin(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRequestIDFieldNumber = 1,
    kAllocatedMarginFieldNumber = 2,
    kAllocatedStandbyMarginFieldNumber = 3,
  };
  // string requestID = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  void clear_requestid() ;
  const ::std::string& requestid() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_requestid(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_requestid();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_requestid();
  void set_allocated_requestid(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_requestid() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_requestid(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_requestid();

  public:
  // .reservemodule.ReserveMargin allocatedMargin = 2;
  bool has_allocatedmargin() const;
  void clear_allocatedmargin() ;
  const ::reservemodule::ReserveMargin& allocatedmargin() const;
  [[nodiscard]] ::reservemodule::ReserveMargin* PROTOBUF_NULLABLE release_allocatedmargin();
  ::reservemodule::ReserveMargin* PROTOBUF_NONNULL mutable_allocatedmargin();
  void set_allocated_allocatedmargin(::reservemodule::ReserveMargin* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_allocatedmargin(::reservemodule::ReserveMargin* PROTOBUF_NULLABLE value);
  ::reservemodule::ReserveMargin* PROTOBUF_NULLABLE unsafe_arena_release_allocatedmargin();

  private:
  const ::reservemodule::ReserveMargin& _internal_allocatedmargin() const;
  ::reservemodule::ReserveMargin* PROTOBUF_NONNULL _internal_mutable_allocatedmargin();

  public:
  // .reservemodule.ReserveMargin allocatedStandbyMargin = 3;
  bool has_allocatedstandbymargin() const;
  void clear_allocatedstandbymargin() ;
  const ::reservemodule::ReserveMargin& allocatedstandbymargin() const;
  [[nodiscard]] ::reservemodule::ReserveMargin* PROTOBUF_NULLABLE release_allocatedstandbymargin();
  ::reservemodule::ReserveMargin* PROTOBUF_NONNULL mutable_allocatedstandbymargin();
  void set_allocated_allocatedstandbymargin(::reservemodule::ReserveMargin* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_allocatedstandbymargin(::reservemodule::ReserveMargin* PROTOBUF_NULLABLE value);
  ::reservemodule::ReserveMargin* PROTOBUF_NULLABLE unsafe_arena_release_allocatedstandbymargin();

  private:
  const ::reservemodule::ReserveMargin& _internal_allocatedstandbymargin() const;
  ::reservemodule::ReserveMargin* PROTOBUF_NONNULL _internal_mutable_allocatedstandbymargin();

  public:
  // @@protoc_insertion_point(class_scope:reservemodule.AllocatedMargin)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   2, 47,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const AllocatedMargin& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr requestid_;
    ::reservemodule::ReserveMargin* PROTOBUF_NULLABLE allocatedmargin_;
    ::reservemodule::ReserveMargin* PROTOBUF_NULLABLE allocatedstandbymargin_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_reservemodule_2freservemodule_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull AllocatedMargin_class_data_;
// -------------------------------------------------------------------

class ReserveRequestProfile final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:reservemodule.ReserveRequestProfile) */ {
 public:
  inline ReserveRequestProfile() : ReserveRequestProfile(nullptr) {}
  ~ReserveRequestProfile() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ReserveRequestProfile* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ReserveRequestProfile));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ReserveRequestProfile(::google::protobuf::internal::ConstantInitialized);

  inline ReserveRequestProfile(const ReserveRequestProfile& from) : ReserveRequestProfile(nullptr, from) {}
  inline ReserveRequestProfile(ReserveRequestProfile&& from) noexcept
      : ReserveRequestProfile(nullptr, ::std::move(from)) {}
  inline ReserveRequestProfile& operator=(const ReserveRequestProfile& from) {
    CopyFrom(from);
    return *this;
  }
  inline ReserveRequestProfile& operator=(ReserveRequestProfile&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ReserveRequestProfile& default_instance() {
    return *reinterpret_cast<const ReserveRequestProfile*>(
        &_ReserveRequestProfile_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(ReserveRequestProfile& a, ReserveRequestProfile& b) { a.Swap(&b); }
  inline void Swap(ReserveRequestProfile* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ReserveRequestProfile* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ReserveRequestProfile* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ReserveRequestProfile>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ReserveRequestProfile& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ReserveRequestProfile& from) { ReserveRequestProfile::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ReserveRequestProfile* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "reservemodule.ReserveRequestProfile"; }

 protected:
  explicit ReserveRequestProfile(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ReserveRequestProfile(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ReserveRequestProfile& from);
  ReserveRequestProfile(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ReserveRequestProfile&& from) noexcept
      : ReserveRequestProfile(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kControlMessageInfoFieldNumber = 1,
    kRequesterCircuitSegmentServiceFieldNumber = 2,
    kReserveRequestFieldNumber = 3,
    kResponderCircuitSegmentServiceFieldNumber = 4,
    kTiePointFieldNumber = 5,
  };
  // .commonmodule.ControlMessageInfo controlMessageInfo = 1 [(.uml.option_parent_message) = true];
  bool has_controlmessageinfo() const;
  void clear_controlmessageinfo() ;
  const ::commonmodule::ControlMessageInfo& controlmessageinfo() const;
  [[nodiscard]] ::commonmodule::ControlMessageInfo* PROTOBUF_NULLABLE release_controlmessageinfo();
  ::commonmodule::ControlMessageInfo* PROTOBUF_NONNULL mutable_controlmessageinfo();
  void set_allocated_controlmessageinfo(::commonmodule::ControlMessageInfo* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_controlmessageinfo(::commonmodule::ControlMessageInfo* PROTOBUF_NULLABLE value);
  ::commonmodule::ControlMessageInfo* PROTOBUF_NULLABLE unsafe_arena_release_controlmessageinfo();

  private:
  const ::commonmodule::ControlMessageInfo& _internal_controlmessageinfo() const;
  ::commonmodule::ControlMessageInfo* PROTOBUF_NONNULL _internal_mutable_controlmessageinfo();

  public:
  // .commonmodule.ApplicationSystem requesterCircuitSegmentService = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  bool has_requestercircuitsegmentservice() const;
  void clear_requestercircuitsegmentservice() ;
  const ::commonmodule::ApplicationSystem& requestercircuitsegmentservice() const;
  [[nodiscard]] ::commonmodule::ApplicationSystem* PROTOBUF_NULLABLE release_requestercircuitsegmentservice();
  ::commonmodule::ApplicationSystem* PROTOBUF_NONNULL mutable_requestercircuitsegmentservice();
  void set_allocated_requestercircuitsegmentservice(::commonmodule::ApplicationSystem* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_requestercircuitsegmentservice(::commonmodule::ApplicationSystem* PROTOBUF_NULLABLE value);
  ::commonmodule::ApplicationSystem* PROTOBUF_NULLABLE unsafe_arena_release_requestercircuitsegmentservice();

  private:
  const ::commonmodule::ApplicationSystem& _internal_requestercircuitsegmentservice() const;
  ::commonmodule::ApplicationSystem* PROTOBUF_NONNULL _internal_mutable_requestercircuitsegmentservice();

  public:
  // .reservemodule.ReserveRequest reserveRequest = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  bool has_reserverequest() const;
  void clear_reserverequest() ;
  const ::reservemodule::ReserveRequest& reserverequest() const;
  [[nodiscard]] ::reservemodule::ReserveRequest* PROTOBUF_NULLABLE release_reserverequest();
  ::reservemodule::ReserveRequest* PROTOBUF_NONNULL mutable_reserverequest();
  void set_allocated_reserverequest(::reservemodule::ReserveRequest* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_reserverequest(::reservemodule::ReserveRequest* PROTOBUF_NULLABLE value);
  ::reservemodule::ReserveRequest* PROTOBUF_NULLABLE unsafe_arena_release_reserverequest();

  private:
  const ::reservemodule::ReserveRequest& _internal_reserverequest() const;
  ::reservemodule::ReserveRequest* PROTOBUF_NONNULL _internal_mutable_reserverequest();

  public:
  // .commonmodule.ApplicationSystem responderCircuitSegmentService = 4 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  bool has_respondercircuitsegmentservice() const;
  void clear_respondercircuitsegmentservice() ;
  const ::commonmodule::ApplicationSystem& respondercircuitsegmentservice() const;
  [[nodiscard]] ::commonmodule::ApplicationSystem* PROTOBUF_NULLABLE release_respondercircuitsegmentservice();
  ::commonmodule::ApplicationSystem* PROTOBUF_NONNULL mutable_respondercircuitsegmentservice();
  void set_allocated_respondercircuitsegmentservice(::commonmodule::ApplicationSystem* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_respondercircuitsegmentservice(::commonmodule::ApplicationSystem* PROTOBUF_NULLABLE value);
  ::commonmodule::ApplicationSystem* PROTOBUF_NULLABLE unsafe_arena_release_respondercircuitsegmentservice();

  private:
  const ::commonmodule::ApplicationSystem& _internal_respondercircuitsegmentservice() const;
  ::commonmodule::ApplicationSystem* PROTOBUF_NONNULL _internal_mutable_respondercircuitsegmentservice();

  public:
  // .commonmodule.ConductingEquipment tiePoint = 5 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  bool has_tiepoint() const;
  void clear_tiepoint() ;
  const ::commonmodule::ConductingEquipment& tiepoint() const;
  [[nodiscard]] ::commonmodule::ConductingEquipment* PROTOBUF_NULLABLE release_tiepoint();
  ::commonmodule::ConductingEquipment* PROTOBUF_NONNULL mutable_tiepoint();
  void set_allocated_tiepoint(::commonmodule::ConductingEquipment* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_tiepoint(::commonmodule::ConductingEquipment* PROTOBUF_NULLABLE value);
  ::commonmodule::ConductingEquipment* PROTOBUF_NULLABLE unsafe_arena_release_tiepoint();

  private:
  const ::commonmodule::ConductingEquipment& _internal_tiepoint() const;
  ::commonmodule::ConductingEquipment* PROTOBUF_NONNULL _internal_mutable_tiepoint();

  public:
  // @@protoc_insertion_point(class_scope:reservemodule.ReserveRequestProfile)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5,
                                   5, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ReserveRequestProfile& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::commonmodule::ControlMessageInfo* PROTOBUF_NULLABLE controlmessageinfo_;
    ::commonmodule::ApplicationSystem* PROTOBUF_NULLABLE requestercircuitsegmentservice_;
    ::reservemodule::ReserveRequest* PROTOBUF_NULLABLE reserverequest_;
    ::commonmodule::ApplicationSystem* PROTOBUF_NULLABLE respondercircuitsegmentservice_;
    ::commonmodule::ConductingEquipment* PROTOBUF_NULLABLE tiepoint_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_reservemodule_2freservemodule_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ReserveRequestProfile_class_data_;
// -------------------------------------------------------------------

class ReserveAvailabilityProfile final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:reservemodule.ReserveAvailabilityProfile) */ {
 public:
  inline ReserveAvailabilityProfile() : ReserveAvailabilityProfile(nullptr) {}
  ~ReserveAvailabilityProfile() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ReserveAvailabilityProfile* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ReserveAvailabilityProfile));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ReserveAvailabilityProfile(::google::protobuf::internal::ConstantInitialized);

  inline ReserveAvailabilityProfile(const ReserveAvailabilityProfile& from) : ReserveAvailabilityProfile(nullptr, from) {}
  inline ReserveAvailabilityProfile(ReserveAvailabilityProfile&& from) noexcept
      : ReserveAvailabilityProfile(nullptr, ::std::move(from)) {}
  inline ReserveAvailabilityProfile& operator=(const ReserveAvailabilityProfile& from) {
    CopyFrom(from);
    return *this;
  }
  inline ReserveAvailabilityProfile& operator=(ReserveAvailabilityProfile&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ReserveAvailabilityProfile& default_instance() {
    return *reinterpret_cast<const ReserveAvailabilityProfile*>(
        &_ReserveAvailabilityProfile_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(ReserveAvailabilityProfile& a, ReserveAvailabilityProfile& b) { a.Swap(&b); }
  inline void Swap(ReserveAvailabilityProfile* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ReserveAvailabilityProfile* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ReserveAvailabilityProfile* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ReserveAvailabilityProfile>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ReserveAvailabilityProfile& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ReserveAvailabilityProfile& from) { ReserveAvailabilityProfile::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ReserveAvailabilityProfile* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "reservemodule.ReserveAvailabilityProfile"; }

 protected:
  explicit ReserveAvailabilityProfile(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ReserveAvailabilityProfile(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ReserveAvailabilityProfile& from);
  ReserveAvailabilityProfile(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ReserveAvailabilityProfile&& from) noexcept
      : ReserveAvailabilityProfile(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kControlMessageInfoFieldNumber = 1,
    kAllocatedMarginFieldNumber = 2,
    kRequesterCircuitSegmentServiceFieldNumber = 3,
    kReserveAvailabilityFieldNumber = 4,
    kResponderCircuitSegmentServiceFieldNumber = 5,
    kTiePointFieldNumber = 6,
  };
  // .commonmodule.ControlMessageInfo controlMessageInfo = 1 [(.uml.option_parent_message) = true];
  bool has_controlmessageinfo() const;
  void clear_controlmessageinfo() ;
  const ::commonmodule::ControlMessageInfo& controlmessageinfo() const;
  [[nodiscard]] ::commonmodule::ControlMessageInfo* PROTOBUF_NULLABLE release_controlmessageinfo();
  ::commonmodule::ControlMessageInfo* PROTOBUF_NONNULL mutable_controlmessageinfo();
  void set_allocated_controlmessageinfo(::commonmodule::ControlMessageInfo* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_controlmessageinfo(::commonmodule::ControlMessageInfo* PROTOBUF_NULLABLE value);
  ::commonmodule::ControlMessageInfo* PROTOBUF_NULLABLE unsafe_arena_release_controlmessageinfo();

  private:
  const ::commonmodule::ControlMessageInfo& _internal_controlmessageinfo() const;
  ::commonmodule::ControlMessageInfo* PROTOBUF_NONNULL _internal_mutable_controlmessageinfo();

  public:
  // .reservemodule.AllocatedMargin allocatedMargin = 2;
  bool has_allocatedmargin() const;
  void clear_allocatedmargin() ;
  const ::reservemodule::AllocatedMargin& allocatedmargin() const;
  [[nodiscard]] ::reservemodule::AllocatedMargin* PROTOBUF_NULLABLE release_allocatedmargin();
  ::reservemodule::AllocatedMargin* PROTOBUF_NONNULL mutable_allocatedmargin();
  void set_allocated_allocatedmargin(::reservemodule::AllocatedMargin* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_allocatedmargin(::reservemodule::AllocatedMargin* PROTOBUF_NULLABLE value);
  ::reservemodule::AllocatedMargin* PROTOBUF_NULLABLE unsafe_arena_release_allocatedmargin();

  private:
  const ::reservemodule::AllocatedMargin& _internal_allocatedmargin() const;
  ::reservemodule::AllocatedMargin* PROTOBUF_NONNULL _internal_mutable_allocatedmargin();

  public:
  // .commonmodule.ApplicationSystem requesterCircuitSegmentService = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  bool has_requestercircuitsegmentservice() const;
  void clear_requestercircuitsegmentservice() ;
  const ::commonmodule::ApplicationSystem& requestercircuitsegmentservice() const;
  [[nodiscard]] ::commonmodule::ApplicationSystem* PROTOBUF_NULLABLE release_requestercircuitsegmentservice();
  ::commonmodule::ApplicationSystem* PROTOBUF_NONNULL mutable_requestercircuitsegmentservice();
  void set_allocated_requestercircuitsegmentservice(::commonmodule::ApplicationSystem* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_requestercircuitsegmentservice(::commonmodule::ApplicationSystem* PROTOBUF_NULLABLE value);
  ::commonmodule::ApplicationSystem* PROTOBUF_NULLABLE unsafe_arena_release_requestercircuitsegmentservice();

  private:
  const ::commonmodule::ApplicationSystem& _internal_requestercircuitsegmentservice() const;
  ::commonmodule::ApplicationSystem* PROTOBUF_NONNULL _internal_mutable_requestercircuitsegmentservice();

  public:
  // .reservemodule.ReserveAvailability reserveAvailability = 4 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  bool has_reserveavailability() const;
  void clear_reserveavailability() ;
  const ::reservemodule::ReserveAvailability& reserveavailability() const;
  [[nodiscard]] ::reservemodule::ReserveAvailability* PROTOBUF_NULLABLE release_reserveavailability();
  ::reservemodule::ReserveAvailability* PROTOBUF_NONNULL mutable_reserveavailability();
  void set_allocated_reserveavailability(::reservemodule::ReserveAvailability* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_reserveavailability(::reservemodule::ReserveAvailability* PROTOBUF_NULLABLE value);
  ::reservemodule::ReserveAvailability* PROTOBUF_NULLABLE unsafe_arena_release_reserveavailability();

  private:
  const ::reservemodule::ReserveAvailability& _internal_reserveavailability() const;
  ::reservemodule::ReserveAvailability* PROTOBUF_NONNULL _internal_mutable_reserveavailability();

  public:
  // .commonmodule.ApplicationSystem responderCircuitSegmentService = 5 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  bool has_respondercircuitsegmentservice() const;
  void clear_respondercircuitsegmentservice() ;
  const ::commonmodule::ApplicationSystem& respondercircuitsegmentservice() const;
  [[nodiscard]] ::commonmodule::ApplicationSystem* PROTOBUF_NULLABLE release_respondercircuitsegmentservice();
  ::commonmodule::ApplicationSystem* PROTOBUF_NONNULL mutable_respondercircuitsegmentservice();
  void set_allocated_respondercircuitsegmentservice(::commonmodule::ApplicationSystem* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_respondercircuitsegmentservice(::commonmodule::ApplicationSystem* PROTOBUF_NULLABLE value);
  ::commonmodule::ApplicationSystem* PROTOBUF_NULLABLE unsafe_arena_release_respondercircuitsegmentservice();

  private:
  const ::commonmodule::ApplicationSystem& _internal_respondercircuitsegmentservice() const;
  ::commonmodule::ApplicationSystem* PROTOBUF_NONNULL _internal_mutable_respondercircuitsegmentservice();

  public:
  // .commonmodule.ConductingEquipment tiePoint = 6 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  bool has_tiepoint() const;
  void clear_tiepoint() ;
  const ::commonmodule::ConductingEquipment& tiepoint() const;
  [[nodiscard]] ::commonmodule::ConductingEquipment* PROTOBUF_NULLABLE release_tiepoint();
  ::commonmodule::ConductingEquipment* PROTOBUF_NONNULL mutable_tiepoint();
  void set_allocated_tiepoint(::commonmodule::ConductingEquipment* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_tiepoint(::commonmodule::ConductingEquipment* PROTOBUF_NULLABLE value);
  ::commonmodule::ConductingEquipment* PROTOBUF_NULLABLE unsafe_arena_release_tiepoint();

  private:
  const ::commonmodule::ConductingEquipment& _internal_tiepoint() const;
  ::commonmodule::ConductingEquipment* PROTOBUF_NONNULL _internal_mutable_tiepoint();

  public:
  // @@protoc_insertion_point(class_scope:reservemodule.ReserveAvailabilityProfile)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 6,
                                   6, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ReserveAvailabilityProfile& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::commonmodule::ControlMessageInfo* PROTOBUF_NULLABLE controlmessageinfo_;
    ::reservemodule::AllocatedMargin* PROTOBUF_NULLABLE allocatedmargin_;
    ::commonmodule::ApplicationSystem* PROTOBUF_NULLABLE requestercircuitsegmentservice_;
    ::reservemodule::ReserveAvailability* PROTOBUF_NULLABLE reserveavailability_;
    ::commonmodule::ApplicationSystem* PROTOBUF_NULLABLE respondercircuitsegmentservice_;
    ::commonmodule::ConductingEquipment* PROTOBUF_NULLABLE tiepoint_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_reservemodule_2freservemodule_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ReserveAvailabilityProfile_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// ReserveMargin

// .commonmodule.LogicalNode logicalNode = 1 [(.uml.option_parent_message) = true];
inline bool ReserveMargin::has_logicalnode() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.logicalnode_ != nullptr);
  return value;
}
inline const ::commonmodule::LogicalNode& ReserveMargin::_internal_logicalnode() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::LogicalNode* p = _impl_.logicalnode_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::LogicalNode&>(::commonmodule::_LogicalNode_default_instance_);
}
inline const ::commonmodule::LogicalNode& ReserveMargin::logicalnode() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:reservemodule.ReserveMargin.logicalNode)
  return _internal_logicalnode();
}
inline void ReserveMargin::unsafe_arena_set_allocated_logicalnode(
    ::commonmodule::LogicalNode* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.logicalnode_);
  }
  _impl_.logicalnode_ = reinterpret_cast<::commonmodule::LogicalNode*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:reservemodule.ReserveMargin.logicalNode)
}
inline ::commonmodule::LogicalNode* PROTOBUF_NULLABLE ReserveMargin::release_logicalnode() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::commonmodule::LogicalNode* released = _impl_.logicalnode_;
  _impl_.logicalnode_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::LogicalNode* PROTOBUF_NULLABLE ReserveMargin::unsafe_arena_release_logicalnode() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:reservemodule.ReserveMargin.logicalNode)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::commonmodule::LogicalNode* temp = _impl_.logicalnode_;
  _impl_.logicalnode_ = nullptr;
  return temp;
}
inline ::commonmodule::LogicalNode* PROTOBUF_NONNULL ReserveMargin::_internal_mutable_logicalnode() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.logicalnode_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::LogicalNode>(GetArena());
    _impl_.logicalnode_ = reinterpret_cast<::commonmodule::LogicalNode*>(p);
  }
  return _impl_.logicalnode_;
}
inline ::commonmodule::LogicalNode* PROTOBUF_NONNULL ReserveMargin::mutable_logicalnode()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::commonmodule::LogicalNode* _msg = _internal_mutable_logicalnode();
  // @@protoc_insertion_point(field_mutable:reservemodule.ReserveMargin.logicalNode)
  return _msg;
}
inline void ReserveMargin::set_allocated_logicalnode(::commonmodule::LogicalNode* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.logicalnode_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.logicalnode_ = reinterpret_cast<::commonmodule::LogicalNode*>(value);
  // @@protoc_insertion_point(field_set_allocated:reservemodule.ReserveMargin.logicalNode)
}

// .commonmodule.PMG A = 2;
inline bool ReserveMargin::has_a() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.a_ != nullptr);
  return value;
}
inline const ::commonmodule::PMG& ReserveMargin::_internal_a() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::PMG* p = _impl_.a_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::PMG&>(::commonmodule::_PMG_default_instance_);
}
inline const ::commonmodule::PMG& ReserveMargin::a() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:reservemodule.ReserveMargin.A)
  return _internal_a();
}
inline void ReserveMargin::unsafe_arena_set_allocated_a(
    ::commonmodule::PMG* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.a_);
  }
  _impl_.a_ = reinterpret_cast<::commonmodule::PMG*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:reservemodule.ReserveMargin.A)
}
inline ::commonmodule::PMG* PROTOBUF_NULLABLE ReserveMargin::release_a() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::commonmodule::PMG* released = _impl_.a_;
  _impl_.a_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::PMG* PROTOBUF_NULLABLE ReserveMargin::unsafe_arena_release_a() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:reservemodule.ReserveMargin.A)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::commonmodule::PMG* temp = _impl_.a_;
  _impl_.a_ = nullptr;
  return temp;
}
inline ::commonmodule::PMG* PROTOBUF_NONNULL ReserveMargin::_internal_mutable_a() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.a_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::PMG>(GetArena());
    _impl_.a_ = reinterpret_cast<::commonmodule::PMG*>(p);
  }
  return _impl_.a_;
}
inline ::commonmodule::PMG* PROTOBUF_NONNULL ReserveMargin::mutable_a()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::commonmodule::PMG* _msg = _internal_mutable_a();
  // @@protoc_insertion_point(field_mutable:reservemodule.ReserveMargin.A)
  return _msg;
}
inline void ReserveMargin::set_allocated_a(::commonmodule::PMG* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.a_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.a_ = reinterpret_cast<::commonmodule::PMG*>(value);
  // @@protoc_insertion_point(field_set_allocated:reservemodule.ReserveMargin.A)
}

// .commonmodule.PMG VA = 3;
inline bool ReserveMargin::has_va() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.va_ != nullptr);
  return value;
}
inline const ::commonmodule::PMG& ReserveMargin::_internal_va() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::PMG* p = _impl_.va_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::PMG&>(::commonmodule::_PMG_default_instance_);
}
inline const ::commonmodule::PMG& ReserveMargin::va() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:reservemodule.ReserveMargin.VA)
  return _internal_va();
}
inline void ReserveMargin::unsafe_arena_set_allocated_va(
    ::commonmodule::PMG* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.va_);
  }
  _impl_.va_ = reinterpret_cast<::commonmodule::PMG*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:reservemodule.ReserveMargin.VA)
}
inline ::commonmodule::PMG* PROTOBUF_NULLABLE ReserveMargin::release_va() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::commonmodule::PMG* released = _impl_.va_;
  _impl_.va_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::PMG* PROTOBUF_NULLABLE ReserveMargin::unsafe_arena_release_va() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:reservemodule.ReserveMargin.VA)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::commonmodule::PMG* temp = _impl_.va_;
  _impl_.va_ = nullptr;
  return temp;
}
inline ::commonmodule::PMG* PROTOBUF_NONNULL ReserveMargin::_internal_mutable_va() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.va_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::PMG>(GetArena());
    _impl_.va_ = reinterpret_cast<::commonmodule::PMG*>(p);
  }
  return _impl_.va_;
}
inline ::commonmodule::PMG* PROTOBUF_NONNULL ReserveMargin::mutable_va()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::commonmodule::PMG* _msg = _internal_mutable_va();
  // @@protoc_insertion_point(field_mutable:reservemodule.ReserveMargin.VA)
  return _msg;
}
inline void ReserveMargin::set_allocated_va(::commonmodule::PMG* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.va_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.va_ = reinterpret_cast<::commonmodule::PMG*>(value);
  // @@protoc_insertion_point(field_set_allocated:reservemodule.ReserveMargin.VA)
}

// .commonmodule.PMG VAr = 4;
inline bool ReserveMargin::has_var() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.var_ != nullptr);
  return value;
}
inline const ::commonmodule::PMG& ReserveMargin::_internal_var() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::PMG* p = _impl_.var_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::PMG&>(::commonmodule::_PMG_default_instance_);
}
inline const ::commonmodule::PMG& ReserveMargin::var() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:reservemodule.ReserveMargin.VAr)
  return _internal_var();
}
inline void ReserveMargin::unsafe_arena_set_allocated_var(
    ::commonmodule::PMG* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.var_);
  }
  _impl_.var_ = reinterpret_cast<::commonmodule::PMG*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:reservemodule.ReserveMargin.VAr)
}
inline ::commonmodule::PMG* PROTOBUF_NULLABLE ReserveMargin::release_var() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::commonmodule::PMG* released = _impl_.var_;
  _impl_.var_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::PMG* PROTOBUF_NULLABLE ReserveMargin::unsafe_arena_release_var() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:reservemodule.ReserveMargin.VAr)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::commonmodule::PMG* temp = _impl_.var_;
  _impl_.var_ = nullptr;
  return temp;
}
inline ::commonmodule::PMG* PROTOBUF_NONNULL ReserveMargin::_internal_mutable_var() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.var_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::PMG>(GetArena());
    _impl_.var_ = reinterpret_cast<::commonmodule::PMG*>(p);
  }
  return _impl_.var_;
}
inline ::commonmodule::PMG* PROTOBUF_NONNULL ReserveMargin::mutable_var()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::commonmodule::PMG* _msg = _internal_mutable_var();
  // @@protoc_insertion_point(field_mutable:reservemodule.ReserveMargin.VAr)
  return _msg;
}
inline void ReserveMargin::set_allocated_var(::commonmodule::PMG* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.var_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.var_ = reinterpret_cast<::commonmodule::PMG*>(value);
  // @@protoc_insertion_point(field_set_allocated:reservemodule.ReserveMargin.VAr)
}

// .commonmodule.PMG W = 5;
inline bool ReserveMargin::has_w() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.w_ != nullptr);
  return value;
}
inline const ::commonmodule::PMG& ReserveMargin::_internal_w() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::PMG* p = _impl_.w_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::PMG&>(::commonmodule::_PMG_default_instance_);
}
inline const ::commonmodule::PMG& ReserveMargin::w() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:reservemodule.ReserveMargin.W)
  return _internal_w();
}
inline void ReserveMargin::unsafe_arena_set_allocated_w(
    ::commonmodule::PMG* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.w_);
  }
  _impl_.w_ = reinterpret_cast<::commonmodule::PMG*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:reservemodule.ReserveMargin.W)
}
inline ::commonmodule::PMG* PROTOBUF_NULLABLE ReserveMargin::release_w() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::commonmodule::PMG* released = _impl_.w_;
  _impl_.w_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::PMG* PROTOBUF_NULLABLE ReserveMargin::unsafe_arena_release_w() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:reservemodule.ReserveMargin.W)

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::commonmodule::PMG* temp = _impl_.w_;
  _impl_.w_ = nullptr;
  return temp;
}
inline ::commonmodule::PMG* PROTOBUF_NONNULL ReserveMargin::_internal_mutable_w() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.w_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::PMG>(GetArena());
    _impl_.w_ = reinterpret_cast<::commonmodule::PMG*>(p);
  }
  return _impl_.w_;
}
inline ::commonmodule::PMG* PROTOBUF_NONNULL ReserveMargin::mutable_w()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000010u;
  ::commonmodule::PMG* _msg = _internal_mutable_w();
  // @@protoc_insertion_point(field_mutable:reservemodule.ReserveMargin.W)
  return _msg;
}
inline void ReserveMargin::set_allocated_w(::commonmodule::PMG* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.w_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }

  _impl_.w_ = reinterpret_cast<::commonmodule::PMG*>(value);
  // @@protoc_insertion_point(field_set_allocated:reservemodule.ReserveMargin.W)
}

// -------------------------------------------------------------------

// ReserveAvailability

// .reservemodule.ReserveMargin incrementalMargin = 1;
inline bool ReserveAvailability::has_incrementalmargin() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.incrementalmargin_ != nullptr);
  return value;
}
inline void ReserveAvailability::clear_incrementalmargin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.incrementalmargin_ != nullptr) _impl_.incrementalmargin_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::reservemodule::ReserveMargin& ReserveAvailability::_internal_incrementalmargin() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::reservemodule::ReserveMargin* p = _impl_.incrementalmargin_;
  return p != nullptr ? *p : reinterpret_cast<const ::reservemodule::ReserveMargin&>(::reservemodule::_ReserveMargin_default_instance_);
}
inline const ::reservemodule::ReserveMargin& ReserveAvailability::incrementalmargin() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:reservemodule.ReserveAvailability.incrementalMargin)
  return _internal_incrementalmargin();
}
inline void ReserveAvailability::unsafe_arena_set_allocated_incrementalmargin(
    ::reservemodule::ReserveMargin* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.incrementalmargin_);
  }
  _impl_.incrementalmargin_ = reinterpret_cast<::reservemodule::ReserveMargin*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:reservemodule.ReserveAvailability.incrementalMargin)
}
inline ::reservemodule::ReserveMargin* PROTOBUF_NULLABLE ReserveAvailability::release_incrementalmargin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::reservemodule::ReserveMargin* released = _impl_.incrementalmargin_;
  _impl_.incrementalmargin_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::reservemodule::ReserveMargin* PROTOBUF_NULLABLE ReserveAvailability::unsafe_arena_release_incrementalmargin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:reservemodule.ReserveAvailability.incrementalMargin)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::reservemodule::ReserveMargin* temp = _impl_.incrementalmargin_;
  _impl_.incrementalmargin_ = nullptr;
  return temp;
}
inline ::reservemodule::ReserveMargin* PROTOBUF_NONNULL ReserveAvailability::_internal_mutable_incrementalmargin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.incrementalmargin_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::reservemodule::ReserveMargin>(GetArena());
    _impl_.incrementalmargin_ = reinterpret_cast<::reservemodule::ReserveMargin*>(p);
  }
  return _impl_.incrementalmargin_;
}
inline ::reservemodule::ReserveMargin* PROTOBUF_NONNULL ReserveAvailability::mutable_incrementalmargin()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::reservemodule::ReserveMargin* _msg = _internal_mutable_incrementalmargin();
  // @@protoc_insertion_point(field_mutable:reservemodule.ReserveAvailability.incrementalMargin)
  return _msg;
}
inline void ReserveAvailability::set_allocated_incrementalmargin(::reservemodule::ReserveMargin* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.incrementalmargin_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.incrementalmargin_ = reinterpret_cast<::reservemodule::ReserveMargin*>(value);
  // @@protoc_insertion_point(field_set_allocated:reservemodule.ReserveAvailability.incrementalMargin)
}

// .reservemodule.ReserveMargin margin = 2;
inline bool ReserveAvailability::has_margin() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.margin_ != nullptr);
  return value;
}
inline void ReserveAvailability::clear_margin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.margin_ != nullptr) _impl_.margin_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::reservemodule::ReserveMargin& ReserveAvailability::_internal_margin() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::reservemodule::ReserveMargin* p = _impl_.margin_;
  return p != nullptr ? *p : reinterpret_cast<const ::reservemodule::ReserveMargin&>(::reservemodule::_ReserveMargin_default_instance_);
}
inline const ::reservemodule::ReserveMargin& ReserveAvailability::margin() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:reservemodule.ReserveAvailability.margin)
  return _internal_margin();
}
inline void ReserveAvailability::unsafe_arena_set_allocated_margin(
    ::reservemodule::ReserveMargin* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.margin_);
  }
  _impl_.margin_ = reinterpret_cast<::reservemodule::ReserveMargin*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:reservemodule.ReserveAvailability.margin)
}
inline ::reservemodule::ReserveMargin* PROTOBUF_NULLABLE ReserveAvailability::release_margin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::reservemodule::ReserveMargin* released = _impl_.margin_;
  _impl_.margin_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::reservemodule::ReserveMargin* PROTOBUF_NULLABLE ReserveAvailability::unsafe_arena_release_margin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:reservemodule.ReserveAvailability.margin)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::reservemodule::ReserveMargin* temp = _impl_.margin_;
  _impl_.margin_ = nullptr;
  return temp;
}
inline ::reservemodule::ReserveMargin* PROTOBUF_NONNULL ReserveAvailability::_internal_mutable_margin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.margin_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::reservemodule::ReserveMargin>(GetArena());
    _impl_.margin_ = reinterpret_cast<::reservemodule::ReserveMargin*>(p);
  }
  return _impl_.margin_;
}
inline ::reservemodule::ReserveMargin* PROTOBUF_NONNULL ReserveAvailability::mutable_margin()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::reservemodule::ReserveMargin* _msg = _internal_mutable_margin();
  // @@protoc_insertion_point(field_mutable:reservemodule.ReserveAvailability.margin)
  return _msg;
}
inline void ReserveAvailability::set_allocated_margin(::reservemodule::ReserveMargin* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.margin_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.margin_ = reinterpret_cast<::reservemodule::ReserveMargin*>(value);
  // @@protoc_insertion_point(field_set_allocated:reservemodule.ReserveAvailability.margin)
}

// .reservemodule.ReserveMargin standbyMargin = 3;
inline bool ReserveAvailability::has_standbymargin() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.standbymargin_ != nullptr);
  return value;
}
inline void ReserveAvailability::clear_standbymargin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.standbymargin_ != nullptr) _impl_.standbymargin_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::reservemodule::ReserveMargin& ReserveAvailability::_internal_standbymargin() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::reservemodule::ReserveMargin* p = _impl_.standbymargin_;
  return p != nullptr ? *p : reinterpret_cast<const ::reservemodule::ReserveMargin&>(::reservemodule::_ReserveMargin_default_instance_);
}
inline const ::reservemodule::ReserveMargin& ReserveAvailability::standbymargin() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:reservemodule.ReserveAvailability.standbyMargin)
  return _internal_standbymargin();
}
inline void ReserveAvailability::unsafe_arena_set_allocated_standbymargin(
    ::reservemodule::ReserveMargin* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.standbymargin_);
  }
  _impl_.standbymargin_ = reinterpret_cast<::reservemodule::ReserveMargin*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:reservemodule.ReserveAvailability.standbyMargin)
}
inline ::reservemodule::ReserveMargin* PROTOBUF_NULLABLE ReserveAvailability::release_standbymargin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::reservemodule::ReserveMargin* released = _impl_.standbymargin_;
  _impl_.standbymargin_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::reservemodule::ReserveMargin* PROTOBUF_NULLABLE ReserveAvailability::unsafe_arena_release_standbymargin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:reservemodule.ReserveAvailability.standbyMargin)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::reservemodule::ReserveMargin* temp = _impl_.standbymargin_;
  _impl_.standbymargin_ = nullptr;
  return temp;
}
inline ::reservemodule::ReserveMargin* PROTOBUF_NONNULL ReserveAvailability::_internal_mutable_standbymargin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.standbymargin_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::reservemodule::ReserveMargin>(GetArena());
    _impl_.standbymargin_ = reinterpret_cast<::reservemodule::ReserveMargin*>(p);
  }
  return _impl_.standbymargin_;
}
inline ::reservemodule::ReserveMargin* PROTOBUF_NONNULL ReserveAvailability::mutable_standbymargin()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::reservemodule::ReserveMargin* _msg = _internal_mutable_standbymargin();
  // @@protoc_insertion_point(field_mutable:reservemodule.ReserveAvailability.standbyMargin)
  return _msg;
}
inline void ReserveAvailability::set_allocated_standbymargin(::reservemodule::ReserveMargin* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.standbymargin_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.standbymargin_ = reinterpret_cast<::reservemodule::ReserveMargin*>(value);
  // @@protoc_insertion_point(field_set_allocated:reservemodule.ReserveAvailability.standbyMargin)
}

// -------------------------------------------------------------------

// AllocatedMargin

// string requestID = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
inline void AllocatedMargin::clear_requestid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.requestid_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& AllocatedMargin::requestid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:reservemodule.AllocatedMargin.requestID)
  return _internal_requestid();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void AllocatedMargin::set_requestid(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.requestid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:reservemodule.AllocatedMargin.requestID)
}
inline ::std::string* PROTOBUF_NONNULL AllocatedMargin::mutable_requestid()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_requestid();
  // @@protoc_insertion_point(field_mutable:reservemodule.AllocatedMargin.requestID)
  return _s;
}
inline const ::std::string& AllocatedMargin::_internal_requestid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.requestid_.Get();
}
inline void AllocatedMargin::_internal_set_requestid(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.requestid_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL AllocatedMargin::_internal_mutable_requestid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.requestid_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE AllocatedMargin::release_requestid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:reservemodule.AllocatedMargin.requestID)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.requestid_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.requestid_.Set("", GetArena());
  }
  return released;
}
inline void AllocatedMargin::set_allocated_requestid(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.requestid_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.requestid_.IsDefault()) {
    _impl_.requestid_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:reservemodule.AllocatedMargin.requestID)
}

// .reservemodule.ReserveMargin allocatedMargin = 2;
inline bool AllocatedMargin::has_allocatedmargin() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.allocatedmargin_ != nullptr);
  return value;
}
inline void AllocatedMargin::clear_allocatedmargin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.allocatedmargin_ != nullptr) _impl_.allocatedmargin_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::reservemodule::ReserveMargin& AllocatedMargin::_internal_allocatedmargin() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::reservemodule::ReserveMargin* p = _impl_.allocatedmargin_;
  return p != nullptr ? *p : reinterpret_cast<const ::reservemodule::ReserveMargin&>(::reservemodule::_ReserveMargin_default_instance_);
}
inline const ::reservemodule::ReserveMargin& AllocatedMargin::allocatedmargin() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:reservemodule.AllocatedMargin.allocatedMargin)
  return _internal_allocatedmargin();
}
inline void AllocatedMargin::unsafe_arena_set_allocated_allocatedmargin(
    ::reservemodule::ReserveMargin* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.allocatedmargin_);
  }
  _impl_.allocatedmargin_ = reinterpret_cast<::reservemodule::ReserveMargin*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:reservemodule.AllocatedMargin.allocatedMargin)
}
inline ::reservemodule::ReserveMargin* PROTOBUF_NULLABLE AllocatedMargin::release_allocatedmargin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::reservemodule::ReserveMargin* released = _impl_.allocatedmargin_;
  _impl_.allocatedmargin_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::reservemodule::ReserveMargin* PROTOBUF_NULLABLE AllocatedMargin::unsafe_arena_release_allocatedmargin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:reservemodule.AllocatedMargin.allocatedMargin)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::reservemodule::ReserveMargin* temp = _impl_.allocatedmargin_;
  _impl_.allocatedmargin_ = nullptr;
  return temp;
}
inline ::reservemodule::ReserveMargin* PROTOBUF_NONNULL AllocatedMargin::_internal_mutable_allocatedmargin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.allocatedmargin_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::reservemodule::ReserveMargin>(GetArena());
    _impl_.allocatedmargin_ = reinterpret_cast<::reservemodule::ReserveMargin*>(p);
  }
  return _impl_.allocatedmargin_;
}
inline ::reservemodule::ReserveMargin* PROTOBUF_NONNULL AllocatedMargin::mutable_allocatedmargin()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::reservemodule::ReserveMargin* _msg = _internal_mutable_allocatedmargin();
  // @@protoc_insertion_point(field_mutable:reservemodule.AllocatedMargin.allocatedMargin)
  return _msg;
}
inline void AllocatedMargin::set_allocated_allocatedmargin(::reservemodule::ReserveMargin* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.allocatedmargin_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.allocatedmargin_ = reinterpret_cast<::reservemodule::ReserveMargin*>(value);
  // @@protoc_insertion_point(field_set_allocated:reservemodule.AllocatedMargin.allocatedMargin)
}

// .reservemodule.ReserveMargin allocatedStandbyMargin = 3;
inline bool AllocatedMargin::has_allocatedstandbymargin() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.allocatedstandbymargin_ != nullptr);
  return value;
}
inline void AllocatedMargin::clear_allocatedstandbymargin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.allocatedstandbymargin_ != nullptr) _impl_.allocatedstandbymargin_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::reservemodule::ReserveMargin& AllocatedMargin::_internal_allocatedstandbymargin() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::reservemodule::ReserveMargin* p = _impl_.allocatedstandbymargin_;
  return p != nullptr ? *p : reinterpret_cast<const ::reservemodule::ReserveMargin&>(::reservemodule::_ReserveMargin_default_instance_);
}
inline const ::reservemodule::ReserveMargin& AllocatedMargin::allocatedstandbymargin() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:reservemodule.AllocatedMargin.allocatedStandbyMargin)
  return _internal_allocatedstandbymargin();
}
inline void AllocatedMargin::unsafe_arena_set_allocated_allocatedstandbymargin(
    ::reservemodule::ReserveMargin* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.allocatedstandbymargin_);
  }
  _impl_.allocatedstandbymargin_ = reinterpret_cast<::reservemodule::ReserveMargin*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:reservemodule.AllocatedMargin.allocatedStandbyMargin)
}
inline ::reservemodule::ReserveMargin* PROTOBUF_NULLABLE AllocatedMargin::release_allocatedstandbymargin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::reservemodule::ReserveMargin* released = _impl_.allocatedstandbymargin_;
  _impl_.allocatedstandbymargin_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::reservemodule::ReserveMargin* PROTOBUF_NULLABLE AllocatedMargin::unsafe_arena_release_allocatedstandbymargin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:reservemodule.AllocatedMargin.allocatedStandbyMargin)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::reservemodule::ReserveMargin* temp = _impl_.allocatedstandbymargin_;
  _impl_.allocatedstandbymargin_ = nullptr;
  return temp;
}
inline ::reservemodule::ReserveMargin* PROTOBUF_NONNULL AllocatedMargin::_internal_mutable_allocatedstandbymargin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.allocatedstandbymargin_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::reservemodule::ReserveMargin>(GetArena());
    _impl_.allocatedstandbymargin_ = reinterpret_cast<::reservemodule::ReserveMargin*>(p);
  }
  return _impl_.allocatedstandbymargin_;
}
inline ::reservemodule::ReserveMargin* PROTOBUF_NONNULL AllocatedMargin::mutable_allocatedstandbymargin()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::reservemodule::ReserveMargin* _msg = _internal_mutable_allocatedstandbymargin();
  // @@protoc_insertion_point(field_mutable:reservemodule.AllocatedMargin.allocatedStandbyMargin)
  return _msg;
}
inline void AllocatedMargin::set_allocated_allocatedstandbymargin(::reservemodule::ReserveMargin* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.allocatedstandbymargin_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.allocatedstandbymargin_ = reinterpret_cast<::reservemodule::ReserveMargin*>(value);
  // @@protoc_insertion_point(field_set_allocated:reservemodule.AllocatedMargin.allocatedStandbyMargin)
}

// -------------------------------------------------------------------

// ReserveAvailabilityProfile

// .commonmodule.ControlMessageInfo controlMessageInfo = 1 [(.uml.option_parent_message) = true];
inline bool ReserveAvailabilityProfile::has_controlmessageinfo() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.controlmessageinfo_ != nullptr);
  return value;
}
inline const ::commonmodule::ControlMessageInfo& ReserveAvailabilityProfile::_internal_controlmessageinfo() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::ControlMessageInfo* p = _impl_.controlmessageinfo_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::ControlMessageInfo&>(::commonmodule::_ControlMessageInfo_default_instance_);
}
inline const ::commonmodule::ControlMessageInfo& ReserveAvailabilityProfile::controlmessageinfo() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:reservemodule.ReserveAvailabilityProfile.controlMessageInfo)
  return _internal_controlmessageinfo();
}
inline void ReserveAvailabilityProfile::unsafe_arena_set_allocated_controlmessageinfo(
    ::commonmodule::ControlMessageInfo* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.controlmessageinfo_);
  }
  _impl_.controlmessageinfo_ = reinterpret_cast<::commonmodule::ControlMessageInfo*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:reservemodule.ReserveAvailabilityProfile.controlMessageInfo)
}
inline ::commonmodule::ControlMessageInfo* PROTOBUF_NULLABLE ReserveAvailabilityProfile::release_controlmessageinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::commonmodule::ControlMessageInfo* released = _impl_.controlmessageinfo_;
  _impl_.controlmessageinfo_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::ControlMessageInfo* PROTOBUF_NULLABLE ReserveAvailabilityProfile::unsafe_arena_release_controlmessageinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:reservemodule.ReserveAvailabilityProfile.controlMessageInfo)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::commonmodule::ControlMessageInfo* temp = _impl_.controlmessageinfo_;
  _impl_.controlmessageinfo_ = nullptr;
  return temp;
}
inline ::commonmodule::ControlMessageInfo* PROTOBUF_NONNULL ReserveAvailabilityProfile::_internal_mutable_controlmessageinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.controlmessageinfo_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::ControlMessageInfo>(GetArena());
    _impl_.controlmessageinfo_ = reinterpret_cast<::commonmodule::ControlMessageInfo*>(p);
  }
  return _impl_.controlmessageinfo_;
}
inline ::commonmodule::ControlMessageInfo* PROTOBUF_NONNULL ReserveAvailabilityProfile::mutable_controlmessageinfo()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::commonmodule::ControlMessageInfo* _msg = _internal_mutable_controlmessageinfo();
  // @@protoc_insertion_point(field_mutable:reservemodule.ReserveAvailabilityProfile.controlMessageInfo)
  return _msg;
}
inline void ReserveAvailabilityProfile::set_allocated_controlmessageinfo(::commonmodule::ControlMessageInfo* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.controlmessageinfo_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.controlmessageinfo_ = reinterpret_cast<::commonmodule::ControlMessageInfo*>(value);
  // @@protoc_insertion_point(field_set_allocated:reservemodule.ReserveAvailabilityProfile.controlMessageInfo)
}

// .reservemodule.AllocatedMargin allocatedMargin = 2;
inline bool ReserveAvailabilityProfile::has_allocatedmargin() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.allocatedmargin_ != nullptr);
  return value;
}
inline void ReserveAvailabilityProfile::clear_allocatedmargin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.allocatedmargin_ != nullptr) _impl_.allocatedmargin_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::reservemodule::AllocatedMargin& ReserveAvailabilityProfile::_internal_allocatedmargin() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::reservemodule::AllocatedMargin* p = _impl_.allocatedmargin_;
  return p != nullptr ? *p : reinterpret_cast<const ::reservemodule::AllocatedMargin&>(::reservemodule::_AllocatedMargin_default_instance_);
}
inline const ::reservemodule::AllocatedMargin& ReserveAvailabilityProfile::allocatedmargin() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:reservemodule.ReserveAvailabilityProfile.allocatedMargin)
  return _internal_allocatedmargin();
}
inline void ReserveAvailabilityProfile::unsafe_arena_set_allocated_allocatedmargin(
    ::reservemodule::AllocatedMargin* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.allocatedmargin_);
  }
  _impl_.allocatedmargin_ = reinterpret_cast<::reservemodule::AllocatedMargin*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:reservemodule.ReserveAvailabilityProfile.allocatedMargin)
}
inline ::reservemodule::AllocatedMargin* PROTOBUF_NULLABLE ReserveAvailabilityProfile::release_allocatedmargin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::reservemodule::AllocatedMargin* released = _impl_.allocatedmargin_;
  _impl_.allocatedmargin_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::reservemodule::AllocatedMargin* PROTOBUF_NULLABLE ReserveAvailabilityProfile::unsafe_arena_release_allocatedmargin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:reservemodule.ReserveAvailabilityProfile.allocatedMargin)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::reservemodule::AllocatedMargin* temp = _impl_.allocatedmargin_;
  _impl_.allocatedmargin_ = nullptr;
  return temp;
}
inline ::reservemodule::AllocatedMargin* PROTOBUF_NONNULL ReserveAvailabilityProfile::_internal_mutable_allocatedmargin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.allocatedmargin_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::reservemodule::AllocatedMargin>(GetArena());
    _impl_.allocatedmargin_ = reinterpret_cast<::reservemodule::AllocatedMargin*>(p);
  }
  return _impl_.allocatedmargin_;
}
inline ::reservemodule::AllocatedMargin* PROTOBUF_NONNULL ReserveAvailabilityProfile::mutable_allocatedmargin()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::reservemodule::AllocatedMargin* _msg = _internal_mutable_allocatedmargin();
  // @@protoc_insertion_point(field_mutable:reservemodule.ReserveAvailabilityProfile.allocatedMargin)
  return _msg;
}
inline void ReserveAvailabilityProfile::set_allocated_allocatedmargin(::reservemodule::AllocatedMargin* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.allocatedmargin_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.allocatedmargin_ = reinterpret_cast<::reservemodule::AllocatedMargin*>(value);
  // @@protoc_insertion_point(field_set_allocated:reservemodule.ReserveAvailabilityProfile.allocatedMargin)
}

// .commonmodule.ApplicationSystem requesterCircuitSegmentService = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
inline bool ReserveAvailabilityProfile::has_requestercircuitsegmentservice() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.requestercircuitsegmentservice_ != nullptr);
  return value;
}
inline const ::commonmodule::ApplicationSystem& ReserveAvailabilityProfile::_internal_requestercircuitsegmentservice() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::ApplicationSystem* p = _impl_.requestercircuitsegmentservice_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::ApplicationSystem&>(::commonmodule::_ApplicationSystem_default_instance_);
}
inline const ::commonmodule::ApplicationSystem& ReserveAvailabilityProfile::requestercircuitsegmentservice() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:reservemodule.ReserveAvailabilityProfile.requesterCircuitSegmentService)
  return _internal_requestercircuitsegmentservice();
}
inline void ReserveAvailabilityProfile::unsafe_arena_set_allocated_requestercircuitsegmentservice(
    ::commonmodule::ApplicationSystem* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.requestercircuitsegmentservice_);
  }
  _impl_.requestercircuitsegmentservice_ = reinterpret_cast<::commonmodule::ApplicationSystem*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:reservemodule.ReserveAvailabilityProfile.requesterCircuitSegmentService)
}
inline ::commonmodule::ApplicationSystem* PROTOBUF_NULLABLE ReserveAvailabilityProfile::release_requestercircuitsegmentservice() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::commonmodule::ApplicationSystem* released = _impl_.requestercircuitsegmentservice_;
  _impl_.requestercircuitsegmentservice_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::ApplicationSystem* PROTOBUF_NULLABLE ReserveAvailabilityProfile::unsafe_arena_release_requestercircuitsegmentservice() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:reservemodule.ReserveAvailabilityProfile.requesterCircuitSegmentService)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::commonmodule::ApplicationSystem* temp = _impl_.requestercircuitsegmentservice_;
  _impl_.requestercircuitsegmentservice_ = nullptr;
  return temp;
}
inline ::commonmodule::ApplicationSystem* PROTOBUF_NONNULL ReserveAvailabilityProfile::_internal_mutable_requestercircuitsegmentservice() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.requestercircuitsegmentservice_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::ApplicationSystem>(GetArena());
    _impl_.requestercircuitsegmentservice_ = reinterpret_cast<::commonmodule::ApplicationSystem*>(p);
  }
  return _impl_.requestercircuitsegmentservice_;
}
inline ::commonmodule::ApplicationSystem* PROTOBUF_NONNULL ReserveAvailabilityProfile::mutable_requestercircuitsegmentservice()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::commonmodule::ApplicationSystem* _msg = _internal_mutable_requestercircuitsegmentservice();
  // @@protoc_insertion_point(field_mutable:reservemodule.ReserveAvailabilityProfile.requesterCircuitSegmentService)
  return _msg;
}
inline void ReserveAvailabilityProfile::set_allocated_requestercircuitsegmentservice(::commonmodule::ApplicationSystem* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.requestercircuitsegmentservice_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.requestercircuitsegmentservice_ = reinterpret_cast<::commonmodule::ApplicationSystem*>(value);
  // @@protoc_insertion_point(field_set_allocated:reservemodule.ReserveAvailabilityProfile.requesterCircuitSegmentService)
}

// .reservemodule.ReserveAvailability reserveAvailability = 4 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
inline bool ReserveAvailabilityProfile::has_reserveavailability() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.reserveavailability_ != nullptr);
  return value;
}
inline void ReserveAvailabilityProfile::clear_reserveavailability() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.reserveavailability_ != nullptr) _impl_.reserveavailability_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const ::reservemodule::ReserveAvailability& ReserveAvailabilityProfile::_internal_reserveavailability() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::reservemodule::ReserveAvailability* p = _impl_.reserveavailability_;
  return p != nullptr ? *p : reinterpret_cast<const ::reservemodule::ReserveAvailability&>(::reservemodule::_ReserveAvailability_default_instance_);
}
inline const ::reservemodule::ReserveAvailability& ReserveAvailabilityProfile::reserveavailability() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:reservemodule.ReserveAvailabilityProfile.reserveAvailability)
  return _internal_reserveavailability();
}
inline void ReserveAvailabilityProfile::unsafe_arena_set_allocated_reserveavailability(
    ::reservemodule::ReserveAvailability* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.reserveavailability_);
  }
  _impl_.reserveavailability_ = reinterpret_cast<::reservemodule::ReserveAvailability*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:reservemodule.ReserveAvailabilityProfile.reserveAvailability)
}
inline ::reservemodule::ReserveAvailability* PROTOBUF_NULLABLE ReserveAvailabilityProfile::release_reserveavailability() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::reservemodule::ReserveAvailability* released = _impl_.reserveavailability_;
  _impl_.reserveavailability_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::reservemodule::ReserveAvailability* PROTOBUF_NULLABLE ReserveAvailabilityProfile::unsafe_arena_release_reserveavailability() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:reservemodule.ReserveAvailabilityProfile.reserveAvailability)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::reservemodule::ReserveAvailability* temp = _impl_.reserveavailability_;
  _impl_.reserveavailability_ = nullptr;
  return temp;
}
inline ::reservemodule::ReserveAvailability* PROTOBUF_NONNULL ReserveAvailabilityProfile::_internal_mutable_reserveavailability() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.reserveavailability_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::reservemodule::ReserveAvailability>(GetArena());
    _impl_.reserveavailability_ = reinterpret_cast<::reservemodule::ReserveAvailability*>(p);
  }
  return _impl_.reserveavailability_;
}
inline ::reservemodule::ReserveAvailability* PROTOBUF_NONNULL ReserveAvailabilityProfile::mutable_reserveavailability()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::reservemodule::ReserveAvailability* _msg = _internal_mutable_reserveavailability();
  // @@protoc_insertion_point(field_mutable:reservemodule.ReserveAvailabilityProfile.reserveAvailability)
  return _msg;
}
inline void ReserveAvailabilityProfile::set_allocated_reserveavailability(::reservemodule::ReserveAvailability* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.reserveavailability_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.reserveavailability_ = reinterpret_cast<::reservemodule::ReserveAvailability*>(value);
  // @@protoc_insertion_point(field_set_allocated:reservemodule.ReserveAvailabilityProfile.reserveAvailability)
}

// .commonmodule.ApplicationSystem responderCircuitSegmentService = 5 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
inline bool ReserveAvailabilityProfile::has_respondercircuitsegmentservice() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.respondercircuitsegmentservice_ != nullptr);
  return value;
}
inline const ::commonmodule::ApplicationSystem& ReserveAvailabilityProfile::_internal_respondercircuitsegmentservice() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::ApplicationSystem* p = _impl_.respondercircuitsegmentservice_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::ApplicationSystem&>(::commonmodule::_ApplicationSystem_default_instance_);
}
inline const ::commonmodule::ApplicationSystem& ReserveAvailabilityProfile::respondercircuitsegmentservice() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:reservemodule.ReserveAvailabilityProfile.responderCircuitSegmentService)
  return _internal_respondercircuitsegmentservice();
}
inline void ReserveAvailabilityProfile::unsafe_arena_set_allocated_respondercircuitsegmentservice(
    ::commonmodule::ApplicationSystem* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.respondercircuitsegmentservice_);
  }
  _impl_.respondercircuitsegmentservice_ = reinterpret_cast<::commonmodule::ApplicationSystem*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:reservemodule.ReserveAvailabilityProfile.responderCircuitSegmentService)
}
inline ::commonmodule::ApplicationSystem* PROTOBUF_NULLABLE ReserveAvailabilityProfile::release_respondercircuitsegmentservice() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::commonmodule::ApplicationSystem* released = _impl_.respondercircuitsegmentservice_;
  _impl_.respondercircuitsegmentservice_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::ApplicationSystem* PROTOBUF_NULLABLE ReserveAvailabilityProfile::unsafe_arena_release_respondercircuitsegmentservice() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:reservemodule.ReserveAvailabilityProfile.responderCircuitSegmentService)

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::commonmodule::ApplicationSystem* temp = _impl_.respondercircuitsegmentservice_;
  _impl_.respondercircuitsegmentservice_ = nullptr;
  return temp;
}
inline ::commonmodule::ApplicationSystem* PROTOBUF_NONNULL ReserveAvailabilityProfile::_internal_mutable_respondercircuitsegmentservice() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.respondercircuitsegmentservice_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::ApplicationSystem>(GetArena());
    _impl_.respondercircuitsegmentservice_ = reinterpret_cast<::commonmodule::ApplicationSystem*>(p);
  }
  return _impl_.respondercircuitsegmentservice_;
}
inline ::commonmodule::ApplicationSystem* PROTOBUF_NONNULL ReserveAvailabilityProfile::mutable_respondercircuitsegmentservice()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000010u;
  ::commonmodule::ApplicationSystem* _msg = _internal_mutable_respondercircuitsegmentservice();
  // @@protoc_insertion_point(field_mutable:reservemodule.ReserveAvailabilityProfile.responderCircuitSegmentService)
  return _msg;
}
inline void ReserveAvailabilityProfile::set_allocated_respondercircuitsegmentservice(::commonmodule::ApplicationSystem* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.respondercircuitsegmentservice_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }

  _impl_.respondercircuitsegmentservice_ = reinterpret_cast<::commonmodule::ApplicationSystem*>(value);
  // @@protoc_insertion_point(field_set_allocated:reservemodule.ReserveAvailabilityProfile.responderCircuitSegmentService)
}

// .commonmodule.ConductingEquipment tiePoint = 6 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
inline bool ReserveAvailabilityProfile::has_tiepoint() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.tiepoint_ != nullptr);
  return value;
}
inline const ::commonmodule::ConductingEquipment& ReserveAvailabilityProfile::_internal_tiepoint() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::ConductingEquipment* p = _impl_.tiepoint_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::ConductingEquipment&>(::commonmodule::_ConductingEquipment_default_instance_);
}
inline const ::commonmodule::ConductingEquipment& ReserveAvailabilityProfile::tiepoint() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:reservemodule.ReserveAvailabilityProfile.tiePoint)
  return _internal_tiepoint();
}
inline void ReserveAvailabilityProfile::unsafe_arena_set_allocated_tiepoint(
    ::commonmodule::ConductingEquipment* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.tiepoint_);
  }
  _impl_.tiepoint_ = reinterpret_cast<::commonmodule::ConductingEquipment*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:reservemodule.ReserveAvailabilityProfile.tiePoint)
}
inline ::commonmodule::ConductingEquipment* PROTOBUF_NULLABLE ReserveAvailabilityProfile::release_tiepoint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::commonmodule::ConductingEquipment* released = _impl_.tiepoint_;
  _impl_.tiepoint_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::ConductingEquipment* PROTOBUF_NULLABLE ReserveAvailabilityProfile::unsafe_arena_release_tiepoint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:reservemodule.ReserveAvailabilityProfile.tiePoint)

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::commonmodule::ConductingEquipment* temp = _impl_.tiepoint_;
  _impl_.tiepoint_ = nullptr;
  return temp;
}
inline ::commonmodule::ConductingEquipment* PROTOBUF_NONNULL ReserveAvailabilityProfile::_internal_mutable_tiepoint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.tiepoint_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::ConductingEquipment>(GetArena());
    _impl_.tiepoint_ = reinterpret_cast<::commonmodule::ConductingEquipment*>(p);
  }
  return _impl_.tiepoint_;
}
inline ::commonmodule::ConductingEquipment* PROTOBUF_NONNULL ReserveAvailabilityProfile::mutable_tiepoint()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000020u;
  ::commonmodule::ConductingEquipment* _msg = _internal_mutable_tiepoint();
  // @@protoc_insertion_point(field_mutable:reservemodule.ReserveAvailabilityProfile.tiePoint)
  return _msg;
}
inline void ReserveAvailabilityProfile::set_allocated_tiepoint(::commonmodule::ConductingEquipment* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.tiepoint_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }

  _impl_.tiepoint_ = reinterpret_cast<::commonmodule::ConductingEquipment*>(value);
  // @@protoc_insertion_point(field_set_allocated:reservemodule.ReserveAvailabilityProfile.tiePoint)
}

// -------------------------------------------------------------------

// ReserveRequest

// string requestID = 1 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
inline void ReserveRequest::clear_requestid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.requestid_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& ReserveRequest::requestid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:reservemodule.ReserveRequest.requestID)
  return _internal_requestid();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ReserveRequest::set_requestid(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.requestid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:reservemodule.ReserveRequest.requestID)
}
inline ::std::string* PROTOBUF_NONNULL ReserveRequest::mutable_requestid()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_requestid();
  // @@protoc_insertion_point(field_mutable:reservemodule.ReserveRequest.requestID)
  return _s;
}
inline const ::std::string& ReserveRequest::_internal_requestid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.requestid_.Get();
}
inline void ReserveRequest::_internal_set_requestid(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.requestid_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL ReserveRequest::_internal_mutable_requestid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.requestid_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE ReserveRequest::release_requestid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:reservemodule.ReserveRequest.requestID)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.requestid_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.requestid_.Set("", GetArena());
  }
  return released;
}
inline void ReserveRequest::set_allocated_requestid(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.requestid_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.requestid_.IsDefault()) {
    _impl_.requestid_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:reservemodule.ReserveRequest.requestID)
}

// .reservemodule.ReserveMargin margin = 2;
inline bool ReserveRequest::has_margin() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.margin_ != nullptr);
  return value;
}
inline void ReserveRequest::clear_margin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.margin_ != nullptr) _impl_.margin_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::reservemodule::ReserveMargin& ReserveRequest::_internal_margin() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::reservemodule::ReserveMargin* p = _impl_.margin_;
  return p != nullptr ? *p : reinterpret_cast<const ::reservemodule::ReserveMargin&>(::reservemodule::_ReserveMargin_default_instance_);
}
inline const ::reservemodule::ReserveMargin& ReserveRequest::margin() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:reservemodule.ReserveRequest.margin)
  return _internal_margin();
}
inline void ReserveRequest::unsafe_arena_set_allocated_margin(
    ::reservemodule::ReserveMargin* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.margin_);
  }
  _impl_.margin_ = reinterpret_cast<::reservemodule::ReserveMargin*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:reservemodule.ReserveRequest.margin)
}
inline ::reservemodule::ReserveMargin* PROTOBUF_NULLABLE ReserveRequest::release_margin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::reservemodule::ReserveMargin* released = _impl_.margin_;
  _impl_.margin_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::reservemodule::ReserveMargin* PROTOBUF_NULLABLE ReserveRequest::unsafe_arena_release_margin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:reservemodule.ReserveRequest.margin)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::reservemodule::ReserveMargin* temp = _impl_.margin_;
  _impl_.margin_ = nullptr;
  return temp;
}
inline ::reservemodule::ReserveMargin* PROTOBUF_NONNULL ReserveRequest::_internal_mutable_margin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.margin_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::reservemodule::ReserveMargin>(GetArena());
    _impl_.margin_ = reinterpret_cast<::reservemodule::ReserveMargin*>(p);
  }
  return _impl_.margin_;
}
inline ::reservemodule::ReserveMargin* PROTOBUF_NONNULL ReserveRequest::mutable_margin()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::reservemodule::ReserveMargin* _msg = _internal_mutable_margin();
  // @@protoc_insertion_point(field_mutable:reservemodule.ReserveRequest.margin)
  return _msg;
}
inline void ReserveRequest::set_allocated_margin(::reservemodule::ReserveMargin* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.margin_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.margin_ = reinterpret_cast<::reservemodule::ReserveMargin*>(value);
  // @@protoc_insertion_point(field_set_allocated:reservemodule.ReserveRequest.margin)
}

// .reservemodule.ReserveMargin standbyMargin = 3;
inline bool ReserveRequest::has_standbymargin() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.standbymargin_ != nullptr);
  return value;
}
inline void ReserveRequest::clear_standbymargin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.standbymargin_ != nullptr) _impl_.standbymargin_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::reservemodule::ReserveMargin& ReserveRequest::_internal_standbymargin() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::reservemodule::ReserveMargin* p = _impl_.standbymargin_;
  return p != nullptr ? *p : reinterpret_cast<const ::reservemodule::ReserveMargin&>(::reservemodule::_ReserveMargin_default_instance_);
}
inline const ::reservemodule::ReserveMargin& ReserveRequest::standbymargin() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:reservemodule.ReserveRequest.standbyMargin)
  return _internal_standbymargin();
}
inline void ReserveRequest::unsafe_arena_set_allocated_standbymargin(
    ::reservemodule::ReserveMargin* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.standbymargin_);
  }
  _impl_.standbymargin_ = reinterpret_cast<::reservemodule::ReserveMargin*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:reservemodule.ReserveRequest.standbyMargin)
}
inline ::reservemodule::ReserveMargin* PROTOBUF_NULLABLE ReserveRequest::release_standbymargin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::reservemodule::ReserveMargin* released = _impl_.standbymargin_;
  _impl_.standbymargin_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::reservemodule::ReserveMargin* PROTOBUF_NULLABLE ReserveRequest::unsafe_arena_release_standbymargin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:reservemodule.ReserveRequest.standbyMargin)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::reservemodule::ReserveMargin* temp = _impl_.standbymargin_;
  _impl_.standbymargin_ = nullptr;
  return temp;
}
inline ::reservemodule::ReserveMargin* PROTOBUF_NONNULL ReserveRequest::_internal_mutable_standbymargin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.standbymargin_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::reservemodule::ReserveMargin>(GetArena());
    _impl_.standbymargin_ = reinterpret_cast<::reservemodule::ReserveMargin*>(p);
  }
  return _impl_.standbymargin_;
}
inline ::reservemodule::ReserveMargin* PROTOBUF_NONNULL ReserveRequest::mutable_standbymargin()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::reservemodule::ReserveMargin* _msg = _internal_mutable_standbymargin();
  // @@protoc_insertion_point(field_mutable:reservemodule.ReserveRequest.standbyMargin)
  return _msg;
}
inline void ReserveRequest::set_allocated_standbymargin(::reservemodule::ReserveMargin* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.standbymargin_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.standbymargin_ = reinterpret_cast<::reservemodule::ReserveMargin*>(value);
  // @@protoc_insertion_point(field_set_allocated:reservemodule.ReserveRequest.standbyMargin)
}

// -------------------------------------------------------------------

// ReserveRequestProfile

// .commonmodule.ControlMessageInfo controlMessageInfo = 1 [(.uml.option_parent_message) = true];
inline bool ReserveRequestProfile::has_controlmessageinfo() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.controlmessageinfo_ != nullptr);
  return value;
}
inline const ::commonmodule::ControlMessageInfo& ReserveRequestProfile::_internal_controlmessageinfo() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::ControlMessageInfo* p = _impl_.controlmessageinfo_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::ControlMessageInfo&>(::commonmodule::_ControlMessageInfo_default_instance_);
}
inline const ::commonmodule::ControlMessageInfo& ReserveRequestProfile::controlmessageinfo() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:reservemodule.ReserveRequestProfile.controlMessageInfo)
  return _internal_controlmessageinfo();
}
inline void ReserveRequestProfile::unsafe_arena_set_allocated_controlmessageinfo(
    ::commonmodule::ControlMessageInfo* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.controlmessageinfo_);
  }
  _impl_.controlmessageinfo_ = reinterpret_cast<::commonmodule::ControlMessageInfo*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:reservemodule.ReserveRequestProfile.controlMessageInfo)
}
inline ::commonmodule::ControlMessageInfo* PROTOBUF_NULLABLE ReserveRequestProfile::release_controlmessageinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::commonmodule::ControlMessageInfo* released = _impl_.controlmessageinfo_;
  _impl_.controlmessageinfo_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::ControlMessageInfo* PROTOBUF_NULLABLE ReserveRequestProfile::unsafe_arena_release_controlmessageinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:reservemodule.ReserveRequestProfile.controlMessageInfo)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::commonmodule::ControlMessageInfo* temp = _impl_.controlmessageinfo_;
  _impl_.controlmessageinfo_ = nullptr;
  return temp;
}
inline ::commonmodule::ControlMessageInfo* PROTOBUF_NONNULL ReserveRequestProfile::_internal_mutable_controlmessageinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.controlmessageinfo_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::ControlMessageInfo>(GetArena());
    _impl_.controlmessageinfo_ = reinterpret_cast<::commonmodule::ControlMessageInfo*>(p);
  }
  return _impl_.controlmessageinfo_;
}
inline ::commonmodule::ControlMessageInfo* PROTOBUF_NONNULL ReserveRequestProfile::mutable_controlmessageinfo()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::commonmodule::ControlMessageInfo* _msg = _internal_mutable_controlmessageinfo();
  // @@protoc_insertion_point(field_mutable:reservemodule.ReserveRequestProfile.controlMessageInfo)
  return _msg;
}
inline void ReserveRequestProfile::set_allocated_controlmessageinfo(::commonmodule::ControlMessageInfo* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.controlmessageinfo_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.controlmessageinfo_ = reinterpret_cast<::commonmodule::ControlMessageInfo*>(value);
  // @@protoc_insertion_point(field_set_allocated:reservemodule.ReserveRequestProfile.controlMessageInfo)
}

// .commonmodule.ApplicationSystem requesterCircuitSegmentService = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
inline bool ReserveRequestProfile::has_requestercircuitsegmentservice() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.requestercircuitsegmentservice_ != nullptr);
  return value;
}
inline const ::commonmodule::ApplicationSystem& ReserveRequestProfile::_internal_requestercircuitsegmentservice() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::ApplicationSystem* p = _impl_.requestercircuitsegmentservice_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::ApplicationSystem&>(::commonmodule::_ApplicationSystem_default_instance_);
}
inline const ::commonmodule::ApplicationSystem& ReserveRequestProfile::requestercircuitsegmentservice() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:reservemodule.ReserveRequestProfile.requesterCircuitSegmentService)
  return _internal_requestercircuitsegmentservice();
}
inline void ReserveRequestProfile::unsafe_arena_set_allocated_requestercircuitsegmentservice(
    ::commonmodule::ApplicationSystem* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.requestercircuitsegmentservice_);
  }
  _impl_.requestercircuitsegmentservice_ = reinterpret_cast<::commonmodule::ApplicationSystem*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:reservemodule.ReserveRequestProfile.requesterCircuitSegmentService)
}
inline ::commonmodule::ApplicationSystem* PROTOBUF_NULLABLE ReserveRequestProfile::release_requestercircuitsegmentservice() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::commonmodule::ApplicationSystem* released = _impl_.requestercircuitsegmentservice_;
  _impl_.requestercircuitsegmentservice_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::ApplicationSystem* PROTOBUF_NULLABLE ReserveRequestProfile::unsafe_arena_release_requestercircuitsegmentservice() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:reservemodule.ReserveRequestProfile.requesterCircuitSegmentService)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::commonmodule::ApplicationSystem* temp = _impl_.requestercircuitsegmentservice_;
  _impl_.requestercircuitsegmentservice_ = nullptr;
  return temp;
}
inline ::commonmodule::ApplicationSystem* PROTOBUF_NONNULL ReserveRequestProfile::_internal_mutable_requestercircuitsegmentservice() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.requestercircuitsegmentservice_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::ApplicationSystem>(GetArena());
    _impl_.requestercircuitsegmentservice_ = reinterpret_cast<::commonmodule::ApplicationSystem*>(p);
  }
  return _impl_.requestercircuitsegmentservice_;
}
inline ::commonmodule::ApplicationSystem* PROTOBUF_NONNULL ReserveRequestProfile::mutable_requestercircuitsegmentservice()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::commonmodule::ApplicationSystem* _msg = _internal_mutable_requestercircuitsegmentservice();
  // @@protoc_insertion_point(field_mutable:reservemodule.ReserveRequestProfile.requesterCircuitSegmentService)
  return _msg;
}
inline void ReserveRequestProfile::set_allocated_requestercircuitsegmentservice(::commonmodule::ApplicationSystem* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.requestercircuitsegmentservice_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.requestercircuitsegmentservice_ = reinterpret_cast<::commonmodule::ApplicationSystem*>(value);
  // @@protoc_insertion_point(field_set_allocated:reservemodule.ReserveRequestProfile.requesterCircuitSegmentService)
}

// .reservemodule.ReserveRequest reserveRequest = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
inline bool ReserveRequestProfile::has_reserverequest() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.reserverequest_ != nullptr);
  return value;
}
inline void ReserveRequestProfile::clear_reserverequest() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.reserverequest_ != nullptr) _impl_.reserverequest_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::reservemodule::ReserveRequest& ReserveRequestProfile::_internal_reserverequest() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::reservemodule::ReserveRequest* p = _impl_.reserverequest_;
  return p != nullptr ? *p : reinterpret_cast<const ::reservemodule::ReserveRequest&>(::reservemodule::_ReserveRequest_default_instance_);
}
inline const ::reservemodule::ReserveRequest& ReserveRequestProfile::reserverequest() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:reservemodule.ReserveRequestProfile.reserveRequest)
  return _internal_reserverequest();
}
inline void ReserveRequestProfile::unsafe_arena_set_allocated_reserverequest(
    ::reservemodule::ReserveRequest* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.reserverequest_);
  }
  _impl_.reserverequest_ = reinterpret_cast<::reservemodule::ReserveRequest*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:reservemodule.ReserveRequestProfile.reserveRequest)
}
inline ::reservemodule::ReserveRequest* PROTOBUF_NULLABLE ReserveRequestProfile::release_reserverequest() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::reservemodule::ReserveRequest* released = _impl_.reserverequest_;
  _impl_.reserverequest_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::reservemodule::ReserveRequest* PROTOBUF_NULLABLE ReserveRequestProfile::unsafe_arena_release_reserverequest() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:reservemodule.ReserveRequestProfile.reserveRequest)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::reservemodule::ReserveRequest* temp = _impl_.reserverequest_;
  _impl_.reserverequest_ = nullptr;
  return temp;
}
inline ::reservemodule::ReserveRequest* PROTOBUF_NONNULL ReserveRequestProfile::_internal_mutable_reserverequest() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.reserverequest_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::reservemodule::ReserveRequest>(GetArena());
    _impl_.reserverequest_ = reinterpret_cast<::reservemodule::ReserveRequest*>(p);
  }
  return _impl_.reserverequest_;
}
inline ::reservemodule::ReserveRequest* PROTOBUF_NONNULL ReserveRequestProfile::mutable_reserverequest()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::reservemodule::ReserveRequest* _msg = _internal_mutable_reserverequest();
  // @@protoc_insertion_point(field_mutable:reservemodule.ReserveRequestProfile.reserveRequest)
  return _msg;
}
inline void ReserveRequestProfile::set_allocated_reserverequest(::reservemodule::ReserveRequest* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.reserverequest_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.reserverequest_ = reinterpret_cast<::reservemodule::ReserveRequest*>(value);
  // @@protoc_insertion_point(field_set_allocated:reservemodule.ReserveRequestProfile.reserveRequest)
}

// .commonmodule.ApplicationSystem responderCircuitSegmentService = 4 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
inline bool ReserveRequestProfile::has_respondercircuitsegmentservice() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.respondercircuitsegmentservice_ != nullptr);
  return value;
}
inline const ::commonmodule::ApplicationSystem& ReserveRequestProfile::_internal_respondercircuitsegmentservice() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::ApplicationSystem* p = _impl_.respondercircuitsegmentservice_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::ApplicationSystem&>(::commonmodule::_ApplicationSystem_default_instance_);
}
inline const ::commonmodule::ApplicationSystem& ReserveRequestProfile::respondercircuitsegmentservice() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:reservemodule.ReserveRequestProfile.responderCircuitSegmentService)
  return _internal_respondercircuitsegmentservice();
}
inline void ReserveRequestProfile::unsafe_arena_set_allocated_respondercircuitsegmentservice(
    ::commonmodule::ApplicationSystem* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.respondercircuitsegmentservice_);
  }
  _impl_.respondercircuitsegmentservice_ = reinterpret_cast<::commonmodule::ApplicationSystem*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:reservemodule.ReserveRequestProfile.responderCircuitSegmentService)
}
inline ::commonmodule::ApplicationSystem* PROTOBUF_NULLABLE ReserveRequestProfile::release_respondercircuitsegmentservice() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::commonmodule::ApplicationSystem* released = _impl_.respondercircuitsegmentservice_;
  _impl_.respondercircuitsegmentservice_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::ApplicationSystem* PROTOBUF_NULLABLE ReserveRequestProfile::unsafe_arena_release_respondercircuitsegmentservice() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:reservemodule.ReserveRequestProfile.responderCircuitSegmentService)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::commonmodule::ApplicationSystem* temp = _impl_.respondercircuitsegmentservice_;
  _impl_.respondercircuitsegmentservice_ = nullptr;
  return temp;
}
inline ::commonmodule::ApplicationSystem* PROTOBUF_NONNULL ReserveRequestProfile::_internal_mutable_respondercircuitsegmentservice() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.respondercircuitsegmentservice_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::ApplicationSystem>(GetArena());
    _impl_.respondercircuitsegmentservice_ = reinterpret_cast<::commonmodule::ApplicationSystem*>(p);
  }
  return _impl_.respondercircuitsegmentservice_;
}
inline ::commonmodule::ApplicationSystem* PROTOBUF_NONNULL ReserveRequestProfile::mutable_respondercircuitsegmentservice()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::commonmodule::ApplicationSystem* _msg = _internal_mutable_respondercircuitsegmentservice();
  // @@protoc_insertion_point(field_mutable:reservemodule.ReserveRequestProfile.responderCircuitSegmentService)
  return _msg;
}
inline void ReserveRequestProfile::set_allocated_respondercircuitsegmentservice(::commonmodule::ApplicationSystem* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.respondercircuitsegmentservice_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.respondercircuitsegmentservice_ = reinterpret_cast<::commonmodule::ApplicationSystem*>(value);
  // @@protoc_insertion_point(field_set_allocated:reservemodule.ReserveRequestProfile.responderCircuitSegmentService)
}

// .commonmodule.ConductingEquipment tiePoint = 5 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
inline bool ReserveRequestProfile::has_tiepoint() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.tiepoint_ != nullptr);
  return value;
}
inline const ::commonmodule::ConductingEquipment& ReserveRequestProfile::_internal_tiepoint() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::ConductingEquipment* p = _impl_.tiepoint_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::ConductingEquipment&>(::commonmodule::_ConductingEquipment_default_instance_);
}
inline const ::commonmodule::ConductingEquipment& ReserveRequestProfile::tiepoint() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:reservemodule.ReserveRequestProfile.tiePoint)
  return _internal_tiepoint();
}
inline void ReserveRequestProfile::unsafe_arena_set_allocated_tiepoint(
    ::commonmodule::ConductingEquipment* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.tiepoint_);
  }
  _impl_.tiepoint_ = reinterpret_cast<::commonmodule::ConductingEquipment*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:reservemodule.ReserveRequestProfile.tiePoint)
}
inline ::commonmodule::ConductingEquipment* PROTOBUF_NULLABLE ReserveRequestProfile::release_tiepoint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::commonmodule::ConductingEquipment* released = _impl_.tiepoint_;
  _impl_.tiepoint_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::ConductingEquipment* PROTOBUF_NULLABLE ReserveRequestProfile::unsafe_arena_release_tiepoint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:reservemodule.ReserveRequestProfile.tiePoint)

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::commonmodule::ConductingEquipment* temp = _impl_.tiepoint_;
  _impl_.tiepoint_ = nullptr;
  return temp;
}
inline ::commonmodule::ConductingEquipment* PROTOBUF_NONNULL ReserveRequestProfile::_internal_mutable_tiepoint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.tiepoint_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::ConductingEquipment>(GetArena());
    _impl_.tiepoint_ = reinterpret_cast<::commonmodule::ConductingEquipment*>(p);
  }
  return _impl_.tiepoint_;
}
inline ::commonmodule::ConductingEquipment* PROTOBUF_NONNULL ReserveRequestProfile::mutable_tiepoint()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000010u;
  ::commonmodule::ConductingEquipment* _msg = _internal_mutable_tiepoint();
  // @@protoc_insertion_point(field_mutable:reservemodule.ReserveRequestProfile.tiePoint)
  return _msg;
}
inline void ReserveRequestProfile::set_allocated_tiepoint(::commonmodule::ConductingEquipment* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.tiepoint_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }

  _impl_.tiepoint_ = reinterpret_cast<::commonmodule::ConductingEquipment*>(value);
  // @@protoc_insertion_point(field_set_allocated:reservemodule.ReserveRequestProfile.tiePoint)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace reservemodule


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // reservemodule_2freservemodule_2eproto_2epb_2eh
