// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: switchmodule/switchmodule.proto
// Protobuf C++ Version: 6.31.1

#include "switchmodule/switchmodule.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace switchmodule {

inline constexpr ProtectedSwitch::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        conductingequipment_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ProtectedSwitch::ProtectedSwitch(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ProtectedSwitch_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ProtectedSwitchDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ProtectedSwitchDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ProtectedSwitchDefaultTypeInternal() {}
  union {
    ProtectedSwitch _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ProtectedSwitchDefaultTypeInternal _ProtectedSwitch_default_instance_;

inline constexpr SwitchStatusXSWI::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        logicalnodeforeventandstatus_{nullptr},
        dynamictest_{nullptr},
        pos_{nullptr},
        protectionpickup_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SwitchStatusXSWI::SwitchStatusXSWI(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SwitchStatusXSWI_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SwitchStatusXSWIDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SwitchStatusXSWIDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SwitchStatusXSWIDefaultTypeInternal() {}
  union {
    SwitchStatusXSWI _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SwitchStatusXSWIDefaultTypeInternal _SwitchStatusXSWI_default_instance_;

inline constexpr SwitchEventXSWI::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        logicalnodeforeventandstatus_{nullptr},
        dynamictest_{nullptr},
        pos_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SwitchEventXSWI::SwitchEventXSWI(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SwitchEventXSWI_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SwitchEventXSWIDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SwitchEventXSWIDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SwitchEventXSWIDefaultTypeInternal() {}
  union {
    SwitchEventXSWI _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SwitchEventXSWIDefaultTypeInternal _SwitchEventXSWI_default_instance_;

inline constexpr SwitchDiscreteControlXSWI::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        logicalnodeforcontrol_{nullptr},
        pos_{nullptr},
        resetprotectionpickup_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SwitchDiscreteControlXSWI::SwitchDiscreteControlXSWI(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SwitchDiscreteControlXSWI_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SwitchDiscreteControlXSWIDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SwitchDiscreteControlXSWIDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SwitchDiscreteControlXSWIDefaultTypeInternal() {}
  union {
    SwitchDiscreteControlXSWI _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SwitchDiscreteControlXSWIDefaultTypeInternal _SwitchDiscreteControlXSWI_default_instance_;

inline constexpr SwitchStatus::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        statusvalue_{nullptr},
        switchstatusxswi_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SwitchStatus::SwitchStatus(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SwitchStatus_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SwitchStatusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SwitchStatusDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SwitchStatusDefaultTypeInternal() {}
  union {
    SwitchStatus _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SwitchStatusDefaultTypeInternal _SwitchStatus_default_instance_;

inline constexpr SwitchReading::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        conductingequipmentterminalreading_{nullptr},
        diffreadingmmxu_{nullptr},
        phasemmtn_{nullptr},
        readingmmtr_{nullptr},
        readingmmxu_{nullptr},
        readingmmdc_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SwitchReading::SwitchReading(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SwitchReading_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SwitchReadingDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SwitchReadingDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SwitchReadingDefaultTypeInternal() {}
  union {
    SwitchReading _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SwitchReadingDefaultTypeInternal _SwitchReading_default_instance_;

inline constexpr SwitchEvent::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        eventvalue_{nullptr},
        switcheventxswi_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SwitchEvent::SwitchEvent(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SwitchEvent_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SwitchEventDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SwitchEventDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SwitchEventDefaultTypeInternal() {}
  union {
    SwitchEvent _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SwitchEventDefaultTypeInternal _SwitchEvent_default_instance_;

inline constexpr SwitchDiscreteControl::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        controlvalue_{nullptr},
        check_{nullptr},
        switchdiscretecontrolxswi_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SwitchDiscreteControl::SwitchDiscreteControl(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SwitchDiscreteControl_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SwitchDiscreteControlDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SwitchDiscreteControlDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SwitchDiscreteControlDefaultTypeInternal() {}
  union {
    SwitchDiscreteControl _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SwitchDiscreteControlDefaultTypeInternal _SwitchDiscreteControl_default_instance_;

inline constexpr SwitchStatusProfile::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        statusmessageinfo_{nullptr},
        protectedswitch_{nullptr},
        switchstatus_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SwitchStatusProfile::SwitchStatusProfile(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SwitchStatusProfile_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SwitchStatusProfileDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SwitchStatusProfileDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SwitchStatusProfileDefaultTypeInternal() {}
  union {
    SwitchStatusProfile _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SwitchStatusProfileDefaultTypeInternal _SwitchStatusProfile_default_instance_;

inline constexpr SwitchReadingProfile::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        switchreading_{},
        readingmessageinfo_{nullptr},
        protectedswitch_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SwitchReadingProfile::SwitchReadingProfile(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SwitchReadingProfile_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SwitchReadingProfileDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SwitchReadingProfileDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SwitchReadingProfileDefaultTypeInternal() {}
  union {
    SwitchReadingProfile _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SwitchReadingProfileDefaultTypeInternal _SwitchReadingProfile_default_instance_;

inline constexpr SwitchEventProfile::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        eventmessageinfo_{nullptr},
        protectedswitch_{nullptr},
        switchevent_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SwitchEventProfile::SwitchEventProfile(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SwitchEventProfile_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SwitchEventProfileDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SwitchEventProfileDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SwitchEventProfileDefaultTypeInternal() {}
  union {
    SwitchEventProfile _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SwitchEventProfileDefaultTypeInternal _SwitchEventProfile_default_instance_;

inline constexpr SwitchDiscreteControlProfile::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        controlmessageinfo_{nullptr},
        protectedswitch_{nullptr},
        switchdiscretecontrol_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SwitchDiscreteControlProfile::SwitchDiscreteControlProfile(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SwitchDiscreteControlProfile_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SwitchDiscreteControlProfileDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SwitchDiscreteControlProfileDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SwitchDiscreteControlProfileDefaultTypeInternal() {}
  union {
    SwitchDiscreteControlProfile _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SwitchDiscreteControlProfileDefaultTypeInternal _SwitchDiscreteControlProfile_default_instance_;
}  // namespace switchmodule
static constexpr const ::_pb::EnumDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_enum_descriptors_switchmodule_2fswitchmodule_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_switchmodule_2fswitchmodule_2eproto = nullptr;
const ::uint32_t
    TableStruct_switchmodule_2fswitchmodule_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::switchmodule::SwitchDiscreteControlXSWI, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::switchmodule::SwitchDiscreteControlXSWI, _impl_.logicalnodeforcontrol_),
        PROTOBUF_FIELD_OFFSET(::switchmodule::SwitchDiscreteControlXSWI, _impl_.pos_),
        PROTOBUF_FIELD_OFFSET(::switchmodule::SwitchDiscreteControlXSWI, _impl_.resetprotectionpickup_),
        0,
        1,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::switchmodule::SwitchDiscreteControl, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::switchmodule::SwitchDiscreteControl, _impl_.controlvalue_),
        PROTOBUF_FIELD_OFFSET(::switchmodule::SwitchDiscreteControl, _impl_.check_),
        PROTOBUF_FIELD_OFFSET(::switchmodule::SwitchDiscreteControl, _impl_.switchdiscretecontrolxswi_),
        0,
        1,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::switchmodule::ProtectedSwitch, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::switchmodule::ProtectedSwitch, _impl_.conductingequipment_),
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::switchmodule::SwitchDiscreteControlProfile, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::switchmodule::SwitchDiscreteControlProfile, _impl_.controlmessageinfo_),
        PROTOBUF_FIELD_OFFSET(::switchmodule::SwitchDiscreteControlProfile, _impl_.protectedswitch_),
        PROTOBUF_FIELD_OFFSET(::switchmodule::SwitchDiscreteControlProfile, _impl_.switchdiscretecontrol_),
        0,
        1,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::switchmodule::SwitchEventXSWI, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::switchmodule::SwitchEventXSWI, _impl_.logicalnodeforeventandstatus_),
        PROTOBUF_FIELD_OFFSET(::switchmodule::SwitchEventXSWI, _impl_.dynamictest_),
        PROTOBUF_FIELD_OFFSET(::switchmodule::SwitchEventXSWI, _impl_.pos_),
        0,
        1,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::switchmodule::SwitchEvent, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::switchmodule::SwitchEvent, _impl_.eventvalue_),
        PROTOBUF_FIELD_OFFSET(::switchmodule::SwitchEvent, _impl_.switcheventxswi_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::switchmodule::SwitchEventProfile, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::switchmodule::SwitchEventProfile, _impl_.eventmessageinfo_),
        PROTOBUF_FIELD_OFFSET(::switchmodule::SwitchEventProfile, _impl_.protectedswitch_),
        PROTOBUF_FIELD_OFFSET(::switchmodule::SwitchEventProfile, _impl_.switchevent_),
        0,
        1,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::switchmodule::SwitchReading, _impl_._has_bits_),
        9, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::switchmodule::SwitchReading, _impl_.conductingequipmentterminalreading_),
        PROTOBUF_FIELD_OFFSET(::switchmodule::SwitchReading, _impl_.diffreadingmmxu_),
        PROTOBUF_FIELD_OFFSET(::switchmodule::SwitchReading, _impl_.phasemmtn_),
        PROTOBUF_FIELD_OFFSET(::switchmodule::SwitchReading, _impl_.readingmmtr_),
        PROTOBUF_FIELD_OFFSET(::switchmodule::SwitchReading, _impl_.readingmmxu_),
        PROTOBUF_FIELD_OFFSET(::switchmodule::SwitchReading, _impl_.readingmmdc_),
        0,
        1,
        2,
        3,
        4,
        5,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::switchmodule::SwitchReadingProfile, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::switchmodule::SwitchReadingProfile, _impl_.readingmessageinfo_),
        PROTOBUF_FIELD_OFFSET(::switchmodule::SwitchReadingProfile, _impl_.protectedswitch_),
        PROTOBUF_FIELD_OFFSET(::switchmodule::SwitchReadingProfile, _impl_.switchreading_),
        0,
        1,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::switchmodule::SwitchStatusXSWI, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::switchmodule::SwitchStatusXSWI, _impl_.logicalnodeforeventandstatus_),
        PROTOBUF_FIELD_OFFSET(::switchmodule::SwitchStatusXSWI, _impl_.dynamictest_),
        PROTOBUF_FIELD_OFFSET(::switchmodule::SwitchStatusXSWI, _impl_.pos_),
        PROTOBUF_FIELD_OFFSET(::switchmodule::SwitchStatusXSWI, _impl_.protectionpickup_),
        0,
        1,
        2,
        3,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::switchmodule::SwitchStatus, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::switchmodule::SwitchStatus, _impl_.statusvalue_),
        PROTOBUF_FIELD_OFFSET(::switchmodule::SwitchStatus, _impl_.switchstatusxswi_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::switchmodule::SwitchStatusProfile, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::switchmodule::SwitchStatusProfile, _impl_.statusmessageinfo_),
        PROTOBUF_FIELD_OFFSET(::switchmodule::SwitchStatusProfile, _impl_.protectedswitch_),
        PROTOBUF_FIELD_OFFSET(::switchmodule::SwitchStatusProfile, _impl_.switchstatus_),
        0,
        1,
        2,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, sizeof(::switchmodule::SwitchDiscreteControlXSWI)},
        {9, sizeof(::switchmodule::SwitchDiscreteControl)},
        {18, sizeof(::switchmodule::ProtectedSwitch)},
        {23, sizeof(::switchmodule::SwitchDiscreteControlProfile)},
        {32, sizeof(::switchmodule::SwitchEventXSWI)},
        {41, sizeof(::switchmodule::SwitchEvent)},
        {48, sizeof(::switchmodule::SwitchEventProfile)},
        {57, sizeof(::switchmodule::SwitchReading)},
        {72, sizeof(::switchmodule::SwitchReadingProfile)},
        {81, sizeof(::switchmodule::SwitchStatusXSWI)},
        {92, sizeof(::switchmodule::SwitchStatus)},
        {99, sizeof(::switchmodule::SwitchStatusProfile)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::switchmodule::_SwitchDiscreteControlXSWI_default_instance_._instance,
    &::switchmodule::_SwitchDiscreteControl_default_instance_._instance,
    &::switchmodule::_ProtectedSwitch_default_instance_._instance,
    &::switchmodule::_SwitchDiscreteControlProfile_default_instance_._instance,
    &::switchmodule::_SwitchEventXSWI_default_instance_._instance,
    &::switchmodule::_SwitchEvent_default_instance_._instance,
    &::switchmodule::_SwitchEventProfile_default_instance_._instance,
    &::switchmodule::_SwitchReading_default_instance_._instance,
    &::switchmodule::_SwitchReadingProfile_default_instance_._instance,
    &::switchmodule::_SwitchStatusXSWI_default_instance_._instance,
    &::switchmodule::_SwitchStatus_default_instance_._instance,
    &::switchmodule::_SwitchStatusProfile_default_instance_._instance,
};
const char descriptor_table_protodef_switchmodule_2fswitchmodule_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\037switchmodule/switchmodule.proto\022\014switc"
    "hmodule\032\tuml.proto\032\037commonmodule/commonm"
    "odule.proto\"\303\001\n\031SwitchDiscreteControlXSW"
    "I\022H\n\025logicalNodeForControl\030\001 \001(\0132#.commo"
    "nmodule.LogicalNodeForControlB\004\200\265\030\001\022#\n\003P"
    "os\030\002 \001(\0132\026.commonmodule.PhaseDPC\0227\n\025Rese"
    "tProtectionPickup\030\003 \001(\0132\030.commonmodule.C"
    "ontrolSPC\"\311\001\n\025SwitchDiscreteControl\0226\n\014c"
    "ontrolValue\030\001 \001(\0132\032.commonmodule.Control"
    "ValueB\004\200\265\030\001\022,\n\005check\030\002 \001(\0132\035.commonmodul"
    "e.CheckConditions\022J\n\031switchDiscreteContr"
    "olXSWI\030\003 \001(\0132\'.switchmodule.SwitchDiscre"
    "teControlXSWI\"W\n\017ProtectedSwitch\022D\n\023cond"
    "uctingEquipment\030\001 \001(\0132!.commonmodule.Con"
    "ductingEquipmentB\004\200\265\030\001\"\370\001\n\034SwitchDiscret"
    "eControlProfile\022B\n\022controlMessageInfo\030\001 "
    "\001(\0132 .commonmodule.ControlMessageInfoB\004\200"
    "\265\030\001\022@\n\017protectedSwitch\030\002 \001(\0132\035.switchmod"
    "ule.ProtectedSwitchB\010\210\265\030\001\220\265\030\001\022L\n\025switchD"
    "iscreteControl\030\003 \001(\0132#.switchmodule.Swit"
    "chDiscreteControlB\010\210\265\030\001\220\265\030\001:\004\300\363\030\001\"\306\001\n\017Sw"
    "itchEventXSWI\022V\n\034logicalNodeForEventAndS"
    "tatus\030\001 \001(\0132*.commonmodule.LogicalNodeFo"
    "rEventAndStatusB\004\200\265\030\001\0226\n\013DynamicTest\030\002 \001"
    "(\0132!.commonmodule.ENS_DynamicTestKind\022#\n"
    "\003Pos\030\003 \001(\0132\026.commonmodule.PhaseDPS\"y\n\013Sw"
    "itchEvent\0222\n\neventValue\030\001 \001(\0132\030.commonmo"
    "dule.EventValueB\004\200\265\030\001\0226\n\017switchEventXSWI"
    "\030\002 \001(\0132\035.switchmodule.SwitchEventXSWI\"\326\001"
    "\n\022SwitchEventProfile\022>\n\020eventMessageInfo"
    "\030\001 \001(\0132\036.commonmodule.EventMessageInfoB\004"
    "\200\265\030\001\022@\n\017protectedSwitch\030\002 \001(\0132\035.switchmo"
    "dule.ProtectedSwitchB\010\210\265\030\001\220\265\030\001\0228\n\013switch"
    "Event\030\003 \001(\0132\031.switchmodule.SwitchEventB\010"
    "\210\265\030\001\220\265\030\001:\004\300\363\030\001\"\343\002\n\rSwitchReading\022b\n\"cond"
    "uctingEquipmentTerminalReading\030\001 \001(\01320.c"
    "ommonmodule.ConductingEquipmentTerminalR"
    "eadingB\004\200\265\030\001\0222\n\017diffReadingMMXU\030\002 \001(\0132\031."
    "commonmodule.ReadingMMXU\022*\n\tphaseMMTN\030\003 "
    "\001(\0132\027.commonmodule.PhaseMMTN\022.\n\013readingM"
    "MTR\030\004 \001(\0132\031.commonmodule.ReadingMMTR\022.\n\013"
    "readingMMXU\030\005 \001(\0132\031.commonmodule.Reading"
    "MMXU\022.\n\013readingMMDC\030\006 \001(\0132\031.commonmodule"
    ".ReadingMMDC\"\344\001\n\024SwitchReadingProfile\022B\n"
    "\022readingMessageInfo\030\001 \001(\0132 .commonmodule"
    ".ReadingMessageInfoB\004\200\265\030\001\022@\n\017protectedSw"
    "itch\030\002 \001(\0132\035.switchmodule.ProtectedSwitc"
    "hB\010\210\265\030\001\220\265\030\001\022@\n\rswitchReading\030\003 \003(\0132\033.swi"
    "tchmodule.SwitchReadingB\014\210\265\030\001\220\265\030\001\230\265\030\002:\004\300"
    "\363\030\001\"\203\002\n\020SwitchStatusXSWI\022V\n\034logicalNodeF"
    "orEventAndStatus\030\001 \001(\0132*.commonmodule.Lo"
    "gicalNodeForEventAndStatusB\004\200\265\030\001\0226\n\013Dyna"
    "micTest\030\002 \001(\0132!.commonmodule.ENS_Dynamic"
    "TestKind\022#\n\003Pos\030\004 \001(\0132\026.commonmodule.Pha"
    "seDPS\022:\n\020ProtectionPickup\030\005 \001(\0132\026.common"
    "module.PhaseSPSB\010\210\265\030\001\220\265\030\001\"~\n\014SwitchStatu"
    "s\0224\n\013statusValue\030\001 \001(\0132\031.commonmodule.St"
    "atusValueB\004\200\265\030\001\0228\n\020switchStatusXSWI\030\002 \001("
    "\0132\036.switchmodule.SwitchStatusXSWI\"\333\001\n\023Sw"
    "itchStatusProfile\022@\n\021statusMessageInfo\030\001"
    " \001(\0132\037.commonmodule.StatusMessageInfoB\004\200"
    "\265\030\001\022@\n\017protectedSwitch\030\002 \001(\0132\035.switchmod"
    "ule.ProtectedSwitchB\010\210\265\030\001\220\265\030\001\022:\n\014switchS"
    "tatus\030\003 \001(\0132\032.switchmodule.SwitchStatusB"
    "\010\210\265\030\001\220\265\030\001:\004\300\363\030\001B\204\001\n\024openfmb.switchmodule"
    "P\001ZSgitlab.com/openfmb/psm/ops/protobuf/"
    "go-openfmb-ops-protobuf/v2/openfmb/switc"
    "hmodule\252\002\024openfmb.switchmoduleb\006proto3"
};
static const ::_pbi::DescriptorTable* PROTOBUF_NONNULL const
    descriptor_table_switchmodule_2fswitchmodule_2eproto_deps[2] = {
        &::descriptor_table_commonmodule_2fcommonmodule_2eproto,
        &::descriptor_table_uml_2eproto,
};
static ::absl::once_flag descriptor_table_switchmodule_2fswitchmodule_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_switchmodule_2fswitchmodule_2eproto = {
    false,
    false,
    2718,
    descriptor_table_protodef_switchmodule_2fswitchmodule_2eproto,
    "switchmodule/switchmodule.proto",
    &descriptor_table_switchmodule_2fswitchmodule_2eproto_once,
    descriptor_table_switchmodule_2fswitchmodule_2eproto_deps,
    2,
    12,
    schemas,
    file_default_instances,
    TableStruct_switchmodule_2fswitchmodule_2eproto::offsets,
    file_level_enum_descriptors_switchmodule_2fswitchmodule_2eproto,
    file_level_service_descriptors_switchmodule_2fswitchmodule_2eproto,
};
namespace switchmodule {
// ===================================================================

class SwitchDiscreteControlXSWI::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<SwitchDiscreteControlXSWI>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SwitchDiscreteControlXSWI, _impl_._has_bits_);
};

void SwitchDiscreteControlXSWI::clear_logicalnodeforcontrol() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.logicalnodeforcontrol_ != nullptr) _impl_.logicalnodeforcontrol_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void SwitchDiscreteControlXSWI::clear_pos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pos_ != nullptr) _impl_.pos_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void SwitchDiscreteControlXSWI::clear_resetprotectionpickup() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.resetprotectionpickup_ != nullptr) _impl_.resetprotectionpickup_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
SwitchDiscreteControlXSWI::SwitchDiscreteControlXSWI(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SwitchDiscreteControlXSWI_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:switchmodule.SwitchDiscreteControlXSWI)
}
PROTOBUF_NDEBUG_INLINE SwitchDiscreteControlXSWI::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::switchmodule::SwitchDiscreteControlXSWI& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SwitchDiscreteControlXSWI::SwitchDiscreteControlXSWI(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const SwitchDiscreteControlXSWI& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SwitchDiscreteControlXSWI_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SwitchDiscreteControlXSWI* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.logicalnodeforcontrol_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.logicalnodeforcontrol_)
                : nullptr;
  _impl_.pos_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.pos_)
                : nullptr;
  _impl_.resetprotectionpickup_ = ((cached_has_bits & 0x00000004u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.resetprotectionpickup_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:switchmodule.SwitchDiscreteControlXSWI)
}
PROTOBUF_NDEBUG_INLINE SwitchDiscreteControlXSWI::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void SwitchDiscreteControlXSWI::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, logicalnodeforcontrol_),
           0,
           offsetof(Impl_, resetprotectionpickup_) -
               offsetof(Impl_, logicalnodeforcontrol_) +
               sizeof(Impl_::resetprotectionpickup_));
}
SwitchDiscreteControlXSWI::~SwitchDiscreteControlXSWI() {
  // @@protoc_insertion_point(destructor:switchmodule.SwitchDiscreteControlXSWI)
  SharedDtor(*this);
}
inline void SwitchDiscreteControlXSWI::SharedDtor(MessageLite& self) {
  SwitchDiscreteControlXSWI& this_ = static_cast<SwitchDiscreteControlXSWI&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.logicalnodeforcontrol_;
  delete this_._impl_.pos_;
  delete this_._impl_.resetprotectionpickup_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL SwitchDiscreteControlXSWI::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SwitchDiscreteControlXSWI(arena);
}
constexpr auto SwitchDiscreteControlXSWI::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SwitchDiscreteControlXSWI),
                                            alignof(SwitchDiscreteControlXSWI));
}
constexpr auto SwitchDiscreteControlXSWI::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SwitchDiscreteControlXSWI_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SwitchDiscreteControlXSWI::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SwitchDiscreteControlXSWI>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SwitchDiscreteControlXSWI::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SwitchDiscreteControlXSWI>(), &SwitchDiscreteControlXSWI::ByteSizeLong,
              &SwitchDiscreteControlXSWI::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SwitchDiscreteControlXSWI, _impl_._cached_size_),
          false,
      },
      &SwitchDiscreteControlXSWI::kDescriptorMethods,
      &descriptor_table_switchmodule_2fswitchmodule_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SwitchDiscreteControlXSWI_class_data_ =
        SwitchDiscreteControlXSWI::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SwitchDiscreteControlXSWI::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SwitchDiscreteControlXSWI_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SwitchDiscreteControlXSWI_class_data_.tc_table);
  return SwitchDiscreteControlXSWI_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 3, 0, 2>
SwitchDiscreteControlXSWI::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SwitchDiscreteControlXSWI, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    SwitchDiscreteControlXSWI_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::switchmodule::SwitchDiscreteControlXSWI>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .commonmodule.LogicalNodeForControl logicalNodeForControl = 1 [(.uml.option_parent_message) = true];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SwitchDiscreteControlXSWI, _impl_.logicalnodeforcontrol_)}},
    // .commonmodule.PhaseDPC Pos = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(SwitchDiscreteControlXSWI, _impl_.pos_)}},
    // .commonmodule.ControlSPC ResetProtectionPickup = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(SwitchDiscreteControlXSWI, _impl_.resetprotectionpickup_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .commonmodule.LogicalNodeForControl logicalNodeForControl = 1 [(.uml.option_parent_message) = true];
    {PROTOBUF_FIELD_OFFSET(SwitchDiscreteControlXSWI, _impl_.logicalnodeforcontrol_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .commonmodule.PhaseDPC Pos = 2;
    {PROTOBUF_FIELD_OFFSET(SwitchDiscreteControlXSWI, _impl_.pos_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .commonmodule.ControlSPC ResetProtectionPickup = 3;
    {PROTOBUF_FIELD_OFFSET(SwitchDiscreteControlXSWI, _impl_.resetprotectionpickup_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::commonmodule::LogicalNodeForControl>()},
      {::_pbi::TcParser::GetTable<::commonmodule::PhaseDPC>()},
      {::_pbi::TcParser::GetTable<::commonmodule::ControlSPC>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void SwitchDiscreteControlXSWI::Clear() {
// @@protoc_insertion_point(message_clear_start:switchmodule.SwitchDiscreteControlXSWI)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.logicalnodeforcontrol_ != nullptr);
      _impl_.logicalnodeforcontrol_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.pos_ != nullptr);
      _impl_.pos_->Clear();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(_impl_.resetprotectionpickup_ != nullptr);
      _impl_.resetprotectionpickup_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SwitchDiscreteControlXSWI::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SwitchDiscreteControlXSWI& this_ = static_cast<const SwitchDiscreteControlXSWI&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SwitchDiscreteControlXSWI::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SwitchDiscreteControlXSWI& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:switchmodule.SwitchDiscreteControlXSWI)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .commonmodule.LogicalNodeForControl logicalNodeForControl = 1 [(.uml.option_parent_message) = true];
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.logicalnodeforcontrol_, this_._impl_.logicalnodeforcontrol_->GetCachedSize(), target,
        stream);
  }

  // .commonmodule.PhaseDPC Pos = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.pos_, this_._impl_.pos_->GetCachedSize(), target,
        stream);
  }

  // .commonmodule.ControlSPC ResetProtectionPickup = 3;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.resetprotectionpickup_, this_._impl_.resetprotectionpickup_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:switchmodule.SwitchDiscreteControlXSWI)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SwitchDiscreteControlXSWI::ByteSizeLong(const MessageLite& base) {
  const SwitchDiscreteControlXSWI& this_ = static_cast<const SwitchDiscreteControlXSWI&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SwitchDiscreteControlXSWI::ByteSizeLong() const {
  const SwitchDiscreteControlXSWI& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:switchmodule.SwitchDiscreteControlXSWI)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // .commonmodule.LogicalNodeForControl logicalNodeForControl = 1 [(.uml.option_parent_message) = true];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.logicalnodeforcontrol_);
    }
    // .commonmodule.PhaseDPC Pos = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.pos_);
    }
    // .commonmodule.ControlSPC ResetProtectionPickup = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.resetprotectionpickup_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void SwitchDiscreteControlXSWI::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SwitchDiscreteControlXSWI*>(&to_msg);
  auto& from = static_cast<const SwitchDiscreteControlXSWI&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:switchmodule.SwitchDiscreteControlXSWI)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.logicalnodeforcontrol_ != nullptr);
      if (_this->_impl_.logicalnodeforcontrol_ == nullptr) {
        _this->_impl_.logicalnodeforcontrol_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.logicalnodeforcontrol_);
      } else {
        _this->_impl_.logicalnodeforcontrol_->MergeFrom(*from._impl_.logicalnodeforcontrol_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.pos_ != nullptr);
      if (_this->_impl_.pos_ == nullptr) {
        _this->_impl_.pos_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.pos_);
      } else {
        _this->_impl_.pos_->MergeFrom(*from._impl_.pos_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(from._impl_.resetprotectionpickup_ != nullptr);
      if (_this->_impl_.resetprotectionpickup_ == nullptr) {
        _this->_impl_.resetprotectionpickup_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.resetprotectionpickup_);
      } else {
        _this->_impl_.resetprotectionpickup_->MergeFrom(*from._impl_.resetprotectionpickup_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SwitchDiscreteControlXSWI::CopyFrom(const SwitchDiscreteControlXSWI& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:switchmodule.SwitchDiscreteControlXSWI)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SwitchDiscreteControlXSWI::InternalSwap(SwitchDiscreteControlXSWI* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SwitchDiscreteControlXSWI, _impl_.resetprotectionpickup_)
      + sizeof(SwitchDiscreteControlXSWI::_impl_.resetprotectionpickup_)
      - PROTOBUF_FIELD_OFFSET(SwitchDiscreteControlXSWI, _impl_.logicalnodeforcontrol_)>(
          reinterpret_cast<char*>(&_impl_.logicalnodeforcontrol_),
          reinterpret_cast<char*>(&other->_impl_.logicalnodeforcontrol_));
}

::google::protobuf::Metadata SwitchDiscreteControlXSWI::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SwitchDiscreteControl::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<SwitchDiscreteControl>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SwitchDiscreteControl, _impl_._has_bits_);
};

void SwitchDiscreteControl::clear_controlvalue() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.controlvalue_ != nullptr) _impl_.controlvalue_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void SwitchDiscreteControl::clear_check() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.check_ != nullptr) _impl_.check_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
SwitchDiscreteControl::SwitchDiscreteControl(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SwitchDiscreteControl_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:switchmodule.SwitchDiscreteControl)
}
PROTOBUF_NDEBUG_INLINE SwitchDiscreteControl::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::switchmodule::SwitchDiscreteControl& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SwitchDiscreteControl::SwitchDiscreteControl(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const SwitchDiscreteControl& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SwitchDiscreteControl_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SwitchDiscreteControl* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.controlvalue_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.controlvalue_)
                : nullptr;
  _impl_.check_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.check_)
                : nullptr;
  _impl_.switchdiscretecontrolxswi_ = ((cached_has_bits & 0x00000004u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.switchdiscretecontrolxswi_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:switchmodule.SwitchDiscreteControl)
}
PROTOBUF_NDEBUG_INLINE SwitchDiscreteControl::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void SwitchDiscreteControl::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, controlvalue_),
           0,
           offsetof(Impl_, switchdiscretecontrolxswi_) -
               offsetof(Impl_, controlvalue_) +
               sizeof(Impl_::switchdiscretecontrolxswi_));
}
SwitchDiscreteControl::~SwitchDiscreteControl() {
  // @@protoc_insertion_point(destructor:switchmodule.SwitchDiscreteControl)
  SharedDtor(*this);
}
inline void SwitchDiscreteControl::SharedDtor(MessageLite& self) {
  SwitchDiscreteControl& this_ = static_cast<SwitchDiscreteControl&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.controlvalue_;
  delete this_._impl_.check_;
  delete this_._impl_.switchdiscretecontrolxswi_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL SwitchDiscreteControl::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SwitchDiscreteControl(arena);
}
constexpr auto SwitchDiscreteControl::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SwitchDiscreteControl),
                                            alignof(SwitchDiscreteControl));
}
constexpr auto SwitchDiscreteControl::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SwitchDiscreteControl_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SwitchDiscreteControl::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SwitchDiscreteControl>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SwitchDiscreteControl::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SwitchDiscreteControl>(), &SwitchDiscreteControl::ByteSizeLong,
              &SwitchDiscreteControl::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SwitchDiscreteControl, _impl_._cached_size_),
          false,
      },
      &SwitchDiscreteControl::kDescriptorMethods,
      &descriptor_table_switchmodule_2fswitchmodule_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SwitchDiscreteControl_class_data_ =
        SwitchDiscreteControl::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SwitchDiscreteControl::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SwitchDiscreteControl_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SwitchDiscreteControl_class_data_.tc_table);
  return SwitchDiscreteControl_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 3, 0, 2>
SwitchDiscreteControl::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SwitchDiscreteControl, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    SwitchDiscreteControl_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::switchmodule::SwitchDiscreteControl>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .commonmodule.ControlValue controlValue = 1 [(.uml.option_parent_message) = true];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SwitchDiscreteControl, _impl_.controlvalue_)}},
    // .commonmodule.CheckConditions check = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(SwitchDiscreteControl, _impl_.check_)}},
    // .switchmodule.SwitchDiscreteControlXSWI switchDiscreteControlXSWI = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(SwitchDiscreteControl, _impl_.switchdiscretecontrolxswi_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .commonmodule.ControlValue controlValue = 1 [(.uml.option_parent_message) = true];
    {PROTOBUF_FIELD_OFFSET(SwitchDiscreteControl, _impl_.controlvalue_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .commonmodule.CheckConditions check = 2;
    {PROTOBUF_FIELD_OFFSET(SwitchDiscreteControl, _impl_.check_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .switchmodule.SwitchDiscreteControlXSWI switchDiscreteControlXSWI = 3;
    {PROTOBUF_FIELD_OFFSET(SwitchDiscreteControl, _impl_.switchdiscretecontrolxswi_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::commonmodule::ControlValue>()},
      {::_pbi::TcParser::GetTable<::commonmodule::CheckConditions>()},
      {::_pbi::TcParser::GetTable<::switchmodule::SwitchDiscreteControlXSWI>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void SwitchDiscreteControl::Clear() {
// @@protoc_insertion_point(message_clear_start:switchmodule.SwitchDiscreteControl)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.controlvalue_ != nullptr);
      _impl_.controlvalue_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.check_ != nullptr);
      _impl_.check_->Clear();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(_impl_.switchdiscretecontrolxswi_ != nullptr);
      _impl_.switchdiscretecontrolxswi_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SwitchDiscreteControl::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SwitchDiscreteControl& this_ = static_cast<const SwitchDiscreteControl&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SwitchDiscreteControl::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SwitchDiscreteControl& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:switchmodule.SwitchDiscreteControl)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .commonmodule.ControlValue controlValue = 1 [(.uml.option_parent_message) = true];
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.controlvalue_, this_._impl_.controlvalue_->GetCachedSize(), target,
        stream);
  }

  // .commonmodule.CheckConditions check = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.check_, this_._impl_.check_->GetCachedSize(), target,
        stream);
  }

  // .switchmodule.SwitchDiscreteControlXSWI switchDiscreteControlXSWI = 3;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.switchdiscretecontrolxswi_, this_._impl_.switchdiscretecontrolxswi_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:switchmodule.SwitchDiscreteControl)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SwitchDiscreteControl::ByteSizeLong(const MessageLite& base) {
  const SwitchDiscreteControl& this_ = static_cast<const SwitchDiscreteControl&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SwitchDiscreteControl::ByteSizeLong() const {
  const SwitchDiscreteControl& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:switchmodule.SwitchDiscreteControl)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // .commonmodule.ControlValue controlValue = 1 [(.uml.option_parent_message) = true];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.controlvalue_);
    }
    // .commonmodule.CheckConditions check = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.check_);
    }
    // .switchmodule.SwitchDiscreteControlXSWI switchDiscreteControlXSWI = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.switchdiscretecontrolxswi_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void SwitchDiscreteControl::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SwitchDiscreteControl*>(&to_msg);
  auto& from = static_cast<const SwitchDiscreteControl&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:switchmodule.SwitchDiscreteControl)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.controlvalue_ != nullptr);
      if (_this->_impl_.controlvalue_ == nullptr) {
        _this->_impl_.controlvalue_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.controlvalue_);
      } else {
        _this->_impl_.controlvalue_->MergeFrom(*from._impl_.controlvalue_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.check_ != nullptr);
      if (_this->_impl_.check_ == nullptr) {
        _this->_impl_.check_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.check_);
      } else {
        _this->_impl_.check_->MergeFrom(*from._impl_.check_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(from._impl_.switchdiscretecontrolxswi_ != nullptr);
      if (_this->_impl_.switchdiscretecontrolxswi_ == nullptr) {
        _this->_impl_.switchdiscretecontrolxswi_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.switchdiscretecontrolxswi_);
      } else {
        _this->_impl_.switchdiscretecontrolxswi_->MergeFrom(*from._impl_.switchdiscretecontrolxswi_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SwitchDiscreteControl::CopyFrom(const SwitchDiscreteControl& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:switchmodule.SwitchDiscreteControl)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SwitchDiscreteControl::InternalSwap(SwitchDiscreteControl* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SwitchDiscreteControl, _impl_.switchdiscretecontrolxswi_)
      + sizeof(SwitchDiscreteControl::_impl_.switchdiscretecontrolxswi_)
      - PROTOBUF_FIELD_OFFSET(SwitchDiscreteControl, _impl_.controlvalue_)>(
          reinterpret_cast<char*>(&_impl_.controlvalue_),
          reinterpret_cast<char*>(&other->_impl_.controlvalue_));
}

::google::protobuf::Metadata SwitchDiscreteControl::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ProtectedSwitch::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ProtectedSwitch>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ProtectedSwitch, _impl_._has_bits_);
};

void ProtectedSwitch::clear_conductingequipment() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.conductingequipment_ != nullptr) _impl_.conductingequipment_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
ProtectedSwitch::ProtectedSwitch(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ProtectedSwitch_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:switchmodule.ProtectedSwitch)
}
PROTOBUF_NDEBUG_INLINE ProtectedSwitch::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::switchmodule::ProtectedSwitch& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

ProtectedSwitch::ProtectedSwitch(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ProtectedSwitch& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ProtectedSwitch_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ProtectedSwitch* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.conductingequipment_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.conductingequipment_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:switchmodule.ProtectedSwitch)
}
PROTOBUF_NDEBUG_INLINE ProtectedSwitch::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void ProtectedSwitch::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.conductingequipment_ = {};
}
ProtectedSwitch::~ProtectedSwitch() {
  // @@protoc_insertion_point(destructor:switchmodule.ProtectedSwitch)
  SharedDtor(*this);
}
inline void ProtectedSwitch::SharedDtor(MessageLite& self) {
  ProtectedSwitch& this_ = static_cast<ProtectedSwitch&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.conductingequipment_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ProtectedSwitch::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ProtectedSwitch(arena);
}
constexpr auto ProtectedSwitch::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ProtectedSwitch),
                                            alignof(ProtectedSwitch));
}
constexpr auto ProtectedSwitch::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ProtectedSwitch_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ProtectedSwitch::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ProtectedSwitch>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ProtectedSwitch::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ProtectedSwitch>(), &ProtectedSwitch::ByteSizeLong,
              &ProtectedSwitch::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ProtectedSwitch, _impl_._cached_size_),
          false,
      },
      &ProtectedSwitch::kDescriptorMethods,
      &descriptor_table_switchmodule_2fswitchmodule_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ProtectedSwitch_class_data_ =
        ProtectedSwitch::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ProtectedSwitch::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ProtectedSwitch_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ProtectedSwitch_class_data_.tc_table);
  return ProtectedSwitch_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2>
ProtectedSwitch::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ProtectedSwitch, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    ProtectedSwitch_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::switchmodule::ProtectedSwitch>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .commonmodule.ConductingEquipment conductingEquipment = 1 [(.uml.option_parent_message) = true];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ProtectedSwitch, _impl_.conductingequipment_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .commonmodule.ConductingEquipment conductingEquipment = 1 [(.uml.option_parent_message) = true];
    {PROTOBUF_FIELD_OFFSET(ProtectedSwitch, _impl_.conductingequipment_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::commonmodule::ConductingEquipment>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void ProtectedSwitch::Clear() {
// @@protoc_insertion_point(message_clear_start:switchmodule.ProtectedSwitch)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.conductingequipment_ != nullptr);
    _impl_.conductingequipment_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ProtectedSwitch::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ProtectedSwitch& this_ = static_cast<const ProtectedSwitch&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ProtectedSwitch::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ProtectedSwitch& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:switchmodule.ProtectedSwitch)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .commonmodule.ConductingEquipment conductingEquipment = 1 [(.uml.option_parent_message) = true];
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.conductingequipment_, this_._impl_.conductingequipment_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:switchmodule.ProtectedSwitch)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ProtectedSwitch::ByteSizeLong(const MessageLite& base) {
  const ProtectedSwitch& this_ = static_cast<const ProtectedSwitch&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ProtectedSwitch::ByteSizeLong() const {
  const ProtectedSwitch& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:switchmodule.ProtectedSwitch)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // .commonmodule.ConductingEquipment conductingEquipment = 1 [(.uml.option_parent_message) = true];
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.conductingequipment_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ProtectedSwitch::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ProtectedSwitch*>(&to_msg);
  auto& from = static_cast<const ProtectedSwitch&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:switchmodule.ProtectedSwitch)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(from._impl_.conductingequipment_ != nullptr);
    if (_this->_impl_.conductingequipment_ == nullptr) {
      _this->_impl_.conductingequipment_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.conductingequipment_);
    } else {
      _this->_impl_.conductingequipment_->MergeFrom(*from._impl_.conductingequipment_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ProtectedSwitch::CopyFrom(const ProtectedSwitch& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:switchmodule.ProtectedSwitch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ProtectedSwitch::InternalSwap(ProtectedSwitch* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.conductingequipment_, other->_impl_.conductingequipment_);
}

::google::protobuf::Metadata ProtectedSwitch::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SwitchDiscreteControlProfile::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<SwitchDiscreteControlProfile>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SwitchDiscreteControlProfile, _impl_._has_bits_);
};

void SwitchDiscreteControlProfile::clear_controlmessageinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.controlmessageinfo_ != nullptr) _impl_.controlmessageinfo_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
SwitchDiscreteControlProfile::SwitchDiscreteControlProfile(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SwitchDiscreteControlProfile_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:switchmodule.SwitchDiscreteControlProfile)
}
PROTOBUF_NDEBUG_INLINE SwitchDiscreteControlProfile::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::switchmodule::SwitchDiscreteControlProfile& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SwitchDiscreteControlProfile::SwitchDiscreteControlProfile(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const SwitchDiscreteControlProfile& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SwitchDiscreteControlProfile_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SwitchDiscreteControlProfile* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.controlmessageinfo_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.controlmessageinfo_)
                : nullptr;
  _impl_.protectedswitch_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.protectedswitch_)
                : nullptr;
  _impl_.switchdiscretecontrol_ = ((cached_has_bits & 0x00000004u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.switchdiscretecontrol_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:switchmodule.SwitchDiscreteControlProfile)
}
PROTOBUF_NDEBUG_INLINE SwitchDiscreteControlProfile::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void SwitchDiscreteControlProfile::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, controlmessageinfo_),
           0,
           offsetof(Impl_, switchdiscretecontrol_) -
               offsetof(Impl_, controlmessageinfo_) +
               sizeof(Impl_::switchdiscretecontrol_));
}
SwitchDiscreteControlProfile::~SwitchDiscreteControlProfile() {
  // @@protoc_insertion_point(destructor:switchmodule.SwitchDiscreteControlProfile)
  SharedDtor(*this);
}
inline void SwitchDiscreteControlProfile::SharedDtor(MessageLite& self) {
  SwitchDiscreteControlProfile& this_ = static_cast<SwitchDiscreteControlProfile&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.controlmessageinfo_;
  delete this_._impl_.protectedswitch_;
  delete this_._impl_.switchdiscretecontrol_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL SwitchDiscreteControlProfile::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SwitchDiscreteControlProfile(arena);
}
constexpr auto SwitchDiscreteControlProfile::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SwitchDiscreteControlProfile),
                                            alignof(SwitchDiscreteControlProfile));
}
constexpr auto SwitchDiscreteControlProfile::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SwitchDiscreteControlProfile_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SwitchDiscreteControlProfile::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SwitchDiscreteControlProfile>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SwitchDiscreteControlProfile::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SwitchDiscreteControlProfile>(), &SwitchDiscreteControlProfile::ByteSizeLong,
              &SwitchDiscreteControlProfile::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SwitchDiscreteControlProfile, _impl_._cached_size_),
          false,
      },
      &SwitchDiscreteControlProfile::kDescriptorMethods,
      &descriptor_table_switchmodule_2fswitchmodule_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SwitchDiscreteControlProfile_class_data_ =
        SwitchDiscreteControlProfile::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SwitchDiscreteControlProfile::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SwitchDiscreteControlProfile_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SwitchDiscreteControlProfile_class_data_.tc_table);
  return SwitchDiscreteControlProfile_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 3, 0, 2>
SwitchDiscreteControlProfile::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SwitchDiscreteControlProfile, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    SwitchDiscreteControlProfile_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::switchmodule::SwitchDiscreteControlProfile>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .commonmodule.ControlMessageInfo controlMessageInfo = 1 [(.uml.option_parent_message) = true];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SwitchDiscreteControlProfile, _impl_.controlmessageinfo_)}},
    // .switchmodule.ProtectedSwitch protectedSwitch = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(SwitchDiscreteControlProfile, _impl_.protectedswitch_)}},
    // .switchmodule.SwitchDiscreteControl switchDiscreteControl = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(SwitchDiscreteControlProfile, _impl_.switchdiscretecontrol_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .commonmodule.ControlMessageInfo controlMessageInfo = 1 [(.uml.option_parent_message) = true];
    {PROTOBUF_FIELD_OFFSET(SwitchDiscreteControlProfile, _impl_.controlmessageinfo_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .switchmodule.ProtectedSwitch protectedSwitch = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
    {PROTOBUF_FIELD_OFFSET(SwitchDiscreteControlProfile, _impl_.protectedswitch_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .switchmodule.SwitchDiscreteControl switchDiscreteControl = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
    {PROTOBUF_FIELD_OFFSET(SwitchDiscreteControlProfile, _impl_.switchdiscretecontrol_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::commonmodule::ControlMessageInfo>()},
      {::_pbi::TcParser::GetTable<::switchmodule::ProtectedSwitch>()},
      {::_pbi::TcParser::GetTable<::switchmodule::SwitchDiscreteControl>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void SwitchDiscreteControlProfile::Clear() {
// @@protoc_insertion_point(message_clear_start:switchmodule.SwitchDiscreteControlProfile)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.controlmessageinfo_ != nullptr);
      _impl_.controlmessageinfo_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.protectedswitch_ != nullptr);
      _impl_.protectedswitch_->Clear();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(_impl_.switchdiscretecontrol_ != nullptr);
      _impl_.switchdiscretecontrol_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SwitchDiscreteControlProfile::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SwitchDiscreteControlProfile& this_ = static_cast<const SwitchDiscreteControlProfile&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SwitchDiscreteControlProfile::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SwitchDiscreteControlProfile& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:switchmodule.SwitchDiscreteControlProfile)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .commonmodule.ControlMessageInfo controlMessageInfo = 1 [(.uml.option_parent_message) = true];
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.controlmessageinfo_, this_._impl_.controlmessageinfo_->GetCachedSize(), target,
        stream);
  }

  // .switchmodule.ProtectedSwitch protectedSwitch = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.protectedswitch_, this_._impl_.protectedswitch_->GetCachedSize(), target,
        stream);
  }

  // .switchmodule.SwitchDiscreteControl switchDiscreteControl = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.switchdiscretecontrol_, this_._impl_.switchdiscretecontrol_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:switchmodule.SwitchDiscreteControlProfile)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SwitchDiscreteControlProfile::ByteSizeLong(const MessageLite& base) {
  const SwitchDiscreteControlProfile& this_ = static_cast<const SwitchDiscreteControlProfile&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SwitchDiscreteControlProfile::ByteSizeLong() const {
  const SwitchDiscreteControlProfile& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:switchmodule.SwitchDiscreteControlProfile)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // .commonmodule.ControlMessageInfo controlMessageInfo = 1 [(.uml.option_parent_message) = true];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.controlmessageinfo_);
    }
    // .switchmodule.ProtectedSwitch protectedSwitch = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.protectedswitch_);
    }
    // .switchmodule.SwitchDiscreteControl switchDiscreteControl = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.switchdiscretecontrol_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void SwitchDiscreteControlProfile::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SwitchDiscreteControlProfile*>(&to_msg);
  auto& from = static_cast<const SwitchDiscreteControlProfile&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:switchmodule.SwitchDiscreteControlProfile)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.controlmessageinfo_ != nullptr);
      if (_this->_impl_.controlmessageinfo_ == nullptr) {
        _this->_impl_.controlmessageinfo_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.controlmessageinfo_);
      } else {
        _this->_impl_.controlmessageinfo_->MergeFrom(*from._impl_.controlmessageinfo_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.protectedswitch_ != nullptr);
      if (_this->_impl_.protectedswitch_ == nullptr) {
        _this->_impl_.protectedswitch_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.protectedswitch_);
      } else {
        _this->_impl_.protectedswitch_->MergeFrom(*from._impl_.protectedswitch_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(from._impl_.switchdiscretecontrol_ != nullptr);
      if (_this->_impl_.switchdiscretecontrol_ == nullptr) {
        _this->_impl_.switchdiscretecontrol_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.switchdiscretecontrol_);
      } else {
        _this->_impl_.switchdiscretecontrol_->MergeFrom(*from._impl_.switchdiscretecontrol_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SwitchDiscreteControlProfile::CopyFrom(const SwitchDiscreteControlProfile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:switchmodule.SwitchDiscreteControlProfile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SwitchDiscreteControlProfile::InternalSwap(SwitchDiscreteControlProfile* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SwitchDiscreteControlProfile, _impl_.switchdiscretecontrol_)
      + sizeof(SwitchDiscreteControlProfile::_impl_.switchdiscretecontrol_)
      - PROTOBUF_FIELD_OFFSET(SwitchDiscreteControlProfile, _impl_.controlmessageinfo_)>(
          reinterpret_cast<char*>(&_impl_.controlmessageinfo_),
          reinterpret_cast<char*>(&other->_impl_.controlmessageinfo_));
}

::google::protobuf::Metadata SwitchDiscreteControlProfile::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SwitchEventXSWI::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<SwitchEventXSWI>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SwitchEventXSWI, _impl_._has_bits_);
};

void SwitchEventXSWI::clear_logicalnodeforeventandstatus() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.logicalnodeforeventandstatus_ != nullptr) _impl_.logicalnodeforeventandstatus_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void SwitchEventXSWI::clear_dynamictest() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.dynamictest_ != nullptr) _impl_.dynamictest_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void SwitchEventXSWI::clear_pos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pos_ != nullptr) _impl_.pos_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
SwitchEventXSWI::SwitchEventXSWI(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SwitchEventXSWI_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:switchmodule.SwitchEventXSWI)
}
PROTOBUF_NDEBUG_INLINE SwitchEventXSWI::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::switchmodule::SwitchEventXSWI& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SwitchEventXSWI::SwitchEventXSWI(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const SwitchEventXSWI& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SwitchEventXSWI_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SwitchEventXSWI* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.logicalnodeforeventandstatus_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.logicalnodeforeventandstatus_)
                : nullptr;
  _impl_.dynamictest_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.dynamictest_)
                : nullptr;
  _impl_.pos_ = ((cached_has_bits & 0x00000004u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.pos_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:switchmodule.SwitchEventXSWI)
}
PROTOBUF_NDEBUG_INLINE SwitchEventXSWI::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void SwitchEventXSWI::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, logicalnodeforeventandstatus_),
           0,
           offsetof(Impl_, pos_) -
               offsetof(Impl_, logicalnodeforeventandstatus_) +
               sizeof(Impl_::pos_));
}
SwitchEventXSWI::~SwitchEventXSWI() {
  // @@protoc_insertion_point(destructor:switchmodule.SwitchEventXSWI)
  SharedDtor(*this);
}
inline void SwitchEventXSWI::SharedDtor(MessageLite& self) {
  SwitchEventXSWI& this_ = static_cast<SwitchEventXSWI&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.logicalnodeforeventandstatus_;
  delete this_._impl_.dynamictest_;
  delete this_._impl_.pos_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL SwitchEventXSWI::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SwitchEventXSWI(arena);
}
constexpr auto SwitchEventXSWI::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SwitchEventXSWI),
                                            alignof(SwitchEventXSWI));
}
constexpr auto SwitchEventXSWI::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SwitchEventXSWI_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SwitchEventXSWI::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SwitchEventXSWI>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SwitchEventXSWI::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SwitchEventXSWI>(), &SwitchEventXSWI::ByteSizeLong,
              &SwitchEventXSWI::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SwitchEventXSWI, _impl_._cached_size_),
          false,
      },
      &SwitchEventXSWI::kDescriptorMethods,
      &descriptor_table_switchmodule_2fswitchmodule_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SwitchEventXSWI_class_data_ =
        SwitchEventXSWI::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SwitchEventXSWI::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SwitchEventXSWI_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SwitchEventXSWI_class_data_.tc_table);
  return SwitchEventXSWI_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 3, 0, 2>
SwitchEventXSWI::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SwitchEventXSWI, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    SwitchEventXSWI_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::switchmodule::SwitchEventXSWI>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .commonmodule.LogicalNodeForEventAndStatus logicalNodeForEventAndStatus = 1 [(.uml.option_parent_message) = true];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SwitchEventXSWI, _impl_.logicalnodeforeventandstatus_)}},
    // .commonmodule.ENS_DynamicTestKind DynamicTest = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(SwitchEventXSWI, _impl_.dynamictest_)}},
    // .commonmodule.PhaseDPS Pos = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(SwitchEventXSWI, _impl_.pos_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .commonmodule.LogicalNodeForEventAndStatus logicalNodeForEventAndStatus = 1 [(.uml.option_parent_message) = true];
    {PROTOBUF_FIELD_OFFSET(SwitchEventXSWI, _impl_.logicalnodeforeventandstatus_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .commonmodule.ENS_DynamicTestKind DynamicTest = 2;
    {PROTOBUF_FIELD_OFFSET(SwitchEventXSWI, _impl_.dynamictest_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .commonmodule.PhaseDPS Pos = 3;
    {PROTOBUF_FIELD_OFFSET(SwitchEventXSWI, _impl_.pos_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::commonmodule::LogicalNodeForEventAndStatus>()},
      {::_pbi::TcParser::GetTable<::commonmodule::ENS_DynamicTestKind>()},
      {::_pbi::TcParser::GetTable<::commonmodule::PhaseDPS>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void SwitchEventXSWI::Clear() {
// @@protoc_insertion_point(message_clear_start:switchmodule.SwitchEventXSWI)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.logicalnodeforeventandstatus_ != nullptr);
      _impl_.logicalnodeforeventandstatus_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.dynamictest_ != nullptr);
      _impl_.dynamictest_->Clear();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(_impl_.pos_ != nullptr);
      _impl_.pos_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SwitchEventXSWI::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SwitchEventXSWI& this_ = static_cast<const SwitchEventXSWI&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SwitchEventXSWI::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SwitchEventXSWI& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:switchmodule.SwitchEventXSWI)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .commonmodule.LogicalNodeForEventAndStatus logicalNodeForEventAndStatus = 1 [(.uml.option_parent_message) = true];
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.logicalnodeforeventandstatus_, this_._impl_.logicalnodeforeventandstatus_->GetCachedSize(), target,
        stream);
  }

  // .commonmodule.ENS_DynamicTestKind DynamicTest = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.dynamictest_, this_._impl_.dynamictest_->GetCachedSize(), target,
        stream);
  }

  // .commonmodule.PhaseDPS Pos = 3;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.pos_, this_._impl_.pos_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:switchmodule.SwitchEventXSWI)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SwitchEventXSWI::ByteSizeLong(const MessageLite& base) {
  const SwitchEventXSWI& this_ = static_cast<const SwitchEventXSWI&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SwitchEventXSWI::ByteSizeLong() const {
  const SwitchEventXSWI& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:switchmodule.SwitchEventXSWI)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // .commonmodule.LogicalNodeForEventAndStatus logicalNodeForEventAndStatus = 1 [(.uml.option_parent_message) = true];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.logicalnodeforeventandstatus_);
    }
    // .commonmodule.ENS_DynamicTestKind DynamicTest = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.dynamictest_);
    }
    // .commonmodule.PhaseDPS Pos = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.pos_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void SwitchEventXSWI::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SwitchEventXSWI*>(&to_msg);
  auto& from = static_cast<const SwitchEventXSWI&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:switchmodule.SwitchEventXSWI)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.logicalnodeforeventandstatus_ != nullptr);
      if (_this->_impl_.logicalnodeforeventandstatus_ == nullptr) {
        _this->_impl_.logicalnodeforeventandstatus_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.logicalnodeforeventandstatus_);
      } else {
        _this->_impl_.logicalnodeforeventandstatus_->MergeFrom(*from._impl_.logicalnodeforeventandstatus_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.dynamictest_ != nullptr);
      if (_this->_impl_.dynamictest_ == nullptr) {
        _this->_impl_.dynamictest_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.dynamictest_);
      } else {
        _this->_impl_.dynamictest_->MergeFrom(*from._impl_.dynamictest_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(from._impl_.pos_ != nullptr);
      if (_this->_impl_.pos_ == nullptr) {
        _this->_impl_.pos_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.pos_);
      } else {
        _this->_impl_.pos_->MergeFrom(*from._impl_.pos_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SwitchEventXSWI::CopyFrom(const SwitchEventXSWI& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:switchmodule.SwitchEventXSWI)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SwitchEventXSWI::InternalSwap(SwitchEventXSWI* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SwitchEventXSWI, _impl_.pos_)
      + sizeof(SwitchEventXSWI::_impl_.pos_)
      - PROTOBUF_FIELD_OFFSET(SwitchEventXSWI, _impl_.logicalnodeforeventandstatus_)>(
          reinterpret_cast<char*>(&_impl_.logicalnodeforeventandstatus_),
          reinterpret_cast<char*>(&other->_impl_.logicalnodeforeventandstatus_));
}

::google::protobuf::Metadata SwitchEventXSWI::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SwitchEvent::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<SwitchEvent>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SwitchEvent, _impl_._has_bits_);
};

void SwitchEvent::clear_eventvalue() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.eventvalue_ != nullptr) _impl_.eventvalue_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
SwitchEvent::SwitchEvent(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SwitchEvent_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:switchmodule.SwitchEvent)
}
PROTOBUF_NDEBUG_INLINE SwitchEvent::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::switchmodule::SwitchEvent& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SwitchEvent::SwitchEvent(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const SwitchEvent& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SwitchEvent_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SwitchEvent* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.eventvalue_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.eventvalue_)
                : nullptr;
  _impl_.switcheventxswi_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.switcheventxswi_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:switchmodule.SwitchEvent)
}
PROTOBUF_NDEBUG_INLINE SwitchEvent::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void SwitchEvent::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, eventvalue_),
           0,
           offsetof(Impl_, switcheventxswi_) -
               offsetof(Impl_, eventvalue_) +
               sizeof(Impl_::switcheventxswi_));
}
SwitchEvent::~SwitchEvent() {
  // @@protoc_insertion_point(destructor:switchmodule.SwitchEvent)
  SharedDtor(*this);
}
inline void SwitchEvent::SharedDtor(MessageLite& self) {
  SwitchEvent& this_ = static_cast<SwitchEvent&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.eventvalue_;
  delete this_._impl_.switcheventxswi_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL SwitchEvent::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SwitchEvent(arena);
}
constexpr auto SwitchEvent::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SwitchEvent),
                                            alignof(SwitchEvent));
}
constexpr auto SwitchEvent::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SwitchEvent_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SwitchEvent::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SwitchEvent>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SwitchEvent::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SwitchEvent>(), &SwitchEvent::ByteSizeLong,
              &SwitchEvent::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SwitchEvent, _impl_._cached_size_),
          false,
      },
      &SwitchEvent::kDescriptorMethods,
      &descriptor_table_switchmodule_2fswitchmodule_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SwitchEvent_class_data_ =
        SwitchEvent::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SwitchEvent::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SwitchEvent_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SwitchEvent_class_data_.tc_table);
  return SwitchEvent_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2>
SwitchEvent::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SwitchEvent, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    SwitchEvent_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::switchmodule::SwitchEvent>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .switchmodule.SwitchEventXSWI switchEventXSWI = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(SwitchEvent, _impl_.switcheventxswi_)}},
    // .commonmodule.EventValue eventValue = 1 [(.uml.option_parent_message) = true];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SwitchEvent, _impl_.eventvalue_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .commonmodule.EventValue eventValue = 1 [(.uml.option_parent_message) = true];
    {PROTOBUF_FIELD_OFFSET(SwitchEvent, _impl_.eventvalue_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .switchmodule.SwitchEventXSWI switchEventXSWI = 2;
    {PROTOBUF_FIELD_OFFSET(SwitchEvent, _impl_.switcheventxswi_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::commonmodule::EventValue>()},
      {::_pbi::TcParser::GetTable<::switchmodule::SwitchEventXSWI>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void SwitchEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:switchmodule.SwitchEvent)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.eventvalue_ != nullptr);
      _impl_.eventvalue_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.switcheventxswi_ != nullptr);
      _impl_.switcheventxswi_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SwitchEvent::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SwitchEvent& this_ = static_cast<const SwitchEvent&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SwitchEvent::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SwitchEvent& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:switchmodule.SwitchEvent)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .commonmodule.EventValue eventValue = 1 [(.uml.option_parent_message) = true];
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.eventvalue_, this_._impl_.eventvalue_->GetCachedSize(), target,
        stream);
  }

  // .switchmodule.SwitchEventXSWI switchEventXSWI = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.switcheventxswi_, this_._impl_.switcheventxswi_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:switchmodule.SwitchEvent)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SwitchEvent::ByteSizeLong(const MessageLite& base) {
  const SwitchEvent& this_ = static_cast<const SwitchEvent&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SwitchEvent::ByteSizeLong() const {
  const SwitchEvent& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:switchmodule.SwitchEvent)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // .commonmodule.EventValue eventValue = 1 [(.uml.option_parent_message) = true];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.eventvalue_);
    }
    // .switchmodule.SwitchEventXSWI switchEventXSWI = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.switcheventxswi_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void SwitchEvent::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SwitchEvent*>(&to_msg);
  auto& from = static_cast<const SwitchEvent&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:switchmodule.SwitchEvent)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.eventvalue_ != nullptr);
      if (_this->_impl_.eventvalue_ == nullptr) {
        _this->_impl_.eventvalue_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.eventvalue_);
      } else {
        _this->_impl_.eventvalue_->MergeFrom(*from._impl_.eventvalue_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.switcheventxswi_ != nullptr);
      if (_this->_impl_.switcheventxswi_ == nullptr) {
        _this->_impl_.switcheventxswi_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.switcheventxswi_);
      } else {
        _this->_impl_.switcheventxswi_->MergeFrom(*from._impl_.switcheventxswi_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SwitchEvent::CopyFrom(const SwitchEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:switchmodule.SwitchEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SwitchEvent::InternalSwap(SwitchEvent* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SwitchEvent, _impl_.switcheventxswi_)
      + sizeof(SwitchEvent::_impl_.switcheventxswi_)
      - PROTOBUF_FIELD_OFFSET(SwitchEvent, _impl_.eventvalue_)>(
          reinterpret_cast<char*>(&_impl_.eventvalue_),
          reinterpret_cast<char*>(&other->_impl_.eventvalue_));
}

::google::protobuf::Metadata SwitchEvent::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SwitchEventProfile::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<SwitchEventProfile>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SwitchEventProfile, _impl_._has_bits_);
};

void SwitchEventProfile::clear_eventmessageinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.eventmessageinfo_ != nullptr) _impl_.eventmessageinfo_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
SwitchEventProfile::SwitchEventProfile(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SwitchEventProfile_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:switchmodule.SwitchEventProfile)
}
PROTOBUF_NDEBUG_INLINE SwitchEventProfile::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::switchmodule::SwitchEventProfile& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SwitchEventProfile::SwitchEventProfile(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const SwitchEventProfile& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SwitchEventProfile_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SwitchEventProfile* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.eventmessageinfo_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.eventmessageinfo_)
                : nullptr;
  _impl_.protectedswitch_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.protectedswitch_)
                : nullptr;
  _impl_.switchevent_ = ((cached_has_bits & 0x00000004u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.switchevent_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:switchmodule.SwitchEventProfile)
}
PROTOBUF_NDEBUG_INLINE SwitchEventProfile::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void SwitchEventProfile::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, eventmessageinfo_),
           0,
           offsetof(Impl_, switchevent_) -
               offsetof(Impl_, eventmessageinfo_) +
               sizeof(Impl_::switchevent_));
}
SwitchEventProfile::~SwitchEventProfile() {
  // @@protoc_insertion_point(destructor:switchmodule.SwitchEventProfile)
  SharedDtor(*this);
}
inline void SwitchEventProfile::SharedDtor(MessageLite& self) {
  SwitchEventProfile& this_ = static_cast<SwitchEventProfile&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.eventmessageinfo_;
  delete this_._impl_.protectedswitch_;
  delete this_._impl_.switchevent_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL SwitchEventProfile::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SwitchEventProfile(arena);
}
constexpr auto SwitchEventProfile::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SwitchEventProfile),
                                            alignof(SwitchEventProfile));
}
constexpr auto SwitchEventProfile::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SwitchEventProfile_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SwitchEventProfile::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SwitchEventProfile>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SwitchEventProfile::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SwitchEventProfile>(), &SwitchEventProfile::ByteSizeLong,
              &SwitchEventProfile::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SwitchEventProfile, _impl_._cached_size_),
          false,
      },
      &SwitchEventProfile::kDescriptorMethods,
      &descriptor_table_switchmodule_2fswitchmodule_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SwitchEventProfile_class_data_ =
        SwitchEventProfile::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SwitchEventProfile::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SwitchEventProfile_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SwitchEventProfile_class_data_.tc_table);
  return SwitchEventProfile_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 3, 0, 2>
SwitchEventProfile::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SwitchEventProfile, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    SwitchEventProfile_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::switchmodule::SwitchEventProfile>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .commonmodule.EventMessageInfo eventMessageInfo = 1 [(.uml.option_parent_message) = true];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SwitchEventProfile, _impl_.eventmessageinfo_)}},
    // .switchmodule.ProtectedSwitch protectedSwitch = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(SwitchEventProfile, _impl_.protectedswitch_)}},
    // .switchmodule.SwitchEvent switchEvent = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(SwitchEventProfile, _impl_.switchevent_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .commonmodule.EventMessageInfo eventMessageInfo = 1 [(.uml.option_parent_message) = true];
    {PROTOBUF_FIELD_OFFSET(SwitchEventProfile, _impl_.eventmessageinfo_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .switchmodule.ProtectedSwitch protectedSwitch = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
    {PROTOBUF_FIELD_OFFSET(SwitchEventProfile, _impl_.protectedswitch_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .switchmodule.SwitchEvent switchEvent = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
    {PROTOBUF_FIELD_OFFSET(SwitchEventProfile, _impl_.switchevent_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::commonmodule::EventMessageInfo>()},
      {::_pbi::TcParser::GetTable<::switchmodule::ProtectedSwitch>()},
      {::_pbi::TcParser::GetTable<::switchmodule::SwitchEvent>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void SwitchEventProfile::Clear() {
// @@protoc_insertion_point(message_clear_start:switchmodule.SwitchEventProfile)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.eventmessageinfo_ != nullptr);
      _impl_.eventmessageinfo_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.protectedswitch_ != nullptr);
      _impl_.protectedswitch_->Clear();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(_impl_.switchevent_ != nullptr);
      _impl_.switchevent_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SwitchEventProfile::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SwitchEventProfile& this_ = static_cast<const SwitchEventProfile&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SwitchEventProfile::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SwitchEventProfile& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:switchmodule.SwitchEventProfile)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .commonmodule.EventMessageInfo eventMessageInfo = 1 [(.uml.option_parent_message) = true];
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.eventmessageinfo_, this_._impl_.eventmessageinfo_->GetCachedSize(), target,
        stream);
  }

  // .switchmodule.ProtectedSwitch protectedSwitch = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.protectedswitch_, this_._impl_.protectedswitch_->GetCachedSize(), target,
        stream);
  }

  // .switchmodule.SwitchEvent switchEvent = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.switchevent_, this_._impl_.switchevent_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:switchmodule.SwitchEventProfile)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SwitchEventProfile::ByteSizeLong(const MessageLite& base) {
  const SwitchEventProfile& this_ = static_cast<const SwitchEventProfile&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SwitchEventProfile::ByteSizeLong() const {
  const SwitchEventProfile& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:switchmodule.SwitchEventProfile)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // .commonmodule.EventMessageInfo eventMessageInfo = 1 [(.uml.option_parent_message) = true];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.eventmessageinfo_);
    }
    // .switchmodule.ProtectedSwitch protectedSwitch = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.protectedswitch_);
    }
    // .switchmodule.SwitchEvent switchEvent = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.switchevent_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void SwitchEventProfile::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SwitchEventProfile*>(&to_msg);
  auto& from = static_cast<const SwitchEventProfile&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:switchmodule.SwitchEventProfile)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.eventmessageinfo_ != nullptr);
      if (_this->_impl_.eventmessageinfo_ == nullptr) {
        _this->_impl_.eventmessageinfo_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.eventmessageinfo_);
      } else {
        _this->_impl_.eventmessageinfo_->MergeFrom(*from._impl_.eventmessageinfo_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.protectedswitch_ != nullptr);
      if (_this->_impl_.protectedswitch_ == nullptr) {
        _this->_impl_.protectedswitch_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.protectedswitch_);
      } else {
        _this->_impl_.protectedswitch_->MergeFrom(*from._impl_.protectedswitch_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(from._impl_.switchevent_ != nullptr);
      if (_this->_impl_.switchevent_ == nullptr) {
        _this->_impl_.switchevent_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.switchevent_);
      } else {
        _this->_impl_.switchevent_->MergeFrom(*from._impl_.switchevent_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SwitchEventProfile::CopyFrom(const SwitchEventProfile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:switchmodule.SwitchEventProfile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SwitchEventProfile::InternalSwap(SwitchEventProfile* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SwitchEventProfile, _impl_.switchevent_)
      + sizeof(SwitchEventProfile::_impl_.switchevent_)
      - PROTOBUF_FIELD_OFFSET(SwitchEventProfile, _impl_.eventmessageinfo_)>(
          reinterpret_cast<char*>(&_impl_.eventmessageinfo_),
          reinterpret_cast<char*>(&other->_impl_.eventmessageinfo_));
}

::google::protobuf::Metadata SwitchEventProfile::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SwitchReading::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<SwitchReading>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SwitchReading, _impl_._has_bits_);
};

void SwitchReading::clear_conductingequipmentterminalreading() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.conductingequipmentterminalreading_ != nullptr) _impl_.conductingequipmentterminalreading_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void SwitchReading::clear_diffreadingmmxu() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.diffreadingmmxu_ != nullptr) _impl_.diffreadingmmxu_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void SwitchReading::clear_phasemmtn() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.phasemmtn_ != nullptr) _impl_.phasemmtn_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void SwitchReading::clear_readingmmtr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.readingmmtr_ != nullptr) _impl_.readingmmtr_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
void SwitchReading::clear_readingmmxu() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.readingmmxu_ != nullptr) _impl_.readingmmxu_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
void SwitchReading::clear_readingmmdc() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.readingmmdc_ != nullptr) _impl_.readingmmdc_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
SwitchReading::SwitchReading(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SwitchReading_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:switchmodule.SwitchReading)
}
PROTOBUF_NDEBUG_INLINE SwitchReading::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::switchmodule::SwitchReading& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SwitchReading::SwitchReading(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const SwitchReading& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SwitchReading_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SwitchReading* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.conductingequipmentterminalreading_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.conductingequipmentterminalreading_)
                : nullptr;
  _impl_.diffreadingmmxu_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.diffreadingmmxu_)
                : nullptr;
  _impl_.phasemmtn_ = ((cached_has_bits & 0x00000004u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.phasemmtn_)
                : nullptr;
  _impl_.readingmmtr_ = ((cached_has_bits & 0x00000008u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.readingmmtr_)
                : nullptr;
  _impl_.readingmmxu_ = ((cached_has_bits & 0x00000010u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.readingmmxu_)
                : nullptr;
  _impl_.readingmmdc_ = ((cached_has_bits & 0x00000020u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.readingmmdc_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:switchmodule.SwitchReading)
}
PROTOBUF_NDEBUG_INLINE SwitchReading::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void SwitchReading::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, conductingequipmentterminalreading_),
           0,
           offsetof(Impl_, readingmmdc_) -
               offsetof(Impl_, conductingequipmentterminalreading_) +
               sizeof(Impl_::readingmmdc_));
}
SwitchReading::~SwitchReading() {
  // @@protoc_insertion_point(destructor:switchmodule.SwitchReading)
  SharedDtor(*this);
}
inline void SwitchReading::SharedDtor(MessageLite& self) {
  SwitchReading& this_ = static_cast<SwitchReading&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.conductingequipmentterminalreading_;
  delete this_._impl_.diffreadingmmxu_;
  delete this_._impl_.phasemmtn_;
  delete this_._impl_.readingmmtr_;
  delete this_._impl_.readingmmxu_;
  delete this_._impl_.readingmmdc_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL SwitchReading::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SwitchReading(arena);
}
constexpr auto SwitchReading::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SwitchReading),
                                            alignof(SwitchReading));
}
constexpr auto SwitchReading::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SwitchReading_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SwitchReading::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SwitchReading>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SwitchReading::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SwitchReading>(), &SwitchReading::ByteSizeLong,
              &SwitchReading::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SwitchReading, _impl_._cached_size_),
          false,
      },
      &SwitchReading::kDescriptorMethods,
      &descriptor_table_switchmodule_2fswitchmodule_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SwitchReading_class_data_ =
        SwitchReading::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SwitchReading::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SwitchReading_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SwitchReading_class_data_.tc_table);
  return SwitchReading_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 6, 0, 2>
SwitchReading::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SwitchReading, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    6,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    SwitchReading_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::switchmodule::SwitchReading>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .commonmodule.ConductingEquipmentTerminalReading conductingEquipmentTerminalReading = 1 [(.uml.option_parent_message) = true];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SwitchReading, _impl_.conductingequipmentterminalreading_)}},
    // .commonmodule.ReadingMMXU diffReadingMMXU = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(SwitchReading, _impl_.diffreadingmmxu_)}},
    // .commonmodule.PhaseMMTN phaseMMTN = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(SwitchReading, _impl_.phasemmtn_)}},
    // .commonmodule.ReadingMMTR readingMMTR = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 3, 3, PROTOBUF_FIELD_OFFSET(SwitchReading, _impl_.readingmmtr_)}},
    // .commonmodule.ReadingMMXU readingMMXU = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 4, 4, PROTOBUF_FIELD_OFFSET(SwitchReading, _impl_.readingmmxu_)}},
    // .commonmodule.ReadingMMDC readingMMDC = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 5, 5, PROTOBUF_FIELD_OFFSET(SwitchReading, _impl_.readingmmdc_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .commonmodule.ConductingEquipmentTerminalReading conductingEquipmentTerminalReading = 1 [(.uml.option_parent_message) = true];
    {PROTOBUF_FIELD_OFFSET(SwitchReading, _impl_.conductingequipmentterminalreading_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .commonmodule.ReadingMMXU diffReadingMMXU = 2;
    {PROTOBUF_FIELD_OFFSET(SwitchReading, _impl_.diffreadingmmxu_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .commonmodule.PhaseMMTN phaseMMTN = 3;
    {PROTOBUF_FIELD_OFFSET(SwitchReading, _impl_.phasemmtn_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .commonmodule.ReadingMMTR readingMMTR = 4;
    {PROTOBUF_FIELD_OFFSET(SwitchReading, _impl_.readingmmtr_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .commonmodule.ReadingMMXU readingMMXU = 5;
    {PROTOBUF_FIELD_OFFSET(SwitchReading, _impl_.readingmmxu_), _Internal::kHasBitsOffset + 4, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .commonmodule.ReadingMMDC readingMMDC = 6;
    {PROTOBUF_FIELD_OFFSET(SwitchReading, _impl_.readingmmdc_), _Internal::kHasBitsOffset + 5, 5,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::commonmodule::ConductingEquipmentTerminalReading>()},
      {::_pbi::TcParser::GetTable<::commonmodule::ReadingMMXU>()},
      {::_pbi::TcParser::GetTable<::commonmodule::PhaseMMTN>()},
      {::_pbi::TcParser::GetTable<::commonmodule::ReadingMMTR>()},
      {::_pbi::TcParser::GetTable<::commonmodule::ReadingMMXU>()},
      {::_pbi::TcParser::GetTable<::commonmodule::ReadingMMDC>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void SwitchReading::Clear() {
// @@protoc_insertion_point(message_clear_start:switchmodule.SwitchReading)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.conductingequipmentterminalreading_ != nullptr);
      _impl_.conductingequipmentterminalreading_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.diffreadingmmxu_ != nullptr);
      _impl_.diffreadingmmxu_->Clear();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(_impl_.phasemmtn_ != nullptr);
      _impl_.phasemmtn_->Clear();
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(_impl_.readingmmtr_ != nullptr);
      _impl_.readingmmtr_->Clear();
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      ABSL_DCHECK(_impl_.readingmmxu_ != nullptr);
      _impl_.readingmmxu_->Clear();
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      ABSL_DCHECK(_impl_.readingmmdc_ != nullptr);
      _impl_.readingmmdc_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SwitchReading::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SwitchReading& this_ = static_cast<const SwitchReading&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SwitchReading::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SwitchReading& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:switchmodule.SwitchReading)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .commonmodule.ConductingEquipmentTerminalReading conductingEquipmentTerminalReading = 1 [(.uml.option_parent_message) = true];
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.conductingequipmentterminalreading_, this_._impl_.conductingequipmentterminalreading_->GetCachedSize(), target,
        stream);
  }

  // .commonmodule.ReadingMMXU diffReadingMMXU = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.diffreadingmmxu_, this_._impl_.diffreadingmmxu_->GetCachedSize(), target,
        stream);
  }

  // .commonmodule.PhaseMMTN phaseMMTN = 3;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.phasemmtn_, this_._impl_.phasemmtn_->GetCachedSize(), target,
        stream);
  }

  // .commonmodule.ReadingMMTR readingMMTR = 4;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *this_._impl_.readingmmtr_, this_._impl_.readingmmtr_->GetCachedSize(), target,
        stream);
  }

  // .commonmodule.ReadingMMXU readingMMXU = 5;
  if ((cached_has_bits & 0x00000010u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *this_._impl_.readingmmxu_, this_._impl_.readingmmxu_->GetCachedSize(), target,
        stream);
  }

  // .commonmodule.ReadingMMDC readingMMDC = 6;
  if ((cached_has_bits & 0x00000020u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        6, *this_._impl_.readingmmdc_, this_._impl_.readingmmdc_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:switchmodule.SwitchReading)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SwitchReading::ByteSizeLong(const MessageLite& base) {
  const SwitchReading& this_ = static_cast<const SwitchReading&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SwitchReading::ByteSizeLong() const {
  const SwitchReading& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:switchmodule.SwitchReading)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fu) != 0) {
    // .commonmodule.ConductingEquipmentTerminalReading conductingEquipmentTerminalReading = 1 [(.uml.option_parent_message) = true];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.conductingequipmentterminalreading_);
    }
    // .commonmodule.ReadingMMXU diffReadingMMXU = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.diffreadingmmxu_);
    }
    // .commonmodule.PhaseMMTN phaseMMTN = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.phasemmtn_);
    }
    // .commonmodule.ReadingMMTR readingMMTR = 4;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.readingmmtr_);
    }
    // .commonmodule.ReadingMMXU readingMMXU = 5;
    if ((cached_has_bits & 0x00000010u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.readingmmxu_);
    }
    // .commonmodule.ReadingMMDC readingMMDC = 6;
    if ((cached_has_bits & 0x00000020u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.readingmmdc_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void SwitchReading::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SwitchReading*>(&to_msg);
  auto& from = static_cast<const SwitchReading&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:switchmodule.SwitchReading)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.conductingequipmentterminalreading_ != nullptr);
      if (_this->_impl_.conductingequipmentterminalreading_ == nullptr) {
        _this->_impl_.conductingequipmentterminalreading_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.conductingequipmentterminalreading_);
      } else {
        _this->_impl_.conductingequipmentterminalreading_->MergeFrom(*from._impl_.conductingequipmentterminalreading_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.diffreadingmmxu_ != nullptr);
      if (_this->_impl_.diffreadingmmxu_ == nullptr) {
        _this->_impl_.diffreadingmmxu_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.diffreadingmmxu_);
      } else {
        _this->_impl_.diffreadingmmxu_->MergeFrom(*from._impl_.diffreadingmmxu_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(from._impl_.phasemmtn_ != nullptr);
      if (_this->_impl_.phasemmtn_ == nullptr) {
        _this->_impl_.phasemmtn_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.phasemmtn_);
      } else {
        _this->_impl_.phasemmtn_->MergeFrom(*from._impl_.phasemmtn_);
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(from._impl_.readingmmtr_ != nullptr);
      if (_this->_impl_.readingmmtr_ == nullptr) {
        _this->_impl_.readingmmtr_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.readingmmtr_);
      } else {
        _this->_impl_.readingmmtr_->MergeFrom(*from._impl_.readingmmtr_);
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      ABSL_DCHECK(from._impl_.readingmmxu_ != nullptr);
      if (_this->_impl_.readingmmxu_ == nullptr) {
        _this->_impl_.readingmmxu_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.readingmmxu_);
      } else {
        _this->_impl_.readingmmxu_->MergeFrom(*from._impl_.readingmmxu_);
      }
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      ABSL_DCHECK(from._impl_.readingmmdc_ != nullptr);
      if (_this->_impl_.readingmmdc_ == nullptr) {
        _this->_impl_.readingmmdc_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.readingmmdc_);
      } else {
        _this->_impl_.readingmmdc_->MergeFrom(*from._impl_.readingmmdc_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SwitchReading::CopyFrom(const SwitchReading& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:switchmodule.SwitchReading)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SwitchReading::InternalSwap(SwitchReading* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SwitchReading, _impl_.readingmmdc_)
      + sizeof(SwitchReading::_impl_.readingmmdc_)
      - PROTOBUF_FIELD_OFFSET(SwitchReading, _impl_.conductingequipmentterminalreading_)>(
          reinterpret_cast<char*>(&_impl_.conductingequipmentterminalreading_),
          reinterpret_cast<char*>(&other->_impl_.conductingequipmentterminalreading_));
}

::google::protobuf::Metadata SwitchReading::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SwitchReadingProfile::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<SwitchReadingProfile>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SwitchReadingProfile, _impl_._has_bits_);
};

void SwitchReadingProfile::clear_readingmessageinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.readingmessageinfo_ != nullptr) _impl_.readingmessageinfo_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
SwitchReadingProfile::SwitchReadingProfile(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SwitchReadingProfile_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:switchmodule.SwitchReadingProfile)
}
PROTOBUF_NDEBUG_INLINE SwitchReadingProfile::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::switchmodule::SwitchReadingProfile& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        switchreading_{visibility, arena, from.switchreading_} {}

SwitchReadingProfile::SwitchReadingProfile(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const SwitchReadingProfile& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SwitchReadingProfile_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SwitchReadingProfile* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.readingmessageinfo_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.readingmessageinfo_)
                : nullptr;
  _impl_.protectedswitch_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.protectedswitch_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:switchmodule.SwitchReadingProfile)
}
PROTOBUF_NDEBUG_INLINE SwitchReadingProfile::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        switchreading_{visibility, arena} {}

inline void SwitchReadingProfile::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, readingmessageinfo_),
           0,
           offsetof(Impl_, protectedswitch_) -
               offsetof(Impl_, readingmessageinfo_) +
               sizeof(Impl_::protectedswitch_));
}
SwitchReadingProfile::~SwitchReadingProfile() {
  // @@protoc_insertion_point(destructor:switchmodule.SwitchReadingProfile)
  SharedDtor(*this);
}
inline void SwitchReadingProfile::SharedDtor(MessageLite& self) {
  SwitchReadingProfile& this_ = static_cast<SwitchReadingProfile&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.readingmessageinfo_;
  delete this_._impl_.protectedswitch_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL SwitchReadingProfile::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SwitchReadingProfile(arena);
}
constexpr auto SwitchReadingProfile::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(SwitchReadingProfile, _impl_.switchreading_) +
          decltype(SwitchReadingProfile::_impl_.switchreading_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(SwitchReadingProfile), alignof(SwitchReadingProfile), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&SwitchReadingProfile::PlacementNew_,
                                 sizeof(SwitchReadingProfile),
                                 alignof(SwitchReadingProfile));
  }
}
constexpr auto SwitchReadingProfile::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SwitchReadingProfile_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SwitchReadingProfile::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SwitchReadingProfile>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SwitchReadingProfile::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SwitchReadingProfile>(), &SwitchReadingProfile::ByteSizeLong,
              &SwitchReadingProfile::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SwitchReadingProfile, _impl_._cached_size_),
          false,
      },
      &SwitchReadingProfile::kDescriptorMethods,
      &descriptor_table_switchmodule_2fswitchmodule_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SwitchReadingProfile_class_data_ =
        SwitchReadingProfile::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SwitchReadingProfile::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SwitchReadingProfile_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SwitchReadingProfile_class_data_.tc_table);
  return SwitchReadingProfile_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 3, 0, 2>
SwitchReadingProfile::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SwitchReadingProfile, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    SwitchReadingProfile_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::switchmodule::SwitchReadingProfile>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .commonmodule.ReadingMessageInfo readingMessageInfo = 1 [(.uml.option_parent_message) = true];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SwitchReadingProfile, _impl_.readingmessageinfo_)}},
    // .switchmodule.ProtectedSwitch protectedSwitch = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(SwitchReadingProfile, _impl_.protectedswitch_)}},
    // repeated .switchmodule.SwitchReading switchReading = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1, (.uml.option_multiplicity_max) = 2];
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 2, PROTOBUF_FIELD_OFFSET(SwitchReadingProfile, _impl_.switchreading_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .commonmodule.ReadingMessageInfo readingMessageInfo = 1 [(.uml.option_parent_message) = true];
    {PROTOBUF_FIELD_OFFSET(SwitchReadingProfile, _impl_.readingmessageinfo_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .switchmodule.ProtectedSwitch protectedSwitch = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
    {PROTOBUF_FIELD_OFFSET(SwitchReadingProfile, _impl_.protectedswitch_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .switchmodule.SwitchReading switchReading = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1, (.uml.option_multiplicity_max) = 2];
    {PROTOBUF_FIELD_OFFSET(SwitchReadingProfile, _impl_.switchreading_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::commonmodule::ReadingMessageInfo>()},
      {::_pbi::TcParser::GetTable<::switchmodule::ProtectedSwitch>()},
      {::_pbi::TcParser::GetTable<::switchmodule::SwitchReading>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void SwitchReadingProfile::Clear() {
// @@protoc_insertion_point(message_clear_start:switchmodule.SwitchReadingProfile)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.switchreading_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.readingmessageinfo_ != nullptr);
      _impl_.readingmessageinfo_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.protectedswitch_ != nullptr);
      _impl_.protectedswitch_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SwitchReadingProfile::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SwitchReadingProfile& this_ = static_cast<const SwitchReadingProfile&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SwitchReadingProfile::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SwitchReadingProfile& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:switchmodule.SwitchReadingProfile)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .commonmodule.ReadingMessageInfo readingMessageInfo = 1 [(.uml.option_parent_message) = true];
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.readingmessageinfo_, this_._impl_.readingmessageinfo_->GetCachedSize(), target,
        stream);
  }

  // .switchmodule.ProtectedSwitch protectedSwitch = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.protectedswitch_, this_._impl_.protectedswitch_->GetCachedSize(), target,
        stream);
  }

  // repeated .switchmodule.SwitchReading switchReading = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1, (.uml.option_multiplicity_max) = 2];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_switchreading_size());
       i < n; i++) {
    const auto& repfield = this_._internal_switchreading().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            3, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:switchmodule.SwitchReadingProfile)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SwitchReadingProfile::ByteSizeLong(const MessageLite& base) {
  const SwitchReadingProfile& this_ = static_cast<const SwitchReadingProfile&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SwitchReadingProfile::ByteSizeLong() const {
  const SwitchReadingProfile& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:switchmodule.SwitchReadingProfile)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .switchmodule.SwitchReading switchReading = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1, (.uml.option_multiplicity_max) = 2];
    {
      total_size += 1UL * this_._internal_switchreading_size();
      for (const auto& msg : this_._internal_switchreading()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // .commonmodule.ReadingMessageInfo readingMessageInfo = 1 [(.uml.option_parent_message) = true];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.readingmessageinfo_);
    }
    // .switchmodule.ProtectedSwitch protectedSwitch = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.protectedswitch_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void SwitchReadingProfile::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SwitchReadingProfile*>(&to_msg);
  auto& from = static_cast<const SwitchReadingProfile&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:switchmodule.SwitchReadingProfile)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_switchreading()->MergeFrom(
      from._internal_switchreading());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.readingmessageinfo_ != nullptr);
      if (_this->_impl_.readingmessageinfo_ == nullptr) {
        _this->_impl_.readingmessageinfo_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.readingmessageinfo_);
      } else {
        _this->_impl_.readingmessageinfo_->MergeFrom(*from._impl_.readingmessageinfo_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.protectedswitch_ != nullptr);
      if (_this->_impl_.protectedswitch_ == nullptr) {
        _this->_impl_.protectedswitch_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.protectedswitch_);
      } else {
        _this->_impl_.protectedswitch_->MergeFrom(*from._impl_.protectedswitch_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SwitchReadingProfile::CopyFrom(const SwitchReadingProfile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:switchmodule.SwitchReadingProfile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SwitchReadingProfile::InternalSwap(SwitchReadingProfile* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.switchreading_.InternalSwap(&other->_impl_.switchreading_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SwitchReadingProfile, _impl_.protectedswitch_)
      + sizeof(SwitchReadingProfile::_impl_.protectedswitch_)
      - PROTOBUF_FIELD_OFFSET(SwitchReadingProfile, _impl_.readingmessageinfo_)>(
          reinterpret_cast<char*>(&_impl_.readingmessageinfo_),
          reinterpret_cast<char*>(&other->_impl_.readingmessageinfo_));
}

::google::protobuf::Metadata SwitchReadingProfile::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SwitchStatusXSWI::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<SwitchStatusXSWI>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SwitchStatusXSWI, _impl_._has_bits_);
};

void SwitchStatusXSWI::clear_logicalnodeforeventandstatus() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.logicalnodeforeventandstatus_ != nullptr) _impl_.logicalnodeforeventandstatus_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void SwitchStatusXSWI::clear_dynamictest() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.dynamictest_ != nullptr) _impl_.dynamictest_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void SwitchStatusXSWI::clear_pos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pos_ != nullptr) _impl_.pos_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void SwitchStatusXSWI::clear_protectionpickup() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.protectionpickup_ != nullptr) _impl_.protectionpickup_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
SwitchStatusXSWI::SwitchStatusXSWI(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SwitchStatusXSWI_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:switchmodule.SwitchStatusXSWI)
}
PROTOBUF_NDEBUG_INLINE SwitchStatusXSWI::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::switchmodule::SwitchStatusXSWI& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SwitchStatusXSWI::SwitchStatusXSWI(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const SwitchStatusXSWI& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SwitchStatusXSWI_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SwitchStatusXSWI* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.logicalnodeforeventandstatus_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.logicalnodeforeventandstatus_)
                : nullptr;
  _impl_.dynamictest_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.dynamictest_)
                : nullptr;
  _impl_.pos_ = ((cached_has_bits & 0x00000004u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.pos_)
                : nullptr;
  _impl_.protectionpickup_ = ((cached_has_bits & 0x00000008u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.protectionpickup_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:switchmodule.SwitchStatusXSWI)
}
PROTOBUF_NDEBUG_INLINE SwitchStatusXSWI::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void SwitchStatusXSWI::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, logicalnodeforeventandstatus_),
           0,
           offsetof(Impl_, protectionpickup_) -
               offsetof(Impl_, logicalnodeforeventandstatus_) +
               sizeof(Impl_::protectionpickup_));
}
SwitchStatusXSWI::~SwitchStatusXSWI() {
  // @@protoc_insertion_point(destructor:switchmodule.SwitchStatusXSWI)
  SharedDtor(*this);
}
inline void SwitchStatusXSWI::SharedDtor(MessageLite& self) {
  SwitchStatusXSWI& this_ = static_cast<SwitchStatusXSWI&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.logicalnodeforeventandstatus_;
  delete this_._impl_.dynamictest_;
  delete this_._impl_.pos_;
  delete this_._impl_.protectionpickup_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL SwitchStatusXSWI::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SwitchStatusXSWI(arena);
}
constexpr auto SwitchStatusXSWI::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SwitchStatusXSWI),
                                            alignof(SwitchStatusXSWI));
}
constexpr auto SwitchStatusXSWI::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SwitchStatusXSWI_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SwitchStatusXSWI::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SwitchStatusXSWI>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SwitchStatusXSWI::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SwitchStatusXSWI>(), &SwitchStatusXSWI::ByteSizeLong,
              &SwitchStatusXSWI::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SwitchStatusXSWI, _impl_._cached_size_),
          false,
      },
      &SwitchStatusXSWI::kDescriptorMethods,
      &descriptor_table_switchmodule_2fswitchmodule_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SwitchStatusXSWI_class_data_ =
        SwitchStatusXSWI::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SwitchStatusXSWI::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SwitchStatusXSWI_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SwitchStatusXSWI_class_data_.tc_table);
  return SwitchStatusXSWI_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 4, 4, 0, 2>
SwitchStatusXSWI::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SwitchStatusXSWI, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967268,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    SwitchStatusXSWI_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::switchmodule::SwitchStatusXSWI>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .commonmodule.LogicalNodeForEventAndStatus logicalNodeForEventAndStatus = 1 [(.uml.option_parent_message) = true];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SwitchStatusXSWI, _impl_.logicalnodeforeventandstatus_)}},
    // .commonmodule.ENS_DynamicTestKind DynamicTest = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(SwitchStatusXSWI, _impl_.dynamictest_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // .commonmodule.PhaseDPS Pos = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 2, 2, PROTOBUF_FIELD_OFFSET(SwitchStatusXSWI, _impl_.pos_)}},
    // .commonmodule.PhaseSPS ProtectionPickup = 5 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
    {::_pbi::TcParser::FastMtS1,
     {42, 3, 3, PROTOBUF_FIELD_OFFSET(SwitchStatusXSWI, _impl_.protectionpickup_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .commonmodule.LogicalNodeForEventAndStatus logicalNodeForEventAndStatus = 1 [(.uml.option_parent_message) = true];
    {PROTOBUF_FIELD_OFFSET(SwitchStatusXSWI, _impl_.logicalnodeforeventandstatus_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .commonmodule.ENS_DynamicTestKind DynamicTest = 2;
    {PROTOBUF_FIELD_OFFSET(SwitchStatusXSWI, _impl_.dynamictest_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .commonmodule.PhaseDPS Pos = 4;
    {PROTOBUF_FIELD_OFFSET(SwitchStatusXSWI, _impl_.pos_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .commonmodule.PhaseSPS ProtectionPickup = 5 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
    {PROTOBUF_FIELD_OFFSET(SwitchStatusXSWI, _impl_.protectionpickup_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::commonmodule::LogicalNodeForEventAndStatus>()},
      {::_pbi::TcParser::GetTable<::commonmodule::ENS_DynamicTestKind>()},
      {::_pbi::TcParser::GetTable<::commonmodule::PhaseDPS>()},
      {::_pbi::TcParser::GetTable<::commonmodule::PhaseSPS>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void SwitchStatusXSWI::Clear() {
// @@protoc_insertion_point(message_clear_start:switchmodule.SwitchStatusXSWI)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.logicalnodeforeventandstatus_ != nullptr);
      _impl_.logicalnodeforeventandstatus_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.dynamictest_ != nullptr);
      _impl_.dynamictest_->Clear();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(_impl_.pos_ != nullptr);
      _impl_.pos_->Clear();
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(_impl_.protectionpickup_ != nullptr);
      _impl_.protectionpickup_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SwitchStatusXSWI::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SwitchStatusXSWI& this_ = static_cast<const SwitchStatusXSWI&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SwitchStatusXSWI::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SwitchStatusXSWI& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:switchmodule.SwitchStatusXSWI)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .commonmodule.LogicalNodeForEventAndStatus logicalNodeForEventAndStatus = 1 [(.uml.option_parent_message) = true];
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.logicalnodeforeventandstatus_, this_._impl_.logicalnodeforeventandstatus_->GetCachedSize(), target,
        stream);
  }

  // .commonmodule.ENS_DynamicTestKind DynamicTest = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.dynamictest_, this_._impl_.dynamictest_->GetCachedSize(), target,
        stream);
  }

  // .commonmodule.PhaseDPS Pos = 4;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *this_._impl_.pos_, this_._impl_.pos_->GetCachedSize(), target,
        stream);
  }

  // .commonmodule.PhaseSPS ProtectionPickup = 5 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *this_._impl_.protectionpickup_, this_._impl_.protectionpickup_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:switchmodule.SwitchStatusXSWI)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SwitchStatusXSWI::ByteSizeLong(const MessageLite& base) {
  const SwitchStatusXSWI& this_ = static_cast<const SwitchStatusXSWI&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SwitchStatusXSWI::ByteSizeLong() const {
  const SwitchStatusXSWI& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:switchmodule.SwitchStatusXSWI)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    // .commonmodule.LogicalNodeForEventAndStatus logicalNodeForEventAndStatus = 1 [(.uml.option_parent_message) = true];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.logicalnodeforeventandstatus_);
    }
    // .commonmodule.ENS_DynamicTestKind DynamicTest = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.dynamictest_);
    }
    // .commonmodule.PhaseDPS Pos = 4;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.pos_);
    }
    // .commonmodule.PhaseSPS ProtectionPickup = 5 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.protectionpickup_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void SwitchStatusXSWI::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SwitchStatusXSWI*>(&to_msg);
  auto& from = static_cast<const SwitchStatusXSWI&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:switchmodule.SwitchStatusXSWI)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.logicalnodeforeventandstatus_ != nullptr);
      if (_this->_impl_.logicalnodeforeventandstatus_ == nullptr) {
        _this->_impl_.logicalnodeforeventandstatus_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.logicalnodeforeventandstatus_);
      } else {
        _this->_impl_.logicalnodeforeventandstatus_->MergeFrom(*from._impl_.logicalnodeforeventandstatus_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.dynamictest_ != nullptr);
      if (_this->_impl_.dynamictest_ == nullptr) {
        _this->_impl_.dynamictest_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.dynamictest_);
      } else {
        _this->_impl_.dynamictest_->MergeFrom(*from._impl_.dynamictest_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(from._impl_.pos_ != nullptr);
      if (_this->_impl_.pos_ == nullptr) {
        _this->_impl_.pos_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.pos_);
      } else {
        _this->_impl_.pos_->MergeFrom(*from._impl_.pos_);
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(from._impl_.protectionpickup_ != nullptr);
      if (_this->_impl_.protectionpickup_ == nullptr) {
        _this->_impl_.protectionpickup_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.protectionpickup_);
      } else {
        _this->_impl_.protectionpickup_->MergeFrom(*from._impl_.protectionpickup_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SwitchStatusXSWI::CopyFrom(const SwitchStatusXSWI& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:switchmodule.SwitchStatusXSWI)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SwitchStatusXSWI::InternalSwap(SwitchStatusXSWI* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SwitchStatusXSWI, _impl_.protectionpickup_)
      + sizeof(SwitchStatusXSWI::_impl_.protectionpickup_)
      - PROTOBUF_FIELD_OFFSET(SwitchStatusXSWI, _impl_.logicalnodeforeventandstatus_)>(
          reinterpret_cast<char*>(&_impl_.logicalnodeforeventandstatus_),
          reinterpret_cast<char*>(&other->_impl_.logicalnodeforeventandstatus_));
}

::google::protobuf::Metadata SwitchStatusXSWI::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SwitchStatus::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<SwitchStatus>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SwitchStatus, _impl_._has_bits_);
};

void SwitchStatus::clear_statusvalue() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.statusvalue_ != nullptr) _impl_.statusvalue_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
SwitchStatus::SwitchStatus(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SwitchStatus_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:switchmodule.SwitchStatus)
}
PROTOBUF_NDEBUG_INLINE SwitchStatus::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::switchmodule::SwitchStatus& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SwitchStatus::SwitchStatus(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const SwitchStatus& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SwitchStatus_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SwitchStatus* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.statusvalue_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.statusvalue_)
                : nullptr;
  _impl_.switchstatusxswi_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.switchstatusxswi_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:switchmodule.SwitchStatus)
}
PROTOBUF_NDEBUG_INLINE SwitchStatus::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void SwitchStatus::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, statusvalue_),
           0,
           offsetof(Impl_, switchstatusxswi_) -
               offsetof(Impl_, statusvalue_) +
               sizeof(Impl_::switchstatusxswi_));
}
SwitchStatus::~SwitchStatus() {
  // @@protoc_insertion_point(destructor:switchmodule.SwitchStatus)
  SharedDtor(*this);
}
inline void SwitchStatus::SharedDtor(MessageLite& self) {
  SwitchStatus& this_ = static_cast<SwitchStatus&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.statusvalue_;
  delete this_._impl_.switchstatusxswi_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL SwitchStatus::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SwitchStatus(arena);
}
constexpr auto SwitchStatus::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SwitchStatus),
                                            alignof(SwitchStatus));
}
constexpr auto SwitchStatus::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SwitchStatus_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SwitchStatus::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SwitchStatus>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SwitchStatus::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SwitchStatus>(), &SwitchStatus::ByteSizeLong,
              &SwitchStatus::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SwitchStatus, _impl_._cached_size_),
          false,
      },
      &SwitchStatus::kDescriptorMethods,
      &descriptor_table_switchmodule_2fswitchmodule_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SwitchStatus_class_data_ =
        SwitchStatus::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SwitchStatus::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SwitchStatus_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SwitchStatus_class_data_.tc_table);
  return SwitchStatus_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2>
SwitchStatus::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SwitchStatus, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    SwitchStatus_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::switchmodule::SwitchStatus>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .switchmodule.SwitchStatusXSWI switchStatusXSWI = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(SwitchStatus, _impl_.switchstatusxswi_)}},
    // .commonmodule.StatusValue statusValue = 1 [(.uml.option_parent_message) = true];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SwitchStatus, _impl_.statusvalue_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .commonmodule.StatusValue statusValue = 1 [(.uml.option_parent_message) = true];
    {PROTOBUF_FIELD_OFFSET(SwitchStatus, _impl_.statusvalue_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .switchmodule.SwitchStatusXSWI switchStatusXSWI = 2;
    {PROTOBUF_FIELD_OFFSET(SwitchStatus, _impl_.switchstatusxswi_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::commonmodule::StatusValue>()},
      {::_pbi::TcParser::GetTable<::switchmodule::SwitchStatusXSWI>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void SwitchStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:switchmodule.SwitchStatus)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.statusvalue_ != nullptr);
      _impl_.statusvalue_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.switchstatusxswi_ != nullptr);
      _impl_.switchstatusxswi_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SwitchStatus::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SwitchStatus& this_ = static_cast<const SwitchStatus&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SwitchStatus::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SwitchStatus& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:switchmodule.SwitchStatus)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .commonmodule.StatusValue statusValue = 1 [(.uml.option_parent_message) = true];
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.statusvalue_, this_._impl_.statusvalue_->GetCachedSize(), target,
        stream);
  }

  // .switchmodule.SwitchStatusXSWI switchStatusXSWI = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.switchstatusxswi_, this_._impl_.switchstatusxswi_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:switchmodule.SwitchStatus)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SwitchStatus::ByteSizeLong(const MessageLite& base) {
  const SwitchStatus& this_ = static_cast<const SwitchStatus&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SwitchStatus::ByteSizeLong() const {
  const SwitchStatus& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:switchmodule.SwitchStatus)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // .commonmodule.StatusValue statusValue = 1 [(.uml.option_parent_message) = true];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.statusvalue_);
    }
    // .switchmodule.SwitchStatusXSWI switchStatusXSWI = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.switchstatusxswi_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void SwitchStatus::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SwitchStatus*>(&to_msg);
  auto& from = static_cast<const SwitchStatus&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:switchmodule.SwitchStatus)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.statusvalue_ != nullptr);
      if (_this->_impl_.statusvalue_ == nullptr) {
        _this->_impl_.statusvalue_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.statusvalue_);
      } else {
        _this->_impl_.statusvalue_->MergeFrom(*from._impl_.statusvalue_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.switchstatusxswi_ != nullptr);
      if (_this->_impl_.switchstatusxswi_ == nullptr) {
        _this->_impl_.switchstatusxswi_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.switchstatusxswi_);
      } else {
        _this->_impl_.switchstatusxswi_->MergeFrom(*from._impl_.switchstatusxswi_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SwitchStatus::CopyFrom(const SwitchStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:switchmodule.SwitchStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SwitchStatus::InternalSwap(SwitchStatus* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SwitchStatus, _impl_.switchstatusxswi_)
      + sizeof(SwitchStatus::_impl_.switchstatusxswi_)
      - PROTOBUF_FIELD_OFFSET(SwitchStatus, _impl_.statusvalue_)>(
          reinterpret_cast<char*>(&_impl_.statusvalue_),
          reinterpret_cast<char*>(&other->_impl_.statusvalue_));
}

::google::protobuf::Metadata SwitchStatus::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SwitchStatusProfile::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<SwitchStatusProfile>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SwitchStatusProfile, _impl_._has_bits_);
};

void SwitchStatusProfile::clear_statusmessageinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.statusmessageinfo_ != nullptr) _impl_.statusmessageinfo_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
SwitchStatusProfile::SwitchStatusProfile(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SwitchStatusProfile_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:switchmodule.SwitchStatusProfile)
}
PROTOBUF_NDEBUG_INLINE SwitchStatusProfile::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::switchmodule::SwitchStatusProfile& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SwitchStatusProfile::SwitchStatusProfile(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const SwitchStatusProfile& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SwitchStatusProfile_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SwitchStatusProfile* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.statusmessageinfo_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.statusmessageinfo_)
                : nullptr;
  _impl_.protectedswitch_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.protectedswitch_)
                : nullptr;
  _impl_.switchstatus_ = ((cached_has_bits & 0x00000004u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.switchstatus_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:switchmodule.SwitchStatusProfile)
}
PROTOBUF_NDEBUG_INLINE SwitchStatusProfile::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void SwitchStatusProfile::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, statusmessageinfo_),
           0,
           offsetof(Impl_, switchstatus_) -
               offsetof(Impl_, statusmessageinfo_) +
               sizeof(Impl_::switchstatus_));
}
SwitchStatusProfile::~SwitchStatusProfile() {
  // @@protoc_insertion_point(destructor:switchmodule.SwitchStatusProfile)
  SharedDtor(*this);
}
inline void SwitchStatusProfile::SharedDtor(MessageLite& self) {
  SwitchStatusProfile& this_ = static_cast<SwitchStatusProfile&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.statusmessageinfo_;
  delete this_._impl_.protectedswitch_;
  delete this_._impl_.switchstatus_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL SwitchStatusProfile::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SwitchStatusProfile(arena);
}
constexpr auto SwitchStatusProfile::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SwitchStatusProfile),
                                            alignof(SwitchStatusProfile));
}
constexpr auto SwitchStatusProfile::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SwitchStatusProfile_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SwitchStatusProfile::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SwitchStatusProfile>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SwitchStatusProfile::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SwitchStatusProfile>(), &SwitchStatusProfile::ByteSizeLong,
              &SwitchStatusProfile::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SwitchStatusProfile, _impl_._cached_size_),
          false,
      },
      &SwitchStatusProfile::kDescriptorMethods,
      &descriptor_table_switchmodule_2fswitchmodule_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SwitchStatusProfile_class_data_ =
        SwitchStatusProfile::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SwitchStatusProfile::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SwitchStatusProfile_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SwitchStatusProfile_class_data_.tc_table);
  return SwitchStatusProfile_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 3, 0, 2>
SwitchStatusProfile::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SwitchStatusProfile, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    SwitchStatusProfile_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::switchmodule::SwitchStatusProfile>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .commonmodule.StatusMessageInfo statusMessageInfo = 1 [(.uml.option_parent_message) = true];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SwitchStatusProfile, _impl_.statusmessageinfo_)}},
    // .switchmodule.ProtectedSwitch protectedSwitch = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(SwitchStatusProfile, _impl_.protectedswitch_)}},
    // .switchmodule.SwitchStatus switchStatus = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(SwitchStatusProfile, _impl_.switchstatus_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .commonmodule.StatusMessageInfo statusMessageInfo = 1 [(.uml.option_parent_message) = true];
    {PROTOBUF_FIELD_OFFSET(SwitchStatusProfile, _impl_.statusmessageinfo_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .switchmodule.ProtectedSwitch protectedSwitch = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
    {PROTOBUF_FIELD_OFFSET(SwitchStatusProfile, _impl_.protectedswitch_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .switchmodule.SwitchStatus switchStatus = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
    {PROTOBUF_FIELD_OFFSET(SwitchStatusProfile, _impl_.switchstatus_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::commonmodule::StatusMessageInfo>()},
      {::_pbi::TcParser::GetTable<::switchmodule::ProtectedSwitch>()},
      {::_pbi::TcParser::GetTable<::switchmodule::SwitchStatus>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void SwitchStatusProfile::Clear() {
// @@protoc_insertion_point(message_clear_start:switchmodule.SwitchStatusProfile)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.statusmessageinfo_ != nullptr);
      _impl_.statusmessageinfo_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.protectedswitch_ != nullptr);
      _impl_.protectedswitch_->Clear();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(_impl_.switchstatus_ != nullptr);
      _impl_.switchstatus_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SwitchStatusProfile::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SwitchStatusProfile& this_ = static_cast<const SwitchStatusProfile&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SwitchStatusProfile::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SwitchStatusProfile& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:switchmodule.SwitchStatusProfile)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .commonmodule.StatusMessageInfo statusMessageInfo = 1 [(.uml.option_parent_message) = true];
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.statusmessageinfo_, this_._impl_.statusmessageinfo_->GetCachedSize(), target,
        stream);
  }

  // .switchmodule.ProtectedSwitch protectedSwitch = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.protectedswitch_, this_._impl_.protectedswitch_->GetCachedSize(), target,
        stream);
  }

  // .switchmodule.SwitchStatus switchStatus = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.switchstatus_, this_._impl_.switchstatus_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:switchmodule.SwitchStatusProfile)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SwitchStatusProfile::ByteSizeLong(const MessageLite& base) {
  const SwitchStatusProfile& this_ = static_cast<const SwitchStatusProfile&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SwitchStatusProfile::ByteSizeLong() const {
  const SwitchStatusProfile& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:switchmodule.SwitchStatusProfile)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // .commonmodule.StatusMessageInfo statusMessageInfo = 1 [(.uml.option_parent_message) = true];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.statusmessageinfo_);
    }
    // .switchmodule.ProtectedSwitch protectedSwitch = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.protectedswitch_);
    }
    // .switchmodule.SwitchStatus switchStatus = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.switchstatus_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void SwitchStatusProfile::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SwitchStatusProfile*>(&to_msg);
  auto& from = static_cast<const SwitchStatusProfile&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:switchmodule.SwitchStatusProfile)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.statusmessageinfo_ != nullptr);
      if (_this->_impl_.statusmessageinfo_ == nullptr) {
        _this->_impl_.statusmessageinfo_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.statusmessageinfo_);
      } else {
        _this->_impl_.statusmessageinfo_->MergeFrom(*from._impl_.statusmessageinfo_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.protectedswitch_ != nullptr);
      if (_this->_impl_.protectedswitch_ == nullptr) {
        _this->_impl_.protectedswitch_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.protectedswitch_);
      } else {
        _this->_impl_.protectedswitch_->MergeFrom(*from._impl_.protectedswitch_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(from._impl_.switchstatus_ != nullptr);
      if (_this->_impl_.switchstatus_ == nullptr) {
        _this->_impl_.switchstatus_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.switchstatus_);
      } else {
        _this->_impl_.switchstatus_->MergeFrom(*from._impl_.switchstatus_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SwitchStatusProfile::CopyFrom(const SwitchStatusProfile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:switchmodule.SwitchStatusProfile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SwitchStatusProfile::InternalSwap(SwitchStatusProfile* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SwitchStatusProfile, _impl_.switchstatus_)
      + sizeof(SwitchStatusProfile::_impl_.switchstatus_)
      - PROTOBUF_FIELD_OFFSET(SwitchStatusProfile, _impl_.statusmessageinfo_)>(
          reinterpret_cast<char*>(&_impl_.statusmessageinfo_),
          reinterpret_cast<char*>(&other->_impl_.statusmessageinfo_));
}

::google::protobuf::Metadata SwitchStatusProfile::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace switchmodule
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_switchmodule_2fswitchmodule_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
