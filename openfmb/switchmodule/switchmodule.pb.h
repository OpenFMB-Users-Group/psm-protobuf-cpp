// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: switchmodule/switchmodule.proto
// Protobuf C++ Version: 6.31.1

#ifndef switchmodule_2fswitchmodule_2eproto_2epb_2eh
#define switchmodule_2fswitchmodule_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6031001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "uml.pb.h"
#include "commonmodule/commonmodule.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_switchmodule_2fswitchmodule_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_switchmodule_2fswitchmodule_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_switchmodule_2fswitchmodule_2eproto;
}  // extern "C"
namespace switchmodule {
class ProtectedSwitch;
struct ProtectedSwitchDefaultTypeInternal;
extern ProtectedSwitchDefaultTypeInternal _ProtectedSwitch_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ProtectedSwitch_class_data_;
class SwitchDiscreteControl;
struct SwitchDiscreteControlDefaultTypeInternal;
extern SwitchDiscreteControlDefaultTypeInternal _SwitchDiscreteControl_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull SwitchDiscreteControl_class_data_;
class SwitchDiscreteControlProfile;
struct SwitchDiscreteControlProfileDefaultTypeInternal;
extern SwitchDiscreteControlProfileDefaultTypeInternal _SwitchDiscreteControlProfile_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull SwitchDiscreteControlProfile_class_data_;
class SwitchDiscreteControlXSWI;
struct SwitchDiscreteControlXSWIDefaultTypeInternal;
extern SwitchDiscreteControlXSWIDefaultTypeInternal _SwitchDiscreteControlXSWI_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull SwitchDiscreteControlXSWI_class_data_;
class SwitchEvent;
struct SwitchEventDefaultTypeInternal;
extern SwitchEventDefaultTypeInternal _SwitchEvent_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull SwitchEvent_class_data_;
class SwitchEventProfile;
struct SwitchEventProfileDefaultTypeInternal;
extern SwitchEventProfileDefaultTypeInternal _SwitchEventProfile_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull SwitchEventProfile_class_data_;
class SwitchEventXSWI;
struct SwitchEventXSWIDefaultTypeInternal;
extern SwitchEventXSWIDefaultTypeInternal _SwitchEventXSWI_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull SwitchEventXSWI_class_data_;
class SwitchReading;
struct SwitchReadingDefaultTypeInternal;
extern SwitchReadingDefaultTypeInternal _SwitchReading_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull SwitchReading_class_data_;
class SwitchReadingProfile;
struct SwitchReadingProfileDefaultTypeInternal;
extern SwitchReadingProfileDefaultTypeInternal _SwitchReadingProfile_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull SwitchReadingProfile_class_data_;
class SwitchStatus;
struct SwitchStatusDefaultTypeInternal;
extern SwitchStatusDefaultTypeInternal _SwitchStatus_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull SwitchStatus_class_data_;
class SwitchStatusProfile;
struct SwitchStatusProfileDefaultTypeInternal;
extern SwitchStatusProfileDefaultTypeInternal _SwitchStatusProfile_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull SwitchStatusProfile_class_data_;
class SwitchStatusXSWI;
struct SwitchStatusXSWIDefaultTypeInternal;
extern SwitchStatusXSWIDefaultTypeInternal _SwitchStatusXSWI_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull SwitchStatusXSWI_class_data_;
}  // namespace switchmodule
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace switchmodule {

// ===================================================================


// -------------------------------------------------------------------

class ProtectedSwitch final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:switchmodule.ProtectedSwitch) */ {
 public:
  inline ProtectedSwitch() : ProtectedSwitch(nullptr) {}
  ~ProtectedSwitch() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ProtectedSwitch* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ProtectedSwitch));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ProtectedSwitch(::google::protobuf::internal::ConstantInitialized);

  inline ProtectedSwitch(const ProtectedSwitch& from) : ProtectedSwitch(nullptr, from) {}
  inline ProtectedSwitch(ProtectedSwitch&& from) noexcept
      : ProtectedSwitch(nullptr, ::std::move(from)) {}
  inline ProtectedSwitch& operator=(const ProtectedSwitch& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProtectedSwitch& operator=(ProtectedSwitch&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ProtectedSwitch& default_instance() {
    return *reinterpret_cast<const ProtectedSwitch*>(
        &_ProtectedSwitch_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(ProtectedSwitch& a, ProtectedSwitch& b) { a.Swap(&b); }
  inline void Swap(ProtectedSwitch* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ProtectedSwitch* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ProtectedSwitch* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ProtectedSwitch>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ProtectedSwitch& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ProtectedSwitch& from) { ProtectedSwitch::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ProtectedSwitch* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "switchmodule.ProtectedSwitch"; }

 protected:
  explicit ProtectedSwitch(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ProtectedSwitch(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ProtectedSwitch& from);
  ProtectedSwitch(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ProtectedSwitch&& from) noexcept
      : ProtectedSwitch(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kConductingEquipmentFieldNumber = 1,
  };
  // .commonmodule.ConductingEquipment conductingEquipment = 1 [(.uml.option_parent_message) = true];
  bool has_conductingequipment() const;
  void clear_conductingequipment() ;
  const ::commonmodule::ConductingEquipment& conductingequipment() const;
  [[nodiscard]] ::commonmodule::ConductingEquipment* PROTOBUF_NULLABLE release_conductingequipment();
  ::commonmodule::ConductingEquipment* PROTOBUF_NONNULL mutable_conductingequipment();
  void set_allocated_conductingequipment(::commonmodule::ConductingEquipment* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_conductingequipment(::commonmodule::ConductingEquipment* PROTOBUF_NULLABLE value);
  ::commonmodule::ConductingEquipment* PROTOBUF_NULLABLE unsafe_arena_release_conductingequipment();

  private:
  const ::commonmodule::ConductingEquipment& _internal_conductingequipment() const;
  ::commonmodule::ConductingEquipment* PROTOBUF_NONNULL _internal_mutable_conductingequipment();

  public:
  // @@protoc_insertion_point(class_scope:switchmodule.ProtectedSwitch)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ProtectedSwitch& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::commonmodule::ConductingEquipment* PROTOBUF_NULLABLE conductingequipment_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_switchmodule_2fswitchmodule_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ProtectedSwitch_class_data_;
// -------------------------------------------------------------------

class SwitchStatusXSWI final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:switchmodule.SwitchStatusXSWI) */ {
 public:
  inline SwitchStatusXSWI() : SwitchStatusXSWI(nullptr) {}
  ~SwitchStatusXSWI() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SwitchStatusXSWI* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SwitchStatusXSWI));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SwitchStatusXSWI(::google::protobuf::internal::ConstantInitialized);

  inline SwitchStatusXSWI(const SwitchStatusXSWI& from) : SwitchStatusXSWI(nullptr, from) {}
  inline SwitchStatusXSWI(SwitchStatusXSWI&& from) noexcept
      : SwitchStatusXSWI(nullptr, ::std::move(from)) {}
  inline SwitchStatusXSWI& operator=(const SwitchStatusXSWI& from) {
    CopyFrom(from);
    return *this;
  }
  inline SwitchStatusXSWI& operator=(SwitchStatusXSWI&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SwitchStatusXSWI& default_instance() {
    return *reinterpret_cast<const SwitchStatusXSWI*>(
        &_SwitchStatusXSWI_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(SwitchStatusXSWI& a, SwitchStatusXSWI& b) { a.Swap(&b); }
  inline void Swap(SwitchStatusXSWI* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SwitchStatusXSWI* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SwitchStatusXSWI* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SwitchStatusXSWI>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SwitchStatusXSWI& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SwitchStatusXSWI& from) { SwitchStatusXSWI::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SwitchStatusXSWI* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "switchmodule.SwitchStatusXSWI"; }

 protected:
  explicit SwitchStatusXSWI(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  SwitchStatusXSWI(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const SwitchStatusXSWI& from);
  SwitchStatusXSWI(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, SwitchStatusXSWI&& from) noexcept
      : SwitchStatusXSWI(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLogicalNodeForEventAndStatusFieldNumber = 1,
    kDynamicTestFieldNumber = 2,
    kPosFieldNumber = 4,
    kProtectionPickupFieldNumber = 5,
  };
  // .commonmodule.LogicalNodeForEventAndStatus logicalNodeForEventAndStatus = 1 [(.uml.option_parent_message) = true];
  bool has_logicalnodeforeventandstatus() const;
  void clear_logicalnodeforeventandstatus() ;
  const ::commonmodule::LogicalNodeForEventAndStatus& logicalnodeforeventandstatus() const;
  [[nodiscard]] ::commonmodule::LogicalNodeForEventAndStatus* PROTOBUF_NULLABLE release_logicalnodeforeventandstatus();
  ::commonmodule::LogicalNodeForEventAndStatus* PROTOBUF_NONNULL mutable_logicalnodeforeventandstatus();
  void set_allocated_logicalnodeforeventandstatus(::commonmodule::LogicalNodeForEventAndStatus* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_logicalnodeforeventandstatus(::commonmodule::LogicalNodeForEventAndStatus* PROTOBUF_NULLABLE value);
  ::commonmodule::LogicalNodeForEventAndStatus* PROTOBUF_NULLABLE unsafe_arena_release_logicalnodeforeventandstatus();

  private:
  const ::commonmodule::LogicalNodeForEventAndStatus& _internal_logicalnodeforeventandstatus() const;
  ::commonmodule::LogicalNodeForEventAndStatus* PROTOBUF_NONNULL _internal_mutable_logicalnodeforeventandstatus();

  public:
  // .commonmodule.ENS_DynamicTestKind DynamicTest = 2;
  bool has_dynamictest() const;
  void clear_dynamictest() ;
  const ::commonmodule::ENS_DynamicTestKind& dynamictest() const;
  [[nodiscard]] ::commonmodule::ENS_DynamicTestKind* PROTOBUF_NULLABLE release_dynamictest();
  ::commonmodule::ENS_DynamicTestKind* PROTOBUF_NONNULL mutable_dynamictest();
  void set_allocated_dynamictest(::commonmodule::ENS_DynamicTestKind* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_dynamictest(::commonmodule::ENS_DynamicTestKind* PROTOBUF_NULLABLE value);
  ::commonmodule::ENS_DynamicTestKind* PROTOBUF_NULLABLE unsafe_arena_release_dynamictest();

  private:
  const ::commonmodule::ENS_DynamicTestKind& _internal_dynamictest() const;
  ::commonmodule::ENS_DynamicTestKind* PROTOBUF_NONNULL _internal_mutable_dynamictest();

  public:
  // .commonmodule.PhaseDPS Pos = 4;
  bool has_pos() const;
  void clear_pos() ;
  const ::commonmodule::PhaseDPS& pos() const;
  [[nodiscard]] ::commonmodule::PhaseDPS* PROTOBUF_NULLABLE release_pos();
  ::commonmodule::PhaseDPS* PROTOBUF_NONNULL mutable_pos();
  void set_allocated_pos(::commonmodule::PhaseDPS* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_pos(::commonmodule::PhaseDPS* PROTOBUF_NULLABLE value);
  ::commonmodule::PhaseDPS* PROTOBUF_NULLABLE unsafe_arena_release_pos();

  private:
  const ::commonmodule::PhaseDPS& _internal_pos() const;
  ::commonmodule::PhaseDPS* PROTOBUF_NONNULL _internal_mutable_pos();

  public:
  // .commonmodule.PhaseSPS ProtectionPickup = 5 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  bool has_protectionpickup() const;
  void clear_protectionpickup() ;
  const ::commonmodule::PhaseSPS& protectionpickup() const;
  [[nodiscard]] ::commonmodule::PhaseSPS* PROTOBUF_NULLABLE release_protectionpickup();
  ::commonmodule::PhaseSPS* PROTOBUF_NONNULL mutable_protectionpickup();
  void set_allocated_protectionpickup(::commonmodule::PhaseSPS* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_protectionpickup(::commonmodule::PhaseSPS* PROTOBUF_NULLABLE value);
  ::commonmodule::PhaseSPS* PROTOBUF_NULLABLE unsafe_arena_release_protectionpickup();

  private:
  const ::commonmodule::PhaseSPS& _internal_protectionpickup() const;
  ::commonmodule::PhaseSPS* PROTOBUF_NONNULL _internal_mutable_protectionpickup();

  public:
  // @@protoc_insertion_point(class_scope:switchmodule.SwitchStatusXSWI)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 4,
                                   4, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const SwitchStatusXSWI& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::commonmodule::LogicalNodeForEventAndStatus* PROTOBUF_NULLABLE logicalnodeforeventandstatus_;
    ::commonmodule::ENS_DynamicTestKind* PROTOBUF_NULLABLE dynamictest_;
    ::commonmodule::PhaseDPS* PROTOBUF_NULLABLE pos_;
    ::commonmodule::PhaseSPS* PROTOBUF_NULLABLE protectionpickup_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_switchmodule_2fswitchmodule_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull SwitchStatusXSWI_class_data_;
// -------------------------------------------------------------------

class SwitchEventXSWI final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:switchmodule.SwitchEventXSWI) */ {
 public:
  inline SwitchEventXSWI() : SwitchEventXSWI(nullptr) {}
  ~SwitchEventXSWI() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SwitchEventXSWI* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SwitchEventXSWI));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SwitchEventXSWI(::google::protobuf::internal::ConstantInitialized);

  inline SwitchEventXSWI(const SwitchEventXSWI& from) : SwitchEventXSWI(nullptr, from) {}
  inline SwitchEventXSWI(SwitchEventXSWI&& from) noexcept
      : SwitchEventXSWI(nullptr, ::std::move(from)) {}
  inline SwitchEventXSWI& operator=(const SwitchEventXSWI& from) {
    CopyFrom(from);
    return *this;
  }
  inline SwitchEventXSWI& operator=(SwitchEventXSWI&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SwitchEventXSWI& default_instance() {
    return *reinterpret_cast<const SwitchEventXSWI*>(
        &_SwitchEventXSWI_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(SwitchEventXSWI& a, SwitchEventXSWI& b) { a.Swap(&b); }
  inline void Swap(SwitchEventXSWI* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SwitchEventXSWI* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SwitchEventXSWI* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SwitchEventXSWI>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SwitchEventXSWI& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SwitchEventXSWI& from) { SwitchEventXSWI::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SwitchEventXSWI* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "switchmodule.SwitchEventXSWI"; }

 protected:
  explicit SwitchEventXSWI(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  SwitchEventXSWI(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const SwitchEventXSWI& from);
  SwitchEventXSWI(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, SwitchEventXSWI&& from) noexcept
      : SwitchEventXSWI(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLogicalNodeForEventAndStatusFieldNumber = 1,
    kDynamicTestFieldNumber = 2,
    kPosFieldNumber = 3,
  };
  // .commonmodule.LogicalNodeForEventAndStatus logicalNodeForEventAndStatus = 1 [(.uml.option_parent_message) = true];
  bool has_logicalnodeforeventandstatus() const;
  void clear_logicalnodeforeventandstatus() ;
  const ::commonmodule::LogicalNodeForEventAndStatus& logicalnodeforeventandstatus() const;
  [[nodiscard]] ::commonmodule::LogicalNodeForEventAndStatus* PROTOBUF_NULLABLE release_logicalnodeforeventandstatus();
  ::commonmodule::LogicalNodeForEventAndStatus* PROTOBUF_NONNULL mutable_logicalnodeforeventandstatus();
  void set_allocated_logicalnodeforeventandstatus(::commonmodule::LogicalNodeForEventAndStatus* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_logicalnodeforeventandstatus(::commonmodule::LogicalNodeForEventAndStatus* PROTOBUF_NULLABLE value);
  ::commonmodule::LogicalNodeForEventAndStatus* PROTOBUF_NULLABLE unsafe_arena_release_logicalnodeforeventandstatus();

  private:
  const ::commonmodule::LogicalNodeForEventAndStatus& _internal_logicalnodeforeventandstatus() const;
  ::commonmodule::LogicalNodeForEventAndStatus* PROTOBUF_NONNULL _internal_mutable_logicalnodeforeventandstatus();

  public:
  // .commonmodule.ENS_DynamicTestKind DynamicTest = 2;
  bool has_dynamictest() const;
  void clear_dynamictest() ;
  const ::commonmodule::ENS_DynamicTestKind& dynamictest() const;
  [[nodiscard]] ::commonmodule::ENS_DynamicTestKind* PROTOBUF_NULLABLE release_dynamictest();
  ::commonmodule::ENS_DynamicTestKind* PROTOBUF_NONNULL mutable_dynamictest();
  void set_allocated_dynamictest(::commonmodule::ENS_DynamicTestKind* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_dynamictest(::commonmodule::ENS_DynamicTestKind* PROTOBUF_NULLABLE value);
  ::commonmodule::ENS_DynamicTestKind* PROTOBUF_NULLABLE unsafe_arena_release_dynamictest();

  private:
  const ::commonmodule::ENS_DynamicTestKind& _internal_dynamictest() const;
  ::commonmodule::ENS_DynamicTestKind* PROTOBUF_NONNULL _internal_mutable_dynamictest();

  public:
  // .commonmodule.PhaseDPS Pos = 3;
  bool has_pos() const;
  void clear_pos() ;
  const ::commonmodule::PhaseDPS& pos() const;
  [[nodiscard]] ::commonmodule::PhaseDPS* PROTOBUF_NULLABLE release_pos();
  ::commonmodule::PhaseDPS* PROTOBUF_NONNULL mutable_pos();
  void set_allocated_pos(::commonmodule::PhaseDPS* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_pos(::commonmodule::PhaseDPS* PROTOBUF_NULLABLE value);
  ::commonmodule::PhaseDPS* PROTOBUF_NULLABLE unsafe_arena_release_pos();

  private:
  const ::commonmodule::PhaseDPS& _internal_pos() const;
  ::commonmodule::PhaseDPS* PROTOBUF_NONNULL _internal_mutable_pos();

  public:
  // @@protoc_insertion_point(class_scope:switchmodule.SwitchEventXSWI)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   3, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const SwitchEventXSWI& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::commonmodule::LogicalNodeForEventAndStatus* PROTOBUF_NULLABLE logicalnodeforeventandstatus_;
    ::commonmodule::ENS_DynamicTestKind* PROTOBUF_NULLABLE dynamictest_;
    ::commonmodule::PhaseDPS* PROTOBUF_NULLABLE pos_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_switchmodule_2fswitchmodule_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull SwitchEventXSWI_class_data_;
// -------------------------------------------------------------------

class SwitchDiscreteControlXSWI final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:switchmodule.SwitchDiscreteControlXSWI) */ {
 public:
  inline SwitchDiscreteControlXSWI() : SwitchDiscreteControlXSWI(nullptr) {}
  ~SwitchDiscreteControlXSWI() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SwitchDiscreteControlXSWI* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SwitchDiscreteControlXSWI));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SwitchDiscreteControlXSWI(::google::protobuf::internal::ConstantInitialized);

  inline SwitchDiscreteControlXSWI(const SwitchDiscreteControlXSWI& from) : SwitchDiscreteControlXSWI(nullptr, from) {}
  inline SwitchDiscreteControlXSWI(SwitchDiscreteControlXSWI&& from) noexcept
      : SwitchDiscreteControlXSWI(nullptr, ::std::move(from)) {}
  inline SwitchDiscreteControlXSWI& operator=(const SwitchDiscreteControlXSWI& from) {
    CopyFrom(from);
    return *this;
  }
  inline SwitchDiscreteControlXSWI& operator=(SwitchDiscreteControlXSWI&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SwitchDiscreteControlXSWI& default_instance() {
    return *reinterpret_cast<const SwitchDiscreteControlXSWI*>(
        &_SwitchDiscreteControlXSWI_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(SwitchDiscreteControlXSWI& a, SwitchDiscreteControlXSWI& b) { a.Swap(&b); }
  inline void Swap(SwitchDiscreteControlXSWI* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SwitchDiscreteControlXSWI* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SwitchDiscreteControlXSWI* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SwitchDiscreteControlXSWI>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SwitchDiscreteControlXSWI& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SwitchDiscreteControlXSWI& from) { SwitchDiscreteControlXSWI::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SwitchDiscreteControlXSWI* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "switchmodule.SwitchDiscreteControlXSWI"; }

 protected:
  explicit SwitchDiscreteControlXSWI(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  SwitchDiscreteControlXSWI(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const SwitchDiscreteControlXSWI& from);
  SwitchDiscreteControlXSWI(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, SwitchDiscreteControlXSWI&& from) noexcept
      : SwitchDiscreteControlXSWI(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLogicalNodeForControlFieldNumber = 1,
    kPosFieldNumber = 2,
    kResetProtectionPickupFieldNumber = 3,
  };
  // .commonmodule.LogicalNodeForControl logicalNodeForControl = 1 [(.uml.option_parent_message) = true];
  bool has_logicalnodeforcontrol() const;
  void clear_logicalnodeforcontrol() ;
  const ::commonmodule::LogicalNodeForControl& logicalnodeforcontrol() const;
  [[nodiscard]] ::commonmodule::LogicalNodeForControl* PROTOBUF_NULLABLE release_logicalnodeforcontrol();
  ::commonmodule::LogicalNodeForControl* PROTOBUF_NONNULL mutable_logicalnodeforcontrol();
  void set_allocated_logicalnodeforcontrol(::commonmodule::LogicalNodeForControl* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_logicalnodeforcontrol(::commonmodule::LogicalNodeForControl* PROTOBUF_NULLABLE value);
  ::commonmodule::LogicalNodeForControl* PROTOBUF_NULLABLE unsafe_arena_release_logicalnodeforcontrol();

  private:
  const ::commonmodule::LogicalNodeForControl& _internal_logicalnodeforcontrol() const;
  ::commonmodule::LogicalNodeForControl* PROTOBUF_NONNULL _internal_mutable_logicalnodeforcontrol();

  public:
  // .commonmodule.PhaseDPC Pos = 2;
  bool has_pos() const;
  void clear_pos() ;
  const ::commonmodule::PhaseDPC& pos() const;
  [[nodiscard]] ::commonmodule::PhaseDPC* PROTOBUF_NULLABLE release_pos();
  ::commonmodule::PhaseDPC* PROTOBUF_NONNULL mutable_pos();
  void set_allocated_pos(::commonmodule::PhaseDPC* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_pos(::commonmodule::PhaseDPC* PROTOBUF_NULLABLE value);
  ::commonmodule::PhaseDPC* PROTOBUF_NULLABLE unsafe_arena_release_pos();

  private:
  const ::commonmodule::PhaseDPC& _internal_pos() const;
  ::commonmodule::PhaseDPC* PROTOBUF_NONNULL _internal_mutable_pos();

  public:
  // .commonmodule.ControlSPC ResetProtectionPickup = 3;
  bool has_resetprotectionpickup() const;
  void clear_resetprotectionpickup() ;
  const ::commonmodule::ControlSPC& resetprotectionpickup() const;
  [[nodiscard]] ::commonmodule::ControlSPC* PROTOBUF_NULLABLE release_resetprotectionpickup();
  ::commonmodule::ControlSPC* PROTOBUF_NONNULL mutable_resetprotectionpickup();
  void set_allocated_resetprotectionpickup(::commonmodule::ControlSPC* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_resetprotectionpickup(::commonmodule::ControlSPC* PROTOBUF_NULLABLE value);
  ::commonmodule::ControlSPC* PROTOBUF_NULLABLE unsafe_arena_release_resetprotectionpickup();

  private:
  const ::commonmodule::ControlSPC& _internal_resetprotectionpickup() const;
  ::commonmodule::ControlSPC* PROTOBUF_NONNULL _internal_mutable_resetprotectionpickup();

  public:
  // @@protoc_insertion_point(class_scope:switchmodule.SwitchDiscreteControlXSWI)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   3, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const SwitchDiscreteControlXSWI& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::commonmodule::LogicalNodeForControl* PROTOBUF_NULLABLE logicalnodeforcontrol_;
    ::commonmodule::PhaseDPC* PROTOBUF_NULLABLE pos_;
    ::commonmodule::ControlSPC* PROTOBUF_NULLABLE resetprotectionpickup_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_switchmodule_2fswitchmodule_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull SwitchDiscreteControlXSWI_class_data_;
// -------------------------------------------------------------------

class SwitchStatus final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:switchmodule.SwitchStatus) */ {
 public:
  inline SwitchStatus() : SwitchStatus(nullptr) {}
  ~SwitchStatus() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SwitchStatus* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SwitchStatus));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SwitchStatus(::google::protobuf::internal::ConstantInitialized);

  inline SwitchStatus(const SwitchStatus& from) : SwitchStatus(nullptr, from) {}
  inline SwitchStatus(SwitchStatus&& from) noexcept
      : SwitchStatus(nullptr, ::std::move(from)) {}
  inline SwitchStatus& operator=(const SwitchStatus& from) {
    CopyFrom(from);
    return *this;
  }
  inline SwitchStatus& operator=(SwitchStatus&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SwitchStatus& default_instance() {
    return *reinterpret_cast<const SwitchStatus*>(
        &_SwitchStatus_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(SwitchStatus& a, SwitchStatus& b) { a.Swap(&b); }
  inline void Swap(SwitchStatus* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SwitchStatus* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SwitchStatus* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SwitchStatus>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SwitchStatus& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SwitchStatus& from) { SwitchStatus::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SwitchStatus* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "switchmodule.SwitchStatus"; }

 protected:
  explicit SwitchStatus(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  SwitchStatus(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const SwitchStatus& from);
  SwitchStatus(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, SwitchStatus&& from) noexcept
      : SwitchStatus(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kStatusValueFieldNumber = 1,
    kSwitchStatusXSWIFieldNumber = 2,
  };
  // .commonmodule.StatusValue statusValue = 1 [(.uml.option_parent_message) = true];
  bool has_statusvalue() const;
  void clear_statusvalue() ;
  const ::commonmodule::StatusValue& statusvalue() const;
  [[nodiscard]] ::commonmodule::StatusValue* PROTOBUF_NULLABLE release_statusvalue();
  ::commonmodule::StatusValue* PROTOBUF_NONNULL mutable_statusvalue();
  void set_allocated_statusvalue(::commonmodule::StatusValue* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_statusvalue(::commonmodule::StatusValue* PROTOBUF_NULLABLE value);
  ::commonmodule::StatusValue* PROTOBUF_NULLABLE unsafe_arena_release_statusvalue();

  private:
  const ::commonmodule::StatusValue& _internal_statusvalue() const;
  ::commonmodule::StatusValue* PROTOBUF_NONNULL _internal_mutable_statusvalue();

  public:
  // .switchmodule.SwitchStatusXSWI switchStatusXSWI = 2;
  bool has_switchstatusxswi() const;
  void clear_switchstatusxswi() ;
  const ::switchmodule::SwitchStatusXSWI& switchstatusxswi() const;
  [[nodiscard]] ::switchmodule::SwitchStatusXSWI* PROTOBUF_NULLABLE release_switchstatusxswi();
  ::switchmodule::SwitchStatusXSWI* PROTOBUF_NONNULL mutable_switchstatusxswi();
  void set_allocated_switchstatusxswi(::switchmodule::SwitchStatusXSWI* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_switchstatusxswi(::switchmodule::SwitchStatusXSWI* PROTOBUF_NULLABLE value);
  ::switchmodule::SwitchStatusXSWI* PROTOBUF_NULLABLE unsafe_arena_release_switchstatusxswi();

  private:
  const ::switchmodule::SwitchStatusXSWI& _internal_switchstatusxswi() const;
  ::switchmodule::SwitchStatusXSWI* PROTOBUF_NONNULL _internal_mutable_switchstatusxswi();

  public:
  // @@protoc_insertion_point(class_scope:switchmodule.SwitchStatus)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   2, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const SwitchStatus& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::commonmodule::StatusValue* PROTOBUF_NULLABLE statusvalue_;
    ::switchmodule::SwitchStatusXSWI* PROTOBUF_NULLABLE switchstatusxswi_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_switchmodule_2fswitchmodule_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull SwitchStatus_class_data_;
// -------------------------------------------------------------------

class SwitchReading final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:switchmodule.SwitchReading) */ {
 public:
  inline SwitchReading() : SwitchReading(nullptr) {}
  ~SwitchReading() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SwitchReading* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SwitchReading));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SwitchReading(::google::protobuf::internal::ConstantInitialized);

  inline SwitchReading(const SwitchReading& from) : SwitchReading(nullptr, from) {}
  inline SwitchReading(SwitchReading&& from) noexcept
      : SwitchReading(nullptr, ::std::move(from)) {}
  inline SwitchReading& operator=(const SwitchReading& from) {
    CopyFrom(from);
    return *this;
  }
  inline SwitchReading& operator=(SwitchReading&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SwitchReading& default_instance() {
    return *reinterpret_cast<const SwitchReading*>(
        &_SwitchReading_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(SwitchReading& a, SwitchReading& b) { a.Swap(&b); }
  inline void Swap(SwitchReading* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SwitchReading* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SwitchReading* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SwitchReading>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SwitchReading& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SwitchReading& from) { SwitchReading::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SwitchReading* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "switchmodule.SwitchReading"; }

 protected:
  explicit SwitchReading(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  SwitchReading(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const SwitchReading& from);
  SwitchReading(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, SwitchReading&& from) noexcept
      : SwitchReading(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kConductingEquipmentTerminalReadingFieldNumber = 1,
    kDiffReadingMMXUFieldNumber = 2,
    kPhaseMMTNFieldNumber = 3,
    kReadingMMTRFieldNumber = 4,
    kReadingMMXUFieldNumber = 5,
    kReadingMMDCFieldNumber = 6,
  };
  // .commonmodule.ConductingEquipmentTerminalReading conductingEquipmentTerminalReading = 1 [(.uml.option_parent_message) = true];
  bool has_conductingequipmentterminalreading() const;
  void clear_conductingequipmentterminalreading() ;
  const ::commonmodule::ConductingEquipmentTerminalReading& conductingequipmentterminalreading() const;
  [[nodiscard]] ::commonmodule::ConductingEquipmentTerminalReading* PROTOBUF_NULLABLE release_conductingequipmentterminalreading();
  ::commonmodule::ConductingEquipmentTerminalReading* PROTOBUF_NONNULL mutable_conductingequipmentterminalreading();
  void set_allocated_conductingequipmentterminalreading(::commonmodule::ConductingEquipmentTerminalReading* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_conductingequipmentterminalreading(::commonmodule::ConductingEquipmentTerminalReading* PROTOBUF_NULLABLE value);
  ::commonmodule::ConductingEquipmentTerminalReading* PROTOBUF_NULLABLE unsafe_arena_release_conductingequipmentterminalreading();

  private:
  const ::commonmodule::ConductingEquipmentTerminalReading& _internal_conductingequipmentterminalreading() const;
  ::commonmodule::ConductingEquipmentTerminalReading* PROTOBUF_NONNULL _internal_mutable_conductingequipmentterminalreading();

  public:
  // .commonmodule.ReadingMMXU diffReadingMMXU = 2;
  bool has_diffreadingmmxu() const;
  void clear_diffreadingmmxu() ;
  const ::commonmodule::ReadingMMXU& diffreadingmmxu() const;
  [[nodiscard]] ::commonmodule::ReadingMMXU* PROTOBUF_NULLABLE release_diffreadingmmxu();
  ::commonmodule::ReadingMMXU* PROTOBUF_NONNULL mutable_diffreadingmmxu();
  void set_allocated_diffreadingmmxu(::commonmodule::ReadingMMXU* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_diffreadingmmxu(::commonmodule::ReadingMMXU* PROTOBUF_NULLABLE value);
  ::commonmodule::ReadingMMXU* PROTOBUF_NULLABLE unsafe_arena_release_diffreadingmmxu();

  private:
  const ::commonmodule::ReadingMMXU& _internal_diffreadingmmxu() const;
  ::commonmodule::ReadingMMXU* PROTOBUF_NONNULL _internal_mutable_diffreadingmmxu();

  public:
  // .commonmodule.PhaseMMTN phaseMMTN = 3;
  bool has_phasemmtn() const;
  void clear_phasemmtn() ;
  const ::commonmodule::PhaseMMTN& phasemmtn() const;
  [[nodiscard]] ::commonmodule::PhaseMMTN* PROTOBUF_NULLABLE release_phasemmtn();
  ::commonmodule::PhaseMMTN* PROTOBUF_NONNULL mutable_phasemmtn();
  void set_allocated_phasemmtn(::commonmodule::PhaseMMTN* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_phasemmtn(::commonmodule::PhaseMMTN* PROTOBUF_NULLABLE value);
  ::commonmodule::PhaseMMTN* PROTOBUF_NULLABLE unsafe_arena_release_phasemmtn();

  private:
  const ::commonmodule::PhaseMMTN& _internal_phasemmtn() const;
  ::commonmodule::PhaseMMTN* PROTOBUF_NONNULL _internal_mutable_phasemmtn();

  public:
  // .commonmodule.ReadingMMTR readingMMTR = 4;
  bool has_readingmmtr() const;
  void clear_readingmmtr() ;
  const ::commonmodule::ReadingMMTR& readingmmtr() const;
  [[nodiscard]] ::commonmodule::ReadingMMTR* PROTOBUF_NULLABLE release_readingmmtr();
  ::commonmodule::ReadingMMTR* PROTOBUF_NONNULL mutable_readingmmtr();
  void set_allocated_readingmmtr(::commonmodule::ReadingMMTR* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_readingmmtr(::commonmodule::ReadingMMTR* PROTOBUF_NULLABLE value);
  ::commonmodule::ReadingMMTR* PROTOBUF_NULLABLE unsafe_arena_release_readingmmtr();

  private:
  const ::commonmodule::ReadingMMTR& _internal_readingmmtr() const;
  ::commonmodule::ReadingMMTR* PROTOBUF_NONNULL _internal_mutable_readingmmtr();

  public:
  // .commonmodule.ReadingMMXU readingMMXU = 5;
  bool has_readingmmxu() const;
  void clear_readingmmxu() ;
  const ::commonmodule::ReadingMMXU& readingmmxu() const;
  [[nodiscard]] ::commonmodule::ReadingMMXU* PROTOBUF_NULLABLE release_readingmmxu();
  ::commonmodule::ReadingMMXU* PROTOBUF_NONNULL mutable_readingmmxu();
  void set_allocated_readingmmxu(::commonmodule::ReadingMMXU* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_readingmmxu(::commonmodule::ReadingMMXU* PROTOBUF_NULLABLE value);
  ::commonmodule::ReadingMMXU* PROTOBUF_NULLABLE unsafe_arena_release_readingmmxu();

  private:
  const ::commonmodule::ReadingMMXU& _internal_readingmmxu() const;
  ::commonmodule::ReadingMMXU* PROTOBUF_NONNULL _internal_mutable_readingmmxu();

  public:
  // .commonmodule.ReadingMMDC readingMMDC = 6;
  bool has_readingmmdc() const;
  void clear_readingmmdc() ;
  const ::commonmodule::ReadingMMDC& readingmmdc() const;
  [[nodiscard]] ::commonmodule::ReadingMMDC* PROTOBUF_NULLABLE release_readingmmdc();
  ::commonmodule::ReadingMMDC* PROTOBUF_NONNULL mutable_readingmmdc();
  void set_allocated_readingmmdc(::commonmodule::ReadingMMDC* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_readingmmdc(::commonmodule::ReadingMMDC* PROTOBUF_NULLABLE value);
  ::commonmodule::ReadingMMDC* PROTOBUF_NULLABLE unsafe_arena_release_readingmmdc();

  private:
  const ::commonmodule::ReadingMMDC& _internal_readingmmdc() const;
  ::commonmodule::ReadingMMDC* PROTOBUF_NONNULL _internal_mutable_readingmmdc();

  public:
  // @@protoc_insertion_point(class_scope:switchmodule.SwitchReading)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 6,
                                   6, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const SwitchReading& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::commonmodule::ConductingEquipmentTerminalReading* PROTOBUF_NULLABLE conductingequipmentterminalreading_;
    ::commonmodule::ReadingMMXU* PROTOBUF_NULLABLE diffreadingmmxu_;
    ::commonmodule::PhaseMMTN* PROTOBUF_NULLABLE phasemmtn_;
    ::commonmodule::ReadingMMTR* PROTOBUF_NULLABLE readingmmtr_;
    ::commonmodule::ReadingMMXU* PROTOBUF_NULLABLE readingmmxu_;
    ::commonmodule::ReadingMMDC* PROTOBUF_NULLABLE readingmmdc_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_switchmodule_2fswitchmodule_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull SwitchReading_class_data_;
// -------------------------------------------------------------------

class SwitchEvent final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:switchmodule.SwitchEvent) */ {
 public:
  inline SwitchEvent() : SwitchEvent(nullptr) {}
  ~SwitchEvent() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SwitchEvent* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SwitchEvent));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SwitchEvent(::google::protobuf::internal::ConstantInitialized);

  inline SwitchEvent(const SwitchEvent& from) : SwitchEvent(nullptr, from) {}
  inline SwitchEvent(SwitchEvent&& from) noexcept
      : SwitchEvent(nullptr, ::std::move(from)) {}
  inline SwitchEvent& operator=(const SwitchEvent& from) {
    CopyFrom(from);
    return *this;
  }
  inline SwitchEvent& operator=(SwitchEvent&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SwitchEvent& default_instance() {
    return *reinterpret_cast<const SwitchEvent*>(
        &_SwitchEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(SwitchEvent& a, SwitchEvent& b) { a.Swap(&b); }
  inline void Swap(SwitchEvent* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SwitchEvent* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SwitchEvent* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SwitchEvent>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SwitchEvent& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SwitchEvent& from) { SwitchEvent::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SwitchEvent* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "switchmodule.SwitchEvent"; }

 protected:
  explicit SwitchEvent(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  SwitchEvent(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const SwitchEvent& from);
  SwitchEvent(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, SwitchEvent&& from) noexcept
      : SwitchEvent(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEventValueFieldNumber = 1,
    kSwitchEventXSWIFieldNumber = 2,
  };
  // .commonmodule.EventValue eventValue = 1 [(.uml.option_parent_message) = true];
  bool has_eventvalue() const;
  void clear_eventvalue() ;
  const ::commonmodule::EventValue& eventvalue() const;
  [[nodiscard]] ::commonmodule::EventValue* PROTOBUF_NULLABLE release_eventvalue();
  ::commonmodule::EventValue* PROTOBUF_NONNULL mutable_eventvalue();
  void set_allocated_eventvalue(::commonmodule::EventValue* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_eventvalue(::commonmodule::EventValue* PROTOBUF_NULLABLE value);
  ::commonmodule::EventValue* PROTOBUF_NULLABLE unsafe_arena_release_eventvalue();

  private:
  const ::commonmodule::EventValue& _internal_eventvalue() const;
  ::commonmodule::EventValue* PROTOBUF_NONNULL _internal_mutable_eventvalue();

  public:
  // .switchmodule.SwitchEventXSWI switchEventXSWI = 2;
  bool has_switcheventxswi() const;
  void clear_switcheventxswi() ;
  const ::switchmodule::SwitchEventXSWI& switcheventxswi() const;
  [[nodiscard]] ::switchmodule::SwitchEventXSWI* PROTOBUF_NULLABLE release_switcheventxswi();
  ::switchmodule::SwitchEventXSWI* PROTOBUF_NONNULL mutable_switcheventxswi();
  void set_allocated_switcheventxswi(::switchmodule::SwitchEventXSWI* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_switcheventxswi(::switchmodule::SwitchEventXSWI* PROTOBUF_NULLABLE value);
  ::switchmodule::SwitchEventXSWI* PROTOBUF_NULLABLE unsafe_arena_release_switcheventxswi();

  private:
  const ::switchmodule::SwitchEventXSWI& _internal_switcheventxswi() const;
  ::switchmodule::SwitchEventXSWI* PROTOBUF_NONNULL _internal_mutable_switcheventxswi();

  public:
  // @@protoc_insertion_point(class_scope:switchmodule.SwitchEvent)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   2, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const SwitchEvent& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::commonmodule::EventValue* PROTOBUF_NULLABLE eventvalue_;
    ::switchmodule::SwitchEventXSWI* PROTOBUF_NULLABLE switcheventxswi_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_switchmodule_2fswitchmodule_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull SwitchEvent_class_data_;
// -------------------------------------------------------------------

class SwitchDiscreteControl final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:switchmodule.SwitchDiscreteControl) */ {
 public:
  inline SwitchDiscreteControl() : SwitchDiscreteControl(nullptr) {}
  ~SwitchDiscreteControl() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SwitchDiscreteControl* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SwitchDiscreteControl));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SwitchDiscreteControl(::google::protobuf::internal::ConstantInitialized);

  inline SwitchDiscreteControl(const SwitchDiscreteControl& from) : SwitchDiscreteControl(nullptr, from) {}
  inline SwitchDiscreteControl(SwitchDiscreteControl&& from) noexcept
      : SwitchDiscreteControl(nullptr, ::std::move(from)) {}
  inline SwitchDiscreteControl& operator=(const SwitchDiscreteControl& from) {
    CopyFrom(from);
    return *this;
  }
  inline SwitchDiscreteControl& operator=(SwitchDiscreteControl&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SwitchDiscreteControl& default_instance() {
    return *reinterpret_cast<const SwitchDiscreteControl*>(
        &_SwitchDiscreteControl_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(SwitchDiscreteControl& a, SwitchDiscreteControl& b) { a.Swap(&b); }
  inline void Swap(SwitchDiscreteControl* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SwitchDiscreteControl* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SwitchDiscreteControl* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SwitchDiscreteControl>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SwitchDiscreteControl& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SwitchDiscreteControl& from) { SwitchDiscreteControl::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SwitchDiscreteControl* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "switchmodule.SwitchDiscreteControl"; }

 protected:
  explicit SwitchDiscreteControl(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  SwitchDiscreteControl(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const SwitchDiscreteControl& from);
  SwitchDiscreteControl(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, SwitchDiscreteControl&& from) noexcept
      : SwitchDiscreteControl(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kControlValueFieldNumber = 1,
    kCheckFieldNumber = 2,
    kSwitchDiscreteControlXSWIFieldNumber = 3,
  };
  // .commonmodule.ControlValue controlValue = 1 [(.uml.option_parent_message) = true];
  bool has_controlvalue() const;
  void clear_controlvalue() ;
  const ::commonmodule::ControlValue& controlvalue() const;
  [[nodiscard]] ::commonmodule::ControlValue* PROTOBUF_NULLABLE release_controlvalue();
  ::commonmodule::ControlValue* PROTOBUF_NONNULL mutable_controlvalue();
  void set_allocated_controlvalue(::commonmodule::ControlValue* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_controlvalue(::commonmodule::ControlValue* PROTOBUF_NULLABLE value);
  ::commonmodule::ControlValue* PROTOBUF_NULLABLE unsafe_arena_release_controlvalue();

  private:
  const ::commonmodule::ControlValue& _internal_controlvalue() const;
  ::commonmodule::ControlValue* PROTOBUF_NONNULL _internal_mutable_controlvalue();

  public:
  // .commonmodule.CheckConditions check = 2;
  bool has_check() const;
  void clear_check() ;
  const ::commonmodule::CheckConditions& check() const;
  [[nodiscard]] ::commonmodule::CheckConditions* PROTOBUF_NULLABLE release_check();
  ::commonmodule::CheckConditions* PROTOBUF_NONNULL mutable_check();
  void set_allocated_check(::commonmodule::CheckConditions* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_check(::commonmodule::CheckConditions* PROTOBUF_NULLABLE value);
  ::commonmodule::CheckConditions* PROTOBUF_NULLABLE unsafe_arena_release_check();

  private:
  const ::commonmodule::CheckConditions& _internal_check() const;
  ::commonmodule::CheckConditions* PROTOBUF_NONNULL _internal_mutable_check();

  public:
  // .switchmodule.SwitchDiscreteControlXSWI switchDiscreteControlXSWI = 3;
  bool has_switchdiscretecontrolxswi() const;
  void clear_switchdiscretecontrolxswi() ;
  const ::switchmodule::SwitchDiscreteControlXSWI& switchdiscretecontrolxswi() const;
  [[nodiscard]] ::switchmodule::SwitchDiscreteControlXSWI* PROTOBUF_NULLABLE release_switchdiscretecontrolxswi();
  ::switchmodule::SwitchDiscreteControlXSWI* PROTOBUF_NONNULL mutable_switchdiscretecontrolxswi();
  void set_allocated_switchdiscretecontrolxswi(::switchmodule::SwitchDiscreteControlXSWI* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_switchdiscretecontrolxswi(::switchmodule::SwitchDiscreteControlXSWI* PROTOBUF_NULLABLE value);
  ::switchmodule::SwitchDiscreteControlXSWI* PROTOBUF_NULLABLE unsafe_arena_release_switchdiscretecontrolxswi();

  private:
  const ::switchmodule::SwitchDiscreteControlXSWI& _internal_switchdiscretecontrolxswi() const;
  ::switchmodule::SwitchDiscreteControlXSWI* PROTOBUF_NONNULL _internal_mutable_switchdiscretecontrolxswi();

  public:
  // @@protoc_insertion_point(class_scope:switchmodule.SwitchDiscreteControl)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   3, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const SwitchDiscreteControl& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::commonmodule::ControlValue* PROTOBUF_NULLABLE controlvalue_;
    ::commonmodule::CheckConditions* PROTOBUF_NULLABLE check_;
    ::switchmodule::SwitchDiscreteControlXSWI* PROTOBUF_NULLABLE switchdiscretecontrolxswi_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_switchmodule_2fswitchmodule_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull SwitchDiscreteControl_class_data_;
// -------------------------------------------------------------------

class SwitchStatusProfile final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:switchmodule.SwitchStatusProfile) */ {
 public:
  inline SwitchStatusProfile() : SwitchStatusProfile(nullptr) {}
  ~SwitchStatusProfile() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SwitchStatusProfile* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SwitchStatusProfile));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SwitchStatusProfile(::google::protobuf::internal::ConstantInitialized);

  inline SwitchStatusProfile(const SwitchStatusProfile& from) : SwitchStatusProfile(nullptr, from) {}
  inline SwitchStatusProfile(SwitchStatusProfile&& from) noexcept
      : SwitchStatusProfile(nullptr, ::std::move(from)) {}
  inline SwitchStatusProfile& operator=(const SwitchStatusProfile& from) {
    CopyFrom(from);
    return *this;
  }
  inline SwitchStatusProfile& operator=(SwitchStatusProfile&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SwitchStatusProfile& default_instance() {
    return *reinterpret_cast<const SwitchStatusProfile*>(
        &_SwitchStatusProfile_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(SwitchStatusProfile& a, SwitchStatusProfile& b) { a.Swap(&b); }
  inline void Swap(SwitchStatusProfile* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SwitchStatusProfile* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SwitchStatusProfile* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SwitchStatusProfile>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SwitchStatusProfile& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SwitchStatusProfile& from) { SwitchStatusProfile::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SwitchStatusProfile* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "switchmodule.SwitchStatusProfile"; }

 protected:
  explicit SwitchStatusProfile(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  SwitchStatusProfile(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const SwitchStatusProfile& from);
  SwitchStatusProfile(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, SwitchStatusProfile&& from) noexcept
      : SwitchStatusProfile(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kStatusMessageInfoFieldNumber = 1,
    kProtectedSwitchFieldNumber = 2,
    kSwitchStatusFieldNumber = 3,
  };
  // .commonmodule.StatusMessageInfo statusMessageInfo = 1 [(.uml.option_parent_message) = true];
  bool has_statusmessageinfo() const;
  void clear_statusmessageinfo() ;
  const ::commonmodule::StatusMessageInfo& statusmessageinfo() const;
  [[nodiscard]] ::commonmodule::StatusMessageInfo* PROTOBUF_NULLABLE release_statusmessageinfo();
  ::commonmodule::StatusMessageInfo* PROTOBUF_NONNULL mutable_statusmessageinfo();
  void set_allocated_statusmessageinfo(::commonmodule::StatusMessageInfo* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_statusmessageinfo(::commonmodule::StatusMessageInfo* PROTOBUF_NULLABLE value);
  ::commonmodule::StatusMessageInfo* PROTOBUF_NULLABLE unsafe_arena_release_statusmessageinfo();

  private:
  const ::commonmodule::StatusMessageInfo& _internal_statusmessageinfo() const;
  ::commonmodule::StatusMessageInfo* PROTOBUF_NONNULL _internal_mutable_statusmessageinfo();

  public:
  // .switchmodule.ProtectedSwitch protectedSwitch = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  bool has_protectedswitch() const;
  void clear_protectedswitch() ;
  const ::switchmodule::ProtectedSwitch& protectedswitch() const;
  [[nodiscard]] ::switchmodule::ProtectedSwitch* PROTOBUF_NULLABLE release_protectedswitch();
  ::switchmodule::ProtectedSwitch* PROTOBUF_NONNULL mutable_protectedswitch();
  void set_allocated_protectedswitch(::switchmodule::ProtectedSwitch* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_protectedswitch(::switchmodule::ProtectedSwitch* PROTOBUF_NULLABLE value);
  ::switchmodule::ProtectedSwitch* PROTOBUF_NULLABLE unsafe_arena_release_protectedswitch();

  private:
  const ::switchmodule::ProtectedSwitch& _internal_protectedswitch() const;
  ::switchmodule::ProtectedSwitch* PROTOBUF_NONNULL _internal_mutable_protectedswitch();

  public:
  // .switchmodule.SwitchStatus switchStatus = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  bool has_switchstatus() const;
  void clear_switchstatus() ;
  const ::switchmodule::SwitchStatus& switchstatus() const;
  [[nodiscard]] ::switchmodule::SwitchStatus* PROTOBUF_NULLABLE release_switchstatus();
  ::switchmodule::SwitchStatus* PROTOBUF_NONNULL mutable_switchstatus();
  void set_allocated_switchstatus(::switchmodule::SwitchStatus* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_switchstatus(::switchmodule::SwitchStatus* PROTOBUF_NULLABLE value);
  ::switchmodule::SwitchStatus* PROTOBUF_NULLABLE unsafe_arena_release_switchstatus();

  private:
  const ::switchmodule::SwitchStatus& _internal_switchstatus() const;
  ::switchmodule::SwitchStatus* PROTOBUF_NONNULL _internal_mutable_switchstatus();

  public:
  // @@protoc_insertion_point(class_scope:switchmodule.SwitchStatusProfile)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   3, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const SwitchStatusProfile& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::commonmodule::StatusMessageInfo* PROTOBUF_NULLABLE statusmessageinfo_;
    ::switchmodule::ProtectedSwitch* PROTOBUF_NULLABLE protectedswitch_;
    ::switchmodule::SwitchStatus* PROTOBUF_NULLABLE switchstatus_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_switchmodule_2fswitchmodule_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull SwitchStatusProfile_class_data_;
// -------------------------------------------------------------------

class SwitchReadingProfile final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:switchmodule.SwitchReadingProfile) */ {
 public:
  inline SwitchReadingProfile() : SwitchReadingProfile(nullptr) {}
  ~SwitchReadingProfile() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SwitchReadingProfile* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SwitchReadingProfile));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SwitchReadingProfile(::google::protobuf::internal::ConstantInitialized);

  inline SwitchReadingProfile(const SwitchReadingProfile& from) : SwitchReadingProfile(nullptr, from) {}
  inline SwitchReadingProfile(SwitchReadingProfile&& from) noexcept
      : SwitchReadingProfile(nullptr, ::std::move(from)) {}
  inline SwitchReadingProfile& operator=(const SwitchReadingProfile& from) {
    CopyFrom(from);
    return *this;
  }
  inline SwitchReadingProfile& operator=(SwitchReadingProfile&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SwitchReadingProfile& default_instance() {
    return *reinterpret_cast<const SwitchReadingProfile*>(
        &_SwitchReadingProfile_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(SwitchReadingProfile& a, SwitchReadingProfile& b) { a.Swap(&b); }
  inline void Swap(SwitchReadingProfile* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SwitchReadingProfile* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SwitchReadingProfile* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SwitchReadingProfile>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SwitchReadingProfile& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SwitchReadingProfile& from) { SwitchReadingProfile::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SwitchReadingProfile* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "switchmodule.SwitchReadingProfile"; }

 protected:
  explicit SwitchReadingProfile(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  SwitchReadingProfile(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const SwitchReadingProfile& from);
  SwitchReadingProfile(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, SwitchReadingProfile&& from) noexcept
      : SwitchReadingProfile(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSwitchReadingFieldNumber = 3,
    kReadingMessageInfoFieldNumber = 1,
    kProtectedSwitchFieldNumber = 2,
  };
  // repeated .switchmodule.SwitchReading switchReading = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1, (.uml.option_multiplicity_max) = 2];
  int switchreading_size() const;
  private:
  int _internal_switchreading_size() const;

  public:
  void clear_switchreading() ;
  ::switchmodule::SwitchReading* PROTOBUF_NONNULL mutable_switchreading(int index);
  ::google::protobuf::RepeatedPtrField<::switchmodule::SwitchReading>* PROTOBUF_NONNULL mutable_switchreading();

  private:
  const ::google::protobuf::RepeatedPtrField<::switchmodule::SwitchReading>& _internal_switchreading() const;
  ::google::protobuf::RepeatedPtrField<::switchmodule::SwitchReading>* PROTOBUF_NONNULL _internal_mutable_switchreading();
  public:
  const ::switchmodule::SwitchReading& switchreading(int index) const;
  ::switchmodule::SwitchReading* PROTOBUF_NONNULL add_switchreading();
  const ::google::protobuf::RepeatedPtrField<::switchmodule::SwitchReading>& switchreading() const;
  // .commonmodule.ReadingMessageInfo readingMessageInfo = 1 [(.uml.option_parent_message) = true];
  bool has_readingmessageinfo() const;
  void clear_readingmessageinfo() ;
  const ::commonmodule::ReadingMessageInfo& readingmessageinfo() const;
  [[nodiscard]] ::commonmodule::ReadingMessageInfo* PROTOBUF_NULLABLE release_readingmessageinfo();
  ::commonmodule::ReadingMessageInfo* PROTOBUF_NONNULL mutable_readingmessageinfo();
  void set_allocated_readingmessageinfo(::commonmodule::ReadingMessageInfo* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_readingmessageinfo(::commonmodule::ReadingMessageInfo* PROTOBUF_NULLABLE value);
  ::commonmodule::ReadingMessageInfo* PROTOBUF_NULLABLE unsafe_arena_release_readingmessageinfo();

  private:
  const ::commonmodule::ReadingMessageInfo& _internal_readingmessageinfo() const;
  ::commonmodule::ReadingMessageInfo* PROTOBUF_NONNULL _internal_mutable_readingmessageinfo();

  public:
  // .switchmodule.ProtectedSwitch protectedSwitch = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  bool has_protectedswitch() const;
  void clear_protectedswitch() ;
  const ::switchmodule::ProtectedSwitch& protectedswitch() const;
  [[nodiscard]] ::switchmodule::ProtectedSwitch* PROTOBUF_NULLABLE release_protectedswitch();
  ::switchmodule::ProtectedSwitch* PROTOBUF_NONNULL mutable_protectedswitch();
  void set_allocated_protectedswitch(::switchmodule::ProtectedSwitch* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_protectedswitch(::switchmodule::ProtectedSwitch* PROTOBUF_NULLABLE value);
  ::switchmodule::ProtectedSwitch* PROTOBUF_NULLABLE unsafe_arena_release_protectedswitch();

  private:
  const ::switchmodule::ProtectedSwitch& _internal_protectedswitch() const;
  ::switchmodule::ProtectedSwitch* PROTOBUF_NONNULL _internal_mutable_protectedswitch();

  public:
  // @@protoc_insertion_point(class_scope:switchmodule.SwitchReadingProfile)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   3, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const SwitchReadingProfile& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::switchmodule::SwitchReading > switchreading_;
    ::commonmodule::ReadingMessageInfo* PROTOBUF_NULLABLE readingmessageinfo_;
    ::switchmodule::ProtectedSwitch* PROTOBUF_NULLABLE protectedswitch_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_switchmodule_2fswitchmodule_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull SwitchReadingProfile_class_data_;
// -------------------------------------------------------------------

class SwitchEventProfile final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:switchmodule.SwitchEventProfile) */ {
 public:
  inline SwitchEventProfile() : SwitchEventProfile(nullptr) {}
  ~SwitchEventProfile() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SwitchEventProfile* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SwitchEventProfile));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SwitchEventProfile(::google::protobuf::internal::ConstantInitialized);

  inline SwitchEventProfile(const SwitchEventProfile& from) : SwitchEventProfile(nullptr, from) {}
  inline SwitchEventProfile(SwitchEventProfile&& from) noexcept
      : SwitchEventProfile(nullptr, ::std::move(from)) {}
  inline SwitchEventProfile& operator=(const SwitchEventProfile& from) {
    CopyFrom(from);
    return *this;
  }
  inline SwitchEventProfile& operator=(SwitchEventProfile&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SwitchEventProfile& default_instance() {
    return *reinterpret_cast<const SwitchEventProfile*>(
        &_SwitchEventProfile_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(SwitchEventProfile& a, SwitchEventProfile& b) { a.Swap(&b); }
  inline void Swap(SwitchEventProfile* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SwitchEventProfile* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SwitchEventProfile* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SwitchEventProfile>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SwitchEventProfile& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SwitchEventProfile& from) { SwitchEventProfile::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SwitchEventProfile* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "switchmodule.SwitchEventProfile"; }

 protected:
  explicit SwitchEventProfile(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  SwitchEventProfile(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const SwitchEventProfile& from);
  SwitchEventProfile(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, SwitchEventProfile&& from) noexcept
      : SwitchEventProfile(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEventMessageInfoFieldNumber = 1,
    kProtectedSwitchFieldNumber = 2,
    kSwitchEventFieldNumber = 3,
  };
  // .commonmodule.EventMessageInfo eventMessageInfo = 1 [(.uml.option_parent_message) = true];
  bool has_eventmessageinfo() const;
  void clear_eventmessageinfo() ;
  const ::commonmodule::EventMessageInfo& eventmessageinfo() const;
  [[nodiscard]] ::commonmodule::EventMessageInfo* PROTOBUF_NULLABLE release_eventmessageinfo();
  ::commonmodule::EventMessageInfo* PROTOBUF_NONNULL mutable_eventmessageinfo();
  void set_allocated_eventmessageinfo(::commonmodule::EventMessageInfo* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_eventmessageinfo(::commonmodule::EventMessageInfo* PROTOBUF_NULLABLE value);
  ::commonmodule::EventMessageInfo* PROTOBUF_NULLABLE unsafe_arena_release_eventmessageinfo();

  private:
  const ::commonmodule::EventMessageInfo& _internal_eventmessageinfo() const;
  ::commonmodule::EventMessageInfo* PROTOBUF_NONNULL _internal_mutable_eventmessageinfo();

  public:
  // .switchmodule.ProtectedSwitch protectedSwitch = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  bool has_protectedswitch() const;
  void clear_protectedswitch() ;
  const ::switchmodule::ProtectedSwitch& protectedswitch() const;
  [[nodiscard]] ::switchmodule::ProtectedSwitch* PROTOBUF_NULLABLE release_protectedswitch();
  ::switchmodule::ProtectedSwitch* PROTOBUF_NONNULL mutable_protectedswitch();
  void set_allocated_protectedswitch(::switchmodule::ProtectedSwitch* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_protectedswitch(::switchmodule::ProtectedSwitch* PROTOBUF_NULLABLE value);
  ::switchmodule::ProtectedSwitch* PROTOBUF_NULLABLE unsafe_arena_release_protectedswitch();

  private:
  const ::switchmodule::ProtectedSwitch& _internal_protectedswitch() const;
  ::switchmodule::ProtectedSwitch* PROTOBUF_NONNULL _internal_mutable_protectedswitch();

  public:
  // .switchmodule.SwitchEvent switchEvent = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  bool has_switchevent() const;
  void clear_switchevent() ;
  const ::switchmodule::SwitchEvent& switchevent() const;
  [[nodiscard]] ::switchmodule::SwitchEvent* PROTOBUF_NULLABLE release_switchevent();
  ::switchmodule::SwitchEvent* PROTOBUF_NONNULL mutable_switchevent();
  void set_allocated_switchevent(::switchmodule::SwitchEvent* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_switchevent(::switchmodule::SwitchEvent* PROTOBUF_NULLABLE value);
  ::switchmodule::SwitchEvent* PROTOBUF_NULLABLE unsafe_arena_release_switchevent();

  private:
  const ::switchmodule::SwitchEvent& _internal_switchevent() const;
  ::switchmodule::SwitchEvent* PROTOBUF_NONNULL _internal_mutable_switchevent();

  public:
  // @@protoc_insertion_point(class_scope:switchmodule.SwitchEventProfile)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   3, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const SwitchEventProfile& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::commonmodule::EventMessageInfo* PROTOBUF_NULLABLE eventmessageinfo_;
    ::switchmodule::ProtectedSwitch* PROTOBUF_NULLABLE protectedswitch_;
    ::switchmodule::SwitchEvent* PROTOBUF_NULLABLE switchevent_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_switchmodule_2fswitchmodule_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull SwitchEventProfile_class_data_;
// -------------------------------------------------------------------

class SwitchDiscreteControlProfile final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:switchmodule.SwitchDiscreteControlProfile) */ {
 public:
  inline SwitchDiscreteControlProfile() : SwitchDiscreteControlProfile(nullptr) {}
  ~SwitchDiscreteControlProfile() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SwitchDiscreteControlProfile* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SwitchDiscreteControlProfile));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SwitchDiscreteControlProfile(::google::protobuf::internal::ConstantInitialized);

  inline SwitchDiscreteControlProfile(const SwitchDiscreteControlProfile& from) : SwitchDiscreteControlProfile(nullptr, from) {}
  inline SwitchDiscreteControlProfile(SwitchDiscreteControlProfile&& from) noexcept
      : SwitchDiscreteControlProfile(nullptr, ::std::move(from)) {}
  inline SwitchDiscreteControlProfile& operator=(const SwitchDiscreteControlProfile& from) {
    CopyFrom(from);
    return *this;
  }
  inline SwitchDiscreteControlProfile& operator=(SwitchDiscreteControlProfile&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SwitchDiscreteControlProfile& default_instance() {
    return *reinterpret_cast<const SwitchDiscreteControlProfile*>(
        &_SwitchDiscreteControlProfile_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(SwitchDiscreteControlProfile& a, SwitchDiscreteControlProfile& b) { a.Swap(&b); }
  inline void Swap(SwitchDiscreteControlProfile* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SwitchDiscreteControlProfile* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SwitchDiscreteControlProfile* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SwitchDiscreteControlProfile>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SwitchDiscreteControlProfile& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SwitchDiscreteControlProfile& from) { SwitchDiscreteControlProfile::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SwitchDiscreteControlProfile* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "switchmodule.SwitchDiscreteControlProfile"; }

 protected:
  explicit SwitchDiscreteControlProfile(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  SwitchDiscreteControlProfile(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const SwitchDiscreteControlProfile& from);
  SwitchDiscreteControlProfile(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, SwitchDiscreteControlProfile&& from) noexcept
      : SwitchDiscreteControlProfile(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kControlMessageInfoFieldNumber = 1,
    kProtectedSwitchFieldNumber = 2,
    kSwitchDiscreteControlFieldNumber = 3,
  };
  // .commonmodule.ControlMessageInfo controlMessageInfo = 1 [(.uml.option_parent_message) = true];
  bool has_controlmessageinfo() const;
  void clear_controlmessageinfo() ;
  const ::commonmodule::ControlMessageInfo& controlmessageinfo() const;
  [[nodiscard]] ::commonmodule::ControlMessageInfo* PROTOBUF_NULLABLE release_controlmessageinfo();
  ::commonmodule::ControlMessageInfo* PROTOBUF_NONNULL mutable_controlmessageinfo();
  void set_allocated_controlmessageinfo(::commonmodule::ControlMessageInfo* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_controlmessageinfo(::commonmodule::ControlMessageInfo* PROTOBUF_NULLABLE value);
  ::commonmodule::ControlMessageInfo* PROTOBUF_NULLABLE unsafe_arena_release_controlmessageinfo();

  private:
  const ::commonmodule::ControlMessageInfo& _internal_controlmessageinfo() const;
  ::commonmodule::ControlMessageInfo* PROTOBUF_NONNULL _internal_mutable_controlmessageinfo();

  public:
  // .switchmodule.ProtectedSwitch protectedSwitch = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  bool has_protectedswitch() const;
  void clear_protectedswitch() ;
  const ::switchmodule::ProtectedSwitch& protectedswitch() const;
  [[nodiscard]] ::switchmodule::ProtectedSwitch* PROTOBUF_NULLABLE release_protectedswitch();
  ::switchmodule::ProtectedSwitch* PROTOBUF_NONNULL mutable_protectedswitch();
  void set_allocated_protectedswitch(::switchmodule::ProtectedSwitch* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_protectedswitch(::switchmodule::ProtectedSwitch* PROTOBUF_NULLABLE value);
  ::switchmodule::ProtectedSwitch* PROTOBUF_NULLABLE unsafe_arena_release_protectedswitch();

  private:
  const ::switchmodule::ProtectedSwitch& _internal_protectedswitch() const;
  ::switchmodule::ProtectedSwitch* PROTOBUF_NONNULL _internal_mutable_protectedswitch();

  public:
  // .switchmodule.SwitchDiscreteControl switchDiscreteControl = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
  bool has_switchdiscretecontrol() const;
  void clear_switchdiscretecontrol() ;
  const ::switchmodule::SwitchDiscreteControl& switchdiscretecontrol() const;
  [[nodiscard]] ::switchmodule::SwitchDiscreteControl* PROTOBUF_NULLABLE release_switchdiscretecontrol();
  ::switchmodule::SwitchDiscreteControl* PROTOBUF_NONNULL mutable_switchdiscretecontrol();
  void set_allocated_switchdiscretecontrol(::switchmodule::SwitchDiscreteControl* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_switchdiscretecontrol(::switchmodule::SwitchDiscreteControl* PROTOBUF_NULLABLE value);
  ::switchmodule::SwitchDiscreteControl* PROTOBUF_NULLABLE unsafe_arena_release_switchdiscretecontrol();

  private:
  const ::switchmodule::SwitchDiscreteControl& _internal_switchdiscretecontrol() const;
  ::switchmodule::SwitchDiscreteControl* PROTOBUF_NONNULL _internal_mutable_switchdiscretecontrol();

  public:
  // @@protoc_insertion_point(class_scope:switchmodule.SwitchDiscreteControlProfile)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   3, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const SwitchDiscreteControlProfile& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::commonmodule::ControlMessageInfo* PROTOBUF_NULLABLE controlmessageinfo_;
    ::switchmodule::ProtectedSwitch* PROTOBUF_NULLABLE protectedswitch_;
    ::switchmodule::SwitchDiscreteControl* PROTOBUF_NULLABLE switchdiscretecontrol_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_switchmodule_2fswitchmodule_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull SwitchDiscreteControlProfile_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// SwitchDiscreteControlXSWI

// .commonmodule.LogicalNodeForControl logicalNodeForControl = 1 [(.uml.option_parent_message) = true];
inline bool SwitchDiscreteControlXSWI::has_logicalnodeforcontrol() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.logicalnodeforcontrol_ != nullptr);
  return value;
}
inline const ::commonmodule::LogicalNodeForControl& SwitchDiscreteControlXSWI::_internal_logicalnodeforcontrol() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::LogicalNodeForControl* p = _impl_.logicalnodeforcontrol_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::LogicalNodeForControl&>(::commonmodule::_LogicalNodeForControl_default_instance_);
}
inline const ::commonmodule::LogicalNodeForControl& SwitchDiscreteControlXSWI::logicalnodeforcontrol() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:switchmodule.SwitchDiscreteControlXSWI.logicalNodeForControl)
  return _internal_logicalnodeforcontrol();
}
inline void SwitchDiscreteControlXSWI::unsafe_arena_set_allocated_logicalnodeforcontrol(
    ::commonmodule::LogicalNodeForControl* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.logicalnodeforcontrol_);
  }
  _impl_.logicalnodeforcontrol_ = reinterpret_cast<::commonmodule::LogicalNodeForControl*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:switchmodule.SwitchDiscreteControlXSWI.logicalNodeForControl)
}
inline ::commonmodule::LogicalNodeForControl* PROTOBUF_NULLABLE SwitchDiscreteControlXSWI::release_logicalnodeforcontrol() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::commonmodule::LogicalNodeForControl* released = _impl_.logicalnodeforcontrol_;
  _impl_.logicalnodeforcontrol_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::LogicalNodeForControl* PROTOBUF_NULLABLE SwitchDiscreteControlXSWI::unsafe_arena_release_logicalnodeforcontrol() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:switchmodule.SwitchDiscreteControlXSWI.logicalNodeForControl)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::commonmodule::LogicalNodeForControl* temp = _impl_.logicalnodeforcontrol_;
  _impl_.logicalnodeforcontrol_ = nullptr;
  return temp;
}
inline ::commonmodule::LogicalNodeForControl* PROTOBUF_NONNULL SwitchDiscreteControlXSWI::_internal_mutable_logicalnodeforcontrol() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.logicalnodeforcontrol_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::LogicalNodeForControl>(GetArena());
    _impl_.logicalnodeforcontrol_ = reinterpret_cast<::commonmodule::LogicalNodeForControl*>(p);
  }
  return _impl_.logicalnodeforcontrol_;
}
inline ::commonmodule::LogicalNodeForControl* PROTOBUF_NONNULL SwitchDiscreteControlXSWI::mutable_logicalnodeforcontrol()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::commonmodule::LogicalNodeForControl* _msg = _internal_mutable_logicalnodeforcontrol();
  // @@protoc_insertion_point(field_mutable:switchmodule.SwitchDiscreteControlXSWI.logicalNodeForControl)
  return _msg;
}
inline void SwitchDiscreteControlXSWI::set_allocated_logicalnodeforcontrol(::commonmodule::LogicalNodeForControl* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.logicalnodeforcontrol_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.logicalnodeforcontrol_ = reinterpret_cast<::commonmodule::LogicalNodeForControl*>(value);
  // @@protoc_insertion_point(field_set_allocated:switchmodule.SwitchDiscreteControlXSWI.logicalNodeForControl)
}

// .commonmodule.PhaseDPC Pos = 2;
inline bool SwitchDiscreteControlXSWI::has_pos() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pos_ != nullptr);
  return value;
}
inline const ::commonmodule::PhaseDPC& SwitchDiscreteControlXSWI::_internal_pos() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::PhaseDPC* p = _impl_.pos_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::PhaseDPC&>(::commonmodule::_PhaseDPC_default_instance_);
}
inline const ::commonmodule::PhaseDPC& SwitchDiscreteControlXSWI::pos() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:switchmodule.SwitchDiscreteControlXSWI.Pos)
  return _internal_pos();
}
inline void SwitchDiscreteControlXSWI::unsafe_arena_set_allocated_pos(
    ::commonmodule::PhaseDPC* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pos_);
  }
  _impl_.pos_ = reinterpret_cast<::commonmodule::PhaseDPC*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:switchmodule.SwitchDiscreteControlXSWI.Pos)
}
inline ::commonmodule::PhaseDPC* PROTOBUF_NULLABLE SwitchDiscreteControlXSWI::release_pos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::commonmodule::PhaseDPC* released = _impl_.pos_;
  _impl_.pos_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::PhaseDPC* PROTOBUF_NULLABLE SwitchDiscreteControlXSWI::unsafe_arena_release_pos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:switchmodule.SwitchDiscreteControlXSWI.Pos)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::commonmodule::PhaseDPC* temp = _impl_.pos_;
  _impl_.pos_ = nullptr;
  return temp;
}
inline ::commonmodule::PhaseDPC* PROTOBUF_NONNULL SwitchDiscreteControlXSWI::_internal_mutable_pos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pos_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::PhaseDPC>(GetArena());
    _impl_.pos_ = reinterpret_cast<::commonmodule::PhaseDPC*>(p);
  }
  return _impl_.pos_;
}
inline ::commonmodule::PhaseDPC* PROTOBUF_NONNULL SwitchDiscreteControlXSWI::mutable_pos()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::commonmodule::PhaseDPC* _msg = _internal_mutable_pos();
  // @@protoc_insertion_point(field_mutable:switchmodule.SwitchDiscreteControlXSWI.Pos)
  return _msg;
}
inline void SwitchDiscreteControlXSWI::set_allocated_pos(::commonmodule::PhaseDPC* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pos_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.pos_ = reinterpret_cast<::commonmodule::PhaseDPC*>(value);
  // @@protoc_insertion_point(field_set_allocated:switchmodule.SwitchDiscreteControlXSWI.Pos)
}

// .commonmodule.ControlSPC ResetProtectionPickup = 3;
inline bool SwitchDiscreteControlXSWI::has_resetprotectionpickup() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.resetprotectionpickup_ != nullptr);
  return value;
}
inline const ::commonmodule::ControlSPC& SwitchDiscreteControlXSWI::_internal_resetprotectionpickup() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::ControlSPC* p = _impl_.resetprotectionpickup_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::ControlSPC&>(::commonmodule::_ControlSPC_default_instance_);
}
inline const ::commonmodule::ControlSPC& SwitchDiscreteControlXSWI::resetprotectionpickup() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:switchmodule.SwitchDiscreteControlXSWI.ResetProtectionPickup)
  return _internal_resetprotectionpickup();
}
inline void SwitchDiscreteControlXSWI::unsafe_arena_set_allocated_resetprotectionpickup(
    ::commonmodule::ControlSPC* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.resetprotectionpickup_);
  }
  _impl_.resetprotectionpickup_ = reinterpret_cast<::commonmodule::ControlSPC*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:switchmodule.SwitchDiscreteControlXSWI.ResetProtectionPickup)
}
inline ::commonmodule::ControlSPC* PROTOBUF_NULLABLE SwitchDiscreteControlXSWI::release_resetprotectionpickup() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::commonmodule::ControlSPC* released = _impl_.resetprotectionpickup_;
  _impl_.resetprotectionpickup_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::ControlSPC* PROTOBUF_NULLABLE SwitchDiscreteControlXSWI::unsafe_arena_release_resetprotectionpickup() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:switchmodule.SwitchDiscreteControlXSWI.ResetProtectionPickup)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::commonmodule::ControlSPC* temp = _impl_.resetprotectionpickup_;
  _impl_.resetprotectionpickup_ = nullptr;
  return temp;
}
inline ::commonmodule::ControlSPC* PROTOBUF_NONNULL SwitchDiscreteControlXSWI::_internal_mutable_resetprotectionpickup() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.resetprotectionpickup_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::ControlSPC>(GetArena());
    _impl_.resetprotectionpickup_ = reinterpret_cast<::commonmodule::ControlSPC*>(p);
  }
  return _impl_.resetprotectionpickup_;
}
inline ::commonmodule::ControlSPC* PROTOBUF_NONNULL SwitchDiscreteControlXSWI::mutable_resetprotectionpickup()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::commonmodule::ControlSPC* _msg = _internal_mutable_resetprotectionpickup();
  // @@protoc_insertion_point(field_mutable:switchmodule.SwitchDiscreteControlXSWI.ResetProtectionPickup)
  return _msg;
}
inline void SwitchDiscreteControlXSWI::set_allocated_resetprotectionpickup(::commonmodule::ControlSPC* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.resetprotectionpickup_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.resetprotectionpickup_ = reinterpret_cast<::commonmodule::ControlSPC*>(value);
  // @@protoc_insertion_point(field_set_allocated:switchmodule.SwitchDiscreteControlXSWI.ResetProtectionPickup)
}

// -------------------------------------------------------------------

// SwitchDiscreteControl

// .commonmodule.ControlValue controlValue = 1 [(.uml.option_parent_message) = true];
inline bool SwitchDiscreteControl::has_controlvalue() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.controlvalue_ != nullptr);
  return value;
}
inline const ::commonmodule::ControlValue& SwitchDiscreteControl::_internal_controlvalue() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::ControlValue* p = _impl_.controlvalue_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::ControlValue&>(::commonmodule::_ControlValue_default_instance_);
}
inline const ::commonmodule::ControlValue& SwitchDiscreteControl::controlvalue() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:switchmodule.SwitchDiscreteControl.controlValue)
  return _internal_controlvalue();
}
inline void SwitchDiscreteControl::unsafe_arena_set_allocated_controlvalue(
    ::commonmodule::ControlValue* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.controlvalue_);
  }
  _impl_.controlvalue_ = reinterpret_cast<::commonmodule::ControlValue*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:switchmodule.SwitchDiscreteControl.controlValue)
}
inline ::commonmodule::ControlValue* PROTOBUF_NULLABLE SwitchDiscreteControl::release_controlvalue() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::commonmodule::ControlValue* released = _impl_.controlvalue_;
  _impl_.controlvalue_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::ControlValue* PROTOBUF_NULLABLE SwitchDiscreteControl::unsafe_arena_release_controlvalue() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:switchmodule.SwitchDiscreteControl.controlValue)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::commonmodule::ControlValue* temp = _impl_.controlvalue_;
  _impl_.controlvalue_ = nullptr;
  return temp;
}
inline ::commonmodule::ControlValue* PROTOBUF_NONNULL SwitchDiscreteControl::_internal_mutable_controlvalue() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.controlvalue_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::ControlValue>(GetArena());
    _impl_.controlvalue_ = reinterpret_cast<::commonmodule::ControlValue*>(p);
  }
  return _impl_.controlvalue_;
}
inline ::commonmodule::ControlValue* PROTOBUF_NONNULL SwitchDiscreteControl::mutable_controlvalue()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::commonmodule::ControlValue* _msg = _internal_mutable_controlvalue();
  // @@protoc_insertion_point(field_mutable:switchmodule.SwitchDiscreteControl.controlValue)
  return _msg;
}
inline void SwitchDiscreteControl::set_allocated_controlvalue(::commonmodule::ControlValue* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.controlvalue_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.controlvalue_ = reinterpret_cast<::commonmodule::ControlValue*>(value);
  // @@protoc_insertion_point(field_set_allocated:switchmodule.SwitchDiscreteControl.controlValue)
}

// .commonmodule.CheckConditions check = 2;
inline bool SwitchDiscreteControl::has_check() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.check_ != nullptr);
  return value;
}
inline const ::commonmodule::CheckConditions& SwitchDiscreteControl::_internal_check() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::CheckConditions* p = _impl_.check_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::CheckConditions&>(::commonmodule::_CheckConditions_default_instance_);
}
inline const ::commonmodule::CheckConditions& SwitchDiscreteControl::check() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:switchmodule.SwitchDiscreteControl.check)
  return _internal_check();
}
inline void SwitchDiscreteControl::unsafe_arena_set_allocated_check(
    ::commonmodule::CheckConditions* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.check_);
  }
  _impl_.check_ = reinterpret_cast<::commonmodule::CheckConditions*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:switchmodule.SwitchDiscreteControl.check)
}
inline ::commonmodule::CheckConditions* PROTOBUF_NULLABLE SwitchDiscreteControl::release_check() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::commonmodule::CheckConditions* released = _impl_.check_;
  _impl_.check_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::CheckConditions* PROTOBUF_NULLABLE SwitchDiscreteControl::unsafe_arena_release_check() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:switchmodule.SwitchDiscreteControl.check)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::commonmodule::CheckConditions* temp = _impl_.check_;
  _impl_.check_ = nullptr;
  return temp;
}
inline ::commonmodule::CheckConditions* PROTOBUF_NONNULL SwitchDiscreteControl::_internal_mutable_check() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.check_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::CheckConditions>(GetArena());
    _impl_.check_ = reinterpret_cast<::commonmodule::CheckConditions*>(p);
  }
  return _impl_.check_;
}
inline ::commonmodule::CheckConditions* PROTOBUF_NONNULL SwitchDiscreteControl::mutable_check()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::commonmodule::CheckConditions* _msg = _internal_mutable_check();
  // @@protoc_insertion_point(field_mutable:switchmodule.SwitchDiscreteControl.check)
  return _msg;
}
inline void SwitchDiscreteControl::set_allocated_check(::commonmodule::CheckConditions* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.check_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.check_ = reinterpret_cast<::commonmodule::CheckConditions*>(value);
  // @@protoc_insertion_point(field_set_allocated:switchmodule.SwitchDiscreteControl.check)
}

// .switchmodule.SwitchDiscreteControlXSWI switchDiscreteControlXSWI = 3;
inline bool SwitchDiscreteControl::has_switchdiscretecontrolxswi() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.switchdiscretecontrolxswi_ != nullptr);
  return value;
}
inline void SwitchDiscreteControl::clear_switchdiscretecontrolxswi() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.switchdiscretecontrolxswi_ != nullptr) _impl_.switchdiscretecontrolxswi_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::switchmodule::SwitchDiscreteControlXSWI& SwitchDiscreteControl::_internal_switchdiscretecontrolxswi() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::switchmodule::SwitchDiscreteControlXSWI* p = _impl_.switchdiscretecontrolxswi_;
  return p != nullptr ? *p : reinterpret_cast<const ::switchmodule::SwitchDiscreteControlXSWI&>(::switchmodule::_SwitchDiscreteControlXSWI_default_instance_);
}
inline const ::switchmodule::SwitchDiscreteControlXSWI& SwitchDiscreteControl::switchdiscretecontrolxswi() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:switchmodule.SwitchDiscreteControl.switchDiscreteControlXSWI)
  return _internal_switchdiscretecontrolxswi();
}
inline void SwitchDiscreteControl::unsafe_arena_set_allocated_switchdiscretecontrolxswi(
    ::switchmodule::SwitchDiscreteControlXSWI* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.switchdiscretecontrolxswi_);
  }
  _impl_.switchdiscretecontrolxswi_ = reinterpret_cast<::switchmodule::SwitchDiscreteControlXSWI*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:switchmodule.SwitchDiscreteControl.switchDiscreteControlXSWI)
}
inline ::switchmodule::SwitchDiscreteControlXSWI* PROTOBUF_NULLABLE SwitchDiscreteControl::release_switchdiscretecontrolxswi() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::switchmodule::SwitchDiscreteControlXSWI* released = _impl_.switchdiscretecontrolxswi_;
  _impl_.switchdiscretecontrolxswi_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::switchmodule::SwitchDiscreteControlXSWI* PROTOBUF_NULLABLE SwitchDiscreteControl::unsafe_arena_release_switchdiscretecontrolxswi() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:switchmodule.SwitchDiscreteControl.switchDiscreteControlXSWI)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::switchmodule::SwitchDiscreteControlXSWI* temp = _impl_.switchdiscretecontrolxswi_;
  _impl_.switchdiscretecontrolxswi_ = nullptr;
  return temp;
}
inline ::switchmodule::SwitchDiscreteControlXSWI* PROTOBUF_NONNULL SwitchDiscreteControl::_internal_mutable_switchdiscretecontrolxswi() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.switchdiscretecontrolxswi_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::switchmodule::SwitchDiscreteControlXSWI>(GetArena());
    _impl_.switchdiscretecontrolxswi_ = reinterpret_cast<::switchmodule::SwitchDiscreteControlXSWI*>(p);
  }
  return _impl_.switchdiscretecontrolxswi_;
}
inline ::switchmodule::SwitchDiscreteControlXSWI* PROTOBUF_NONNULL SwitchDiscreteControl::mutable_switchdiscretecontrolxswi()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::switchmodule::SwitchDiscreteControlXSWI* _msg = _internal_mutable_switchdiscretecontrolxswi();
  // @@protoc_insertion_point(field_mutable:switchmodule.SwitchDiscreteControl.switchDiscreteControlXSWI)
  return _msg;
}
inline void SwitchDiscreteControl::set_allocated_switchdiscretecontrolxswi(::switchmodule::SwitchDiscreteControlXSWI* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.switchdiscretecontrolxswi_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.switchdiscretecontrolxswi_ = reinterpret_cast<::switchmodule::SwitchDiscreteControlXSWI*>(value);
  // @@protoc_insertion_point(field_set_allocated:switchmodule.SwitchDiscreteControl.switchDiscreteControlXSWI)
}

// -------------------------------------------------------------------

// ProtectedSwitch

// .commonmodule.ConductingEquipment conductingEquipment = 1 [(.uml.option_parent_message) = true];
inline bool ProtectedSwitch::has_conductingequipment() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.conductingequipment_ != nullptr);
  return value;
}
inline const ::commonmodule::ConductingEquipment& ProtectedSwitch::_internal_conductingequipment() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::ConductingEquipment* p = _impl_.conductingequipment_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::ConductingEquipment&>(::commonmodule::_ConductingEquipment_default_instance_);
}
inline const ::commonmodule::ConductingEquipment& ProtectedSwitch::conductingequipment() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:switchmodule.ProtectedSwitch.conductingEquipment)
  return _internal_conductingequipment();
}
inline void ProtectedSwitch::unsafe_arena_set_allocated_conductingequipment(
    ::commonmodule::ConductingEquipment* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.conductingequipment_);
  }
  _impl_.conductingequipment_ = reinterpret_cast<::commonmodule::ConductingEquipment*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:switchmodule.ProtectedSwitch.conductingEquipment)
}
inline ::commonmodule::ConductingEquipment* PROTOBUF_NULLABLE ProtectedSwitch::release_conductingequipment() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::commonmodule::ConductingEquipment* released = _impl_.conductingequipment_;
  _impl_.conductingequipment_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::ConductingEquipment* PROTOBUF_NULLABLE ProtectedSwitch::unsafe_arena_release_conductingequipment() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:switchmodule.ProtectedSwitch.conductingEquipment)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::commonmodule::ConductingEquipment* temp = _impl_.conductingequipment_;
  _impl_.conductingequipment_ = nullptr;
  return temp;
}
inline ::commonmodule::ConductingEquipment* PROTOBUF_NONNULL ProtectedSwitch::_internal_mutable_conductingequipment() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.conductingequipment_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::ConductingEquipment>(GetArena());
    _impl_.conductingequipment_ = reinterpret_cast<::commonmodule::ConductingEquipment*>(p);
  }
  return _impl_.conductingequipment_;
}
inline ::commonmodule::ConductingEquipment* PROTOBUF_NONNULL ProtectedSwitch::mutable_conductingequipment()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::commonmodule::ConductingEquipment* _msg = _internal_mutable_conductingequipment();
  // @@protoc_insertion_point(field_mutable:switchmodule.ProtectedSwitch.conductingEquipment)
  return _msg;
}
inline void ProtectedSwitch::set_allocated_conductingequipment(::commonmodule::ConductingEquipment* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.conductingequipment_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.conductingequipment_ = reinterpret_cast<::commonmodule::ConductingEquipment*>(value);
  // @@protoc_insertion_point(field_set_allocated:switchmodule.ProtectedSwitch.conductingEquipment)
}

// -------------------------------------------------------------------

// SwitchDiscreteControlProfile

// .commonmodule.ControlMessageInfo controlMessageInfo = 1 [(.uml.option_parent_message) = true];
inline bool SwitchDiscreteControlProfile::has_controlmessageinfo() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.controlmessageinfo_ != nullptr);
  return value;
}
inline const ::commonmodule::ControlMessageInfo& SwitchDiscreteControlProfile::_internal_controlmessageinfo() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::ControlMessageInfo* p = _impl_.controlmessageinfo_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::ControlMessageInfo&>(::commonmodule::_ControlMessageInfo_default_instance_);
}
inline const ::commonmodule::ControlMessageInfo& SwitchDiscreteControlProfile::controlmessageinfo() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:switchmodule.SwitchDiscreteControlProfile.controlMessageInfo)
  return _internal_controlmessageinfo();
}
inline void SwitchDiscreteControlProfile::unsafe_arena_set_allocated_controlmessageinfo(
    ::commonmodule::ControlMessageInfo* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.controlmessageinfo_);
  }
  _impl_.controlmessageinfo_ = reinterpret_cast<::commonmodule::ControlMessageInfo*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:switchmodule.SwitchDiscreteControlProfile.controlMessageInfo)
}
inline ::commonmodule::ControlMessageInfo* PROTOBUF_NULLABLE SwitchDiscreteControlProfile::release_controlmessageinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::commonmodule::ControlMessageInfo* released = _impl_.controlmessageinfo_;
  _impl_.controlmessageinfo_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::ControlMessageInfo* PROTOBUF_NULLABLE SwitchDiscreteControlProfile::unsafe_arena_release_controlmessageinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:switchmodule.SwitchDiscreteControlProfile.controlMessageInfo)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::commonmodule::ControlMessageInfo* temp = _impl_.controlmessageinfo_;
  _impl_.controlmessageinfo_ = nullptr;
  return temp;
}
inline ::commonmodule::ControlMessageInfo* PROTOBUF_NONNULL SwitchDiscreteControlProfile::_internal_mutable_controlmessageinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.controlmessageinfo_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::ControlMessageInfo>(GetArena());
    _impl_.controlmessageinfo_ = reinterpret_cast<::commonmodule::ControlMessageInfo*>(p);
  }
  return _impl_.controlmessageinfo_;
}
inline ::commonmodule::ControlMessageInfo* PROTOBUF_NONNULL SwitchDiscreteControlProfile::mutable_controlmessageinfo()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::commonmodule::ControlMessageInfo* _msg = _internal_mutable_controlmessageinfo();
  // @@protoc_insertion_point(field_mutable:switchmodule.SwitchDiscreteControlProfile.controlMessageInfo)
  return _msg;
}
inline void SwitchDiscreteControlProfile::set_allocated_controlmessageinfo(::commonmodule::ControlMessageInfo* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.controlmessageinfo_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.controlmessageinfo_ = reinterpret_cast<::commonmodule::ControlMessageInfo*>(value);
  // @@protoc_insertion_point(field_set_allocated:switchmodule.SwitchDiscreteControlProfile.controlMessageInfo)
}

// .switchmodule.ProtectedSwitch protectedSwitch = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
inline bool SwitchDiscreteControlProfile::has_protectedswitch() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.protectedswitch_ != nullptr);
  return value;
}
inline void SwitchDiscreteControlProfile::clear_protectedswitch() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.protectedswitch_ != nullptr) _impl_.protectedswitch_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::switchmodule::ProtectedSwitch& SwitchDiscreteControlProfile::_internal_protectedswitch() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::switchmodule::ProtectedSwitch* p = _impl_.protectedswitch_;
  return p != nullptr ? *p : reinterpret_cast<const ::switchmodule::ProtectedSwitch&>(::switchmodule::_ProtectedSwitch_default_instance_);
}
inline const ::switchmodule::ProtectedSwitch& SwitchDiscreteControlProfile::protectedswitch() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:switchmodule.SwitchDiscreteControlProfile.protectedSwitch)
  return _internal_protectedswitch();
}
inline void SwitchDiscreteControlProfile::unsafe_arena_set_allocated_protectedswitch(
    ::switchmodule::ProtectedSwitch* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.protectedswitch_);
  }
  _impl_.protectedswitch_ = reinterpret_cast<::switchmodule::ProtectedSwitch*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:switchmodule.SwitchDiscreteControlProfile.protectedSwitch)
}
inline ::switchmodule::ProtectedSwitch* PROTOBUF_NULLABLE SwitchDiscreteControlProfile::release_protectedswitch() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::switchmodule::ProtectedSwitch* released = _impl_.protectedswitch_;
  _impl_.protectedswitch_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::switchmodule::ProtectedSwitch* PROTOBUF_NULLABLE SwitchDiscreteControlProfile::unsafe_arena_release_protectedswitch() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:switchmodule.SwitchDiscreteControlProfile.protectedSwitch)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::switchmodule::ProtectedSwitch* temp = _impl_.protectedswitch_;
  _impl_.protectedswitch_ = nullptr;
  return temp;
}
inline ::switchmodule::ProtectedSwitch* PROTOBUF_NONNULL SwitchDiscreteControlProfile::_internal_mutable_protectedswitch() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.protectedswitch_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::switchmodule::ProtectedSwitch>(GetArena());
    _impl_.protectedswitch_ = reinterpret_cast<::switchmodule::ProtectedSwitch*>(p);
  }
  return _impl_.protectedswitch_;
}
inline ::switchmodule::ProtectedSwitch* PROTOBUF_NONNULL SwitchDiscreteControlProfile::mutable_protectedswitch()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::switchmodule::ProtectedSwitch* _msg = _internal_mutable_protectedswitch();
  // @@protoc_insertion_point(field_mutable:switchmodule.SwitchDiscreteControlProfile.protectedSwitch)
  return _msg;
}
inline void SwitchDiscreteControlProfile::set_allocated_protectedswitch(::switchmodule::ProtectedSwitch* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.protectedswitch_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.protectedswitch_ = reinterpret_cast<::switchmodule::ProtectedSwitch*>(value);
  // @@protoc_insertion_point(field_set_allocated:switchmodule.SwitchDiscreteControlProfile.protectedSwitch)
}

// .switchmodule.SwitchDiscreteControl switchDiscreteControl = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
inline bool SwitchDiscreteControlProfile::has_switchdiscretecontrol() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.switchdiscretecontrol_ != nullptr);
  return value;
}
inline void SwitchDiscreteControlProfile::clear_switchdiscretecontrol() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.switchdiscretecontrol_ != nullptr) _impl_.switchdiscretecontrol_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::switchmodule::SwitchDiscreteControl& SwitchDiscreteControlProfile::_internal_switchdiscretecontrol() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::switchmodule::SwitchDiscreteControl* p = _impl_.switchdiscretecontrol_;
  return p != nullptr ? *p : reinterpret_cast<const ::switchmodule::SwitchDiscreteControl&>(::switchmodule::_SwitchDiscreteControl_default_instance_);
}
inline const ::switchmodule::SwitchDiscreteControl& SwitchDiscreteControlProfile::switchdiscretecontrol() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:switchmodule.SwitchDiscreteControlProfile.switchDiscreteControl)
  return _internal_switchdiscretecontrol();
}
inline void SwitchDiscreteControlProfile::unsafe_arena_set_allocated_switchdiscretecontrol(
    ::switchmodule::SwitchDiscreteControl* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.switchdiscretecontrol_);
  }
  _impl_.switchdiscretecontrol_ = reinterpret_cast<::switchmodule::SwitchDiscreteControl*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:switchmodule.SwitchDiscreteControlProfile.switchDiscreteControl)
}
inline ::switchmodule::SwitchDiscreteControl* PROTOBUF_NULLABLE SwitchDiscreteControlProfile::release_switchdiscretecontrol() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::switchmodule::SwitchDiscreteControl* released = _impl_.switchdiscretecontrol_;
  _impl_.switchdiscretecontrol_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::switchmodule::SwitchDiscreteControl* PROTOBUF_NULLABLE SwitchDiscreteControlProfile::unsafe_arena_release_switchdiscretecontrol() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:switchmodule.SwitchDiscreteControlProfile.switchDiscreteControl)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::switchmodule::SwitchDiscreteControl* temp = _impl_.switchdiscretecontrol_;
  _impl_.switchdiscretecontrol_ = nullptr;
  return temp;
}
inline ::switchmodule::SwitchDiscreteControl* PROTOBUF_NONNULL SwitchDiscreteControlProfile::_internal_mutable_switchdiscretecontrol() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.switchdiscretecontrol_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::switchmodule::SwitchDiscreteControl>(GetArena());
    _impl_.switchdiscretecontrol_ = reinterpret_cast<::switchmodule::SwitchDiscreteControl*>(p);
  }
  return _impl_.switchdiscretecontrol_;
}
inline ::switchmodule::SwitchDiscreteControl* PROTOBUF_NONNULL SwitchDiscreteControlProfile::mutable_switchdiscretecontrol()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::switchmodule::SwitchDiscreteControl* _msg = _internal_mutable_switchdiscretecontrol();
  // @@protoc_insertion_point(field_mutable:switchmodule.SwitchDiscreteControlProfile.switchDiscreteControl)
  return _msg;
}
inline void SwitchDiscreteControlProfile::set_allocated_switchdiscretecontrol(::switchmodule::SwitchDiscreteControl* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.switchdiscretecontrol_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.switchdiscretecontrol_ = reinterpret_cast<::switchmodule::SwitchDiscreteControl*>(value);
  // @@protoc_insertion_point(field_set_allocated:switchmodule.SwitchDiscreteControlProfile.switchDiscreteControl)
}

// -------------------------------------------------------------------

// SwitchEventXSWI

// .commonmodule.LogicalNodeForEventAndStatus logicalNodeForEventAndStatus = 1 [(.uml.option_parent_message) = true];
inline bool SwitchEventXSWI::has_logicalnodeforeventandstatus() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.logicalnodeforeventandstatus_ != nullptr);
  return value;
}
inline const ::commonmodule::LogicalNodeForEventAndStatus& SwitchEventXSWI::_internal_logicalnodeforeventandstatus() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::LogicalNodeForEventAndStatus* p = _impl_.logicalnodeforeventandstatus_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::LogicalNodeForEventAndStatus&>(::commonmodule::_LogicalNodeForEventAndStatus_default_instance_);
}
inline const ::commonmodule::LogicalNodeForEventAndStatus& SwitchEventXSWI::logicalnodeforeventandstatus() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:switchmodule.SwitchEventXSWI.logicalNodeForEventAndStatus)
  return _internal_logicalnodeforeventandstatus();
}
inline void SwitchEventXSWI::unsafe_arena_set_allocated_logicalnodeforeventandstatus(
    ::commonmodule::LogicalNodeForEventAndStatus* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.logicalnodeforeventandstatus_);
  }
  _impl_.logicalnodeforeventandstatus_ = reinterpret_cast<::commonmodule::LogicalNodeForEventAndStatus*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:switchmodule.SwitchEventXSWI.logicalNodeForEventAndStatus)
}
inline ::commonmodule::LogicalNodeForEventAndStatus* PROTOBUF_NULLABLE SwitchEventXSWI::release_logicalnodeforeventandstatus() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::commonmodule::LogicalNodeForEventAndStatus* released = _impl_.logicalnodeforeventandstatus_;
  _impl_.logicalnodeforeventandstatus_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::LogicalNodeForEventAndStatus* PROTOBUF_NULLABLE SwitchEventXSWI::unsafe_arena_release_logicalnodeforeventandstatus() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:switchmodule.SwitchEventXSWI.logicalNodeForEventAndStatus)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::commonmodule::LogicalNodeForEventAndStatus* temp = _impl_.logicalnodeforeventandstatus_;
  _impl_.logicalnodeforeventandstatus_ = nullptr;
  return temp;
}
inline ::commonmodule::LogicalNodeForEventAndStatus* PROTOBUF_NONNULL SwitchEventXSWI::_internal_mutable_logicalnodeforeventandstatus() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.logicalnodeforeventandstatus_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::LogicalNodeForEventAndStatus>(GetArena());
    _impl_.logicalnodeforeventandstatus_ = reinterpret_cast<::commonmodule::LogicalNodeForEventAndStatus*>(p);
  }
  return _impl_.logicalnodeforeventandstatus_;
}
inline ::commonmodule::LogicalNodeForEventAndStatus* PROTOBUF_NONNULL SwitchEventXSWI::mutable_logicalnodeforeventandstatus()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::commonmodule::LogicalNodeForEventAndStatus* _msg = _internal_mutable_logicalnodeforeventandstatus();
  // @@protoc_insertion_point(field_mutable:switchmodule.SwitchEventXSWI.logicalNodeForEventAndStatus)
  return _msg;
}
inline void SwitchEventXSWI::set_allocated_logicalnodeforeventandstatus(::commonmodule::LogicalNodeForEventAndStatus* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.logicalnodeforeventandstatus_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.logicalnodeforeventandstatus_ = reinterpret_cast<::commonmodule::LogicalNodeForEventAndStatus*>(value);
  // @@protoc_insertion_point(field_set_allocated:switchmodule.SwitchEventXSWI.logicalNodeForEventAndStatus)
}

// .commonmodule.ENS_DynamicTestKind DynamicTest = 2;
inline bool SwitchEventXSWI::has_dynamictest() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.dynamictest_ != nullptr);
  return value;
}
inline const ::commonmodule::ENS_DynamicTestKind& SwitchEventXSWI::_internal_dynamictest() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::ENS_DynamicTestKind* p = _impl_.dynamictest_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::ENS_DynamicTestKind&>(::commonmodule::_ENS_DynamicTestKind_default_instance_);
}
inline const ::commonmodule::ENS_DynamicTestKind& SwitchEventXSWI::dynamictest() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:switchmodule.SwitchEventXSWI.DynamicTest)
  return _internal_dynamictest();
}
inline void SwitchEventXSWI::unsafe_arena_set_allocated_dynamictest(
    ::commonmodule::ENS_DynamicTestKind* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.dynamictest_);
  }
  _impl_.dynamictest_ = reinterpret_cast<::commonmodule::ENS_DynamicTestKind*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:switchmodule.SwitchEventXSWI.DynamicTest)
}
inline ::commonmodule::ENS_DynamicTestKind* PROTOBUF_NULLABLE SwitchEventXSWI::release_dynamictest() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::commonmodule::ENS_DynamicTestKind* released = _impl_.dynamictest_;
  _impl_.dynamictest_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::ENS_DynamicTestKind* PROTOBUF_NULLABLE SwitchEventXSWI::unsafe_arena_release_dynamictest() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:switchmodule.SwitchEventXSWI.DynamicTest)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::commonmodule::ENS_DynamicTestKind* temp = _impl_.dynamictest_;
  _impl_.dynamictest_ = nullptr;
  return temp;
}
inline ::commonmodule::ENS_DynamicTestKind* PROTOBUF_NONNULL SwitchEventXSWI::_internal_mutable_dynamictest() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.dynamictest_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::ENS_DynamicTestKind>(GetArena());
    _impl_.dynamictest_ = reinterpret_cast<::commonmodule::ENS_DynamicTestKind*>(p);
  }
  return _impl_.dynamictest_;
}
inline ::commonmodule::ENS_DynamicTestKind* PROTOBUF_NONNULL SwitchEventXSWI::mutable_dynamictest()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::commonmodule::ENS_DynamicTestKind* _msg = _internal_mutable_dynamictest();
  // @@protoc_insertion_point(field_mutable:switchmodule.SwitchEventXSWI.DynamicTest)
  return _msg;
}
inline void SwitchEventXSWI::set_allocated_dynamictest(::commonmodule::ENS_DynamicTestKind* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.dynamictest_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.dynamictest_ = reinterpret_cast<::commonmodule::ENS_DynamicTestKind*>(value);
  // @@protoc_insertion_point(field_set_allocated:switchmodule.SwitchEventXSWI.DynamicTest)
}

// .commonmodule.PhaseDPS Pos = 3;
inline bool SwitchEventXSWI::has_pos() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pos_ != nullptr);
  return value;
}
inline const ::commonmodule::PhaseDPS& SwitchEventXSWI::_internal_pos() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::PhaseDPS* p = _impl_.pos_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::PhaseDPS&>(::commonmodule::_PhaseDPS_default_instance_);
}
inline const ::commonmodule::PhaseDPS& SwitchEventXSWI::pos() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:switchmodule.SwitchEventXSWI.Pos)
  return _internal_pos();
}
inline void SwitchEventXSWI::unsafe_arena_set_allocated_pos(
    ::commonmodule::PhaseDPS* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pos_);
  }
  _impl_.pos_ = reinterpret_cast<::commonmodule::PhaseDPS*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:switchmodule.SwitchEventXSWI.Pos)
}
inline ::commonmodule::PhaseDPS* PROTOBUF_NULLABLE SwitchEventXSWI::release_pos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::commonmodule::PhaseDPS* released = _impl_.pos_;
  _impl_.pos_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::PhaseDPS* PROTOBUF_NULLABLE SwitchEventXSWI::unsafe_arena_release_pos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:switchmodule.SwitchEventXSWI.Pos)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::commonmodule::PhaseDPS* temp = _impl_.pos_;
  _impl_.pos_ = nullptr;
  return temp;
}
inline ::commonmodule::PhaseDPS* PROTOBUF_NONNULL SwitchEventXSWI::_internal_mutable_pos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pos_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::PhaseDPS>(GetArena());
    _impl_.pos_ = reinterpret_cast<::commonmodule::PhaseDPS*>(p);
  }
  return _impl_.pos_;
}
inline ::commonmodule::PhaseDPS* PROTOBUF_NONNULL SwitchEventXSWI::mutable_pos()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::commonmodule::PhaseDPS* _msg = _internal_mutable_pos();
  // @@protoc_insertion_point(field_mutable:switchmodule.SwitchEventXSWI.Pos)
  return _msg;
}
inline void SwitchEventXSWI::set_allocated_pos(::commonmodule::PhaseDPS* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pos_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.pos_ = reinterpret_cast<::commonmodule::PhaseDPS*>(value);
  // @@protoc_insertion_point(field_set_allocated:switchmodule.SwitchEventXSWI.Pos)
}

// -------------------------------------------------------------------

// SwitchEvent

// .commonmodule.EventValue eventValue = 1 [(.uml.option_parent_message) = true];
inline bool SwitchEvent::has_eventvalue() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.eventvalue_ != nullptr);
  return value;
}
inline const ::commonmodule::EventValue& SwitchEvent::_internal_eventvalue() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::EventValue* p = _impl_.eventvalue_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::EventValue&>(::commonmodule::_EventValue_default_instance_);
}
inline const ::commonmodule::EventValue& SwitchEvent::eventvalue() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:switchmodule.SwitchEvent.eventValue)
  return _internal_eventvalue();
}
inline void SwitchEvent::unsafe_arena_set_allocated_eventvalue(
    ::commonmodule::EventValue* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.eventvalue_);
  }
  _impl_.eventvalue_ = reinterpret_cast<::commonmodule::EventValue*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:switchmodule.SwitchEvent.eventValue)
}
inline ::commonmodule::EventValue* PROTOBUF_NULLABLE SwitchEvent::release_eventvalue() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::commonmodule::EventValue* released = _impl_.eventvalue_;
  _impl_.eventvalue_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::EventValue* PROTOBUF_NULLABLE SwitchEvent::unsafe_arena_release_eventvalue() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:switchmodule.SwitchEvent.eventValue)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::commonmodule::EventValue* temp = _impl_.eventvalue_;
  _impl_.eventvalue_ = nullptr;
  return temp;
}
inline ::commonmodule::EventValue* PROTOBUF_NONNULL SwitchEvent::_internal_mutable_eventvalue() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.eventvalue_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::EventValue>(GetArena());
    _impl_.eventvalue_ = reinterpret_cast<::commonmodule::EventValue*>(p);
  }
  return _impl_.eventvalue_;
}
inline ::commonmodule::EventValue* PROTOBUF_NONNULL SwitchEvent::mutable_eventvalue()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::commonmodule::EventValue* _msg = _internal_mutable_eventvalue();
  // @@protoc_insertion_point(field_mutable:switchmodule.SwitchEvent.eventValue)
  return _msg;
}
inline void SwitchEvent::set_allocated_eventvalue(::commonmodule::EventValue* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.eventvalue_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.eventvalue_ = reinterpret_cast<::commonmodule::EventValue*>(value);
  // @@protoc_insertion_point(field_set_allocated:switchmodule.SwitchEvent.eventValue)
}

// .switchmodule.SwitchEventXSWI switchEventXSWI = 2;
inline bool SwitchEvent::has_switcheventxswi() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.switcheventxswi_ != nullptr);
  return value;
}
inline void SwitchEvent::clear_switcheventxswi() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.switcheventxswi_ != nullptr) _impl_.switcheventxswi_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::switchmodule::SwitchEventXSWI& SwitchEvent::_internal_switcheventxswi() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::switchmodule::SwitchEventXSWI* p = _impl_.switcheventxswi_;
  return p != nullptr ? *p : reinterpret_cast<const ::switchmodule::SwitchEventXSWI&>(::switchmodule::_SwitchEventXSWI_default_instance_);
}
inline const ::switchmodule::SwitchEventXSWI& SwitchEvent::switcheventxswi() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:switchmodule.SwitchEvent.switchEventXSWI)
  return _internal_switcheventxswi();
}
inline void SwitchEvent::unsafe_arena_set_allocated_switcheventxswi(
    ::switchmodule::SwitchEventXSWI* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.switcheventxswi_);
  }
  _impl_.switcheventxswi_ = reinterpret_cast<::switchmodule::SwitchEventXSWI*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:switchmodule.SwitchEvent.switchEventXSWI)
}
inline ::switchmodule::SwitchEventXSWI* PROTOBUF_NULLABLE SwitchEvent::release_switcheventxswi() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::switchmodule::SwitchEventXSWI* released = _impl_.switcheventxswi_;
  _impl_.switcheventxswi_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::switchmodule::SwitchEventXSWI* PROTOBUF_NULLABLE SwitchEvent::unsafe_arena_release_switcheventxswi() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:switchmodule.SwitchEvent.switchEventXSWI)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::switchmodule::SwitchEventXSWI* temp = _impl_.switcheventxswi_;
  _impl_.switcheventxswi_ = nullptr;
  return temp;
}
inline ::switchmodule::SwitchEventXSWI* PROTOBUF_NONNULL SwitchEvent::_internal_mutable_switcheventxswi() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.switcheventxswi_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::switchmodule::SwitchEventXSWI>(GetArena());
    _impl_.switcheventxswi_ = reinterpret_cast<::switchmodule::SwitchEventXSWI*>(p);
  }
  return _impl_.switcheventxswi_;
}
inline ::switchmodule::SwitchEventXSWI* PROTOBUF_NONNULL SwitchEvent::mutable_switcheventxswi()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::switchmodule::SwitchEventXSWI* _msg = _internal_mutable_switcheventxswi();
  // @@protoc_insertion_point(field_mutable:switchmodule.SwitchEvent.switchEventXSWI)
  return _msg;
}
inline void SwitchEvent::set_allocated_switcheventxswi(::switchmodule::SwitchEventXSWI* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.switcheventxswi_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.switcheventxswi_ = reinterpret_cast<::switchmodule::SwitchEventXSWI*>(value);
  // @@protoc_insertion_point(field_set_allocated:switchmodule.SwitchEvent.switchEventXSWI)
}

// -------------------------------------------------------------------

// SwitchEventProfile

// .commonmodule.EventMessageInfo eventMessageInfo = 1 [(.uml.option_parent_message) = true];
inline bool SwitchEventProfile::has_eventmessageinfo() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.eventmessageinfo_ != nullptr);
  return value;
}
inline const ::commonmodule::EventMessageInfo& SwitchEventProfile::_internal_eventmessageinfo() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::EventMessageInfo* p = _impl_.eventmessageinfo_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::EventMessageInfo&>(::commonmodule::_EventMessageInfo_default_instance_);
}
inline const ::commonmodule::EventMessageInfo& SwitchEventProfile::eventmessageinfo() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:switchmodule.SwitchEventProfile.eventMessageInfo)
  return _internal_eventmessageinfo();
}
inline void SwitchEventProfile::unsafe_arena_set_allocated_eventmessageinfo(
    ::commonmodule::EventMessageInfo* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.eventmessageinfo_);
  }
  _impl_.eventmessageinfo_ = reinterpret_cast<::commonmodule::EventMessageInfo*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:switchmodule.SwitchEventProfile.eventMessageInfo)
}
inline ::commonmodule::EventMessageInfo* PROTOBUF_NULLABLE SwitchEventProfile::release_eventmessageinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::commonmodule::EventMessageInfo* released = _impl_.eventmessageinfo_;
  _impl_.eventmessageinfo_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::EventMessageInfo* PROTOBUF_NULLABLE SwitchEventProfile::unsafe_arena_release_eventmessageinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:switchmodule.SwitchEventProfile.eventMessageInfo)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::commonmodule::EventMessageInfo* temp = _impl_.eventmessageinfo_;
  _impl_.eventmessageinfo_ = nullptr;
  return temp;
}
inline ::commonmodule::EventMessageInfo* PROTOBUF_NONNULL SwitchEventProfile::_internal_mutable_eventmessageinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.eventmessageinfo_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::EventMessageInfo>(GetArena());
    _impl_.eventmessageinfo_ = reinterpret_cast<::commonmodule::EventMessageInfo*>(p);
  }
  return _impl_.eventmessageinfo_;
}
inline ::commonmodule::EventMessageInfo* PROTOBUF_NONNULL SwitchEventProfile::mutable_eventmessageinfo()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::commonmodule::EventMessageInfo* _msg = _internal_mutable_eventmessageinfo();
  // @@protoc_insertion_point(field_mutable:switchmodule.SwitchEventProfile.eventMessageInfo)
  return _msg;
}
inline void SwitchEventProfile::set_allocated_eventmessageinfo(::commonmodule::EventMessageInfo* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.eventmessageinfo_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.eventmessageinfo_ = reinterpret_cast<::commonmodule::EventMessageInfo*>(value);
  // @@protoc_insertion_point(field_set_allocated:switchmodule.SwitchEventProfile.eventMessageInfo)
}

// .switchmodule.ProtectedSwitch protectedSwitch = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
inline bool SwitchEventProfile::has_protectedswitch() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.protectedswitch_ != nullptr);
  return value;
}
inline void SwitchEventProfile::clear_protectedswitch() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.protectedswitch_ != nullptr) _impl_.protectedswitch_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::switchmodule::ProtectedSwitch& SwitchEventProfile::_internal_protectedswitch() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::switchmodule::ProtectedSwitch* p = _impl_.protectedswitch_;
  return p != nullptr ? *p : reinterpret_cast<const ::switchmodule::ProtectedSwitch&>(::switchmodule::_ProtectedSwitch_default_instance_);
}
inline const ::switchmodule::ProtectedSwitch& SwitchEventProfile::protectedswitch() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:switchmodule.SwitchEventProfile.protectedSwitch)
  return _internal_protectedswitch();
}
inline void SwitchEventProfile::unsafe_arena_set_allocated_protectedswitch(
    ::switchmodule::ProtectedSwitch* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.protectedswitch_);
  }
  _impl_.protectedswitch_ = reinterpret_cast<::switchmodule::ProtectedSwitch*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:switchmodule.SwitchEventProfile.protectedSwitch)
}
inline ::switchmodule::ProtectedSwitch* PROTOBUF_NULLABLE SwitchEventProfile::release_protectedswitch() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::switchmodule::ProtectedSwitch* released = _impl_.protectedswitch_;
  _impl_.protectedswitch_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::switchmodule::ProtectedSwitch* PROTOBUF_NULLABLE SwitchEventProfile::unsafe_arena_release_protectedswitch() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:switchmodule.SwitchEventProfile.protectedSwitch)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::switchmodule::ProtectedSwitch* temp = _impl_.protectedswitch_;
  _impl_.protectedswitch_ = nullptr;
  return temp;
}
inline ::switchmodule::ProtectedSwitch* PROTOBUF_NONNULL SwitchEventProfile::_internal_mutable_protectedswitch() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.protectedswitch_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::switchmodule::ProtectedSwitch>(GetArena());
    _impl_.protectedswitch_ = reinterpret_cast<::switchmodule::ProtectedSwitch*>(p);
  }
  return _impl_.protectedswitch_;
}
inline ::switchmodule::ProtectedSwitch* PROTOBUF_NONNULL SwitchEventProfile::mutable_protectedswitch()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::switchmodule::ProtectedSwitch* _msg = _internal_mutable_protectedswitch();
  // @@protoc_insertion_point(field_mutable:switchmodule.SwitchEventProfile.protectedSwitch)
  return _msg;
}
inline void SwitchEventProfile::set_allocated_protectedswitch(::switchmodule::ProtectedSwitch* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.protectedswitch_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.protectedswitch_ = reinterpret_cast<::switchmodule::ProtectedSwitch*>(value);
  // @@protoc_insertion_point(field_set_allocated:switchmodule.SwitchEventProfile.protectedSwitch)
}

// .switchmodule.SwitchEvent switchEvent = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
inline bool SwitchEventProfile::has_switchevent() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.switchevent_ != nullptr);
  return value;
}
inline void SwitchEventProfile::clear_switchevent() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.switchevent_ != nullptr) _impl_.switchevent_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::switchmodule::SwitchEvent& SwitchEventProfile::_internal_switchevent() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::switchmodule::SwitchEvent* p = _impl_.switchevent_;
  return p != nullptr ? *p : reinterpret_cast<const ::switchmodule::SwitchEvent&>(::switchmodule::_SwitchEvent_default_instance_);
}
inline const ::switchmodule::SwitchEvent& SwitchEventProfile::switchevent() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:switchmodule.SwitchEventProfile.switchEvent)
  return _internal_switchevent();
}
inline void SwitchEventProfile::unsafe_arena_set_allocated_switchevent(
    ::switchmodule::SwitchEvent* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.switchevent_);
  }
  _impl_.switchevent_ = reinterpret_cast<::switchmodule::SwitchEvent*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:switchmodule.SwitchEventProfile.switchEvent)
}
inline ::switchmodule::SwitchEvent* PROTOBUF_NULLABLE SwitchEventProfile::release_switchevent() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::switchmodule::SwitchEvent* released = _impl_.switchevent_;
  _impl_.switchevent_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::switchmodule::SwitchEvent* PROTOBUF_NULLABLE SwitchEventProfile::unsafe_arena_release_switchevent() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:switchmodule.SwitchEventProfile.switchEvent)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::switchmodule::SwitchEvent* temp = _impl_.switchevent_;
  _impl_.switchevent_ = nullptr;
  return temp;
}
inline ::switchmodule::SwitchEvent* PROTOBUF_NONNULL SwitchEventProfile::_internal_mutable_switchevent() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.switchevent_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::switchmodule::SwitchEvent>(GetArena());
    _impl_.switchevent_ = reinterpret_cast<::switchmodule::SwitchEvent*>(p);
  }
  return _impl_.switchevent_;
}
inline ::switchmodule::SwitchEvent* PROTOBUF_NONNULL SwitchEventProfile::mutable_switchevent()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::switchmodule::SwitchEvent* _msg = _internal_mutable_switchevent();
  // @@protoc_insertion_point(field_mutable:switchmodule.SwitchEventProfile.switchEvent)
  return _msg;
}
inline void SwitchEventProfile::set_allocated_switchevent(::switchmodule::SwitchEvent* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.switchevent_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.switchevent_ = reinterpret_cast<::switchmodule::SwitchEvent*>(value);
  // @@protoc_insertion_point(field_set_allocated:switchmodule.SwitchEventProfile.switchEvent)
}

// -------------------------------------------------------------------

// SwitchReading

// .commonmodule.ConductingEquipmentTerminalReading conductingEquipmentTerminalReading = 1 [(.uml.option_parent_message) = true];
inline bool SwitchReading::has_conductingequipmentterminalreading() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.conductingequipmentterminalreading_ != nullptr);
  return value;
}
inline const ::commonmodule::ConductingEquipmentTerminalReading& SwitchReading::_internal_conductingequipmentterminalreading() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::ConductingEquipmentTerminalReading* p = _impl_.conductingequipmentterminalreading_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::ConductingEquipmentTerminalReading&>(::commonmodule::_ConductingEquipmentTerminalReading_default_instance_);
}
inline const ::commonmodule::ConductingEquipmentTerminalReading& SwitchReading::conductingequipmentterminalreading() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:switchmodule.SwitchReading.conductingEquipmentTerminalReading)
  return _internal_conductingequipmentterminalreading();
}
inline void SwitchReading::unsafe_arena_set_allocated_conductingequipmentterminalreading(
    ::commonmodule::ConductingEquipmentTerminalReading* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.conductingequipmentterminalreading_);
  }
  _impl_.conductingequipmentterminalreading_ = reinterpret_cast<::commonmodule::ConductingEquipmentTerminalReading*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:switchmodule.SwitchReading.conductingEquipmentTerminalReading)
}
inline ::commonmodule::ConductingEquipmentTerminalReading* PROTOBUF_NULLABLE SwitchReading::release_conductingequipmentterminalreading() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::commonmodule::ConductingEquipmentTerminalReading* released = _impl_.conductingequipmentterminalreading_;
  _impl_.conductingequipmentterminalreading_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::ConductingEquipmentTerminalReading* PROTOBUF_NULLABLE SwitchReading::unsafe_arena_release_conductingequipmentterminalreading() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:switchmodule.SwitchReading.conductingEquipmentTerminalReading)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::commonmodule::ConductingEquipmentTerminalReading* temp = _impl_.conductingequipmentterminalreading_;
  _impl_.conductingequipmentterminalreading_ = nullptr;
  return temp;
}
inline ::commonmodule::ConductingEquipmentTerminalReading* PROTOBUF_NONNULL SwitchReading::_internal_mutable_conductingequipmentterminalreading() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.conductingequipmentterminalreading_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::ConductingEquipmentTerminalReading>(GetArena());
    _impl_.conductingequipmentterminalreading_ = reinterpret_cast<::commonmodule::ConductingEquipmentTerminalReading*>(p);
  }
  return _impl_.conductingequipmentterminalreading_;
}
inline ::commonmodule::ConductingEquipmentTerminalReading* PROTOBUF_NONNULL SwitchReading::mutable_conductingequipmentterminalreading()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::commonmodule::ConductingEquipmentTerminalReading* _msg = _internal_mutable_conductingequipmentterminalreading();
  // @@protoc_insertion_point(field_mutable:switchmodule.SwitchReading.conductingEquipmentTerminalReading)
  return _msg;
}
inline void SwitchReading::set_allocated_conductingequipmentterminalreading(::commonmodule::ConductingEquipmentTerminalReading* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.conductingequipmentterminalreading_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.conductingequipmentterminalreading_ = reinterpret_cast<::commonmodule::ConductingEquipmentTerminalReading*>(value);
  // @@protoc_insertion_point(field_set_allocated:switchmodule.SwitchReading.conductingEquipmentTerminalReading)
}

// .commonmodule.ReadingMMXU diffReadingMMXU = 2;
inline bool SwitchReading::has_diffreadingmmxu() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.diffreadingmmxu_ != nullptr);
  return value;
}
inline const ::commonmodule::ReadingMMXU& SwitchReading::_internal_diffreadingmmxu() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::ReadingMMXU* p = _impl_.diffreadingmmxu_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::ReadingMMXU&>(::commonmodule::_ReadingMMXU_default_instance_);
}
inline const ::commonmodule::ReadingMMXU& SwitchReading::diffreadingmmxu() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:switchmodule.SwitchReading.diffReadingMMXU)
  return _internal_diffreadingmmxu();
}
inline void SwitchReading::unsafe_arena_set_allocated_diffreadingmmxu(
    ::commonmodule::ReadingMMXU* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.diffreadingmmxu_);
  }
  _impl_.diffreadingmmxu_ = reinterpret_cast<::commonmodule::ReadingMMXU*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:switchmodule.SwitchReading.diffReadingMMXU)
}
inline ::commonmodule::ReadingMMXU* PROTOBUF_NULLABLE SwitchReading::release_diffreadingmmxu() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::commonmodule::ReadingMMXU* released = _impl_.diffreadingmmxu_;
  _impl_.diffreadingmmxu_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::ReadingMMXU* PROTOBUF_NULLABLE SwitchReading::unsafe_arena_release_diffreadingmmxu() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:switchmodule.SwitchReading.diffReadingMMXU)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::commonmodule::ReadingMMXU* temp = _impl_.diffreadingmmxu_;
  _impl_.diffreadingmmxu_ = nullptr;
  return temp;
}
inline ::commonmodule::ReadingMMXU* PROTOBUF_NONNULL SwitchReading::_internal_mutable_diffreadingmmxu() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.diffreadingmmxu_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::ReadingMMXU>(GetArena());
    _impl_.diffreadingmmxu_ = reinterpret_cast<::commonmodule::ReadingMMXU*>(p);
  }
  return _impl_.diffreadingmmxu_;
}
inline ::commonmodule::ReadingMMXU* PROTOBUF_NONNULL SwitchReading::mutable_diffreadingmmxu()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::commonmodule::ReadingMMXU* _msg = _internal_mutable_diffreadingmmxu();
  // @@protoc_insertion_point(field_mutable:switchmodule.SwitchReading.diffReadingMMXU)
  return _msg;
}
inline void SwitchReading::set_allocated_diffreadingmmxu(::commonmodule::ReadingMMXU* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.diffreadingmmxu_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.diffreadingmmxu_ = reinterpret_cast<::commonmodule::ReadingMMXU*>(value);
  // @@protoc_insertion_point(field_set_allocated:switchmodule.SwitchReading.diffReadingMMXU)
}

// .commonmodule.PhaseMMTN phaseMMTN = 3;
inline bool SwitchReading::has_phasemmtn() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.phasemmtn_ != nullptr);
  return value;
}
inline const ::commonmodule::PhaseMMTN& SwitchReading::_internal_phasemmtn() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::PhaseMMTN* p = _impl_.phasemmtn_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::PhaseMMTN&>(::commonmodule::_PhaseMMTN_default_instance_);
}
inline const ::commonmodule::PhaseMMTN& SwitchReading::phasemmtn() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:switchmodule.SwitchReading.phaseMMTN)
  return _internal_phasemmtn();
}
inline void SwitchReading::unsafe_arena_set_allocated_phasemmtn(
    ::commonmodule::PhaseMMTN* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.phasemmtn_);
  }
  _impl_.phasemmtn_ = reinterpret_cast<::commonmodule::PhaseMMTN*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:switchmodule.SwitchReading.phaseMMTN)
}
inline ::commonmodule::PhaseMMTN* PROTOBUF_NULLABLE SwitchReading::release_phasemmtn() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::commonmodule::PhaseMMTN* released = _impl_.phasemmtn_;
  _impl_.phasemmtn_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::PhaseMMTN* PROTOBUF_NULLABLE SwitchReading::unsafe_arena_release_phasemmtn() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:switchmodule.SwitchReading.phaseMMTN)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::commonmodule::PhaseMMTN* temp = _impl_.phasemmtn_;
  _impl_.phasemmtn_ = nullptr;
  return temp;
}
inline ::commonmodule::PhaseMMTN* PROTOBUF_NONNULL SwitchReading::_internal_mutable_phasemmtn() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.phasemmtn_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::PhaseMMTN>(GetArena());
    _impl_.phasemmtn_ = reinterpret_cast<::commonmodule::PhaseMMTN*>(p);
  }
  return _impl_.phasemmtn_;
}
inline ::commonmodule::PhaseMMTN* PROTOBUF_NONNULL SwitchReading::mutable_phasemmtn()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::commonmodule::PhaseMMTN* _msg = _internal_mutable_phasemmtn();
  // @@protoc_insertion_point(field_mutable:switchmodule.SwitchReading.phaseMMTN)
  return _msg;
}
inline void SwitchReading::set_allocated_phasemmtn(::commonmodule::PhaseMMTN* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.phasemmtn_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.phasemmtn_ = reinterpret_cast<::commonmodule::PhaseMMTN*>(value);
  // @@protoc_insertion_point(field_set_allocated:switchmodule.SwitchReading.phaseMMTN)
}

// .commonmodule.ReadingMMTR readingMMTR = 4;
inline bool SwitchReading::has_readingmmtr() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.readingmmtr_ != nullptr);
  return value;
}
inline const ::commonmodule::ReadingMMTR& SwitchReading::_internal_readingmmtr() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::ReadingMMTR* p = _impl_.readingmmtr_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::ReadingMMTR&>(::commonmodule::_ReadingMMTR_default_instance_);
}
inline const ::commonmodule::ReadingMMTR& SwitchReading::readingmmtr() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:switchmodule.SwitchReading.readingMMTR)
  return _internal_readingmmtr();
}
inline void SwitchReading::unsafe_arena_set_allocated_readingmmtr(
    ::commonmodule::ReadingMMTR* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.readingmmtr_);
  }
  _impl_.readingmmtr_ = reinterpret_cast<::commonmodule::ReadingMMTR*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:switchmodule.SwitchReading.readingMMTR)
}
inline ::commonmodule::ReadingMMTR* PROTOBUF_NULLABLE SwitchReading::release_readingmmtr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::commonmodule::ReadingMMTR* released = _impl_.readingmmtr_;
  _impl_.readingmmtr_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::ReadingMMTR* PROTOBUF_NULLABLE SwitchReading::unsafe_arena_release_readingmmtr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:switchmodule.SwitchReading.readingMMTR)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::commonmodule::ReadingMMTR* temp = _impl_.readingmmtr_;
  _impl_.readingmmtr_ = nullptr;
  return temp;
}
inline ::commonmodule::ReadingMMTR* PROTOBUF_NONNULL SwitchReading::_internal_mutable_readingmmtr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.readingmmtr_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::ReadingMMTR>(GetArena());
    _impl_.readingmmtr_ = reinterpret_cast<::commonmodule::ReadingMMTR*>(p);
  }
  return _impl_.readingmmtr_;
}
inline ::commonmodule::ReadingMMTR* PROTOBUF_NONNULL SwitchReading::mutable_readingmmtr()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::commonmodule::ReadingMMTR* _msg = _internal_mutable_readingmmtr();
  // @@protoc_insertion_point(field_mutable:switchmodule.SwitchReading.readingMMTR)
  return _msg;
}
inline void SwitchReading::set_allocated_readingmmtr(::commonmodule::ReadingMMTR* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.readingmmtr_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.readingmmtr_ = reinterpret_cast<::commonmodule::ReadingMMTR*>(value);
  // @@protoc_insertion_point(field_set_allocated:switchmodule.SwitchReading.readingMMTR)
}

// .commonmodule.ReadingMMXU readingMMXU = 5;
inline bool SwitchReading::has_readingmmxu() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.readingmmxu_ != nullptr);
  return value;
}
inline const ::commonmodule::ReadingMMXU& SwitchReading::_internal_readingmmxu() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::ReadingMMXU* p = _impl_.readingmmxu_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::ReadingMMXU&>(::commonmodule::_ReadingMMXU_default_instance_);
}
inline const ::commonmodule::ReadingMMXU& SwitchReading::readingmmxu() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:switchmodule.SwitchReading.readingMMXU)
  return _internal_readingmmxu();
}
inline void SwitchReading::unsafe_arena_set_allocated_readingmmxu(
    ::commonmodule::ReadingMMXU* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.readingmmxu_);
  }
  _impl_.readingmmxu_ = reinterpret_cast<::commonmodule::ReadingMMXU*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:switchmodule.SwitchReading.readingMMXU)
}
inline ::commonmodule::ReadingMMXU* PROTOBUF_NULLABLE SwitchReading::release_readingmmxu() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::commonmodule::ReadingMMXU* released = _impl_.readingmmxu_;
  _impl_.readingmmxu_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::ReadingMMXU* PROTOBUF_NULLABLE SwitchReading::unsafe_arena_release_readingmmxu() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:switchmodule.SwitchReading.readingMMXU)

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::commonmodule::ReadingMMXU* temp = _impl_.readingmmxu_;
  _impl_.readingmmxu_ = nullptr;
  return temp;
}
inline ::commonmodule::ReadingMMXU* PROTOBUF_NONNULL SwitchReading::_internal_mutable_readingmmxu() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.readingmmxu_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::ReadingMMXU>(GetArena());
    _impl_.readingmmxu_ = reinterpret_cast<::commonmodule::ReadingMMXU*>(p);
  }
  return _impl_.readingmmxu_;
}
inline ::commonmodule::ReadingMMXU* PROTOBUF_NONNULL SwitchReading::mutable_readingmmxu()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000010u;
  ::commonmodule::ReadingMMXU* _msg = _internal_mutable_readingmmxu();
  // @@protoc_insertion_point(field_mutable:switchmodule.SwitchReading.readingMMXU)
  return _msg;
}
inline void SwitchReading::set_allocated_readingmmxu(::commonmodule::ReadingMMXU* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.readingmmxu_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }

  _impl_.readingmmxu_ = reinterpret_cast<::commonmodule::ReadingMMXU*>(value);
  // @@protoc_insertion_point(field_set_allocated:switchmodule.SwitchReading.readingMMXU)
}

// .commonmodule.ReadingMMDC readingMMDC = 6;
inline bool SwitchReading::has_readingmmdc() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.readingmmdc_ != nullptr);
  return value;
}
inline const ::commonmodule::ReadingMMDC& SwitchReading::_internal_readingmmdc() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::ReadingMMDC* p = _impl_.readingmmdc_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::ReadingMMDC&>(::commonmodule::_ReadingMMDC_default_instance_);
}
inline const ::commonmodule::ReadingMMDC& SwitchReading::readingmmdc() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:switchmodule.SwitchReading.readingMMDC)
  return _internal_readingmmdc();
}
inline void SwitchReading::unsafe_arena_set_allocated_readingmmdc(
    ::commonmodule::ReadingMMDC* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.readingmmdc_);
  }
  _impl_.readingmmdc_ = reinterpret_cast<::commonmodule::ReadingMMDC*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:switchmodule.SwitchReading.readingMMDC)
}
inline ::commonmodule::ReadingMMDC* PROTOBUF_NULLABLE SwitchReading::release_readingmmdc() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::commonmodule::ReadingMMDC* released = _impl_.readingmmdc_;
  _impl_.readingmmdc_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::ReadingMMDC* PROTOBUF_NULLABLE SwitchReading::unsafe_arena_release_readingmmdc() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:switchmodule.SwitchReading.readingMMDC)

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::commonmodule::ReadingMMDC* temp = _impl_.readingmmdc_;
  _impl_.readingmmdc_ = nullptr;
  return temp;
}
inline ::commonmodule::ReadingMMDC* PROTOBUF_NONNULL SwitchReading::_internal_mutable_readingmmdc() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.readingmmdc_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::ReadingMMDC>(GetArena());
    _impl_.readingmmdc_ = reinterpret_cast<::commonmodule::ReadingMMDC*>(p);
  }
  return _impl_.readingmmdc_;
}
inline ::commonmodule::ReadingMMDC* PROTOBUF_NONNULL SwitchReading::mutable_readingmmdc()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000020u;
  ::commonmodule::ReadingMMDC* _msg = _internal_mutable_readingmmdc();
  // @@protoc_insertion_point(field_mutable:switchmodule.SwitchReading.readingMMDC)
  return _msg;
}
inline void SwitchReading::set_allocated_readingmmdc(::commonmodule::ReadingMMDC* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.readingmmdc_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }

  _impl_.readingmmdc_ = reinterpret_cast<::commonmodule::ReadingMMDC*>(value);
  // @@protoc_insertion_point(field_set_allocated:switchmodule.SwitchReading.readingMMDC)
}

// -------------------------------------------------------------------

// SwitchReadingProfile

// .commonmodule.ReadingMessageInfo readingMessageInfo = 1 [(.uml.option_parent_message) = true];
inline bool SwitchReadingProfile::has_readingmessageinfo() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.readingmessageinfo_ != nullptr);
  return value;
}
inline const ::commonmodule::ReadingMessageInfo& SwitchReadingProfile::_internal_readingmessageinfo() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::ReadingMessageInfo* p = _impl_.readingmessageinfo_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::ReadingMessageInfo&>(::commonmodule::_ReadingMessageInfo_default_instance_);
}
inline const ::commonmodule::ReadingMessageInfo& SwitchReadingProfile::readingmessageinfo() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:switchmodule.SwitchReadingProfile.readingMessageInfo)
  return _internal_readingmessageinfo();
}
inline void SwitchReadingProfile::unsafe_arena_set_allocated_readingmessageinfo(
    ::commonmodule::ReadingMessageInfo* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.readingmessageinfo_);
  }
  _impl_.readingmessageinfo_ = reinterpret_cast<::commonmodule::ReadingMessageInfo*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:switchmodule.SwitchReadingProfile.readingMessageInfo)
}
inline ::commonmodule::ReadingMessageInfo* PROTOBUF_NULLABLE SwitchReadingProfile::release_readingmessageinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::commonmodule::ReadingMessageInfo* released = _impl_.readingmessageinfo_;
  _impl_.readingmessageinfo_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::ReadingMessageInfo* PROTOBUF_NULLABLE SwitchReadingProfile::unsafe_arena_release_readingmessageinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:switchmodule.SwitchReadingProfile.readingMessageInfo)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::commonmodule::ReadingMessageInfo* temp = _impl_.readingmessageinfo_;
  _impl_.readingmessageinfo_ = nullptr;
  return temp;
}
inline ::commonmodule::ReadingMessageInfo* PROTOBUF_NONNULL SwitchReadingProfile::_internal_mutable_readingmessageinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.readingmessageinfo_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::ReadingMessageInfo>(GetArena());
    _impl_.readingmessageinfo_ = reinterpret_cast<::commonmodule::ReadingMessageInfo*>(p);
  }
  return _impl_.readingmessageinfo_;
}
inline ::commonmodule::ReadingMessageInfo* PROTOBUF_NONNULL SwitchReadingProfile::mutable_readingmessageinfo()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::commonmodule::ReadingMessageInfo* _msg = _internal_mutable_readingmessageinfo();
  // @@protoc_insertion_point(field_mutable:switchmodule.SwitchReadingProfile.readingMessageInfo)
  return _msg;
}
inline void SwitchReadingProfile::set_allocated_readingmessageinfo(::commonmodule::ReadingMessageInfo* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.readingmessageinfo_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.readingmessageinfo_ = reinterpret_cast<::commonmodule::ReadingMessageInfo*>(value);
  // @@protoc_insertion_point(field_set_allocated:switchmodule.SwitchReadingProfile.readingMessageInfo)
}

// .switchmodule.ProtectedSwitch protectedSwitch = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
inline bool SwitchReadingProfile::has_protectedswitch() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.protectedswitch_ != nullptr);
  return value;
}
inline void SwitchReadingProfile::clear_protectedswitch() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.protectedswitch_ != nullptr) _impl_.protectedswitch_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::switchmodule::ProtectedSwitch& SwitchReadingProfile::_internal_protectedswitch() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::switchmodule::ProtectedSwitch* p = _impl_.protectedswitch_;
  return p != nullptr ? *p : reinterpret_cast<const ::switchmodule::ProtectedSwitch&>(::switchmodule::_ProtectedSwitch_default_instance_);
}
inline const ::switchmodule::ProtectedSwitch& SwitchReadingProfile::protectedswitch() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:switchmodule.SwitchReadingProfile.protectedSwitch)
  return _internal_protectedswitch();
}
inline void SwitchReadingProfile::unsafe_arena_set_allocated_protectedswitch(
    ::switchmodule::ProtectedSwitch* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.protectedswitch_);
  }
  _impl_.protectedswitch_ = reinterpret_cast<::switchmodule::ProtectedSwitch*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:switchmodule.SwitchReadingProfile.protectedSwitch)
}
inline ::switchmodule::ProtectedSwitch* PROTOBUF_NULLABLE SwitchReadingProfile::release_protectedswitch() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::switchmodule::ProtectedSwitch* released = _impl_.protectedswitch_;
  _impl_.protectedswitch_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::switchmodule::ProtectedSwitch* PROTOBUF_NULLABLE SwitchReadingProfile::unsafe_arena_release_protectedswitch() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:switchmodule.SwitchReadingProfile.protectedSwitch)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::switchmodule::ProtectedSwitch* temp = _impl_.protectedswitch_;
  _impl_.protectedswitch_ = nullptr;
  return temp;
}
inline ::switchmodule::ProtectedSwitch* PROTOBUF_NONNULL SwitchReadingProfile::_internal_mutable_protectedswitch() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.protectedswitch_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::switchmodule::ProtectedSwitch>(GetArena());
    _impl_.protectedswitch_ = reinterpret_cast<::switchmodule::ProtectedSwitch*>(p);
  }
  return _impl_.protectedswitch_;
}
inline ::switchmodule::ProtectedSwitch* PROTOBUF_NONNULL SwitchReadingProfile::mutable_protectedswitch()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::switchmodule::ProtectedSwitch* _msg = _internal_mutable_protectedswitch();
  // @@protoc_insertion_point(field_mutable:switchmodule.SwitchReadingProfile.protectedSwitch)
  return _msg;
}
inline void SwitchReadingProfile::set_allocated_protectedswitch(::switchmodule::ProtectedSwitch* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.protectedswitch_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.protectedswitch_ = reinterpret_cast<::switchmodule::ProtectedSwitch*>(value);
  // @@protoc_insertion_point(field_set_allocated:switchmodule.SwitchReadingProfile.protectedSwitch)
}

// repeated .switchmodule.SwitchReading switchReading = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1, (.uml.option_multiplicity_max) = 2];
inline int SwitchReadingProfile::_internal_switchreading_size() const {
  return _internal_switchreading().size();
}
inline int SwitchReadingProfile::switchreading_size() const {
  return _internal_switchreading_size();
}
inline void SwitchReadingProfile::clear_switchreading() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.switchreading_.Clear();
}
inline ::switchmodule::SwitchReading* PROTOBUF_NONNULL SwitchReadingProfile::mutable_switchreading(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:switchmodule.SwitchReadingProfile.switchReading)
  return _internal_mutable_switchreading()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::switchmodule::SwitchReading>* PROTOBUF_NONNULL SwitchReadingProfile::mutable_switchreading()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:switchmodule.SwitchReadingProfile.switchReading)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_switchreading();
}
inline const ::switchmodule::SwitchReading& SwitchReadingProfile::switchreading(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:switchmodule.SwitchReadingProfile.switchReading)
  return _internal_switchreading().Get(index);
}
inline ::switchmodule::SwitchReading* PROTOBUF_NONNULL SwitchReadingProfile::add_switchreading()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::switchmodule::SwitchReading* _add = _internal_mutable_switchreading()->Add();
  // @@protoc_insertion_point(field_add:switchmodule.SwitchReadingProfile.switchReading)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::switchmodule::SwitchReading>& SwitchReadingProfile::switchreading() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:switchmodule.SwitchReadingProfile.switchReading)
  return _internal_switchreading();
}
inline const ::google::protobuf::RepeatedPtrField<::switchmodule::SwitchReading>&
SwitchReadingProfile::_internal_switchreading() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.switchreading_;
}
inline ::google::protobuf::RepeatedPtrField<::switchmodule::SwitchReading>* PROTOBUF_NONNULL
SwitchReadingProfile::_internal_mutable_switchreading() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.switchreading_;
}

// -------------------------------------------------------------------

// SwitchStatusXSWI

// .commonmodule.LogicalNodeForEventAndStatus logicalNodeForEventAndStatus = 1 [(.uml.option_parent_message) = true];
inline bool SwitchStatusXSWI::has_logicalnodeforeventandstatus() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.logicalnodeforeventandstatus_ != nullptr);
  return value;
}
inline const ::commonmodule::LogicalNodeForEventAndStatus& SwitchStatusXSWI::_internal_logicalnodeforeventandstatus() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::LogicalNodeForEventAndStatus* p = _impl_.logicalnodeforeventandstatus_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::LogicalNodeForEventAndStatus&>(::commonmodule::_LogicalNodeForEventAndStatus_default_instance_);
}
inline const ::commonmodule::LogicalNodeForEventAndStatus& SwitchStatusXSWI::logicalnodeforeventandstatus() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:switchmodule.SwitchStatusXSWI.logicalNodeForEventAndStatus)
  return _internal_logicalnodeforeventandstatus();
}
inline void SwitchStatusXSWI::unsafe_arena_set_allocated_logicalnodeforeventandstatus(
    ::commonmodule::LogicalNodeForEventAndStatus* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.logicalnodeforeventandstatus_);
  }
  _impl_.logicalnodeforeventandstatus_ = reinterpret_cast<::commonmodule::LogicalNodeForEventAndStatus*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:switchmodule.SwitchStatusXSWI.logicalNodeForEventAndStatus)
}
inline ::commonmodule::LogicalNodeForEventAndStatus* PROTOBUF_NULLABLE SwitchStatusXSWI::release_logicalnodeforeventandstatus() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::commonmodule::LogicalNodeForEventAndStatus* released = _impl_.logicalnodeforeventandstatus_;
  _impl_.logicalnodeforeventandstatus_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::LogicalNodeForEventAndStatus* PROTOBUF_NULLABLE SwitchStatusXSWI::unsafe_arena_release_logicalnodeforeventandstatus() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:switchmodule.SwitchStatusXSWI.logicalNodeForEventAndStatus)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::commonmodule::LogicalNodeForEventAndStatus* temp = _impl_.logicalnodeforeventandstatus_;
  _impl_.logicalnodeforeventandstatus_ = nullptr;
  return temp;
}
inline ::commonmodule::LogicalNodeForEventAndStatus* PROTOBUF_NONNULL SwitchStatusXSWI::_internal_mutable_logicalnodeforeventandstatus() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.logicalnodeforeventandstatus_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::LogicalNodeForEventAndStatus>(GetArena());
    _impl_.logicalnodeforeventandstatus_ = reinterpret_cast<::commonmodule::LogicalNodeForEventAndStatus*>(p);
  }
  return _impl_.logicalnodeforeventandstatus_;
}
inline ::commonmodule::LogicalNodeForEventAndStatus* PROTOBUF_NONNULL SwitchStatusXSWI::mutable_logicalnodeforeventandstatus()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::commonmodule::LogicalNodeForEventAndStatus* _msg = _internal_mutable_logicalnodeforeventandstatus();
  // @@protoc_insertion_point(field_mutable:switchmodule.SwitchStatusXSWI.logicalNodeForEventAndStatus)
  return _msg;
}
inline void SwitchStatusXSWI::set_allocated_logicalnodeforeventandstatus(::commonmodule::LogicalNodeForEventAndStatus* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.logicalnodeforeventandstatus_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.logicalnodeforeventandstatus_ = reinterpret_cast<::commonmodule::LogicalNodeForEventAndStatus*>(value);
  // @@protoc_insertion_point(field_set_allocated:switchmodule.SwitchStatusXSWI.logicalNodeForEventAndStatus)
}

// .commonmodule.ENS_DynamicTestKind DynamicTest = 2;
inline bool SwitchStatusXSWI::has_dynamictest() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.dynamictest_ != nullptr);
  return value;
}
inline const ::commonmodule::ENS_DynamicTestKind& SwitchStatusXSWI::_internal_dynamictest() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::ENS_DynamicTestKind* p = _impl_.dynamictest_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::ENS_DynamicTestKind&>(::commonmodule::_ENS_DynamicTestKind_default_instance_);
}
inline const ::commonmodule::ENS_DynamicTestKind& SwitchStatusXSWI::dynamictest() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:switchmodule.SwitchStatusXSWI.DynamicTest)
  return _internal_dynamictest();
}
inline void SwitchStatusXSWI::unsafe_arena_set_allocated_dynamictest(
    ::commonmodule::ENS_DynamicTestKind* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.dynamictest_);
  }
  _impl_.dynamictest_ = reinterpret_cast<::commonmodule::ENS_DynamicTestKind*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:switchmodule.SwitchStatusXSWI.DynamicTest)
}
inline ::commonmodule::ENS_DynamicTestKind* PROTOBUF_NULLABLE SwitchStatusXSWI::release_dynamictest() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::commonmodule::ENS_DynamicTestKind* released = _impl_.dynamictest_;
  _impl_.dynamictest_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::ENS_DynamicTestKind* PROTOBUF_NULLABLE SwitchStatusXSWI::unsafe_arena_release_dynamictest() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:switchmodule.SwitchStatusXSWI.DynamicTest)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::commonmodule::ENS_DynamicTestKind* temp = _impl_.dynamictest_;
  _impl_.dynamictest_ = nullptr;
  return temp;
}
inline ::commonmodule::ENS_DynamicTestKind* PROTOBUF_NONNULL SwitchStatusXSWI::_internal_mutable_dynamictest() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.dynamictest_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::ENS_DynamicTestKind>(GetArena());
    _impl_.dynamictest_ = reinterpret_cast<::commonmodule::ENS_DynamicTestKind*>(p);
  }
  return _impl_.dynamictest_;
}
inline ::commonmodule::ENS_DynamicTestKind* PROTOBUF_NONNULL SwitchStatusXSWI::mutable_dynamictest()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::commonmodule::ENS_DynamicTestKind* _msg = _internal_mutable_dynamictest();
  // @@protoc_insertion_point(field_mutable:switchmodule.SwitchStatusXSWI.DynamicTest)
  return _msg;
}
inline void SwitchStatusXSWI::set_allocated_dynamictest(::commonmodule::ENS_DynamicTestKind* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.dynamictest_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.dynamictest_ = reinterpret_cast<::commonmodule::ENS_DynamicTestKind*>(value);
  // @@protoc_insertion_point(field_set_allocated:switchmodule.SwitchStatusXSWI.DynamicTest)
}

// .commonmodule.PhaseDPS Pos = 4;
inline bool SwitchStatusXSWI::has_pos() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pos_ != nullptr);
  return value;
}
inline const ::commonmodule::PhaseDPS& SwitchStatusXSWI::_internal_pos() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::PhaseDPS* p = _impl_.pos_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::PhaseDPS&>(::commonmodule::_PhaseDPS_default_instance_);
}
inline const ::commonmodule::PhaseDPS& SwitchStatusXSWI::pos() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:switchmodule.SwitchStatusXSWI.Pos)
  return _internal_pos();
}
inline void SwitchStatusXSWI::unsafe_arena_set_allocated_pos(
    ::commonmodule::PhaseDPS* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pos_);
  }
  _impl_.pos_ = reinterpret_cast<::commonmodule::PhaseDPS*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:switchmodule.SwitchStatusXSWI.Pos)
}
inline ::commonmodule::PhaseDPS* PROTOBUF_NULLABLE SwitchStatusXSWI::release_pos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::commonmodule::PhaseDPS* released = _impl_.pos_;
  _impl_.pos_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::PhaseDPS* PROTOBUF_NULLABLE SwitchStatusXSWI::unsafe_arena_release_pos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:switchmodule.SwitchStatusXSWI.Pos)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::commonmodule::PhaseDPS* temp = _impl_.pos_;
  _impl_.pos_ = nullptr;
  return temp;
}
inline ::commonmodule::PhaseDPS* PROTOBUF_NONNULL SwitchStatusXSWI::_internal_mutable_pos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pos_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::PhaseDPS>(GetArena());
    _impl_.pos_ = reinterpret_cast<::commonmodule::PhaseDPS*>(p);
  }
  return _impl_.pos_;
}
inline ::commonmodule::PhaseDPS* PROTOBUF_NONNULL SwitchStatusXSWI::mutable_pos()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::commonmodule::PhaseDPS* _msg = _internal_mutable_pos();
  // @@protoc_insertion_point(field_mutable:switchmodule.SwitchStatusXSWI.Pos)
  return _msg;
}
inline void SwitchStatusXSWI::set_allocated_pos(::commonmodule::PhaseDPS* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pos_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.pos_ = reinterpret_cast<::commonmodule::PhaseDPS*>(value);
  // @@protoc_insertion_point(field_set_allocated:switchmodule.SwitchStatusXSWI.Pos)
}

// .commonmodule.PhaseSPS ProtectionPickup = 5 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
inline bool SwitchStatusXSWI::has_protectionpickup() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.protectionpickup_ != nullptr);
  return value;
}
inline const ::commonmodule::PhaseSPS& SwitchStatusXSWI::_internal_protectionpickup() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::PhaseSPS* p = _impl_.protectionpickup_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::PhaseSPS&>(::commonmodule::_PhaseSPS_default_instance_);
}
inline const ::commonmodule::PhaseSPS& SwitchStatusXSWI::protectionpickup() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:switchmodule.SwitchStatusXSWI.ProtectionPickup)
  return _internal_protectionpickup();
}
inline void SwitchStatusXSWI::unsafe_arena_set_allocated_protectionpickup(
    ::commonmodule::PhaseSPS* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.protectionpickup_);
  }
  _impl_.protectionpickup_ = reinterpret_cast<::commonmodule::PhaseSPS*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:switchmodule.SwitchStatusXSWI.ProtectionPickup)
}
inline ::commonmodule::PhaseSPS* PROTOBUF_NULLABLE SwitchStatusXSWI::release_protectionpickup() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::commonmodule::PhaseSPS* released = _impl_.protectionpickup_;
  _impl_.protectionpickup_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::PhaseSPS* PROTOBUF_NULLABLE SwitchStatusXSWI::unsafe_arena_release_protectionpickup() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:switchmodule.SwitchStatusXSWI.ProtectionPickup)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::commonmodule::PhaseSPS* temp = _impl_.protectionpickup_;
  _impl_.protectionpickup_ = nullptr;
  return temp;
}
inline ::commonmodule::PhaseSPS* PROTOBUF_NONNULL SwitchStatusXSWI::_internal_mutable_protectionpickup() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.protectionpickup_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::PhaseSPS>(GetArena());
    _impl_.protectionpickup_ = reinterpret_cast<::commonmodule::PhaseSPS*>(p);
  }
  return _impl_.protectionpickup_;
}
inline ::commonmodule::PhaseSPS* PROTOBUF_NONNULL SwitchStatusXSWI::mutable_protectionpickup()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::commonmodule::PhaseSPS* _msg = _internal_mutable_protectionpickup();
  // @@protoc_insertion_point(field_mutable:switchmodule.SwitchStatusXSWI.ProtectionPickup)
  return _msg;
}
inline void SwitchStatusXSWI::set_allocated_protectionpickup(::commonmodule::PhaseSPS* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.protectionpickup_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.protectionpickup_ = reinterpret_cast<::commonmodule::PhaseSPS*>(value);
  // @@protoc_insertion_point(field_set_allocated:switchmodule.SwitchStatusXSWI.ProtectionPickup)
}

// -------------------------------------------------------------------

// SwitchStatus

// .commonmodule.StatusValue statusValue = 1 [(.uml.option_parent_message) = true];
inline bool SwitchStatus::has_statusvalue() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.statusvalue_ != nullptr);
  return value;
}
inline const ::commonmodule::StatusValue& SwitchStatus::_internal_statusvalue() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::StatusValue* p = _impl_.statusvalue_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::StatusValue&>(::commonmodule::_StatusValue_default_instance_);
}
inline const ::commonmodule::StatusValue& SwitchStatus::statusvalue() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:switchmodule.SwitchStatus.statusValue)
  return _internal_statusvalue();
}
inline void SwitchStatus::unsafe_arena_set_allocated_statusvalue(
    ::commonmodule::StatusValue* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.statusvalue_);
  }
  _impl_.statusvalue_ = reinterpret_cast<::commonmodule::StatusValue*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:switchmodule.SwitchStatus.statusValue)
}
inline ::commonmodule::StatusValue* PROTOBUF_NULLABLE SwitchStatus::release_statusvalue() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::commonmodule::StatusValue* released = _impl_.statusvalue_;
  _impl_.statusvalue_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::StatusValue* PROTOBUF_NULLABLE SwitchStatus::unsafe_arena_release_statusvalue() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:switchmodule.SwitchStatus.statusValue)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::commonmodule::StatusValue* temp = _impl_.statusvalue_;
  _impl_.statusvalue_ = nullptr;
  return temp;
}
inline ::commonmodule::StatusValue* PROTOBUF_NONNULL SwitchStatus::_internal_mutable_statusvalue() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.statusvalue_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::StatusValue>(GetArena());
    _impl_.statusvalue_ = reinterpret_cast<::commonmodule::StatusValue*>(p);
  }
  return _impl_.statusvalue_;
}
inline ::commonmodule::StatusValue* PROTOBUF_NONNULL SwitchStatus::mutable_statusvalue()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::commonmodule::StatusValue* _msg = _internal_mutable_statusvalue();
  // @@protoc_insertion_point(field_mutable:switchmodule.SwitchStatus.statusValue)
  return _msg;
}
inline void SwitchStatus::set_allocated_statusvalue(::commonmodule::StatusValue* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.statusvalue_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.statusvalue_ = reinterpret_cast<::commonmodule::StatusValue*>(value);
  // @@protoc_insertion_point(field_set_allocated:switchmodule.SwitchStatus.statusValue)
}

// .switchmodule.SwitchStatusXSWI switchStatusXSWI = 2;
inline bool SwitchStatus::has_switchstatusxswi() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.switchstatusxswi_ != nullptr);
  return value;
}
inline void SwitchStatus::clear_switchstatusxswi() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.switchstatusxswi_ != nullptr) _impl_.switchstatusxswi_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::switchmodule::SwitchStatusXSWI& SwitchStatus::_internal_switchstatusxswi() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::switchmodule::SwitchStatusXSWI* p = _impl_.switchstatusxswi_;
  return p != nullptr ? *p : reinterpret_cast<const ::switchmodule::SwitchStatusXSWI&>(::switchmodule::_SwitchStatusXSWI_default_instance_);
}
inline const ::switchmodule::SwitchStatusXSWI& SwitchStatus::switchstatusxswi() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:switchmodule.SwitchStatus.switchStatusXSWI)
  return _internal_switchstatusxswi();
}
inline void SwitchStatus::unsafe_arena_set_allocated_switchstatusxswi(
    ::switchmodule::SwitchStatusXSWI* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.switchstatusxswi_);
  }
  _impl_.switchstatusxswi_ = reinterpret_cast<::switchmodule::SwitchStatusXSWI*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:switchmodule.SwitchStatus.switchStatusXSWI)
}
inline ::switchmodule::SwitchStatusXSWI* PROTOBUF_NULLABLE SwitchStatus::release_switchstatusxswi() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::switchmodule::SwitchStatusXSWI* released = _impl_.switchstatusxswi_;
  _impl_.switchstatusxswi_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::switchmodule::SwitchStatusXSWI* PROTOBUF_NULLABLE SwitchStatus::unsafe_arena_release_switchstatusxswi() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:switchmodule.SwitchStatus.switchStatusXSWI)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::switchmodule::SwitchStatusXSWI* temp = _impl_.switchstatusxswi_;
  _impl_.switchstatusxswi_ = nullptr;
  return temp;
}
inline ::switchmodule::SwitchStatusXSWI* PROTOBUF_NONNULL SwitchStatus::_internal_mutable_switchstatusxswi() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.switchstatusxswi_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::switchmodule::SwitchStatusXSWI>(GetArena());
    _impl_.switchstatusxswi_ = reinterpret_cast<::switchmodule::SwitchStatusXSWI*>(p);
  }
  return _impl_.switchstatusxswi_;
}
inline ::switchmodule::SwitchStatusXSWI* PROTOBUF_NONNULL SwitchStatus::mutable_switchstatusxswi()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::switchmodule::SwitchStatusXSWI* _msg = _internal_mutable_switchstatusxswi();
  // @@protoc_insertion_point(field_mutable:switchmodule.SwitchStatus.switchStatusXSWI)
  return _msg;
}
inline void SwitchStatus::set_allocated_switchstatusxswi(::switchmodule::SwitchStatusXSWI* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.switchstatusxswi_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.switchstatusxswi_ = reinterpret_cast<::switchmodule::SwitchStatusXSWI*>(value);
  // @@protoc_insertion_point(field_set_allocated:switchmodule.SwitchStatus.switchStatusXSWI)
}

// -------------------------------------------------------------------

// SwitchStatusProfile

// .commonmodule.StatusMessageInfo statusMessageInfo = 1 [(.uml.option_parent_message) = true];
inline bool SwitchStatusProfile::has_statusmessageinfo() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.statusmessageinfo_ != nullptr);
  return value;
}
inline const ::commonmodule::StatusMessageInfo& SwitchStatusProfile::_internal_statusmessageinfo() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::commonmodule::StatusMessageInfo* p = _impl_.statusmessageinfo_;
  return p != nullptr ? *p : reinterpret_cast<const ::commonmodule::StatusMessageInfo&>(::commonmodule::_StatusMessageInfo_default_instance_);
}
inline const ::commonmodule::StatusMessageInfo& SwitchStatusProfile::statusmessageinfo() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:switchmodule.SwitchStatusProfile.statusMessageInfo)
  return _internal_statusmessageinfo();
}
inline void SwitchStatusProfile::unsafe_arena_set_allocated_statusmessageinfo(
    ::commonmodule::StatusMessageInfo* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.statusmessageinfo_);
  }
  _impl_.statusmessageinfo_ = reinterpret_cast<::commonmodule::StatusMessageInfo*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:switchmodule.SwitchStatusProfile.statusMessageInfo)
}
inline ::commonmodule::StatusMessageInfo* PROTOBUF_NULLABLE SwitchStatusProfile::release_statusmessageinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::commonmodule::StatusMessageInfo* released = _impl_.statusmessageinfo_;
  _impl_.statusmessageinfo_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::commonmodule::StatusMessageInfo* PROTOBUF_NULLABLE SwitchStatusProfile::unsafe_arena_release_statusmessageinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:switchmodule.SwitchStatusProfile.statusMessageInfo)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::commonmodule::StatusMessageInfo* temp = _impl_.statusmessageinfo_;
  _impl_.statusmessageinfo_ = nullptr;
  return temp;
}
inline ::commonmodule::StatusMessageInfo* PROTOBUF_NONNULL SwitchStatusProfile::_internal_mutable_statusmessageinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.statusmessageinfo_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::commonmodule::StatusMessageInfo>(GetArena());
    _impl_.statusmessageinfo_ = reinterpret_cast<::commonmodule::StatusMessageInfo*>(p);
  }
  return _impl_.statusmessageinfo_;
}
inline ::commonmodule::StatusMessageInfo* PROTOBUF_NONNULL SwitchStatusProfile::mutable_statusmessageinfo()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::commonmodule::StatusMessageInfo* _msg = _internal_mutable_statusmessageinfo();
  // @@protoc_insertion_point(field_mutable:switchmodule.SwitchStatusProfile.statusMessageInfo)
  return _msg;
}
inline void SwitchStatusProfile::set_allocated_statusmessageinfo(::commonmodule::StatusMessageInfo* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.statusmessageinfo_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.statusmessageinfo_ = reinterpret_cast<::commonmodule::StatusMessageInfo*>(value);
  // @@protoc_insertion_point(field_set_allocated:switchmodule.SwitchStatusProfile.statusMessageInfo)
}

// .switchmodule.ProtectedSwitch protectedSwitch = 2 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
inline bool SwitchStatusProfile::has_protectedswitch() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.protectedswitch_ != nullptr);
  return value;
}
inline void SwitchStatusProfile::clear_protectedswitch() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.protectedswitch_ != nullptr) _impl_.protectedswitch_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::switchmodule::ProtectedSwitch& SwitchStatusProfile::_internal_protectedswitch() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::switchmodule::ProtectedSwitch* p = _impl_.protectedswitch_;
  return p != nullptr ? *p : reinterpret_cast<const ::switchmodule::ProtectedSwitch&>(::switchmodule::_ProtectedSwitch_default_instance_);
}
inline const ::switchmodule::ProtectedSwitch& SwitchStatusProfile::protectedswitch() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:switchmodule.SwitchStatusProfile.protectedSwitch)
  return _internal_protectedswitch();
}
inline void SwitchStatusProfile::unsafe_arena_set_allocated_protectedswitch(
    ::switchmodule::ProtectedSwitch* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.protectedswitch_);
  }
  _impl_.protectedswitch_ = reinterpret_cast<::switchmodule::ProtectedSwitch*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:switchmodule.SwitchStatusProfile.protectedSwitch)
}
inline ::switchmodule::ProtectedSwitch* PROTOBUF_NULLABLE SwitchStatusProfile::release_protectedswitch() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::switchmodule::ProtectedSwitch* released = _impl_.protectedswitch_;
  _impl_.protectedswitch_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::switchmodule::ProtectedSwitch* PROTOBUF_NULLABLE SwitchStatusProfile::unsafe_arena_release_protectedswitch() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:switchmodule.SwitchStatusProfile.protectedSwitch)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::switchmodule::ProtectedSwitch* temp = _impl_.protectedswitch_;
  _impl_.protectedswitch_ = nullptr;
  return temp;
}
inline ::switchmodule::ProtectedSwitch* PROTOBUF_NONNULL SwitchStatusProfile::_internal_mutable_protectedswitch() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.protectedswitch_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::switchmodule::ProtectedSwitch>(GetArena());
    _impl_.protectedswitch_ = reinterpret_cast<::switchmodule::ProtectedSwitch*>(p);
  }
  return _impl_.protectedswitch_;
}
inline ::switchmodule::ProtectedSwitch* PROTOBUF_NONNULL SwitchStatusProfile::mutable_protectedswitch()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::switchmodule::ProtectedSwitch* _msg = _internal_mutable_protectedswitch();
  // @@protoc_insertion_point(field_mutable:switchmodule.SwitchStatusProfile.protectedSwitch)
  return _msg;
}
inline void SwitchStatusProfile::set_allocated_protectedswitch(::switchmodule::ProtectedSwitch* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.protectedswitch_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.protectedswitch_ = reinterpret_cast<::switchmodule::ProtectedSwitch*>(value);
  // @@protoc_insertion_point(field_set_allocated:switchmodule.SwitchStatusProfile.protectedSwitch)
}

// .switchmodule.SwitchStatus switchStatus = 3 [(.uml.option_required_field) = true, (.uml.option_multiplicity_min) = 1];
inline bool SwitchStatusProfile::has_switchstatus() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.switchstatus_ != nullptr);
  return value;
}
inline void SwitchStatusProfile::clear_switchstatus() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.switchstatus_ != nullptr) _impl_.switchstatus_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::switchmodule::SwitchStatus& SwitchStatusProfile::_internal_switchstatus() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::switchmodule::SwitchStatus* p = _impl_.switchstatus_;
  return p != nullptr ? *p : reinterpret_cast<const ::switchmodule::SwitchStatus&>(::switchmodule::_SwitchStatus_default_instance_);
}
inline const ::switchmodule::SwitchStatus& SwitchStatusProfile::switchstatus() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:switchmodule.SwitchStatusProfile.switchStatus)
  return _internal_switchstatus();
}
inline void SwitchStatusProfile::unsafe_arena_set_allocated_switchstatus(
    ::switchmodule::SwitchStatus* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.switchstatus_);
  }
  _impl_.switchstatus_ = reinterpret_cast<::switchmodule::SwitchStatus*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:switchmodule.SwitchStatusProfile.switchStatus)
}
inline ::switchmodule::SwitchStatus* PROTOBUF_NULLABLE SwitchStatusProfile::release_switchstatus() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::switchmodule::SwitchStatus* released = _impl_.switchstatus_;
  _impl_.switchstatus_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::switchmodule::SwitchStatus* PROTOBUF_NULLABLE SwitchStatusProfile::unsafe_arena_release_switchstatus() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:switchmodule.SwitchStatusProfile.switchStatus)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::switchmodule::SwitchStatus* temp = _impl_.switchstatus_;
  _impl_.switchstatus_ = nullptr;
  return temp;
}
inline ::switchmodule::SwitchStatus* PROTOBUF_NONNULL SwitchStatusProfile::_internal_mutable_switchstatus() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.switchstatus_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::switchmodule::SwitchStatus>(GetArena());
    _impl_.switchstatus_ = reinterpret_cast<::switchmodule::SwitchStatus*>(p);
  }
  return _impl_.switchstatus_;
}
inline ::switchmodule::SwitchStatus* PROTOBUF_NONNULL SwitchStatusProfile::mutable_switchstatus()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::switchmodule::SwitchStatus* _msg = _internal_mutable_switchstatus();
  // @@protoc_insertion_point(field_mutable:switchmodule.SwitchStatusProfile.switchStatus)
  return _msg;
}
inline void SwitchStatusProfile::set_allocated_switchstatus(::switchmodule::SwitchStatus* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.switchstatus_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.switchstatus_ = reinterpret_cast<::switchmodule::SwitchStatus*>(value);
  // @@protoc_insertion_point(field_set_allocated:switchmodule.SwitchStatusProfile.switchStatus)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace switchmodule


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // switchmodule_2fswitchmodule_2eproto_2epb_2eh
